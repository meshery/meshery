id: 00000000-0000-0000-0000-000000000000
name: mattermost-operator-1.0.4.tgz
schemaVersion: designs.meshery.io/v1beta1
version: 0.0.1
components:
  - id: 98a96287-d2a0-4eb2-a3ba-1a0b86e86279
    schemaVersion: components.meshery.io/v1beta1
    version: v1.0.0
    displayName: clusterinstallations.mattermost.com
    description: ""
    format: ""
    model:
      id: b3f5bc0d-30f7-607d-6c73-784ddde6cad8
      schemaVersion: models.meshery.io/v1beta1
      version: v1.0.0
      name: kubernetes
      displayName: Kubernetes
      status: enabled
      registrant:
        id: 5bc80e3c-5d43-9eb4-d16c-78a2769247a6
        name: Github
        credential_id: 00000000-0000-0000-0000-000000000000
        type: registry
        sub_type: ""
        kind: github
        status: registered
        user_id: 00000000-0000-0000-0000-000000000000
        created_at: "2025-10-08T09:10:27.395320301Z"
        updated_at: "2025-10-08T09:10:27.395320301Z"
        deleted_at: "0001-01-01T00:00:00Z"
        schemaVersion: ""
      connection_id: 5bc80e3c-5d43-9eb4-d16c-78a2769247a6
      category:
        id: 9ca27d0d-66ce-42a9-8c85-6236563f2ddb
        name: Orchestration & Management
      subCategory: Scheduling & Orchestration
      metadata:
        isAnnotation: false
        primaryColor: '#326CE5'
        secondaryColor: '#7aa1f0'
        shape: circle
        styleOverrides: ""
        svgColor: ui/public/static/img/meshmodels/kubernetes/color/kubernetes-color.svg
        svgComplete: ""
        svgWhite: ui/public/static/img/meshmodels/kubernetes/white/kubernetes-white.svg
      model:
        version: v1.32.0-alpha.3
      components_count: 0
      relationships_count: 0
      components: null
      relationships: null
    styles:
      primaryColor: '#326CE5'
      secondaryColor: '#7aa1f0'
      shape: circle
      svgColor: ui/public/static/img/meshmodels/kubernetes/color/customresourcedefinition-color.svg
      svgComplete: ""
      svgWhite: ui/public/static/img/meshmodels/kubernetes/white/customresourcedefinition-white.svg
    capabilities: []
    status: enabled
    metadata:
      configurationUISchema: ""
      genealogy: ""
      instanceDetails: null
      isAnnotation: false
      isNamespaced: false
      published: false
      source_uri: git://github.com/kubernetes/kubernetes/master/api/openapi-spec/v3
    configuration:
      metadata:
        annotations:
          controller-gen.kubebuilder.io/version: v0.16.5
        name: clusterinstallations.mattermost.com
      spec:
        group: mattermost.com
        names:
          kind: ClusterInstallation
          listKind: ClusterInstallationList
          plural: clusterinstallations
          singular: clusterinstallation
        scope: Namespaced
        versions:
          - additionalPrinterColumns:
              - description: State of Mattermost
                jsonPath: .status.state
                name: State
                type: string
              - description: Image of Mattermost
                jsonPath: .status.image
                name: Image
                type: string
              - description: Version of Mattermost
                jsonPath: .status.version
                name: Version
                type: string
              - description: Endpoint
                jsonPath: .status.endpoint
                name: Endpoint
                type: string
            name: v1alpha1
            schema:
              openAPIV3Schema:
                description: ClusterInstallation is the Schema for the clusterinstallations API
                properties:
                  apiVersion:
                    description: |-
                      APIVersion defines the versioned schema of this representation of an object.
                      Servers should convert recognized schemas to the latest internal value, and
                      may reject unrecognized values.
                      More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
                    type: string
                  kind:
                    description: |-
                      Kind is a string value representing the REST resource this object represents.
                      Servers may infer this from the endpoint the client submits requests to.
                      Cannot be updated.
                      In CamelCase.
                      More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                    type: string
                  metadata:
                    type: object
                  spec:
                    description: |-
                      Specification of the desired behavior of the Mattermost cluster. More info:
                      https://github.com/kubernetes/community/blob/master/contributors/devel/api-conventions.md#spec-and-status
                    properties:
                      affinity:
                        description: If specified, affinity will define the pod's scheduling constraints
                        properties:
                          nodeAffinity:
                            description: Describes node affinity scheduling rules for the pod.
                            properties:
                              preferredDuringSchedulingIgnoredDuringExecution:
                                description: |-
                                  The scheduler will prefer to schedule pods to nodes that satisfy
                                  the affinity expressions specified by this field, but it may choose
                                  a node that violates one or more of the expressions. The node that is
                                  most preferred is the one with the greatest sum of weights, i.e.
                                  for each node that meets all of the scheduling requirements (resource
                                  request, requiredDuringScheduling affinity expressions, etc.),
                                  compute a sum by iterating through the elements of this field and adding
                                  "weight" to the sum if the node matches the corresponding matchExpressions; the
                                  node(s) with the highest sum are the most preferred.
                                items:
                                  description: |-
                                    An empty preferred scheduling term matches all objects with implicit weight 0
                                    (i.e. it's a no-op). A null preferred scheduling term matches no objects (i.e. is also a no-op).
                                  properties:
                                    preference:
                                      description: A node selector term, associated with the corresponding weight.
                                      properties:
                                        matchExpressions:
                                          description: A list of node selector requirements by node's labels.
                                          items:
                                            description: |-
                                              A node selector requirement is a selector that contains values, a key, and an operator
                                              that relates the key and values.
                                            properties:
                                              key:
                                                description: The label key that the selector applies to.
                                                type: string
                                              operator:
                                                description: |-
                                                  Represents a key's relationship to a set of values.
                                                  Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
                                                type: string
                                              values:
                                                description: |-
                                                  An array of string values. If the operator is In or NotIn,
                                                  the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                  the values array must be empty. If the operator is Gt or Lt, the values
                                                  array must have a single element, which will be interpreted as an integer.
                                                  This array is replaced during a strategic merge patch.
                                                items:
                                                  type: string
                                                type: array
                                                x-kubernetes-list-type: atomic
                                            required:
                                              - key
                                              - operator
                                            type: object
                                          type: array
                                          x-kubernetes-list-type: atomic
                                        matchFields:
                                          description: A list of node selector requirements by node's fields.
                                          items:
                                            description: |-
                                              A node selector requirement is a selector that contains values, a key, and an operator
                                              that relates the key and values.
                                            properties:
                                              key:
                                                description: The label key that the selector applies to.
                                                type: string
                                              operator:
                                                description: |-
                                                  Represents a key's relationship to a set of values.
                                                  Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
                                                type: string
                                              values:
                                                description: |-
                                                  An array of string values. If the operator is In or NotIn,
                                                  the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                  the values array must be empty. If the operator is Gt or Lt, the values
                                                  array must have a single element, which will be interpreted as an integer.
                                                  This array is replaced during a strategic merge patch.
                                                items:
                                                  type: string
                                                type: array
                                                x-kubernetes-list-type: atomic
                                            required:
                                              - key
                                              - operator
                                            type: object
                                          type: array
                                          x-kubernetes-list-type: atomic
                                      type: object
                                      x-kubernetes-map-type: atomic
                                    weight:
                                      description: Weight associated with matching the corresponding nodeSelectorTerm, in the range 1-100.
                                      format: int32
                                      type: integer
                                  required:
                                    - preference
                                    - weight
                                  type: object
                                type: array
                                x-kubernetes-list-type: atomic
                              requiredDuringSchedulingIgnoredDuringExecution:
                                description: |-
                                  If the affinity requirements specified by this field are not met at
                                  scheduling time, the pod will not be scheduled onto the node.
                                  If the affinity requirements specified by this field cease to be met
                                  at some point during pod execution (e.g. due to an update), the system
                                  may or may not try to eventually evict the pod from its node.
                                properties:
                                  nodeSelectorTerms:
                                    description: Required. A list of node selector terms. The terms are ORed.
                                    items:
                                      description: |-
                                        A null or empty node selector term matches no objects. The requirements of
                                        them are ANDed.
                                        The TopologySelectorTerm type implements a subset of the NodeSelectorTerm.
                                      properties:
                                        matchExpressions:
                                          description: A list of node selector requirements by node's labels.
                                          items:
                                            description: |-
                                              A node selector requirement is a selector that contains values, a key, and an operator
                                              that relates the key and values.
                                            properties:
                                              key:
                                                description: The label key that the selector applies to.
                                                type: string
                                              operator:
                                                description: |-
                                                  Represents a key's relationship to a set of values.
                                                  Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
                                                type: string
                                              values:
                                                description: |-
                                                  An array of string values. If the operator is In or NotIn,
                                                  the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                  the values array must be empty. If the operator is Gt or Lt, the values
                                                  array must have a single element, which will be interpreted as an integer.
                                                  This array is replaced during a strategic merge patch.
                                                items:
                                                  type: string
                                                type: array
                                                x-kubernetes-list-type: atomic
                                            required:
                                              - key
                                              - operator
                                            type: object
                                          type: array
                                          x-kubernetes-list-type: atomic
                                        matchFields:
                                          description: A list of node selector requirements by node's fields.
                                          items:
                                            description: |-
                                              A node selector requirement is a selector that contains values, a key, and an operator
                                              that relates the key and values.
                                            properties:
                                              key:
                                                description: The label key that the selector applies to.
                                                type: string
                                              operator:
                                                description: |-
                                                  Represents a key's relationship to a set of values.
                                                  Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
                                                type: string
                                              values:
                                                description: |-
                                                  An array of string values. If the operator is In or NotIn,
                                                  the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                  the values array must be empty. If the operator is Gt or Lt, the values
                                                  array must have a single element, which will be interpreted as an integer.
                                                  This array is replaced during a strategic merge patch.
                                                items:
                                                  type: string
                                                type: array
                                                x-kubernetes-list-type: atomic
                                            required:
                                              - key
                                              - operator
                                            type: object
                                          type: array
                                          x-kubernetes-list-type: atomic
                                      type: object
                                      x-kubernetes-map-type: atomic
                                    type: array
                                    x-kubernetes-list-type: atomic
                                required:
                                  - nodeSelectorTerms
                                type: object
                                x-kubernetes-map-type: atomic
                            type: object
                          podAffinity:
                            description: Describes pod affinity scheduling rules (e.g. co-locate this pod in the same node, zone, etc. as some other pod(s)).
                            properties:
                              preferredDuringSchedulingIgnoredDuringExecution:
                                description: |-
                                  The scheduler will prefer to schedule pods to nodes that satisfy
                                  the affinity expressions specified by this field, but it may choose
                                  a node that violates one or more of the expressions. The node that is
                                  most preferred is the one with the greatest sum of weights, i.e.
                                  for each node that meets all of the scheduling requirements (resource
                                  request, requiredDuringScheduling affinity expressions, etc.),
                                  compute a sum by iterating through the elements of this field and adding
                                  "weight" to the sum if the node has pods which matches the corresponding podAffinityTerm; the
                                  node(s) with the highest sum are the most preferred.
                                items:
                                  description: The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)
                                  properties:
                                    podAffinityTerm:
                                      description: Required. A pod affinity term, associated with the corresponding weight.
                                      properties:
                                        labelSelector:
                                          description: |-
                                            A label query over a set of resources, in this case pods.
                                            If it's null, this PodAffinityTerm matches with no Pods.
                                          properties:
                                            matchExpressions:
                                              description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                              items:
                                                description: |-
                                                  A label selector requirement is a selector that contains values, a key, and an operator that
                                                  relates the key and values.
                                                properties:
                                                  key:
                                                    description: key is the label key that the selector applies to.
                                                    type: string
                                                  operator:
                                                    description: |-
                                                      operator represents a key's relationship to a set of values.
                                                      Valid operators are In, NotIn, Exists and DoesNotExist.
                                                    type: string
                                                  values:
                                                    description: |-
                                                      values is an array of string values. If the operator is In or NotIn,
                                                      the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                      the values array must be empty. This array is replaced during a strategic
                                                      merge patch.
                                                    items:
                                                      type: string
                                                    type: array
                                                    x-kubernetes-list-type: atomic
                                                required:
                                                  - key
                                                  - operator
                                                type: object
                                              type: array
                                              x-kubernetes-list-type: atomic
                                            matchLabels:
                                              additionalProperties:
                                                type: string
                                              description: |-
                                                matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                                map is equivalent to an element of matchExpressions, whose key field is "key", the
                                                operator is "In", and the values array contains only "value". The requirements are ANDed.
                                              type: object
                                          type: object
                                          x-kubernetes-map-type: atomic
                                        matchLabelKeys:
                                          description: |-
                                            MatchLabelKeys is a set of pod label keys to select which pods will
                                            be taken into consideration. The keys are used to lookup values from the
                                            incoming pod labels, those key-value labels are merged with `labelSelector` as `key in (value)`
                                            to select the group of existing pods which pods will be taken into consideration
                                            for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
                                            pod labels will be ignored. The default value is empty.
                                            The same key is forbidden to exist in both matchLabelKeys and labelSelector.
                                            Also, matchLabelKeys cannot be set when labelSelector isn't set.
                                          items:
                                            type: string
                                          type: array
                                          x-kubernetes-list-type: atomic
                                        mismatchLabelKeys:
                                          description: |-
                                            MismatchLabelKeys is a set of pod label keys to select which pods will
                                            be taken into consideration. The keys are used to lookup values from the
                                            incoming pod labels, those key-value labels are merged with `labelSelector` as `key notin (value)`
                                            to select the group of existing pods which pods will be taken into consideration
                                            for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
                                            pod labels will be ignored. The default value is empty.
                                            The same key is forbidden to exist in both mismatchLabelKeys and labelSelector.
                                            Also, mismatchLabelKeys cannot be set when labelSelector isn't set.
                                          items:
                                            type: string
                                          type: array
                                          x-kubernetes-list-type: atomic
                                        namespaceSelector:
                                          description: |-
                                            A label query over the set of namespaces that the term applies to.
                                            The term is applied to the union of the namespaces selected by this field
                                            and the ones listed in the namespaces field.
                                            null selector and null or empty namespaces list means "this pod's namespace".
                                            An empty selector ({}) matches all namespaces.
                                          properties:
                                            matchExpressions:
                                              description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                              items:
                                                description: |-
                                                  A label selector requirement is a selector that contains values, a key, and an operator that
                                                  relates the key and values.
                                                properties:
                                                  key:
                                                    description: key is the label key that the selector applies to.
                                                    type: string
                                                  operator:
                                                    description: |-
                                                      operator represents a key's relationship to a set of values.
                                                      Valid operators are In, NotIn, Exists and DoesNotExist.
                                                    type: string
                                                  values:
                                                    description: |-
                                                      values is an array of string values. If the operator is In or NotIn,
                                                      the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                      the values array must be empty. This array is replaced during a strategic
                                                      merge patch.
                                                    items:
                                                      type: string
                                                    type: array
                                                    x-kubernetes-list-type: atomic
                                                required:
                                                  - key
                                                  - operator
                                                type: object
                                              type: array
                                              x-kubernetes-list-type: atomic
                                            matchLabels:
                                              additionalProperties:
                                                type: string
                                              description: |-
                                                matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                                map is equivalent to an element of matchExpressions, whose key field is "key", the
                                                operator is "In", and the values array contains only "value". The requirements are ANDed.
                                              type: object
                                          type: object
                                          x-kubernetes-map-type: atomic
                                        namespaces:
                                          description: |-
                                            namespaces specifies a static list of namespace names that the term applies to.
                                            The term is applied to the union of the namespaces listed in this field
                                            and the ones selected by namespaceSelector.
                                            null or empty namespaces list and null namespaceSelector means "this pod's namespace".
                                          items:
                                            type: string
                                          type: array
                                          x-kubernetes-list-type: atomic
                                        topologyKey:
                                          description: |-
                                            This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching
                                            the labelSelector in the specified namespaces, where co-located is defined as running on a node
                                            whose value of the label with key topologyKey matches that of any node on which any of the
                                            selected pods is running.
                                            Empty topologyKey is not allowed.
                                          type: string
                                      required:
                                        - topologyKey
                                      type: object
                                    weight:
                                      description: |-
                                        weight associated with matching the corresponding podAffinityTerm,
                                        in the range 1-100.
                                      format: int32
                                      type: integer
                                  required:
                                    - podAffinityTerm
                                    - weight
                                  type: object
                                type: array
                                x-kubernetes-list-type: atomic
                              requiredDuringSchedulingIgnoredDuringExecution:
                                description: |-
                                  If the affinity requirements specified by this field are not met at
                                  scheduling time, the pod will not be scheduled onto the node.
                                  If the affinity requirements specified by this field cease to be met
                                  at some point during pod execution (e.g. due to a pod label update), the
                                  system may or may not try to eventually evict the pod from its node.
                                  When there are multiple elements, the lists of nodes corresponding to each
                                  podAffinityTerm are intersected, i.e. all terms must be satisfied.
                                items:
                                  description: |-
                                    Defines a set of pods (namely those matching the labelSelector
                                    relative to the given namespace(s)) that this pod should be
                                    co-located (affinity) or not co-located (anti-affinity) with,
                                    where co-located is defined as running on a node whose value of
                                    the label with key <topologyKey> matches that of any node on which
                                    a pod of the set of pods is running
                                  properties:
                                    labelSelector:
                                      description: |-
                                        A label query over a set of resources, in this case pods.
                                        If it's null, this PodAffinityTerm matches with no Pods.
                                      properties:
                                        matchExpressions:
                                          description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                          items:
                                            description: |-
                                              A label selector requirement is a selector that contains values, a key, and an operator that
                                              relates the key and values.
                                            properties:
                                              key:
                                                description: key is the label key that the selector applies to.
                                                type: string
                                              operator:
                                                description: |-
                                                  operator represents a key's relationship to a set of values.
                                                  Valid operators are In, NotIn, Exists and DoesNotExist.
                                                type: string
                                              values:
                                                description: |-
                                                  values is an array of string values. If the operator is In or NotIn,
                                                  the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                  the values array must be empty. This array is replaced during a strategic
                                                  merge patch.
                                                items:
                                                  type: string
                                                type: array
                                                x-kubernetes-list-type: atomic
                                            required:
                                              - key
                                              - operator
                                            type: object
                                          type: array
                                          x-kubernetes-list-type: atomic
                                        matchLabels:
                                          additionalProperties:
                                            type: string
                                          description: |-
                                            matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                            map is equivalent to an element of matchExpressions, whose key field is "key", the
                                            operator is "In", and the values array contains only "value". The requirements are ANDed.
                                          type: object
                                      type: object
                                      x-kubernetes-map-type: atomic
                                    matchLabelKeys:
                                      description: |-
                                        MatchLabelKeys is a set of pod label keys to select which pods will
                                        be taken into consideration. The keys are used to lookup values from the
                                        incoming pod labels, those key-value labels are merged with `labelSelector` as `key in (value)`
                                        to select the group of existing pods which pods will be taken into consideration
                                        for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
                                        pod labels will be ignored. The default value is empty.
                                        The same key is forbidden to exist in both matchLabelKeys and labelSelector.
                                        Also, matchLabelKeys cannot be set when labelSelector isn't set.
                                      items:
                                        type: string
                                      type: array
                                      x-kubernetes-list-type: atomic
                                    mismatchLabelKeys:
                                      description: |-
                                        MismatchLabelKeys is a set of pod label keys to select which pods will
                                        be taken into consideration. The keys are used to lookup values from the
                                        incoming pod labels, those key-value labels are merged with `labelSelector` as `key notin (value)`
                                        to select the group of existing pods which pods will be taken into consideration
                                        for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
                                        pod labels will be ignored. The default value is empty.
                                        The same key is forbidden to exist in both mismatchLabelKeys and labelSelector.
                                        Also, mismatchLabelKeys cannot be set when labelSelector isn't set.
                                      items:
                                        type: string
                                      type: array
                                      x-kubernetes-list-type: atomic
                                    namespaceSelector:
                                      description: |-
                                        A label query over the set of namespaces that the term applies to.
                                        The term is applied to the union of the namespaces selected by this field
                                        and the ones listed in the namespaces field.
                                        null selector and null or empty namespaces list means "this pod's namespace".
                                        An empty selector ({}) matches all namespaces.
                                      properties:
                                        matchExpressions:
                                          description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                          items:
                                            description: |-
                                              A label selector requirement is a selector that contains values, a key, and an operator that
                                              relates the key and values.
                                            properties:
                                              key:
                                                description: key is the label key that the selector applies to.
                                                type: string
                                              operator:
                                                description: |-
                                                  operator represents a key's relationship to a set of values.
                                                  Valid operators are In, NotIn, Exists and DoesNotExist.
                                                type: string
                                              values:
                                                description: |-
                                                  values is an array of string values. If the operator is In or NotIn,
                                                  the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                  the values array must be empty. This array is replaced during a strategic
                                                  merge patch.
                                                items:
                                                  type: string
                                                type: array
                                                x-kubernetes-list-type: atomic
                                            required:
                                              - key
                                              - operator
                                            type: object
                                          type: array
                                          x-kubernetes-list-type: atomic
                                        matchLabels:
                                          additionalProperties:
                                            type: string
                                          description: |-
                                            matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                            map is equivalent to an element of matchExpressions, whose key field is "key", the
                                            operator is "In", and the values array contains only "value". The requirements are ANDed.
                                          type: object
                                      type: object
                                      x-kubernetes-map-type: atomic
                                    namespaces:
                                      description: |-
                                        namespaces specifies a static list of namespace names that the term applies to.
                                        The term is applied to the union of the namespaces listed in this field
                                        and the ones selected by namespaceSelector.
                                        null or empty namespaces list and null namespaceSelector means "this pod's namespace".
                                      items:
                                        type: string
                                      type: array
                                      x-kubernetes-list-type: atomic
                                    topologyKey:
                                      description: |-
                                        This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching
                                        the labelSelector in the specified namespaces, where co-located is defined as running on a node
                                        whose value of the label with key topologyKey matches that of any node on which any of the
                                        selected pods is running.
                                        Empty topologyKey is not allowed.
                                      type: string
                                  required:
                                    - topologyKey
                                  type: object
                                type: array
                                x-kubernetes-list-type: atomic
                            type: object
                          podAntiAffinity:
                            description: Describes pod anti-affinity scheduling rules (e.g. avoid putting this pod in the same node, zone, etc. as some other pod(s)).
                            properties:
                              preferredDuringSchedulingIgnoredDuringExecution:
                                description: |-
                                  The scheduler will prefer to schedule pods to nodes that satisfy
                                  the anti-affinity expressions specified by this field, but it may choose
                                  a node that violates one or more of the expressions. The node that is
                                  most preferred is the one with the greatest sum of weights, i.e.
                                  for each node that meets all of the scheduling requirements (resource
                                  request, requiredDuringScheduling anti-affinity expressions, etc.),
                                  compute a sum by iterating through the elements of this field and adding
                                  "weight" to the sum if the node has pods which matches the corresponding podAffinityTerm; the
                                  node(s) with the highest sum are the most preferred.
                                items:
                                  description: The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)
                                  properties:
                                    podAffinityTerm:
                                      description: Required. A pod affinity term, associated with the corresponding weight.
                                      properties:
                                        labelSelector:
                                          description: |-
                                            A label query over a set of resources, in this case pods.
                                            If it's null, this PodAffinityTerm matches with no Pods.
                                          properties:
                                            matchExpressions:
                                              description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                              items:
                                                description: |-
                                                  A label selector requirement is a selector that contains values, a key, and an operator that
                                                  relates the key and values.
                                                properties:
                                                  key:
                                                    description: key is the label key that the selector applies to.
                                                    type: string
                                                  operator:
                                                    description: |-
                                                      operator represents a key's relationship to a set of values.
                                                      Valid operators are In, NotIn, Exists and DoesNotExist.
                                                    type: string
                                                  values:
                                                    description: |-
                                                      values is an array of string values. If the operator is In or NotIn,
                                                      the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                      the values array must be empty. This array is replaced during a strategic
                                                      merge patch.
                                                    items:
                                                      type: string
                                                    type: array
                                                    x-kubernetes-list-type: atomic
                                                required:
                                                  - key
                                                  - operator
                                                type: object
                                              type: array
                                              x-kubernetes-list-type: atomic
                                            matchLabels:
                                              additionalProperties:
                                                type: string
                                              description: |-
                                                matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                                map is equivalent to an element of matchExpressions, whose key field is "key", the
                                                operator is "In", and the values array contains only "value". The requirements are ANDed.
                                              type: object
                                          type: object
                                          x-kubernetes-map-type: atomic
                                        matchLabelKeys:
                                          description: |-
                                            MatchLabelKeys is a set of pod label keys to select which pods will
                                            be taken into consideration. The keys are used to lookup values from the
                                            incoming pod labels, those key-value labels are merged with `labelSelector` as `key in (value)`
                                            to select the group of existing pods which pods will be taken into consideration
                                            for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
                                            pod labels will be ignored. The default value is empty.
                                            The same key is forbidden to exist in both matchLabelKeys and labelSelector.
                                            Also, matchLabelKeys cannot be set when labelSelector isn't set.
                                          items:
                                            type: string
                                          type: array
                                          x-kubernetes-list-type: atomic
                                        mismatchLabelKeys:
                                          description: |-
                                            MismatchLabelKeys is a set of pod label keys to select which pods will
                                            be taken into consideration. The keys are used to lookup values from the
                                            incoming pod labels, those key-value labels are merged with `labelSelector` as `key notin (value)`
                                            to select the group of existing pods which pods will be taken into consideration
                                            for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
                                            pod labels will be ignored. The default value is empty.
                                            The same key is forbidden to exist in both mismatchLabelKeys and labelSelector.
                                            Also, mismatchLabelKeys cannot be set when labelSelector isn't set.
                                          items:
                                            type: string
                                          type: array
                                          x-kubernetes-list-type: atomic
                                        namespaceSelector:
                                          description: |-
                                            A label query over the set of namespaces that the term applies to.
                                            The term is applied to the union of the namespaces selected by this field
                                            and the ones listed in the namespaces field.
                                            null selector and null or empty namespaces list means "this pod's namespace".
                                            An empty selector ({}) matches all namespaces.
                                          properties:
                                            matchExpressions:
                                              description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                              items:
                                                description: |-
                                                  A label selector requirement is a selector that contains values, a key, and an operator that
                                                  relates the key and values.
                                                properties:
                                                  key:
                                                    description: key is the label key that the selector applies to.
                                                    type: string
                                                  operator:
                                                    description: |-
                                                      operator represents a key's relationship to a set of values.
                                                      Valid operators are In, NotIn, Exists and DoesNotExist.
                                                    type: string
                                                  values:
                                                    description: |-
                                                      values is an array of string values. If the operator is In or NotIn,
                                                      the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                      the values array must be empty. This array is replaced during a strategic
                                                      merge patch.
                                                    items:
                                                      type: string
                                                    type: array
                                                    x-kubernetes-list-type: atomic
                                                required:
                                                  - key
                                                  - operator
                                                type: object
                                              type: array
                                              x-kubernetes-list-type: atomic
                                            matchLabels:
                                              additionalProperties:
                                                type: string
                                              description: |-
                                                matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                                map is equivalent to an element of matchExpressions, whose key field is "key", the
                                                operator is "In", and the values array contains only "value". The requirements are ANDed.
                                              type: object
                                          type: object
                                          x-kubernetes-map-type: atomic
                                        namespaces:
                                          description: |-
                                            namespaces specifies a static list of namespace names that the term applies to.
                                            The term is applied to the union of the namespaces listed in this field
                                            and the ones selected by namespaceSelector.
                                            null or empty namespaces list and null namespaceSelector means "this pod's namespace".
                                          items:
                                            type: string
                                          type: array
                                          x-kubernetes-list-type: atomic
                                        topologyKey:
                                          description: |-
                                            This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching
                                            the labelSelector in the specified namespaces, where co-located is defined as running on a node
                                            whose value of the label with key topologyKey matches that of any node on which any of the
                                            selected pods is running.
                                            Empty topologyKey is not allowed.
                                          type: string
                                      required:
                                        - topologyKey
                                      type: object
                                    weight:
                                      description: |-
                                        weight associated with matching the corresponding podAffinityTerm,
                                        in the range 1-100.
                                      format: int32
                                      type: integer
                                  required:
                                    - podAffinityTerm
                                    - weight
                                  type: object
                                type: array
                                x-kubernetes-list-type: atomic
                              requiredDuringSchedulingIgnoredDuringExecution:
                                description: |-
                                  If the anti-affinity requirements specified by this field are not met at
                                  scheduling time, the pod will not be scheduled onto the node.
                                  If the anti-affinity requirements specified by this field cease to be met
                                  at some point during pod execution (e.g. due to a pod label update), the
                                  system may or may not try to eventually evict the pod from its node.
                                  When there are multiple elements, the lists of nodes corresponding to each
                                  podAffinityTerm are intersected, i.e. all terms must be satisfied.
                                items:
                                  description: |-
                                    Defines a set of pods (namely those matching the labelSelector
                                    relative to the given namespace(s)) that this pod should be
                                    co-located (affinity) or not co-located (anti-affinity) with,
                                    where co-located is defined as running on a node whose value of
                                    the label with key <topologyKey> matches that of any node on which
                                    a pod of the set of pods is running
                                  properties:
                                    labelSelector:
                                      description: |-
                                        A label query over a set of resources, in this case pods.
                                        If it's null, this PodAffinityTerm matches with no Pods.
                                      properties:
                                        matchExpressions:
                                          description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                          items:
                                            description: |-
                                              A label selector requirement is a selector that contains values, a key, and an operator that
                                              relates the key and values.
                                            properties:
                                              key:
                                                description: key is the label key that the selector applies to.
                                                type: string
                                              operator:
                                                description: |-
                                                  operator represents a key's relationship to a set of values.
                                                  Valid operators are In, NotIn, Exists and DoesNotExist.
                                                type: string
                                              values:
                                                description: |-
                                                  values is an array of string values. If the operator is In or NotIn,
                                                  the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                  the values array must be empty. This array is replaced during a strategic
                                                  merge patch.
                                                items:
                                                  type: string
                                                type: array
                                                x-kubernetes-list-type: atomic
                                            required:
                                              - key
                                              - operator
                                            type: object
                                          type: array
                                          x-kubernetes-list-type: atomic
                                        matchLabels:
                                          additionalProperties:
                                            type: string
                                          description: |-
                                            matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                            map is equivalent to an element of matchExpressions, whose key field is "key", the
                                            operator is "In", and the values array contains only "value". The requirements are ANDed.
                                          type: object
                                      type: object
                                      x-kubernetes-map-type: atomic
                                    matchLabelKeys:
                                      description: |-
                                        MatchLabelKeys is a set of pod label keys to select which pods will
                                        be taken into consideration. The keys are used to lookup values from the
                                        incoming pod labels, those key-value labels are merged with `labelSelector` as `key in (value)`
                                        to select the group of existing pods which pods will be taken into consideration
                                        for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
                                        pod labels will be ignored. The default value is empty.
                                        The same key is forbidden to exist in both matchLabelKeys and labelSelector.
                                        Also, matchLabelKeys cannot be set when labelSelector isn't set.
                                      items:
                                        type: string
                                      type: array
                                      x-kubernetes-list-type: atomic
                                    mismatchLabelKeys:
                                      description: |-
                                        MismatchLabelKeys is a set of pod label keys to select which pods will
                                        be taken into consideration. The keys are used to lookup values from the
                                        incoming pod labels, those key-value labels are merged with `labelSelector` as `key notin (value)`
                                        to select the group of existing pods which pods will be taken into consideration
                                        for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
                                        pod labels will be ignored. The default value is empty.
                                        The same key is forbidden to exist in both mismatchLabelKeys and labelSelector.
                                        Also, mismatchLabelKeys cannot be set when labelSelector isn't set.
                                      items:
                                        type: string
                                      type: array
                                      x-kubernetes-list-type: atomic
                                    namespaceSelector:
                                      description: |-
                                        A label query over the set of namespaces that the term applies to.
                                        The term is applied to the union of the namespaces selected by this field
                                        and the ones listed in the namespaces field.
                                        null selector and null or empty namespaces list means "this pod's namespace".
                                        An empty selector ({}) matches all namespaces.
                                      properties:
                                        matchExpressions:
                                          description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                          items:
                                            description: |-
                                              A label selector requirement is a selector that contains values, a key, and an operator that
                                              relates the key and values.
                                            properties:
                                              key:
                                                description: key is the label key that the selector applies to.
                                                type: string
                                              operator:
                                                description: |-
                                                  operator represents a key's relationship to a set of values.
                                                  Valid operators are In, NotIn, Exists and DoesNotExist.
                                                type: string
                                              values:
                                                description: |-
                                                  values is an array of string values. If the operator is In or NotIn,
                                                  the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                  the values array must be empty. This array is replaced during a strategic
                                                  merge patch.
                                                items:
                                                  type: string
                                                type: array
                                                x-kubernetes-list-type: atomic
                                            required:
                                              - key
                                              - operator
                                            type: object
                                          type: array
                                          x-kubernetes-list-type: atomic
                                        matchLabels:
                                          additionalProperties:
                                            type: string
                                          description: |-
                                            matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                            map is equivalent to an element of matchExpressions, whose key field is "key", the
                                            operator is "In", and the values array contains only "value". The requirements are ANDed.
                                          type: object
                                      type: object
                                      x-kubernetes-map-type: atomic
                                    namespaces:
                                      description: |-
                                        namespaces specifies a static list of namespace names that the term applies to.
                                        The term is applied to the union of the namespaces listed in this field
                                        and the ones selected by namespaceSelector.
                                        null or empty namespaces list and null namespaceSelector means "this pod's namespace".
                                      items:
                                        type: string
                                      type: array
                                      x-kubernetes-list-type: atomic
                                    topologyKey:
                                      description: |-
                                        This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching
                                        the labelSelector in the specified namespaces, where co-located is defined as running on a node
                                        whose value of the label with key topologyKey matches that of any node on which any of the
                                        selected pods is running.
                                        Empty topologyKey is not allowed.
                                      type: string
                                  required:
                                    - topologyKey
                                  type: object
                                type: array
                                x-kubernetes-list-type: atomic
                            type: object
                        type: object
                      blueGreen:
                        description: BlueGreen defines the configuration of BlueGreen deployment for a ClusterInstallation
                        properties:
                          blue:
                            description: Blue defines the blue deployment.
                            properties:
                              image:
                                description: |-
                                  Image defines the base Docker image that will be used for the deployment.
                                  Required when BlueGreen or Canary is enabled.
                                type: string
                              ingressName:
                                description: |-
                                  IngressName defines the ingress name that will be used by the deployment.
                                  This option is not used for Canary builds.
                                type: string
                              name:
                                description: Name defines the name of the deployment
                                type: string
                              resourceLabels:
                                additionalProperties:
                                  type: string
                                type: object
                              version:
                                description: |-
                                  Version defines the Docker image version that will be used for the deployment.
                                  Required when BlueGreen or Canary is enabled.
                                type: string
                            type: object
                          enable:
                            description: Enable defines if BlueGreen deployment will be applied.
                            type: boolean
                          green:
                            description: Green defines the green deployment.
                            properties:
                              image:
                                description: |-
                                  Image defines the base Docker image that will be used for the deployment.
                                  Required when BlueGreen or Canary is enabled.
                                type: string
                              ingressName:
                                description: |-
                                  IngressName defines the ingress name that will be used by the deployment.
                                  This option is not used for Canary builds.
                                type: string
                              name:
                                description: Name defines the name of the deployment
                                type: string
                              resourceLabels:
                                additionalProperties:
                                  type: string
                                type: object
                              version:
                                description: |-
                                  Version defines the Docker image version that will be used for the deployment.
                                  Required when BlueGreen or Canary is enabled.
                                type: string
                            type: object
                          productionDeployment:
                            description: ProductionDeployment defines if the current production is blue or green.
                            type: string
                        type: object
                      canary:
                        description: Canary defines the configuration of Canary deployment for a ClusterInstallation
                        properties:
                          deployment:
                            description: Deployment defines the canary deployment.
                            properties:
                              image:
                                description: |-
                                  Image defines the base Docker image that will be used for the deployment.
                                  Required when BlueGreen or Canary is enabled.
                                type: string
                              ingressName:
                                description: |-
                                  IngressName defines the ingress name that will be used by the deployment.
                                  This option is not used for Canary builds.
                                type: string
                              name:
                                description: Name defines the name of the deployment
                                type: string
                              resourceLabels:
                                additionalProperties:
                                  type: string
                                type: object
                              version:
                                description: |-
                                  Version defines the Docker image version that will be used for the deployment.
                                  Required when BlueGreen or Canary is enabled.
                                type: string
                            type: object
                          enable:
                            description: Enable defines if a canary build will be deployed.
                            type: boolean
                        type: object
                      database:
                        description: Database defines the database configuration for a ClusterInstallation.
                        properties:
                          backupRemoteDeletePolicy:
                            description: Defines the backup retention policy.
                            type: string
                          backupRestoreSecretName:
                            description: Defines the secret to be used when performing a database restore.
                            type: string
                          backupSchedule:
                            description: Defines the interval for backups in cron expression format.
                            type: string
                          backupSecretName:
                            description: Defines the secret to be used for uploading/restoring backup.
                            type: string
                          backupURL:
                            description: Defines the object storage url for uploading backups.
                            type: string
                          initBucketURL:
                            description: |-
                              Defines the AWS S3 bucket where the Database Backup is stored.
                              The operator will download the file to restore the data.
                            type: string
                          replicas:
                            description: |-
                              Defines the number of database replicas.
                              For redundancy use at least 2 replicas.
                              Setting this will override the number of replicas set by 'Size'.
                            format: int32
                            type: integer
                          resources:
                            description: Defines the resource requests and limits for the database pods.
                            properties:
                              claims:
                                description: |-
                                  Claims lists the names of resources, defined in spec.resourceClaims,
                                  that are used by this container.

                                  This is an alpha field and requires enabling the
                                  DynamicResourceAllocation feature gate.

                                  This field is immutable. It can only be set for containers.
                                items:
                                  description: ResourceClaim references one entry in PodSpec.ResourceClaims.
                                  properties:
                                    name:
                                      description: |-
                                        Name must match the name of one entry in pod.spec.resourceClaims of
                                        the Pod where this field is used. It makes that resource available
                                        inside a container.
                                      type: string
                                    request:
                                      description: |-
                                        Request is the name chosen for a request in the referenced claim.
                                        If empty, everything from the claim is made available, otherwise
                                        only the result of this request.
                                      type: string
                                  required:
                                    - name
                                  type: object
                                type: array
                                x-kubernetes-list-map-keys:
                                  - name
                                x-kubernetes-list-type: map
                              limits:
                                additionalProperties:
                                  anyOf:
                                    - type: integer
                                    - type: string
                                  pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                  x-kubernetes-int-or-string: true
                                description: |-
                                  Limits describes the maximum amount of compute resources allowed.
                                  More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                                type: object
                              requests:
                                additionalProperties:
                                  anyOf:
                                    - type: integer
                                    - type: string
                                  pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                  x-kubernetes-int-or-string: true
                                description: |-
                                  Requests describes the minimum amount of compute resources required.
                                  If Requests is omitted for a container, it defaults to Limits if that is explicitly specified,
                                  otherwise to an implementation-defined value. Requests cannot exceed Limits.
                                  More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                                type: object
                            type: object
                          secret:
                            description: |-
                              Optionally enter the name of an already-existing Secret for connecting to
                              the database. This secret should be configured as follows:

                              User-Managed Database
                                - Key: DB_CONNECTION_STRING | Value: <FULL_DATABASE_CONNECTION_STRING>
                              Operator-Managed Database
                                - Key: ROOT_PASSWORD | Value: <ROOT_DATABASE_PASSWORD>
                                - Key: USER | Value: <USER_NAME>
                                - Key: PASSWORD | Value: <USER_PASSWORD>
                                - Key: DATABASE Value: <DATABASE_NAME>

                              Notes:
                                If you define all secret values for both User-Managed and
                                Operator-Managed database types, the User-Managed connection string will
                                take precedence and the Operator-Managed values will be ignored. If the
                                secret is left blank, the default behavior is to use an Operator-Managed
                                database with strong randomly-generated database credentials.
                            type: string
                          storageSize:
                            description: Defines the storage size for the database. ie 50Gi
                            pattern: ^([+-]?[0-9.]+)([eEinumkKMGTP]*[-+]?[0-9]*)$
                            type: string
                          type:
                            description: |-
                              Defines the type of database to use for an Operator-Managed database. This
                              value is ignored when using a User-Managed database.
                            type: string
                          version:
                            description: Defines the cluster version for the database to use
                            type: string
                        type: object
                      elasticSearch:
                        description: ElasticSearch defines the ElasticSearch configuration for a ClusterInstallation.
                        properties:
                          host:
                            type: string
                          password:
                            type: string
                          username:
                            type: string
                        type: object
                      image:
                        description: Image defines the ClusterInstallation Docker image.
                        type: string
                      imagePullPolicy:
                        description: Specify deployment pull policy.
                        type: string
                      ingressAnnotations:
                        additionalProperties:
                          type: string
                        type: object
                      ingressName:
                        description: IngressName defines the name to be used when creating the ingress rules
                        type: string
                      livenessProbe:
                        description: Defines the probe to check if the application is up and running.
                        properties:
                          exec:
                            description: Exec specifies a command to execute in the container.
                            properties:
                              command:
                                description: |-
                                  Command is the command line to execute inside the container, the working directory for the
                                  command  is root ('/') in the container's filesystem. The command is simply exec'd, it is
                                  not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use
                                  a shell, you need to explicitly call out to that shell.
                                  Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
                                items:
                                  type: string
                                type: array
                                x-kubernetes-list-type: atomic
                            type: object
                          failureThreshold:
                            description: |-
                              Minimum consecutive failures for the probe to be considered failed after having succeeded.
                              Defaults to 3. Minimum value is 1.
                            format: int32
                            type: integer
                          grpc:
                            description: GRPC specifies a GRPC HealthCheckRequest.
                            properties:
                              port:
                                description: Port number of the gRPC service. Number must be in the range 1 to 65535.
                                format: int32
                                type: integer
                              service:
                                default: ""
                                description: |-
                                  Service is the name of the service to place in the gRPC HealthCheckRequest
                                  (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).

                                  If this is not specified, the default behavior is defined by gRPC.
                                type: string
                            required:
                              - port
                            type: object
                          httpGet:
                            description: HTTPGet specifies an HTTP GET request to perform.
                            properties:
                              host:
                                description: |-
                                  Host name to connect to, defaults to the pod IP. You probably want to set
                                  "Host" in httpHeaders instead.
                                type: string
                              httpHeaders:
                                description: Custom headers to set in the request. HTTP allows repeated headers.
                                items:
                                  description: HTTPHeader describes a custom header to be used in HTTP probes
                                  properties:
                                    name:
                                      description: |-
                                        The header field name.
                                        This will be canonicalized upon output, so case-variant names will be understood as the same header.
                                      type: string
                                    value:
                                      description: The header field value
                                      type: string
                                  required:
                                    - name
                                    - value
                                  type: object
                                type: array
                                x-kubernetes-list-type: atomic
                              path:
                                description: Path to access on the HTTP server.
                                type: string
                              port:
                                anyOf:
                                  - type: integer
                                  - type: string
                                description: |-
                                  Name or number of the port to access on the container.
                                  Number must be in the range 1 to 65535.
                                  Name must be an IANA_SVC_NAME.
                                x-kubernetes-int-or-string: true
                              scheme:
                                description: |-
                                  Scheme to use for connecting to the host.
                                  Defaults to HTTP.
                                type: string
                            required:
                              - port
                            type: object
                          initialDelaySeconds:
                            description: |-
                              Number of seconds after the container has started before liveness probes are initiated.
                              More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                            format: int32
                            type: integer
                          periodSeconds:
                            description: |-
                              How often (in seconds) to perform the probe.
                              Default to 10 seconds. Minimum value is 1.
                            format: int32
                            type: integer
                          successThreshold:
                            description: |-
                              Minimum consecutive successes for the probe to be considered successful after having failed.
                              Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.
                            format: int32
                            type: integer
                          tcpSocket:
                            description: TCPSocket specifies a connection to a TCP port.
                            properties:
                              host:
                                description: 'Optional: Host name to connect to, defaults to the pod IP.'
                                type: string
                              port:
                                anyOf:
                                  - type: integer
                                  - type: string
                                description: |-
                                  Number or name of the port to access on the container.
                                  Number must be in the range 1 to 65535.
                                  Name must be an IANA_SVC_NAME.
                                x-kubernetes-int-or-string: true
                            required:
                              - port
                            type: object
                          terminationGracePeriodSeconds:
                            description: |-
                              Optional duration in seconds the pod needs to terminate gracefully upon probe failure.
                              The grace period is the duration in seconds after the processes running in the pod are sent
                              a termination signal and the time when the processes are forcibly halted with a kill signal.
                              Set this value longer than the expected cleanup time for your process.
                              If this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this
                              value overrides the value provided by the pod spec.
                              Value must be non-negative integer. The value zero indicates stop immediately via
                              the kill signal (no opportunity to shut down).
                              This is a beta field and requires enabling ProbeTerminationGracePeriod feature gate.
                              Minimum value is 1. spec.terminationGracePeriodSeconds is used if unset.
                            format: int64
                            type: integer
                          timeoutSeconds:
                            description: |-
                              Number of seconds after which the probe times out.
                              Defaults to 1 second. Minimum value is 1.
                              More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                            format: int32
                            type: integer
                        type: object
                      mattermostEnv:
                        description: Optional environment variables to set in the Mattermost application pods.
                        items:
                          description: EnvVar represents an environment variable present in a Container.
                          properties:
                            name:
                              description: Name of the environment variable. Must be a C_IDENTIFIER.
                              type: string
                            value:
                              description: |-
                                Variable references $(VAR_NAME) are expanded
                                using the previously defined environment variables in the container and
                                any service environment variables. If a variable cannot be resolved,
                                the reference in the input string will be unchanged. Double $$ are reduced
                                to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e.
                                "$$(VAR_NAME)" will produce the string literal "$(VAR_NAME)".
                                Escaped references will never be expanded, regardless of whether the variable
                                exists or not.
                                Defaults to "".
                              type: string
                            valueFrom:
                              description: Source for the environment variable's value. Cannot be used if value is not empty.
                              properties:
                                configMapKeyRef:
                                  description: Selects a key of a ConfigMap.
                                  properties:
                                    key:
                                      description: The key to select.
                                      type: string
                                    name:
                                      default: ""
                                      description: |-
                                        Name of the referent.
                                        This field is effectively required, but due to backwards compatibility is
                                        allowed to be empty. Instances of this type with an empty value here are
                                        almost certainly wrong.
                                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                      type: string
                                    optional:
                                      description: Specify whether the ConfigMap or its key must be defined
                                      type: boolean
                                  required:
                                    - key
                                  type: object
                                  x-kubernetes-map-type: atomic
                                fieldRef:
                                  description: |-
                                    Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`,
                                    spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.
                                  properties:
                                    apiVersion:
                                      description: Version of the schema the FieldPath is written in terms of, defaults to "v1".
                                      type: string
                                    fieldPath:
                                      description: Path of the field to select in the specified API version.
                                      type: string
                                  required:
                                    - fieldPath
                                  type: object
                                  x-kubernetes-map-type: atomic
                                resourceFieldRef:
                                  description: |-
                                    Selects a resource of the container: only resources limits and requests
                                    (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.
                                  properties:
                                    containerName:
                                      description: 'Container name: required for volumes, optional for env vars'
                                      type: string
                                    divisor:
                                      anyOf:
                                        - type: integer
                                        - type: string
                                      description: Specifies the output format of the exposed resources, defaults to "1"
                                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                      x-kubernetes-int-or-string: true
                                    resource:
                                      description: 'Required: resource to select'
                                      type: string
                                  required:
                                    - resource
                                  type: object
                                  x-kubernetes-map-type: atomic
                                secretKeyRef:
                                  description: Selects a key of a secret in the pod's namespace
                                  properties:
                                    key:
                                      description: The key of the secret to select from.  Must be a valid secret key.
                                      type: string
                                    name:
                                      default: ""
                                      description: |-
                                        Name of the referent.
                                        This field is effectively required, but due to backwards compatibility is
                                        allowed to be empty. Instances of this type with an empty value here are
                                        almost certainly wrong.
                                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                      type: string
                                    optional:
                                      description: Specify whether the Secret or its key must be defined
                                      type: boolean
                                  required:
                                    - key
                                  type: object
                                  x-kubernetes-map-type: atomic
                              type: object
                          required:
                            - name
                          type: object
                        type: array
                      mattermostLicenseSecret:
                        description: Secret that contains the mattermost license
                        type: string
                      migrate:
                        description: |-
                          Migrate specifies that the ClusterInstallation CR should be migrated to the Mattermost CR.
                          CAUTION: Some features like BlueGreen or Canary are not supported with a new Custom Resource
                          therefore migration should be performed with extra caution.
                        type: boolean
                      minio:
                        description: Minio defines the configuration of Minio for a ClusterInstallation.
                        properties:
                          externalBucket:
                            description: Set to the bucket name of your external MinIO or S3.
                            type: string
                          externalURL:
                            description: Set to use an external MinIO deployment or S3. Must also set 'Secret' and 'ExternalBucket'.
                            type: string
                          replicas:
                            description: |-
                              Defines the number of Minio replicas.
                              Supply 1 to run Minio in standalone mode with no redundancy.
                              Supply 4 or more to run Minio in distributed mode.
                              Note that it is not possible to upgrade Minio from standalone to distributed mode.
                              Setting this will override the number of replicas set by 'Size'.
                              More info: https://docs.min.io/docs/distributed-minio-quickstart-guide.html
                            format: int32
                            type: integer
                          resources:
                            description: Defines the resource requests and limits for the Minio pods.
                            properties:
                              claims:
                                description: |-
                                  Claims lists the names of resources, defined in spec.resourceClaims,
                                  that are used by this container.

                                  This is an alpha field and requires enabling the
                                  DynamicResourceAllocation feature gate.

                                  This field is immutable. It can only be set for containers.
                                items:
                                  description: ResourceClaim references one entry in PodSpec.ResourceClaims.
                                  properties:
                                    name:
                                      description: |-
                                        Name must match the name of one entry in pod.spec.resourceClaims of
                                        the Pod where this field is used. It makes that resource available
                                        inside a container.
                                      type: string
                                    request:
                                      description: |-
                                        Request is the name chosen for a request in the referenced claim.
                                        If empty, everything from the claim is made available, otherwise
                                        only the result of this request.
                                      type: string
                                  required:
                                    - name
                                  type: object
                                type: array
                                x-kubernetes-list-map-keys:
                                  - name
                                x-kubernetes-list-type: map
                              limits:
                                additionalProperties:
                                  anyOf:
                                    - type: integer
                                    - type: string
                                  pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                  x-kubernetes-int-or-string: true
                                description: |-
                                  Limits describes the maximum amount of compute resources allowed.
                                  More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                                type: object
                              requests:
                                additionalProperties:
                                  anyOf:
                                    - type: integer
                                    - type: string
                                  pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                  x-kubernetes-int-or-string: true
                                description: |-
                                  Requests describes the minimum amount of compute resources required.
                                  If Requests is omitted for a container, it defaults to Limits if that is explicitly specified,
                                  otherwise to an implementation-defined value. Requests cannot exceed Limits.
                                  More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                                type: object
                            type: object
                          secret:
                            description: |-
                              Optionally enter the name of already existing secret.
                              Secret should have two values: "accesskey" and "secretkey".
                              Required when "ExternalURL" is set.
                            type: string
                          storageSize:
                            description: Defines the storage size for Minio. ie 50Gi
                            pattern: ^([+-]?[0-9.]+)([eEinumkKMGTP]*[-+]?[0-9]*)$
                            type: string
                        type: object
                      nodeSelector:
                        additionalProperties:
                          type: string
                        description: |-
                          NodeSelector is a selector which must be true for the pod to fit on a node.
                          Selector which must match a node's labels for the pod to be scheduled on that node.
                          More info: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/
                        type: object
                      readinessProbe:
                        description: Defines the probe to check if the application is ready to accept traffic.
                        properties:
                          exec:
                            description: Exec specifies a command to execute in the container.
                            properties:
                              command:
                                description: |-
                                  Command is the command line to execute inside the container, the working directory for the
                                  command  is root ('/') in the container's filesystem. The command is simply exec'd, it is
                                  not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use
                                  a shell, you need to explicitly call out to that shell.
                                  Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
                                items:
                                  type: string
                                type: array
                                x-kubernetes-list-type: atomic
                            type: object
                          failureThreshold:
                            description: |-
                              Minimum consecutive failures for the probe to be considered failed after having succeeded.
                              Defaults to 3. Minimum value is 1.
                            format: int32
                            type: integer
                          grpc:
                            description: GRPC specifies a GRPC HealthCheckRequest.
                            properties:
                              port:
                                description: Port number of the gRPC service. Number must be in the range 1 to 65535.
                                format: int32
                                type: integer
                              service:
                                default: ""
                                description: |-
                                  Service is the name of the service to place in the gRPC HealthCheckRequest
                                  (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).

                                  If this is not specified, the default behavior is defined by gRPC.
                                type: string
                            required:
                              - port
                            type: object
                          httpGet:
                            description: HTTPGet specifies an HTTP GET request to perform.
                            properties:
                              host:
                                description: |-
                                  Host name to connect to, defaults to the pod IP. You probably want to set
                                  "Host" in httpHeaders instead.
                                type: string
                              httpHeaders:
                                description: Custom headers to set in the request. HTTP allows repeated headers.
                                items:
                                  description: HTTPHeader describes a custom header to be used in HTTP probes
                                  properties:
                                    name:
                                      description: |-
                                        The header field name.
                                        This will be canonicalized upon output, so case-variant names will be understood as the same header.
                                      type: string
                                    value:
                                      description: The header field value
                                      type: string
                                  required:
                                    - name
                                    - value
                                  type: object
                                type: array
                                x-kubernetes-list-type: atomic
                              path:
                                description: Path to access on the HTTP server.
                                type: string
                              port:
                                anyOf:
                                  - type: integer
                                  - type: string
                                description: |-
                                  Name or number of the port to access on the container.
                                  Number must be in the range 1 to 65535.
                                  Name must be an IANA_SVC_NAME.
                                x-kubernetes-int-or-string: true
                              scheme:
                                description: |-
                                  Scheme to use for connecting to the host.
                                  Defaults to HTTP.
                                type: string
                            required:
                              - port
                            type: object
                          initialDelaySeconds:
                            description: |-
                              Number of seconds after the container has started before liveness probes are initiated.
                              More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                            format: int32
                            type: integer
                          periodSeconds:
                            description: |-
                              How often (in seconds) to perform the probe.
                              Default to 10 seconds. Minimum value is 1.
                            format: int32
                            type: integer
                          successThreshold:
                            description: |-
                              Minimum consecutive successes for the probe to be considered successful after having failed.
                              Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.
                            format: int32
                            type: integer
                          tcpSocket:
                            description: TCPSocket specifies a connection to a TCP port.
                            properties:
                              host:
                                description: 'Optional: Host name to connect to, defaults to the pod IP.'
                                type: string
                              port:
                                anyOf:
                                  - type: integer
                                  - type: string
                                description: |-
                                  Number or name of the port to access on the container.
                                  Number must be in the range 1 to 65535.
                                  Name must be an IANA_SVC_NAME.
                                x-kubernetes-int-or-string: true
                            required:
                              - port
                            type: object
                          terminationGracePeriodSeconds:
                            description: |-
                              Optional duration in seconds the pod needs to terminate gracefully upon probe failure.
                              The grace period is the duration in seconds after the processes running in the pod are sent
                              a termination signal and the time when the processes are forcibly halted with a kill signal.
                              Set this value longer than the expected cleanup time for your process.
                              If this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this
                              value overrides the value provided by the pod spec.
                              Value must be non-negative integer. The value zero indicates stop immediately via
                              the kill signal (no opportunity to shut down).
                              This is a beta field and requires enabling ProbeTerminationGracePeriod feature gate.
                              Minimum value is 1. spec.terminationGracePeriodSeconds is used if unset.
                            format: int64
                            type: integer
                          timeoutSeconds:
                            description: |-
                              Number of seconds after which the probe times out.
                              Defaults to 1 second. Minimum value is 1.
                              More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                            format: int32
                            type: integer
                        type: object
                      replicas:
                        description: |-
                          Replicas defines the number of replicas to use for the Mattermost app servers.
                          Setting this will override the number of replicas set by 'Size'.
                        format: int32
                        type: integer
                      resourceLabels:
                        additionalProperties:
                          type: string
                        type: object
                      resources:
                        description: Defines the resource requests and limits for the Mattermost app server pods.
                        properties:
                          claims:
                            description: |-
                              Claims lists the names of resources, defined in spec.resourceClaims,
                              that are used by this container.

                              This is an alpha field and requires enabling the
                              DynamicResourceAllocation feature gate.

                              This field is immutable. It can only be set for containers.
                            items:
                              description: ResourceClaim references one entry in PodSpec.ResourceClaims.
                              properties:
                                name:
                                  description: |-
                                    Name must match the name of one entry in pod.spec.resourceClaims of
                                    the Pod where this field is used. It makes that resource available
                                    inside a container.
                                  type: string
                                request:
                                  description: |-
                                    Request is the name chosen for a request in the referenced claim.
                                    If empty, everything from the claim is made available, otherwise
                                    only the result of this request.
                                  type: string
                              required:
                                - name
                              type: object
                            type: array
                            x-kubernetes-list-map-keys:
                              - name
                            x-kubernetes-list-type: map
                          limits:
                            additionalProperties:
                              anyOf:
                                - type: integer
                                - type: string
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            description: |-
                              Limits describes the maximum amount of compute resources allowed.
                              More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                            type: object
                          requests:
                            additionalProperties:
                              anyOf:
                                - type: integer
                                - type: string
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            description: |-
                              Requests describes the minimum amount of compute resources required.
                              If Requests is omitted for a container, it defaults to Limits if that is explicitly specified,
                              otherwise to an implementation-defined value. Requests cannot exceed Limits.
                              More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                            type: object
                        type: object
                      serviceAnnotations:
                        additionalProperties:
                          type: string
                        type: object
                      size:
                        description: |-
                          Size defines the size of the ClusterInstallation. This is typically specified in number of users.
                          This will override replica and resource requests/limits appropriately for the provided number of users.
                          This is a write-only field - its value is erased after setting appropriate values of resources.
                          Accepted values are: 100users, 1000users, 5000users, 10000users, 250000users. If replicas and resource
                          requests/limits are not specified, and Size is not provided the configuration for 5000users will be applied.
                          Setting 'Replicas', 'Resources', 'Minio.Replicas', 'Minio.Resource', 'Database.Replicas',
                          or 'Database.Resources' will override the values set by Size.
                          Setting new Size will override previous values regardless if set by Size or manually.
                        type: string
                      useIngressTLS:
                        type: boolean
                      useServiceLoadBalancer:
                        type: boolean
                      version:
                        description: Version defines the ClusterInstallation Docker image version.
                        type: string
                    required:
                      - ingressName
                    type: object
                  status:
                    description: |-
                      Most recent observed status of the Mattermost cluster. Read-only. Not
                      included when requesting from the apiserver, only from the Mattermost
                      Operator API itself. More info:
                      https://github.com/kubernetes/community/blob/master/contributors/devel/api-conventions.md#spec-and-status
                    properties:
                      blueName:
                        description: The name of the blue deployment in BlueGreen
                        type: string
                      endpoint:
                        description: The endpoint to access the Mattermost instance
                        type: string
                      greenName:
                        description: The name of the green deployment in BlueGreen
                        type: string
                      image:
                        description: The image running on the pods in the Mattermost instance
                        type: string
                      migration:
                        description: The status of migration to Mattermost CR.
                        properties:
                          error:
                            type: string
                          status:
                            type: string
                        type: object
                      replicas:
                        description: Total number of non-terminated pods targeted by this Mattermost deployment
                        format: int32
                        type: integer
                      state:
                        description: Represents the running state of the Mattermost instance
                        type: string
                      updatedReplicas:
                        description: |-
                          Total number of non-terminated pods targeted by this Mattermost deployment
                          that are running with the desired image.
                        format: int32
                        type: integer
                      version:
                        description: The version currently running in the Mattermost instance
                        type: string
                    type: object
                required:
                  - spec
                type: object
            served: true
            storage: true
            subresources:
              status: {}
    component:
      version: apiextensions.k8s.io/v1
      kind: CustomResourceDefinition
      schema: ""
  - id: 64815ea3-f2d4-4784-9fc0-fca6eac298e7
    schemaVersion: components.meshery.io/v1beta1
    version: v1.0.0
    displayName: mattermostrestoredbs.mattermost.com
    description: ""
    format: ""
    model:
      id: b3f5bc0d-30f7-607d-6c73-784ddde6cad8
      schemaVersion: models.meshery.io/v1beta1
      version: v1.0.0
      name: kubernetes
      displayName: Kubernetes
      status: enabled
      registrant:
        id: 5bc80e3c-5d43-9eb4-d16c-78a2769247a6
        name: Github
        credential_id: 00000000-0000-0000-0000-000000000000
        type: registry
        sub_type: ""
        kind: github
        status: registered
        user_id: 00000000-0000-0000-0000-000000000000
        created_at: "2025-10-08T09:10:27.395320301Z"
        updated_at: "2025-10-08T09:10:27.395320301Z"
        deleted_at: "0001-01-01T00:00:00Z"
        schemaVersion: ""
      connection_id: 5bc80e3c-5d43-9eb4-d16c-78a2769247a6
      category:
        id: 9ca27d0d-66ce-42a9-8c85-6236563f2ddb
        name: Orchestration & Management
      subCategory: Scheduling & Orchestration
      metadata:
        isAnnotation: false
        primaryColor: '#326CE5'
        secondaryColor: '#7aa1f0'
        shape: circle
        styleOverrides: ""
        svgColor: ui/public/static/img/meshmodels/kubernetes/color/kubernetes-color.svg
        svgComplete: ""
        svgWhite: ui/public/static/img/meshmodels/kubernetes/white/kubernetes-white.svg
      model:
        version: v1.32.0-alpha.3
      components_count: 0
      relationships_count: 0
      components: null
      relationships: null
    styles:
      primaryColor: '#326CE5'
      secondaryColor: '#7aa1f0'
      shape: circle
      svgColor: ui/public/static/img/meshmodels/kubernetes/color/customresourcedefinition-color.svg
      svgComplete: ""
      svgWhite: ui/public/static/img/meshmodels/kubernetes/white/customresourcedefinition-white.svg
    capabilities: []
    status: enabled
    metadata:
      configurationUISchema: ""
      genealogy: ""
      instanceDetails: null
      isAnnotation: false
      isNamespaced: false
      published: false
      source_uri: git://github.com/kubernetes/kubernetes/master/api/openapi-spec/v3
    configuration:
      metadata:
        annotations:
          controller-gen.kubebuilder.io/version: v0.16.5
        name: mattermostrestoredbs.mattermost.com
      spec:
        group: mattermost.com
        names:
          kind: MattermostRestoreDB
          listKind: MattermostRestoreDBList
          plural: mattermostrestoredbs
          singular: mattermostrestoredb
        scope: Namespaced
        versions:
          - additionalPrinterColumns:
              - description: State of Mattermost DB Restore
                jsonPath: .status.state
                name: State
                type: string
              - description: Original DB Replicas
                jsonPath: .status.originalDBReplicas
                name: Original DB Replicas
                type: string
            name: v1alpha1
            schema:
              openAPIV3Schema:
                description: MattermostRestoreDB is the Schema for the mattermostrestoredbs API
                properties:
                  apiVersion:
                    description: |-
                      APIVersion defines the versioned schema of this representation of an object.
                      Servers should convert recognized schemas to the latest internal value, and
                      may reject unrecognized values.
                      More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
                    type: string
                  kind:
                    description: |-
                      Kind is a string value representing the REST resource this object represents.
                      Servers may infer this from the endpoint the client submits requests to.
                      Cannot be updated.
                      In CamelCase.
                      More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                    type: string
                  metadata:
                    type: object
                  spec:
                    description: MattermostRestoreDBSpec defines the desired state of MattermostRestoreDB
                    properties:
                      initBucketURL:
                        description: InitBucketURL defines where the DB backup file is located.
                        type: string
                      mattermostClusterName:
                        description: MattermostClusterName defines the ClusterInstallation name.
                        type: string
                      mattermostDBName:
                        description: |-
                          MattermostDBName defines the database name.
                          Need to set if different from `mattermost`.
                        type: string
                      mattermostDBPassword:
                        description: |-
                          MattermostDBPassword defines the user password to access the database.
                          Need to set if the user is different from the one created by the operator.
                        type: string
                      mattermostDBUser:
                        description: |-
                          MattermostDBUser defines the user to access the database.
                          Need to set if the user is different from `mmuser`.
                        type: string
                      restoreSecret:
                        description: |-
                          RestoreSecret defines the secret that holds the credentials to
                          MySQL Operator be able to download the DB backup file
                        type: string
                    type: object
                  status:
                    description: MattermostRestoreDBStatus defines the observed state of MattermostRestoreDB
                    properties:
                      originalDBReplicas:
                        description: The original number of database replicas. will be used to restore after applying the db restore process.
                        format: int32
                        type: integer
                      state:
                        description: Represents the state of the Mattermost restore Database.
                        type: string
                    type: object
                type: object
            served: true
            storage: true
            subresources:
              status: {}
    component:
      version: apiextensions.k8s.io/v1
      kind: CustomResourceDefinition
      schema: ""
  - id: 2a6ab787-6d67-4844-88a6-b057fb9bb266
    schemaVersion: components.meshery.io/v1beta1
    version: v1.0.0
    displayName: mattermosts.installation.mattermost.com
    description: ""
    format: ""
    model:
      id: b3f5bc0d-30f7-607d-6c73-784ddde6cad8
      schemaVersion: models.meshery.io/v1beta1
      version: v1.0.0
      name: kubernetes
      displayName: Kubernetes
      status: enabled
      registrant:
        id: 5bc80e3c-5d43-9eb4-d16c-78a2769247a6
        name: Github
        credential_id: 00000000-0000-0000-0000-000000000000
        type: registry
        sub_type: ""
        kind: github
        status: registered
        user_id: 00000000-0000-0000-0000-000000000000
        created_at: "2025-10-08T09:10:27.395320301Z"
        updated_at: "2025-10-08T09:10:27.395320301Z"
        deleted_at: "0001-01-01T00:00:00Z"
        schemaVersion: ""
      connection_id: 5bc80e3c-5d43-9eb4-d16c-78a2769247a6
      category:
        id: 9ca27d0d-66ce-42a9-8c85-6236563f2ddb
        name: Orchestration & Management
      subCategory: Scheduling & Orchestration
      metadata:
        isAnnotation: false
        primaryColor: '#326CE5'
        secondaryColor: '#7aa1f0'
        shape: circle
        styleOverrides: ""
        svgColor: ui/public/static/img/meshmodels/kubernetes/color/kubernetes-color.svg
        svgComplete: ""
        svgWhite: ui/public/static/img/meshmodels/kubernetes/white/kubernetes-white.svg
      model:
        version: v1.32.0-alpha.3
      components_count: 0
      relationships_count: 0
      components: null
      relationships: null
    styles:
      primaryColor: '#326CE5'
      secondaryColor: '#7aa1f0'
      shape: circle
      svgColor: ui/public/static/img/meshmodels/kubernetes/color/customresourcedefinition-color.svg
      svgComplete: ""
      svgWhite: ui/public/static/img/meshmodels/kubernetes/white/customresourcedefinition-white.svg
    capabilities: []
    status: enabled
    metadata:
      configurationUISchema: ""
      genealogy: ""
      instanceDetails: null
      isAnnotation: false
      isNamespaced: false
      published: false
      source_uri: git://github.com/kubernetes/kubernetes/master/api/openapi-spec/v3
    configuration:
      metadata:
        annotations:
          controller-gen.kubebuilder.io/version: v0.16.5
        name: mattermosts.installation.mattermost.com
      spec:
        group: installation.mattermost.com
        names:
          kind: Mattermost
          listKind: MattermostList
          plural: mattermosts
          shortNames:
            - mm
          singular: mattermost
        scope: Namespaced
        versions:
          - additionalPrinterColumns:
              - description: State of Mattermost
                jsonPath: .status.state
                name: State
                type: string
              - description: Image of Mattermost
                jsonPath: .status.image
                name: Image
                type: string
              - description: Version of Mattermost
                jsonPath: .status.version
                name: Version
                type: string
              - description: Endpoint
                jsonPath: .status.endpoint
                name: Endpoint
                type: string
            name: v1beta1
            schema:
              openAPIV3Schema:
                description: Mattermost is the Schema for the mattermosts API
                properties:
                  apiVersion:
                    description: |-
                      APIVersion defines the versioned schema of this representation of an object.
                      Servers should convert recognized schemas to the latest internal value, and
                      may reject unrecognized values.
                      More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
                    type: string
                  kind:
                    description: |-
                      Kind is a string value representing the REST resource this object represents.
                      Servers may infer this from the endpoint the client submits requests to.
                      Cannot be updated.
                      In CamelCase.
                      More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                    type: string
                  metadata:
                    type: object
                  spec:
                    description: MattermostSpec defines the desired state of Mattermost
                    properties:
                      awsLoadBalancerController:
                        properties:
                          annotations:
                            additionalProperties:
                              type: string
                            description: Annotations defines annotations passed to the Ingress associated with Mattermost.
                            type: object
                          certificateARN:
                            description: Certificate arn for the ALB, required if SSL enabled
                            type: string
                          enabled:
                            description: An AWS ALB Ingress will be created instead of nginx
                            type: boolean
                          hosts:
                            description: Hosts allows specifying additional domain names for Mattermost to use.
                            items:
                              description: IngressHost specifies additional hosts configuration.
                              properties:
                                hostName:
                                  type: string
                              type: object
                            type: array
                          ingressClassName:
                            description: IngressClassName for your ingress
                            type: string
                          internetFacing:
                            description: Whether the Ingress will be internetfacing, default is false
                            type: boolean
                        type: object
                      database:
                        description: External Services
                        properties:
                          disableReadinessCheck:
                            description: |-
                              DisableReadinessCheck instructs Operator to not add init container responsible for checking DB access.
                              Can be used to define custom init containers specified in `spec.PodExtensions.InitContainers`.
                            type: boolean
                          external:
                            description: Defines the configuration of and external database.
                            properties:
                              secret:
                                description: |-
                                  Secret contains data necessary to connect to the external database.
                                  The Kubernetes Secret should contain:
                                    - Key: DB_CONNECTION_STRING | Value: Full database connection string.
                                  It can also contain optional fields, such as:
                                    - Key: MM_SQLSETTINGS_DATASOURCEREPLICAS | Value: Connection string to read replicas of the database.
                                    - Key: DB_CONNECTION_CHECK_URL | Value: The URL used for checking that the database is accessible.
                                      Omitting this value in the secret will cause Operator to skip adding init container for database check.
                                type: string
                            type: object
                          operatorManaged:
                            description: Defines the configuration of database managed by Kubernetes operator.
                            properties:
                              backupRemoteDeletePolicy:
                                description: Defines the backup retention policy.
                                type: string
                              backupRestoreSecretName:
                                description: Defines the secret to be used when performing a database restore.
                                type: string
                              backupSchedule:
                                description: Defines the interval for backups in cron expression format.
                                type: string
                              backupSecretName:
                                description: Defines the secret to be used for uploading/restoring backup.
                                type: string
                              backupURL:
                                description: Defines the object storage url for uploading backups.
                                type: string
                              initBucketURL:
                                description: |-
                                  Defines the AWS S3 bucket where the Database Backup is stored.
                                  The operator will download the file to restore the data.
                                type: string
                              replicas:
                                description: |-
                                  Defines the number of database replicas.
                                  For redundancy use at least 2 replicas.
                                  Setting this will override the number of replicas set by 'Size'.
                                format: int32
                                type: integer
                              resources:
                                description: Defines the resource requests and limits for the database pods.
                                properties:
                                  claims:
                                    description: |-
                                      Claims lists the names of resources, defined in spec.resourceClaims,
                                      that are used by this container.

                                      This is an alpha field and requires enabling the
                                      DynamicResourceAllocation feature gate.

                                      This field is immutable. It can only be set for containers.
                                    items:
                                      description: ResourceClaim references one entry in PodSpec.ResourceClaims.
                                      properties:
                                        name:
                                          description: |-
                                            Name must match the name of one entry in pod.spec.resourceClaims of
                                            the Pod where this field is used. It makes that resource available
                                            inside a container.
                                          type: string
                                        request:
                                          description: |-
                                            Request is the name chosen for a request in the referenced claim.
                                            If empty, everything from the claim is made available, otherwise
                                            only the result of this request.
                                          type: string
                                      required:
                                        - name
                                      type: object
                                    type: array
                                    x-kubernetes-list-map-keys:
                                      - name
                                    x-kubernetes-list-type: map
                                  limits:
                                    additionalProperties:
                                      anyOf:
                                        - type: integer
                                        - type: string
                                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                      x-kubernetes-int-or-string: true
                                    description: |-
                                      Limits describes the maximum amount of compute resources allowed.
                                      More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                                    type: object
                                  requests:
                                    additionalProperties:
                                      anyOf:
                                        - type: integer
                                        - type: string
                                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                      x-kubernetes-int-or-string: true
                                    description: |-
                                      Requests describes the minimum amount of compute resources required.
                                      If Requests is omitted for a container, it defaults to Limits if that is explicitly specified,
                                      otherwise to an implementation-defined value. Requests cannot exceed Limits.
                                      More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                                    type: object
                                type: object
                              storageSize:
                                description: Defines the storage size for the database. ie 50Gi
                                pattern: ^([+-]?[0-9.]+)([eEinumkKMGTP]*[-+]?[0-9]*)$
                                type: string
                              type:
                                description: Defines the type of database to use for an Operator-Managed database.
                                type: string
                              version:
                                description: Defines the cluster version for the database to use
                                type: string
                            type: object
                        type: object
                      deploymentTemplate:
                        description: DeploymentTemplate defines configuration for the template for Mattermost deployment.
                        properties:
                          deploymentStrategyType:
                            description: |-
                              Defines the deployment strategy type for the mattermost deployment.
                              Accepted values are: "Recreate" or "RollingUpdate". Default is RollingUpdate.
                            type: string
                          revisionHistoryLimit:
                            description: Defines the revision history limit for the mattermost deployment.
                            format: int32
                            type: integer
                        type: object
                      dnsConfig:
                        description: Custom DNS configuration to use for the Mattermost Installation pods.
                        properties:
                          nameservers:
                            description: |-
                              A list of DNS name server IP addresses.
                              This will be appended to the base nameservers generated from DNSPolicy.
                              Duplicated nameservers will be removed.
                            items:
                              type: string
                            type: array
                            x-kubernetes-list-type: atomic
                          options:
                            description: |-
                              A list of DNS resolver options.
                              This will be merged with the base options generated from DNSPolicy.
                              Duplicated entries will be removed. Resolution options given in Options
                              will override those that appear in the base DNSPolicy.
                            items:
                              description: PodDNSConfigOption defines DNS resolver options of a pod.
                              properties:
                                name:
                                  description: |-
                                    Name is this DNS resolver option's name.
                                    Required.
                                  type: string
                                value:
                                  description: Value is this DNS resolver option's value.
                                  type: string
                              type: object
                            type: array
                            x-kubernetes-list-type: atomic
                          searches:
                            description: |-
                              A list of DNS search domains for host-name lookup.
                              This will be appended to the base search paths generated from DNSPolicy.
                              Duplicated search paths will be removed.
                            items:
                              type: string
                            type: array
                            x-kubernetes-list-type: atomic
                        type: object
                      dnsPolicy:
                        description: Custom DNS policy to use for the Mattermost Installation pods.
                        type: string
                      elasticSearch:
                        description: ElasticSearch defines the ElasticSearch configuration for Mattermost.
                        properties:
                          host:
                            type: string
                          password:
                            type: string
                          username:
                            type: string
                        type: object
                      fileStore:
                        description: FileStore defines the file store configuration for Mattermost.
                        properties:
                          external:
                            description: Defines the configuration of an external file store.
                            properties:
                              bucket:
                                description: Set to the bucket name of your external MinIO or S3.
                                type: string
                              secret:
                                description: |-
                                  Optionally enter the name of already existing secret.
                                  Secret should have two values: "accesskey" and "secretkey".
                                type: string
                              url:
                                description: Set to use an external MinIO deployment or S3.
                                type: string
                              useServiceAccount:
                                description: Optionally use service account with IAM role to access AWS services, like S3.
                                type: boolean
                            type: object
                          externalVolume:
                            description: Defines the configuration of externally managed PVC backed storage.
                            properties:
                              volumeClaimName:
                                description: The name of the matching volume claim for the externally managed volume.
                                type: string
                            type: object
                          local:
                            description: Defines the configuration of PVC backed storage (local). This is NOT recommended for production environments.
                            properties:
                              enabled:
                                description: Set to use local (PVC) storage, require explicit enabled to prevent accidental misconfiguration.
                                type: boolean
                              storageSize:
                                description: Defines the storage size for the PVC. (default 50Gi)
                                pattern: ^([+-]?[0-9.]+)([eEinumkKMGTP]*[-+]?[0-9]*)$
                                type: string
                            required:
                              - enabled
                            type: object
                          operatorManaged:
                            description: Defines the configuration of file store managed by Kubernetes operator.
                            properties:
                              replicas:
                                description: |-
                                  Defines the number of Minio replicas.
                                  Supply 1 to run Minio in standalone mode with no redundancy.
                                  Supply 4 or more to run Minio in distributed mode.
                                  Note that it is not possible to upgrade Minio from standalone to distributed mode.
                                  Setting this will override the number of replicas set by 'Size'.
                                  More info: https://docs.min.io/docs/distributed-minio-quickstart-guide.html
                                format: int32
                                type: integer
                              resources:
                                description: Defines the resource requests and limits for the Minio pods.
                                properties:
                                  claims:
                                    description: |-
                                      Claims lists the names of resources, defined in spec.resourceClaims,
                                      that are used by this container.

                                      This is an alpha field and requires enabling the
                                      DynamicResourceAllocation feature gate.

                                      This field is immutable. It can only be set for containers.
                                    items:
                                      description: ResourceClaim references one entry in PodSpec.ResourceClaims.
                                      properties:
                                        name:
                                          description: |-
                                            Name must match the name of one entry in pod.spec.resourceClaims of
                                            the Pod where this field is used. It makes that resource available
                                            inside a container.
                                          type: string
                                        request:
                                          description: |-
                                            Request is the name chosen for a request in the referenced claim.
                                            If empty, everything from the claim is made available, otherwise
                                            only the result of this request.
                                          type: string
                                      required:
                                        - name
                                      type: object
                                    type: array
                                    x-kubernetes-list-map-keys:
                                      - name
                                    x-kubernetes-list-type: map
                                  limits:
                                    additionalProperties:
                                      anyOf:
                                        - type: integer
                                        - type: string
                                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                      x-kubernetes-int-or-string: true
                                    description: |-
                                      Limits describes the maximum amount of compute resources allowed.
                                      More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                                    type: object
                                  requests:
                                    additionalProperties:
                                      anyOf:
                                        - type: integer
                                        - type: string
                                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                      x-kubernetes-int-or-string: true
                                    description: |-
                                      Requests describes the minimum amount of compute resources required.
                                      If Requests is omitted for a container, it defaults to Limits if that is explicitly specified,
                                      otherwise to an implementation-defined value. Requests cannot exceed Limits.
                                      More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                                    type: object
                                type: object
                              storageSize:
                                description: Defines the storage size for Minio. ie 50Gi
                                pattern: ^([+-]?[0-9.]+)([eEinumkKMGTP]*[-+]?[0-9]*)$
                                type: string
                            type: object
                        type: object
                      image:
                        description: Image defines the Mattermost Docker image.
                        type: string
                      imagePullPolicy:
                        description: Specify Mattermost deployment pull policy.
                        type: string
                      imagePullSecrets:
                        description: Specify Mattermost image pull secrets.
                        items:
                          description: |-
                            LocalObjectReference contains enough information to let you locate the
                            referenced object inside the same namespace.
                          properties:
                            name:
                              default: ""
                              description: |-
                                Name of the referent.
                                This field is effectively required, but due to backwards compatibility is
                                allowed to be empty. Instances of this type with an empty value here are
                                almost certainly wrong.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              type: string
                          type: object
                          x-kubernetes-map-type: atomic
                        type: array
                      ingress:
                        description: Ingress defines configuration for Ingress resource created by the Operator.
                        properties:
                          annotations:
                            additionalProperties:
                              type: string
                            description: Annotations defines annotations passed to the Ingress associated with Mattermost.
                            type: object
                          enabled:
                            description: |-
                              Enabled determines whether the Operator should create Ingress resource or not.
                              Disabling ingress on existing installation will cause Operator to remove it.
                            type: boolean
                          host:
                            description: Host defines the Ingress host to be used when creating the ingress rules.
                            type: string
                          hosts:
                            description: Hosts allows specifying additional domain names for Mattermost to use.
                            items:
                              description: IngressHost specifies additional hosts configuration.
                              properties:
                                hostName:
                                  type: string
                              type: object
                            type: array
                          ingressClass:
                            description: IngressClass will be set on Ingress resource to associate it with specified IngressClass resource.
                            type: string
                          tlsSecret:
                            description: |-
                              TLSSecret specifies secret used for configuring TLS for Ingress.
                              If empty TLS will not be configured.
                            type: string
                        required:
                          - enabled
                        type: object
                      ingressAnnotations:
                        additionalProperties:
                          type: string
                        description: |-
                          IngressAnnotations defines annotations passed to the Ingress associated with Mattermost.
                          Deprecated: Use Spec.Ingress.Annotations.
                        type: object
                      ingressName:
                        description: |-
                          IngressName defines the host to be used when creating the ingress rules.
                          Deprecated: Use Spec.Ingress.Host instead.
                        type: string
                      jobServer:
                        description: JobServer defines configuration for the Mattermost job server.
                        properties:
                          dedicatedJobServer:
                            description: |-
                              Determines whether to create a dedicated Mattermost server deployment
                              which is configured to run scheduled jobs. This deployment will recieve
                              no user traffic and the primary Mattermost deployment will no longer be
                              configured to run jobs.
                            type: boolean
                        type: object
                      licenseSecret:
                        description: LicenseSecret is the name of the secret containing a Mattermost license.
                        type: string
                      mattermostEnv:
                        description: Optional environment variables to set in the Mattermost application pods.
                        items:
                          description: EnvVar represents an environment variable present in a Container.
                          properties:
                            name:
                              description: Name of the environment variable. Must be a C_IDENTIFIER.
                              type: string
                            value:
                              description: |-
                                Variable references $(VAR_NAME) are expanded
                                using the previously defined environment variables in the container and
                                any service environment variables. If a variable cannot be resolved,
                                the reference in the input string will be unchanged. Double $$ are reduced
                                to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e.
                                "$$(VAR_NAME)" will produce the string literal "$(VAR_NAME)".
                                Escaped references will never be expanded, regardless of whether the variable
                                exists or not.
                                Defaults to "".
                              type: string
                            valueFrom:
                              description: Source for the environment variable's value. Cannot be used if value is not empty.
                              properties:
                                configMapKeyRef:
                                  description: Selects a key of a ConfigMap.
                                  properties:
                                    key:
                                      description: The key to select.
                                      type: string
                                    name:
                                      default: ""
                                      description: |-
                                        Name of the referent.
                                        This field is effectively required, but due to backwards compatibility is
                                        allowed to be empty. Instances of this type with an empty value here are
                                        almost certainly wrong.
                                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                      type: string
                                    optional:
                                      description: Specify whether the ConfigMap or its key must be defined
                                      type: boolean
                                  required:
                                    - key
                                  type: object
                                  x-kubernetes-map-type: atomic
                                fieldRef:
                                  description: |-
                                    Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`,
                                    spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.
                                  properties:
                                    apiVersion:
                                      description: Version of the schema the FieldPath is written in terms of, defaults to "v1".
                                      type: string
                                    fieldPath:
                                      description: Path of the field to select in the specified API version.
                                      type: string
                                  required:
                                    - fieldPath
                                  type: object
                                  x-kubernetes-map-type: atomic
                                resourceFieldRef:
                                  description: |-
                                    Selects a resource of the container: only resources limits and requests
                                    (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.
                                  properties:
                                    containerName:
                                      description: 'Container name: required for volumes, optional for env vars'
                                      type: string
                                    divisor:
                                      anyOf:
                                        - type: integer
                                        - type: string
                                      description: Specifies the output format of the exposed resources, defaults to "1"
                                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                      x-kubernetes-int-or-string: true
                                    resource:
                                      description: 'Required: resource to select'
                                      type: string
                                  required:
                                    - resource
                                  type: object
                                  x-kubernetes-map-type: atomic
                                secretKeyRef:
                                  description: Selects a key of a secret in the pod's namespace
                                  properties:
                                    key:
                                      description: The key of the secret to select from.  Must be a valid secret key.
                                      type: string
                                    name:
                                      default: ""
                                      description: |-
                                        Name of the referent.
                                        This field is effectively required, but due to backwards compatibility is
                                        allowed to be empty. Instances of this type with an empty value here are
                                        almost certainly wrong.
                                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                      type: string
                                    optional:
                                      description: Specify whether the Secret or its key must be defined
                                      type: boolean
                                  required:
                                    - key
                                  type: object
                                  x-kubernetes-map-type: atomic
                              type: object
                          required:
                            - name
                          type: object
                        type: array
                      podExtensions:
                        description: |-
                          PodExtensions specify custom extensions for Mattermost pods.
                          This can be used for custom readiness checks etc.
                          These settings generally don't need to be changed.
                        properties:
                          containerPorts:
                            description: |-
                              Additional Container Ports injected into pod's main container.
                              The setting does not override ContainerPorts defined by the Operator.
                            items:
                              description: ContainerPort represents a network port in a single container.
                              properties:
                                containerPort:
                                  description: |-
                                    Number of port to expose on the pod's IP address.
                                    This must be a valid port number, 0 < x < 65536.
                                  format: int32
                                  type: integer
                                hostIP:
                                  description: What host IP to bind the external port to.
                                  type: string
                                hostPort:
                                  description: |-
                                    Number of port to expose on the host.
                                    If specified, this must be a valid port number, 0 < x < 65536.
                                    If HostNetwork is specified, this must match ContainerPort.
                                    Most containers do not need this.
                                  format: int32
                                  type: integer
                                name:
                                  description: |-
                                    If specified, this must be an IANA_SVC_NAME and unique within the pod. Each
                                    named port in a pod must have a unique name. Name for the port that can be
                                    referred to by services.
                                  type: string
                                protocol:
                                  default: TCP
                                  description: |-
                                    Protocol for port. Must be UDP, TCP, or SCTP.
                                    Defaults to "TCP".
                                  type: string
                              required:
                                - containerPort
                              type: object
                            type: array
                          initContainers:
                            description: |-
                              Additional InitContainers injected into pods.
                              The setting does not override InitContainers defined by the Operator.
                            items:
                              description: A single application container that you want to run within a pod.
                              properties:
                                args:
                                  description: |-
                                    Arguments to the entrypoint.
                                    The container image's CMD is used if this is not provided.
                                    Variable references $(VAR_NAME) are expanded using the container's environment. If a variable
                                    cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced
                                    to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)" will
                                    produce the string literal "$(VAR_NAME)". Escaped references will never be expanded, regardless
                                    of whether the variable exists or not. Cannot be updated.
                                    More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell
                                  items:
                                    type: string
                                  type: array
                                  x-kubernetes-list-type: atomic
                                command:
                                  description: |-
                                    Entrypoint array. Not executed within a shell.
                                    The container image's ENTRYPOINT is used if this is not provided.
                                    Variable references $(VAR_NAME) are expanded using the container's environment. If a variable
                                    cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced
                                    to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)" will
                                    produce the string literal "$(VAR_NAME)". Escaped references will never be expanded, regardless
                                    of whether the variable exists or not. Cannot be updated.
                                    More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell
                                  items:
                                    type: string
                                  type: array
                                  x-kubernetes-list-type: atomic
                                env:
                                  description: |-
                                    List of environment variables to set in the container.
                                    Cannot be updated.
                                  items:
                                    description: EnvVar represents an environment variable present in a Container.
                                    properties:
                                      name:
                                        description: Name of the environment variable. Must be a C_IDENTIFIER.
                                        type: string
                                      value:
                                        description: |-
                                          Variable references $(VAR_NAME) are expanded
                                          using the previously defined environment variables in the container and
                                          any service environment variables. If a variable cannot be resolved,
                                          the reference in the input string will be unchanged. Double $$ are reduced
                                          to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e.
                                          "$$(VAR_NAME)" will produce the string literal "$(VAR_NAME)".
                                          Escaped references will never be expanded, regardless of whether the variable
                                          exists or not.
                                          Defaults to "".
                                        type: string
                                      valueFrom:
                                        description: Source for the environment variable's value. Cannot be used if value is not empty.
                                        properties:
                                          configMapKeyRef:
                                            description: Selects a key of a ConfigMap.
                                            properties:
                                              key:
                                                description: The key to select.
                                                type: string
                                              name:
                                                default: ""
                                                description: |-
                                                  Name of the referent.
                                                  This field is effectively required, but due to backwards compatibility is
                                                  allowed to be empty. Instances of this type with an empty value here are
                                                  almost certainly wrong.
                                                  More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                type: string
                                              optional:
                                                description: Specify whether the ConfigMap or its key must be defined
                                                type: boolean
                                            required:
                                              - key
                                            type: object
                                            x-kubernetes-map-type: atomic
                                          fieldRef:
                                            description: |-
                                              Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`,
                                              spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.
                                            properties:
                                              apiVersion:
                                                description: Version of the schema the FieldPath is written in terms of, defaults to "v1".
                                                type: string
                                              fieldPath:
                                                description: Path of the field to select in the specified API version.
                                                type: string
                                            required:
                                              - fieldPath
                                            type: object
                                            x-kubernetes-map-type: atomic
                                          resourceFieldRef:
                                            description: |-
                                              Selects a resource of the container: only resources limits and requests
                                              (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.
                                            properties:
                                              containerName:
                                                description: 'Container name: required for volumes, optional for env vars'
                                                type: string
                                              divisor:
                                                anyOf:
                                                  - type: integer
                                                  - type: string
                                                description: Specifies the output format of the exposed resources, defaults to "1"
                                                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                                x-kubernetes-int-or-string: true
                                              resource:
                                                description: 'Required: resource to select'
                                                type: string
                                            required:
                                              - resource
                                            type: object
                                            x-kubernetes-map-type: atomic
                                          secretKeyRef:
                                            description: Selects a key of a secret in the pod's namespace
                                            properties:
                                              key:
                                                description: The key of the secret to select from.  Must be a valid secret key.
                                                type: string
                                              name:
                                                default: ""
                                                description: |-
                                                  Name of the referent.
                                                  This field is effectively required, but due to backwards compatibility is
                                                  allowed to be empty. Instances of this type with an empty value here are
                                                  almost certainly wrong.
                                                  More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                type: string
                                              optional:
                                                description: Specify whether the Secret or its key must be defined
                                                type: boolean
                                            required:
                                              - key
                                            type: object
                                            x-kubernetes-map-type: atomic
                                        type: object
                                    required:
                                      - name
                                    type: object
                                  type: array
                                  x-kubernetes-list-map-keys:
                                    - name
                                  x-kubernetes-list-type: map
                                envFrom:
                                  description: |-
                                    List of sources to populate environment variables in the container.
                                    The keys defined within a source must be a C_IDENTIFIER. All invalid keys
                                    will be reported as an event when the container is starting. When a key exists in multiple
                                    sources, the value associated with the last source will take precedence.
                                    Values defined by an Env with a duplicate key will take precedence.
                                    Cannot be updated.
                                  items:
                                    description: EnvFromSource represents the source of a set of ConfigMaps or Secrets
                                    properties:
                                      configMapRef:
                                        description: The ConfigMap to select from
                                        properties:
                                          name:
                                            default: ""
                                            description: |-
                                              Name of the referent.
                                              This field is effectively required, but due to backwards compatibility is
                                              allowed to be empty. Instances of this type with an empty value here are
                                              almost certainly wrong.
                                              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                            type: string
                                          optional:
                                            description: Specify whether the ConfigMap must be defined
                                            type: boolean
                                        type: object
                                        x-kubernetes-map-type: atomic
                                      prefix:
                                        description: Optional text to prepend to the name of each environment variable. Must be a C_IDENTIFIER.
                                        type: string
                                      secretRef:
                                        description: The Secret to select from
                                        properties:
                                          name:
                                            default: ""
                                            description: |-
                                              Name of the referent.
                                              This field is effectively required, but due to backwards compatibility is
                                              allowed to be empty. Instances of this type with an empty value here are
                                              almost certainly wrong.
                                              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                            type: string
                                          optional:
                                            description: Specify whether the Secret must be defined
                                            type: boolean
                                        type: object
                                        x-kubernetes-map-type: atomic
                                    type: object
                                  type: array
                                  x-kubernetes-list-type: atomic
                                image:
                                  description: |-
                                    Container image name.
                                    More info: https://kubernetes.io/docs/concepts/containers/images
                                    This field is optional to allow higher level config management to default or override
                                    container images in workload controllers like Deployments and StatefulSets.
                                  type: string
                                imagePullPolicy:
                                  description: |-
                                    Image pull policy.
                                    One of Always, Never, IfNotPresent.
                                    Defaults to Always if :latest tag is specified, or IfNotPresent otherwise.
                                    Cannot be updated.
                                    More info: https://kubernetes.io/docs/concepts/containers/images#updating-images
                                  type: string
                                lifecycle:
                                  description: |-
                                    Actions that the management system should take in response to container lifecycle events.
                                    Cannot be updated.
                                  properties:
                                    postStart:
                                      description: |-
                                        PostStart is called immediately after a container is created. If the handler fails,
                                        the container is terminated and restarted according to its restart policy.
                                        Other management of the container blocks until the hook completes.
                                        More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks
                                      properties:
                                        exec:
                                          description: Exec specifies a command to execute in the container.
                                          properties:
                                            command:
                                              description: |-
                                                Command is the command line to execute inside the container, the working directory for the
                                                command  is root ('/') in the container's filesystem. The command is simply exec'd, it is
                                                not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use
                                                a shell, you need to explicitly call out to that shell.
                                                Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
                                              items:
                                                type: string
                                              type: array
                                              x-kubernetes-list-type: atomic
                                          type: object
                                        httpGet:
                                          description: HTTPGet specifies an HTTP GET request to perform.
                                          properties:
                                            host:
                                              description: |-
                                                Host name to connect to, defaults to the pod IP. You probably want to set
                                                "Host" in httpHeaders instead.
                                              type: string
                                            httpHeaders:
                                              description: Custom headers to set in the request. HTTP allows repeated headers.
                                              items:
                                                description: HTTPHeader describes a custom header to be used in HTTP probes
                                                properties:
                                                  name:
                                                    description: |-
                                                      The header field name.
                                                      This will be canonicalized upon output, so case-variant names will be understood as the same header.
                                                    type: string
                                                  value:
                                                    description: The header field value
                                                    type: string
                                                required:
                                                  - name
                                                  - value
                                                type: object
                                              type: array
                                              x-kubernetes-list-type: atomic
                                            path:
                                              description: Path to access on the HTTP server.
                                              type: string
                                            port:
                                              anyOf:
                                                - type: integer
                                                - type: string
                                              description: |-
                                                Name or number of the port to access on the container.
                                                Number must be in the range 1 to 65535.
                                                Name must be an IANA_SVC_NAME.
                                              x-kubernetes-int-or-string: true
                                            scheme:
                                              description: |-
                                                Scheme to use for connecting to the host.
                                                Defaults to HTTP.
                                              type: string
                                          required:
                                            - port
                                          type: object
                                        sleep:
                                          description: Sleep represents a duration that the container should sleep.
                                          properties:
                                            seconds:
                                              description: Seconds is the number of seconds to sleep.
                                              format: int64
                                              type: integer
                                          required:
                                            - seconds
                                          type: object
                                        tcpSocket:
                                          description: |-
                                            Deprecated. TCPSocket is NOT supported as a LifecycleHandler and kept
                                            for backward compatibility. There is no validation of this field and
                                            lifecycle hooks will fail at runtime when it is specified.
                                          properties:
                                            host:
                                              description: 'Optional: Host name to connect to, defaults to the pod IP.'
                                              type: string
                                            port:
                                              anyOf:
                                                - type: integer
                                                - type: string
                                              description: |-
                                                Number or name of the port to access on the container.
                                                Number must be in the range 1 to 65535.
                                                Name must be an IANA_SVC_NAME.
                                              x-kubernetes-int-or-string: true
                                          required:
                                            - port
                                          type: object
                                      type: object
                                    preStop:
                                      description: |-
                                        PreStop is called immediately before a container is terminated due to an
                                        API request or management event such as liveness/startup probe failure,
                                        preemption, resource contention, etc. The handler is not called if the
                                        container crashes or exits. The Pod's termination grace period countdown begins before the
                                        PreStop hook is executed. Regardless of the outcome of the handler, the
                                        container will eventually terminate within the Pod's termination grace
                                        period (unless delayed by finalizers). Other management of the container blocks until the hook completes
                                        or until the termination grace period is reached.
                                        More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks
                                      properties:
                                        exec:
                                          description: Exec specifies a command to execute in the container.
                                          properties:
                                            command:
                                              description: |-
                                                Command is the command line to execute inside the container, the working directory for the
                                                command  is root ('/') in the container's filesystem. The command is simply exec'd, it is
                                                not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use
                                                a shell, you need to explicitly call out to that shell.
                                                Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
                                              items:
                                                type: string
                                              type: array
                                              x-kubernetes-list-type: atomic
                                          type: object
                                        httpGet:
                                          description: HTTPGet specifies an HTTP GET request to perform.
                                          properties:
                                            host:
                                              description: |-
                                                Host name to connect to, defaults to the pod IP. You probably want to set
                                                "Host" in httpHeaders instead.
                                              type: string
                                            httpHeaders:
                                              description: Custom headers to set in the request. HTTP allows repeated headers.
                                              items:
                                                description: HTTPHeader describes a custom header to be used in HTTP probes
                                                properties:
                                                  name:
                                                    description: |-
                                                      The header field name.
                                                      This will be canonicalized upon output, so case-variant names will be understood as the same header.
                                                    type: string
                                                  value:
                                                    description: The header field value
                                                    type: string
                                                required:
                                                  - name
                                                  - value
                                                type: object
                                              type: array
                                              x-kubernetes-list-type: atomic
                                            path:
                                              description: Path to access on the HTTP server.
                                              type: string
                                            port:
                                              anyOf:
                                                - type: integer
                                                - type: string
                                              description: |-
                                                Name or number of the port to access on the container.
                                                Number must be in the range 1 to 65535.
                                                Name must be an IANA_SVC_NAME.
                                              x-kubernetes-int-or-string: true
                                            scheme:
                                              description: |-
                                                Scheme to use for connecting to the host.
                                                Defaults to HTTP.
                                              type: string
                                          required:
                                            - port
                                          type: object
                                        sleep:
                                          description: Sleep represents a duration that the container should sleep.
                                          properties:
                                            seconds:
                                              description: Seconds is the number of seconds to sleep.
                                              format: int64
                                              type: integer
                                          required:
                                            - seconds
                                          type: object
                                        tcpSocket:
                                          description: |-
                                            Deprecated. TCPSocket is NOT supported as a LifecycleHandler and kept
                                            for backward compatibility. There is no validation of this field and
                                            lifecycle hooks will fail at runtime when it is specified.
                                          properties:
                                            host:
                                              description: 'Optional: Host name to connect to, defaults to the pod IP.'
                                              type: string
                                            port:
                                              anyOf:
                                                - type: integer
                                                - type: string
                                              description: |-
                                                Number or name of the port to access on the container.
                                                Number must be in the range 1 to 65535.
                                                Name must be an IANA_SVC_NAME.
                                              x-kubernetes-int-or-string: true
                                          required:
                                            - port
                                          type: object
                                      type: object
                                    stopSignal:
                                      description: |-
                                        StopSignal defines which signal will be sent to a container when it is being stopped.
                                        If not specified, the default is defined by the container runtime in use.
                                        StopSignal can only be set for Pods with a non-empty .spec.os.name
                                      type: string
                                  type: object
                                livenessProbe:
                                  description: |-
                                    Periodic probe of container liveness.
                                    Container will be restarted if the probe fails.
                                    Cannot be updated.
                                    More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                                  properties:
                                    exec:
                                      description: Exec specifies a command to execute in the container.
                                      properties:
                                        command:
                                          description: |-
                                            Command is the command line to execute inside the container, the working directory for the
                                            command  is root ('/') in the container's filesystem. The command is simply exec'd, it is
                                            not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use
                                            a shell, you need to explicitly call out to that shell.
                                            Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
                                          items:
                                            type: string
                                          type: array
                                          x-kubernetes-list-type: atomic
                                      type: object
                                    failureThreshold:
                                      description: |-
                                        Minimum consecutive failures for the probe to be considered failed after having succeeded.
                                        Defaults to 3. Minimum value is 1.
                                      format: int32
                                      type: integer
                                    grpc:
                                      description: GRPC specifies a GRPC HealthCheckRequest.
                                      properties:
                                        port:
                                          description: Port number of the gRPC service. Number must be in the range 1 to 65535.
                                          format: int32
                                          type: integer
                                        service:
                                          default: ""
                                          description: |-
                                            Service is the name of the service to place in the gRPC HealthCheckRequest
                                            (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).

                                            If this is not specified, the default behavior is defined by gRPC.
                                          type: string
                                      required:
                                        - port
                                      type: object
                                    httpGet:
                                      description: HTTPGet specifies an HTTP GET request to perform.
                                      properties:
                                        host:
                                          description: |-
                                            Host name to connect to, defaults to the pod IP. You probably want to set
                                            "Host" in httpHeaders instead.
                                          type: string
                                        httpHeaders:
                                          description: Custom headers to set in the request. HTTP allows repeated headers.
                                          items:
                                            description: HTTPHeader describes a custom header to be used in HTTP probes
                                            properties:
                                              name:
                                                description: |-
                                                  The header field name.
                                                  This will be canonicalized upon output, so case-variant names will be understood as the same header.
                                                type: string
                                              value:
                                                description: The header field value
                                                type: string
                                            required:
                                              - name
                                              - value
                                            type: object
                                          type: array
                                          x-kubernetes-list-type: atomic
                                        path:
                                          description: Path to access on the HTTP server.
                                          type: string
                                        port:
                                          anyOf:
                                            - type: integer
                                            - type: string
                                          description: |-
                                            Name or number of the port to access on the container.
                                            Number must be in the range 1 to 65535.
                                            Name must be an IANA_SVC_NAME.
                                          x-kubernetes-int-or-string: true
                                        scheme:
                                          description: |-
                                            Scheme to use for connecting to the host.
                                            Defaults to HTTP.
                                          type: string
                                      required:
                                        - port
                                      type: object
                                    initialDelaySeconds:
                                      description: |-
                                        Number of seconds after the container has started before liveness probes are initiated.
                                        More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                                      format: int32
                                      type: integer
                                    periodSeconds:
                                      description: |-
                                        How often (in seconds) to perform the probe.
                                        Default to 10 seconds. Minimum value is 1.
                                      format: int32
                                      type: integer
                                    successThreshold:
                                      description: |-
                                        Minimum consecutive successes for the probe to be considered successful after having failed.
                                        Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.
                                      format: int32
                                      type: integer
                                    tcpSocket:
                                      description: TCPSocket specifies a connection to a TCP port.
                                      properties:
                                        host:
                                          description: 'Optional: Host name to connect to, defaults to the pod IP.'
                                          type: string
                                        port:
                                          anyOf:
                                            - type: integer
                                            - type: string
                                          description: |-
                                            Number or name of the port to access on the container.
                                            Number must be in the range 1 to 65535.
                                            Name must be an IANA_SVC_NAME.
                                          x-kubernetes-int-or-string: true
                                      required:
                                        - port
                                      type: object
                                    terminationGracePeriodSeconds:
                                      description: |-
                                        Optional duration in seconds the pod needs to terminate gracefully upon probe failure.
                                        The grace period is the duration in seconds after the processes running in the pod are sent
                                        a termination signal and the time when the processes are forcibly halted with a kill signal.
                                        Set this value longer than the expected cleanup time for your process.
                                        If this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this
                                        value overrides the value provided by the pod spec.
                                        Value must be non-negative integer. The value zero indicates stop immediately via
                                        the kill signal (no opportunity to shut down).
                                        This is a beta field and requires enabling ProbeTerminationGracePeriod feature gate.
                                        Minimum value is 1. spec.terminationGracePeriodSeconds is used if unset.
                                      format: int64
                                      type: integer
                                    timeoutSeconds:
                                      description: |-
                                        Number of seconds after which the probe times out.
                                        Defaults to 1 second. Minimum value is 1.
                                        More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                                      format: int32
                                      type: integer
                                  type: object
                                name:
                                  description: |-
                                    Name of the container specified as a DNS_LABEL.
                                    Each container in a pod must have a unique name (DNS_LABEL).
                                    Cannot be updated.
                                  type: string
                                ports:
                                  description: |-
                                    List of ports to expose from the container. Not specifying a port here
                                    DOES NOT prevent that port from being exposed. Any port which is
                                    listening on the default "0.0.0.0" address inside a container will be
                                    accessible from the network.
                                    Modifying this array with strategic merge patch may corrupt the data.
                                    For more information See https://github.com/kubernetes/kubernetes/issues/108255.
                                    Cannot be updated.
                                  items:
                                    description: ContainerPort represents a network port in a single container.
                                    properties:
                                      containerPort:
                                        description: |-
                                          Number of port to expose on the pod's IP address.
                                          This must be a valid port number, 0 < x < 65536.
                                        format: int32
                                        type: integer
                                      hostIP:
                                        description: What host IP to bind the external port to.
                                        type: string
                                      hostPort:
                                        description: |-
                                          Number of port to expose on the host.
                                          If specified, this must be a valid port number, 0 < x < 65536.
                                          If HostNetwork is specified, this must match ContainerPort.
                                          Most containers do not need this.
                                        format: int32
                                        type: integer
                                      name:
                                        description: |-
                                          If specified, this must be an IANA_SVC_NAME and unique within the pod. Each
                                          named port in a pod must have a unique name. Name for the port that can be
                                          referred to by services.
                                        type: string
                                      protocol:
                                        default: TCP
                                        description: |-
                                          Protocol for port. Must be UDP, TCP, or SCTP.
                                          Defaults to "TCP".
                                        type: string
                                    required:
                                      - containerPort
                                    type: object
                                  type: array
                                  x-kubernetes-list-map-keys:
                                    - containerPort
                                    - protocol
                                  x-kubernetes-list-type: map
                                readinessProbe:
                                  description: |-
                                    Periodic probe of container service readiness.
                                    Container will be removed from service endpoints if the probe fails.
                                    Cannot be updated.
                                    More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                                  properties:
                                    exec:
                                      description: Exec specifies a command to execute in the container.
                                      properties:
                                        command:
                                          description: |-
                                            Command is the command line to execute inside the container, the working directory for the
                                            command  is root ('/') in the container's filesystem. The command is simply exec'd, it is
                                            not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use
                                            a shell, you need to explicitly call out to that shell.
                                            Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
                                          items:
                                            type: string
                                          type: array
                                          x-kubernetes-list-type: atomic
                                      type: object
                                    failureThreshold:
                                      description: |-
                                        Minimum consecutive failures for the probe to be considered failed after having succeeded.
                                        Defaults to 3. Minimum value is 1.
                                      format: int32
                                      type: integer
                                    grpc:
                                      description: GRPC specifies a GRPC HealthCheckRequest.
                                      properties:
                                        port:
                                          description: Port number of the gRPC service. Number must be in the range 1 to 65535.
                                          format: int32
                                          type: integer
                                        service:
                                          default: ""
                                          description: |-
                                            Service is the name of the service to place in the gRPC HealthCheckRequest
                                            (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).

                                            If this is not specified, the default behavior is defined by gRPC.
                                          type: string
                                      required:
                                        - port
                                      type: object
                                    httpGet:
                                      description: HTTPGet specifies an HTTP GET request to perform.
                                      properties:
                                        host:
                                          description: |-
                                            Host name to connect to, defaults to the pod IP. You probably want to set
                                            "Host" in httpHeaders instead.
                                          type: string
                                        httpHeaders:
                                          description: Custom headers to set in the request. HTTP allows repeated headers.
                                          items:
                                            description: HTTPHeader describes a custom header to be used in HTTP probes
                                            properties:
                                              name:
                                                description: |-
                                                  The header field name.
                                                  This will be canonicalized upon output, so case-variant names will be understood as the same header.
                                                type: string
                                              value:
                                                description: The header field value
                                                type: string
                                            required:
                                              - name
                                              - value
                                            type: object
                                          type: array
                                          x-kubernetes-list-type: atomic
                                        path:
                                          description: Path to access on the HTTP server.
                                          type: string
                                        port:
                                          anyOf:
                                            - type: integer
                                            - type: string
                                          description: |-
                                            Name or number of the port to access on the container.
                                            Number must be in the range 1 to 65535.
                                            Name must be an IANA_SVC_NAME.
                                          x-kubernetes-int-or-string: true
                                        scheme:
                                          description: |-
                                            Scheme to use for connecting to the host.
                                            Defaults to HTTP.
                                          type: string
                                      required:
                                        - port
                                      type: object
                                    initialDelaySeconds:
                                      description: |-
                                        Number of seconds after the container has started before liveness probes are initiated.
                                        More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                                      format: int32
                                      type: integer
                                    periodSeconds:
                                      description: |-
                                        How often (in seconds) to perform the probe.
                                        Default to 10 seconds. Minimum value is 1.
                                      format: int32
                                      type: integer
                                    successThreshold:
                                      description: |-
                                        Minimum consecutive successes for the probe to be considered successful after having failed.
                                        Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.
                                      format: int32
                                      type: integer
                                    tcpSocket:
                                      description: TCPSocket specifies a connection to a TCP port.
                                      properties:
                                        host:
                                          description: 'Optional: Host name to connect to, defaults to the pod IP.'
                                          type: string
                                        port:
                                          anyOf:
                                            - type: integer
                                            - type: string
                                          description: |-
                                            Number or name of the port to access on the container.
                                            Number must be in the range 1 to 65535.
                                            Name must be an IANA_SVC_NAME.
                                          x-kubernetes-int-or-string: true
                                      required:
                                        - port
                                      type: object
                                    terminationGracePeriodSeconds:
                                      description: |-
                                        Optional duration in seconds the pod needs to terminate gracefully upon probe failure.
                                        The grace period is the duration in seconds after the processes running in the pod are sent
                                        a termination signal and the time when the processes are forcibly halted with a kill signal.
                                        Set this value longer than the expected cleanup time for your process.
                                        If this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this
                                        value overrides the value provided by the pod spec.
                                        Value must be non-negative integer. The value zero indicates stop immediately via
                                        the kill signal (no opportunity to shut down).
                                        This is a beta field and requires enabling ProbeTerminationGracePeriod feature gate.
                                        Minimum value is 1. spec.terminationGracePeriodSeconds is used if unset.
                                      format: int64
                                      type: integer
                                    timeoutSeconds:
                                      description: |-
                                        Number of seconds after which the probe times out.
                                        Defaults to 1 second. Minimum value is 1.
                                        More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                                      format: int32
                                      type: integer
                                  type: object
                                resizePolicy:
                                  description: Resources resize policy for the container.
                                  items:
                                    description: ContainerResizePolicy represents resource resize policy for the container.
                                    properties:
                                      resourceName:
                                        description: |-
                                          Name of the resource to which this resource resize policy applies.
                                          Supported values: cpu, memory.
                                        type: string
                                      restartPolicy:
                                        description: |-
                                          Restart policy to apply when specified resource is resized.
                                          If not specified, it defaults to NotRequired.
                                        type: string
                                    required:
                                      - resourceName
                                      - restartPolicy
                                    type: object
                                  type: array
                                  x-kubernetes-list-type: atomic
                                resources:
                                  description: |-
                                    Compute Resources required by this container.
                                    Cannot be updated.
                                    More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                                  properties:
                                    claims:
                                      description: |-
                                        Claims lists the names of resources, defined in spec.resourceClaims,
                                        that are used by this container.

                                        This is an alpha field and requires enabling the
                                        DynamicResourceAllocation feature gate.

                                        This field is immutable. It can only be set for containers.
                                      items:
                                        description: ResourceClaim references one entry in PodSpec.ResourceClaims.
                                        properties:
                                          name:
                                            description: |-
                                              Name must match the name of one entry in pod.spec.resourceClaims of
                                              the Pod where this field is used. It makes that resource available
                                              inside a container.
                                            type: string
                                          request:
                                            description: |-
                                              Request is the name chosen for a request in the referenced claim.
                                              If empty, everything from the claim is made available, otherwise
                                              only the result of this request.
                                            type: string
                                        required:
                                          - name
                                        type: object
                                      type: array
                                      x-kubernetes-list-map-keys:
                                        - name
                                      x-kubernetes-list-type: map
                                    limits:
                                      additionalProperties:
                                        anyOf:
                                          - type: integer
                                          - type: string
                                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                        x-kubernetes-int-or-string: true
                                      description: |-
                                        Limits describes the maximum amount of compute resources allowed.
                                        More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                                      type: object
                                    requests:
                                      additionalProperties:
                                        anyOf:
                                          - type: integer
                                          - type: string
                                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                        x-kubernetes-int-or-string: true
                                      description: |-
                                        Requests describes the minimum amount of compute resources required.
                                        If Requests is omitted for a container, it defaults to Limits if that is explicitly specified,
                                        otherwise to an implementation-defined value. Requests cannot exceed Limits.
                                        More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                                      type: object
                                  type: object
                                restartPolicy:
                                  description: |-
                                    RestartPolicy defines the restart behavior of individual containers in a pod.
                                    This field may only be set for init containers, and the only allowed value is "Always".
                                    For non-init containers or when this field is not specified,
                                    the restart behavior is defined by the Pod's restart policy and the container type.
                                    Setting the RestartPolicy as "Always" for the init container will have the following effect:
                                    this init container will be continually restarted on
                                    exit until all regular containers have terminated. Once all regular
                                    containers have completed, all init containers with restartPolicy "Always"
                                    will be shut down. This lifecycle differs from normal init containers and
                                    is often referred to as a "sidecar" container. Although this init
                                    container still starts in the init container sequence, it does not wait
                                    for the container to complete before proceeding to the next init
                                    container. Instead, the next init container starts immediately after this
                                    init container is started, or after any startupProbe has successfully
                                    completed.
                                  type: string
                                securityContext:
                                  description: |-
                                    SecurityContext defines the security options the container should be run with.
                                    If set, the fields of SecurityContext override the equivalent fields of PodSecurityContext.
                                    More info: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/
                                  properties:
                                    allowPrivilegeEscalation:
                                      description: |-
                                        AllowPrivilegeEscalation controls whether a process can gain more
                                        privileges than its parent process. This bool directly controls if
                                        the no_new_privs flag will be set on the container process.
                                        AllowPrivilegeEscalation is true always when the container is:
                                        1) run as Privileged
                                        2) has CAP_SYS_ADMIN
                                        Note that this field cannot be set when spec.os.name is windows.
                                      type: boolean
                                    appArmorProfile:
                                      description: |-
                                        appArmorProfile is the AppArmor options to use by this container. If set, this profile
                                        overrides the pod's appArmorProfile.
                                        Note that this field cannot be set when spec.os.name is windows.
                                      properties:
                                        localhostProfile:
                                          description: |-
                                            localhostProfile indicates a profile loaded on the node that should be used.
                                            The profile must be preconfigured on the node to work.
                                            Must match the loaded name of the profile.
                                            Must be set if and only if type is "Localhost".
                                          type: string
                                        type:
                                          description: |-
                                            type indicates which kind of AppArmor profile will be applied.
                                            Valid options are:
                                              Localhost - a profile pre-loaded on the node.
                                              RuntimeDefault - the container runtime's default profile.
                                              Unconfined - no AppArmor enforcement.
                                          type: string
                                      required:
                                        - type
                                      type: object
                                    capabilities:
                                      description: |-
                                        The capabilities to add/drop when running containers.
                                        Defaults to the default set of capabilities granted by the container runtime.
                                        Note that this field cannot be set when spec.os.name is windows.
                                      properties:
                                        add:
                                          description: Added capabilities
                                          items:
                                            description: Capability represent POSIX capabilities type
                                            type: string
                                          type: array
                                          x-kubernetes-list-type: atomic
                                        drop:
                                          description: Removed capabilities
                                          items:
                                            description: Capability represent POSIX capabilities type
                                            type: string
                                          type: array
                                          x-kubernetes-list-type: atomic
                                      type: object
                                    privileged:
                                      description: |-
                                        Run container in privileged mode.
                                        Processes in privileged containers are essentially equivalent to root on the host.
                                        Defaults to false.
                                        Note that this field cannot be set when spec.os.name is windows.
                                      type: boolean
                                    procMount:
                                      description: |-
                                        procMount denotes the type of proc mount to use for the containers.
                                        The default value is Default which uses the container runtime defaults for
                                        readonly paths and masked paths.
                                        This requires the ProcMountType feature flag to be enabled.
                                        Note that this field cannot be set when spec.os.name is windows.
                                      type: string
                                    readOnlyRootFilesystem:
                                      description: |-
                                        Whether this container has a read-only root filesystem.
                                        Default is false.
                                        Note that this field cannot be set when spec.os.name is windows.
                                      type: boolean
                                    runAsGroup:
                                      description: |-
                                        The GID to run the entrypoint of the container process.
                                        Uses runtime default if unset.
                                        May also be set in PodSecurityContext.  If set in both SecurityContext and
                                        PodSecurityContext, the value specified in SecurityContext takes precedence.
                                        Note that this field cannot be set when spec.os.name is windows.
                                      format: int64
                                      type: integer
                                    runAsNonRoot:
                                      description: |-
                                        Indicates that the container must run as a non-root user.
                                        If true, the Kubelet will validate the image at runtime to ensure that it
                                        does not run as UID 0 (root) and fail to start the container if it does.
                                        If unset or false, no such validation will be performed.
                                        May also be set in PodSecurityContext.  If set in both SecurityContext and
                                        PodSecurityContext, the value specified in SecurityContext takes precedence.
                                      type: boolean
                                    runAsUser:
                                      description: |-
                                        The UID to run the entrypoint of the container process.
                                        Defaults to user specified in image metadata if unspecified.
                                        May also be set in PodSecurityContext.  If set in both SecurityContext and
                                        PodSecurityContext, the value specified in SecurityContext takes precedence.
                                        Note that this field cannot be set when spec.os.name is windows.
                                      format: int64
                                      type: integer
                                    seLinuxOptions:
                                      description: |-
                                        The SELinux context to be applied to the container.
                                        If unspecified, the container runtime will allocate a random SELinux context for each
                                        container.  May also be set in PodSecurityContext.  If set in both SecurityContext and
                                        PodSecurityContext, the value specified in SecurityContext takes precedence.
                                        Note that this field cannot be set when spec.os.name is windows.
                                      properties:
                                        level:
                                          description: Level is SELinux level label that applies to the container.
                                          type: string
                                        role:
                                          description: Role is a SELinux role label that applies to the container.
                                          type: string
                                        type:
                                          description: Type is a SELinux type label that applies to the container.
                                          type: string
                                        user:
                                          description: User is a SELinux user label that applies to the container.
                                          type: string
                                      type: object
                                    seccompProfile:
                                      description: |-
                                        The seccomp options to use by this container. If seccomp options are
                                        provided at both the pod & container level, the container options
                                        override the pod options.
                                        Note that this field cannot be set when spec.os.name is windows.
                                      properties:
                                        localhostProfile:
                                          description: |-
                                            localhostProfile indicates a profile defined in a file on the node should be used.
                                            The profile must be preconfigured on the node to work.
                                            Must be a descending path, relative to the kubelet's configured seccomp profile location.
                                            Must be set if type is "Localhost". Must NOT be set for any other type.
                                          type: string
                                        type:
                                          description: |-
                                            type indicates which kind of seccomp profile will be applied.
                                            Valid options are:

                                            Localhost - a profile defined in a file on the node should be used.
                                            RuntimeDefault - the container runtime default profile should be used.
                                            Unconfined - no profile should be applied.
                                          type: string
                                      required:
                                        - type
                                      type: object
                                    windowsOptions:
                                      description: |-
                                        The Windows specific settings applied to all containers.
                                        If unspecified, the options from the PodSecurityContext will be used.
                                        If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
                                        Note that this field cannot be set when spec.os.name is linux.
                                      properties:
                                        gmsaCredentialSpec:
                                          description: |-
                                            GMSACredentialSpec is where the GMSA admission webhook
                                            (https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the
                                            GMSA credential spec named by the GMSACredentialSpecName field.
                                          type: string
                                        gmsaCredentialSpecName:
                                          description: GMSACredentialSpecName is the name of the GMSA credential spec to use.
                                          type: string
                                        hostProcess:
                                          description: |-
                                            HostProcess determines if a container should be run as a 'Host Process' container.
                                            All of a Pod's containers must have the same effective HostProcess value
                                            (it is not allowed to have a mix of HostProcess containers and non-HostProcess containers).
                                            In addition, if HostProcess is true then HostNetwork must also be set to true.
                                          type: boolean
                                        runAsUserName:
                                          description: |-
                                            The UserName in Windows to run the entrypoint of the container process.
                                            Defaults to the user specified in image metadata if unspecified.
                                            May also be set in PodSecurityContext. If set in both SecurityContext and
                                            PodSecurityContext, the value specified in SecurityContext takes precedence.
                                          type: string
                                      type: object
                                  type: object
                                startupProbe:
                                  description: |-
                                    StartupProbe indicates that the Pod has successfully initialized.
                                    If specified, no other probes are executed until this completes successfully.
                                    If this probe fails, the Pod will be restarted, just as if the livenessProbe failed.
                                    This can be used to provide different probe parameters at the beginning of a Pod's lifecycle,
                                    when it might take a long time to load data or warm a cache, than during steady-state operation.
                                    This cannot be updated.
                                    More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                                  properties:
                                    exec:
                                      description: Exec specifies a command to execute in the container.
                                      properties:
                                        command:
                                          description: |-
                                            Command is the command line to execute inside the container, the working directory for the
                                            command  is root ('/') in the container's filesystem. The command is simply exec'd, it is
                                            not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use
                                            a shell, you need to explicitly call out to that shell.
                                            Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
                                          items:
                                            type: string
                                          type: array
                                          x-kubernetes-list-type: atomic
                                      type: object
                                    failureThreshold:
                                      description: |-
                                        Minimum consecutive failures for the probe to be considered failed after having succeeded.
                                        Defaults to 3. Minimum value is 1.
                                      format: int32
                                      type: integer
                                    grpc:
                                      description: GRPC specifies a GRPC HealthCheckRequest.
                                      properties:
                                        port:
                                          description: Port number of the gRPC service. Number must be in the range 1 to 65535.
                                          format: int32
                                          type: integer
                                        service:
                                          default: ""
                                          description: |-
                                            Service is the name of the service to place in the gRPC HealthCheckRequest
                                            (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).

                                            If this is not specified, the default behavior is defined by gRPC.
                                          type: string
                                      required:
                                        - port
                                      type: object
                                    httpGet:
                                      description: HTTPGet specifies an HTTP GET request to perform.
                                      properties:
                                        host:
                                          description: |-
                                            Host name to connect to, defaults to the pod IP. You probably want to set
                                            "Host" in httpHeaders instead.
                                          type: string
                                        httpHeaders:
                                          description: Custom headers to set in the request. HTTP allows repeated headers.
                                          items:
                                            description: HTTPHeader describes a custom header to be used in HTTP probes
                                            properties:
                                              name:
                                                description: |-
                                                  The header field name.
                                                  This will be canonicalized upon output, so case-variant names will be understood as the same header.
                                                type: string
                                              value:
                                                description: The header field value
                                                type: string
                                            required:
                                              - name
                                              - value
                                            type: object
                                          type: array
                                          x-kubernetes-list-type: atomic
                                        path:
                                          description: Path to access on the HTTP server.
                                          type: string
                                        port:
                                          anyOf:
                                            - type: integer
                                            - type: string
                                          description: |-
                                            Name or number of the port to access on the container.
                                            Number must be in the range 1 to 65535.
                                            Name must be an IANA_SVC_NAME.
                                          x-kubernetes-int-or-string: true
                                        scheme:
                                          description: |-
                                            Scheme to use for connecting to the host.
                                            Defaults to HTTP.
                                          type: string
                                      required:
                                        - port
                                      type: object
                                    initialDelaySeconds:
                                      description: |-
                                        Number of seconds after the container has started before liveness probes are initiated.
                                        More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                                      format: int32
                                      type: integer
                                    periodSeconds:
                                      description: |-
                                        How often (in seconds) to perform the probe.
                                        Default to 10 seconds. Minimum value is 1.
                                      format: int32
                                      type: integer
                                    successThreshold:
                                      description: |-
                                        Minimum consecutive successes for the probe to be considered successful after having failed.
                                        Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.
                                      format: int32
                                      type: integer
                                    tcpSocket:
                                      description: TCPSocket specifies a connection to a TCP port.
                                      properties:
                                        host:
                                          description: 'Optional: Host name to connect to, defaults to the pod IP.'
                                          type: string
                                        port:
                                          anyOf:
                                            - type: integer
                                            - type: string
                                          description: |-
                                            Number or name of the port to access on the container.
                                            Number must be in the range 1 to 65535.
                                            Name must be an IANA_SVC_NAME.
                                          x-kubernetes-int-or-string: true
                                      required:
                                        - port
                                      type: object
                                    terminationGracePeriodSeconds:
                                      description: |-
                                        Optional duration in seconds the pod needs to terminate gracefully upon probe failure.
                                        The grace period is the duration in seconds after the processes running in the pod are sent
                                        a termination signal and the time when the processes are forcibly halted with a kill signal.
                                        Set this value longer than the expected cleanup time for your process.
                                        If this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this
                                        value overrides the value provided by the pod spec.
                                        Value must be non-negative integer. The value zero indicates stop immediately via
                                        the kill signal (no opportunity to shut down).
                                        This is a beta field and requires enabling ProbeTerminationGracePeriod feature gate.
                                        Minimum value is 1. spec.terminationGracePeriodSeconds is used if unset.
                                      format: int64
                                      type: integer
                                    timeoutSeconds:
                                      description: |-
                                        Number of seconds after which the probe times out.
                                        Defaults to 1 second. Minimum value is 1.
                                        More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                                      format: int32
                                      type: integer
                                  type: object
                                stdin:
                                  description: |-
                                    Whether this container should allocate a buffer for stdin in the container runtime. If this
                                    is not set, reads from stdin in the container will always result in EOF.
                                    Default is false.
                                  type: boolean
                                stdinOnce:
                                  description: |-
                                    Whether the container runtime should close the stdin channel after it has been opened by
                                    a single attach. When stdin is true the stdin stream will remain open across multiple attach
                                    sessions. If stdinOnce is set to true, stdin is opened on container start, is empty until the
                                    first client attaches to stdin, and then remains open and accepts data until the client disconnects,
                                    at which time stdin is closed and remains closed until the container is restarted. If this
                                    flag is false, a container processes that reads from stdin will never receive an EOF.
                                    Default is false
                                  type: boolean
                                terminationMessagePath:
                                  description: |-
                                    Optional: Path at which the file to which the container's termination message
                                    will be written is mounted into the container's filesystem.
                                    Message written is intended to be brief final status, such as an assertion failure message.
                                    Will be truncated by the node if greater than 4096 bytes. The total message length across
                                    all containers will be limited to 12kb.
                                    Defaults to /dev/termination-log.
                                    Cannot be updated.
                                  type: string
                                terminationMessagePolicy:
                                  description: |-
                                    Indicate how the termination message should be populated. File will use the contents of
                                    terminationMessagePath to populate the container status message on both success and failure.
                                    FallbackToLogsOnError will use the last chunk of container log output if the termination
                                    message file is empty and the container exited with an error.
                                    The log output is limited to 2048 bytes or 80 lines, whichever is smaller.
                                    Defaults to File.
                                    Cannot be updated.
                                  type: string
                                tty:
                                  description: |-
                                    Whether this container should allocate a TTY for itself, also requires 'stdin' to be true.
                                    Default is false.
                                  type: boolean
                                volumeDevices:
                                  description: volumeDevices is the list of block devices to be used by the container.
                                  items:
                                    description: volumeDevice describes a mapping of a raw block device within a container.
                                    properties:
                                      devicePath:
                                        description: devicePath is the path inside of the container that the device will be mapped to.
                                        type: string
                                      name:
                                        description: name must match the name of a persistentVolumeClaim in the pod
                                        type: string
                                    required:
                                      - devicePath
                                      - name
                                    type: object
                                  type: array
                                  x-kubernetes-list-map-keys:
                                    - devicePath
                                  x-kubernetes-list-type: map
                                volumeMounts:
                                  description: |-
                                    Pod volumes to mount into the container's filesystem.
                                    Cannot be updated.
                                  items:
                                    description: VolumeMount describes a mounting of a Volume within a container.
                                    properties:
                                      mountPath:
                                        description: |-
                                          Path within the container at which the volume should be mounted.  Must
                                          not contain ':'.
                                        type: string
                                      mountPropagation:
                                        description: |-
                                          mountPropagation determines how mounts are propagated from the host
                                          to container and the other way around.
                                          When not set, MountPropagationNone is used.
                                          This field is beta in 1.10.
                                          When RecursiveReadOnly is set to IfPossible or to Enabled, MountPropagation must be None or unspecified
                                          (which defaults to None).
                                        type: string
                                      name:
                                        description: This must match the Name of a Volume.
                                        type: string
                                      readOnly:
                                        description: |-
                                          Mounted read-only if true, read-write otherwise (false or unspecified).
                                          Defaults to false.
                                        type: boolean
                                      recursiveReadOnly:
                                        description: |-
                                          RecursiveReadOnly specifies whether read-only mounts should be handled
                                          recursively.

                                          If ReadOnly is false, this field has no meaning and must be unspecified.

                                          If ReadOnly is true, and this field is set to Disabled, the mount is not made
                                          recursively read-only.  If this field is set to IfPossible, the mount is made
                                          recursively read-only, if it is supported by the container runtime.  If this
                                          field is set to Enabled, the mount is made recursively read-only if it is
                                          supported by the container runtime, otherwise the pod will not be started and
                                          an error will be generated to indicate the reason.

                                          If this field is set to IfPossible or Enabled, MountPropagation must be set to
                                          None (or be unspecified, which defaults to None).

                                          If this field is not specified, it is treated as an equivalent of Disabled.
                                        type: string
                                      subPath:
                                        description: |-
                                          Path within the volume from which the container's volume should be mounted.
                                          Defaults to "" (volume's root).
                                        type: string
                                      subPathExpr:
                                        description: |-
                                          Expanded path within the volume from which the container's volume should be mounted.
                                          Behaves similarly to SubPath but environment variable references $(VAR_NAME) are expanded using the container's environment.
                                          Defaults to "" (volume's root).
                                          SubPathExpr and SubPath are mutually exclusive.
                                        type: string
                                    required:
                                      - mountPath
                                      - name
                                    type: object
                                  type: array
                                  x-kubernetes-list-map-keys:
                                    - mountPath
                                  x-kubernetes-list-type: map
                                workingDir:
                                  description: |-
                                    Container's working directory.
                                    If not specified, the container runtime's default will be used, which
                                    might be configured in the container image.
                                    Cannot be updated.
                                  type: string
                              required:
                                - name
                              type: object
                            type: array
                          sidecarContainers:
                            description: |-
                              Additional sidecar containers injected into pods.
                              The setting does not override any sidecar containers defined by the Operator.
                              Note that sidecars are injected as standard pod containers alongside the
                              Mattermost application server. In the future, this may be migrated to
                              use the currently-feature-gated init container method introduced in k8s v1.28:
                              https://kubernetes.io/blog/2023/08/25/native-sidecar-containers/
                            items:
                              description: A single application container that you want to run within a pod.
                              properties:
                                args:
                                  description: |-
                                    Arguments to the entrypoint.
                                    The container image's CMD is used if this is not provided.
                                    Variable references $(VAR_NAME) are expanded using the container's environment. If a variable
                                    cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced
                                    to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)" will
                                    produce the string literal "$(VAR_NAME)". Escaped references will never be expanded, regardless
                                    of whether the variable exists or not. Cannot be updated.
                                    More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell
                                  items:
                                    type: string
                                  type: array
                                  x-kubernetes-list-type: atomic
                                command:
                                  description: |-
                                    Entrypoint array. Not executed within a shell.
                                    The container image's ENTRYPOINT is used if this is not provided.
                                    Variable references $(VAR_NAME) are expanded using the container's environment. If a variable
                                    cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced
                                    to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)" will
                                    produce the string literal "$(VAR_NAME)". Escaped references will never be expanded, regardless
                                    of whether the variable exists or not. Cannot be updated.
                                    More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell
                                  items:
                                    type: string
                                  type: array
                                  x-kubernetes-list-type: atomic
                                env:
                                  description: |-
                                    List of environment variables to set in the container.
                                    Cannot be updated.
                                  items:
                                    description: EnvVar represents an environment variable present in a Container.
                                    properties:
                                      name:
                                        description: Name of the environment variable. Must be a C_IDENTIFIER.
                                        type: string
                                      value:
                                        description: |-
                                          Variable references $(VAR_NAME) are expanded
                                          using the previously defined environment variables in the container and
                                          any service environment variables. If a variable cannot be resolved,
                                          the reference in the input string will be unchanged. Double $$ are reduced
                                          to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e.
                                          "$$(VAR_NAME)" will produce the string literal "$(VAR_NAME)".
                                          Escaped references will never be expanded, regardless of whether the variable
                                          exists or not.
                                          Defaults to "".
                                        type: string
                                      valueFrom:
                                        description: Source for the environment variable's value. Cannot be used if value is not empty.
                                        properties:
                                          configMapKeyRef:
                                            description: Selects a key of a ConfigMap.
                                            properties:
                                              key:
                                                description: The key to select.
                                                type: string
                                              name:
                                                default: ""
                                                description: |-
                                                  Name of the referent.
                                                  This field is effectively required, but due to backwards compatibility is
                                                  allowed to be empty. Instances of this type with an empty value here are
                                                  almost certainly wrong.
                                                  More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                type: string
                                              optional:
                                                description: Specify whether the ConfigMap or its key must be defined
                                                type: boolean
                                            required:
                                              - key
                                            type: object
                                            x-kubernetes-map-type: atomic
                                          fieldRef:
                                            description: |-
                                              Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`,
                                              spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.
                                            properties:
                                              apiVersion:
                                                description: Version of the schema the FieldPath is written in terms of, defaults to "v1".
                                                type: string
                                              fieldPath:
                                                description: Path of the field to select in the specified API version.
                                                type: string
                                            required:
                                              - fieldPath
                                            type: object
                                            x-kubernetes-map-type: atomic
                                          resourceFieldRef:
                                            description: |-
                                              Selects a resource of the container: only resources limits and requests
                                              (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.
                                            properties:
                                              containerName:
                                                description: 'Container name: required for volumes, optional for env vars'
                                                type: string
                                              divisor:
                                                anyOf:
                                                  - type: integer
                                                  - type: string
                                                description: Specifies the output format of the exposed resources, defaults to "1"
                                                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                                x-kubernetes-int-or-string: true
                                              resource:
                                                description: 'Required: resource to select'
                                                type: string
                                            required:
                                              - resource
                                            type: object
                                            x-kubernetes-map-type: atomic
                                          secretKeyRef:
                                            description: Selects a key of a secret in the pod's namespace
                                            properties:
                                              key:
                                                description: The key of the secret to select from.  Must be a valid secret key.
                                                type: string
                                              name:
                                                default: ""
                                                description: |-
                                                  Name of the referent.
                                                  This field is effectively required, but due to backwards compatibility is
                                                  allowed to be empty. Instances of this type with an empty value here are
                                                  almost certainly wrong.
                                                  More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                type: string
                                              optional:
                                                description: Specify whether the Secret or its key must be defined
                                                type: boolean
                                            required:
                                              - key
                                            type: object
                                            x-kubernetes-map-type: atomic
                                        type: object
                                    required:
                                      - name
                                    type: object
                                  type: array
                                  x-kubernetes-list-map-keys:
                                    - name
                                  x-kubernetes-list-type: map
                                envFrom:
                                  description: |-
                                    List of sources to populate environment variables in the container.
                                    The keys defined within a source must be a C_IDENTIFIER. All invalid keys
                                    will be reported as an event when the container is starting. When a key exists in multiple
                                    sources, the value associated with the last source will take precedence.
                                    Values defined by an Env with a duplicate key will take precedence.
                                    Cannot be updated.
                                  items:
                                    description: EnvFromSource represents the source of a set of ConfigMaps or Secrets
                                    properties:
                                      configMapRef:
                                        description: The ConfigMap to select from
                                        properties:
                                          name:
                                            default: ""
                                            description: |-
                                              Name of the referent.
                                              This field is effectively required, but due to backwards compatibility is
                                              allowed to be empty. Instances of this type with an empty value here are
                                              almost certainly wrong.
                                              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                            type: string
                                          optional:
                                            description: Specify whether the ConfigMap must be defined
                                            type: boolean
                                        type: object
                                        x-kubernetes-map-type: atomic
                                      prefix:
                                        description: Optional text to prepend to the name of each environment variable. Must be a C_IDENTIFIER.
                                        type: string
                                      secretRef:
                                        description: The Secret to select from
                                        properties:
                                          name:
                                            default: ""
                                            description: |-
                                              Name of the referent.
                                              This field is effectively required, but due to backwards compatibility is
                                              allowed to be empty. Instances of this type with an empty value here are
                                              almost certainly wrong.
                                              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                            type: string
                                          optional:
                                            description: Specify whether the Secret must be defined
                                            type: boolean
                                        type: object
                                        x-kubernetes-map-type: atomic
                                    type: object
                                  type: array
                                  x-kubernetes-list-type: atomic
                                image:
                                  description: |-
                                    Container image name.
                                    More info: https://kubernetes.io/docs/concepts/containers/images
                                    This field is optional to allow higher level config management to default or override
                                    container images in workload controllers like Deployments and StatefulSets.
                                  type: string
                                imagePullPolicy:
                                  description: |-
                                    Image pull policy.
                                    One of Always, Never, IfNotPresent.
                                    Defaults to Always if :latest tag is specified, or IfNotPresent otherwise.
                                    Cannot be updated.
                                    More info: https://kubernetes.io/docs/concepts/containers/images#updating-images
                                  type: string
                                lifecycle:
                                  description: |-
                                    Actions that the management system should take in response to container lifecycle events.
                                    Cannot be updated.
                                  properties:
                                    postStart:
                                      description: |-
                                        PostStart is called immediately after a container is created. If the handler fails,
                                        the container is terminated and restarted according to its restart policy.
                                        Other management of the container blocks until the hook completes.
                                        More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks
                                      properties:
                                        exec:
                                          description: Exec specifies a command to execute in the container.
                                          properties:
                                            command:
                                              description: |-
                                                Command is the command line to execute inside the container, the working directory for the
                                                command  is root ('/') in the container's filesystem. The command is simply exec'd, it is
                                                not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use
                                                a shell, you need to explicitly call out to that shell.
                                                Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
                                              items:
                                                type: string
                                              type: array
                                              x-kubernetes-list-type: atomic
                                          type: object
                                        httpGet:
                                          description: HTTPGet specifies an HTTP GET request to perform.
                                          properties:
                                            host:
                                              description: |-
                                                Host name to connect to, defaults to the pod IP. You probably want to set
                                                "Host" in httpHeaders instead.
                                              type: string
                                            httpHeaders:
                                              description: Custom headers to set in the request. HTTP allows repeated headers.
                                              items:
                                                description: HTTPHeader describes a custom header to be used in HTTP probes
                                                properties:
                                                  name:
                                                    description: |-
                                                      The header field name.
                                                      This will be canonicalized upon output, so case-variant names will be understood as the same header.
                                                    type: string
                                                  value:
                                                    description: The header field value
                                                    type: string
                                                required:
                                                  - name
                                                  - value
                                                type: object
                                              type: array
                                              x-kubernetes-list-type: atomic
                                            path:
                                              description: Path to access on the HTTP server.
                                              type: string
                                            port:
                                              anyOf:
                                                - type: integer
                                                - type: string
                                              description: |-
                                                Name or number of the port to access on the container.
                                                Number must be in the range 1 to 65535.
                                                Name must be an IANA_SVC_NAME.
                                              x-kubernetes-int-or-string: true
                                            scheme:
                                              description: |-
                                                Scheme to use for connecting to the host.
                                                Defaults to HTTP.
                                              type: string
                                          required:
                                            - port
                                          type: object
                                        sleep:
                                          description: Sleep represents a duration that the container should sleep.
                                          properties:
                                            seconds:
                                              description: Seconds is the number of seconds to sleep.
                                              format: int64
                                              type: integer
                                          required:
                                            - seconds
                                          type: object
                                        tcpSocket:
                                          description: |-
                                            Deprecated. TCPSocket is NOT supported as a LifecycleHandler and kept
                                            for backward compatibility. There is no validation of this field and
                                            lifecycle hooks will fail at runtime when it is specified.
                                          properties:
                                            host:
                                              description: 'Optional: Host name to connect to, defaults to the pod IP.'
                                              type: string
                                            port:
                                              anyOf:
                                                - type: integer
                                                - type: string
                                              description: |-
                                                Number or name of the port to access on the container.
                                                Number must be in the range 1 to 65535.
                                                Name must be an IANA_SVC_NAME.
                                              x-kubernetes-int-or-string: true
                                          required:
                                            - port
                                          type: object
                                      type: object
                                    preStop:
                                      description: |-
                                        PreStop is called immediately before a container is terminated due to an
                                        API request or management event such as liveness/startup probe failure,
                                        preemption, resource contention, etc. The handler is not called if the
                                        container crashes or exits. The Pod's termination grace period countdown begins before the
                                        PreStop hook is executed. Regardless of the outcome of the handler, the
                                        container will eventually terminate within the Pod's termination grace
                                        period (unless delayed by finalizers). Other management of the container blocks until the hook completes
                                        or until the termination grace period is reached.
                                        More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks
                                      properties:
                                        exec:
                                          description: Exec specifies a command to execute in the container.
                                          properties:
                                            command:
                                              description: |-
                                                Command is the command line to execute inside the container, the working directory for the
                                                command  is root ('/') in the container's filesystem. The command is simply exec'd, it is
                                                not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use
                                                a shell, you need to explicitly call out to that shell.
                                                Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
                                              items:
                                                type: string
                                              type: array
                                              x-kubernetes-list-type: atomic
                                          type: object
                                        httpGet:
                                          description: HTTPGet specifies an HTTP GET request to perform.
                                          properties:
                                            host:
                                              description: |-
                                                Host name to connect to, defaults to the pod IP. You probably want to set
                                                "Host" in httpHeaders instead.
                                              type: string
                                            httpHeaders:
                                              description: Custom headers to set in the request. HTTP allows repeated headers.
                                              items:
                                                description: HTTPHeader describes a custom header to be used in HTTP probes
                                                properties:
                                                  name:
                                                    description: |-
                                                      The header field name.
                                                      This will be canonicalized upon output, so case-variant names will be understood as the same header.
                                                    type: string
                                                  value:
                                                    description: The header field value
                                                    type: string
                                                required:
                                                  - name
                                                  - value
                                                type: object
                                              type: array
                                              x-kubernetes-list-type: atomic
                                            path:
                                              description: Path to access on the HTTP server.
                                              type: string
                                            port:
                                              anyOf:
                                                - type: integer
                                                - type: string
                                              description: |-
                                                Name or number of the port to access on the container.
                                                Number must be in the range 1 to 65535.
                                                Name must be an IANA_SVC_NAME.
                                              x-kubernetes-int-or-string: true
                                            scheme:
                                              description: |-
                                                Scheme to use for connecting to the host.
                                                Defaults to HTTP.
                                              type: string
                                          required:
                                            - port
                                          type: object
                                        sleep:
                                          description: Sleep represents a duration that the container should sleep.
                                          properties:
                                            seconds:
                                              description: Seconds is the number of seconds to sleep.
                                              format: int64
                                              type: integer
                                          required:
                                            - seconds
                                          type: object
                                        tcpSocket:
                                          description: |-
                                            Deprecated. TCPSocket is NOT supported as a LifecycleHandler and kept
                                            for backward compatibility. There is no validation of this field and
                                            lifecycle hooks will fail at runtime when it is specified.
                                          properties:
                                            host:
                                              description: 'Optional: Host name to connect to, defaults to the pod IP.'
                                              type: string
                                            port:
                                              anyOf:
                                                - type: integer
                                                - type: string
                                              description: |-
                                                Number or name of the port to access on the container.
                                                Number must be in the range 1 to 65535.
                                                Name must be an IANA_SVC_NAME.
                                              x-kubernetes-int-or-string: true
                                          required:
                                            - port
                                          type: object
                                      type: object
                                    stopSignal:
                                      description: |-
                                        StopSignal defines which signal will be sent to a container when it is being stopped.
                                        If not specified, the default is defined by the container runtime in use.
                                        StopSignal can only be set for Pods with a non-empty .spec.os.name
                                      type: string
                                  type: object
                                livenessProbe:
                                  description: |-
                                    Periodic probe of container liveness.
                                    Container will be restarted if the probe fails.
                                    Cannot be updated.
                                    More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                                  properties:
                                    exec:
                                      description: Exec specifies a command to execute in the container.
                                      properties:
                                        command:
                                          description: |-
                                            Command is the command line to execute inside the container, the working directory for the
                                            command  is root ('/') in the container's filesystem. The command is simply exec'd, it is
                                            not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use
                                            a shell, you need to explicitly call out to that shell.
                                            Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
                                          items:
                                            type: string
                                          type: array
                                          x-kubernetes-list-type: atomic
                                      type: object
                                    failureThreshold:
                                      description: |-
                                        Minimum consecutive failures for the probe to be considered failed after having succeeded.
                                        Defaults to 3. Minimum value is 1.
                                      format: int32
                                      type: integer
                                    grpc:
                                      description: GRPC specifies a GRPC HealthCheckRequest.
                                      properties:
                                        port:
                                          description: Port number of the gRPC service. Number must be in the range 1 to 65535.
                                          format: int32
                                          type: integer
                                        service:
                                          default: ""
                                          description: |-
                                            Service is the name of the service to place in the gRPC HealthCheckRequest
                                            (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).

                                            If this is not specified, the default behavior is defined by gRPC.
                                          type: string
                                      required:
                                        - port
                                      type: object
                                    httpGet:
                                      description: HTTPGet specifies an HTTP GET request to perform.
                                      properties:
                                        host:
                                          description: |-
                                            Host name to connect to, defaults to the pod IP. You probably want to set
                                            "Host" in httpHeaders instead.
                                          type: string
                                        httpHeaders:
                                          description: Custom headers to set in the request. HTTP allows repeated headers.
                                          items:
                                            description: HTTPHeader describes a custom header to be used in HTTP probes
                                            properties:
                                              name:
                                                description: |-
                                                  The header field name.
                                                  This will be canonicalized upon output, so case-variant names will be understood as the same header.
                                                type: string
                                              value:
                                                description: The header field value
                                                type: string
                                            required:
                                              - name
                                              - value
                                            type: object
                                          type: array
                                          x-kubernetes-list-type: atomic
                                        path:
                                          description: Path to access on the HTTP server.
                                          type: string
                                        port:
                                          anyOf:
                                            - type: integer
                                            - type: string
                                          description: |-
                                            Name or number of the port to access on the container.
                                            Number must be in the range 1 to 65535.
                                            Name must be an IANA_SVC_NAME.
                                          x-kubernetes-int-or-string: true
                                        scheme:
                                          description: |-
                                            Scheme to use for connecting to the host.
                                            Defaults to HTTP.
                                          type: string
                                      required:
                                        - port
                                      type: object
                                    initialDelaySeconds:
                                      description: |-
                                        Number of seconds after the container has started before liveness probes are initiated.
                                        More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                                      format: int32
                                      type: integer
                                    periodSeconds:
                                      description: |-
                                        How often (in seconds) to perform the probe.
                                        Default to 10 seconds. Minimum value is 1.
                                      format: int32
                                      type: integer
                                    successThreshold:
                                      description: |-
                                        Minimum consecutive successes for the probe to be considered successful after having failed.
                                        Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.
                                      format: int32
                                      type: integer
                                    tcpSocket:
                                      description: TCPSocket specifies a connection to a TCP port.
                                      properties:
                                        host:
                                          description: 'Optional: Host name to connect to, defaults to the pod IP.'
                                          type: string
                                        port:
                                          anyOf:
                                            - type: integer
                                            - type: string
                                          description: |-
                                            Number or name of the port to access on the container.
                                            Number must be in the range 1 to 65535.
                                            Name must be an IANA_SVC_NAME.
                                          x-kubernetes-int-or-string: true
                                      required:
                                        - port
                                      type: object
                                    terminationGracePeriodSeconds:
                                      description: |-
                                        Optional duration in seconds the pod needs to terminate gracefully upon probe failure.
                                        The grace period is the duration in seconds after the processes running in the pod are sent
                                        a termination signal and the time when the processes are forcibly halted with a kill signal.
                                        Set this value longer than the expected cleanup time for your process.
                                        If this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this
                                        value overrides the value provided by the pod spec.
                                        Value must be non-negative integer. The value zero indicates stop immediately via
                                        the kill signal (no opportunity to shut down).
                                        This is a beta field and requires enabling ProbeTerminationGracePeriod feature gate.
                                        Minimum value is 1. spec.terminationGracePeriodSeconds is used if unset.
                                      format: int64
                                      type: integer
                                    timeoutSeconds:
                                      description: |-
                                        Number of seconds after which the probe times out.
                                        Defaults to 1 second. Minimum value is 1.
                                        More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                                      format: int32
                                      type: integer
                                  type: object
                                name:
                                  description: |-
                                    Name of the container specified as a DNS_LABEL.
                                    Each container in a pod must have a unique name (DNS_LABEL).
                                    Cannot be updated.
                                  type: string
                                ports:
                                  description: |-
                                    List of ports to expose from the container. Not specifying a port here
                                    DOES NOT prevent that port from being exposed. Any port which is
                                    listening on the default "0.0.0.0" address inside a container will be
                                    accessible from the network.
                                    Modifying this array with strategic merge patch may corrupt the data.
                                    For more information See https://github.com/kubernetes/kubernetes/issues/108255.
                                    Cannot be updated.
                                  items:
                                    description: ContainerPort represents a network port in a single container.
                                    properties:
                                      containerPort:
                                        description: |-
                                          Number of port to expose on the pod's IP address.
                                          This must be a valid port number, 0 < x < 65536.
                                        format: int32
                                        type: integer
                                      hostIP:
                                        description: What host IP to bind the external port to.
                                        type: string
                                      hostPort:
                                        description: |-
                                          Number of port to expose on the host.
                                          If specified, this must be a valid port number, 0 < x < 65536.
                                          If HostNetwork is specified, this must match ContainerPort.
                                          Most containers do not need this.
                                        format: int32
                                        type: integer
                                      name:
                                        description: |-
                                          If specified, this must be an IANA_SVC_NAME and unique within the pod. Each
                                          named port in a pod must have a unique name. Name for the port that can be
                                          referred to by services.
                                        type: string
                                      protocol:
                                        default: TCP
                                        description: |-
                                          Protocol for port. Must be UDP, TCP, or SCTP.
                                          Defaults to "TCP".
                                        type: string
                                    required:
                                      - containerPort
                                    type: object
                                  type: array
                                  x-kubernetes-list-map-keys:
                                    - containerPort
                                    - protocol
                                  x-kubernetes-list-type: map
                                readinessProbe:
                                  description: |-
                                    Periodic probe of container service readiness.
                                    Container will be removed from service endpoints if the probe fails.
                                    Cannot be updated.
                                    More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                                  properties:
                                    exec:
                                      description: Exec specifies a command to execute in the container.
                                      properties:
                                        command:
                                          description: |-
                                            Command is the command line to execute inside the container, the working directory for the
                                            command  is root ('/') in the container's filesystem. The command is simply exec'd, it is
                                            not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use
                                            a shell, you need to explicitly call out to that shell.
                                            Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
                                          items:
                                            type: string
                                          type: array
                                          x-kubernetes-list-type: atomic
                                      type: object
                                    failureThreshold:
                                      description: |-
                                        Minimum consecutive failures for the probe to be considered failed after having succeeded.
                                        Defaults to 3. Minimum value is 1.
                                      format: int32
                                      type: integer
                                    grpc:
                                      description: GRPC specifies a GRPC HealthCheckRequest.
                                      properties:
                                        port:
                                          description: Port number of the gRPC service. Number must be in the range 1 to 65535.
                                          format: int32
                                          type: integer
                                        service:
                                          default: ""
                                          description: |-
                                            Service is the name of the service to place in the gRPC HealthCheckRequest
                                            (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).

                                            If this is not specified, the default behavior is defined by gRPC.
                                          type: string
                                      required:
                                        - port
                                      type: object
                                    httpGet:
                                      description: HTTPGet specifies an HTTP GET request to perform.
                                      properties:
                                        host:
                                          description: |-
                                            Host name to connect to, defaults to the pod IP. You probably want to set
                                            "Host" in httpHeaders instead.
                                          type: string
                                        httpHeaders:
                                          description: Custom headers to set in the request. HTTP allows repeated headers.
                                          items:
                                            description: HTTPHeader describes a custom header to be used in HTTP probes
                                            properties:
                                              name:
                                                description: |-
                                                  The header field name.
                                                  This will be canonicalized upon output, so case-variant names will be understood as the same header.
                                                type: string
                                              value:
                                                description: The header field value
                                                type: string
                                            required:
                                              - name
                                              - value
                                            type: object
                                          type: array
                                          x-kubernetes-list-type: atomic
                                        path:
                                          description: Path to access on the HTTP server.
                                          type: string
                                        port:
                                          anyOf:
                                            - type: integer
                                            - type: string
                                          description: |-
                                            Name or number of the port to access on the container.
                                            Number must be in the range 1 to 65535.
                                            Name must be an IANA_SVC_NAME.
                                          x-kubernetes-int-or-string: true
                                        scheme:
                                          description: |-
                                            Scheme to use for connecting to the host.
                                            Defaults to HTTP.
                                          type: string
                                      required:
                                        - port
                                      type: object
                                    initialDelaySeconds:
                                      description: |-
                                        Number of seconds after the container has started before liveness probes are initiated.
                                        More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                                      format: int32
                                      type: integer
                                    periodSeconds:
                                      description: |-
                                        How often (in seconds) to perform the probe.
                                        Default to 10 seconds. Minimum value is 1.
                                      format: int32
                                      type: integer
                                    successThreshold:
                                      description: |-
                                        Minimum consecutive successes for the probe to be considered successful after having failed.
                                        Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.
                                      format: int32
                                      type: integer
                                    tcpSocket:
                                      description: TCPSocket specifies a connection to a TCP port.
                                      properties:
                                        host:
                                          description: 'Optional: Host name to connect to, defaults to the pod IP.'
                                          type: string
                                        port:
                                          anyOf:
                                            - type: integer
                                            - type: string
                                          description: |-
                                            Number or name of the port to access on the container.
                                            Number must be in the range 1 to 65535.
                                            Name must be an IANA_SVC_NAME.
                                          x-kubernetes-int-or-string: true
                                      required:
                                        - port
                                      type: object
                                    terminationGracePeriodSeconds:
                                      description: |-
                                        Optional duration in seconds the pod needs to terminate gracefully upon probe failure.
                                        The grace period is the duration in seconds after the processes running in the pod are sent
                                        a termination signal and the time when the processes are forcibly halted with a kill signal.
                                        Set this value longer than the expected cleanup time for your process.
                                        If this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this
                                        value overrides the value provided by the pod spec.
                                        Value must be non-negative integer. The value zero indicates stop immediately via
                                        the kill signal (no opportunity to shut down).
                                        This is a beta field and requires enabling ProbeTerminationGracePeriod feature gate.
                                        Minimum value is 1. spec.terminationGracePeriodSeconds is used if unset.
                                      format: int64
                                      type: integer
                                    timeoutSeconds:
                                      description: |-
                                        Number of seconds after which the probe times out.
                                        Defaults to 1 second. Minimum value is 1.
                                        More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                                      format: int32
                                      type: integer
                                  type: object
                                resizePolicy:
                                  description: Resources resize policy for the container.
                                  items:
                                    description: ContainerResizePolicy represents resource resize policy for the container.
                                    properties:
                                      resourceName:
                                        description: |-
                                          Name of the resource to which this resource resize policy applies.
                                          Supported values: cpu, memory.
                                        type: string
                                      restartPolicy:
                                        description: |-
                                          Restart policy to apply when specified resource is resized.
                                          If not specified, it defaults to NotRequired.
                                        type: string
                                    required:
                                      - resourceName
                                      - restartPolicy
                                    type: object
                                  type: array
                                  x-kubernetes-list-type: atomic
                                resources:
                                  description: |-
                                    Compute Resources required by this container.
                                    Cannot be updated.
                                    More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                                  properties:
                                    claims:
                                      description: |-
                                        Claims lists the names of resources, defined in spec.resourceClaims,
                                        that are used by this container.

                                        This is an alpha field and requires enabling the
                                        DynamicResourceAllocation feature gate.

                                        This field is immutable. It can only be set for containers.
                                      items:
                                        description: ResourceClaim references one entry in PodSpec.ResourceClaims.
                                        properties:
                                          name:
                                            description: |-
                                              Name must match the name of one entry in pod.spec.resourceClaims of
                                              the Pod where this field is used. It makes that resource available
                                              inside a container.
                                            type: string
                                          request:
                                            description: |-
                                              Request is the name chosen for a request in the referenced claim.
                                              If empty, everything from the claim is made available, otherwise
                                              only the result of this request.
                                            type: string
                                        required:
                                          - name
                                        type: object
                                      type: array
                                      x-kubernetes-list-map-keys:
                                        - name
                                      x-kubernetes-list-type: map
                                    limits:
                                      additionalProperties:
                                        anyOf:
                                          - type: integer
                                          - type: string
                                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                        x-kubernetes-int-or-string: true
                                      description: |-
                                        Limits describes the maximum amount of compute resources allowed.
                                        More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                                      type: object
                                    requests:
                                      additionalProperties:
                                        anyOf:
                                          - type: integer
                                          - type: string
                                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                        x-kubernetes-int-or-string: true
                                      description: |-
                                        Requests describes the minimum amount of compute resources required.
                                        If Requests is omitted for a container, it defaults to Limits if that is explicitly specified,
                                        otherwise to an implementation-defined value. Requests cannot exceed Limits.
                                        More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                                      type: object
                                  type: object
                                restartPolicy:
                                  description: |-
                                    RestartPolicy defines the restart behavior of individual containers in a pod.
                                    This field may only be set for init containers, and the only allowed value is "Always".
                                    For non-init containers or when this field is not specified,
                                    the restart behavior is defined by the Pod's restart policy and the container type.
                                    Setting the RestartPolicy as "Always" for the init container will have the following effect:
                                    this init container will be continually restarted on
                                    exit until all regular containers have terminated. Once all regular
                                    containers have completed, all init containers with restartPolicy "Always"
                                    will be shut down. This lifecycle differs from normal init containers and
                                    is often referred to as a "sidecar" container. Although this init
                                    container still starts in the init container sequence, it does not wait
                                    for the container to complete before proceeding to the next init
                                    container. Instead, the next init container starts immediately after this
                                    init container is started, or after any startupProbe has successfully
                                    completed.
                                  type: string
                                securityContext:
                                  description: |-
                                    SecurityContext defines the security options the container should be run with.
                                    If set, the fields of SecurityContext override the equivalent fields of PodSecurityContext.
                                    More info: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/
                                  properties:
                                    allowPrivilegeEscalation:
                                      description: |-
                                        AllowPrivilegeEscalation controls whether a process can gain more
                                        privileges than its parent process. This bool directly controls if
                                        the no_new_privs flag will be set on the container process.
                                        AllowPrivilegeEscalation is true always when the container is:
                                        1) run as Privileged
                                        2) has CAP_SYS_ADMIN
                                        Note that this field cannot be set when spec.os.name is windows.
                                      type: boolean
                                    appArmorProfile:
                                      description: |-
                                        appArmorProfile is the AppArmor options to use by this container. If set, this profile
                                        overrides the pod's appArmorProfile.
                                        Note that this field cannot be set when spec.os.name is windows.
                                      properties:
                                        localhostProfile:
                                          description: |-
                                            localhostProfile indicates a profile loaded on the node that should be used.
                                            The profile must be preconfigured on the node to work.
                                            Must match the loaded name of the profile.
                                            Must be set if and only if type is "Localhost".
                                          type: string
                                        type:
                                          description: |-
                                            type indicates which kind of AppArmor profile will be applied.
                                            Valid options are:
                                              Localhost - a profile pre-loaded on the node.
                                              RuntimeDefault - the container runtime's default profile.
                                              Unconfined - no AppArmor enforcement.
                                          type: string
                                      required:
                                        - type
                                      type: object
                                    capabilities:
                                      description: |-
                                        The capabilities to add/drop when running containers.
                                        Defaults to the default set of capabilities granted by the container runtime.
                                        Note that this field cannot be set when spec.os.name is windows.
                                      properties:
                                        add:
                                          description: Added capabilities
                                          items:
                                            description: Capability represent POSIX capabilities type
                                            type: string
                                          type: array
                                          x-kubernetes-list-type: atomic
                                        drop:
                                          description: Removed capabilities
                                          items:
                                            description: Capability represent POSIX capabilities type
                                            type: string
                                          type: array
                                          x-kubernetes-list-type: atomic
                                      type: object
                                    privileged:
                                      description: |-
                                        Run container in privileged mode.
                                        Processes in privileged containers are essentially equivalent to root on the host.
                                        Defaults to false.
                                        Note that this field cannot be set when spec.os.name is windows.
                                      type: boolean
                                    procMount:
                                      description: |-
                                        procMount denotes the type of proc mount to use for the containers.
                                        The default value is Default which uses the container runtime defaults for
                                        readonly paths and masked paths.
                                        This requires the ProcMountType feature flag to be enabled.
                                        Note that this field cannot be set when spec.os.name is windows.
                                      type: string
                                    readOnlyRootFilesystem:
                                      description: |-
                                        Whether this container has a read-only root filesystem.
                                        Default is false.
                                        Note that this field cannot be set when spec.os.name is windows.
                                      type: boolean
                                    runAsGroup:
                                      description: |-
                                        The GID to run the entrypoint of the container process.
                                        Uses runtime default if unset.
                                        May also be set in PodSecurityContext.  If set in both SecurityContext and
                                        PodSecurityContext, the value specified in SecurityContext takes precedence.
                                        Note that this field cannot be set when spec.os.name is windows.
                                      format: int64
                                      type: integer
                                    runAsNonRoot:
                                      description: |-
                                        Indicates that the container must run as a non-root user.
                                        If true, the Kubelet will validate the image at runtime to ensure that it
                                        does not run as UID 0 (root) and fail to start the container if it does.
                                        If unset or false, no such validation will be performed.
                                        May also be set in PodSecurityContext.  If set in both SecurityContext and
                                        PodSecurityContext, the value specified in SecurityContext takes precedence.
                                      type: boolean
                                    runAsUser:
                                      description: |-
                                        The UID to run the entrypoint of the container process.
                                        Defaults to user specified in image metadata if unspecified.
                                        May also be set in PodSecurityContext.  If set in both SecurityContext and
                                        PodSecurityContext, the value specified in SecurityContext takes precedence.
                                        Note that this field cannot be set when spec.os.name is windows.
                                      format: int64
                                      type: integer
                                    seLinuxOptions:
                                      description: |-
                                        The SELinux context to be applied to the container.
                                        If unspecified, the container runtime will allocate a random SELinux context for each
                                        container.  May also be set in PodSecurityContext.  If set in both SecurityContext and
                                        PodSecurityContext, the value specified in SecurityContext takes precedence.
                                        Note that this field cannot be set when spec.os.name is windows.
                                      properties:
                                        level:
                                          description: Level is SELinux level label that applies to the container.
                                          type: string
                                        role:
                                          description: Role is a SELinux role label that applies to the container.
                                          type: string
                                        type:
                                          description: Type is a SELinux type label that applies to the container.
                                          type: string
                                        user:
                                          description: User is a SELinux user label that applies to the container.
                                          type: string
                                      type: object
                                    seccompProfile:
                                      description: |-
                                        The seccomp options to use by this container. If seccomp options are
                                        provided at both the pod & container level, the container options
                                        override the pod options.
                                        Note that this field cannot be set when spec.os.name is windows.
                                      properties:
                                        localhostProfile:
                                          description: |-
                                            localhostProfile indicates a profile defined in a file on the node should be used.
                                            The profile must be preconfigured on the node to work.
                                            Must be a descending path, relative to the kubelet's configured seccomp profile location.
                                            Must be set if type is "Localhost". Must NOT be set for any other type.
                                          type: string
                                        type:
                                          description: |-
                                            type indicates which kind of seccomp profile will be applied.
                                            Valid options are:

                                            Localhost - a profile defined in a file on the node should be used.
                                            RuntimeDefault - the container runtime default profile should be used.
                                            Unconfined - no profile should be applied.
                                          type: string
                                      required:
                                        - type
                                      type: object
                                    windowsOptions:
                                      description: |-
                                        The Windows specific settings applied to all containers.
                                        If unspecified, the options from the PodSecurityContext will be used.
                                        If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
                                        Note that this field cannot be set when spec.os.name is linux.
                                      properties:
                                        gmsaCredentialSpec:
                                          description: |-
                                            GMSACredentialSpec is where the GMSA admission webhook
                                            (https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the
                                            GMSA credential spec named by the GMSACredentialSpecName field.
                                          type: string
                                        gmsaCredentialSpecName:
                                          description: GMSACredentialSpecName is the name of the GMSA credential spec to use.
                                          type: string
                                        hostProcess:
                                          description: |-
                                            HostProcess determines if a container should be run as a 'Host Process' container.
                                            All of a Pod's containers must have the same effective HostProcess value
                                            (it is not allowed to have a mix of HostProcess containers and non-HostProcess containers).
                                            In addition, if HostProcess is true then HostNetwork must also be set to true.
                                          type: boolean
                                        runAsUserName:
                                          description: |-
                                            The UserName in Windows to run the entrypoint of the container process.
                                            Defaults to the user specified in image metadata if unspecified.
                                            May also be set in PodSecurityContext. If set in both SecurityContext and
                                            PodSecurityContext, the value specified in SecurityContext takes precedence.
                                          type: string
                                      type: object
                                  type: object
                                startupProbe:
                                  description: |-
                                    StartupProbe indicates that the Pod has successfully initialized.
                                    If specified, no other probes are executed until this completes successfully.
                                    If this probe fails, the Pod will be restarted, just as if the livenessProbe failed.
                                    This can be used to provide different probe parameters at the beginning of a Pod's lifecycle,
                                    when it might take a long time to load data or warm a cache, than during steady-state operation.
                                    This cannot be updated.
                                    More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                                  properties:
                                    exec:
                                      description: Exec specifies a command to execute in the container.
                                      properties:
                                        command:
                                          description: |-
                                            Command is the command line to execute inside the container, the working directory for the
                                            command  is root ('/') in the container's filesystem. The command is simply exec'd, it is
                                            not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use
                                            a shell, you need to explicitly call out to that shell.
                                            Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
                                          items:
                                            type: string
                                          type: array
                                          x-kubernetes-list-type: atomic
                                      type: object
                                    failureThreshold:
                                      description: |-
                                        Minimum consecutive failures for the probe to be considered failed after having succeeded.
                                        Defaults to 3. Minimum value is 1.
                                      format: int32
                                      type: integer
                                    grpc:
                                      description: GRPC specifies a GRPC HealthCheckRequest.
                                      properties:
                                        port:
                                          description: Port number of the gRPC service. Number must be in the range 1 to 65535.
                                          format: int32
                                          type: integer
                                        service:
                                          default: ""
                                          description: |-
                                            Service is the name of the service to place in the gRPC HealthCheckRequest
                                            (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).

                                            If this is not specified, the default behavior is defined by gRPC.
                                          type: string
                                      required:
                                        - port
                                      type: object
                                    httpGet:
                                      description: HTTPGet specifies an HTTP GET request to perform.
                                      properties:
                                        host:
                                          description: |-
                                            Host name to connect to, defaults to the pod IP. You probably want to set
                                            "Host" in httpHeaders instead.
                                          type: string
                                        httpHeaders:
                                          description: Custom headers to set in the request. HTTP allows repeated headers.
                                          items:
                                            description: HTTPHeader describes a custom header to be used in HTTP probes
                                            properties:
                                              name:
                                                description: |-
                                                  The header field name.
                                                  This will be canonicalized upon output, so case-variant names will be understood as the same header.
                                                type: string
                                              value:
                                                description: The header field value
                                                type: string
                                            required:
                                              - name
                                              - value
                                            type: object
                                          type: array
                                          x-kubernetes-list-type: atomic
                                        path:
                                          description: Path to access on the HTTP server.
                                          type: string
                                        port:
                                          anyOf:
                                            - type: integer
                                            - type: string
                                          description: |-
                                            Name or number of the port to access on the container.
                                            Number must be in the range 1 to 65535.
                                            Name must be an IANA_SVC_NAME.
                                          x-kubernetes-int-or-string: true
                                        scheme:
                                          description: |-
                                            Scheme to use for connecting to the host.
                                            Defaults to HTTP.
                                          type: string
                                      required:
                                        - port
                                      type: object
                                    initialDelaySeconds:
                                      description: |-
                                        Number of seconds after the container has started before liveness probes are initiated.
                                        More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                                      format: int32
                                      type: integer
                                    periodSeconds:
                                      description: |-
                                        How often (in seconds) to perform the probe.
                                        Default to 10 seconds. Minimum value is 1.
                                      format: int32
                                      type: integer
                                    successThreshold:
                                      description: |-
                                        Minimum consecutive successes for the probe to be considered successful after having failed.
                                        Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.
                                      format: int32
                                      type: integer
                                    tcpSocket:
                                      description: TCPSocket specifies a connection to a TCP port.
                                      properties:
                                        host:
                                          description: 'Optional: Host name to connect to, defaults to the pod IP.'
                                          type: string
                                        port:
                                          anyOf:
                                            - type: integer
                                            - type: string
                                          description: |-
                                            Number or name of the port to access on the container.
                                            Number must be in the range 1 to 65535.
                                            Name must be an IANA_SVC_NAME.
                                          x-kubernetes-int-or-string: true
                                      required:
                                        - port
                                      type: object
                                    terminationGracePeriodSeconds:
                                      description: |-
                                        Optional duration in seconds the pod needs to terminate gracefully upon probe failure.
                                        The grace period is the duration in seconds after the processes running in the pod are sent
                                        a termination signal and the time when the processes are forcibly halted with a kill signal.
                                        Set this value longer than the expected cleanup time for your process.
                                        If this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this
                                        value overrides the value provided by the pod spec.
                                        Value must be non-negative integer. The value zero indicates stop immediately via
                                        the kill signal (no opportunity to shut down).
                                        This is a beta field and requires enabling ProbeTerminationGracePeriod feature gate.
                                        Minimum value is 1. spec.terminationGracePeriodSeconds is used if unset.
                                      format: int64
                                      type: integer
                                    timeoutSeconds:
                                      description: |-
                                        Number of seconds after which the probe times out.
                                        Defaults to 1 second. Minimum value is 1.
                                        More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                                      format: int32
                                      type: integer
                                  type: object
                                stdin:
                                  description: |-
                                    Whether this container should allocate a buffer for stdin in the container runtime. If this
                                    is not set, reads from stdin in the container will always result in EOF.
                                    Default is false.
                                  type: boolean
                                stdinOnce:
                                  description: |-
                                    Whether the container runtime should close the stdin channel after it has been opened by
                                    a single attach. When stdin is true the stdin stream will remain open across multiple attach
                                    sessions. If stdinOnce is set to true, stdin is opened on container start, is empty until the
                                    first client attaches to stdin, and then remains open and accepts data until the client disconnects,
                                    at which time stdin is closed and remains closed until the container is restarted. If this
                                    flag is false, a container processes that reads from stdin will never receive an EOF.
                                    Default is false
                                  type: boolean
                                terminationMessagePath:
                                  description: |-
                                    Optional: Path at which the file to which the container's termination message
                                    will be written is mounted into the container's filesystem.
                                    Message written is intended to be brief final status, such as an assertion failure message.
                                    Will be truncated by the node if greater than 4096 bytes. The total message length across
                                    all containers will be limited to 12kb.
                                    Defaults to /dev/termination-log.
                                    Cannot be updated.
                                  type: string
                                terminationMessagePolicy:
                                  description: |-
                                    Indicate how the termination message should be populated. File will use the contents of
                                    terminationMessagePath to populate the container status message on both success and failure.
                                    FallbackToLogsOnError will use the last chunk of container log output if the termination
                                    message file is empty and the container exited with an error.
                                    The log output is limited to 2048 bytes or 80 lines, whichever is smaller.
                                    Defaults to File.
                                    Cannot be updated.
                                  type: string
                                tty:
                                  description: |-
                                    Whether this container should allocate a TTY for itself, also requires 'stdin' to be true.
                                    Default is false.
                                  type: boolean
                                volumeDevices:
                                  description: volumeDevices is the list of block devices to be used by the container.
                                  items:
                                    description: volumeDevice describes a mapping of a raw block device within a container.
                                    properties:
                                      devicePath:
                                        description: devicePath is the path inside of the container that the device will be mapped to.
                                        type: string
                                      name:
                                        description: name must match the name of a persistentVolumeClaim in the pod
                                        type: string
                                    required:
                                      - devicePath
                                      - name
                                    type: object
                                  type: array
                                  x-kubernetes-list-map-keys:
                                    - devicePath
                                  x-kubernetes-list-type: map
                                volumeMounts:
                                  description: |-
                                    Pod volumes to mount into the container's filesystem.
                                    Cannot be updated.
                                  items:
                                    description: VolumeMount describes a mounting of a Volume within a container.
                                    properties:
                                      mountPath:
                                        description: |-
                                          Path within the container at which the volume should be mounted.  Must
                                          not contain ':'.
                                        type: string
                                      mountPropagation:
                                        description: |-
                                          mountPropagation determines how mounts are propagated from the host
                                          to container and the other way around.
                                          When not set, MountPropagationNone is used.
                                          This field is beta in 1.10.
                                          When RecursiveReadOnly is set to IfPossible or to Enabled, MountPropagation must be None or unspecified
                                          (which defaults to None).
                                        type: string
                                      name:
                                        description: This must match the Name of a Volume.
                                        type: string
                                      readOnly:
                                        description: |-
                                          Mounted read-only if true, read-write otherwise (false or unspecified).
                                          Defaults to false.
                                        type: boolean
                                      recursiveReadOnly:
                                        description: |-
                                          RecursiveReadOnly specifies whether read-only mounts should be handled
                                          recursively.

                                          If ReadOnly is false, this field has no meaning and must be unspecified.

                                          If ReadOnly is true, and this field is set to Disabled, the mount is not made
                                          recursively read-only.  If this field is set to IfPossible, the mount is made
                                          recursively read-only, if it is supported by the container runtime.  If this
                                          field is set to Enabled, the mount is made recursively read-only if it is
                                          supported by the container runtime, otherwise the pod will not be started and
                                          an error will be generated to indicate the reason.

                                          If this field is set to IfPossible or Enabled, MountPropagation must be set to
                                          None (or be unspecified, which defaults to None).

                                          If this field is not specified, it is treated as an equivalent of Disabled.
                                        type: string
                                      subPath:
                                        description: |-
                                          Path within the volume from which the container's volume should be mounted.
                                          Defaults to "" (volume's root).
                                        type: string
                                      subPathExpr:
                                        description: |-
                                          Expanded path within the volume from which the container's volume should be mounted.
                                          Behaves similarly to SubPath but environment variable references $(VAR_NAME) are expanded using the container's environment.
                                          Defaults to "" (volume's root).
                                          SubPathExpr and SubPath are mutually exclusive.
                                        type: string
                                    required:
                                      - mountPath
                                      - name
                                    type: object
                                  type: array
                                  x-kubernetes-list-map-keys:
                                    - mountPath
                                  x-kubernetes-list-type: map
                                workingDir:
                                  description: |-
                                    Container's working directory.
                                    If not specified, the container runtime's default will be used, which
                                    might be configured in the container image.
                                    Cannot be updated.
                                  type: string
                              required:
                                - name
                              type: object
                            type: array
                        type: object
                      podTemplate:
                        description: PodTemplate defines configuration for the template for Mattermost pods.
                        properties:
                          command:
                            description: |-
                              Defines a command override for Mattermost app server pods.
                              The default command is "mattermost".
                            items:
                              type: string
                            type: array
                          containerSecurityContext:
                            description: Defines the security context for the Mattermost app server container.
                            properties:
                              allowPrivilegeEscalation:
                                description: |-
                                  AllowPrivilegeEscalation controls whether a process can gain more
                                  privileges than its parent process. This bool directly controls if
                                  the no_new_privs flag will be set on the container process.
                                  AllowPrivilegeEscalation is true always when the container is:
                                  1) run as Privileged
                                  2) has CAP_SYS_ADMIN
                                  Note that this field cannot be set when spec.os.name is windows.
                                type: boolean
                              appArmorProfile:
                                description: |-
                                  appArmorProfile is the AppArmor options to use by this container. If set, this profile
                                  overrides the pod's appArmorProfile.
                                  Note that this field cannot be set when spec.os.name is windows.
                                properties:
                                  localhostProfile:
                                    description: |-
                                      localhostProfile indicates a profile loaded on the node that should be used.
                                      The profile must be preconfigured on the node to work.
                                      Must match the loaded name of the profile.
                                      Must be set if and only if type is "Localhost".
                                    type: string
                                  type:
                                    description: |-
                                      type indicates which kind of AppArmor profile will be applied.
                                      Valid options are:
                                        Localhost - a profile pre-loaded on the node.
                                        RuntimeDefault - the container runtime's default profile.
                                        Unconfined - no AppArmor enforcement.
                                    type: string
                                required:
                                  - type
                                type: object
                              capabilities:
                                description: |-
                                  The capabilities to add/drop when running containers.
                                  Defaults to the default set of capabilities granted by the container runtime.
                                  Note that this field cannot be set when spec.os.name is windows.
                                properties:
                                  add:
                                    description: Added capabilities
                                    items:
                                      description: Capability represent POSIX capabilities type
                                      type: string
                                    type: array
                                    x-kubernetes-list-type: atomic
                                  drop:
                                    description: Removed capabilities
                                    items:
                                      description: Capability represent POSIX capabilities type
                                      type: string
                                    type: array
                                    x-kubernetes-list-type: atomic
                                type: object
                              privileged:
                                description: |-
                                  Run container in privileged mode.
                                  Processes in privileged containers are essentially equivalent to root on the host.
                                  Defaults to false.
                                  Note that this field cannot be set when spec.os.name is windows.
                                type: boolean
                              procMount:
                                description: |-
                                  procMount denotes the type of proc mount to use for the containers.
                                  The default value is Default which uses the container runtime defaults for
                                  readonly paths and masked paths.
                                  This requires the ProcMountType feature flag to be enabled.
                                  Note that this field cannot be set when spec.os.name is windows.
                                type: string
                              readOnlyRootFilesystem:
                                description: |-
                                  Whether this container has a read-only root filesystem.
                                  Default is false.
                                  Note that this field cannot be set when spec.os.name is windows.
                                type: boolean
                              runAsGroup:
                                description: |-
                                  The GID to run the entrypoint of the container process.
                                  Uses runtime default if unset.
                                  May also be set in PodSecurityContext.  If set in both SecurityContext and
                                  PodSecurityContext, the value specified in SecurityContext takes precedence.
                                  Note that this field cannot be set when spec.os.name is windows.
                                format: int64
                                type: integer
                              runAsNonRoot:
                                description: |-
                                  Indicates that the container must run as a non-root user.
                                  If true, the Kubelet will validate the image at runtime to ensure that it
                                  does not run as UID 0 (root) and fail to start the container if it does.
                                  If unset or false, no such validation will be performed.
                                  May also be set in PodSecurityContext.  If set in both SecurityContext and
                                  PodSecurityContext, the value specified in SecurityContext takes precedence.
                                type: boolean
                              runAsUser:
                                description: |-
                                  The UID to run the entrypoint of the container process.
                                  Defaults to user specified in image metadata if unspecified.
                                  May also be set in PodSecurityContext.  If set in both SecurityContext and
                                  PodSecurityContext, the value specified in SecurityContext takes precedence.
                                  Note that this field cannot be set when spec.os.name is windows.
                                format: int64
                                type: integer
                              seLinuxOptions:
                                description: |-
                                  The SELinux context to be applied to the container.
                                  If unspecified, the container runtime will allocate a random SELinux context for each
                                  container.  May also be set in PodSecurityContext.  If set in both SecurityContext and
                                  PodSecurityContext, the value specified in SecurityContext takes precedence.
                                  Note that this field cannot be set when spec.os.name is windows.
                                properties:
                                  level:
                                    description: Level is SELinux level label that applies to the container.
                                    type: string
                                  role:
                                    description: Role is a SELinux role label that applies to the container.
                                    type: string
                                  type:
                                    description: Type is a SELinux type label that applies to the container.
                                    type: string
                                  user:
                                    description: User is a SELinux user label that applies to the container.
                                    type: string
                                type: object
                              seccompProfile:
                                description: |-
                                  The seccomp options to use by this container. If seccomp options are
                                  provided at both the pod & container level, the container options
                                  override the pod options.
                                  Note that this field cannot be set when spec.os.name is windows.
                                properties:
                                  localhostProfile:
                                    description: |-
                                      localhostProfile indicates a profile defined in a file on the node should be used.
                                      The profile must be preconfigured on the node to work.
                                      Must be a descending path, relative to the kubelet's configured seccomp profile location.
                                      Must be set if type is "Localhost". Must NOT be set for any other type.
                                    type: string
                                  type:
                                    description: |-
                                      type indicates which kind of seccomp profile will be applied.
                                      Valid options are:

                                      Localhost - a profile defined in a file on the node should be used.
                                      RuntimeDefault - the container runtime default profile should be used.
                                      Unconfined - no profile should be applied.
                                    type: string
                                required:
                                  - type
                                type: object
                              windowsOptions:
                                description: |-
                                  The Windows specific settings applied to all containers.
                                  If unspecified, the options from the PodSecurityContext will be used.
                                  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
                                  Note that this field cannot be set when spec.os.name is linux.
                                properties:
                                  gmsaCredentialSpec:
                                    description: |-
                                      GMSACredentialSpec is where the GMSA admission webhook
                                      (https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the
                                      GMSA credential spec named by the GMSACredentialSpecName field.
                                    type: string
                                  gmsaCredentialSpecName:
                                    description: GMSACredentialSpecName is the name of the GMSA credential spec to use.
                                    type: string
                                  hostProcess:
                                    description: |-
                                      HostProcess determines if a container should be run as a 'Host Process' container.
                                      All of a Pod's containers must have the same effective HostProcess value
                                      (it is not allowed to have a mix of HostProcess containers and non-HostProcess containers).
                                      In addition, if HostProcess is true then HostNetwork must also be set to true.
                                    type: boolean
                                  runAsUserName:
                                    description: |-
                                      The UserName in Windows to run the entrypoint of the container process.
                                      Defaults to the user specified in image metadata if unspecified.
                                      May also be set in PodSecurityContext. If set in both SecurityContext and
                                      PodSecurityContext, the value specified in SecurityContext takes precedence.
                                    type: string
                                type: object
                            type: object
                          extraAnnotations:
                            additionalProperties:
                              type: string
                            description: |-
                              Defines annotations to add to the Mattermost app server pods.
                              Overrides of default prometheus annotations are ignored.
                            type: object
                          extraLabels:
                            additionalProperties:
                              type: string
                            description: |-
                              Defines labels to add to the Mattermost app server pods.
                              Overrides what is set in ResourceLabels, does not override default labels (app and cluster labels).
                            type: object
                          securityContext:
                            description: Defines the security context for the Mattermost app server pods.
                            properties:
                              appArmorProfile:
                                description: |-
                                  appArmorProfile is the AppArmor options to use by the containers in this pod.
                                  Note that this field cannot be set when spec.os.name is windows.
                                properties:
                                  localhostProfile:
                                    description: |-
                                      localhostProfile indicates a profile loaded on the node that should be used.
                                      The profile must be preconfigured on the node to work.
                                      Must match the loaded name of the profile.
                                      Must be set if and only if type is "Localhost".
                                    type: string
                                  type:
                                    description: |-
                                      type indicates which kind of AppArmor profile will be applied.
                                      Valid options are:
                                        Localhost - a profile pre-loaded on the node.
                                        RuntimeDefault - the container runtime's default profile.
                                        Unconfined - no AppArmor enforcement.
                                    type: string
                                required:
                                  - type
                                type: object
                              fsGroup:
                                description: |-
                                  A special supplemental group that applies to all containers in a pod.
                                  Some volume types allow the Kubelet to change the ownership of that volume
                                  to be owned by the pod:

                                  1. The owning GID will be the FSGroup
                                  2. The setgid bit is set (new files created in the volume will be owned by FSGroup)
                                  3. The permission bits are OR'd with rw-rw----

                                  If unset, the Kubelet will not modify the ownership and permissions of any volume.
                                  Note that this field cannot be set when spec.os.name is windows.
                                format: int64
                                type: integer
                              fsGroupChangePolicy:
                                description: |-
                                  fsGroupChangePolicy defines behavior of changing ownership and permission of the volume
                                  before being exposed inside Pod. This field will only apply to
                                  volume types which support fsGroup based ownership(and permissions).
                                  It will have no effect on ephemeral volume types such as: secret, configmaps
                                  and emptydir.
                                  Valid values are "OnRootMismatch" and "Always". If not specified, "Always" is used.
                                  Note that this field cannot be set when spec.os.name is windows.
                                type: string
                              runAsGroup:
                                description: |-
                                  The GID to run the entrypoint of the container process.
                                  Uses runtime default if unset.
                                  May also be set in SecurityContext.  If set in both SecurityContext and
                                  PodSecurityContext, the value specified in SecurityContext takes precedence
                                  for that container.
                                  Note that this field cannot be set when spec.os.name is windows.
                                format: int64
                                type: integer
                              runAsNonRoot:
                                description: |-
                                  Indicates that the container must run as a non-root user.
                                  If true, the Kubelet will validate the image at runtime to ensure that it
                                  does not run as UID 0 (root) and fail to start the container if it does.
                                  If unset or false, no such validation will be performed.
                                  May also be set in SecurityContext.  If set in both SecurityContext and
                                  PodSecurityContext, the value specified in SecurityContext takes precedence.
                                type: boolean
                              runAsUser:
                                description: |-
                                  The UID to run the entrypoint of the container process.
                                  Defaults to user specified in image metadata if unspecified.
                                  May also be set in SecurityContext.  If set in both SecurityContext and
                                  PodSecurityContext, the value specified in SecurityContext takes precedence
                                  for that container.
                                  Note that this field cannot be set when spec.os.name is windows.
                                format: int64
                                type: integer
                              seLinuxChangePolicy:
                                description: |-
                                  seLinuxChangePolicy defines how the container's SELinux label is applied to all volumes used by the Pod.
                                  It has no effect on nodes that do not support SELinux or to volumes does not support SELinux.
                                  Valid values are "MountOption" and "Recursive".

                                  "Recursive" means relabeling of all files on all Pod volumes by the container runtime.
                                  This may be slow for large volumes, but allows mixing privileged and unprivileged Pods sharing the same volume on the same node.

                                  "MountOption" mounts all eligible Pod volumes with `-o context` mount option.
                                  This requires all Pods that share the same volume to use the same SELinux label.
                                  It is not possible to share the same volume among privileged and unprivileged Pods.
                                  Eligible volumes are in-tree FibreChannel and iSCSI volumes, and all CSI volumes
                                  whose CSI driver announces SELinux support by setting spec.seLinuxMount: true in their
                                  CSIDriver instance. Other volumes are always re-labelled recursively.
                                  "MountOption" value is allowed only when SELinuxMount feature gate is enabled.

                                  If not specified and SELinuxMount feature gate is enabled, "MountOption" is used.
                                  If not specified and SELinuxMount feature gate is disabled, "MountOption" is used for ReadWriteOncePod volumes
                                  and "Recursive" for all other volumes.

                                  This field affects only Pods that have SELinux label set, either in PodSecurityContext or in SecurityContext of all containers.

                                  All Pods that use the same volume should use the same seLinuxChangePolicy, otherwise some pods can get stuck in ContainerCreating state.
                                  Note that this field cannot be set when spec.os.name is windows.
                                type: string
                              seLinuxOptions:
                                description: |-
                                  The SELinux context to be applied to all containers.
                                  If unspecified, the container runtime will allocate a random SELinux context for each
                                  container.  May also be set in SecurityContext.  If set in
                                  both SecurityContext and PodSecurityContext, the value specified in SecurityContext
                                  takes precedence for that container.
                                  Note that this field cannot be set when spec.os.name is windows.
                                properties:
                                  level:
                                    description: Level is SELinux level label that applies to the container.
                                    type: string
                                  role:
                                    description: Role is a SELinux role label that applies to the container.
                                    type: string
                                  type:
                                    description: Type is a SELinux type label that applies to the container.
                                    type: string
                                  user:
                                    description: User is a SELinux user label that applies to the container.
                                    type: string
                                type: object
                              seccompProfile:
                                description: |-
                                  The seccomp options to use by the containers in this pod.
                                  Note that this field cannot be set when spec.os.name is windows.
                                properties:
                                  localhostProfile:
                                    description: |-
                                      localhostProfile indicates a profile defined in a file on the node should be used.
                                      The profile must be preconfigured on the node to work.
                                      Must be a descending path, relative to the kubelet's configured seccomp profile location.
                                      Must be set if type is "Localhost". Must NOT be set for any other type.
                                    type: string
                                  type:
                                    description: |-
                                      type indicates which kind of seccomp profile will be applied.
                                      Valid options are:

                                      Localhost - a profile defined in a file on the node should be used.
                                      RuntimeDefault - the container runtime default profile should be used.
                                      Unconfined - no profile should be applied.
                                    type: string
                                required:
                                  - type
                                type: object
                              supplementalGroups:
                                description: |-
                                  A list of groups applied to the first process run in each container, in
                                  addition to the container's primary GID and fsGroup (if specified).  If
                                  the SupplementalGroupsPolicy feature is enabled, the
                                  supplementalGroupsPolicy field determines whether these are in addition
                                  to or instead of any group memberships defined in the container image.
                                  If unspecified, no additional groups are added, though group memberships
                                  defined in the container image may still be used, depending on the
                                  supplementalGroupsPolicy field.
                                  Note that this field cannot be set when spec.os.name is windows.
                                items:
                                  format: int64
                                  type: integer
                                type: array
                                x-kubernetes-list-type: atomic
                              supplementalGroupsPolicy:
                                description: |-
                                  Defines how supplemental groups of the first container processes are calculated.
                                  Valid values are "Merge" and "Strict". If not specified, "Merge" is used.
                                  (Alpha) Using the field requires the SupplementalGroupsPolicy feature gate to be enabled
                                  and the container runtime must implement support for this feature.
                                  Note that this field cannot be set when spec.os.name is windows.
                                type: string
                              sysctls:
                                description: |-
                                  Sysctls hold a list of namespaced sysctls used for the pod. Pods with unsupported
                                  sysctls (by the container runtime) might fail to launch.
                                  Note that this field cannot be set when spec.os.name is windows.
                                items:
                                  description: Sysctl defines a kernel parameter to be set
                                  properties:
                                    name:
                                      description: Name of a property to set
                                      type: string
                                    value:
                                      description: Value of a property to set
                                      type: string
                                  required:
                                    - name
                                    - value
                                  type: object
                                type: array
                                x-kubernetes-list-type: atomic
                              windowsOptions:
                                description: |-
                                  The Windows specific settings applied to all containers.
                                  If unspecified, the options within a container's SecurityContext will be used.
                                  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
                                  Note that this field cannot be set when spec.os.name is linux.
                                properties:
                                  gmsaCredentialSpec:
                                    description: |-
                                      GMSACredentialSpec is where the GMSA admission webhook
                                      (https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the
                                      GMSA credential spec named by the GMSACredentialSpecName field.
                                    type: string
                                  gmsaCredentialSpecName:
                                    description: GMSACredentialSpecName is the name of the GMSA credential spec to use.
                                    type: string
                                  hostProcess:
                                    description: |-
                                      HostProcess determines if a container should be run as a 'Host Process' container.
                                      All of a Pod's containers must have the same effective HostProcess value
                                      (it is not allowed to have a mix of HostProcess containers and non-HostProcess containers).
                                      In addition, if HostProcess is true then HostNetwork must also be set to true.
                                    type: boolean
                                  runAsUserName:
                                    description: |-
                                      The UserName in Windows to run the entrypoint of the container process.
                                      Defaults to the user specified in image metadata if unspecified.
                                      May also be set in PodSecurityContext. If set in both SecurityContext and
                                      PodSecurityContext, the value specified in SecurityContext takes precedence.
                                    type: string
                                type: object
                            type: object
                        type: object
                      probes:
                        description: |-
                          Probes defines configuration of liveness and readiness probe for Mattermost pods.
                          These settings generally don't need to be changed.
                        properties:
                          livenessProbe:
                            description: Defines the probe to check if the application is up and running.
                            properties:
                              exec:
                                description: Exec specifies a command to execute in the container.
                                properties:
                                  command:
                                    description: |-
                                      Command is the command line to execute inside the container, the working directory for the
                                      command  is root ('/') in the container's filesystem. The command is simply exec'd, it is
                                      not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use
                                      a shell, you need to explicitly call out to that shell.
                                      Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
                                    items:
                                      type: string
                                    type: array
                                    x-kubernetes-list-type: atomic
                                type: object
                              failureThreshold:
                                description: |-
                                  Minimum consecutive failures for the probe to be considered failed after having succeeded.
                                  Defaults to 3. Minimum value is 1.
                                format: int32
                                type: integer
                              grpc:
                                description: GRPC specifies a GRPC HealthCheckRequest.
                                properties:
                                  port:
                                    description: Port number of the gRPC service. Number must be in the range 1 to 65535.
                                    format: int32
                                    type: integer
                                  service:
                                    default: ""
                                    description: |-
                                      Service is the name of the service to place in the gRPC HealthCheckRequest
                                      (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).

                                      If this is not specified, the default behavior is defined by gRPC.
                                    type: string
                                required:
                                  - port
                                type: object
                              httpGet:
                                description: HTTPGet specifies an HTTP GET request to perform.
                                properties:
                                  host:
                                    description: |-
                                      Host name to connect to, defaults to the pod IP. You probably want to set
                                      "Host" in httpHeaders instead.
                                    type: string
                                  httpHeaders:
                                    description: Custom headers to set in the request. HTTP allows repeated headers.
                                    items:
                                      description: HTTPHeader describes a custom header to be used in HTTP probes
                                      properties:
                                        name:
                                          description: |-
                                            The header field name.
                                            This will be canonicalized upon output, so case-variant names will be understood as the same header.
                                          type: string
                                        value:
                                          description: The header field value
                                          type: string
                                      required:
                                        - name
                                        - value
                                      type: object
                                    type: array
                                    x-kubernetes-list-type: atomic
                                  path:
                                    description: Path to access on the HTTP server.
                                    type: string
                                  port:
                                    anyOf:
                                      - type: integer
                                      - type: string
                                    description: |-
                                      Name or number of the port to access on the container.
                                      Number must be in the range 1 to 65535.
                                      Name must be an IANA_SVC_NAME.
                                    x-kubernetes-int-or-string: true
                                  scheme:
                                    description: |-
                                      Scheme to use for connecting to the host.
                                      Defaults to HTTP.
                                    type: string
                                required:
                                  - port
                                type: object
                              initialDelaySeconds:
                                description: |-
                                  Number of seconds after the container has started before liveness probes are initiated.
                                  More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                                format: int32
                                type: integer
                              periodSeconds:
                                description: |-
                                  How often (in seconds) to perform the probe.
                                  Default to 10 seconds. Minimum value is 1.
                                format: int32
                                type: integer
                              successThreshold:
                                description: |-
                                  Minimum consecutive successes for the probe to be considered successful after having failed.
                                  Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.
                                format: int32
                                type: integer
                              tcpSocket:
                                description: TCPSocket specifies a connection to a TCP port.
                                properties:
                                  host:
                                    description: 'Optional: Host name to connect to, defaults to the pod IP.'
                                    type: string
                                  port:
                                    anyOf:
                                      - type: integer
                                      - type: string
                                    description: |-
                                      Number or name of the port to access on the container.
                                      Number must be in the range 1 to 65535.
                                      Name must be an IANA_SVC_NAME.
                                    x-kubernetes-int-or-string: true
                                required:
                                  - port
                                type: object
                              terminationGracePeriodSeconds:
                                description: |-
                                  Optional duration in seconds the pod needs to terminate gracefully upon probe failure.
                                  The grace period is the duration in seconds after the processes running in the pod are sent
                                  a termination signal and the time when the processes are forcibly halted with a kill signal.
                                  Set this value longer than the expected cleanup time for your process.
                                  If this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this
                                  value overrides the value provided by the pod spec.
                                  Value must be non-negative integer. The value zero indicates stop immediately via
                                  the kill signal (no opportunity to shut down).
                                  This is a beta field and requires enabling ProbeTerminationGracePeriod feature gate.
                                  Minimum value is 1. spec.terminationGracePeriodSeconds is used if unset.
                                format: int64
                                type: integer
                              timeoutSeconds:
                                description: |-
                                  Number of seconds after which the probe times out.
                                  Defaults to 1 second. Minimum value is 1.
                                  More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                                format: int32
                                type: integer
                            type: object
                          readinessProbe:
                            description: Defines the probe to check if the application is ready to accept traffic.
                            properties:
                              exec:
                                description: Exec specifies a command to execute in the container.
                                properties:
                                  command:
                                    description: |-
                                      Command is the command line to execute inside the container, the working directory for the
                                      command  is root ('/') in the container's filesystem. The command is simply exec'd, it is
                                      not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use
                                      a shell, you need to explicitly call out to that shell.
                                      Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
                                    items:
                                      type: string
                                    type: array
                                    x-kubernetes-list-type: atomic
                                type: object
                              failureThreshold:
                                description: |-
                                  Minimum consecutive failures for the probe to be considered failed after having succeeded.
                                  Defaults to 3. Minimum value is 1.
                                format: int32
                                type: integer
                              grpc:
                                description: GRPC specifies a GRPC HealthCheckRequest.
                                properties:
                                  port:
                                    description: Port number of the gRPC service. Number must be in the range 1 to 65535.
                                    format: int32
                                    type: integer
                                  service:
                                    default: ""
                                    description: |-
                                      Service is the name of the service to place in the gRPC HealthCheckRequest
                                      (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).

                                      If this is not specified, the default behavior is defined by gRPC.
                                    type: string
                                required:
                                  - port
                                type: object
                              httpGet:
                                description: HTTPGet specifies an HTTP GET request to perform.
                                properties:
                                  host:
                                    description: |-
                                      Host name to connect to, defaults to the pod IP. You probably want to set
                                      "Host" in httpHeaders instead.
                                    type: string
                                  httpHeaders:
                                    description: Custom headers to set in the request. HTTP allows repeated headers.
                                    items:
                                      description: HTTPHeader describes a custom header to be used in HTTP probes
                                      properties:
                                        name:
                                          description: |-
                                            The header field name.
                                            This will be canonicalized upon output, so case-variant names will be understood as the same header.
                                          type: string
                                        value:
                                          description: The header field value
                                          type: string
                                      required:
                                        - name
                                        - value
                                      type: object
                                    type: array
                                    x-kubernetes-list-type: atomic
                                  path:
                                    description: Path to access on the HTTP server.
                                    type: string
                                  port:
                                    anyOf:
                                      - type: integer
                                      - type: string
                                    description: |-
                                      Name or number of the port to access on the container.
                                      Number must be in the range 1 to 65535.
                                      Name must be an IANA_SVC_NAME.
                                    x-kubernetes-int-or-string: true
                                  scheme:
                                    description: |-
                                      Scheme to use for connecting to the host.
                                      Defaults to HTTP.
                                    type: string
                                required:
                                  - port
                                type: object
                              initialDelaySeconds:
                                description: |-
                                  Number of seconds after the container has started before liveness probes are initiated.
                                  More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                                format: int32
                                type: integer
                              periodSeconds:
                                description: |-
                                  How often (in seconds) to perform the probe.
                                  Default to 10 seconds. Minimum value is 1.
                                format: int32
                                type: integer
                              successThreshold:
                                description: |-
                                  Minimum consecutive successes for the probe to be considered successful after having failed.
                                  Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.
                                format: int32
                                type: integer
                              tcpSocket:
                                description: TCPSocket specifies a connection to a TCP port.
                                properties:
                                  host:
                                    description: 'Optional: Host name to connect to, defaults to the pod IP.'
                                    type: string
                                  port:
                                    anyOf:
                                      - type: integer
                                      - type: string
                                    description: |-
                                      Number or name of the port to access on the container.
                                      Number must be in the range 1 to 65535.
                                      Name must be an IANA_SVC_NAME.
                                    x-kubernetes-int-or-string: true
                                required:
                                  - port
                                type: object
                              terminationGracePeriodSeconds:
                                description: |-
                                  Optional duration in seconds the pod needs to terminate gracefully upon probe failure.
                                  The grace period is the duration in seconds after the processes running in the pod are sent
                                  a termination signal and the time when the processes are forcibly halted with a kill signal.
                                  Set this value longer than the expected cleanup time for your process.
                                  If this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this
                                  value overrides the value provided by the pod spec.
                                  Value must be non-negative integer. The value zero indicates stop immediately via
                                  the kill signal (no opportunity to shut down).
                                  This is a beta field and requires enabling ProbeTerminationGracePeriod feature gate.
                                  Minimum value is 1. spec.terminationGracePeriodSeconds is used if unset.
                                format: int64
                                type: integer
                              timeoutSeconds:
                                description: |-
                                  Number of seconds after which the probe times out.
                                  Defaults to 1 second. Minimum value is 1.
                                  More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                                format: int32
                                type: integer
                            type: object
                        type: object
                      replicas:
                        description: |-
                          Replicas defines the number of replicas to use for the Mattermost app
                          servers.
                        format: int32
                        type: integer
                      resourceLabels:
                        additionalProperties:
                          type: string
                        type: object
                      resourcePatch:
                        description: |-
                          ResourcePatch specifies JSON patches that can be applied to resources created by Mattermost Operator.

                          WARNING: ResourcePatch is highly experimental and subject to change.
                          Some patches may be impossible to perform or may impact the stability of Mattermost server.

                          Use at your own risk when no other options are available.
                        properties:
                          deployment:
                            properties:
                              disable:
                                type: boolean
                              patch:
                                type: string
                            type: object
                          service:
                            properties:
                              disable:
                                type: boolean
                              patch:
                                type: string
                            type: object
                        type: object
                      scheduling:
                        description: |-
                          Scheduling defines the configuration related to scheduling of the Mattermost pods
                          as well as resource constraints. These settings generally don't need to be changed.
                        properties:
                          affinity:
                            description: If specified, affinity will define the pod's scheduling constraints
                            properties:
                              nodeAffinity:
                                description: Describes node affinity scheduling rules for the pod.
                                properties:
                                  preferredDuringSchedulingIgnoredDuringExecution:
                                    description: |-
                                      The scheduler will prefer to schedule pods to nodes that satisfy
                                      the affinity expressions specified by this field, but it may choose
                                      a node that violates one or more of the expressions. The node that is
                                      most preferred is the one with the greatest sum of weights, i.e.
                                      for each node that meets all of the scheduling requirements (resource
                                      request, requiredDuringScheduling affinity expressions, etc.),
                                      compute a sum by iterating through the elements of this field and adding
                                      "weight" to the sum if the node matches the corresponding matchExpressions; the
                                      node(s) with the highest sum are the most preferred.
                                    items:
                                      description: |-
                                        An empty preferred scheduling term matches all objects with implicit weight 0
                                        (i.e. it's a no-op). A null preferred scheduling term matches no objects (i.e. is also a no-op).
                                      properties:
                                        preference:
                                          description: A node selector term, associated with the corresponding weight.
                                          properties:
                                            matchExpressions:
                                              description: A list of node selector requirements by node's labels.
                                              items:
                                                description: |-
                                                  A node selector requirement is a selector that contains values, a key, and an operator
                                                  that relates the key and values.
                                                properties:
                                                  key:
                                                    description: The label key that the selector applies to.
                                                    type: string
                                                  operator:
                                                    description: |-
                                                      Represents a key's relationship to a set of values.
                                                      Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
                                                    type: string
                                                  values:
                                                    description: |-
                                                      An array of string values. If the operator is In or NotIn,
                                                      the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                      the values array must be empty. If the operator is Gt or Lt, the values
                                                      array must have a single element, which will be interpreted as an integer.
                                                      This array is replaced during a strategic merge patch.
                                                    items:
                                                      type: string
                                                    type: array
                                                    x-kubernetes-list-type: atomic
                                                required:
                                                  - key
                                                  - operator
                                                type: object
                                              type: array
                                              x-kubernetes-list-type: atomic
                                            matchFields:
                                              description: A list of node selector requirements by node's fields.
                                              items:
                                                description: |-
                                                  A node selector requirement is a selector that contains values, a key, and an operator
                                                  that relates the key and values.
                                                properties:
                                                  key:
                                                    description: The label key that the selector applies to.
                                                    type: string
                                                  operator:
                                                    description: |-
                                                      Represents a key's relationship to a set of values.
                                                      Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
                                                    type: string
                                                  values:
                                                    description: |-
                                                      An array of string values. If the operator is In or NotIn,
                                                      the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                      the values array must be empty. If the operator is Gt or Lt, the values
                                                      array must have a single element, which will be interpreted as an integer.
                                                      This array is replaced during a strategic merge patch.
                                                    items:
                                                      type: string
                                                    type: array
                                                    x-kubernetes-list-type: atomic
                                                required:
                                                  - key
                                                  - operator
                                                type: object
                                              type: array
                                              x-kubernetes-list-type: atomic
                                          type: object
                                          x-kubernetes-map-type: atomic
                                        weight:
                                          description: Weight associated with matching the corresponding nodeSelectorTerm, in the range 1-100.
                                          format: int32
                                          type: integer
                                      required:
                                        - preference
                                        - weight
                                      type: object
                                    type: array
                                    x-kubernetes-list-type: atomic
                                  requiredDuringSchedulingIgnoredDuringExecution:
                                    description: |-
                                      If the affinity requirements specified by this field are not met at
                                      scheduling time, the pod will not be scheduled onto the node.
                                      If the affinity requirements specified by this field cease to be met
                                      at some point during pod execution (e.g. due to an update), the system
                                      may or may not try to eventually evict the pod from its node.
                                    properties:
                                      nodeSelectorTerms:
                                        description: Required. A list of node selector terms. The terms are ORed.
                                        items:
                                          description: |-
                                            A null or empty node selector term matches no objects. The requirements of
                                            them are ANDed.
                                            The TopologySelectorTerm type implements a subset of the NodeSelectorTerm.
                                          properties:
                                            matchExpressions:
                                              description: A list of node selector requirements by node's labels.
                                              items:
                                                description: |-
                                                  A node selector requirement is a selector that contains values, a key, and an operator
                                                  that relates the key and values.
                                                properties:
                                                  key:
                                                    description: The label key that the selector applies to.
                                                    type: string
                                                  operator:
                                                    description: |-
                                                      Represents a key's relationship to a set of values.
                                                      Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
                                                    type: string
                                                  values:
                                                    description: |-
                                                      An array of string values. If the operator is In or NotIn,
                                                      the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                      the values array must be empty. If the operator is Gt or Lt, the values
                                                      array must have a single element, which will be interpreted as an integer.
                                                      This array is replaced during a strategic merge patch.
                                                    items:
                                                      type: string
                                                    type: array
                                                    x-kubernetes-list-type: atomic
                                                required:
                                                  - key
                                                  - operator
                                                type: object
                                              type: array
                                              x-kubernetes-list-type: atomic
                                            matchFields:
                                              description: A list of node selector requirements by node's fields.
                                              items:
                                                description: |-
                                                  A node selector requirement is a selector that contains values, a key, and an operator
                                                  that relates the key and values.
                                                properties:
                                                  key:
                                                    description: The label key that the selector applies to.
                                                    type: string
                                                  operator:
                                                    description: |-
                                                      Represents a key's relationship to a set of values.
                                                      Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
                                                    type: string
                                                  values:
                                                    description: |-
                                                      An array of string values. If the operator is In or NotIn,
                                                      the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                      the values array must be empty. If the operator is Gt or Lt, the values
                                                      array must have a single element, which will be interpreted as an integer.
                                                      This array is replaced during a strategic merge patch.
                                                    items:
                                                      type: string
                                                    type: array
                                                    x-kubernetes-list-type: atomic
                                                required:
                                                  - key
                                                  - operator
                                                type: object
                                              type: array
                                              x-kubernetes-list-type: atomic
                                          type: object
                                          x-kubernetes-map-type: atomic
                                        type: array
                                        x-kubernetes-list-type: atomic
                                    required:
                                      - nodeSelectorTerms
                                    type: object
                                    x-kubernetes-map-type: atomic
                                type: object
                              podAffinity:
                                description: Describes pod affinity scheduling rules (e.g. co-locate this pod in the same node, zone, etc. as some other pod(s)).
                                properties:
                                  preferredDuringSchedulingIgnoredDuringExecution:
                                    description: |-
                                      The scheduler will prefer to schedule pods to nodes that satisfy
                                      the affinity expressions specified by this field, but it may choose
                                      a node that violates one or more of the expressions. The node that is
                                      most preferred is the one with the greatest sum of weights, i.e.
                                      for each node that meets all of the scheduling requirements (resource
                                      request, requiredDuringScheduling affinity expressions, etc.),
                                      compute a sum by iterating through the elements of this field and adding
                                      "weight" to the sum if the node has pods which matches the corresponding podAffinityTerm; the
                                      node(s) with the highest sum are the most preferred.
                                    items:
                                      description: The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)
                                      properties:
                                        podAffinityTerm:
                                          description: Required. A pod affinity term, associated with the corresponding weight.
                                          properties:
                                            labelSelector:
                                              description: |-
                                                A label query over a set of resources, in this case pods.
                                                If it's null, this PodAffinityTerm matches with no Pods.
                                              properties:
                                                matchExpressions:
                                                  description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                                  items:
                                                    description: |-
                                                      A label selector requirement is a selector that contains values, a key, and an operator that
                                                      relates the key and values.
                                                    properties:
                                                      key:
                                                        description: key is the label key that the selector applies to.
                                                        type: string
                                                      operator:
                                                        description: |-
                                                          operator represents a key's relationship to a set of values.
                                                          Valid operators are In, NotIn, Exists and DoesNotExist.
                                                        type: string
                                                      values:
                                                        description: |-
                                                          values is an array of string values. If the operator is In or NotIn,
                                                          the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                          the values array must be empty. This array is replaced during a strategic
                                                          merge patch.
                                                        items:
                                                          type: string
                                                        type: array
                                                        x-kubernetes-list-type: atomic
                                                    required:
                                                      - key
                                                      - operator
                                                    type: object
                                                  type: array
                                                  x-kubernetes-list-type: atomic
                                                matchLabels:
                                                  additionalProperties:
                                                    type: string
                                                  description: |-
                                                    matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                                    map is equivalent to an element of matchExpressions, whose key field is "key", the
                                                    operator is "In", and the values array contains only "value". The requirements are ANDed.
                                                  type: object
                                              type: object
                                              x-kubernetes-map-type: atomic
                                            matchLabelKeys:
                                              description: |-
                                                MatchLabelKeys is a set of pod label keys to select which pods will
                                                be taken into consideration. The keys are used to lookup values from the
                                                incoming pod labels, those key-value labels are merged with `labelSelector` as `key in (value)`
                                                to select the group of existing pods which pods will be taken into consideration
                                                for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
                                                pod labels will be ignored. The default value is empty.
                                                The same key is forbidden to exist in both matchLabelKeys and labelSelector.
                                                Also, matchLabelKeys cannot be set when labelSelector isn't set.
                                              items:
                                                type: string
                                              type: array
                                              x-kubernetes-list-type: atomic
                                            mismatchLabelKeys:
                                              description: |-
                                                MismatchLabelKeys is a set of pod label keys to select which pods will
                                                be taken into consideration. The keys are used to lookup values from the
                                                incoming pod labels, those key-value labels are merged with `labelSelector` as `key notin (value)`
                                                to select the group of existing pods which pods will be taken into consideration
                                                for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
                                                pod labels will be ignored. The default value is empty.
                                                The same key is forbidden to exist in both mismatchLabelKeys and labelSelector.
                                                Also, mismatchLabelKeys cannot be set when labelSelector isn't set.
                                              items:
                                                type: string
                                              type: array
                                              x-kubernetes-list-type: atomic
                                            namespaceSelector:
                                              description: |-
                                                A label query over the set of namespaces that the term applies to.
                                                The term is applied to the union of the namespaces selected by this field
                                                and the ones listed in the namespaces field.
                                                null selector and null or empty namespaces list means "this pod's namespace".
                                                An empty selector ({}) matches all namespaces.
                                              properties:
                                                matchExpressions:
                                                  description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                                  items:
                                                    description: |-
                                                      A label selector requirement is a selector that contains values, a key, and an operator that
                                                      relates the key and values.
                                                    properties:
                                                      key:
                                                        description: key is the label key that the selector applies to.
                                                        type: string
                                                      operator:
                                                        description: |-
                                                          operator represents a key's relationship to a set of values.
                                                          Valid operators are In, NotIn, Exists and DoesNotExist.
                                                        type: string
                                                      values:
                                                        description: |-
                                                          values is an array of string values. If the operator is In or NotIn,
                                                          the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                          the values array must be empty. This array is replaced during a strategic
                                                          merge patch.
                                                        items:
                                                          type: string
                                                        type: array
                                                        x-kubernetes-list-type: atomic
                                                    required:
                                                      - key
                                                      - operator
                                                    type: object
                                                  type: array
                                                  x-kubernetes-list-type: atomic
                                                matchLabels:
                                                  additionalProperties:
                                                    type: string
                                                  description: |-
                                                    matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                                    map is equivalent to an element of matchExpressions, whose key field is "key", the
                                                    operator is "In", and the values array contains only "value". The requirements are ANDed.
                                                  type: object
                                              type: object
                                              x-kubernetes-map-type: atomic
                                            namespaces:
                                              description: |-
                                                namespaces specifies a static list of namespace names that the term applies to.
                                                The term is applied to the union of the namespaces listed in this field
                                                and the ones selected by namespaceSelector.
                                                null or empty namespaces list and null namespaceSelector means "this pod's namespace".
                                              items:
                                                type: string
                                              type: array
                                              x-kubernetes-list-type: atomic
                                            topologyKey:
                                              description: |-
                                                This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching
                                                the labelSelector in the specified namespaces, where co-located is defined as running on a node
                                                whose value of the label with key topologyKey matches that of any node on which any of the
                                                selected pods is running.
                                                Empty topologyKey is not allowed.
                                              type: string
                                          required:
                                            - topologyKey
                                          type: object
                                        weight:
                                          description: |-
                                            weight associated with matching the corresponding podAffinityTerm,
                                            in the range 1-100.
                                          format: int32
                                          type: integer
                                      required:
                                        - podAffinityTerm
                                        - weight
                                      type: object
                                    type: array
                                    x-kubernetes-list-type: atomic
                                  requiredDuringSchedulingIgnoredDuringExecution:
                                    description: |-
                                      If the affinity requirements specified by this field are not met at
                                      scheduling time, the pod will not be scheduled onto the node.
                                      If the affinity requirements specified by this field cease to be met
                                      at some point during pod execution (e.g. due to a pod label update), the
                                      system may or may not try to eventually evict the pod from its node.
                                      When there are multiple elements, the lists of nodes corresponding to each
                                      podAffinityTerm are intersected, i.e. all terms must be satisfied.
                                    items:
                                      description: |-
                                        Defines a set of pods (namely those matching the labelSelector
                                        relative to the given namespace(s)) that this pod should be
                                        co-located (affinity) or not co-located (anti-affinity) with,
                                        where co-located is defined as running on a node whose value of
                                        the label with key <topologyKey> matches that of any node on which
                                        a pod of the set of pods is running
                                      properties:
                                        labelSelector:
                                          description: |-
                                            A label query over a set of resources, in this case pods.
                                            If it's null, this PodAffinityTerm matches with no Pods.
                                          properties:
                                            matchExpressions:
                                              description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                              items:
                                                description: |-
                                                  A label selector requirement is a selector that contains values, a key, and an operator that
                                                  relates the key and values.
                                                properties:
                                                  key:
                                                    description: key is the label key that the selector applies to.
                                                    type: string
                                                  operator:
                                                    description: |-
                                                      operator represents a key's relationship to a set of values.
                                                      Valid operators are In, NotIn, Exists and DoesNotExist.
                                                    type: string
                                                  values:
                                                    description: |-
                                                      values is an array of string values. If the operator is In or NotIn,
                                                      the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                      the values array must be empty. This array is replaced during a strategic
                                                      merge patch.
                                                    items:
                                                      type: string
                                                    type: array
                                                    x-kubernetes-list-type: atomic
                                                required:
                                                  - key
                                                  - operator
                                                type: object
                                              type: array
                                              x-kubernetes-list-type: atomic
                                            matchLabels:
                                              additionalProperties:
                                                type: string
                                              description: |-
                                                matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                                map is equivalent to an element of matchExpressions, whose key field is "key", the
                                                operator is "In", and the values array contains only "value". The requirements are ANDed.
                                              type: object
                                          type: object
                                          x-kubernetes-map-type: atomic
                                        matchLabelKeys:
                                          description: |-
                                            MatchLabelKeys is a set of pod label keys to select which pods will
                                            be taken into consideration. The keys are used to lookup values from the
                                            incoming pod labels, those key-value labels are merged with `labelSelector` as `key in (value)`
                                            to select the group of existing pods which pods will be taken into consideration
                                            for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
                                            pod labels will be ignored. The default value is empty.
                                            The same key is forbidden to exist in both matchLabelKeys and labelSelector.
                                            Also, matchLabelKeys cannot be set when labelSelector isn't set.
                                          items:
                                            type: string
                                          type: array
                                          x-kubernetes-list-type: atomic
                                        mismatchLabelKeys:
                                          description: |-
                                            MismatchLabelKeys is a set of pod label keys to select which pods will
                                            be taken into consideration. The keys are used to lookup values from the
                                            incoming pod labels, those key-value labels are merged with `labelSelector` as `key notin (value)`
                                            to select the group of existing pods which pods will be taken into consideration
                                            for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
                                            pod labels will be ignored. The default value is empty.
                                            The same key is forbidden to exist in both mismatchLabelKeys and labelSelector.
                                            Also, mismatchLabelKeys cannot be set when labelSelector isn't set.
                                          items:
                                            type: string
                                          type: array
                                          x-kubernetes-list-type: atomic
                                        namespaceSelector:
                                          description: |-
                                            A label query over the set of namespaces that the term applies to.
                                            The term is applied to the union of the namespaces selected by this field
                                            and the ones listed in the namespaces field.
                                            null selector and null or empty namespaces list means "this pod's namespace".
                                            An empty selector ({}) matches all namespaces.
                                          properties:
                                            matchExpressions:
                                              description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                              items:
                                                description: |-
                                                  A label selector requirement is a selector that contains values, a key, and an operator that
                                                  relates the key and values.
                                                properties:
                                                  key:
                                                    description: key is the label key that the selector applies to.
                                                    type: string
                                                  operator:
                                                    description: |-
                                                      operator represents a key's relationship to a set of values.
                                                      Valid operators are In, NotIn, Exists and DoesNotExist.
                                                    type: string
                                                  values:
                                                    description: |-
                                                      values is an array of string values. If the operator is In or NotIn,
                                                      the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                      the values array must be empty. This array is replaced during a strategic
                                                      merge patch.
                                                    items:
                                                      type: string
                                                    type: array
                                                    x-kubernetes-list-type: atomic
                                                required:
                                                  - key
                                                  - operator
                                                type: object
                                              type: array
                                              x-kubernetes-list-type: atomic
                                            matchLabels:
                                              additionalProperties:
                                                type: string
                                              description: |-
                                                matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                                map is equivalent to an element of matchExpressions, whose key field is "key", the
                                                operator is "In", and the values array contains only "value". The requirements are ANDed.
                                              type: object
                                          type: object
                                          x-kubernetes-map-type: atomic
                                        namespaces:
                                          description: |-
                                            namespaces specifies a static list of namespace names that the term applies to.
                                            The term is applied to the union of the namespaces listed in this field
                                            and the ones selected by namespaceSelector.
                                            null or empty namespaces list and null namespaceSelector means "this pod's namespace".
                                          items:
                                            type: string
                                          type: array
                                          x-kubernetes-list-type: atomic
                                        topologyKey:
                                          description: |-
                                            This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching
                                            the labelSelector in the specified namespaces, where co-located is defined as running on a node
                                            whose value of the label with key topologyKey matches that of any node on which any of the
                                            selected pods is running.
                                            Empty topologyKey is not allowed.
                                          type: string
                                      required:
                                        - topologyKey
                                      type: object
                                    type: array
                                    x-kubernetes-list-type: atomic
                                type: object
                              podAntiAffinity:
                                description: Describes pod anti-affinity scheduling rules (e.g. avoid putting this pod in the same node, zone, etc. as some other pod(s)).
                                properties:
                                  preferredDuringSchedulingIgnoredDuringExecution:
                                    description: |-
                                      The scheduler will prefer to schedule pods to nodes that satisfy
                                      the anti-affinity expressions specified by this field, but it may choose
                                      a node that violates one or more of the expressions. The node that is
                                      most preferred is the one with the greatest sum of weights, i.e.
                                      for each node that meets all of the scheduling requirements (resource
                                      request, requiredDuringScheduling anti-affinity expressions, etc.),
                                      compute a sum by iterating through the elements of this field and adding
                                      "weight" to the sum if the node has pods which matches the corresponding podAffinityTerm; the
                                      node(s) with the highest sum are the most preferred.
                                    items:
                                      description: The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)
                                      properties:
                                        podAffinityTerm:
                                          description: Required. A pod affinity term, associated with the corresponding weight.
                                          properties:
                                            labelSelector:
                                              description: |-
                                                A label query over a set of resources, in this case pods.
                                                If it's null, this PodAffinityTerm matches with no Pods.
                                              properties:
                                                matchExpressions:
                                                  description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                                  items:
                                                    description: |-
                                                      A label selector requirement is a selector that contains values, a key, and an operator that
                                                      relates the key and values.
                                                    properties:
                                                      key:
                                                        description: key is the label key that the selector applies to.
                                                        type: string
                                                      operator:
                                                        description: |-
                                                          operator represents a key's relationship to a set of values.
                                                          Valid operators are In, NotIn, Exists and DoesNotExist.
                                                        type: string
                                                      values:
                                                        description: |-
                                                          values is an array of string values. If the operator is In or NotIn,
                                                          the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                          the values array must be empty. This array is replaced during a strategic
                                                          merge patch.
                                                        items:
                                                          type: string
                                                        type: array
                                                        x-kubernetes-list-type: atomic
                                                    required:
                                                      - key
                                                      - operator
                                                    type: object
                                                  type: array
                                                  x-kubernetes-list-type: atomic
                                                matchLabels:
                                                  additionalProperties:
                                                    type: string
                                                  description: |-
                                                    matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                                    map is equivalent to an element of matchExpressions, whose key field is "key", the
                                                    operator is "In", and the values array contains only "value". The requirements are ANDed.
                                                  type: object
                                              type: object
                                              x-kubernetes-map-type: atomic
                                            matchLabelKeys:
                                              description: |-
                                                MatchLabelKeys is a set of pod label keys to select which pods will
                                                be taken into consideration. The keys are used to lookup values from the
                                                incoming pod labels, those key-value labels are merged with `labelSelector` as `key in (value)`
                                                to select the group of existing pods which pods will be taken into consideration
                                                for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
                                                pod labels will be ignored. The default value is empty.
                                                The same key is forbidden to exist in both matchLabelKeys and labelSelector.
                                                Also, matchLabelKeys cannot be set when labelSelector isn't set.
                                              items:
                                                type: string
                                              type: array
                                              x-kubernetes-list-type: atomic
                                            mismatchLabelKeys:
                                              description: |-
                                                MismatchLabelKeys is a set of pod label keys to select which pods will
                                                be taken into consideration. The keys are used to lookup values from the
                                                incoming pod labels, those key-value labels are merged with `labelSelector` as `key notin (value)`
                                                to select the group of existing pods which pods will be taken into consideration
                                                for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
                                                pod labels will be ignored. The default value is empty.
                                                The same key is forbidden to exist in both mismatchLabelKeys and labelSelector.
                                                Also, mismatchLabelKeys cannot be set when labelSelector isn't set.
                                              items:
                                                type: string
                                              type: array
                                              x-kubernetes-list-type: atomic
                                            namespaceSelector:
                                              description: |-
                                                A label query over the set of namespaces that the term applies to.
                                                The term is applied to the union of the namespaces selected by this field
                                                and the ones listed in the namespaces field.
                                                null selector and null or empty namespaces list means "this pod's namespace".
                                                An empty selector ({}) matches all namespaces.
                                              properties:
                                                matchExpressions:
                                                  description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                                  items:
                                                    description: |-
                                                      A label selector requirement is a selector that contains values, a key, and an operator that
                                                      relates the key and values.
                                                    properties:
                                                      key:
                                                        description: key is the label key that the selector applies to.
                                                        type: string
                                                      operator:
                                                        description: |-
                                                          operator represents a key's relationship to a set of values.
                                                          Valid operators are In, NotIn, Exists and DoesNotExist.
                                                        type: string
                                                      values:
                                                        description: |-
                                                          values is an array of string values. If the operator is In or NotIn,
                                                          the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                          the values array must be empty. This array is replaced during a strategic
                                                          merge patch.
                                                        items:
                                                          type: string
                                                        type: array
                                                        x-kubernetes-list-type: atomic
                                                    required:
                                                      - key
                                                      - operator
                                                    type: object
                                                  type: array
                                                  x-kubernetes-list-type: atomic
                                                matchLabels:
                                                  additionalProperties:
                                                    type: string
                                                  description: |-
                                                    matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                                    map is equivalent to an element of matchExpressions, whose key field is "key", the
                                                    operator is "In", and the values array contains only "value". The requirements are ANDed.
                                                  type: object
                                              type: object
                                              x-kubernetes-map-type: atomic
                                            namespaces:
                                              description: |-
                                                namespaces specifies a static list of namespace names that the term applies to.
                                                The term is applied to the union of the namespaces listed in this field
                                                and the ones selected by namespaceSelector.
                                                null or empty namespaces list and null namespaceSelector means "this pod's namespace".
                                              items:
                                                type: string
                                              type: array
                                              x-kubernetes-list-type: atomic
                                            topologyKey:
                                              description: |-
                                                This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching
                                                the labelSelector in the specified namespaces, where co-located is defined as running on a node
                                                whose value of the label with key topologyKey matches that of any node on which any of the
                                                selected pods is running.
                                                Empty topologyKey is not allowed.
                                              type: string
                                          required:
                                            - topologyKey
                                          type: object
                                        weight:
                                          description: |-
                                            weight associated with matching the corresponding podAffinityTerm,
                                            in the range 1-100.
                                          format: int32
                                          type: integer
                                      required:
                                        - podAffinityTerm
                                        - weight
                                      type: object
                                    type: array
                                    x-kubernetes-list-type: atomic
                                  requiredDuringSchedulingIgnoredDuringExecution:
                                    description: |-
                                      If the anti-affinity requirements specified by this field are not met at
                                      scheduling time, the pod will not be scheduled onto the node.
                                      If the anti-affinity requirements specified by this field cease to be met
                                      at some point during pod execution (e.g. due to a pod label update), the
                                      system may or may not try to eventually evict the pod from its node.
                                      When there are multiple elements, the lists of nodes corresponding to each
                                      podAffinityTerm are intersected, i.e. all terms must be satisfied.
                                    items:
                                      description: |-
                                        Defines a set of pods (namely those matching the labelSelector
                                        relative to the given namespace(s)) that this pod should be
                                        co-located (affinity) or not co-located (anti-affinity) with,
                                        where co-located is defined as running on a node whose value of
                                        the label with key <topologyKey> matches that of any node on which
                                        a pod of the set of pods is running
                                      properties:
                                        labelSelector:
                                          description: |-
                                            A label query over a set of resources, in this case pods.
                                            If it's null, this PodAffinityTerm matches with no Pods.
                                          properties:
                                            matchExpressions:
                                              description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                              items:
                                                description: |-
                                                  A label selector requirement is a selector that contains values, a key, and an operator that
                                                  relates the key and values.
                                                properties:
                                                  key:
                                                    description: key is the label key that the selector applies to.
                                                    type: string
                                                  operator:
                                                    description: |-
                                                      operator represents a key's relationship to a set of values.
                                                      Valid operators are In, NotIn, Exists and DoesNotExist.
                                                    type: string
                                                  values:
                                                    description: |-
                                                      values is an array of string values. If the operator is In or NotIn,
                                                      the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                      the values array must be empty. This array is replaced during a strategic
                                                      merge patch.
                                                    items:
                                                      type: string
                                                    type: array
                                                    x-kubernetes-list-type: atomic
                                                required:
                                                  - key
                                                  - operator
                                                type: object
                                              type: array
                                              x-kubernetes-list-type: atomic
                                            matchLabels:
                                              additionalProperties:
                                                type: string
                                              description: |-
                                                matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                                map is equivalent to an element of matchExpressions, whose key field is "key", the
                                                operator is "In", and the values array contains only "value". The requirements are ANDed.
                                              type: object
                                          type: object
                                          x-kubernetes-map-type: atomic
                                        matchLabelKeys:
                                          description: |-
                                            MatchLabelKeys is a set of pod label keys to select which pods will
                                            be taken into consideration. The keys are used to lookup values from the
                                            incoming pod labels, those key-value labels are merged with `labelSelector` as `key in (value)`
                                            to select the group of existing pods which pods will be taken into consideration
                                            for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
                                            pod labels will be ignored. The default value is empty.
                                            The same key is forbidden to exist in both matchLabelKeys and labelSelector.
                                            Also, matchLabelKeys cannot be set when labelSelector isn't set.
                                          items:
                                            type: string
                                          type: array
                                          x-kubernetes-list-type: atomic
                                        mismatchLabelKeys:
                                          description: |-
                                            MismatchLabelKeys is a set of pod label keys to select which pods will
                                            be taken into consideration. The keys are used to lookup values from the
                                            incoming pod labels, those key-value labels are merged with `labelSelector` as `key notin (value)`
                                            to select the group of existing pods which pods will be taken into consideration
                                            for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
                                            pod labels will be ignored. The default value is empty.
                                            The same key is forbidden to exist in both mismatchLabelKeys and labelSelector.
                                            Also, mismatchLabelKeys cannot be set when labelSelector isn't set.
                                          items:
                                            type: string
                                          type: array
                                          x-kubernetes-list-type: atomic
                                        namespaceSelector:
                                          description: |-
                                            A label query over the set of namespaces that the term applies to.
                                            The term is applied to the union of the namespaces selected by this field
                                            and the ones listed in the namespaces field.
                                            null selector and null or empty namespaces list means "this pod's namespace".
                                            An empty selector ({}) matches all namespaces.
                                          properties:
                                            matchExpressions:
                                              description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                              items:
                                                description: |-
                                                  A label selector requirement is a selector that contains values, a key, and an operator that
                                                  relates the key and values.
                                                properties:
                                                  key:
                                                    description: key is the label key that the selector applies to.
                                                    type: string
                                                  operator:
                                                    description: |-
                                                      operator represents a key's relationship to a set of values.
                                                      Valid operators are In, NotIn, Exists and DoesNotExist.
                                                    type: string
                                                  values:
                                                    description: |-
                                                      values is an array of string values. If the operator is In or NotIn,
                                                      the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                      the values array must be empty. This array is replaced during a strategic
                                                      merge patch.
                                                    items:
                                                      type: string
                                                    type: array
                                                    x-kubernetes-list-type: atomic
                                                required:
                                                  - key
                                                  - operator
                                                type: object
                                              type: array
                                              x-kubernetes-list-type: atomic
                                            matchLabels:
                                              additionalProperties:
                                                type: string
                                              description: |-
                                                matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                                map is equivalent to an element of matchExpressions, whose key field is "key", the
                                                operator is "In", and the values array contains only "value". The requirements are ANDed.
                                              type: object
                                          type: object
                                          x-kubernetes-map-type: atomic
                                        namespaces:
                                          description: |-
                                            namespaces specifies a static list of namespace names that the term applies to.
                                            The term is applied to the union of the namespaces listed in this field
                                            and the ones selected by namespaceSelector.
                                            null or empty namespaces list and null namespaceSelector means "this pod's namespace".
                                          items:
                                            type: string
                                          type: array
                                          x-kubernetes-list-type: atomic
                                        topologyKey:
                                          description: |-
                                            This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching
                                            the labelSelector in the specified namespaces, where co-located is defined as running on a node
                                            whose value of the label with key topologyKey matches that of any node on which any of the
                                            selected pods is running.
                                            Empty topologyKey is not allowed.
                                          type: string
                                      required:
                                        - topologyKey
                                      type: object
                                    type: array
                                    x-kubernetes-list-type: atomic
                                type: object
                            type: object
                          nodeSelector:
                            additionalProperties:
                              type: string
                            description: |-
                              NodeSelector is a selector which must be true for the pod to fit on a node.
                              Selector which must match a node's labels for the pod to be scheduled on that node.
                              More info: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/
                            type: object
                          resources:
                            description: Defines the resource requests and limits for the Mattermost app server pods.
                            properties:
                              claims:
                                description: |-
                                  Claims lists the names of resources, defined in spec.resourceClaims,
                                  that are used by this container.

                                  This is an alpha field and requires enabling the
                                  DynamicResourceAllocation feature gate.

                                  This field is immutable. It can only be set for containers.
                                items:
                                  description: ResourceClaim references one entry in PodSpec.ResourceClaims.
                                  properties:
                                    name:
                                      description: |-
                                        Name must match the name of one entry in pod.spec.resourceClaims of
                                        the Pod where this field is used. It makes that resource available
                                        inside a container.
                                      type: string
                                    request:
                                      description: |-
                                        Request is the name chosen for a request in the referenced claim.
                                        If empty, everything from the claim is made available, otherwise
                                        only the result of this request.
                                      type: string
                                  required:
                                    - name
                                  type: object
                                type: array
                                x-kubernetes-list-map-keys:
                                  - name
                                x-kubernetes-list-type: map
                              limits:
                                additionalProperties:
                                  anyOf:
                                    - type: integer
                                    - type: string
                                  pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                  x-kubernetes-int-or-string: true
                                description: |-
                                  Limits describes the maximum amount of compute resources allowed.
                                  More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                                type: object
                              requests:
                                additionalProperties:
                                  anyOf:
                                    - type: integer
                                    - type: string
                                  pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                  x-kubernetes-int-or-string: true
                                description: |-
                                  Requests describes the minimum amount of compute resources required.
                                  If Requests is omitted for a container, it defaults to Limits if that is explicitly specified,
                                  otherwise to an implementation-defined value. Requests cannot exceed Limits.
                                  More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                                type: object
                            type: object
                          tolerations:
                            description: |-
                              Defines tolerations for the Mattermost app server pods
                              More info: https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/
                            items:
                              description: |-
                                The pod this Toleration is attached to tolerates any taint that matches
                                the triple <key,value,effect> using the matching operator <operator>.
                              properties:
                                effect:
                                  description: |-
                                    Effect indicates the taint effect to match. Empty means match all taint effects.
                                    When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.
                                  type: string
                                key:
                                  description: |-
                                    Key is the taint key that the toleration applies to. Empty means match all taint keys.
                                    If the key is empty, operator must be Exists; this combination means to match all values and all keys.
                                  type: string
                                operator:
                                  description: |-
                                    Operator represents a key's relationship to the value.
                                    Valid operators are Exists and Equal. Defaults to Equal.
                                    Exists is equivalent to wildcard for value, so that a pod can
                                    tolerate all taints of a particular category.
                                  type: string
                                tolerationSeconds:
                                  description: |-
                                    TolerationSeconds represents the period of time the toleration (which must be
                                    of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default,
                                    it is not set, which means tolerate the taint forever (do not evict). Zero and
                                    negative values will be treated as 0 (evict immediately) by the system.
                                  format: int64
                                  type: integer
                                value:
                                  description: |-
                                    Value is the taint value the toleration matches to.
                                    If the operator is Exists, the value should be empty, otherwise just a regular string.
                                  type: string
                              type: object
                            type: array
                        type: object
                      serviceAnnotations:
                        additionalProperties:
                          type: string
                        type: object
                      size:
                        description: |-
                          Size defines the size of the Mattermost. This is typically specified in
                          number of users. This will override replica and resource requests/limits
                          appropriately for the provided number of users. This is a write-only
                          field - its value is erased after setting appropriate values of resources.
                          Accepted values are: 100users, 1000users, 5000users, 10000users,
                          and 250000users. If replicas and resource requests/limits are not
                          specified, and Size is not provided the configuration for 5000users will
                          be applied. Setting 'Replicas', 'Scheduling.Resources', 'FileStore.Replicas',
                          'FileStore.Resource', 'Database.Replicas', or 'Database.Resources' will
                          override the values set by Size. Setting new Size will override previous
                          values regardless if set by Size or manually.
                        type: string
                      updateJob:
                        description: UpdateJob defines configuration for the template for the update job.
                        properties:
                          disabled:
                            description: Determines whether to disable the Operator's creation of the update job.
                            type: boolean
                          extraAnnotations:
                            additionalProperties:
                              type: string
                            description: Defines annotations to add to the update job pod.
                            type: object
                          extraLabels:
                            additionalProperties:
                              type: string
                            description: |-
                              Defines labels to add to the update job pod.
                              Overrides what is set in ResourceLabels, does not override default label (app label).
                            type: object
                        type: object
                      useIngressTLS:
                        description: |-
                          UseIngressTLS specifies whether TLS secret should be configured for Ingress.
                          Deprecated: Use Spec.Ingress.TLSSecret.
                        type: boolean
                      useServiceLoadBalancer:
                        type: boolean
                      version:
                        description: Version defines the Mattermost Docker image version.
                        type: string
                      volumeMounts:
                        description: Defines additional volumeMounts to add to Mattermost application pods.
                        items:
                          description: VolumeMount describes a mounting of a Volume within a container.
                          properties:
                            mountPath:
                              description: |-
                                Path within the container at which the volume should be mounted.  Must
                                not contain ':'.
                              type: string
                            mountPropagation:
                              description: |-
                                mountPropagation determines how mounts are propagated from the host
                                to container and the other way around.
                                When not set, MountPropagationNone is used.
                                This field is beta in 1.10.
                                When RecursiveReadOnly is set to IfPossible or to Enabled, MountPropagation must be None or unspecified
                                (which defaults to None).
                              type: string
                            name:
                              description: This must match the Name of a Volume.
                              type: string
                            readOnly:
                              description: |-
                                Mounted read-only if true, read-write otherwise (false or unspecified).
                                Defaults to false.
                              type: boolean
                            recursiveReadOnly:
                              description: |-
                                RecursiveReadOnly specifies whether read-only mounts should be handled
                                recursively.

                                If ReadOnly is false, this field has no meaning and must be unspecified.

                                If ReadOnly is true, and this field is set to Disabled, the mount is not made
                                recursively read-only.  If this field is set to IfPossible, the mount is made
                                recursively read-only, if it is supported by the container runtime.  If this
                                field is set to Enabled, the mount is made recursively read-only if it is
                                supported by the container runtime, otherwise the pod will not be started and
                                an error will be generated to indicate the reason.

                                If this field is set to IfPossible or Enabled, MountPropagation must be set to
                                None (or be unspecified, which defaults to None).

                                If this field is not specified, it is treated as an equivalent of Disabled.
                              type: string
                            subPath:
                              description: |-
                                Path within the volume from which the container's volume should be mounted.
                                Defaults to "" (volume's root).
                              type: string
                            subPathExpr:
                              description: |-
                                Expanded path within the volume from which the container's volume should be mounted.
                                Behaves similarly to SubPath but environment variable references $(VAR_NAME) are expanded using the container's environment.
                                Defaults to "" (volume's root).
                                SubPathExpr and SubPath are mutually exclusive.
                              type: string
                          required:
                            - mountPath
                            - name
                          type: object
                        type: array
                      volumes:
                        description: |-
                          Volumes allows for mounting volumes from various sources into the
                          Mattermost application pods.
                        items:
                          description: Volume represents a named volume in a pod that may be accessed by any container in the pod.
                          properties:
                            awsElasticBlockStore:
                              description: |-
                                awsElasticBlockStore represents an AWS Disk resource that is attached to a
                                kubelet's host machine and then exposed to the pod.
                                Deprecated: AWSElasticBlockStore is deprecated. All operations for the in-tree
                                awsElasticBlockStore type are redirected to the ebs.csi.aws.com CSI driver.
                                More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore
                              properties:
                                fsType:
                                  description: |-
                                    fsType is the filesystem type of the volume that you want to mount.
                                    Tip: Ensure that the filesystem type is supported by the host operating system.
                                    Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
                                    More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore
                                  type: string
                                partition:
                                  description: |-
                                    partition is the partition in the volume that you want to mount.
                                    If omitted, the default is to mount by volume name.
                                    Examples: For volume /dev/sda1, you specify the partition as "1".
                                    Similarly, the volume partition for /dev/sda is "0" (or you can leave the property empty).
                                  format: int32
                                  type: integer
                                readOnly:
                                  description: |-
                                    readOnly value true will force the readOnly setting in VolumeMounts.
                                    More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore
                                  type: boolean
                                volumeID:
                                  description: |-
                                    volumeID is unique ID of the persistent disk resource in AWS (Amazon EBS volume).
                                    More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore
                                  type: string
                              required:
                                - volumeID
                              type: object
                            azureDisk:
                              description: |-
                                azureDisk represents an Azure Data Disk mount on the host and bind mount to the pod.
                                Deprecated: AzureDisk is deprecated. All operations for the in-tree azureDisk type
                                are redirected to the disk.csi.azure.com CSI driver.
                              properties:
                                cachingMode:
                                  description: 'cachingMode is the Host Caching mode: None, Read Only, Read Write.'
                                  type: string
                                diskName:
                                  description: diskName is the Name of the data disk in the blob storage
                                  type: string
                                diskURI:
                                  description: diskURI is the URI of data disk in the blob storage
                                  type: string
                                fsType:
                                  default: ext4
                                  description: |-
                                    fsType is Filesystem type to mount.
                                    Must be a filesystem type supported by the host operating system.
                                    Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
                                  type: string
                                kind:
                                  description: 'kind expected values are Shared: multiple blob disks per storage account  Dedicated: single blob disk per storage account  Managed: azure managed data disk (only in managed availability set). defaults to shared'
                                  type: string
                                readOnly:
                                  default: false
                                  description: |-
                                    readOnly Defaults to false (read/write). ReadOnly here will force
                                    the ReadOnly setting in VolumeMounts.
                                  type: boolean
                              required:
                                - diskName
                                - diskURI
                              type: object
                            azureFile:
                              description: |-
                                azureFile represents an Azure File Service mount on the host and bind mount to the pod.
                                Deprecated: AzureFile is deprecated. All operations for the in-tree azureFile type
                                are redirected to the file.csi.azure.com CSI driver.
                              properties:
                                readOnly:
                                  description: |-
                                    readOnly defaults to false (read/write). ReadOnly here will force
                                    the ReadOnly setting in VolumeMounts.
                                  type: boolean
                                secretName:
                                  description: secretName is the  name of secret that contains Azure Storage Account Name and Key
                                  type: string
                                shareName:
                                  description: shareName is the azure share Name
                                  type: string
                              required:
                                - secretName
                                - shareName
                              type: object
                            cephfs:
                              description: |-
                                cephFS represents a Ceph FS mount on the host that shares a pod's lifetime.
                                Deprecated: CephFS is deprecated and the in-tree cephfs type is no longer supported.
                              properties:
                                monitors:
                                  description: |-
                                    monitors is Required: Monitors is a collection of Ceph monitors
                                    More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it
                                  items:
                                    type: string
                                  type: array
                                  x-kubernetes-list-type: atomic
                                path:
                                  description: 'path is Optional: Used as the mounted root, rather than the full Ceph tree, default is /'
                                  type: string
                                readOnly:
                                  description: |-
                                    readOnly is Optional: Defaults to false (read/write). ReadOnly here will force
                                    the ReadOnly setting in VolumeMounts.
                                    More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it
                                  type: boolean
                                secretFile:
                                  description: |-
                                    secretFile is Optional: SecretFile is the path to key ring for User, default is /etc/ceph/user.secret
                                    More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it
                                  type: string
                                secretRef:
                                  description: |-
                                    secretRef is Optional: SecretRef is reference to the authentication secret for User, default is empty.
                                    More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it
                                  properties:
                                    name:
                                      default: ""
                                      description: |-
                                        Name of the referent.
                                        This field is effectively required, but due to backwards compatibility is
                                        allowed to be empty. Instances of this type with an empty value here are
                                        almost certainly wrong.
                                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                      type: string
                                  type: object
                                  x-kubernetes-map-type: atomic
                                user:
                                  description: |-
                                    user is optional: User is the rados user name, default is admin
                                    More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it
                                  type: string
                              required:
                                - monitors
                              type: object
                            cinder:
                              description: |-
                                cinder represents a cinder volume attached and mounted on kubelets host machine.
                                Deprecated: Cinder is deprecated. All operations for the in-tree cinder type
                                are redirected to the cinder.csi.openstack.org CSI driver.
                                More info: https://examples.k8s.io/mysql-cinder-pd/README.md
                              properties:
                                fsType:
                                  description: |-
                                    fsType is the filesystem type to mount.
                                    Must be a filesystem type supported by the host operating system.
                                    Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
                                    More info: https://examples.k8s.io/mysql-cinder-pd/README.md
                                  type: string
                                readOnly:
                                  description: |-
                                    readOnly defaults to false (read/write). ReadOnly here will force
                                    the ReadOnly setting in VolumeMounts.
                                    More info: https://examples.k8s.io/mysql-cinder-pd/README.md
                                  type: boolean
                                secretRef:
                                  description: |-
                                    secretRef is optional: points to a secret object containing parameters used to connect
                                    to OpenStack.
                                  properties:
                                    name:
                                      default: ""
                                      description: |-
                                        Name of the referent.
                                        This field is effectively required, but due to backwards compatibility is
                                        allowed to be empty. Instances of this type with an empty value here are
                                        almost certainly wrong.
                                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                      type: string
                                  type: object
                                  x-kubernetes-map-type: atomic
                                volumeID:
                                  description: |-
                                    volumeID used to identify the volume in cinder.
                                    More info: https://examples.k8s.io/mysql-cinder-pd/README.md
                                  type: string
                              required:
                                - volumeID
                              type: object
                            configMap:
                              description: configMap represents a configMap that should populate this volume
                              properties:
                                defaultMode:
                                  description: |-
                                    defaultMode is optional: mode bits used to set permissions on created files by default.
                                    Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
                                    YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
                                    Defaults to 0644.
                                    Directories within the path are not affected by this setting.
                                    This might be in conflict with other options that affect the file
                                    mode, like fsGroup, and the result can be other mode bits set.
                                  format: int32
                                  type: integer
                                items:
                                  description: |-
                                    items if unspecified, each key-value pair in the Data field of the referenced
                                    ConfigMap will be projected into the volume as a file whose name is the
                                    key and content is the value. If specified, the listed keys will be
                                    projected into the specified paths, and unlisted keys will not be
                                    present. If a key is specified which is not present in the ConfigMap,
                                    the volume setup will error unless it is marked optional. Paths must be
                                    relative and may not contain the '..' path or start with '..'.
                                  items:
                                    description: Maps a string key to a path within a volume.
                                    properties:
                                      key:
                                        description: key is the key to project.
                                        type: string
                                      mode:
                                        description: |-
                                          mode is Optional: mode bits used to set permissions on this file.
                                          Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
                                          YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
                                          If not specified, the volume defaultMode will be used.
                                          This might be in conflict with other options that affect the file
                                          mode, like fsGroup, and the result can be other mode bits set.
                                        format: int32
                                        type: integer
                                      path:
                                        description: |-
                                          path is the relative path of the file to map the key to.
                                          May not be an absolute path.
                                          May not contain the path element '..'.
                                          May not start with the string '..'.
                                        type: string
                                    required:
                                      - key
                                      - path
                                    type: object
                                  type: array
                                  x-kubernetes-list-type: atomic
                                name:
                                  default: ""
                                  description: |-
                                    Name of the referent.
                                    This field is effectively required, but due to backwards compatibility is
                                    allowed to be empty. Instances of this type with an empty value here are
                                    almost certainly wrong.
                                    More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  type: string
                                optional:
                                  description: optional specify whether the ConfigMap or its keys must be defined
                                  type: boolean
                              type: object
                              x-kubernetes-map-type: atomic
                            csi:
                              description: csi (Container Storage Interface) represents ephemeral storage that is handled by certain external CSI drivers.
                              properties:
                                driver:
                                  description: |-
                                    driver is the name of the CSI driver that handles this volume.
                                    Consult with your admin for the correct name as registered in the cluster.
                                  type: string
                                fsType:
                                  description: |-
                                    fsType to mount. Ex. "ext4", "xfs", "ntfs".
                                    If not provided, the empty value is passed to the associated CSI driver
                                    which will determine the default filesystem to apply.
                                  type: string
                                nodePublishSecretRef:
                                  description: |-
                                    nodePublishSecretRef is a reference to the secret object containing
                                    sensitive information to pass to the CSI driver to complete the CSI
                                    NodePublishVolume and NodeUnpublishVolume calls.
                                    This field is optional, and  may be empty if no secret is required. If the
                                    secret object contains more than one secret, all secret references are passed.
                                  properties:
                                    name:
                                      default: ""
                                      description: |-
                                        Name of the referent.
                                        This field is effectively required, but due to backwards compatibility is
                                        allowed to be empty. Instances of this type with an empty value here are
                                        almost certainly wrong.
                                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                      type: string
                                  type: object
                                  x-kubernetes-map-type: atomic
                                readOnly:
                                  description: |-
                                    readOnly specifies a read-only configuration for the volume.
                                    Defaults to false (read/write).
                                  type: boolean
                                volumeAttributes:
                                  additionalProperties:
                                    type: string
                                  description: |-
                                    volumeAttributes stores driver-specific properties that are passed to the CSI
                                    driver. Consult your driver's documentation for supported values.
                                  type: object
                              required:
                                - driver
                              type: object
                            downwardAPI:
                              description: downwardAPI represents downward API about the pod that should populate this volume
                              properties:
                                defaultMode:
                                  description: |-
                                    Optional: mode bits to use on created files by default. Must be a
                                    Optional: mode bits used to set permissions on created files by default.
                                    Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
                                    YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
                                    Defaults to 0644.
                                    Directories within the path are not affected by this setting.
                                    This might be in conflict with other options that affect the file
                                    mode, like fsGroup, and the result can be other mode bits set.
                                  format: int32
                                  type: integer
                                items:
                                  description: Items is a list of downward API volume file
                                  items:
                                    description: DownwardAPIVolumeFile represents information to create the file containing the pod field
                                    properties:
                                      fieldRef:
                                        description: 'Required: Selects a field of the pod: only annotations, labels, name, namespace and uid are supported.'
                                        properties:
                                          apiVersion:
                                            description: Version of the schema the FieldPath is written in terms of, defaults to "v1".
                                            type: string
                                          fieldPath:
                                            description: Path of the field to select in the specified API version.
                                            type: string
                                        required:
                                          - fieldPath
                                        type: object
                                        x-kubernetes-map-type: atomic
                                      mode:
                                        description: |-
                                          Optional: mode bits used to set permissions on this file, must be an octal value
                                          between 0000 and 0777 or a decimal value between 0 and 511.
                                          YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
                                          If not specified, the volume defaultMode will be used.
                                          This might be in conflict with other options that affect the file
                                          mode, like fsGroup, and the result can be other mode bits set.
                                        format: int32
                                        type: integer
                                      path:
                                        description: 'Required: Path is  the relative path name of the file to be created. Must not be absolute or contain the ''..'' path. Must be utf-8 encoded. The first item of the relative path must not start with ''..'''
                                        type: string
                                      resourceFieldRef:
                                        description: |-
                                          Selects a resource of the container: only resources limits and requests
                                          (limits.cpu, limits.memory, requests.cpu and requests.memory) are currently supported.
                                        properties:
                                          containerName:
                                            description: 'Container name: required for volumes, optional for env vars'
                                            type: string
                                          divisor:
                                            anyOf:
                                              - type: integer
                                              - type: string
                                            description: Specifies the output format of the exposed resources, defaults to "1"
                                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                            x-kubernetes-int-or-string: true
                                          resource:
                                            description: 'Required: resource to select'
                                            type: string
                                        required:
                                          - resource
                                        type: object
                                        x-kubernetes-map-type: atomic
                                    required:
                                      - path
                                    type: object
                                  type: array
                                  x-kubernetes-list-type: atomic
                              type: object
                            emptyDir:
                              description: |-
                                emptyDir represents a temporary directory that shares a pod's lifetime.
                                More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir
                              properties:
                                medium:
                                  description: |-
                                    medium represents what type of storage medium should back this directory.
                                    The default is "" which means to use the node's default medium.
                                    Must be an empty string (default) or Memory.
                                    More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir
                                  type: string
                                sizeLimit:
                                  anyOf:
                                    - type: integer
                                    - type: string
                                  description: |-
                                    sizeLimit is the total amount of local storage required for this EmptyDir volume.
                                    The size limit is also applicable for memory medium.
                                    The maximum usage on memory medium EmptyDir would be the minimum value between
                                    the SizeLimit specified here and the sum of memory limits of all containers in a pod.
                                    The default is nil which means that the limit is undefined.
                                    More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir
                                  pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                  x-kubernetes-int-or-string: true
                              type: object
                            ephemeral:
                              description: |-
                                ephemeral represents a volume that is handled by a cluster storage driver.
                                The volume's lifecycle is tied to the pod that defines it - it will be created before the pod starts,
                                and deleted when the pod is removed.

                                Use this if:
                                a) the volume is only needed while the pod runs,
                                b) features of normal volumes like restoring from snapshot or capacity
                                   tracking are needed,
                                c) the storage driver is specified through a storage class, and
                                d) the storage driver supports dynamic volume provisioning through
                                   a PersistentVolumeClaim (see EphemeralVolumeSource for more
                                   information on the connection between this volume type
                                   and PersistentVolumeClaim).

                                Use PersistentVolumeClaim or one of the vendor-specific
                                APIs for volumes that persist for longer than the lifecycle
                                of an individual pod.

                                Use CSI for light-weight local ephemeral volumes if the CSI driver is meant to
                                be used that way - see the documentation of the driver for
                                more information.

                                A pod can use both types of ephemeral volumes and
                                persistent volumes at the same time.
                              properties:
                                volumeClaimTemplate:
                                  description: |-
                                    Will be used to create a stand-alone PVC to provision the volume.
                                    The pod in which this EphemeralVolumeSource is embedded will be the
                                    owner of the PVC, i.e. the PVC will be deleted together with the
                                    pod.  The name of the PVC will be `<pod name>-<volume name>` where
                                    `<volume name>` is the name from the `PodSpec.Volumes` array
                                    entry. Pod validation will reject the pod if the concatenated name
                                    is not valid for a PVC (for example, too long).

                                    An existing PVC with that name that is not owned by the pod
                                    will *not* be used for the pod to avoid using an unrelated
                                    volume by mistake. Starting the pod is then blocked until
                                    the unrelated PVC is removed. If such a pre-created PVC is
                                    meant to be used by the pod, the PVC has to updated with an
                                    owner reference to the pod once the pod exists. Normally
                                    this should not be necessary, but it may be useful when
                                    manually reconstructing a broken cluster.

                                    This field is read-only and no changes will be made by Kubernetes
                                    to the PVC after it has been created.

                                    Required, must not be nil.
                                  properties:
                                    metadata:
                                      description: |-
                                        May contain labels and annotations that will be copied into the PVC
                                        when creating it. No other fields are allowed and will be rejected during
                                        validation.
                                      type: object
                                    spec:
                                      description: |-
                                        The specification for the PersistentVolumeClaim. The entire content is
                                        copied unchanged into the PVC that gets created from this
                                        template. The same fields as in a PersistentVolumeClaim
                                        are also valid here.
                                      properties:
                                        accessModes:
                                          description: |-
                                            accessModes contains the desired access modes the volume should have.
                                            More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1
                                          items:
                                            type: string
                                          type: array
                                          x-kubernetes-list-type: atomic
                                        dataSource:
                                          description: |-
                                            dataSource field can be used to specify either:
                                            * An existing VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot)
                                            * An existing PVC (PersistentVolumeClaim)
                                            If the provisioner or an external controller can support the specified data source,
                                            it will create a new volume based on the contents of the specified data source.
                                            When the AnyVolumeDataSource feature gate is enabled, dataSource contents will be copied to dataSourceRef,
                                            and dataSourceRef contents will be copied to dataSource when dataSourceRef.namespace is not specified.
                                            If the namespace is specified, then dataSourceRef will not be copied to dataSource.
                                          properties:
                                            apiGroup:
                                              description: |-
                                                APIGroup is the group for the resource being referenced.
                                                If APIGroup is not specified, the specified Kind must be in the core API group.
                                                For any other third-party types, APIGroup is required.
                                              type: string
                                            kind:
                                              description: Kind is the type of resource being referenced
                                              type: string
                                            name:
                                              description: Name is the name of resource being referenced
                                              type: string
                                          required:
                                            - kind
                                            - name
                                          type: object
                                          x-kubernetes-map-type: atomic
                                        dataSourceRef:
                                          description: |-
                                            dataSourceRef specifies the object from which to populate the volume with data, if a non-empty
                                            volume is desired. This may be any object from a non-empty API group (non
                                            core object) or a PersistentVolumeClaim object.
                                            When this field is specified, volume binding will only succeed if the type of
                                            the specified object matches some installed volume populator or dynamic
                                            provisioner.
                                            This field will replace the functionality of the dataSource field and as such
                                            if both fields are non-empty, they must have the same value. For backwards
                                            compatibility, when namespace isn't specified in dataSourceRef,
                                            both fields (dataSource and dataSourceRef) will be set to the same
                                            value automatically if one of them is empty and the other is non-empty.
                                            When namespace is specified in dataSourceRef,
                                            dataSource isn't set to the same value and must be empty.
                                            There are three important differences between dataSource and dataSourceRef:
                                            * While dataSource only allows two specific types of objects, dataSourceRef
                                              allows any non-core object, as well as PersistentVolumeClaim objects.
                                            * While dataSource ignores disallowed values (dropping them), dataSourceRef
                                              preserves all values, and generates an error if a disallowed value is
                                              specified.
                                            * While dataSource only allows local objects, dataSourceRef allows objects
                                              in any namespaces.
                                            (Beta) Using this field requires the AnyVolumeDataSource feature gate to be enabled.
                                            (Alpha) Using the namespace field of dataSourceRef requires the CrossNamespaceVolumeDataSource feature gate to be enabled.
                                          properties:
                                            apiGroup:
                                              description: |-
                                                APIGroup is the group for the resource being referenced.
                                                If APIGroup is not specified, the specified Kind must be in the core API group.
                                                For any other third-party types, APIGroup is required.
                                              type: string
                                            kind:
                                              description: Kind is the type of resource being referenced
                                              type: string
                                            name:
                                              description: Name is the name of resource being referenced
                                              type: string
                                            namespace:
                                              description: |-
                                                Namespace is the namespace of resource being referenced
                                                Note that when a namespace is specified, a gateway.networking.k8s.io/ReferenceGrant object is required in the referent namespace to allow that namespace's owner to accept the reference. See the ReferenceGrant documentation for details.
                                                (Alpha) This field requires the CrossNamespaceVolumeDataSource feature gate to be enabled.
                                              type: string
                                          required:
                                            - kind
                                            - name
                                          type: object
                                        resources:
                                          description: |-
                                            resources represents the minimum resources the volume should have.
                                            If RecoverVolumeExpansionFailure feature is enabled users are allowed to specify resource requirements
                                            that are lower than previous value but must still be higher than capacity recorded in the
                                            status field of the claim.
                                            More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources
                                          properties:
                                            limits:
                                              additionalProperties:
                                                anyOf:
                                                  - type: integer
                                                  - type: string
                                                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                                x-kubernetes-int-or-string: true
                                              description: |-
                                                Limits describes the maximum amount of compute resources allowed.
                                                More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                                              type: object
                                            requests:
                                              additionalProperties:
                                                anyOf:
                                                  - type: integer
                                                  - type: string
                                                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                                x-kubernetes-int-or-string: true
                                              description: |-
                                                Requests describes the minimum amount of compute resources required.
                                                If Requests is omitted for a container, it defaults to Limits if that is explicitly specified,
                                                otherwise to an implementation-defined value. Requests cannot exceed Limits.
                                                More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                                              type: object
                                          type: object
                                        selector:
                                          description: selector is a label query over volumes to consider for binding.
                                          properties:
                                            matchExpressions:
                                              description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                              items:
                                                description: |-
                                                  A label selector requirement is a selector that contains values, a key, and an operator that
                                                  relates the key and values.
                                                properties:
                                                  key:
                                                    description: key is the label key that the selector applies to.
                                                    type: string
                                                  operator:
                                                    description: |-
                                                      operator represents a key's relationship to a set of values.
                                                      Valid operators are In, NotIn, Exists and DoesNotExist.
                                                    type: string
                                                  values:
                                                    description: |-
                                                      values is an array of string values. If the operator is In or NotIn,
                                                      the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                      the values array must be empty. This array is replaced during a strategic
                                                      merge patch.
                                                    items:
                                                      type: string
                                                    type: array
                                                    x-kubernetes-list-type: atomic
                                                required:
                                                  - key
                                                  - operator
                                                type: object
                                              type: array
                                              x-kubernetes-list-type: atomic
                                            matchLabels:
                                              additionalProperties:
                                                type: string
                                              description: |-
                                                matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                                map is equivalent to an element of matchExpressions, whose key field is "key", the
                                                operator is "In", and the values array contains only "value". The requirements are ANDed.
                                              type: object
                                          type: object
                                          x-kubernetes-map-type: atomic
                                        storageClassName:
                                          description: |-
                                            storageClassName is the name of the StorageClass required by the claim.
                                            More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1
                                          type: string
                                        volumeAttributesClassName:
                                          description: |-
                                            volumeAttributesClassName may be used to set the VolumeAttributesClass used by this claim.
                                            If specified, the CSI driver will create or update the volume with the attributes defined
                                            in the corresponding VolumeAttributesClass. This has a different purpose than storageClassName,
                                            it can be changed after the claim is created. An empty string value means that no VolumeAttributesClass
                                            will be applied to the claim but it's not allowed to reset this field to empty string once it is set.
                                            If unspecified and the PersistentVolumeClaim is unbound, the default VolumeAttributesClass
                                            will be set by the persistentvolume controller if it exists.
                                            If the resource referred to by volumeAttributesClass does not exist, this PersistentVolumeClaim will be
                                            set to a Pending state, as reflected by the modifyVolumeStatus field, until such as a resource
                                            exists.
                                            More info: https://kubernetes.io/docs/concepts/storage/volume-attributes-classes/
                                            (Beta) Using this field requires the VolumeAttributesClass feature gate to be enabled (off by default).
                                          type: string
                                        volumeMode:
                                          description: |-
                                            volumeMode defines what type of volume is required by the claim.
                                            Value of Filesystem is implied when not included in claim spec.
                                          type: string
                                        volumeName:
                                          description: volumeName is the binding reference to the PersistentVolume backing this claim.
                                          type: string
                                      type: object
                                  required:
                                    - spec
                                  type: object
                              type: object
                            fc:
                              description: fc represents a Fibre Channel resource that is attached to a kubelet's host machine and then exposed to the pod.
                              properties:
                                fsType:
                                  description: |-
                                    fsType is the filesystem type to mount.
                                    Must be a filesystem type supported by the host operating system.
                                    Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
                                  type: string
                                lun:
                                  description: 'lun is Optional: FC target lun number'
                                  format: int32
                                  type: integer
                                readOnly:
                                  description: |-
                                    readOnly is Optional: Defaults to false (read/write). ReadOnly here will force
                                    the ReadOnly setting in VolumeMounts.
                                  type: boolean
                                targetWWNs:
                                  description: 'targetWWNs is Optional: FC target worldwide names (WWNs)'
                                  items:
                                    type: string
                                  type: array
                                  x-kubernetes-list-type: atomic
                                wwids:
                                  description: |-
                                    wwids Optional: FC volume world wide identifiers (wwids)
                                    Either wwids or combination of targetWWNs and lun must be set, but not both simultaneously.
                                  items:
                                    type: string
                                  type: array
                                  x-kubernetes-list-type: atomic
                              type: object
                            flexVolume:
                              description: |-
                                flexVolume represents a generic volume resource that is
                                provisioned/attached using an exec based plugin.
                                Deprecated: FlexVolume is deprecated. Consider using a CSIDriver instead.
                              properties:
                                driver:
                                  description: driver is the name of the driver to use for this volume.
                                  type: string
                                fsType:
                                  description: |-
                                    fsType is the filesystem type to mount.
                                    Must be a filesystem type supported by the host operating system.
                                    Ex. "ext4", "xfs", "ntfs". The default filesystem depends on FlexVolume script.
                                  type: string
                                options:
                                  additionalProperties:
                                    type: string
                                  description: 'options is Optional: this field holds extra command options if any.'
                                  type: object
                                readOnly:
                                  description: |-
                                    readOnly is Optional: defaults to false (read/write). ReadOnly here will force
                                    the ReadOnly setting in VolumeMounts.
                                  type: boolean
                                secretRef:
                                  description: |-
                                    secretRef is Optional: secretRef is reference to the secret object containing
                                    sensitive information to pass to the plugin scripts. This may be
                                    empty if no secret object is specified. If the secret object
                                    contains more than one secret, all secrets are passed to the plugin
                                    scripts.
                                  properties:
                                    name:
                                      default: ""
                                      description: |-
                                        Name of the referent.
                                        This field is effectively required, but due to backwards compatibility is
                                        allowed to be empty. Instances of this type with an empty value here are
                                        almost certainly wrong.
                                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                      type: string
                                  type: object
                                  x-kubernetes-map-type: atomic
                              required:
                                - driver
                              type: object
                            flocker:
                              description: |-
                                flocker represents a Flocker volume attached to a kubelet's host machine. This depends on the Flocker control service being running.
                                Deprecated: Flocker is deprecated and the in-tree flocker type is no longer supported.
                              properties:
                                datasetName:
                                  description: |-
                                    datasetName is Name of the dataset stored as metadata -> name on the dataset for Flocker
                                    should be considered as deprecated
                                  type: string
                                datasetUUID:
                                  description: datasetUUID is the UUID of the dataset. This is unique identifier of a Flocker dataset
                                  type: string
                              type: object
                            gcePersistentDisk:
                              description: |-
                                gcePersistentDisk represents a GCE Disk resource that is attached to a
                                kubelet's host machine and then exposed to the pod.
                                Deprecated: GCEPersistentDisk is deprecated. All operations for the in-tree
                                gcePersistentDisk type are redirected to the pd.csi.storage.gke.io CSI driver.
                                More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
                              properties:
                                fsType:
                                  description: |-
                                    fsType is filesystem type of the volume that you want to mount.
                                    Tip: Ensure that the filesystem type is supported by the host operating system.
                                    Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
                                    More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
                                  type: string
                                partition:
                                  description: |-
                                    partition is the partition in the volume that you want to mount.
                                    If omitted, the default is to mount by volume name.
                                    Examples: For volume /dev/sda1, you specify the partition as "1".
                                    Similarly, the volume partition for /dev/sda is "0" (or you can leave the property empty).
                                    More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
                                  format: int32
                                  type: integer
                                pdName:
                                  description: |-
                                    pdName is unique name of the PD resource in GCE. Used to identify the disk in GCE.
                                    More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
                                  type: string
                                readOnly:
                                  description: |-
                                    readOnly here will force the ReadOnly setting in VolumeMounts.
                                    Defaults to false.
                                    More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
                                  type: boolean
                              required:
                                - pdName
                              type: object
                            gitRepo:
                              description: |-
                                gitRepo represents a git repository at a particular revision.
                                Deprecated: GitRepo is deprecated. To provision a container with a git repo, mount an
                                EmptyDir into an InitContainer that clones the repo using git, then mount the EmptyDir
                                into the Pod's container.
                              properties:
                                directory:
                                  description: |-
                                    directory is the target directory name.
                                    Must not contain or start with '..'.  If '.' is supplied, the volume directory will be the
                                    git repository.  Otherwise, if specified, the volume will contain the git repository in
                                    the subdirectory with the given name.
                                  type: string
                                repository:
                                  description: repository is the URL
                                  type: string
                                revision:
                                  description: revision is the commit hash for the specified revision.
                                  type: string
                              required:
                                - repository
                              type: object
                            glusterfs:
                              description: |-
                                glusterfs represents a Glusterfs mount on the host that shares a pod's lifetime.
                                Deprecated: Glusterfs is deprecated and the in-tree glusterfs type is no longer supported.
                                More info: https://examples.k8s.io/volumes/glusterfs/README.md
                              properties:
                                endpoints:
                                  description: |-
                                    endpoints is the endpoint name that details Glusterfs topology.
                                    More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod
                                  type: string
                                path:
                                  description: |-
                                    path is the Glusterfs volume path.
                                    More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod
                                  type: string
                                readOnly:
                                  description: |-
                                    readOnly here will force the Glusterfs volume to be mounted with read-only permissions.
                                    Defaults to false.
                                    More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod
                                  type: boolean
                              required:
                                - endpoints
                                - path
                              type: object
                            hostPath:
                              description: |-
                                hostPath represents a pre-existing file or directory on the host
                                machine that is directly exposed to the container. This is generally
                                used for system agents or other privileged things that are allowed
                                to see the host machine. Most containers will NOT need this.
                                More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath
                              properties:
                                path:
                                  description: |-
                                    path of the directory on the host.
                                    If the path is a symlink, it will follow the link to the real path.
                                    More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath
                                  type: string
                                type:
                                  description: |-
                                    type for HostPath Volume
                                    Defaults to ""
                                    More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath
                                  type: string
                              required:
                                - path
                              type: object
                            image:
                              description: |-
                                image represents an OCI object (a container image or artifact) pulled and mounted on the kubelet's host machine.
                                The volume is resolved at pod startup depending on which PullPolicy value is provided:

                                - Always: the kubelet always attempts to pull the reference. Container creation will fail If the pull fails.
                                - Never: the kubelet never pulls the reference and only uses a local image or artifact. Container creation will fail if the reference isn't present.
                                - IfNotPresent: the kubelet pulls if the reference isn't already present on disk. Container creation will fail if the reference isn't present and the pull fails.

                                The volume gets re-resolved if the pod gets deleted and recreated, which means that new remote content will become available on pod recreation.
                                A failure to resolve or pull the image during pod startup will block containers from starting and may add significant latency. Failures will be retried using normal volume backoff and will be reported on the pod reason and message.
                                The types of objects that may be mounted by this volume are defined by the container runtime implementation on a host machine and at minimum must include all valid types supported by the container image field.
                                The OCI object gets mounted in a single directory (spec.containers[*].volumeMounts.mountPath) by merging the manifest layers in the same way as for container images.
                                The volume will be mounted read-only (ro) and non-executable files (noexec).
                                Sub path mounts for containers are not supported (spec.containers[*].volumeMounts.subpath) before 1.33.
                                The field spec.securityContext.fsGroupChangePolicy has no effect on this volume type.
                              properties:
                                pullPolicy:
                                  description: |-
                                    Policy for pulling OCI objects. Possible values are:
                                    Always: the kubelet always attempts to pull the reference. Container creation will fail If the pull fails.
                                    Never: the kubelet never pulls the reference and only uses a local image or artifact. Container creation will fail if the reference isn't present.
                                    IfNotPresent: the kubelet pulls if the reference isn't already present on disk. Container creation will fail if the reference isn't present and the pull fails.
                                    Defaults to Always if :latest tag is specified, or IfNotPresent otherwise.
                                  type: string
                                reference:
                                  description: |-
                                    Required: Image or artifact reference to be used.
                                    Behaves in the same way as pod.spec.containers[*].image.
                                    Pull secrets will be assembled in the same way as for the container image by looking up node credentials, SA image pull secrets, and pod spec image pull secrets.
                                    More info: https://kubernetes.io/docs/concepts/containers/images
                                    This field is optional to allow higher level config management to default or override
                                    container images in workload controllers like Deployments and StatefulSets.
                                  type: string
                              type: object
                            iscsi:
                              description: |-
                                iscsi represents an ISCSI Disk resource that is attached to a
                                kubelet's host machine and then exposed to the pod.
                                More info: https://examples.k8s.io/volumes/iscsi/README.md
                              properties:
                                chapAuthDiscovery:
                                  description: chapAuthDiscovery defines whether support iSCSI Discovery CHAP authentication
                                  type: boolean
                                chapAuthSession:
                                  description: chapAuthSession defines whether support iSCSI Session CHAP authentication
                                  type: boolean
                                fsType:
                                  description: |-
                                    fsType is the filesystem type of the volume that you want to mount.
                                    Tip: Ensure that the filesystem type is supported by the host operating system.
                                    Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
                                    More info: https://kubernetes.io/docs/concepts/storage/volumes#iscsi
                                  type: string
                                initiatorName:
                                  description: |-
                                    initiatorName is the custom iSCSI Initiator Name.
                                    If initiatorName is specified with iscsiInterface simultaneously, new iSCSI interface
                                    <target portal>:<volume name> will be created for the connection.
                                  type: string
                                iqn:
                                  description: iqn is the target iSCSI Qualified Name.
                                  type: string
                                iscsiInterface:
                                  default: default
                                  description: |-
                                    iscsiInterface is the interface Name that uses an iSCSI transport.
                                    Defaults to 'default' (tcp).
                                  type: string
                                lun:
                                  description: lun represents iSCSI Target Lun number.
                                  format: int32
                                  type: integer
                                portals:
                                  description: |-
                                    portals is the iSCSI Target Portal List. The portal is either an IP or ip_addr:port if the port
                                    is other than default (typically TCP ports 860 and 3260).
                                  items:
                                    type: string
                                  type: array
                                  x-kubernetes-list-type: atomic
                                readOnly:
                                  description: |-
                                    readOnly here will force the ReadOnly setting in VolumeMounts.
                                    Defaults to false.
                                  type: boolean
                                secretRef:
                                  description: secretRef is the CHAP Secret for iSCSI target and initiator authentication
                                  properties:
                                    name:
                                      default: ""
                                      description: |-
                                        Name of the referent.
                                        This field is effectively required, but due to backwards compatibility is
                                        allowed to be empty. Instances of this type with an empty value here are
                                        almost certainly wrong.
                                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                      type: string
                                  type: object
                                  x-kubernetes-map-type: atomic
                                targetPortal:
                                  description: |-
                                    targetPortal is iSCSI Target Portal. The Portal is either an IP or ip_addr:port if the port
                                    is other than default (typically TCP ports 860 and 3260).
                                  type: string
                              required:
                                - iqn
                                - lun
                                - targetPortal
                              type: object
                            name:
                              description: |-
                                name of the volume.
                                Must be a DNS_LABEL and unique within the pod.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              type: string
                            nfs:
                              description: |-
                                nfs represents an NFS mount on the host that shares a pod's lifetime
                                More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs
                              properties:
                                path:
                                  description: |-
                                    path that is exported by the NFS server.
                                    More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs
                                  type: string
                                readOnly:
                                  description: |-
                                    readOnly here will force the NFS export to be mounted with read-only permissions.
                                    Defaults to false.
                                    More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs
                                  type: boolean
                                server:
                                  description: |-
                                    server is the hostname or IP address of the NFS server.
                                    More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs
                                  type: string
                              required:
                                - path
                                - server
                              type: object
                            persistentVolumeClaim:
                              description: |-
                                persistentVolumeClaimVolumeSource represents a reference to a
                                PersistentVolumeClaim in the same namespace.
                                More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims
                              properties:
                                claimName:
                                  description: |-
                                    claimName is the name of a PersistentVolumeClaim in the same namespace as the pod using this volume.
                                    More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims
                                  type: string
                                readOnly:
                                  description: |-
                                    readOnly Will force the ReadOnly setting in VolumeMounts.
                                    Default false.
                                  type: boolean
                              required:
                                - claimName
                              type: object
                            photonPersistentDisk:
                              description: |-
                                photonPersistentDisk represents a PhotonController persistent disk attached and mounted on kubelets host machine.
                                Deprecated: PhotonPersistentDisk is deprecated and the in-tree photonPersistentDisk type is no longer supported.
                              properties:
                                fsType:
                                  description: |-
                                    fsType is the filesystem type to mount.
                                    Must be a filesystem type supported by the host operating system.
                                    Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
                                  type: string
                                pdID:
                                  description: pdID is the ID that identifies Photon Controller persistent disk
                                  type: string
                              required:
                                - pdID
                              type: object
                            portworxVolume:
                              description: |-
                                portworxVolume represents a portworx volume attached and mounted on kubelets host machine.
                                Deprecated: PortworxVolume is deprecated. All operations for the in-tree portworxVolume type
                                are redirected to the pxd.portworx.com CSI driver when the CSIMigrationPortworx feature-gate
                                is on.
                              properties:
                                fsType:
                                  description: |-
                                    fSType represents the filesystem type to mount
                                    Must be a filesystem type supported by the host operating system.
                                    Ex. "ext4", "xfs". Implicitly inferred to be "ext4" if unspecified.
                                  type: string
                                readOnly:
                                  description: |-
                                    readOnly defaults to false (read/write). ReadOnly here will force
                                    the ReadOnly setting in VolumeMounts.
                                  type: boolean
                                volumeID:
                                  description: volumeID uniquely identifies a Portworx volume
                                  type: string
                              required:
                                - volumeID
                              type: object
                            projected:
                              description: projected items for all in one resources secrets, configmaps, and downward API
                              properties:
                                defaultMode:
                                  description: |-
                                    defaultMode are the mode bits used to set permissions on created files by default.
                                    Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
                                    YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
                                    Directories within the path are not affected by this setting.
                                    This might be in conflict with other options that affect the file
                                    mode, like fsGroup, and the result can be other mode bits set.
                                  format: int32
                                  type: integer
                                sources:
                                  description: |-
                                    sources is the list of volume projections. Each entry in this list
                                    handles one source.
                                  items:
                                    description: |-
                                      Projection that may be projected along with other supported volume types.
                                      Exactly one of these fields must be set.
                                    properties:
                                      clusterTrustBundle:
                                        description: |-
                                          ClusterTrustBundle allows a pod to access the `.spec.trustBundle` field
                                          of ClusterTrustBundle objects in an auto-updating file.

                                          Alpha, gated by the ClusterTrustBundleProjection feature gate.

                                          ClusterTrustBundle objects can either be selected by name, or by the
                                          combination of signer name and a label selector.

                                          Kubelet performs aggressive normalization of the PEM contents written
                                          into the pod filesystem.  Esoteric PEM features such as inter-block
                                          comments and block headers are stripped.  Certificates are deduplicated.
                                          The ordering of certificates within the file is arbitrary, and Kubelet
                                          may change the order over time.
                                        properties:
                                          labelSelector:
                                            description: |-
                                              Select all ClusterTrustBundles that match this label selector.  Only has
                                              effect if signerName is set.  Mutually-exclusive with name.  If unset,
                                              interpreted as "match nothing".  If set but empty, interpreted as "match
                                              everything".
                                            properties:
                                              matchExpressions:
                                                description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                                items:
                                                  description: |-
                                                    A label selector requirement is a selector that contains values, a key, and an operator that
                                                    relates the key and values.
                                                  properties:
                                                    key:
                                                      description: key is the label key that the selector applies to.
                                                      type: string
                                                    operator:
                                                      description: |-
                                                        operator represents a key's relationship to a set of values.
                                                        Valid operators are In, NotIn, Exists and DoesNotExist.
                                                      type: string
                                                    values:
                                                      description: |-
                                                        values is an array of string values. If the operator is In or NotIn,
                                                        the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                        the values array must be empty. This array is replaced during a strategic
                                                        merge patch.
                                                      items:
                                                        type: string
                                                      type: array
                                                      x-kubernetes-list-type: atomic
                                                  required:
                                                    - key
                                                    - operator
                                                  type: object
                                                type: array
                                                x-kubernetes-list-type: atomic
                                              matchLabels:
                                                additionalProperties:
                                                  type: string
                                                description: |-
                                                  matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                                  map is equivalent to an element of matchExpressions, whose key field is "key", the
                                                  operator is "In", and the values array contains only "value". The requirements are ANDed.
                                                type: object
                                            type: object
                                            x-kubernetes-map-type: atomic
                                          name:
                                            description: |-
                                              Select a single ClusterTrustBundle by object name.  Mutually-exclusive
                                              with signerName and labelSelector.
                                            type: string
                                          optional:
                                            description: |-
                                              If true, don't block pod startup if the referenced ClusterTrustBundle(s)
                                              aren't available.  If using name, then the named ClusterTrustBundle is
                                              allowed not to exist.  If using signerName, then the combination of
                                              signerName and labelSelector is allowed to match zero
                                              ClusterTrustBundles.
                                            type: boolean
                                          path:
                                            description: Relative path from the volume root to write the bundle.
                                            type: string
                                          signerName:
                                            description: |-
                                              Select all ClusterTrustBundles that match this signer name.
                                              Mutually-exclusive with name.  The contents of all selected
                                              ClusterTrustBundles will be unified and deduplicated.
                                            type: string
                                        required:
                                          - path
                                        type: object
                                      configMap:
                                        description: configMap information about the configMap data to project
                                        properties:
                                          items:
                                            description: |-
                                              items if unspecified, each key-value pair in the Data field of the referenced
                                              ConfigMap will be projected into the volume as a file whose name is the
                                              key and content is the value. If specified, the listed keys will be
                                              projected into the specified paths, and unlisted keys will not be
                                              present. If a key is specified which is not present in the ConfigMap,
                                              the volume setup will error unless it is marked optional. Paths must be
                                              relative and may not contain the '..' path or start with '..'.
                                            items:
                                              description: Maps a string key to a path within a volume.
                                              properties:
                                                key:
                                                  description: key is the key to project.
                                                  type: string
                                                mode:
                                                  description: |-
                                                    mode is Optional: mode bits used to set permissions on this file.
                                                    Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
                                                    YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
                                                    If not specified, the volume defaultMode will be used.
                                                    This might be in conflict with other options that affect the file
                                                    mode, like fsGroup, and the result can be other mode bits set.
                                                  format: int32
                                                  type: integer
                                                path:
                                                  description: |-
                                                    path is the relative path of the file to map the key to.
                                                    May not be an absolute path.
                                                    May not contain the path element '..'.
                                                    May not start with the string '..'.
                                                  type: string
                                              required:
                                                - key
                                                - path
                                              type: object
                                            type: array
                                            x-kubernetes-list-type: atomic
                                          name:
                                            default: ""
                                            description: |-
                                              Name of the referent.
                                              This field is effectively required, but due to backwards compatibility is
                                              allowed to be empty. Instances of this type with an empty value here are
                                              almost certainly wrong.
                                              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                            type: string
                                          optional:
                                            description: optional specify whether the ConfigMap or its keys must be defined
                                            type: boolean
                                        type: object
                                        x-kubernetes-map-type: atomic
                                      downwardAPI:
                                        description: downwardAPI information about the downwardAPI data to project
                                        properties:
                                          items:
                                            description: Items is a list of DownwardAPIVolume file
                                            items:
                                              description: DownwardAPIVolumeFile represents information to create the file containing the pod field
                                              properties:
                                                fieldRef:
                                                  description: 'Required: Selects a field of the pod: only annotations, labels, name, namespace and uid are supported.'
                                                  properties:
                                                    apiVersion:
                                                      description: Version of the schema the FieldPath is written in terms of, defaults to "v1".
                                                      type: string
                                                    fieldPath:
                                                      description: Path of the field to select in the specified API version.
                                                      type: string
                                                  required:
                                                    - fieldPath
                                                  type: object
                                                  x-kubernetes-map-type: atomic
                                                mode:
                                                  description: |-
                                                    Optional: mode bits used to set permissions on this file, must be an octal value
                                                    between 0000 and 0777 or a decimal value between 0 and 511.
                                                    YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
                                                    If not specified, the volume defaultMode will be used.
                                                    This might be in conflict with other options that affect the file
                                                    mode, like fsGroup, and the result can be other mode bits set.
                                                  format: int32
                                                  type: integer
                                                path:
                                                  description: 'Required: Path is  the relative path name of the file to be created. Must not be absolute or contain the ''..'' path. Must be utf-8 encoded. The first item of the relative path must not start with ''..'''
                                                  type: string
                                                resourceFieldRef:
                                                  description: |-
                                                    Selects a resource of the container: only resources limits and requests
                                                    (limits.cpu, limits.memory, requests.cpu and requests.memory) are currently supported.
                                                  properties:
                                                    containerName:
                                                      description: 'Container name: required for volumes, optional for env vars'
                                                      type: string
                                                    divisor:
                                                      anyOf:
                                                        - type: integer
                                                        - type: string
                                                      description: Specifies the output format of the exposed resources, defaults to "1"
                                                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                                      x-kubernetes-int-or-string: true
                                                    resource:
                                                      description: 'Required: resource to select'
                                                      type: string
                                                  required:
                                                    - resource
                                                  type: object
                                                  x-kubernetes-map-type: atomic
                                              required:
                                                - path
                                              type: object
                                            type: array
                                            x-kubernetes-list-type: atomic
                                        type: object
                                      secret:
                                        description: secret information about the secret data to project
                                        properties:
                                          items:
                                            description: |-
                                              items if unspecified, each key-value pair in the Data field of the referenced
                                              Secret will be projected into the volume as a file whose name is the
                                              key and content is the value. If specified, the listed keys will be
                                              projected into the specified paths, and unlisted keys will not be
                                              present. If a key is specified which is not present in the Secret,
                                              the volume setup will error unless it is marked optional. Paths must be
                                              relative and may not contain the '..' path or start with '..'.
                                            items:
                                              description: Maps a string key to a path within a volume.
                                              properties:
                                                key:
                                                  description: key is the key to project.
                                                  type: string
                                                mode:
                                                  description: |-
                                                    mode is Optional: mode bits used to set permissions on this file.
                                                    Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
                                                    YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
                                                    If not specified, the volume defaultMode will be used.
                                                    This might be in conflict with other options that affect the file
                                                    mode, like fsGroup, and the result can be other mode bits set.
                                                  format: int32
                                                  type: integer
                                                path:
                                                  description: |-
                                                    path is the relative path of the file to map the key to.
                                                    May not be an absolute path.
                                                    May not contain the path element '..'.
                                                    May not start with the string '..'.
                                                  type: string
                                              required:
                                                - key
                                                - path
                                              type: object
                                            type: array
                                            x-kubernetes-list-type: atomic
                                          name:
                                            default: ""
                                            description: |-
                                              Name of the referent.
                                              This field is effectively required, but due to backwards compatibility is
                                              allowed to be empty. Instances of this type with an empty value here are
                                              almost certainly wrong.
                                              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                            type: string
                                          optional:
                                            description: optional field specify whether the Secret or its key must be defined
                                            type: boolean
                                        type: object
                                        x-kubernetes-map-type: atomic
                                      serviceAccountToken:
                                        description: serviceAccountToken is information about the serviceAccountToken data to project
                                        properties:
                                          audience:
                                            description: |-
                                              audience is the intended audience of the token. A recipient of a token
                                              must identify itself with an identifier specified in the audience of the
                                              token, and otherwise should reject the token. The audience defaults to the
                                              identifier of the apiserver.
                                            type: string
                                          expirationSeconds:
                                            description: |-
                                              expirationSeconds is the requested duration of validity of the service
                                              account token. As the token approaches expiration, the kubelet volume
                                              plugin will proactively rotate the service account token. The kubelet will
                                              start trying to rotate the token if the token is older than 80 percent of
                                              its time to live or if the token is older than 24 hours.Defaults to 1 hour
                                              and must be at least 10 minutes.
                                            format: int64
                                            type: integer
                                          path:
                                            description: |-
                                              path is the path relative to the mount point of the file to project the
                                              token into.
                                            type: string
                                        required:
                                          - path
                                        type: object
                                    type: object
                                  type: array
                                  x-kubernetes-list-type: atomic
                              type: object
                            quobyte:
                              description: |-
                                quobyte represents a Quobyte mount on the host that shares a pod's lifetime.
                                Deprecated: Quobyte is deprecated and the in-tree quobyte type is no longer supported.
                              properties:
                                group:
                                  description: |-
                                    group to map volume access to
                                    Default is no group
                                  type: string
                                readOnly:
                                  description: |-
                                    readOnly here will force the Quobyte volume to be mounted with read-only permissions.
                                    Defaults to false.
                                  type: boolean
                                registry:
                                  description: |-
                                    registry represents a single or multiple Quobyte Registry services
                                    specified as a string as host:port pair (multiple entries are separated with commas)
                                    which acts as the central registry for volumes
                                  type: string
                                tenant:
                                  description: |-
                                    tenant owning the given Quobyte volume in the Backend
                                    Used with dynamically provisioned Quobyte volumes, value is set by the plugin
                                  type: string
                                user:
                                  description: |-
                                    user to map volume access to
                                    Defaults to serivceaccount user
                                  type: string
                                volume:
                                  description: volume is a string that references an already created Quobyte volume by name.
                                  type: string
                              required:
                                - registry
                                - volume
                              type: object
                            rbd:
                              description: |-
                                rbd represents a Rados Block Device mount on the host that shares a pod's lifetime.
                                Deprecated: RBD is deprecated and the in-tree rbd type is no longer supported.
                                More info: https://examples.k8s.io/volumes/rbd/README.md
                              properties:
                                fsType:
                                  description: |-
                                    fsType is the filesystem type of the volume that you want to mount.
                                    Tip: Ensure that the filesystem type is supported by the host operating system.
                                    Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
                                    More info: https://kubernetes.io/docs/concepts/storage/volumes#rbd
                                  type: string
                                image:
                                  description: |-
                                    image is the rados image name.
                                    More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
                                  type: string
                                keyring:
                                  default: /etc/ceph/keyring
                                  description: |-
                                    keyring is the path to key ring for RBDUser.
                                    Default is /etc/ceph/keyring.
                                    More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
                                  type: string
                                monitors:
                                  description: |-
                                    monitors is a collection of Ceph monitors.
                                    More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
                                  items:
                                    type: string
                                  type: array
                                  x-kubernetes-list-type: atomic
                                pool:
                                  default: rbd
                                  description: |-
                                    pool is the rados pool name.
                                    Default is rbd.
                                    More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
                                  type: string
                                readOnly:
                                  description: |-
                                    readOnly here will force the ReadOnly setting in VolumeMounts.
                                    Defaults to false.
                                    More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
                                  type: boolean
                                secretRef:
                                  description: |-
                                    secretRef is name of the authentication secret for RBDUser. If provided
                                    overrides keyring.
                                    Default is nil.
                                    More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
                                  properties:
                                    name:
                                      default: ""
                                      description: |-
                                        Name of the referent.
                                        This field is effectively required, but due to backwards compatibility is
                                        allowed to be empty. Instances of this type with an empty value here are
                                        almost certainly wrong.
                                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                      type: string
                                  type: object
                                  x-kubernetes-map-type: atomic
                                user:
                                  default: admin
                                  description: |-
                                    user is the rados user name.
                                    Default is admin.
                                    More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
                                  type: string
                              required:
                                - image
                                - monitors
                              type: object
                            scaleIO:
                              description: |-
                                scaleIO represents a ScaleIO persistent volume attached and mounted on Kubernetes nodes.
                                Deprecated: ScaleIO is deprecated and the in-tree scaleIO type is no longer supported.
                              properties:
                                fsType:
                                  default: xfs
                                  description: |-
                                    fsType is the filesystem type to mount.
                                    Must be a filesystem type supported by the host operating system.
                                    Ex. "ext4", "xfs", "ntfs".
                                    Default is "xfs".
                                  type: string
                                gateway:
                                  description: gateway is the host address of the ScaleIO API Gateway.
                                  type: string
                                protectionDomain:
                                  description: protectionDomain is the name of the ScaleIO Protection Domain for the configured storage.
                                  type: string
                                readOnly:
                                  description: |-
                                    readOnly Defaults to false (read/write). ReadOnly here will force
                                    the ReadOnly setting in VolumeMounts.
                                  type: boolean
                                secretRef:
                                  description: |-
                                    secretRef references to the secret for ScaleIO user and other
                                    sensitive information. If this is not provided, Login operation will fail.
                                  properties:
                                    name:
                                      default: ""
                                      description: |-
                                        Name of the referent.
                                        This field is effectively required, but due to backwards compatibility is
                                        allowed to be empty. Instances of this type with an empty value here are
                                        almost certainly wrong.
                                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                      type: string
                                  type: object
                                  x-kubernetes-map-type: atomic
                                sslEnabled:
                                  description: sslEnabled Flag enable/disable SSL communication with Gateway, default false
                                  type: boolean
                                storageMode:
                                  default: ThinProvisioned
                                  description: |-
                                    storageMode indicates whether the storage for a volume should be ThickProvisioned or ThinProvisioned.
                                    Default is ThinProvisioned.
                                  type: string
                                storagePool:
                                  description: storagePool is the ScaleIO Storage Pool associated with the protection domain.
                                  type: string
                                system:
                                  description: system is the name of the storage system as configured in ScaleIO.
                                  type: string
                                volumeName:
                                  description: |-
                                    volumeName is the name of a volume already created in the ScaleIO system
                                    that is associated with this volume source.
                                  type: string
                              required:
                                - gateway
                                - secretRef
                                - system
                              type: object
                            secret:
                              description: |-
                                secret represents a secret that should populate this volume.
                                More info: https://kubernetes.io/docs/concepts/storage/volumes#secret
                              properties:
                                defaultMode:
                                  description: |-
                                    defaultMode is Optional: mode bits used to set permissions on created files by default.
                                    Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
                                    YAML accepts both octal and decimal values, JSON requires decimal values
                                    for mode bits. Defaults to 0644.
                                    Directories within the path are not affected by this setting.
                                    This might be in conflict with other options that affect the file
                                    mode, like fsGroup, and the result can be other mode bits set.
                                  format: int32
                                  type: integer
                                items:
                                  description: |-
                                    items If unspecified, each key-value pair in the Data field of the referenced
                                    Secret will be projected into the volume as a file whose name is the
                                    key and content is the value. If specified, the listed keys will be
                                    projected into the specified paths, and unlisted keys will not be
                                    present. If a key is specified which is not present in the Secret,
                                    the volume setup will error unless it is marked optional. Paths must be
                                    relative and may not contain the '..' path or start with '..'.
                                  items:
                                    description: Maps a string key to a path within a volume.
                                    properties:
                                      key:
                                        description: key is the key to project.
                                        type: string
                                      mode:
                                        description: |-
                                          mode is Optional: mode bits used to set permissions on this file.
                                          Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
                                          YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
                                          If not specified, the volume defaultMode will be used.
                                          This might be in conflict with other options that affect the file
                                          mode, like fsGroup, and the result can be other mode bits set.
                                        format: int32
                                        type: integer
                                      path:
                                        description: |-
                                          path is the relative path of the file to map the key to.
                                          May not be an absolute path.
                                          May not contain the path element '..'.
                                          May not start with the string '..'.
                                        type: string
                                    required:
                                      - key
                                      - path
                                    type: object
                                  type: array
                                  x-kubernetes-list-type: atomic
                                optional:
                                  description: optional field specify whether the Secret or its keys must be defined
                                  type: boolean
                                secretName:
                                  description: |-
                                    secretName is the name of the secret in the pod's namespace to use.
                                    More info: https://kubernetes.io/docs/concepts/storage/volumes#secret
                                  type: string
                              type: object
                            storageos:
                              description: |-
                                storageOS represents a StorageOS volume attached and mounted on Kubernetes nodes.
                                Deprecated: StorageOS is deprecated and the in-tree storageos type is no longer supported.
                              properties:
                                fsType:
                                  description: |-
                                    fsType is the filesystem type to mount.
                                    Must be a filesystem type supported by the host operating system.
                                    Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
                                  type: string
                                readOnly:
                                  description: |-
                                    readOnly defaults to false (read/write). ReadOnly here will force
                                    the ReadOnly setting in VolumeMounts.
                                  type: boolean
                                secretRef:
                                  description: |-
                                    secretRef specifies the secret to use for obtaining the StorageOS API
                                    credentials.  If not specified, default values will be attempted.
                                  properties:
                                    name:
                                      default: ""
                                      description: |-
                                        Name of the referent.
                                        This field is effectively required, but due to backwards compatibility is
                                        allowed to be empty. Instances of this type with an empty value here are
                                        almost certainly wrong.
                                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                      type: string
                                  type: object
                                  x-kubernetes-map-type: atomic
                                volumeName:
                                  description: |-
                                    volumeName is the human-readable name of the StorageOS volume.  Volume
                                    names are only unique within a namespace.
                                  type: string
                                volumeNamespace:
                                  description: |-
                                    volumeNamespace specifies the scope of the volume within StorageOS.  If no
                                    namespace is specified then the Pod's namespace will be used.  This allows the
                                    Kubernetes name scoping to be mirrored within StorageOS for tighter integration.
                                    Set VolumeName to any name to override the default behaviour.
                                    Set to "default" if you are not using namespaces within StorageOS.
                                    Namespaces that do not pre-exist within StorageOS will be created.
                                  type: string
                              type: object
                            vsphereVolume:
                              description: |-
                                vsphereVolume represents a vSphere volume attached and mounted on kubelets host machine.
                                Deprecated: VsphereVolume is deprecated. All operations for the in-tree vsphereVolume type
                                are redirected to the csi.vsphere.vmware.com CSI driver.
                              properties:
                                fsType:
                                  description: |-
                                    fsType is filesystem type to mount.
                                    Must be a filesystem type supported by the host operating system.
                                    Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
                                  type: string
                                storagePolicyID:
                                  description: storagePolicyID is the storage Policy Based Management (SPBM) profile ID associated with the StoragePolicyName.
                                  type: string
                                storagePolicyName:
                                  description: storagePolicyName is the storage Policy Based Management (SPBM) profile name.
                                  type: string
                                volumePath:
                                  description: volumePath is the path that identifies vSphere volume vmdk
                                  type: string
                              required:
                                - volumePath
                              type: object
                          required:
                            - name
                          type: object
                        type: array
                    type: object
                  status:
                    description: MattermostStatus defines the observed state of Mattermost
                    properties:
                      endpoint:
                        description: The endpoint to access the Mattermost instance
                        type: string
                      error:
                        description: The last observed error in the deployment of this Mattermost instance
                        type: string
                      image:
                        description: The image running on the pods in the Mattermost instance
                        type: string
                      observedGeneration:
                        description: The last observed Generation of the Mattermost resource that was acted on.
                        format: int64
                        type: integer
                      replicas:
                        description: Total number of non-terminated pods targeted by this Mattermost deployment
                        format: int32
                        type: integer
                      resourcePatch:
                        description: Status of specified resource patches.
                        properties:
                          deploymentPatch:
                            description: PatchStatus represents status of particular patch.
                            properties:
                              applied:
                                type: boolean
                              error:
                                type: string
                            type: object
                          servicePatch:
                            description: PatchStatus represents status of particular patch.
                            properties:
                              applied:
                                type: boolean
                              error:
                                type: string
                            type: object
                        type: object
                      state:
                        description: Represents the running state of the Mattermost instance
                        type: string
                      updatedReplicas:
                        description: |-
                          Total number of non-terminated pods targeted by this Mattermost deployment
                          that are running with the desired image.
                        format: int32
                        type: integer
                      version:
                        description: The version currently running in the Mattermost instance
                        type: string
                    type: object
                type: object
            served: true
            storage: true
            subresources:
              status: {}
    component:
      version: apiextensions.k8s.io/v1
      kind: CustomResourceDefinition
      schema: ""
  - id: dd13a555-f9d6-4cad-9f2b-9e38212da52c
    schemaVersion: components.meshery.io/v1beta1
    version: v1.0.0
    displayName: mattermost-operator
    description: ""
    format: ""
    model:
      id: b3f5bc0d-30f7-607d-6c73-784ddde6cad8
      schemaVersion: models.meshery.io/v1beta1
      version: v1.0.0
      name: kubernetes
      displayName: Kubernetes
      status: enabled
      registrant:
        id: 5bc80e3c-5d43-9eb4-d16c-78a2769247a6
        name: Github
        credential_id: 00000000-0000-0000-0000-000000000000
        type: registry
        sub_type: ""
        kind: github
        status: registered
        user_id: 00000000-0000-0000-0000-000000000000
        created_at: "2025-10-08T09:10:27.395320301Z"
        updated_at: "2025-10-08T09:10:27.395320301Z"
        deleted_at: "0001-01-01T00:00:00Z"
        schemaVersion: ""
      connection_id: 5bc80e3c-5d43-9eb4-d16c-78a2769247a6
      category:
        id: 9ca27d0d-66ce-42a9-8c85-6236563f2ddb
        name: Orchestration & Management
      subCategory: Scheduling & Orchestration
      metadata:
        isAnnotation: false
        primaryColor: '#326CE5'
        secondaryColor: '#7aa1f0'
        shape: circle
        styleOverrides: ""
        svgColor: ui/public/static/img/meshmodels/kubernetes/color/kubernetes-color.svg
        svgComplete: ""
        svgWhite: ui/public/static/img/meshmodels/kubernetes/white/kubernetes-white.svg
      model:
        version: v1.32.0-alpha.3
      components_count: 0
      relationships_count: 0
      components: null
      relationships: null
    styles:
      primaryColor: '#326CE5'
      secondaryColor: '#7aa1f0'
      shape: bottom-round-rectangle
      svgColor: ui/public/static/img/meshmodels/kubernetes/color/serviceaccount-color.svg
      svgComplete: ""
      svgWhite: ui/public/static/img/meshmodels/kubernetes/white/serviceaccount-white.svg
    capabilities: []
    status: enabled
    metadata:
      configurationUISchema: ""
      genealogy: ""
      instanceDetails: null
      isAnnotation: false
      isNamespaced: true
      published: false
      source_uri: git://github.com/kubernetes/kubernetes/master/api/openapi-spec/v3
    configuration:
      metadata:
        labels:
          app.kubernetes.io/instance: mattermost-operator
          app.kubernetes.io/managed-by: Helm
          app.kubernetes.io/name: mattermost-operator
          helm.sh/chart: mattermost-operator-1.0.4
        name: mattermost-operator
    component:
      version: v1
      kind: ServiceAccount
      schema: ""
  - id: df0bf75a-7f58-49a9-8a32-a4e6a3f137b1
    schemaVersion: components.meshery.io/v1beta1
    version: v1.0.0
    displayName: mattermost-operator
    description: ""
    format: ""
    model:
      id: b3f5bc0d-30f7-607d-6c73-784ddde6cad8
      schemaVersion: models.meshery.io/v1beta1
      version: v1.0.0
      name: kubernetes
      displayName: Kubernetes
      status: enabled
      registrant:
        id: 5bc80e3c-5d43-9eb4-d16c-78a2769247a6
        name: Github
        credential_id: 00000000-0000-0000-0000-000000000000
        type: registry
        sub_type: ""
        kind: github
        status: registered
        user_id: 00000000-0000-0000-0000-000000000000
        created_at: "2025-10-08T09:10:27.395320301Z"
        updated_at: "2025-10-08T09:10:27.395320301Z"
        deleted_at: "0001-01-01T00:00:00Z"
        schemaVersion: ""
      connection_id: 5bc80e3c-5d43-9eb4-d16c-78a2769247a6
      category:
        id: 9ca27d0d-66ce-42a9-8c85-6236563f2ddb
        name: Orchestration & Management
      subCategory: Scheduling & Orchestration
      metadata:
        isAnnotation: false
        primaryColor: '#326CE5'
        secondaryColor: '#7aa1f0'
        shape: circle
        styleOverrides: ""
        svgColor: ui/public/static/img/meshmodels/kubernetes/color/kubernetes-color.svg
        svgComplete: ""
        svgWhite: ui/public/static/img/meshmodels/kubernetes/white/kubernetes-white.svg
      model:
        version: v1.32.0-alpha.3
      components_count: 0
      relationships_count: 0
      components: null
      relationships: null
    styles:
      height: 22
      primaryColor: '#326CE5'
      secondaryColor: '#7aa1f0'
      shape: round-rectangle
      svgColor: ui/public/static/img/meshmodels/kubernetes/color/clusterrole-color.svg
      svgComplete: ""
      svgWhite: ui/public/static/img/meshmodels/kubernetes/white/clusterrole-white.svg
      width: 22
      x: 8.5
      y: 7.5
    capabilities: []
    status: enabled
    metadata:
      configurationUISchema: ""
      genealogy: ""
      instanceDetails: null
      isAnnotation: false
      isNamespaced: false
      published: false
      source_uri: git://github.com/kubernetes/kubernetes/master/api/openapi-spec/v3
    configuration:
      metadata:
        creationTimestamp: null
        labels:
          app.kubernetes.io/instance: mattermost-operator
          app.kubernetes.io/managed-by: Helm
          app.kubernetes.io/name: mattermost-operator
          helm.sh/chart: mattermost-operator-1.0.4
        name: mattermost-operator
      rules:
        - apiGroups:
            - ""
          resources:
            - pods
          verbs:
            - get
            - list
            - patch
            - update
            - watch
        - apiGroups:
            - ""
          resources:
            - pods
            - services
            - endpoints
            - persistentvolumeclaims
            - events
            - configmaps
            - secrets
            - serviceaccounts
          verbs:
            - '*'
        - apiGroups:
            - coordination.k8s.io
          resources:
            - leases
          verbs:
            - '*'
        - apiGroups:
            - ""
          resources:
            - namespaces
          verbs:
            - get
        - apiGroups:
            - apps
          resources:
            - deployments
            - daemonsets
            - replicasets
            - statefulsets
          verbs:
            - '*'
        - apiGroups:
            - networking.k8s.io
          resources:
            - ingresses
            - ingressclasses
          verbs:
            - '*'
        - apiGroups:
            - rbac.authorization.k8s.io
          resources:
            - rolebindings
            - roles
          verbs:
            - get
            - create
            - list
            - delete
            - watch
            - update
        - apiGroups:
            - monitoring.coreos.com
          resources:
            - servicemonitors
          verbs:
            - get
            - create
        - apiGroups:
            - apps
          resourceNames:
            - mattermost-operator
          resources:
            - deployments/finalizers
          verbs:
            - update
        - apiGroups:
            - mattermost.com
          resources:
            - '*'
            - clusterinstallations
            - mattermostrestoredbs
          verbs:
            - '*'
        - apiGroups:
            - installation.mattermost.com
          resources:
            - '*'
          verbs:
            - '*'
        - apiGroups:
            - mysql.presslabs.org
          resources:
            - mysqlbackups
          verbs:
            - get
            - list
            - watch
            - create
            - update
            - patch
            - delete
        - apiGroups:
            - mysql.presslabs.org
          resources:
            - mysqlclusters
            - mysqlclusters/status
          verbs:
            - get
            - list
            - watch
            - create
            - update
            - patch
            - delete
        - apiGroups:
            - miniocontroller.min.io
          resources:
            - '*'
          verbs:
            - '*'
        - apiGroups:
            - minio.io
          resources:
            - '*'
          verbs:
            - '*'
        - apiGroups:
            - batch
          resources:
            - jobs
          verbs:
            - get
            - create
            - list
            - delete
            - watch
            - update
        - apiGroups:
            - certificates.k8s.io
          resources:
            - certificatesigningrequests
            - certificatesigningrequests/approval
            - certificatesigningrequests/status
          verbs:
            - update
            - create
            - get
    component:
      version: rbac.authorization.k8s.io/v1
      kind: ClusterRole
      schema: ""
  - id: 69326474-cb2e-4715-aca4-dae01ff875bf
    schemaVersion: components.meshery.io/v1beta1
    version: v1.0.0
    displayName: mattermost-operator
    description: ""
    format: ""
    model:
      id: b3f5bc0d-30f7-607d-6c73-784ddde6cad8
      schemaVersion: models.meshery.io/v1beta1
      version: v1.0.0
      name: kubernetes
      displayName: Kubernetes
      status: enabled
      registrant:
        id: 5bc80e3c-5d43-9eb4-d16c-78a2769247a6
        name: Github
        credential_id: 00000000-0000-0000-0000-000000000000
        type: registry
        sub_type: ""
        kind: github
        status: registered
        user_id: 00000000-0000-0000-0000-000000000000
        created_at: "2025-10-08T09:10:27.395320301Z"
        updated_at: "2025-10-08T09:10:27.395320301Z"
        deleted_at: "0001-01-01T00:00:00Z"
        schemaVersion: ""
      connection_id: 5bc80e3c-5d43-9eb4-d16c-78a2769247a6
      category:
        id: 9ca27d0d-66ce-42a9-8c85-6236563f2ddb
        name: Orchestration & Management
      subCategory: Scheduling & Orchestration
      metadata:
        isAnnotation: false
        primaryColor: '#326CE5'
        secondaryColor: '#7aa1f0'
        shape: circle
        styleOverrides: ""
        svgColor: ui/public/static/img/meshmodels/kubernetes/color/kubernetes-color.svg
        svgComplete: ""
        svgWhite: ui/public/static/img/meshmodels/kubernetes/white/kubernetes-white.svg
      model:
        version: v1.32.0-alpha.3
      components_count: 0
      relationships_count: 0
      components: null
      relationships: null
    styles:
      height: 25
      primaryColor: '#326CE5'
      secondaryColor: '#7aa1f0'
      shape: round-rectangle
      svgColor: ui/public/static/img/meshmodels/kubernetes/color/clusterrolebinding-color.svg
      svgComplete: ""
      svgWhite: ui/public/static/img/meshmodels/kubernetes/white/clusterrolebinding-white.svg
      width: 25
      x: 7
      y: 7
    capabilities: []
    status: enabled
    metadata:
      configurationUISchema: ""
      genealogy: ""
      instanceDetails: null
      isAnnotation: false
      isNamespaced: false
      published: false
      source_uri: git://github.com/kubernetes/kubernetes/master/api/openapi-spec/v3
    configuration:
      metadata:
        labels:
          app.kubernetes.io/instance: mattermost-operator
          app.kubernetes.io/managed-by: Helm
          app.kubernetes.io/name: mattermost-operator
          helm.sh/chart: mattermost-operator-1.0.4
        name: mattermost-operator
      roleRef:
        apiGroup: rbac.authorization.k8s.io
        kind: ClusterRole
        name: mattermost-operator
      subjects:
        - kind: ServiceAccount
          name: mattermost-operator
          namespace: default
    component:
      version: rbac.authorization.k8s.io/v1
      kind: ClusterRoleBinding
      schema: ""
  - id: 812163a6-a7bd-468a-ad97-b88ef84a414b
    schemaVersion: components.meshery.io/v1beta1
    version: v1.0.0
    displayName: mattermost-operator
    description: ""
    format: ""
    model:
      id: b3f5bc0d-30f7-607d-6c73-784ddde6cad8
      schemaVersion: models.meshery.io/v1beta1
      version: v1.0.0
      name: kubernetes
      displayName: Kubernetes
      status: enabled
      registrant:
        id: 5bc80e3c-5d43-9eb4-d16c-78a2769247a6
        name: Github
        credential_id: 00000000-0000-0000-0000-000000000000
        type: registry
        sub_type: ""
        kind: github
        status: registered
        user_id: 00000000-0000-0000-0000-000000000000
        created_at: "2025-10-08T09:10:27.395320301Z"
        updated_at: "2025-10-08T09:10:27.395320301Z"
        deleted_at: "0001-01-01T00:00:00Z"
        schemaVersion: ""
      connection_id: 5bc80e3c-5d43-9eb4-d16c-78a2769247a6
      category:
        id: 9ca27d0d-66ce-42a9-8c85-6236563f2ddb
        name: Orchestration & Management
      subCategory: Scheduling & Orchestration
      metadata:
        isAnnotation: false
        primaryColor: '#326CE5'
        secondaryColor: '#7aa1f0'
        shape: circle
        styleOverrides: ""
        svgColor: ui/public/static/img/meshmodels/kubernetes/color/kubernetes-color.svg
        svgComplete: ""
        svgWhite: ui/public/static/img/meshmodels/kubernetes/white/kubernetes-white.svg
      model:
        version: v1.32.0-alpha.3
      components_count: 0
      relationships_count: 0
      components: null
      relationships: null
    styles:
      background-image: none
      background-opacity: 0.5
      border-width: 2
      primaryColor: '#326CE5'
      secondaryColor: '#7aa1f0'
      shape: round-rectangle
      svgColor: ui/public/static/img/meshmodels/kubernetes/color/deployment-color.svg
      svgComplete: ui/public/static/img/meshmodels/kubernetes/complete/deployment-complete.svg
      svgWhite: ui/public/static/img/meshmodels/kubernetes/white/deployment-white.svg
    capabilities: []
    status: enabled
    metadata:
      configurationUISchema: ""
      genealogy: parent
      instanceDetails: null
      isAnnotation: false
      isNamespaced: true
      published: false
      source_uri: git://github.com/kubernetes/kubernetes/master/api/openapi-spec/v3
    configuration:
      metadata:
        labels:
          app.kubernetes.io/instance: mattermost-operator
          app.kubernetes.io/managed-by: Helm
          app.kubernetes.io/name: mattermost-operator
          helm.sh/chart: mattermost-operator-1.0.4
        name: mattermost-operator
        namespace: default
      spec:
        replicas: 1
        selector:
          matchLabels:
            app.kubernetes.io/instance: mattermost-operator
            app.kubernetes.io/managed-by: Helm
            app.kubernetes.io/name: mattermost-operator
            name: mattermost-operator
        template:
          metadata:
            labels:
              app.kubernetes.io/instance: mattermost-operator
              app.kubernetes.io/managed-by: Helm
              app.kubernetes.io/name: mattermost-operator
              helm.sh/chart: mattermost-operator-1.0.4
              name: mattermost-operator
          spec:
            containers:
              - args:
                  - --enable-leader-election
                  - --metrics-addr=0.0.0.0:8383
                command:
                  - /mattermost-operator
                env:
                  - name: MAX_RECONCILING_INSTALLATIONS
                    value: "20"
                  - name: MAX_RECONCILE_CONCURRENCY
                    value: "10"
                  - name: REQUEUE_ON_LIMIT_DELAY
                    value: 20s
                image: mattermost/mattermost-operator:v1.24.0
                imagePullPolicy: IfNotPresent
                name: mattermost-operator
                ports:
                  - containerPort: 8383
                    name: metrics
                securityContext: null
            securityContext: null
            serviceAccountName: mattermost-operator
    component:
      version: apps/v1
      kind: Deployment
      schema: ""
relationships: null
