name: 'Multi tenancy Virtual Cluster   '
version: 0.0.29
services:
  vc-config-vcluster:
    annotations: {}
    apiVersion: v1
    dependsOn: []
    id: null
    isAnnotation: null
    labels:
      app: vcluster
      chart: vcluster-0.21.0-alpha.1
      heritage: Helm
      release: vcluster
    model: kubernetes
    name: vc-config-vcluster
    namespace: default
    settings:
      data:
        config.yaml: 
      type: Opaque
    traits:
      meshmap:
        edges: []
        fieldRefData: {}
        id: c4ffdb1e-3fce-499b-bc27-6d99cd1abd3c
        meshmodel-metadata:
          capabilities: ""
          defaultData: ""
          genealogy: ""
          isAnnotation: false
          isCustomResource: false
          isModelAnnotation: "FALSE"
          isNamespaced: true
          logoURL: Created by Meshery Authors
          model: kubernetes
          modelDisplayName: Kubernetes
          primaryColor: '#326CE5'
          secondaryColor: '#7aa1f0'
          shape: shield
          shapePolygonPoints: ""
          status: enabled
          styleOverrides: '{"height":32,"width":32,"background-clip":"node","background-image-containment":"over","padding":1,"background-opacity":"0"}'
          styles: '{"height":32,"width":32,"background-clip":"node","background-image-containment":"over","padding":1,"background-opacity":"0"}'
          subCategory: ""
          svgColor: ui/public/static/img/meshmodels/kubernetes/color/secret-color.svg
          svgComplete: ui/public/static/img/meshmodels/kubernetes/complete/secret-complete.svg
          svgWhite: ui/public/static/img/meshmodels/kubernetes/white/secret-white.svg
        position:
          posX: -70
          posY: 68
        whiteboardData:
          style: {}
    type: Secret
    version: ""
  vc-coredns-vcluster:
    annotations: {}
    apiVersion: v1
    dependsOn: []
    id: null
    isAnnotation: null
    labels: {}
    model: kubernetes
    name: vc-coredns-vcluster
    namespace: default
    settings:
      data:
        coredns.yaml: "apiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: coredns\n
          \ namespace: kube-system\n---\napiVersion: rbac.authorization.k8s.io/v1\nkind:
          ClusterRole\nmetadata:\n  labels:\n    kubernetes.io/bootstrapping: rbac-defaults\n
          \ name: system:coredns\nrules:\n  - apiGroups:\n      - \"\"\n    resources:\n
          \     - endpoints\n      - services\n      - pods\n      - namespaces\n
          \   verbs:\n      - list\n      - watch\n  - apiGroups:\n      - discovery.k8s.io\n
          \   resources:\n      - endpointslices\n    verbs:\n      - list\n      -
          watch\n---\napiVersion: rbac.authorization.k8s.io/v1\nkind: ClusterRoleBinding\nmetadata:\n
          \ annotations:\n    rbac.authorization.kubernetes.io/autoupdate: \"true\"\n
          \ labels:\n    kubernetes.io/bootstrapping: rbac-defaults\n  name: system:coredns\nroleRef:\n
          \ apiGroup: rbac.authorization.k8s.io\n  kind: ClusterRole\n  name: system:coredns\nsubjects:\n
          \ - kind: ServiceAccount\n    name: coredns\n    namespace: kube-system\n---\napiVersion:
          v1\nkind: ConfigMap\nmetadata:\n  name: coredns\n  namespace: kube-system\ndata:\n
          \ Corefile: |-\n    .:1053 {\n        errors\n        health\n        ready\n
          \       rewrite name regex .*\\.nodes\\.vcluster\\.com kubernetes.default.svc.cluster.local\n
          \       kubernetes cluster.local in-addr.arpa ip6.arpa {\n            pods
          insecure\n            fallthrough in-addr.arpa ip6.arpa\n        }\n        hosts
          /etc/NodeHosts {\n            ttl 60\n            reload 15s\n            fallthrough\n
          \       }\n        prometheus :9153\n        forward . /etc/resolv.conf\n
          \       cache 30\n        loop\n        loadbalance\n    }\n  \n    import
          /etc/coredns/custom/*.server\n  NodeHosts: \"\"\n---\napiVersion: apps/v1\nkind:
          Deployment\nmetadata:\n  name: coredns\n  namespace: kube-system\n  labels:\n
          \   k8s-app: kube-dns\n    kubernetes.io/name: \"CoreDNS\"\nspec:\n  replicas:
          1\n  strategy:\n    type: RollingUpdate\n    rollingUpdate:\n      maxUnavailable:
          1\n  selector:\n    matchLabels:\n      k8s-app: kube-dns\n  template:\n
          \   metadata:\n      labels:\n        k8s-app: kube-dns\n    spec:\n      priorityClassName:
          \"\"\n      serviceAccountName: coredns\n      nodeSelector:\n        kubernetes.io/os:
          linux\n      topologySpreadConstraints:\n        - labelSelector:\n            matchLabels:\n
          \             k8s-app: kube-dns\n          maxSkew: 1\n          topologyKey:
          kubernetes.io/hostname\n          whenUnsatisfiable: DoNotSchedule\n      containers:\n
          \       - name: coredns\n          image: {{.IMAGE}}\n          imagePullPolicy:
          IfNotPresent\n          resources:\n            limits:\n              cpu:
          1000m\n              memory: 170Mi\n            requests:\n              cpu:
          20m\n              memory: 64Mi\n          args: [ \"-conf\", \"/etc/coredns/Corefile\"
          ]\n          volumeMounts:\n            - name: config-volume\n              mountPath:
          /etc/coredns\n              readOnly: true\n            - name: custom-config-volume\n
          \             mountPath: /etc/coredns/custom\n              readOnly: true\n
          \         securityContext:\n            runAsNonRoot: true\n            runAsUser:
          {{.RUN_AS_USER}}\n            runAsGroup: {{.RUN_AS_GROUP}}\n            allowPrivilegeEscalation:
          false\n            capabilities:\n              add:\n                -
          NET_BIND_SERVICE\n              drop:\n                - ALL\n            readOnlyRootFilesystem:
          true\n          livenessProbe:\n            httpGet:\n              path:
          /health\n              port: 8080\n              scheme: HTTP\n            initialDelaySeconds:
          60\n            periodSeconds: 10\n            timeoutSeconds: 1\n            successThreshold:
          1\n            failureThreshold: 3\n          readinessProbe:\n            httpGet:\n
          \             path: /ready\n              port: 8181\n              scheme:
          HTTP\n            initialDelaySeconds: 0\n            periodSeconds: 2\n
          \           timeoutSeconds: 1\n            successThreshold: 1\n            failureThreshold:
          3\n      dnsPolicy: Default\n      volumes:\n        - name: config-volume\n
          \         configMap:\n            name: coredns\n            items:\n              -
          key: Corefile\n                path: Corefile\n              - key: NodeHosts\n
          \               path: NodeHosts\n        - name: custom-config-volume\n
          \         configMap:\n            name: coredns-custom\n            optional:
          true\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: kube-dns\n
          \ namespace: kube-system\n  annotations:\n    prometheus.io/port: \"9153\"\n
          \   prometheus.io/scrape: \"true\"\n  labels:\n    k8s-app: kube-dns\n    kubernetes.io/cluster-service:
          \"true\"\n    kubernetes.io/name: \"CoreDNS\"\nspec:\n  type: ClusterIP\n
          \ selector:\n    k8s-app: kube-dns\n  ports:\n    - name: dns\n      port:
          53\n      targetPort: 1053\n      protocol: UDP\n    - name: dns-tcp\n      port:
          53\n      targetPort: 1053\n      protocol: TCP\n    - name: metrics\n      port:
          9153\n      protocol: TCP"
    traits:
      meshmap:
        edges: []
        fieldRefData: {}
        id: 9dd94f45-26a2-49a5-82ca-1a403c526fb7
        meshmodel-metadata:
          capabilities: ""
          defaultData: ""
          genealogy: ""
          isAnnotation: false
          isCustomResource: false
          isModelAnnotation: "FALSE"
          isNamespaced: true
          logoURL: https://github.com/cncf/artwork/blob/master/projects/kubernetes/icon/white/kubernetes-icon-white.svg
          model: kubernetes
          modelDisplayName: Kubernetes
          primaryColor: '#326CE5'
          secondaryColor: '#7aa1f0'
          shape: bottom-round-rectangle
          shapePolygonPoints: ""
          status: enabled
          styleOverrides:
            z-index: 5
          styles: ""
          subCategory: ""
          svgColor: ui/public/static/img/meshmodels/kubernetes/color/configmap-color.svg
          svgComplete: ""
          svgWhite: ui/public/static/img/meshmodels/kubernetes/white/configmap-white.svg
        position:
          posX: -67
          posY: -1
        whiteboardData:
          style: {}
    type: ConfigMap
    version: ""
  vc-vcluster-jeyzt:
    annotations: {}
    apiVersion: rbac.authorization.k8s.io/v1
    dependsOn: []
    id: null
    isAnnotation: null
    labels:
      app: vcluster
      chart: vcluster-0.21.0-alpha.1
      heritage: Helm
      release: vcluster
    model: kubernetes
    name: vc-vcluster
    namespace: default
    settings:
      role Ref:
        api Group: rbac.authorization.k8s.io
        kind: Role
        name: vc-vcluster
      subjects:
      - kind: ServiceAccount
        name: vc-vcluster
        namespace: default
    traits:
      meshmap:
        edges: []
        fieldRefData: {}
        id: e7088a19-deb4-42c6-a4fe-5ef9a313d0b0
        meshmodel-metadata:
          capabilities: ""
          defaultData: ""
          genealogy: ""
          isAnnotation: false
          isCustomResource: false
          isModelAnnotation: "FALSE"
          isNamespaced: true
          logoURL: https://github.com/cncf/artwork/blob/master/projects/kubernetes/icon/white/kubernetes-icon-white.svg
          model: kubernetes
          modelDisplayName: Kubernetes
          primaryColor: '#326CE5'
          secondaryColor: '#7aa1f0'
          shape: round-rectangle
          shapePolygonPoints: ""
          status: enabled
          styleOverrides: '{"height":"25px","width":"25px","x":"7", "y":"7","z-index":4}'
          styles: '{"height":"25px","width":"25px","x":"7", "y":"7","z-index":4}'
          subCategory: ""
          svgColor: ui/public/static/img/meshmodels/kubernetes/color/rolebinding-color.svg
          svgComplete: ""
          svgWhite: ui/public/static/img/meshmodels/kubernetes/white/rolebinding-white.svg
        position:
          posX: 137.94734887849856
          posY: 20.56250849654856
        whiteboardData:
          style:
            height: 10.5
            width: 10.5
            z-index: 1000
    type: RoleBinding
    version: ""
  vc-vcluster-kdvdi:
    annotations: {}
    apiVersion: v1
    dependsOn: []
    id: null
    isAnnotation: null
    labels:
      app: vcluster
      chart: vcluster-0.21.0-alpha.1
      heritage: Helm
      release: vcluster
    model: kubernetes
    name: vc-vcluster
    namespace: default
    settings: {}
    traits:
      meshmap:
        edges:
        - data:
            id: 8f406a6a-dd69-4c10-9456-3839dbf45b13
            metadata:
              binded_by: e7088a19-deb4-42c6-a4fe-5ef9a313d0b0
            source: 8950a5e3-27ea-457a-a72d-9d26cb8fb275
            subType: Permission
            target: 7efa47b4-17c5-4839-986b-1e3dde0f9f71
          style:
            control-point-distances: null
            control-point-weights: "0.5"
            curve-style: bezier
            haystack-radius: "0"
            line-color: rgb(153,153,153)
            line-style: dotted
            opacity: "1"
            segment-distances: 20px
            segment-weights: "0.5"
            target-arrow-shape: vee
            taxi-direction: auto
            taxi-turn: 50%
            taxi-turn-min-distance: 10px
            width: 1.5px
        fieldRefData: {}
        id: 7efa47b4-17c5-4839-986b-1e3dde0f9f71
        meshmodel-metadata:
          capabilities: ""
          defaultData: ""
          genealogy: ""
          isAnnotation: false
          isCustomResource: false
          isModelAnnotation: "FALSE"
          isNamespaced: true
          logoURL: https://github.com/cncf/artwork/blob/master/projects/kubernetes/icon/white/kubernetes-icon-white.svg
          model: kubernetes
          modelDisplayName: Kubernetes
          primaryColor: '#326CE5'
          secondaryColor: '#7aa1f0'
          shape: bottom-round-rectangle
          shapePolygonPoints: ""
          status: enabled
          styleOverrides:
            z-index: 8
          styles: ""
          subCategory: ""
          svgColor: ui/public/static/img/meshmodels/kubernetes/color/serviceaccount-color.svg
          svgComplete: ""
          svgWhite: ui/public/static/img/meshmodels/kubernetes/white/serviceaccount-white.svg
        position:
          posX: 215.50216915502207
          posY: -26.636096470170546
        whiteboardData:
          style: {}
    type: ServiceAccount
    version: ""
  vc-vcluster-ujagc:
    annotations: {}
    apiVersion: rbac.authorization.k8s.io/v1
    dependsOn: []
    id: null
    isAnnotation: null
    labels:
      app: vcluster
      chart: vcluster-0.21.0-alpha.1
      heritage: Helm
      release: vcluster
    model: kubernetes
    name: vc-vcluster
    namespace: default
    settings:
      rules:
      - api Groups:
        - ""
        resources:
        - configmaps
        - secrets
        - services
        - pods
        - pods/attach
        - pods/portforward
        - pods/exec
        - persistentvolumeclaims
        verbs:
        - create
        - delete
        - patch
        - update
        - get
        - list
        - watch
      - api Groups:
        - ""
        resources:
        - pods/status
        - pods/ephemeralcontainers
        verbs:
        - patch
        - update
      - api Groups:
        - apps
        resources:
        - statefulsets
        - replicasets
        - deployments
        verbs:
        - get
        - list
        - watch
      - api Groups:
        - ""
        resources:
        - endpoints
        - events
        - pods/log
        verbs:
        - get
        - list
        - watch
      - api Groups:
        - ""
        resources:
        - endpoints
        verbs:
        - create
        - delete
        - patch
        - update
    traits:
      meshmap:
        edges:
        - data:
            id: 8f406a6a-dd69-4c10-9456-3839dbf45b13
            metadata:
              binded_by: e7088a19-deb4-42c6-a4fe-5ef9a313d0b0
            source: 8950a5e3-27ea-457a-a72d-9d26cb8fb275
            subType: Permission
            target: 7efa47b4-17c5-4839-986b-1e3dde0f9f71
          style:
            control-point-distances: null
            control-point-weights: "0.5"
            curve-style: bezier
            haystack-radius: "0"
            line-color: rgb(153,153,153)
            line-style: dotted
            opacity: "1"
            segment-distances: 20px
            segment-weights: "0.5"
            target-arrow-shape: vee
            taxi-direction: auto
            taxi-turn: 50%
            taxi-turn-min-distance: 10px
            width: 1.5px
        fieldRefData: {}
        id: 8950a5e3-27ea-457a-a72d-9d26cb8fb275
        meshmodel-metadata:
          capabilities: ""
          defaultData: ""
          genealogy: ""
          isAnnotation: false
          isCustomResource: false
          isModelAnnotation: "FALSE"
          isNamespaced: true
          logoURL: https://github.com/cncf/artwork/blob/master/projects/kubernetes/icon/white/kubernetes-icon-white.svg
          model: kubernetes
          modelDisplayName: Kubernetes
          primaryColor: '#326CE5'
          secondaryColor: '#7aa1f0'
          shape: round-rectangle
          shapePolygonPoints: ""
          status: enabled
          styleOverrides:
            height: 22px
            width: 22px
            x: "8.5"
            "y": "7.5"
            z-index: 9
          styles: '{"height":"22px", "width":"22px", "x":"8.5", "y":"7.5","z-index":4}'
          subCategory: ""
          svgColor: ui/public/static/img/meshmodels/kubernetes/color/role-color.svg
          svgComplete: ""
          svgWhite: ui/public/static/img/meshmodels/kubernetes/white/role-white.svg
        position:
          posX: 60
          posY: 68
        whiteboardData:
          style: {}
    type: Role
    version: ""
  vc-workload-vcluster:
    annotations: {}
    apiVersion: v1
    dependsOn: []
    id: null
    isAnnotation: null
    labels:
      app: vcluster
      chart: vcluster-0.21.0-alpha.1
      heritage: Helm
      release: vcluster
    model: kubernetes
    name: vc-workload-vcluster
    namespace: default
    settings: {}
    traits:
      meshmap:
        edges: []
        fieldRefData: {}
        id: 7bbf89dd-daa5-4d08-8550-90399a28ff30
        meshmodel-metadata:
          capabilities: ""
          defaultData: ""
          genealogy: ""
          isAnnotation: false
          isCustomResource: false
          isModelAnnotation: "FALSE"
          isNamespaced: true
          logoURL: https://github.com/cncf/artwork/blob/master/projects/kubernetes/icon/white/kubernetes-icon-white.svg
          model: kubernetes
          modelDisplayName: Kubernetes
          primaryColor: '#326CE5'
          secondaryColor: '#7aa1f0'
          shape: bottom-round-rectangle
          shapePolygonPoints: ""
          status: enabled
          styleOverrides:
            z-index: 6
          styles: ""
          subCategory: ""
          svgColor: ui/public/static/img/meshmodels/kubernetes/color/serviceaccount-color.svg
          svgComplete: ""
          svgWhite: ui/public/static/img/meshmodels/kubernetes/white/serviceaccount-white.svg
        position:
          posX: 17.5
          posY: -76
        whiteboardData:
          style: {}
    type: ServiceAccount
    version: ""
  vcluster-headless:
    annotations: {}
    apiVersion: v1
    dependsOn: []
    id: null
    isAnnotation: null
    labels:
      app: vcluster
      chart: vcluster-0.21.0-alpha.1
      heritage: Helm
      release: vcluster
    model: kubernetes
    name: vcluster-headless
    namespace: default
    settings:
      spec:
        cluster IP: None
        ports:
        - name: https
          port: 443
          protocol: TCP
          target Port: 8443
        publish Not Ready Addresses: true
        selector:
          app: vcluster
          release: vcluster
    traits:
      meshmap:
        edges: []
        fieldRefData: {}
        id: 77f5aaab-81da-40df-91b9-5128e1246c3d
        meshmodel-metadata:
          capabilities: ""
          defaultData: ""
          genealogy: ""
          isAnnotation: false
          isCustomResource: false
          isModelAnnotation: "FALSE"
          isNamespaced: true
          logoURL: https://github.com/cncf/artwork/blob/master/projects/kubernetes/icon/white/kubernetes-icon-white.svg
          model: kubernetes
          modelDisplayName: Kubernetes
          primaryColor: '#326CE5'
          secondaryColor: '#7aa1f0'
          shape: round-triangle
          shapePolygonPoints: ""
          status: enabled
          styleOverrides:
            background-position-y: 4.5
            height: 20
            padding: 12
            width: 20
            x: 10px
            "y": 12px
            z-index: 11
          styles: '{"height":20,"width":20,"padding":12,"background-position-y":4.5,"x":"10px","y":"12px"}'
          subCategory: ""
          svgColor: ui/public/static/img/meshmodels/kubernetes/color/service-color.svg
          svgComplete: ""
          svgWhite: ui/public/static/img/meshmodels/kubernetes/white/service-white.svg
        position:
          posX: -126.12083251351021
          posY: -125.32308116473276
        whiteboardData:
          style: {}
    type: Service
    version: ""
  vcluster-nayso:
    annotations: {}
    apiVersion: apps/v1
    dependsOn: []
    id: null
    isAnnotation: null
    labels:
      app: vcluster
      chart: vcluster-0.21.0-alpha.1
      heritage: Helm
      release: vcluster
    model: kubernetes
    name: vcluster
    namespace: default
    settings:
      spec:
        pod Management Policy: Parallel
        replicas: 1
        selector:
          match Labels:
            app: vcluster
            release: vcluster
        service Name: vcluster-headless
        template:
          metadata:
            annotations:
              vCluster Config Hash: eeb67665e2bb4512cd1abe10543301f02162a0e8f1ed5fe61c4c0dff5b4ad626
            labels:
              app: vcluster
              release: vcluster
          spec:
            containers:
            - env:
              - name: VCLUSTER_NAME
                value: vcluster
              - name: POD_NAME
                value From:
                  field Ref:
                    field Path: metadata.name
              - name: POD_IP
                value From:
                  field Ref:
                    field Path: status.podIP
              - name: NODE_NAME
                value From:
                  field Ref:
                    field Path: spec.nodeName
              image: ghcr.io/loft-sh/vcluster-pro:0.21.0-alpha.1
              image Pull Policy: IfNotPresent
              liveness Probe:
                failure Threshold: 60
                http Get:
                  path: /healthz
                  port: 8443
                  scheme: HTTPS
                initial Delay Seconds: 60
                period Seconds: 2
              name: syncer
              readiness Probe:
                failure Threshold: 60
                http Get:
                  path: /readyz
                  port: 8443
                  scheme: HTTPS
                period Seconds: 2
              resources:
                limits:
                  ephemeral-storage: 8Gi
                  memory: 2Gi
                requests:
                  cpu: 200m
                  ephemeral-storage: 400Mi
                  memory: 256Mi
              security Context:
                allow Privilege Escalation: false
                run As Group: 0
                run As User: 0
              startup Probe:
                failure Threshold: 300
                http Get:
                  path: /readyz
                  port: 8443
                  scheme: HTTPS
                period Seconds: 6
              volume Mounts:
              - mount Path: /data
                name: data
              - mount Path: /binaries
                name: binaries
              - mount Path: /pki
                name: certs
              - mount Path: /.cache/helm
                name: helm-cache
              - mount Path: /var/vcluster
                name: vcluster-config
              - mount Path: /tmp
                name: tmp
              - mount Path: /manifests/coredns
                name: coredns
                read Only: true
            enable Service Links: true
            init Containers:
            - args:
              - -c
              - cp /vcluster /binaries/vcluster
              command:
              - /bin/sh
              image: ghcr.io/loft-sh/vcluster-pro:0.21.0-alpha.1
              name: vcluster-copy
              resources:
                limits:
                  cpu: 100m
                  memory: 256Mi
                requests:
                  cpu: 40m
                  memory: 64Mi
              security Context: {}
              volume Mounts:
              - mount Path: /binaries
                name: binaries
            - args:
              - cp
              - /usr/local/bin/kube-controller-manager
              - /binaries/kube-controller-manager
              command:
              - /binaries/vcluster
              image: registry.k8s.io/kube-controller-manager:v1.30.2
              name: kube-controller-manager
              resources:
                limits:
                  cpu: 100m
                  memory: 256Mi
                requests:
                  cpu: 40m
                  memory: 64Mi
              security Context: {}
              volume Mounts:
              - mount Path: /binaries
                name: binaries
            - args:
              - cp
              - /usr/local/bin/kube-apiserver
              - /binaries/kube-apiserver
              command:
              - /binaries/vcluster
              image: registry.k8s.io/kube-apiserver:v1.30.2
              name: kube-apiserver
              resources:
                limits:
                  cpu: 100m
                  memory: 256Mi
                requests:
                  cpu: 40m
                  memory: 64Mi
              security Context: {}
              volume Mounts:
              - mount Path: /binaries
                name: binaries
            service Account Name: vc-vcluster
            termination Grace Period Seconds: 10
            volumes:
            - empty Dir: {}
              name: helm-cache
            - empty Dir: {}
              name: binaries
            - empty Dir: {}
              name: tmp
            - empty Dir: {}
              name: certs
            - name: vcluster-config
              secret:
                secret Name: vc-config-vcluster
            - config Map:
                name: vc-coredns-vcluster
              name: coredns
        volume Claim Templates:
        - metadata:
            name: data
          spec:
            access Modes:
            - ReadWriteOnce
            resources:
              requests:
                storage: 5Gi
    traits:
      meshmap:
        edges: []
        fieldRefData: {}
        id: 7d701e94-f09c-4dda-b1ec-9ece93139553
        meshmodel-metadata:
          capabilities: |2-
             {
              "designer": {
                "edit": {
                  "shape": {
                    "convert-shape": false
                  }
                }
              }
            }
          defaultData: ""
          genealogy: parent
          isAnnotation: false
          isCustomResource: false
          isModelAnnotation: "FALSE"
          isNamespaced: true
          logoURL: https://github.com/cncf/artwork/blob/master/projects/kubernetes/icon/white/kubernetes-icon-white.svg
          model: kubernetes
          modelDisplayName: Kubernetes
          primaryColor: '#326CE5'
          secondaryColor: '#7aa1f0'
          shape: cylinder
          shapePolygonPoints: ""
          status: enabled
          styleOverrides:
            background-opacity: "0.2"
            height: "15"
            width: "15"
            x: "12"
            "y": "20"
            z-index: 10
          styles: '{"height":"15","width":"15","x":"12","y":"20","background-opacity":"0.2"}'
          subCategory: ""
          svgColor: ui/public/static/img/meshmodels/kubernetes/color/statefulset-color.svg
          svgComplete: ui/public/static/img/meshmodels/kubernetes/complete/statefulset-complete.svg
          svgWhite: ui/public/static/img/meshmodels/kubernetes/white/statefulset-white.svg
        position:
          posX: 90
          posY: -78.5
        whiteboardData:
          style: {}
    type: StatefulSet
    version: ""
  vcluster-qydmg:
    annotations: {}
    apiVersion: v1
    dependsOn: []
    id: null
    isAnnotation: null
    labels:
      app: vcluster
      chart: vcluster-0.21.0-alpha.1
      heritage: Helm
      release: vcluster
    model: kubernetes
    name: vcluster
    namespace: default
    settings:
      spec:
        ports:
        - name: https
          node Port: 0
          port: 443
          protocol: TCP
          target Port: 8443
        - name: kubelet
          node Port: 0
          port: 10250
          protocol: TCP
          target Port: 8443
        selector:
          app: vcluster
          release: vcluster
        type: ClusterIP
    traits:
      meshmap:
        edges: []
        fieldRefData: {}
        id: 7d2f6c78-81cf-4559-a0dd-99539cde7ff3
        meshmodel-metadata:
          capabilities: ""
          defaultData: ""
          genealogy: ""
          isAnnotation: false
          isCustomResource: false
          isModelAnnotation: "FALSE"
          isNamespaced: true
          logoURL: https://github.com/cncf/artwork/blob/master/projects/kubernetes/icon/white/kubernetes-icon-white.svg
          model: kubernetes
          modelDisplayName: Kubernetes
          primaryColor: '#326CE5'
          secondaryColor: '#7aa1f0'
          shape: round-triangle
          shapePolygonPoints: ""
          status: enabled
          styleOverrides:
            background-position-y: 4.5
            height: 20
            padding: 12
            width: 20
            x: 10px
            "y": 12px
            z-index: 7
          styles: '{"height":20,"width":20,"padding":12,"background-position-y":4.5,"x":"10px","y":"12px"}'
          subCategory: ""
          svgColor: ui/public/static/img/meshmodels/kubernetes/color/service-color.svg
          svgComplete: ""
          svgWhite: ui/public/static/img/meshmodels/kubernetes/white/service-white.svg
        position:
          posX: 2
          posY: 73
        whiteboardData:
          style: {}
    type: Service
    version: ""
