name: uptime-kuma
services:
    uptime-kuma-eheqt:
        annotations: {}
        apiVersion: v1
        dependsOn: []
        id: null
        isAnnotation: null
        labels:
            app.kubernetes.io/instance: uptime-kuma
            app.kubernetes.io/managed-by: Helm
            app.kubernetes.io/name: uptime-kuma
            app.kubernetes.io/version: 1.23.13
            helm.sh/chart: uptime-kuma-2.19.1
        model: kubernetes
        name: uptime-kuma
        namespace: default
        settings:
            spec:
                ports:
                    - name: http
                      port: 3001
                      protocol: TCP
                      target Port: 3001
                selector:
                    app.kubernetes.io/instance: uptime-kuma
                    app.kubernetes.io/name: uptime-kuma
                type: ClusterIP
        traits:
            meshmap:
                edges:
                    - data:
                        id: 83070050-8ede-4ed5-ac09-f5c097a0ff63
                        metadata:
                            port: 3001
                            protocol: TCP
                        source: eada536c-b8a5-4f64-871f-106cab69f0ba
                        subType: Network
                        target: d1531332-87a2-4af1-b5c5-f0a92c3af49e
                      style:
                        control-point-distances: null
                        control-point-weights: "0.5"
                        curve-style: bezier
                        haystack-radius: "0"
                        line-color: rgb(153,153,153)
                        line-style: dotted
                        opacity: "1"
                        segment-distances: 20px
                        segment-weights: "0.5"
                        target-arrow-shape: vee
                        taxi-direction: auto
                        taxi-turn: 50%
                        taxi-turn-min-distance: 10px
                        width: 1.5px
                id: eada536c-b8a5-4f64-871f-106cab69f0ba
                meshmodel-metadata:
                    capabilities: ""
                    defaultData: ""
                    genealogy: ""
                    isAnnotation: false
                    isCustomResource: false
                    isModelAnnotation: "FALSE"
                    isNamespaced: true
                    logoURL: https://github.com/cncf/artwork/blob/master/projects/kubernetes/icon/white/kubernetes-icon-white.svg
                    model: kubernetes
                    modelDisplayName: Kubernetes
                    primaryColor: '#326CE5'
                    secondaryColor: '#7aa1f0'
                    shape: round-triangle
                    shapePolygonPoints: ""
                    status: enabled
                    styleOverrides:
                        background-position-y: 4.5
                        height: 20
                        padding: 12
                        width: 20
                        x: 10px
                        "y": 12px
                        z-index: 3
                    styles: '{"height":20,"width":20,"padding":12,"background-position-y":4.5,"x":"10px","y":"12px"}'
                    subCategory: ""
                    svgColor: ui/public/static/img/meshmodels/kubernetes/color/service-color.svg
                    svgComplete: ""
                    svgWhite: ui/public/static/img/meshmodels/kubernetes/white/service-white.svg
                position:
                    posX: -49.5
                    posY: 51.5
                whiteboardData:
                    style: {}
        type: Service
        version: ""
    uptime-kuma-pvc:
        annotations: {}
        apiVersion: v1
        dependsOn: []
        id: null
        isAnnotation: null
        labels:
            app.kubernetes.io/instance: uptime-kuma
            app.kubernetes.io/managed-by: Helm
            app.kubernetes.io/name: uptime-kuma
            app.kubernetes.io/version: 1.23.13
            helm.sh/chart: uptime-kuma-2.19.1
        model: kubernetes
        name: uptime-kuma-pvc
        namespace: default
        settings:
            spec:
                access Modes:
                    - ReadWriteOnce
                resources:
                    requests:
                        storage: 4Gi
        traits:
            meshmap:
                edges: []
                id: 1edc73c7-5d78-4e41-a01e-5acc287bbb0f
                meshmodel-metadata:
                    capabilities: ""
                    defaultData: ""
                    genealogy: ""
                    isAnnotation: false
                    isCustomResource: false
                    isModelAnnotation: "FALSE"
                    isNamespaced: true
                    logoURL: https://github.com/cncf/artwork/blob/master/projects/kubernetes/icon/white/kubernetes-icon-white.svg
                    model: kubernetes
                    modelDisplayName: Kubernetes
                    primaryColor: '#326CE5'
                    secondaryColor: '#7aa1f0'
                    shape: round-rectangle
                    shapePolygonPoints: ""
                    status: enabled
                    styleOverrides:
                        z-index: 3
                    styles: ""
                    subCategory: ""
                    svgColor: ui/public/static/img/meshmodels/kubernetes/color/persistentvolumeclaim-color.svg
                    svgComplete: ""
                    svgWhite: ui/public/static/img/meshmodels/kubernetes/white/persistentvolumeclaim-white.svg
                position:
                    posX: 38.5
                    posY: -45.5
                whiteboardData:
                    style: {}
        type: PersistentVolumeClaim
        version: ""
    uptime-kuma-tdxzs:
        annotations: {}
        apiVersion: apps/v1
        dependsOn: []
        id: null
        isAnnotation: null
        labels:
            app.kubernetes.io/instance: uptime-kuma
            app.kubernetes.io/managed-by: Helm
            app.kubernetes.io/name: uptime-kuma
            app.kubernetes.io/version: 1.23.13
            helm.sh/chart: uptime-kuma-2.19.1
        model: kubernetes
        name: uptime-kuma
        namespace: default
        settings:
            spec:
                replicas: 1
                selector:
                    match Labels:
                        app.kubernetes.io/instance: uptime-kuma
                        app.kubernetes.io/name: uptime-kuma
                strategy:
                    type: Recreate
                template:
                    metadata:
                        labels:
                            app.kubernetes.io/instance: uptime-kuma
                            app.kubernetes.io/name: uptime-kuma
                    spec:
                        containers:
                            - env:
                                - name: UPTIME_KUMA_PORT
                                  value: "3001"
                              image: louislam/uptime-kuma:1.23.13-debian
                              image Pull Policy: IfNotPresent
                              liveness Probe:
                                exec:
                                    command:
                                        - extra/healthcheck
                                failure Threshold: 3
                                initial Delay Seconds: 180
                                period Seconds: 10
                                success Threshold: 1
                                timeout Seconds: 2
                              name: uptime-kuma
                              ports:
                                - container Port: 3001
                                  name: http
                                  protocol: TCP
                              readiness Probe:
                                failure Threshold: 3
                                http Get:
                                    path: /
                                    port: 3001
                                    scheme: HTTP
                                initial Delay Seconds: 10
                                period Seconds: 10
                                success Threshold: 1
                                timeout Seconds: 1
                              resources: {}
                              security Context: {}
                              volume Mounts:
                                - mount Path: /app/data
                                  name: storage
                        security Context: {}
                        service Account Name: default
                        volumes:
                            - name: storage
                              persistent Volume Claim:
                                claim Name: uptime-kuma-pvc
        traits:
            meshmap:
                edges:
                    - data:
                        id: 83070050-8ede-4ed5-ac09-f5c097a0ff63
                        metadata:
                            port: 3001
                            protocol: TCP
                        source: eada536c-b8a5-4f64-871f-106cab69f0ba
                        subType: Network
                        target: d1531332-87a2-4af1-b5c5-f0a92c3af49e
                      style:
                        control-point-distances: null
                        control-point-weights: "0.5"
                        curve-style: bezier
                        haystack-radius: "0"
                        line-color: rgb(153,153,153)
                        line-style: dotted
                        opacity: "1"
                        segment-distances: 20px
                        segment-weights: "0.5"
                        target-arrow-shape: vee
                        taxi-direction: auto
                        taxi-turn: 50%
                        taxi-turn-min-distance: 10px
                        width: 1.5px
                id: d1531332-87a2-4af1-b5c5-f0a92c3af49e
                meshmodel-metadata:
                    capabilities: |-
                        {
                          "fieldRefs": [
                            {
                              "fieldPath": "spec.template.spec.containers",
                              "jsonSchemaPath": "properties.spec.allOf[0].properties.template.allOf[0].properties.spec.allOf[0].properties.containers.items.allOf[0]",
                              "component": {
                                "kind": "Container",
                                "model": "meshery-core"
                              },
                              "renderChildren": true
                            }
                          ],
                          "designer": {
                            "edit": {
                              "shape": {
                                "convert-shape": false
                              }
                            }
                          }
                        }
                    defaultData: ""
                    genealogy: parent
                    isAnnotation: false
                    isCustomResource: false
                    isModelAnnotation: "FALSE"
                    isNamespaced: true
                    logoURL: Created by Meshery Authors
                    model: kubernetes
                    modelDisplayName: Kubernetes
                    primaryColor: '#326CE5'
                    secondaryColor: '#7aa1f0'
                    shape: round-rectangle
                    shapePolygonPoints: ""
                    status: enabled
                    styleOverrides: '{"border-width":2,"background-opacity":0.5}'
                    styles: '{"border-width":2,"background-opacity":0.5}'
                    subCategory: ""
                    svgColor: ui/public/static/img/meshmodels/kubernetes/color/deployment-color.svg
                    svgComplete: ui/public/static/img/meshmodels/kubernetes/complete/deployment-complete.svg
                    svgWhite: ui/public/static/img/meshmodels/kubernetes/white/deployment-white.svg
                position:
                    posX: -43.5
                    posY: -30.5
                whiteboardData:
                    style: {}
        type: Deployment
        version: ""
version: 0.0.3
