{
  "id": "4213db96-87ad-4829-9553-d3c6fdaa9206",
  "name": "Azure Service Operator",
  "schemaVersion": "designs.meshery.io/v1beta1",
  "version": "0.0.98",
  "metadata": {
    "resolvedAliases": {
      "13bc130b-bcfa-4856-b667-858feb365e74": {
        "alias_component_id": "13bc130b-bcfa-4856-b667-858feb365e74",
        "immediate_parent_id": "99c24ba2-ce1f-4db4-8348-4695534463da",
        "immediate_ref_field_path": [
          "configuration",
          "spec",
          "template",
          "spec",
          "containers",
          "0"
        ],
        "relationship_id": "846ffc46-d05d-46f6-b87a-c71794c044f7",
        "resolved_parent_id": "99c24ba2-ce1f-4db4-8348-4695534463da",
        "resolved_ref_field_path": [
          "configuration",
          "spec",
          "template",
          "spec",
          "containers",
          "0"
        ]
      },
      "2714a376-ebaa-463e-81a0-c1730f5a4f3c": {
        "alias_component_id": "2714a376-ebaa-463e-81a0-c1730f5a4f3c",
        "immediate_parent_id": "62a77c06-e758-452b-bf5f-b9f1414a4b3b",
        "immediate_ref_field_path": [
          "configuration",
          "spec",
          "template",
          "spec",
          "containers",
          "0"
        ],
        "relationship_id": "50bb01b2-a892-4990-82f4-775b8ef8beab",
        "resolved_parent_id": "62a77c06-e758-452b-bf5f-b9f1414a4b3b",
        "resolved_ref_field_path": [
          "configuration",
          "spec",
          "template",
          "spec",
          "containers",
          "0"
        ]
      },
      "3720888b-7413-4b6a-aeba-3ca605a457d2": {
        "alias_component_id": "3720888b-7413-4b6a-aeba-3ca605a457d2",
        "immediate_parent_id": "ad59bd7c-5594-4269-ba27-07579c5370f9",
        "immediate_ref_field_path": [
          "configuration",
          "spec",
          "template",
          "spec",
          "containers",
          "0"
        ],
        "relationship_id": "ea8792af-e555-4849-85d7-99cf6fc87c2b",
        "resolved_parent_id": "ad59bd7c-5594-4269-ba27-07579c5370f9",
        "resolved_ref_field_path": [
          "configuration",
          "spec",
          "template",
          "spec",
          "containers",
          "0"
        ]
      },
      "d50218c9-c3bb-420a-9219-da63fa270a57": {
        "alias_component_id": "d50218c9-c3bb-420a-9219-da63fa270a57",
        "immediate_parent_id": "8d12e551-c0c4-4294-8bbb-2b6d35acb737",
        "immediate_ref_field_path": [
          "configuration",
          "spec",
          "template",
          "spec",
          "containers",
          "0"
        ],
        "relationship_id": "beb7d8f2-55d9-4e66-b16a-9ab92a7a98e6",
        "resolved_parent_id": "8d12e551-c0c4-4294-8bbb-2b6d35acb737",
        "resolved_ref_field_path": [
          "configuration",
          "spec",
          "template",
          "spec",
          "containers",
          "0"
        ]
      }
    }
  },
  "components": [
    {
      "id": "ee7efd93-627d-4bdb-b0a6-d824ea1da962",
      "schemaVersion": "components.meshery.io/v1beta1",
      "version": "v1.0.0",
      "displayName": "azureserviceoperator-serving-cert",
      "description": "",
      "format": "",
      "model": {
        "id": "ae623995-2078-f1d0-3470-2444c73c4a4d",
        "schemaVersion": "models.meshery.io/v1beta1",
        "version": "v1.0.0",
        "name": "cert-manager",
        "displayName": "cert-manager",
        "status": "enabled",
        "registrant": {
          "id": "f9a29d70-c287-426c-a90c-2a96590c8083",
          "name": "Github",
          "credential_id": "00000000-0000-0000-0000-000000000000",
          "type": "registry",
          "sub_type": "",
          "kind": "github",
          "status": "registered",
          "user_id": "00000000-0000-0000-0000-000000000000",
          "created_at": "2025-06-22T05:56:58.393994634Z",
          "updated_at": "2025-06-22T05:56:58.393994634Z",
          "deleted_at": "0001-01-01T00:00:00Z"
        },
        "connection_id": "f9a29d70-c287-426c-a90c-2a96590c8083",
        "category": {
          "id": "639aa59e-5b2d-0c11-92c5-74c5014d41df",
          "name": "Provisioning"
        },
        "subCategory": "Key Management Service",
        "metadata": {
          "isAnnotation": false,
          "primaryColor": "#005FEE",
          "secondaryColor": "#376384",
          "shape": "circle",
          "styleOverrides": "",
          "svgColor": "ui/public/static/img/meshmodels/cert-manager/color/cert-manager-color.svg",
          "svgComplete": "",
          "svgWhite": "ui/public/static/img/meshmodels/cert-manager/white/cert-manager-white.svg"
        },
        "model": {
          "version": "v1.18.1"
        },
        "components_count": 0,
        "relationships_count": 0,
        "components": null,
        "relationships": null
      },
      "styles": {
        "position": {
          "x": 0.8584457074881442,
          "y": 253.02671062433973
        },
        "primaryColor": "#005FEE",
        "secondaryColor": "#00D3A9",
        "shape": "circle",
        "svgColor": "ui/public/static/img/meshmodels/cert-manager/color/certificate-color.svg",
        "svgComplete": "",
        "svgWhite": "ui/public/static/img/meshmodels/cert-manager/white/certificate-white.svg"
      },
      "capabilities": [],
      "status": "enabled",
      "metadata": {
        "configurationUISchema": "",
        "genealogy": "",
        "instanceDetails": null,
        "isAnnotation": false,
        "isNamespaced": true,
        "published": false,
        "source_uri": "git://github.com/cert-manager/cert-manager/master/deploy/crds"
      },
      "configuration": {
        "metadata": {
          "name": "azureserviceoperator-serving-cert",
          "namespace": "azureserviceoperator-system"
        },
        "spec": {
          "dnsNames": [
            "azureserviceoperator-webhook-service.azureserviceoperator-system.svc",
            "azureserviceoperator-webhook-service.azureserviceoperator-system.svc.cluster.local"
          ],
          "issuerRef": {
            "kind": "Issuer",
            "name": "azureserviceoperator-selfsigned-issuer"
          },
          "secretName": "webhook-server-cert",
          "subject": {
            "organizations": [
              "azure"
            ]
          }
        }
      },
      "component": {
        "version": "cert-manager.io/v1",
        "kind": "Certificate",
        "schema": ""
      }
    },
    {
      "id": "793b33f4-0df4-49c5-9138-7ae3e1c5f0e1",
      "schemaVersion": "components.meshery.io/v1beta1",
      "version": "v1.0.0",
      "displayName": "cert-manager-cainjector",
      "description": "",
      "format": "",
      "model": {
        "id": "e633cca6-b6e1-65bf-a440-0d58915e75dd",
        "schemaVersion": "models.meshery.io/v1beta1",
        "version": "v1.0.0",
        "name": "kubernetes",
        "displayName": "Kubernetes",
        "status": "enabled",
        "registrant": {
          "id": "f9a29d70-c287-426c-a90c-2a96590c8083",
          "name": "Github",
          "credential_id": "00000000-0000-0000-0000-000000000000",
          "type": "registry",
          "sub_type": "",
          "kind": "github",
          "status": "registered",
          "user_id": "00000000-0000-0000-0000-000000000000",
          "created_at": "2025-06-22T05:56:58.393994634Z",
          "updated_at": "2025-06-22T05:56:58.393994634Z",
          "deleted_at": "0001-01-01T00:00:00Z"
        },
        "connection_id": "f9a29d70-c287-426c-a90c-2a96590c8083",
        "category": {
          "id": "9ca27d0d-66ce-42a9-8c85-6236563f2ddb",
          "name": "Orchestration \u0026 Management"
        },
        "subCategory": "Scheduling \u0026 Orchestration",
        "metadata": {
          "isAnnotation": false,
          "primaryColor": "#326CE5",
          "secondaryColor": "#7aa1f0",
          "shape": "circle",
          "styleOverrides": "",
          "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/kubernetes-color.svg",
          "svgComplete": "",
          "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/kubernetes-white.svg"
        },
        "model": {
          "version": "v1.32.0-alpha.3"
        },
        "components_count": 0,
        "relationships_count": 0,
        "components": null,
        "relationships": null
      },
      "styles": {
        "height": 22,
        "position": {
          "x": 533.25,
          "y": 652.9114685058594
        },
        "primaryColor": "#326CE5",
        "secondaryColor": "#7aa1f0",
        "shape": "round-rectangle",
        "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/clusterrole-color.svg",
        "svgComplete": "",
        "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/clusterrole-white.svg",
        "width": 22,
        "x": 8.5,
        "y": 7.5,
        "z-index": 14
      },
      "capabilities": [],
      "status": "enabled",
      "metadata": {
        "configurationUISchema": "",
        "genealogy": "",
        "instanceDetails": null,
        "isAnnotation": false,
        "isNamespaced": false,
        "published": false,
        "source_uri": "git://github.com/kubernetes/kubernetes/master/api/openapi-spec/v3"
      },
      "configuration": {
        "metadata": {
          "labels": {
            "app": "cainjector",
            "app.kubernetes.io/component": "cainjector",
            "app.kubernetes.io/instance": "cert-manager",
            "app.kubernetes.io/name": "cainjector",
            "app.kubernetes.io/version": "v1.14.1"
          },
          "name": "cert-manager-cainjector"
        },
        "rules": [
          {
            "apiGroups": [
              "cert-manager.io"
            ],
            "resources": [
              "certificates"
            ],
            "verbs": [
              "get",
              "list",
              "watch"
            ]
          },
          {
            "apiGroups": [
              ""
            ],
            "resources": [
              "secrets"
            ],
            "verbs": [
              "get",
              "list",
              "watch"
            ]
          },
          {
            "apiGroups": [
              ""
            ],
            "resources": [
              "events"
            ],
            "verbs": [
              "get",
              "create",
              "update",
              "patch"
            ]
          },
          {
            "apiGroups": [
              "admissionregistration.k8s.io"
            ],
            "resources": [
              "validatingwebhookconfigurations",
              "mutatingwebhookconfigurations"
            ],
            "verbs": [
              "get",
              "list",
              "watch",
              "update",
              "patch"
            ]
          },
          {
            "apiGroups": [
              "apiregistration.k8s.io"
            ],
            "resources": [
              "apiservices"
            ],
            "verbs": [
              "get",
              "list",
              "watch",
              "update",
              "patch"
            ]
          },
          {
            "apiGroups": [
              "apiextensions.k8s.io"
            ],
            "resources": [
              "customresourcedefinitions"
            ],
            "verbs": [
              "get",
              "list",
              "watch",
              "update",
              "patch"
            ]
          }
        ]
      },
      "component": {
        "version": "rbac.authorization.k8s.io/v1",
        "kind": "ClusterRole",
        "schema": ""
      }
    },
    {
      "id": "af8c6036-e749-4e27-9113-f2446dbed047",
      "schemaVersion": "components.meshery.io/v1beta1",
      "version": "v1.0.0",
      "displayName": "cert-manager-controller-approve:cert-manager-io",
      "description": "",
      "format": "",
      "model": {
        "id": "e633cca6-b6e1-65bf-a440-0d58915e75dd",
        "schemaVersion": "models.meshery.io/v1beta1",
        "version": "v1.0.0",
        "name": "kubernetes",
        "displayName": "Kubernetes",
        "status": "enabled",
        "registrant": {
          "id": "f9a29d70-c287-426c-a90c-2a96590c8083",
          "name": "Github",
          "credential_id": "00000000-0000-0000-0000-000000000000",
          "type": "registry",
          "sub_type": "",
          "kind": "github",
          "status": "registered",
          "user_id": "00000000-0000-0000-0000-000000000000",
          "created_at": "2025-06-22T05:56:58.393994634Z",
          "updated_at": "2025-06-22T05:56:58.393994634Z",
          "deleted_at": "0001-01-01T00:00:00Z"
        },
        "connection_id": "f9a29d70-c287-426c-a90c-2a96590c8083",
        "category": {
          "id": "9ca27d0d-66ce-42a9-8c85-6236563f2ddb",
          "name": "Orchestration \u0026 Management"
        },
        "subCategory": "Scheduling \u0026 Orchestration",
        "metadata": {
          "isAnnotation": false,
          "primaryColor": "#326CE5",
          "secondaryColor": "#7aa1f0",
          "shape": "circle",
          "styleOverrides": "",
          "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/kubernetes-color.svg",
          "svgComplete": "",
          "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/kubernetes-white.svg"
        },
        "model": {
          "version": "v1.32.0-alpha.3"
        },
        "components_count": 0,
        "relationships_count": 0,
        "components": null,
        "relationships": null
      },
      "styles": {
        "height": 22,
        "position": {
          "x": 1061.25,
          "y": 652.9114685058594
        },
        "primaryColor": "#326CE5",
        "secondaryColor": "#7aa1f0",
        "shape": "round-rectangle",
        "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/clusterrole-color.svg",
        "svgComplete": "",
        "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/clusterrole-white.svg",
        "width": 22,
        "x": 8.5,
        "y": 7.5,
        "z-index": 24
      },
      "capabilities": [],
      "status": "enabled",
      "metadata": {
        "configurationUISchema": "",
        "genealogy": "",
        "instanceDetails": null,
        "isAnnotation": false,
        "isNamespaced": false,
        "published": false,
        "source_uri": "git://github.com/kubernetes/kubernetes/master/api/openapi-spec/v3"
      },
      "configuration": {
        "metadata": {
          "labels": {
            "app": "cert-manager",
            "app.kubernetes.io/component": "cert-manager",
            "app.kubernetes.io/instance": "cert-manager",
            "app.kubernetes.io/name": "cert-manager",
            "app.kubernetes.io/version": "v1.14.1"
          },
          "name": "cert-manager-controller-approve:cert-manager-io"
        },
        "rules": [
          {
            "apiGroups": [
              "cert-manager.io"
            ],
            "resourceNames": [
              "issuers.cert-manager.io/*",
              "clusterissuers.cert-manager.io/*"
            ],
            "resources": [
              "signers"
            ],
            "verbs": [
              "approve"
            ]
          }
        ]
      },
      "component": {
        "version": "rbac.authorization.k8s.io/v1",
        "kind": "ClusterRole",
        "schema": ""
      }
    },
    {
      "id": "9f53affc-e535-4e98-ae74-3049a759f348",
      "schemaVersion": "components.meshery.io/v1beta1",
      "version": "v1.0.0",
      "displayName": "cert-manager-controller-certificatesigningrequests",
      "description": "",
      "format": "",
      "model": {
        "id": "e633cca6-b6e1-65bf-a440-0d58915e75dd",
        "schemaVersion": "models.meshery.io/v1beta1",
        "version": "v1.0.0",
        "name": "kubernetes",
        "displayName": "Kubernetes",
        "status": "enabled",
        "registrant": {
          "id": "f9a29d70-c287-426c-a90c-2a96590c8083",
          "name": "Github",
          "credential_id": "00000000-0000-0000-0000-000000000000",
          "type": "registry",
          "sub_type": "",
          "kind": "github",
          "status": "registered",
          "user_id": "00000000-0000-0000-0000-000000000000",
          "created_at": "2025-06-22T05:56:58.393994634Z",
          "updated_at": "2025-06-22T05:56:58.393994634Z",
          "deleted_at": "0001-01-01T00:00:00Z"
        },
        "connection_id": "f9a29d70-c287-426c-a90c-2a96590c8083",
        "category": {
          "id": "9ca27d0d-66ce-42a9-8c85-6236563f2ddb",
          "name": "Orchestration \u0026 Management"
        },
        "subCategory": "Scheduling \u0026 Orchestration",
        "metadata": {
          "isAnnotation": false,
          "primaryColor": "#326CE5",
          "secondaryColor": "#7aa1f0",
          "shape": "circle",
          "styleOverrides": "",
          "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/kubernetes-color.svg",
          "svgComplete": "",
          "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/kubernetes-white.svg"
        },
        "model": {
          "version": "v1.32.0-alpha.3"
        },
        "components_count": 0,
        "relationships_count": 0,
        "components": null,
        "relationships": null
      },
      "styles": {
        "height": 22,
        "position": {
          "x": 441.25,
          "y": 744.9114685058594
        },
        "primaryColor": "#326CE5",
        "secondaryColor": "#7aa1f0",
        "shape": "round-rectangle",
        "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/clusterrole-color.svg",
        "svgComplete": "",
        "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/clusterrole-white.svg",
        "width": 22,
        "x": 8.5,
        "y": 7.5,
        "z-index": 25
      },
      "capabilities": [],
      "status": "enabled",
      "metadata": {
        "configurationUISchema": "",
        "genealogy": "",
        "instanceDetails": null,
        "isAnnotation": false,
        "isNamespaced": false,
        "published": false,
        "source_uri": "git://github.com/kubernetes/kubernetes/master/api/openapi-spec/v3"
      },
      "configuration": {
        "metadata": {
          "labels": {
            "app": "cert-manager",
            "app.kubernetes.io/component": "cert-manager",
            "app.kubernetes.io/instance": "cert-manager",
            "app.kubernetes.io/name": "cert-manager",
            "app.kubernetes.io/version": "v1.14.1"
          },
          "name": "cert-manager-controller-certificatesigningrequests"
        },
        "rules": [
          {
            "apiGroups": [
              "certificates.k8s.io"
            ],
            "resources": [
              "certificatesigningrequests"
            ],
            "verbs": [
              "get",
              "list",
              "watch",
              "update"
            ]
          },
          {
            "apiGroups": [
              "certificates.k8s.io"
            ],
            "resources": [
              "certificatesigningrequests/status"
            ],
            "verbs": [
              "update",
              "patch"
            ]
          },
          {
            "apiGroups": [
              "certificates.k8s.io"
            ],
            "resourceNames": [
              "issuers.cert-manager.io/*",
              "clusterissuers.cert-manager.io/*"
            ],
            "resources": [
              "signers"
            ],
            "verbs": [
              "sign"
            ]
          },
          {
            "apiGroups": [
              "authorization.k8s.io"
            ],
            "resources": [
              "subjectaccessreviews"
            ],
            "verbs": [
              "create"
            ]
          }
        ]
      },
      "component": {
        "version": "rbac.authorization.k8s.io/v1",
        "kind": "ClusterRole",
        "schema": ""
      }
    },
    {
      "id": "8e946f2c-7b06-4c26-81cd-27a8eb2eb71f",
      "schemaVersion": "components.meshery.io/v1beta1",
      "version": "v1.0.0",
      "displayName": "cert-manager-controller-certificates",
      "description": "",
      "format": "",
      "model": {
        "id": "e633cca6-b6e1-65bf-a440-0d58915e75dd",
        "schemaVersion": "models.meshery.io/v1beta1",
        "version": "v1.0.0",
        "name": "kubernetes",
        "displayName": "Kubernetes",
        "status": "enabled",
        "registrant": {
          "id": "f9a29d70-c287-426c-a90c-2a96590c8083",
          "name": "Github",
          "credential_id": "00000000-0000-0000-0000-000000000000",
          "type": "registry",
          "sub_type": "",
          "kind": "github",
          "status": "registered",
          "user_id": "00000000-0000-0000-0000-000000000000",
          "created_at": "2025-06-22T05:56:58.393994634Z",
          "updated_at": "2025-06-22T05:56:58.393994634Z",
          "deleted_at": "0001-01-01T00:00:00Z"
        },
        "connection_id": "f9a29d70-c287-426c-a90c-2a96590c8083",
        "category": {
          "id": "9ca27d0d-66ce-42a9-8c85-6236563f2ddb",
          "name": "Orchestration \u0026 Management"
        },
        "subCategory": "Scheduling \u0026 Orchestration",
        "metadata": {
          "isAnnotation": false,
          "primaryColor": "#326CE5",
          "secondaryColor": "#7aa1f0",
          "shape": "circle",
          "styleOverrides": "",
          "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/kubernetes-color.svg",
          "svgComplete": "",
          "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/kubernetes-white.svg"
        },
        "model": {
          "version": "v1.32.0-alpha.3"
        },
        "components_count": 0,
        "relationships_count": 0,
        "components": null,
        "relationships": null
      },
      "styles": {
        "height": 22,
        "position": {
          "x": 797.25,
          "y": 652.9114685058594
        },
        "primaryColor": "#326CE5",
        "secondaryColor": "#7aa1f0",
        "shape": "round-rectangle",
        "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/clusterrole-color.svg",
        "svgComplete": "",
        "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/clusterrole-white.svg",
        "width": 22,
        "x": 8.5,
        "y": 7.5,
        "z-index": 17
      },
      "capabilities": [],
      "status": "enabled",
      "metadata": {
        "configurationUISchema": "",
        "genealogy": "",
        "instanceDetails": null,
        "isAnnotation": false,
        "isNamespaced": false,
        "published": false,
        "source_uri": "git://github.com/kubernetes/kubernetes/master/api/openapi-spec/v3"
      },
      "configuration": {
        "metadata": {
          "labels": {
            "app": "cert-manager",
            "app.kubernetes.io/component": "controller",
            "app.kubernetes.io/instance": "cert-manager",
            "app.kubernetes.io/name": "cert-manager",
            "app.kubernetes.io/version": "v1.14.1"
          },
          "name": "cert-manager-controller-certificates"
        },
        "rules": [
          {
            "apiGroups": [
              "cert-manager.io"
            ],
            "resources": [
              "certificates",
              "certificates/status",
              "certificaterequests",
              "certificaterequests/status"
            ],
            "verbs": [
              "update",
              "patch"
            ]
          },
          {
            "apiGroups": [
              "cert-manager.io"
            ],
            "resources": [
              "certificates",
              "certificaterequests",
              "clusterissuers",
              "issuers"
            ],
            "verbs": [
              "get",
              "list",
              "watch"
            ]
          },
          {
            "apiGroups": [
              "cert-manager.io"
            ],
            "resources": [
              "certificates/finalizers",
              "certificaterequests/finalizers"
            ],
            "verbs": [
              "update"
            ]
          },
          {
            "apiGroups": [
              "acme.cert-manager.io"
            ],
            "resources": [
              "orders"
            ],
            "verbs": [
              "create",
              "delete",
              "get",
              "list",
              "watch"
            ]
          },
          {
            "apiGroups": [
              ""
            ],
            "resources": [
              "secrets"
            ],
            "verbs": [
              "get",
              "list",
              "watch",
              "create",
              "update",
              "delete",
              "patch"
            ]
          },
          {
            "apiGroups": [
              ""
            ],
            "resources": [
              "events"
            ],
            "verbs": [
              "create",
              "patch"
            ]
          }
        ]
      },
      "component": {
        "version": "rbac.authorization.k8s.io/v1",
        "kind": "ClusterRole",
        "schema": ""
      }
    },
    {
      "id": "34742334-fb5a-4e8d-93e2-49671d3f12e6",
      "schemaVersion": "components.meshery.io/v1beta1",
      "version": "v1.0.0",
      "displayName": "cert-manager-controller-clusterissuers",
      "description": "",
      "format": "",
      "model": {
        "id": "e633cca6-b6e1-65bf-a440-0d58915e75dd",
        "schemaVersion": "models.meshery.io/v1beta1",
        "version": "v1.0.0",
        "name": "kubernetes",
        "displayName": "Kubernetes",
        "status": "enabled",
        "registrant": {
          "id": "f9a29d70-c287-426c-a90c-2a96590c8083",
          "name": "Github",
          "credential_id": "00000000-0000-0000-0000-000000000000",
          "type": "registry",
          "sub_type": "",
          "kind": "github",
          "status": "registered",
          "user_id": "00000000-0000-0000-0000-000000000000",
          "created_at": "2025-06-22T05:56:58.393994634Z",
          "updated_at": "2025-06-22T05:56:58.393994634Z",
          "deleted_at": "0001-01-01T00:00:00Z"
        },
        "connection_id": "f9a29d70-c287-426c-a90c-2a96590c8083",
        "category": {
          "id": "9ca27d0d-66ce-42a9-8c85-6236563f2ddb",
          "name": "Orchestration \u0026 Management"
        },
        "subCategory": "Scheduling \u0026 Orchestration",
        "metadata": {
          "isAnnotation": false,
          "primaryColor": "#326CE5",
          "secondaryColor": "#7aa1f0",
          "shape": "circle",
          "styleOverrides": "",
          "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/kubernetes-color.svg",
          "svgComplete": "",
          "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/kubernetes-white.svg"
        },
        "model": {
          "version": "v1.32.0-alpha.3"
        },
        "components_count": 0,
        "relationships_count": 0,
        "components": null,
        "relationships": null
      },
      "styles": {
        "height": 22,
        "position": {
          "x": 709.25,
          "y": 652.9114685058594
        },
        "primaryColor": "#326CE5",
        "secondaryColor": "#7aa1f0",
        "shape": "round-rectangle",
        "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/clusterrole-color.svg",
        "svgComplete": "",
        "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/clusterrole-white.svg",
        "width": 22,
        "x": 8.5,
        "y": 7.5,
        "z-index": 16
      },
      "capabilities": [],
      "status": "enabled",
      "metadata": {
        "configurationUISchema": "",
        "genealogy": "",
        "instanceDetails": null,
        "isAnnotation": false,
        "isNamespaced": false,
        "published": false,
        "source_uri": "git://github.com/kubernetes/kubernetes/master/api/openapi-spec/v3"
      },
      "configuration": {
        "metadata": {
          "labels": {
            "app": "cert-manager",
            "app.kubernetes.io/component": "controller",
            "app.kubernetes.io/instance": "cert-manager",
            "app.kubernetes.io/name": "cert-manager",
            "app.kubernetes.io/version": "v1.14.1"
          },
          "name": "cert-manager-controller-clusterissuers"
        },
        "rules": [
          {
            "apiGroups": [
              "cert-manager.io"
            ],
            "resources": [
              "clusterissuers",
              "clusterissuers/status"
            ],
            "verbs": [
              "update",
              "patch"
            ]
          },
          {
            "apiGroups": [
              "cert-manager.io"
            ],
            "resources": [
              "clusterissuers"
            ],
            "verbs": [
              "get",
              "list",
              "watch"
            ]
          },
          {
            "apiGroups": [
              ""
            ],
            "resources": [
              "secrets"
            ],
            "verbs": [
              "get",
              "list",
              "watch",
              "create",
              "update",
              "delete"
            ]
          },
          {
            "apiGroups": [
              ""
            ],
            "resources": [
              "events"
            ],
            "verbs": [
              "create",
              "patch"
            ]
          }
        ]
      },
      "component": {
        "version": "rbac.authorization.k8s.io/v1",
        "kind": "ClusterRole",
        "schema": ""
      }
    },
    {
      "id": "b13a19c2-a7e4-4e27-a2bd-4f0dd5d47ee8",
      "schemaVersion": "components.meshery.io/v1beta1",
      "version": "v1.0.0",
      "displayName": "cert-manager-controller-ingress-shim",
      "description": "",
      "format": "",
      "model": {
        "id": "e633cca6-b6e1-65bf-a440-0d58915e75dd",
        "schemaVersion": "models.meshery.io/v1beta1",
        "version": "v1.0.0",
        "name": "kubernetes",
        "displayName": "Kubernetes",
        "status": "enabled",
        "registrant": {
          "id": "f9a29d70-c287-426c-a90c-2a96590c8083",
          "name": "Github",
          "credential_id": "00000000-0000-0000-0000-000000000000",
          "type": "registry",
          "sub_type": "",
          "kind": "github",
          "status": "registered",
          "user_id": "00000000-0000-0000-0000-000000000000",
          "created_at": "2025-06-22T05:56:58.393994634Z",
          "updated_at": "2025-06-22T05:56:58.393994634Z",
          "deleted_at": "0001-01-01T00:00:00Z"
        },
        "connection_id": "f9a29d70-c287-426c-a90c-2a96590c8083",
        "category": {
          "id": "9ca27d0d-66ce-42a9-8c85-6236563f2ddb",
          "name": "Orchestration \u0026 Management"
        },
        "subCategory": "Scheduling \u0026 Orchestration",
        "metadata": {
          "isAnnotation": false,
          "primaryColor": "#326CE5",
          "secondaryColor": "#7aa1f0",
          "shape": "circle",
          "styleOverrides": "",
          "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/kubernetes-color.svg",
          "svgComplete": "",
          "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/kubernetes-white.svg"
        },
        "model": {
          "version": "v1.32.0-alpha.3"
        },
        "components_count": 0,
        "relationships_count": 0,
        "components": null,
        "relationships": null
      },
      "styles": {
        "height": 22,
        "position": {
          "x": 993.25,
          "y": 116.91146850585938
        },
        "primaryColor": "#326CE5",
        "secondaryColor": "#7aa1f0",
        "shape": "round-rectangle",
        "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/clusterrole-color.svg",
        "svgComplete": "",
        "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/clusterrole-white.svg",
        "width": 22,
        "x": 8.5,
        "y": 7.5,
        "z-index": 20
      },
      "capabilities": [],
      "status": "enabled",
      "metadata": {
        "configurationUISchema": "",
        "genealogy": "",
        "instanceDetails": null,
        "isAnnotation": false,
        "isNamespaced": false,
        "published": false,
        "source_uri": "git://github.com/kubernetes/kubernetes/master/api/openapi-spec/v3"
      },
      "configuration": {
        "metadata": {
          "labels": {
            "app": "cert-manager",
            "app.kubernetes.io/component": "controller",
            "app.kubernetes.io/instance": "cert-manager",
            "app.kubernetes.io/name": "cert-manager",
            "app.kubernetes.io/version": "v1.14.1"
          },
          "name": "cert-manager-controller-ingress-shim"
        },
        "rules": [
          {
            "apiGroups": [
              "cert-manager.io"
            ],
            "resources": [
              "certificates",
              "certificaterequests"
            ],
            "verbs": [
              "create",
              "update",
              "delete"
            ]
          },
          {
            "apiGroups": [
              "cert-manager.io"
            ],
            "resources": [
              "certificates",
              "certificaterequests",
              "issuers",
              "clusterissuers"
            ],
            "verbs": [
              "get",
              "list",
              "watch"
            ]
          },
          {
            "apiGroups": [
              "networking.k8s.io"
            ],
            "resources": [
              "ingresses"
            ],
            "verbs": [
              "get",
              "list",
              "watch"
            ]
          },
          {
            "apiGroups": [
              "networking.k8s.io"
            ],
            "resources": [
              "ingresses/finalizers"
            ],
            "verbs": [
              "update"
            ]
          },
          {
            "apiGroups": [
              "gateway.networking.k8s.io"
            ],
            "resources": [
              "gateways",
              "httproutes"
            ],
            "verbs": [
              "get",
              "list",
              "watch"
            ]
          },
          {
            "apiGroups": [
              "gateway.networking.k8s.io"
            ],
            "resources": [
              "gateways/finalizers",
              "httproutes/finalizers"
            ],
            "verbs": [
              "update"
            ]
          },
          {
            "apiGroups": [
              ""
            ],
            "resources": [
              "events"
            ],
            "verbs": [
              "create",
              "patch"
            ]
          }
        ]
      },
      "component": {
        "version": "rbac.authorization.k8s.io/v1",
        "kind": "ClusterRole",
        "schema": ""
      }
    },
    {
      "id": "11e33510-06ef-4efe-b5fc-2d11cd1c437b",
      "schemaVersion": "components.meshery.io/v1beta1",
      "version": "v1.0.0",
      "displayName": "cert-manager-controller-issuers",
      "description": "",
      "format": "",
      "model": {
        "id": "e633cca6-b6e1-65bf-a440-0d58915e75dd",
        "schemaVersion": "models.meshery.io/v1beta1",
        "version": "v1.0.0",
        "name": "kubernetes",
        "displayName": "Kubernetes",
        "status": "enabled",
        "registrant": {
          "id": "f9a29d70-c287-426c-a90c-2a96590c8083",
          "name": "Github",
          "credential_id": "00000000-0000-0000-0000-000000000000",
          "type": "registry",
          "sub_type": "",
          "kind": "github",
          "status": "registered",
          "user_id": "00000000-0000-0000-0000-000000000000",
          "created_at": "2025-06-22T05:56:58.393994634Z",
          "updated_at": "2025-06-22T05:56:58.393994634Z",
          "deleted_at": "0001-01-01T00:00:00Z"
        },
        "connection_id": "f9a29d70-c287-426c-a90c-2a96590c8083",
        "category": {
          "id": "9ca27d0d-66ce-42a9-8c85-6236563f2ddb",
          "name": "Orchestration \u0026 Management"
        },
        "subCategory": "Scheduling \u0026 Orchestration",
        "metadata": {
          "isAnnotation": false,
          "primaryColor": "#326CE5",
          "secondaryColor": "#7aa1f0",
          "shape": "circle",
          "styleOverrides": "",
          "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/kubernetes-color.svg",
          "svgComplete": "",
          "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/kubernetes-white.svg"
        },
        "model": {
          "version": "v1.32.0-alpha.3"
        },
        "components_count": 0,
        "relationships_count": 0,
        "components": null,
        "relationships": null
      },
      "styles": {
        "height": 22,
        "position": {
          "x": 621.25,
          "y": 652.9114685058594
        },
        "primaryColor": "#326CE5",
        "secondaryColor": "#7aa1f0",
        "shape": "round-rectangle",
        "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/clusterrole-color.svg",
        "svgComplete": "",
        "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/clusterrole-white.svg",
        "width": 22,
        "x": 8.5,
        "y": 7.5,
        "z-index": 15
      },
      "capabilities": [],
      "status": "enabled",
      "metadata": {
        "configurationUISchema": "",
        "genealogy": "",
        "instanceDetails": null,
        "isAnnotation": false,
        "isNamespaced": false,
        "published": false,
        "source_uri": "git://github.com/kubernetes/kubernetes/master/api/openapi-spec/v3"
      },
      "configuration": {
        "metadata": {
          "labels": {
            "app": "cert-manager",
            "app.kubernetes.io/component": "controller",
            "app.kubernetes.io/instance": "cert-manager",
            "app.kubernetes.io/name": "cert-manager",
            "app.kubernetes.io/version": "v1.14.1"
          },
          "name": "cert-manager-controller-issuers"
        },
        "rules": [
          {
            "apiGroups": [
              "cert-manager.io"
            ],
            "resources": [
              "issuers",
              "issuers/status"
            ],
            "verbs": [
              "update",
              "patch"
            ]
          },
          {
            "apiGroups": [
              "cert-manager.io"
            ],
            "resources": [
              "issuers"
            ],
            "verbs": [
              "get",
              "list",
              "watch"
            ]
          },
          {
            "apiGroups": [
              ""
            ],
            "resources": [
              "secrets"
            ],
            "verbs": [
              "get",
              "list",
              "watch",
              "create",
              "update",
              "delete"
            ]
          },
          {
            "apiGroups": [
              ""
            ],
            "resources": [
              "events"
            ],
            "verbs": [
              "create",
              "patch"
            ]
          }
        ]
      },
      "component": {
        "version": "rbac.authorization.k8s.io/v1",
        "kind": "ClusterRole",
        "schema": ""
      }
    },
    {
      "id": "b01d9d33-1032-4a59-bd34-34b421428d41",
      "schemaVersion": "components.meshery.io/v1beta1",
      "version": "v1.0.0",
      "displayName": "cert-manager-controller-orders",
      "description": "",
      "format": "",
      "model": {
        "id": "e633cca6-b6e1-65bf-a440-0d58915e75dd",
        "schemaVersion": "models.meshery.io/v1beta1",
        "version": "v1.0.0",
        "name": "kubernetes",
        "displayName": "Kubernetes",
        "status": "enabled",
        "registrant": {
          "id": "f9a29d70-c287-426c-a90c-2a96590c8083",
          "name": "Github",
          "credential_id": "00000000-0000-0000-0000-000000000000",
          "type": "registry",
          "sub_type": "",
          "kind": "github",
          "status": "registered",
          "user_id": "00000000-0000-0000-0000-000000000000",
          "created_at": "2025-06-22T05:56:58.393994634Z",
          "updated_at": "2025-06-22T05:56:58.393994634Z",
          "deleted_at": "0001-01-01T00:00:00Z"
        },
        "connection_id": "f9a29d70-c287-426c-a90c-2a96590c8083",
        "category": {
          "id": "9ca27d0d-66ce-42a9-8c85-6236563f2ddb",
          "name": "Orchestration \u0026 Management"
        },
        "subCategory": "Scheduling \u0026 Orchestration",
        "metadata": {
          "isAnnotation": false,
          "primaryColor": "#326CE5",
          "secondaryColor": "#7aa1f0",
          "shape": "circle",
          "styleOverrides": "",
          "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/kubernetes-color.svg",
          "svgComplete": "",
          "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/kubernetes-white.svg"
        },
        "model": {
          "version": "v1.32.0-alpha.3"
        },
        "components_count": 0,
        "relationships_count": 0,
        "components": null,
        "relationships": null
      },
      "styles": {
        "height": 22,
        "position": {
          "x": 885.25,
          "y": 652.9114685058594
        },
        "primaryColor": "#326CE5",
        "secondaryColor": "#7aa1f0",
        "shape": "round-rectangle",
        "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/clusterrole-color.svg",
        "svgComplete": "",
        "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/clusterrole-white.svg",
        "width": 22,
        "x": 8.5,
        "y": 7.5,
        "z-index": 18
      },
      "capabilities": [],
      "status": "enabled",
      "metadata": {
        "configurationUISchema": "",
        "genealogy": "",
        "instanceDetails": null,
        "isAnnotation": false,
        "isNamespaced": false,
        "published": false,
        "source_uri": "git://github.com/kubernetes/kubernetes/master/api/openapi-spec/v3"
      },
      "configuration": {
        "metadata": {
          "labels": {
            "app": "cert-manager",
            "app.kubernetes.io/component": "controller",
            "app.kubernetes.io/instance": "cert-manager",
            "app.kubernetes.io/name": "cert-manager",
            "app.kubernetes.io/version": "v1.14.1"
          },
          "name": "cert-manager-controller-orders"
        },
        "rules": [
          {
            "apiGroups": [
              "acme.cert-manager.io"
            ],
            "resources": [
              "orders",
              "orders/status"
            ],
            "verbs": [
              "update",
              "patch"
            ]
          },
          {
            "apiGroups": [
              "acme.cert-manager.io"
            ],
            "resources": [
              "orders",
              "challenges"
            ],
            "verbs": [
              "get",
              "list",
              "watch"
            ]
          },
          {
            "apiGroups": [
              "cert-manager.io"
            ],
            "resources": [
              "clusterissuers",
              "issuers"
            ],
            "verbs": [
              "get",
              "list",
              "watch"
            ]
          },
          {
            "apiGroups": [
              "acme.cert-manager.io"
            ],
            "resources": [
              "challenges"
            ],
            "verbs": [
              "create",
              "delete"
            ]
          },
          {
            "apiGroups": [
              "acme.cert-manager.io"
            ],
            "resources": [
              "orders/finalizers"
            ],
            "verbs": [
              "update"
            ]
          },
          {
            "apiGroups": [
              ""
            ],
            "resources": [
              "secrets"
            ],
            "verbs": [
              "get",
              "list",
              "watch"
            ]
          },
          {
            "apiGroups": [
              ""
            ],
            "resources": [
              "events"
            ],
            "verbs": [
              "create",
              "patch"
            ]
          }
        ]
      },
      "component": {
        "version": "rbac.authorization.k8s.io/v1",
        "kind": "ClusterRole",
        "schema": ""
      }
    },
    {
      "id": "661200b3-74a8-40a4-8714-101e2fafb205",
      "schemaVersion": "components.meshery.io/v1beta1",
      "version": "v1.0.0",
      "displayName": "cert-manager-view",
      "description": "",
      "format": "",
      "model": {
        "id": "e633cca6-b6e1-65bf-a440-0d58915e75dd",
        "schemaVersion": "models.meshery.io/v1beta1",
        "version": "v1.0.0",
        "name": "kubernetes",
        "displayName": "Kubernetes",
        "status": "enabled",
        "registrant": {
          "id": "f9a29d70-c287-426c-a90c-2a96590c8083",
          "name": "Github",
          "credential_id": "00000000-0000-0000-0000-000000000000",
          "type": "registry",
          "sub_type": "",
          "kind": "github",
          "status": "registered",
          "user_id": "00000000-0000-0000-0000-000000000000",
          "created_at": "2025-06-22T05:56:58.393994634Z",
          "updated_at": "2025-06-22T05:56:58.393994634Z",
          "deleted_at": "0001-01-01T00:00:00Z"
        },
        "connection_id": "f9a29d70-c287-426c-a90c-2a96590c8083",
        "category": {
          "id": "9ca27d0d-66ce-42a9-8c85-6236563f2ddb",
          "name": "Orchestration \u0026 Management"
        },
        "subCategory": "Scheduling \u0026 Orchestration",
        "metadata": {
          "isAnnotation": false,
          "primaryColor": "#326CE5",
          "secondaryColor": "#7aa1f0",
          "shape": "circle",
          "styleOverrides": "",
          "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/kubernetes-color.svg",
          "svgComplete": "",
          "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/kubernetes-white.svg"
        },
        "model": {
          "version": "v1.32.0-alpha.3"
        },
        "components_count": 0,
        "relationships_count": 0,
        "components": null,
        "relationships": null
      },
      "styles": {
        "height": 22,
        "position": {
          "x": 1003.25,
          "y": 372.9114685058594
        },
        "primaryColor": "#326CE5",
        "secondaryColor": "#7aa1f0",
        "shape": "round-rectangle",
        "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/clusterrole-color.svg",
        "svgComplete": "",
        "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/clusterrole-white.svg",
        "width": 22,
        "x": 8.5,
        "y": 7.5,
        "z-index": 22
      },
      "capabilities": [],
      "status": "enabled",
      "metadata": {
        "configurationUISchema": "",
        "genealogy": "",
        "instanceDetails": null,
        "isAnnotation": false,
        "isNamespaced": false,
        "published": false,
        "source_uri": "git://github.com/kubernetes/kubernetes/master/api/openapi-spec/v3"
      },
      "configuration": {
        "metadata": {
          "labels": {
            "app": "cert-manager",
            "app.kubernetes.io/component": "controller",
            "app.kubernetes.io/instance": "cert-manager",
            "app.kubernetes.io/name": "cert-manager",
            "app.kubernetes.io/version": "v1.14.1",
            "rbac.authorization.k8s.io/aggregate-to-admin": "true",
            "rbac.authorization.k8s.io/aggregate-to-cluster-reader": "true",
            "rbac.authorization.k8s.io/aggregate-to-edit": "true",
            "rbac.authorization.k8s.io/aggregate-to-view": "true"
          },
          "name": "cert-manager-view"
        },
        "rules": [
          {
            "apiGroups": [
              "cert-manager.io"
            ],
            "resources": [
              "certificates",
              "certificaterequests",
              "issuers"
            ],
            "verbs": [
              "get",
              "list",
              "watch"
            ]
          },
          {
            "apiGroups": [
              "acme.cert-manager.io"
            ],
            "resources": [
              "challenges",
              "orders"
            ],
            "verbs": [
              "get",
              "list",
              "watch"
            ]
          }
        ]
      },
      "component": {
        "version": "rbac.authorization.k8s.io/v1",
        "kind": "ClusterRole",
        "schema": ""
      }
    },
    {
      "id": "5df20120-e07d-4f60-a1aa-df3d336e76dd",
      "schemaVersion": "components.meshery.io/v1beta1",
      "version": "v1.0.0",
      "displayName": "cert-manager-edit",
      "description": "",
      "format": "",
      "model": {
        "id": "e633cca6-b6e1-65bf-a440-0d58915e75dd",
        "schemaVersion": "models.meshery.io/v1beta1",
        "version": "v1.0.0",
        "name": "kubernetes",
        "displayName": "Kubernetes",
        "status": "enabled",
        "registrant": {
          "id": "f9a29d70-c287-426c-a90c-2a96590c8083",
          "name": "Github",
          "credential_id": "00000000-0000-0000-0000-000000000000",
          "type": "registry",
          "sub_type": "",
          "kind": "github",
          "status": "registered",
          "user_id": "00000000-0000-0000-0000-000000000000",
          "created_at": "2025-06-22T05:56:58.393994634Z",
          "updated_at": "2025-06-22T05:56:58.393994634Z",
          "deleted_at": "0001-01-01T00:00:00Z"
        },
        "connection_id": "f9a29d70-c287-426c-a90c-2a96590c8083",
        "category": {
          "id": "9ca27d0d-66ce-42a9-8c85-6236563f2ddb",
          "name": "Orchestration \u0026 Management"
        },
        "subCategory": "Scheduling \u0026 Orchestration",
        "metadata": {
          "isAnnotation": false,
          "primaryColor": "#326CE5",
          "secondaryColor": "#7aa1f0",
          "shape": "circle",
          "styleOverrides": "",
          "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/kubernetes-color.svg",
          "svgComplete": "",
          "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/kubernetes-white.svg"
        },
        "model": {
          "version": "v1.32.0-alpha.3"
        },
        "components_count": 0,
        "relationships_count": 0,
        "components": null,
        "relationships": null
      },
      "styles": {
        "height": 22,
        "position": {
          "x": 1003.25,
          "y": 466.9114685058594
        },
        "primaryColor": "#326CE5",
        "secondaryColor": "#7aa1f0",
        "shape": "round-rectangle",
        "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/clusterrole-color.svg",
        "svgComplete": "",
        "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/clusterrole-white.svg",
        "width": 22,
        "x": 8.5,
        "y": 7.5,
        "z-index": 23
      },
      "capabilities": [],
      "status": "enabled",
      "metadata": {
        "configurationUISchema": "",
        "genealogy": "",
        "instanceDetails": null,
        "isAnnotation": false,
        "isNamespaced": false,
        "published": false,
        "source_uri": "git://github.com/kubernetes/kubernetes/master/api/openapi-spec/v3"
      },
      "configuration": {
        "metadata": {
          "labels": {
            "app": "cert-manager",
            "app.kubernetes.io/component": "controller",
            "app.kubernetes.io/instance": "cert-manager",
            "app.kubernetes.io/name": "cert-manager",
            "app.kubernetes.io/version": "v1.14.1",
            "rbac.authorization.k8s.io/aggregate-to-admin": "true",
            "rbac.authorization.k8s.io/aggregate-to-edit": "true"
          },
          "name": "cert-manager-edit"
        },
        "rules": [
          {
            "apiGroups": [
              "cert-manager.io"
            ],
            "resources": [
              "certificates",
              "certificaterequests",
              "issuers"
            ],
            "verbs": [
              "create",
              "delete",
              "deletecollection",
              "patch",
              "update"
            ]
          },
          {
            "apiGroups": [
              "cert-manager.io"
            ],
            "resources": [
              "certificates/status"
            ],
            "verbs": [
              "update"
            ]
          },
          {
            "apiGroups": [
              "acme.cert-manager.io"
            ],
            "resources": [
              "challenges",
              "orders"
            ],
            "verbs": [
              "create",
              "delete",
              "deletecollection",
              "patch",
              "update"
            ]
          }
        ]
      },
      "component": {
        "version": "rbac.authorization.k8s.io/v1",
        "kind": "ClusterRole",
        "schema": ""
      }
    },
    {
      "id": "e72f5764-8f8b-40f8-bd89-b777e35469de",
      "schemaVersion": "components.meshery.io/v1beta1",
      "version": "v1.0.0",
      "displayName": "cert-manager-cluster-view",
      "description": "",
      "format": "",
      "model": {
        "id": "e633cca6-b6e1-65bf-a440-0d58915e75dd",
        "schemaVersion": "models.meshery.io/v1beta1",
        "version": "v1.0.0",
        "name": "kubernetes",
        "displayName": "Kubernetes",
        "status": "enabled",
        "registrant": {
          "id": "f9a29d70-c287-426c-a90c-2a96590c8083",
          "name": "Github",
          "credential_id": "00000000-0000-0000-0000-000000000000",
          "type": "registry",
          "sub_type": "",
          "kind": "github",
          "status": "registered",
          "user_id": "00000000-0000-0000-0000-000000000000",
          "created_at": "2025-06-22T05:56:58.393994634Z",
          "updated_at": "2025-06-22T05:56:58.393994634Z",
          "deleted_at": "0001-01-01T00:00:00Z"
        },
        "connection_id": "f9a29d70-c287-426c-a90c-2a96590c8083",
        "category": {
          "id": "9ca27d0d-66ce-42a9-8c85-6236563f2ddb",
          "name": "Orchestration \u0026 Management"
        },
        "subCategory": "Scheduling \u0026 Orchestration",
        "metadata": {
          "isAnnotation": false,
          "primaryColor": "#326CE5",
          "secondaryColor": "#7aa1f0",
          "shape": "circle",
          "styleOverrides": "",
          "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/kubernetes-color.svg",
          "svgComplete": "",
          "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/kubernetes-white.svg"
        },
        "model": {
          "version": "v1.32.0-alpha.3"
        },
        "components_count": 0,
        "relationships_count": 0,
        "components": null,
        "relationships": null
      },
      "styles": {
        "height": 22,
        "position": {
          "x": 993.25,
          "y": 560.9114685058594
        },
        "primaryColor": "#326CE5",
        "secondaryColor": "#7aa1f0",
        "shape": "round-rectangle",
        "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/clusterrole-color.svg",
        "svgComplete": "",
        "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/clusterrole-white.svg",
        "width": 22,
        "x": 8.5,
        "y": 7.5,
        "z-index": 21
      },
      "capabilities": [],
      "status": "enabled",
      "metadata": {
        "configurationUISchema": "",
        "genealogy": "",
        "instanceDetails": null,
        "isAnnotation": false,
        "isNamespaced": false,
        "published": false,
        "source_uri": "git://github.com/kubernetes/kubernetes/master/api/openapi-spec/v3"
      },
      "configuration": {
        "metadata": {
          "labels": {
            "app": "cert-manager",
            "app.kubernetes.io/component": "controller",
            "app.kubernetes.io/instance": "cert-manager",
            "app.kubernetes.io/name": "cert-manager",
            "app.kubernetes.io/version": "v1.14.1",
            "rbac.authorization.k8s.io/aggregate-to-cluster-reader": "true"
          },
          "name": "cert-manager-cluster-view"
        },
        "rules": [
          {
            "apiGroups": [
              "cert-manager.io"
            ],
            "resources": [
              "clusterissuers"
            ],
            "verbs": [
              "get",
              "list",
              "watch"
            ]
          }
        ]
      },
      "component": {
        "version": "rbac.authorization.k8s.io/v1",
        "kind": "ClusterRole",
        "schema": ""
      }
    },
    {
      "id": "52107d2e-f2a4-47da-ac72-9bb252bd524c",
      "schemaVersion": "components.meshery.io/v1beta1",
      "version": "v1.0.0",
      "displayName": "cert-manager-webhook:subjectaccessreviews",
      "description": "",
      "format": "",
      "model": {
        "id": "e633cca6-b6e1-65bf-a440-0d58915e75dd",
        "schemaVersion": "models.meshery.io/v1beta1",
        "version": "v1.0.0",
        "name": "kubernetes",
        "displayName": "Kubernetes",
        "status": "enabled",
        "registrant": {
          "id": "f9a29d70-c287-426c-a90c-2a96590c8083",
          "name": "Github",
          "credential_id": "00000000-0000-0000-0000-000000000000",
          "type": "registry",
          "sub_type": "",
          "kind": "github",
          "status": "registered",
          "user_id": "00000000-0000-0000-0000-000000000000",
          "created_at": "2025-06-22T05:56:58.393994634Z",
          "updated_at": "2025-06-22T05:56:58.393994634Z",
          "deleted_at": "0001-01-01T00:00:00Z"
        },
        "connection_id": "f9a29d70-c287-426c-a90c-2a96590c8083",
        "category": {
          "id": "9ca27d0d-66ce-42a9-8c85-6236563f2ddb",
          "name": "Orchestration \u0026 Management"
        },
        "subCategory": "Scheduling \u0026 Orchestration",
        "metadata": {
          "isAnnotation": false,
          "primaryColor": "#326CE5",
          "secondaryColor": "#7aa1f0",
          "shape": "circle",
          "styleOverrides": "",
          "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/kubernetes-color.svg",
          "svgComplete": "",
          "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/kubernetes-white.svg"
        },
        "model": {
          "version": "v1.32.0-alpha.3"
        },
        "components_count": 0,
        "relationships_count": 0,
        "components": null,
        "relationships": null
      },
      "styles": {
        "height": 22,
        "position": {
          "x": 529.25,
          "y": 744.9114685058594
        },
        "primaryColor": "#326CE5",
        "secondaryColor": "#7aa1f0",
        "shape": "round-rectangle",
        "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/clusterrole-color.svg",
        "svgComplete": "",
        "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/clusterrole-white.svg",
        "width": 22,
        "x": 8.5,
        "y": 7.5,
        "z-index": 26
      },
      "capabilities": [],
      "status": "enabled",
      "metadata": {
        "configurationUISchema": "",
        "genealogy": "",
        "instanceDetails": null,
        "isAnnotation": false,
        "isNamespaced": false,
        "published": false,
        "source_uri": "git://github.com/kubernetes/kubernetes/master/api/openapi-spec/v3"
      },
      "configuration": {
        "metadata": {
          "labels": {
            "app": "webhook",
            "app.kubernetes.io/component": "webhook",
            "app.kubernetes.io/instance": "cert-manager",
            "app.kubernetes.io/name": "webhook",
            "app.kubernetes.io/version": "v1.14.1"
          },
          "name": "cert-manager-webhook:subjectaccessreviews"
        },
        "rules": [
          {
            "apiGroups": [
              "authorization.k8s.io"
            ],
            "resources": [
              "subjectaccessreviews"
            ],
            "verbs": [
              "create"
            ]
          }
        ]
      },
      "component": {
        "version": "rbac.authorization.k8s.io/v1",
        "kind": "ClusterRole",
        "schema": ""
      }
    },
    {
      "id": "71622fd6-78a3-424f-ae49-7efef8fb9340",
      "schemaVersion": "components.meshery.io/v1beta1",
      "version": "v1.0.0",
      "displayName": "azureserviceoperator-crd-manager-role",
      "description": "",
      "format": "",
      "model": {
        "id": "e633cca6-b6e1-65bf-a440-0d58915e75dd",
        "schemaVersion": "models.meshery.io/v1beta1",
        "version": "v1.0.0",
        "name": "kubernetes",
        "displayName": "Kubernetes",
        "status": "enabled",
        "registrant": {
          "id": "f9a29d70-c287-426c-a90c-2a96590c8083",
          "name": "Github",
          "credential_id": "00000000-0000-0000-0000-000000000000",
          "type": "registry",
          "sub_type": "",
          "kind": "github",
          "status": "registered",
          "user_id": "00000000-0000-0000-0000-000000000000",
          "created_at": "2025-06-22T05:56:58.393994634Z",
          "updated_at": "2025-06-22T05:56:58.393994634Z",
          "deleted_at": "0001-01-01T00:00:00Z"
        },
        "connection_id": "f9a29d70-c287-426c-a90c-2a96590c8083",
        "category": {
          "id": "9ca27d0d-66ce-42a9-8c85-6236563f2ddb",
          "name": "Orchestration \u0026 Management"
        },
        "subCategory": "Scheduling \u0026 Orchestration",
        "metadata": {
          "isAnnotation": false,
          "primaryColor": "#326CE5",
          "secondaryColor": "#7aa1f0",
          "shape": "circle",
          "styleOverrides": "",
          "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/kubernetes-color.svg",
          "svgComplete": "",
          "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/kubernetes-white.svg"
        },
        "model": {
          "version": "v1.32.0-alpha.3"
        },
        "components_count": 0,
        "relationships_count": 0,
        "components": null,
        "relationships": null
      },
      "styles": {
        "height": 22,
        "position": {
          "x": 50,
          "y": 50
        },
        "primaryColor": "#326CE5",
        "secondaryColor": "#7aa1f0",
        "shape": "round-rectangle",
        "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/clusterrole-color.svg",
        "svgComplete": "",
        "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/clusterrole-white.svg",
        "width": 22,
        "x": 8.5,
        "y": 7.5,
        "z-index": 52
      },
      "capabilities": [],
      "status": "enabled",
      "metadata": {
        "configurationUISchema": "",
        "genealogy": "",
        "instanceDetails": null,
        "isAnnotation": false,
        "isNamespaced": false,
        "published": false,
        "source_uri": "git://github.com/kubernetes/kubernetes/master/api/openapi-spec/v3"
      },
      "configuration": {
        "metadata": {
          "name": "azureserviceoperator-crd-manager-role"
        },
        "rules": [
          {
            "apiGroups": [
              "apiextensions.k8s.io"
            ],
            "resources": [
              "customresourcedefinitions"
            ],
            "verbs": [
              "create",
              "get",
              "list",
              "patch",
              "update",
              "watch"
            ]
          },
          {
            "apiGroups": [
              "authentication.k8s.io"
            ],
            "resources": [
              "tokenreviews"
            ],
            "verbs": [
              "create"
            ]
          },
          {
            "apiGroups": [
              "authorization.k8s.io"
            ],
            "resources": [
              "subjectaccessreviews"
            ],
            "verbs": [
              "create"
            ]
          }
        ]
      },
      "component": {
        "version": "rbac.authorization.k8s.io/v1",
        "kind": "ClusterRole",
        "schema": ""
      }
    },
    {
      "id": "64be2240-306f-4c19-8573-0c46a4ff4562",
      "schemaVersion": "components.meshery.io/v1beta1",
      "version": "v1.0.0",
      "displayName": "azureserviceoperator-crd-reader-role",
      "description": "",
      "format": "",
      "model": {
        "id": "e633cca6-b6e1-65bf-a440-0d58915e75dd",
        "schemaVersion": "models.meshery.io/v1beta1",
        "version": "v1.0.0",
        "name": "kubernetes",
        "displayName": "Kubernetes",
        "status": "enabled",
        "registrant": {
          "id": "f9a29d70-c287-426c-a90c-2a96590c8083",
          "name": "Github",
          "credential_id": "00000000-0000-0000-0000-000000000000",
          "type": "registry",
          "sub_type": "",
          "kind": "github",
          "status": "registered",
          "user_id": "00000000-0000-0000-0000-000000000000",
          "created_at": "2025-06-22T05:56:58.393994634Z",
          "updated_at": "2025-06-22T05:56:58.393994634Z",
          "deleted_at": "0001-01-01T00:00:00Z"
        },
        "connection_id": "f9a29d70-c287-426c-a90c-2a96590c8083",
        "category": {
          "id": "9ca27d0d-66ce-42a9-8c85-6236563f2ddb",
          "name": "Orchestration \u0026 Management"
        },
        "subCategory": "Scheduling \u0026 Orchestration",
        "metadata": {
          "isAnnotation": false,
          "primaryColor": "#326CE5",
          "secondaryColor": "#7aa1f0",
          "shape": "circle",
          "styleOverrides": "",
          "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/kubernetes-color.svg",
          "svgComplete": "",
          "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/kubernetes-white.svg"
        },
        "model": {
          "version": "v1.32.0-alpha.3"
        },
        "components_count": 0,
        "relationships_count": 0,
        "components": null,
        "relationships": null
      },
      "styles": {
        "height": 22,
        "position": {
          "x": 50,
          "y": 50
        },
        "primaryColor": "#326CE5",
        "secondaryColor": "#7aa1f0",
        "shape": "round-rectangle",
        "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/clusterrole-color.svg",
        "svgComplete": "",
        "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/clusterrole-white.svg",
        "width": 22,
        "x": 8.5,
        "y": 7.5,
        "z-index": 53
      },
      "capabilities": [],
      "status": "enabled",
      "metadata": {
        "configurationUISchema": "",
        "genealogy": "",
        "instanceDetails": null,
        "isAnnotation": false,
        "isNamespaced": false,
        "published": false,
        "source_uri": "git://github.com/kubernetes/kubernetes/master/api/openapi-spec/v3"
      },
      "configuration": {
        "metadata": {
          "name": "azureserviceoperator-crd-reader-role"
        },
        "rules": [
          {
            "apiGroups": [
              "apiextensions.k8s.io"
            ],
            "resources": [
              "customresourcedefinitions"
            ],
            "verbs": [
              "get",
              "list",
              "watch"
            ]
          }
        ]
      },
      "component": {
        "version": "rbac.authorization.k8s.io/v1",
        "kind": "ClusterRole",
        "schema": ""
      }
    },
    {
      "id": "e8972199-7a00-4fc9-8729-5c66c227607c",
      "schemaVersion": "components.meshery.io/v1beta1",
      "version": "v1.0.0",
      "displayName": "azureserviceoperator-manager-role",
      "description": "",
      "format": "",
      "model": {
        "id": "e633cca6-b6e1-65bf-a440-0d58915e75dd",
        "schemaVersion": "models.meshery.io/v1beta1",
        "version": "v1.0.0",
        "name": "kubernetes",
        "displayName": "Kubernetes",
        "status": "enabled",
        "registrant": {
          "id": "f9a29d70-c287-426c-a90c-2a96590c8083",
          "name": "Github",
          "credential_id": "00000000-0000-0000-0000-000000000000",
          "type": "registry",
          "sub_type": "",
          "kind": "github",
          "status": "registered",
          "user_id": "00000000-0000-0000-0000-000000000000",
          "created_at": "2025-06-22T05:56:58.393994634Z",
          "updated_at": "2025-06-22T05:56:58.393994634Z",
          "deleted_at": "0001-01-01T00:00:00Z"
        },
        "connection_id": "f9a29d70-c287-426c-a90c-2a96590c8083",
        "category": {
          "id": "9ca27d0d-66ce-42a9-8c85-6236563f2ddb",
          "name": "Orchestration \u0026 Management"
        },
        "subCategory": "Scheduling \u0026 Orchestration",
        "metadata": {
          "isAnnotation": false,
          "primaryColor": "#326CE5",
          "secondaryColor": "#7aa1f0",
          "shape": "circle",
          "styleOverrides": "",
          "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/kubernetes-color.svg",
          "svgComplete": "",
          "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/kubernetes-white.svg"
        },
        "model": {
          "version": "v1.32.0-alpha.3"
        },
        "components_count": 0,
        "relationships_count": 0,
        "components": null,
        "relationships": null
      },
      "styles": {
        "height": 22,
        "position": {
          "x": 257.4049972489887,
          "y": 194.35387808529612
        },
        "primaryColor": "#326CE5",
        "secondaryColor": "#7aa1f0",
        "shape": "round-rectangle",
        "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/clusterrole-color.svg",
        "svgComplete": "",
        "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/clusterrole-white.svg",
        "width": 22,
        "x": 8.5,
        "y": 7.5,
        "z-index": 54
      },
      "capabilities": [],
      "status": "enabled",
      "metadata": {
        "configurationUISchema": "",
        "genealogy": "",
        "instanceDetails": null,
        "isAnnotation": false,
        "isNamespaced": false,
        "published": false,
        "source_uri": "git://github.com/kubernetes/kubernetes/master/api/openapi-spec/v3"
      },
      "configuration": {
        "metadata": {
          "name": "azureserviceoperator-manager-role"
        },
        "rules": [
          {
            "apiGroups": [
              ""
            ],
            "resources": [
              "configmaps",
              "secrets"
            ],
            "verbs": [
              "create",
              "delete",
              "get",
              "list",
              "patch",
              "update",
              "watch"
            ]
          },
          {
            "apiGroups": [
              ""
            ],
            "resources": [
              "events"
            ],
            "verbs": [
              "create",
              "get",
              "list",
              "patch",
              "update",
              "watch"
            ]
          },
          {
            "apiGroups": [
              "alertsmanagement.azure.com"
            ],
            "resources": [
              "prometheusrulegroups",
              "smartdetectoralertrules"
            ],
            "verbs": [
              "create",
              "delete",
              "get",
              "list",
              "patch",
              "update",
              "watch"
            ]
          },
          {
            "apiGroups": [
              "alertsmanagement.azure.com"
            ],
            "resources": [
              "prometheusrulegroups/finalizers",
              "prometheusrulegroups/status",
              "smartdetectoralertrules/finalizers",
              "smartdetectoralertrules/status"
            ],
            "verbs": [
              "get",
              "patch",
              "update"
            ]
          },
          {
            "apiGroups": [
              "apimanagement.azure.com"
            ],
            "resources": [
              "apis",
              "apiversionsets",
              "authorizationproviders",
              "authorizationprovidersauthorizations",
              "authorizationprovidersauthorizationsaccesspolicies",
              "backends",
              "namedvalues",
              "policies",
              "policyfragments",
              "productapis",
              "productpolicies",
              "products",
              "services",
              "subscriptions"
            ],
            "verbs": [
              "create",
              "delete",
              "get",
              "list",
              "patch",
              "update",
              "watch"
            ]
          },
          {
            "apiGroups": [
              "apimanagement.azure.com"
            ],
            "resources": [
              "apis/finalizers",
              "apis/status",
              "apiversionsets/finalizers",
              "apiversionsets/status",
              "authorizationproviders/finalizers",
              "authorizationproviders/status",
              "authorizationprovidersauthorizations/finalizers",
              "authorizationprovidersauthorizations/status",
              "authorizationprovidersauthorizationsaccesspolicies/finalizers",
              "authorizationprovidersauthorizationsaccesspolicies/status",
              "backends/finalizers",
              "backends/status",
              "namedvalues/finalizers",
              "namedvalues/status",
              "policies/finalizers",
              "policies/status",
              "policyfragments/finalizers",
              "policyfragments/status",
              "productapis/finalizers",
              "productapis/status",
              "productpolicies/finalizers",
              "productpolicies/status",
              "products/finalizers",
              "products/status",
              "services/finalizers",
              "services/status",
              "subscriptions/finalizers",
              "subscriptions/status"
            ],
            "verbs": [
              "get",
              "patch",
              "update"
            ]
          },
          {
            "apiGroups": [
              "app.azure.com"
            ],
            "resources": [
              "authconfigs",
              "containerapps",
              "jobs",
              "managedenvironments"
            ],
            "verbs": [
              "create",
              "delete",
              "get",
              "list",
              "patch",
              "update",
              "watch"
            ]
          },
          {
            "apiGroups": [
              "app.azure.com"
            ],
            "resources": [
              "authconfigs/finalizers",
              "authconfigs/status",
              "containerapps/finalizers",
              "containerapps/status",
              "jobs/finalizers",
              "jobs/status",
              "managedenvironments/finalizers",
              "managedenvironments/status"
            ],
            "verbs": [
              "get",
              "patch",
              "update"
            ]
          },
          {
            "apiGroups": [
              "appconfiguration.azure.com"
            ],
            "resources": [
              "configurationstores"
            ],
            "verbs": [
              "create",
              "delete",
              "get",
              "list",
              "patch",
              "update",
              "watch"
            ]
          },
          {
            "apiGroups": [
              "appconfiguration.azure.com"
            ],
            "resources": [
              "configurationstores/finalizers",
              "configurationstores/status"
            ],
            "verbs": [
              "get",
              "patch",
              "update"
            ]
          },
          {
            "apiGroups": [
              "authorization.azure.com"
            ],
            "resources": [
              "roleassignments",
              "roledefinitions"
            ],
            "verbs": [
              "create",
              "delete",
              "get",
              "list",
              "patch",
              "update",
              "watch"
            ]
          },
          {
            "apiGroups": [
              "authorization.azure.com"
            ],
            "resources": [
              "roleassignments/finalizers",
              "roleassignments/status",
              "roledefinitions/finalizers",
              "roledefinitions/status"
            ],
            "verbs": [
              "get",
              "patch",
              "update"
            ]
          },
          {
            "apiGroups": [
              "batch.azure.com"
            ],
            "resources": [
              "batchaccounts"
            ],
            "verbs": [
              "create",
              "delete",
              "get",
              "list",
              "patch",
              "update",
              "watch"
            ]
          },
          {
            "apiGroups": [
              "batch.azure.com"
            ],
            "resources": [
              "batchaccounts/finalizers",
              "batchaccounts/status"
            ],
            "verbs": [
              "get",
              "patch",
              "update"
            ]
          },
          {
            "apiGroups": [
              "cache.azure.com"
            ],
            "resources": [
              "redis",
              "redisenterprisedatabases",
              "redisenterprises",
              "redisfirewallrules",
              "redislinkedservers",
              "redispatchschedules"
            ],
            "verbs": [
              "create",
              "delete",
              "get",
              "list",
              "patch",
              "update",
              "watch"
            ]
          },
          {
            "apiGroups": [
              "cache.azure.com"
            ],
            "resources": [
              "redis/finalizers",
              "redis/status",
              "redisenterprisedatabases/finalizers",
              "redisenterprisedatabases/status",
              "redisenterprises/finalizers",
              "redisenterprises/status",
              "redisfirewallrules/finalizers",
              "redisfirewallrules/status",
              "redislinkedservers/finalizers",
              "redislinkedservers/status",
              "redispatchschedules/finalizers",
              "redispatchschedules/status"
            ],
            "verbs": [
              "get",
              "patch",
              "update"
            ]
          },
          {
            "apiGroups": [
              "cdn.azure.com"
            ],
            "resources": [
              "afdcustomdomains",
              "afdendpoints",
              "afdorigingroups",
              "afdorigins",
              "profiles",
              "profilesendpoints",
              "routes",
              "rules",
              "rulesets",
              "secrets",
              "securitypolicies"
            ],
            "verbs": [
              "create",
              "delete",
              "get",
              "list",
              "patch",
              "update",
              "watch"
            ]
          },
          {
            "apiGroups": [
              "cdn.azure.com"
            ],
            "resources": [
              "afdcustomdomains/finalizers",
              "afdcustomdomains/status",
              "afdendpoints/finalizers",
              "afdendpoints/status",
              "afdorigingroups/finalizers",
              "afdorigingroups/status",
              "afdorigins/finalizers",
              "afdorigins/status",
              "profiles/finalizers",
              "profiles/status",
              "profilesendpoints/finalizers",
              "profilesendpoints/status",
              "routes/finalizers",
              "routes/status",
              "rules/finalizers",
              "rules/status",
              "rulesets/finalizers",
              "rulesets/status",
              "secrets/finalizers",
              "secrets/status",
              "securitypolicies/finalizers",
              "securitypolicies/status"
            ],
            "verbs": [
              "get",
              "patch",
              "update"
            ]
          },
          {
            "apiGroups": [
              "compute.azure.com"
            ],
            "resources": [
              "diskaccesses",
              "diskencryptionsets",
              "disks",
              "images",
              "snapshots",
              "virtualmachines",
              "virtualmachinescalesets",
              "virtualmachinescalesetsextensions",
              "virtualmachinesextensions"
            ],
            "verbs": [
              "create",
              "delete",
              "get",
              "list",
              "patch",
              "update",
              "watch"
            ]
          },
          {
            "apiGroups": [
              "compute.azure.com"
            ],
            "resources": [
              "diskaccesses/finalizers",
              "diskaccesses/status",
              "diskencryptionsets/finalizers",
              "diskencryptionsets/status",
              "disks/finalizers",
              "disks/status",
              "images/finalizers",
              "images/status",
              "snapshots/finalizers",
              "snapshots/status",
              "virtualmachines/finalizers",
              "virtualmachines/status",
              "virtualmachinescalesets/finalizers",
              "virtualmachinescalesets/status",
              "virtualmachinescalesetsextensions/finalizers",
              "virtualmachinescalesetsextensions/status",
              "virtualmachinesextensions/finalizers",
              "virtualmachinesextensions/status"
            ],
            "verbs": [
              "get",
              "patch",
              "update"
            ]
          },
          {
            "apiGroups": [
              "containerinstance.azure.com"
            ],
            "resources": [
              "containergroups"
            ],
            "verbs": [
              "create",
              "delete",
              "get",
              "list",
              "patch",
              "update",
              "watch"
            ]
          },
          {
            "apiGroups": [
              "containerinstance.azure.com"
            ],
            "resources": [
              "containergroups/finalizers",
              "containergroups/status"
            ],
            "verbs": [
              "get",
              "patch",
              "update"
            ]
          },
          {
            "apiGroups": [
              "containerregistry.azure.com"
            ],
            "resources": [
              "registries",
              "registryreplications"
            ],
            "verbs": [
              "create",
              "delete",
              "get",
              "list",
              "patch",
              "update",
              "watch"
            ]
          },
          {
            "apiGroups": [
              "containerregistry.azure.com"
            ],
            "resources": [
              "registries/finalizers",
              "registries/status",
              "registryreplications/finalizers",
              "registryreplications/status"
            ],
            "verbs": [
              "get",
              "patch",
              "update"
            ]
          },
          {
            "apiGroups": [
              "containerservice.azure.com"
            ],
            "resources": [
              "fleets",
              "fleetsmembers",
              "fleetsupdateruns",
              "maintenanceconfigurations",
              "managedclusters",
              "managedclustersagentpools",
              "trustedaccessrolebindings"
            ],
            "verbs": [
              "create",
              "delete",
              "get",
              "list",
              "patch",
              "update",
              "watch"
            ]
          },
          {
            "apiGroups": [
              "containerservice.azure.com"
            ],
            "resources": [
              "fleets/finalizers",
              "fleets/status",
              "fleetsmembers/finalizers",
              "fleetsmembers/status",
              "fleetsupdateruns/finalizers",
              "fleetsupdateruns/status",
              "maintenanceconfigurations/finalizers",
              "maintenanceconfigurations/status",
              "managedclusters/finalizers",
              "managedclusters/status",
              "managedclustersagentpools/finalizers",
              "managedclustersagentpools/status",
              "trustedaccessrolebindings/finalizers",
              "trustedaccessrolebindings/status"
            ],
            "verbs": [
              "get",
              "patch",
              "update"
            ]
          },
          {
            "apiGroups": [
              "coordination.k8s.io"
            ],
            "resources": [
              "leases"
            ],
            "verbs": [
              "create",
              "delete",
              "get",
              "list",
              "patch",
              "update",
              "watch"
            ]
          },
          {
            "apiGroups": [
              "datafactory.azure.com"
            ],
            "resources": [
              "factories"
            ],
            "verbs": [
              "create",
              "delete",
              "get",
              "list",
              "patch",
              "update",
              "watch"
            ]
          },
          {
            "apiGroups": [
              "datafactory.azure.com"
            ],
            "resources": [
              "factories/finalizers",
              "factories/status"
            ],
            "verbs": [
              "get",
              "patch",
              "update"
            ]
          },
          {
            "apiGroups": [
              "dataprotection.azure.com"
            ],
            "resources": [
              "backupvaults",
              "backupvaultsbackupinstances",
              "backupvaultsbackuppolicies"
            ],
            "verbs": [
              "create",
              "delete",
              "get",
              "list",
              "patch",
              "update",
              "watch"
            ]
          },
          {
            "apiGroups": [
              "dataprotection.azure.com"
            ],
            "resources": [
              "backupvaults/finalizers",
              "backupvaults/status",
              "backupvaultsbackupinstances/finalizers",
              "backupvaultsbackupinstances/status",
              "backupvaultsbackuppolicies/finalizers",
              "backupvaultsbackuppolicies/status"
            ],
            "verbs": [
              "get",
              "patch",
              "update"
            ]
          },
          {
            "apiGroups": [
              "dbformariadb.azure.com"
            ],
            "resources": [
              "configurations",
              "databases",
              "servers"
            ],
            "verbs": [
              "create",
              "delete",
              "get",
              "list",
              "patch",
              "update",
              "watch"
            ]
          },
          {
            "apiGroups": [
              "dbformariadb.azure.com"
            ],
            "resources": [
              "configurations/finalizers",
              "configurations/status",
              "databases/finalizers",
              "databases/status",
              "servers/finalizers",
              "servers/status"
            ],
            "verbs": [
              "get",
              "patch",
              "update"
            ]
          },
          {
            "apiGroups": [
              "dbformysql.azure.com"
            ],
            "resources": [
              "flexibleservers",
              "flexibleserversadministrators",
              "flexibleserversconfigurations",
              "flexibleserversdatabases",
              "flexibleserversfirewallrules",
              "users"
            ],
            "verbs": [
              "create",
              "delete",
              "get",
              "list",
              "patch",
              "update",
              "watch"
            ]
          },
          {
            "apiGroups": [
              "dbformysql.azure.com"
            ],
            "resources": [
              "flexibleservers/finalizers",
              "flexibleservers/status",
              "flexibleserversadministrators/finalizers",
              "flexibleserversadministrators/status",
              "flexibleserversconfigurations/finalizers",
              "flexibleserversconfigurations/status",
              "flexibleserversdatabases/finalizers",
              "flexibleserversdatabases/status",
              "flexibleserversfirewallrules/finalizers",
              "flexibleserversfirewallrules/status",
              "users/finalizers",
              "users/status"
            ],
            "verbs": [
              "get",
              "patch",
              "update"
            ]
          },
          {
            "apiGroups": [
              "dbforpostgresql.azure.com"
            ],
            "resources": [
              "flexibleservers",
              "flexibleserversadvancedthreatprotectionsettings",
              "flexibleserversbackups",
              "flexibleserversconfigurations",
              "flexibleserversdatabases",
              "flexibleserversfirewallrules",
              "flexibleserversvirtualendpoints",
              "users"
            ],
            "verbs": [
              "create",
              "delete",
              "get",
              "list",
              "patch",
              "update",
              "watch"
            ]
          },
          {
            "apiGroups": [
              "dbforpostgresql.azure.com"
            ],
            "resources": [
              "flexibleservers/finalizers",
              "flexibleservers/status",
              "flexibleserversadvancedthreatprotectionsettings/finalizers",
              "flexibleserversadvancedthreatprotectionsettings/status",
              "flexibleserversbackups/finalizers",
              "flexibleserversbackups/status",
              "flexibleserversconfigurations/finalizers",
              "flexibleserversconfigurations/status",
              "flexibleserversdatabases/finalizers",
              "flexibleserversdatabases/status",
              "flexibleserversfirewallrules/finalizers",
              "flexibleserversfirewallrules/status",
              "flexibleserversvirtualendpoints/finalizers",
              "flexibleserversvirtualendpoints/status",
              "users/finalizers",
              "users/status"
            ],
            "verbs": [
              "get",
              "patch",
              "update"
            ]
          },
          {
            "apiGroups": [
              "devices.azure.com"
            ],
            "resources": [
              "iothubs"
            ],
            "verbs": [
              "create",
              "delete",
              "get",
              "list",
              "patch",
              "update",
              "watch"
            ]
          },
          {
            "apiGroups": [
              "devices.azure.com"
            ],
            "resources": [
              "iothubs/finalizers",
              "iothubs/status"
            ],
            "verbs": [
              "get",
              "patch",
              "update"
            ]
          },
          {
            "apiGroups": [
              "documentdb.azure.com"
            ],
            "resources": [
              "databaseaccounts",
              "mongodbdatabasecollections",
              "mongodbdatabasecollectionthroughputsettings",
              "mongodbdatabases",
              "mongodbdatabasethroughputsettings",
              "mongodbuserdefinitions",
              "sqldatabasecontainers",
              "sqldatabasecontainerstoredprocedures",
              "sqldatabasecontainerthroughputsettings",
              "sqldatabasecontainertriggers",
              "sqldatabasecontaineruserdefinedfunctions",
              "sqldatabases",
              "sqldatabasethroughputsettings",
              "sqlroleassignments"
            ],
            "verbs": [
              "create",
              "delete",
              "get",
              "list",
              "patch",
              "update",
              "watch"
            ]
          },
          {
            "apiGroups": [
              "documentdb.azure.com"
            ],
            "resources": [
              "databaseaccounts/finalizers",
              "databaseaccounts/status",
              "mongodbdatabasecollections/finalizers",
              "mongodbdatabasecollections/status",
              "mongodbdatabasecollectionthroughputsettings/finalizers",
              "mongodbdatabasecollectionthroughputsettings/status",
              "mongodbdatabases/finalizers",
              "mongodbdatabases/status",
              "mongodbdatabasethroughputsettings/finalizers",
              "mongodbdatabasethroughputsettings/status",
              "mongodbuserdefinitions/finalizers",
              "mongodbuserdefinitions/status",
              "sqldatabasecontainers/finalizers",
              "sqldatabasecontainers/status",
              "sqldatabasecontainerstoredprocedures/finalizers",
              "sqldatabasecontainerstoredprocedures/status",
              "sqldatabasecontainerthroughputsettings/finalizers",
              "sqldatabasecontainerthroughputsettings/status",
              "sqldatabasecontainertriggers/finalizers",
              "sqldatabasecontainertriggers/status",
              "sqldatabasecontaineruserdefinedfunctions/finalizers",
              "sqldatabasecontaineruserdefinedfunctions/status",
              "sqldatabases/finalizers",
              "sqldatabases/status",
              "sqldatabasethroughputsettings/finalizers",
              "sqldatabasethroughputsettings/status",
              "sqlroleassignments/finalizers",
              "sqlroleassignments/status"
            ],
            "verbs": [
              "get",
              "patch",
              "update"
            ]
          },
          {
            "apiGroups": [
              "eventgrid.azure.com"
            ],
            "resources": [
              "domains",
              "domainstopics",
              "eventsubscriptions",
              "topics"
            ],
            "verbs": [
              "create",
              "delete",
              "get",
              "list",
              "patch",
              "update",
              "watch"
            ]
          },
          {
            "apiGroups": [
              "eventgrid.azure.com"
            ],
            "resources": [
              "domains/finalizers",
              "domains/status",
              "domainstopics/finalizers",
              "domainstopics/status",
              "eventsubscriptions/finalizers",
              "eventsubscriptions/status",
              "topics/finalizers",
              "topics/status"
            ],
            "verbs": [
              "get",
              "patch",
              "update"
            ]
          },
          {
            "apiGroups": [
              "eventhub.azure.com"
            ],
            "resources": [
              "namespaces",
              "namespacesauthorizationrules",
              "namespaceseventhubs",
              "namespaceseventhubsauthorizationrules",
              "namespaceseventhubsconsumergroups"
            ],
            "verbs": [
              "create",
              "delete",
              "get",
              "list",
              "patch",
              "update",
              "watch"
            ]
          },
          {
            "apiGroups": [
              "eventhub.azure.com"
            ],
            "resources": [
              "namespaces/finalizers",
              "namespaces/status",
              "namespacesauthorizationrules/finalizers",
              "namespacesauthorizationrules/status",
              "namespaceseventhubs/finalizers",
              "namespaceseventhubs/status",
              "namespaceseventhubsauthorizationrules/finalizers",
              "namespaceseventhubsauthorizationrules/status",
              "namespaceseventhubsconsumergroups/finalizers",
              "namespaceseventhubsconsumergroups/status"
            ],
            "verbs": [
              "get",
              "patch",
              "update"
            ]
          },
          {
            "apiGroups": [
              "insights.azure.com"
            ],
            "resources": [
              "actiongroups",
              "autoscalesettings",
              "components",
              "diagnosticsettings",
              "metricalerts",
              "scheduledqueryrules",
              "webtests"
            ],
            "verbs": [
              "create",
              "delete",
              "get",
              "list",
              "patch",
              "update",
              "watch"
            ]
          },
          {
            "apiGroups": [
              "insights.azure.com"
            ],
            "resources": [
              "actiongroups/finalizers",
              "actiongroups/status",
              "autoscalesettings/finalizers",
              "autoscalesettings/status",
              "components/finalizers",
              "components/status",
              "diagnosticsettings/finalizers",
              "diagnosticsettings/status",
              "metricalerts/finalizers",
              "metricalerts/status",
              "scheduledqueryrules/finalizers",
              "scheduledqueryrules/status",
              "webtests/finalizers",
              "webtests/status"
            ],
            "verbs": [
              "get",
              "patch",
              "update"
            ]
          },
          {
            "apiGroups": [
              "keyvault.azure.com"
            ],
            "resources": [
              "vaults"
            ],
            "verbs": [
              "create",
              "delete",
              "get",
              "list",
              "patch",
              "update",
              "watch"
            ]
          },
          {
            "apiGroups": [
              "keyvault.azure.com"
            ],
            "resources": [
              "vaults/finalizers",
              "vaults/status"
            ],
            "verbs": [
              "get",
              "patch",
              "update"
            ]
          },
          {
            "apiGroups": [
              "kubernetesconfiguration.azure.com"
            ],
            "resources": [
              "extensions",
              "fluxconfigurations"
            ],
            "verbs": [
              "create",
              "delete",
              "get",
              "list",
              "patch",
              "update",
              "watch"
            ]
          },
          {
            "apiGroups": [
              "kubernetesconfiguration.azure.com"
            ],
            "resources": [
              "extensions/finalizers",
              "extensions/status",
              "fluxconfigurations/finalizers",
              "fluxconfigurations/status"
            ],
            "verbs": [
              "get",
              "patch",
              "update"
            ]
          },
          {
            "apiGroups": [
              "kusto.azure.com"
            ],
            "resources": [
              "clusters",
              "databases",
              "dataconnections"
            ],
            "verbs": [
              "create",
              "delete",
              "get",
              "list",
              "patch",
              "update",
              "watch"
            ]
          },
          {
            "apiGroups": [
              "kusto.azure.com"
            ],
            "resources": [
              "clusters/finalizers",
              "clusters/status",
              "databases/finalizers",
              "databases/status",
              "dataconnections/finalizers",
              "dataconnections/status"
            ],
            "verbs": [
              "get",
              "patch",
              "update"
            ]
          },
          {
            "apiGroups": [
              "machinelearningservices.azure.com"
            ],
            "resources": [
              "registries",
              "workspaces",
              "workspacescomputes",
              "workspacesconnections"
            ],
            "verbs": [
              "create",
              "delete",
              "get",
              "list",
              "patch",
              "update",
              "watch"
            ]
          },
          {
            "apiGroups": [
              "machinelearningservices.azure.com"
            ],
            "resources": [
              "registries/finalizers",
              "registries/status",
              "workspaces/finalizers",
              "workspaces/status",
              "workspacescomputes/finalizers",
              "workspacescomputes/status",
              "workspacesconnections/finalizers",
              "workspacesconnections/status"
            ],
            "verbs": [
              "get",
              "patch",
              "update"
            ]
          },
          {
            "apiGroups": [
              "managedidentity.azure.com"
            ],
            "resources": [
              "federatedidentitycredentials",
              "userassignedidentities"
            ],
            "verbs": [
              "create",
              "delete",
              "get",
              "list",
              "patch",
              "update",
              "watch"
            ]
          },
          {
            "apiGroups": [
              "managedidentity.azure.com"
            ],
            "resources": [
              "federatedidentitycredentials/finalizers",
              "federatedidentitycredentials/status",
              "userassignedidentities/finalizers",
              "userassignedidentities/status"
            ],
            "verbs": [
              "get",
              "patch",
              "update"
            ]
          },
          {
            "apiGroups": [
              "monitor.azure.com"
            ],
            "resources": [
              "accounts"
            ],
            "verbs": [
              "create",
              "delete",
              "get",
              "list",
              "patch",
              "update",
              "watch"
            ]
          },
          {
            "apiGroups": [
              "monitor.azure.com"
            ],
            "resources": [
              "accounts/finalizers",
              "accounts/status"
            ],
            "verbs": [
              "get",
              "patch",
              "update"
            ]
          },
          {
            "apiGroups": [
              "network.azure.com"
            ],
            "resources": [
              "applicationgateways",
              "applicationsecuritygroups",
              "bastionhosts",
              "dnsforwardingrulesets",
              "dnsforwardingrulesetsforwardingrules",
              "dnsforwardingrulesetsvirtualnetworklinks",
              "dnsresolvers",
              "dnsresolversinboundendpoints",
              "dnsresolversoutboundendpoints",
              "dnszones",
              "dnszonesaaaarecords",
              "dnszonesarecords",
              "dnszonescaarecords",
              "dnszonescnamerecords",
              "dnszonesmxrecords",
              "dnszonesnsrecords",
              "dnszonesptrrecords",
              "dnszonessrvrecords",
              "dnszonestxtrecords",
              "loadbalancers",
              "loadbalancersinboundnatrules",
              "natgateways",
              "networkinterfaces",
              "networksecuritygroups",
              "networksecuritygroupssecurityrules",
              "privatednszones",
              "privatednszonesaaaarecords",
              "privatednszonesarecords",
              "privatednszonescnamerecords",
              "privatednszonesmxrecords",
              "privatednszonesptrrecords",
              "privatednszonessrvrecords",
              "privatednszonestxtrecords",
              "privatednszonesvirtualnetworklinks",
              "privateendpoints",
              "privateendpointsprivatednszonegroups",
              "privatelinkservices",
              "publicipaddresses",
              "publicipprefixes",
              "routetables",
              "routetablesroutes",
              "trafficmanagerprofiles",
              "trafficmanagerprofilesazureendpoints",
              "trafficmanagerprofilesexternalendpoints",
              "trafficmanagerprofilesnestedendpoints",
              "virtualnetworkgateways",
              "virtualnetworks",
              "virtualnetworkssubnets",
              "virtualnetworksvirtualnetworkpeerings",
              "webapplicationfirewallpolicies"
            ],
            "verbs": [
              "create",
              "delete",
              "get",
              "list",
              "patch",
              "update",
              "watch"
            ]
          },
          {
            "apiGroups": [
              "network.azure.com"
            ],
            "resources": [
              "applicationgateways/finalizers",
              "applicationgateways/status",
              "applicationsecuritygroups/finalizers",
              "applicationsecuritygroups/status",
              "bastionhosts/finalizers",
              "bastionhosts/status",
              "dnsforwardingrulesets/finalizers",
              "dnsforwardingrulesets/status",
              "dnsforwardingrulesetsforwardingrules/finalizers",
              "dnsforwardingrulesetsforwardingrules/status",
              "dnsforwardingrulesetsvirtualnetworklinks/finalizers",
              "dnsforwardingrulesetsvirtualnetworklinks/status",
              "dnsresolvers/finalizers",
              "dnsresolvers/status",
              "dnsresolversinboundendpoints/finalizers",
              "dnsresolversinboundendpoints/status",
              "dnsresolversoutboundendpoints/finalizers",
              "dnsresolversoutboundendpoints/status",
              "dnszones/finalizers",
              "dnszones/status",
              "dnszonesaaaarecords/finalizers",
              "dnszonesaaaarecords/status",
              "dnszonesarecords/finalizers",
              "dnszonesarecords/status",
              "dnszonescaarecords/finalizers",
              "dnszonescaarecords/status",
              "dnszonescnamerecords/finalizers",
              "dnszonescnamerecords/status",
              "dnszonesmxrecords/finalizers",
              "dnszonesmxrecords/status",
              "dnszonesnsrecords/finalizers",
              "dnszonesnsrecords/status",
              "dnszonesptrrecords/finalizers",
              "dnszonesptrrecords/status",
              "dnszonessrvrecords/finalizers",
              "dnszonessrvrecords/status",
              "dnszonestxtrecords/finalizers",
              "dnszonestxtrecords/status",
              "loadbalancers/finalizers",
              "loadbalancers/status",
              "loadbalancersinboundnatrules/finalizers",
              "loadbalancersinboundnatrules/status",
              "natgateways/finalizers",
              "natgateways/status",
              "networkinterfaces/finalizers",
              "networkinterfaces/status",
              "networksecuritygroups/finalizers",
              "networksecuritygroups/status",
              "networksecuritygroupssecurityrules/finalizers",
              "networksecuritygroupssecurityrules/status",
              "privatednszones/finalizers",
              "privatednszones/status",
              "privatednszonesaaaarecords/finalizers",
              "privatednszonesaaaarecords/status",
              "privatednszonesarecords/finalizers",
              "privatednszonesarecords/status",
              "privatednszonescnamerecords/finalizers",
              "privatednszonescnamerecords/status",
              "privatednszonesmxrecords/finalizers",
              "privatednszonesmxrecords/status",
              "privatednszonesptrrecords/finalizers",
              "privatednszonesptrrecords/status",
              "privatednszonessrvrecords/finalizers",
              "privatednszonessrvrecords/status",
              "privatednszonestxtrecords/finalizers",
              "privatednszonestxtrecords/status",
              "privatednszonesvirtualnetworklinks/finalizers",
              "privatednszonesvirtualnetworklinks/status",
              "privateendpoints/finalizers",
              "privateendpoints/status",
              "privateendpointsprivatednszonegroups/finalizers",
              "privateendpointsprivatednszonegroups/status",
              "privatelinkservices/finalizers",
              "privatelinkservices/status",
              "publicipaddresses/finalizers",
              "publicipaddresses/status",
              "publicipprefixes/finalizers",
              "publicipprefixes/status",
              "routetables/finalizers",
              "routetables/status",
              "routetablesroutes/finalizers",
              "routetablesroutes/status",
              "trafficmanagerprofiles/finalizers",
              "trafficmanagerprofiles/status",
              "trafficmanagerprofilesazureendpoints/finalizers",
              "trafficmanagerprofilesazureendpoints/status",
              "trafficmanagerprofilesexternalendpoints/finalizers",
              "trafficmanagerprofilesexternalendpoints/status",
              "trafficmanagerprofilesnestedendpoints/finalizers",
              "trafficmanagerprofilesnestedendpoints/status",
              "virtualnetworkgateways/finalizers",
              "virtualnetworkgateways/status",
              "virtualnetworks/finalizers",
              "virtualnetworks/status",
              "virtualnetworkssubnets/finalizers",
              "virtualnetworkssubnets/status",
              "virtualnetworksvirtualnetworkpeerings/finalizers",
              "virtualnetworksvirtualnetworkpeerings/status",
              "webapplicationfirewallpolicies/finalizers",
              "webapplicationfirewallpolicies/status"
            ],
            "verbs": [
              "get",
              "patch",
              "update"
            ]
          },
          {
            "apiGroups": [
              "network.frontdoor.azure.com"
            ],
            "resources": [
              "webapplicationfirewallpolicies"
            ],
            "verbs": [
              "create",
              "delete",
              "get",
              "list",
              "patch",
              "update",
              "watch"
            ]
          },
          {
            "apiGroups": [
              "network.frontdoor.azure.com"
            ],
            "resources": [
              "webapplicationfirewallpolicies/finalizers",
              "webapplicationfirewallpolicies/status"
            ],
            "verbs": [
              "get",
              "patch",
              "update"
            ]
          },
          {
            "apiGroups": [
              "notificationhubs.azure.com"
            ],
            "resources": [
              "namespaces",
              "namespacesauthorizationrules",
              "notificationhubs",
              "notificationhubsauthorizationrules"
            ],
            "verbs": [
              "create",
              "delete",
              "get",
              "list",
              "patch",
              "update",
              "watch"
            ]
          },
          {
            "apiGroups": [
              "notificationhubs.azure.com"
            ],
            "resources": [
              "namespaces/finalizers",
              "namespaces/status",
              "namespacesauthorizationrules/finalizers",
              "namespacesauthorizationrules/status",
              "notificationhubs/finalizers",
              "notificationhubs/status",
              "notificationhubsauthorizationrules/finalizers",
              "notificationhubsauthorizationrules/status"
            ],
            "verbs": [
              "get",
              "patch",
              "update"
            ]
          },
          {
            "apiGroups": [
              "operationalinsights.azure.com"
            ],
            "resources": [
              "workspaces"
            ],
            "verbs": [
              "create",
              "delete",
              "get",
              "list",
              "patch",
              "update",
              "watch"
            ]
          },
          {
            "apiGroups": [
              "operationalinsights.azure.com"
            ],
            "resources": [
              "workspaces/finalizers",
              "workspaces/status"
            ],
            "verbs": [
              "get",
              "patch",
              "update"
            ]
          },
          {
            "apiGroups": [
              "redhatopenshift.azure.com"
            ],
            "resources": [
              "openshiftclusters"
            ],
            "verbs": [
              "create",
              "delete",
              "get",
              "list",
              "patch",
              "update",
              "watch"
            ]
          },
          {
            "apiGroups": [
              "redhatopenshift.azure.com"
            ],
            "resources": [
              "openshiftclusters/finalizers",
              "openshiftclusters/status"
            ],
            "verbs": [
              "get",
              "patch",
              "update"
            ]
          },
          {
            "apiGroups": [
              "resources.azure.com"
            ],
            "resources": [
              "resourcegroups"
            ],
            "verbs": [
              "create",
              "delete",
              "get",
              "list",
              "patch",
              "update",
              "watch"
            ]
          },
          {
            "apiGroups": [
              "resources.azure.com"
            ],
            "resources": [
              "resourcegroups/finalizers",
              "resourcegroups/status"
            ],
            "verbs": [
              "get",
              "patch",
              "update"
            ]
          },
          {
            "apiGroups": [
              "search.azure.com"
            ],
            "resources": [
              "searchservices"
            ],
            "verbs": [
              "create",
              "delete",
              "get",
              "list",
              "patch",
              "update",
              "watch"
            ]
          },
          {
            "apiGroups": [
              "search.azure.com"
            ],
            "resources": [
              "searchservices/finalizers",
              "searchservices/status"
            ],
            "verbs": [
              "get",
              "patch",
              "update"
            ]
          },
          {
            "apiGroups": [
              "servicebus.azure.com"
            ],
            "resources": [
              "namespaces",
              "namespacesauthorizationrules",
              "namespacesqueues",
              "namespacestopics",
              "namespacestopicssubscriptions",
              "namespacestopicssubscriptionsrules",
              "topicauthorizationrules"
            ],
            "verbs": [
              "create",
              "delete",
              "get",
              "list",
              "patch",
              "update",
              "watch"
            ]
          },
          {
            "apiGroups": [
              "servicebus.azure.com"
            ],
            "resources": [
              "namespaces/finalizers",
              "namespaces/status",
              "namespacesauthorizationrules/finalizers",
              "namespacesauthorizationrules/status",
              "namespacesqueues/finalizers",
              "namespacesqueues/status",
              "namespacestopics/finalizers",
              "namespacestopics/status",
              "namespacestopicssubscriptions/finalizers",
              "namespacestopicssubscriptions/status",
              "namespacestopicssubscriptionsrules/finalizers",
              "namespacestopicssubscriptionsrules/status",
              "topicauthorizationrules/finalizers",
              "topicauthorizationrules/status"
            ],
            "verbs": [
              "get",
              "patch",
              "update"
            ]
          },
          {
            "apiGroups": [
              "signalrservice.azure.com"
            ],
            "resources": [
              "customcertificates",
              "customdomains",
              "replicas",
              "signalrs"
            ],
            "verbs": [
              "create",
              "delete",
              "get",
              "list",
              "patch",
              "update",
              "watch"
            ]
          },
          {
            "apiGroups": [
              "signalrservice.azure.com"
            ],
            "resources": [
              "customcertificates/finalizers",
              "customcertificates/status",
              "customdomains/finalizers",
              "customdomains/status",
              "replicas/finalizers",
              "replicas/status",
              "signalrs/finalizers",
              "signalrs/status"
            ],
            "verbs": [
              "get",
              "patch",
              "update"
            ]
          },
          {
            "apiGroups": [
              "sql.azure.com"
            ],
            "resources": [
              "servers",
              "serversadministrators",
              "serversadvancedthreatprotectionsettings",
              "serversauditingsettings",
              "serversazureadonlyauthentications",
              "serversconnectionpolicies",
              "serversdatabases",
              "serversdatabasesadvancedthreatprotectionsettings",
              "serversdatabasesauditingsettings",
              "serversdatabasesbackuplongtermretentionpolicies",
              "serversdatabasesbackupshorttermretentionpolicies",
              "serversdatabasessecurityalertpolicies",
              "serversdatabasestransparentdataencryptions",
              "serversdatabasesvulnerabilityassessments",
              "serverselasticpools",
              "serversfailovergroups",
              "serversfirewallrules",
              "serversipv6firewallrules",
              "serversoutboundfirewallrules",
              "serverssecurityalertpolicies",
              "serversvirtualnetworkrules",
              "serversvulnerabilityassessments",
              "users"
            ],
            "verbs": [
              "create",
              "delete",
              "get",
              "list",
              "patch",
              "update",
              "watch"
            ]
          },
          {
            "apiGroups": [
              "sql.azure.com"
            ],
            "resources": [
              "servers/finalizers",
              "servers/status",
              "serversadministrators/finalizers",
              "serversadministrators/status",
              "serversadvancedthreatprotectionsettings/finalizers",
              "serversadvancedthreatprotectionsettings/status",
              "serversauditingsettings/finalizers",
              "serversauditingsettings/status",
              "serversazureadonlyauthentications/finalizers",
              "serversazureadonlyauthentications/status",
              "serversconnectionpolicies/finalizers",
              "serversconnectionpolicies/status",
              "serversdatabases/finalizers",
              "serversdatabases/status",
              "serversdatabasesadvancedthreatprotectionsettings/finalizers",
              "serversdatabasesadvancedthreatprotectionsettings/status",
              "serversdatabasesauditingsettings/finalizers",
              "serversdatabasesauditingsettings/status",
              "serversdatabasesbackuplongtermretentionpolicies/finalizers",
              "serversdatabasesbackuplongtermretentionpolicies/status",
              "serversdatabasesbackupshorttermretentionpolicies/finalizers",
              "serversdatabasesbackupshorttermretentionpolicies/status",
              "serversdatabasessecurityalertpolicies/finalizers",
              "serversdatabasessecurityalertpolicies/status",
              "serversdatabasestransparentdataencryptions/finalizers",
              "serversdatabasestransparentdataencryptions/status",
              "serversdatabasesvulnerabilityassessments/finalizers",
              "serversdatabasesvulnerabilityassessments/status",
              "serverselasticpools/finalizers",
              "serverselasticpools/status",
              "serversfailovergroups/finalizers",
              "serversfailovergroups/status",
              "serversfirewallrules/finalizers",
              "serversfirewallrules/status",
              "serversipv6firewallrules/finalizers",
              "serversipv6firewallrules/status",
              "serversoutboundfirewallrules/finalizers",
              "serversoutboundfirewallrules/status",
              "serverssecurityalertpolicies/finalizers",
              "serverssecurityalertpolicies/status",
              "serversvirtualnetworkrules/finalizers",
              "serversvirtualnetworkrules/status",
              "serversvulnerabilityassessments/finalizers",
              "serversvulnerabilityassessments/status",
              "users/finalizers",
              "users/status"
            ],
            "verbs": [
              "get",
              "patch",
              "update"
            ]
          },
          {
            "apiGroups": [
              "storage.azure.com"
            ],
            "resources": [
              "storageaccounts",
              "storageaccountsblobservices",
              "storageaccountsblobservicescontainers",
              "storageaccountsfileservices",
              "storageaccountsfileservicesshares",
              "storageaccountsmanagementpolicies",
              "storageaccountsqueueservices",
              "storageaccountsqueueservicesqueues",
              "storageaccountstableservices",
              "storageaccountstableservicestables"
            ],
            "verbs": [
              "create",
              "delete",
              "get",
              "list",
              "patch",
              "update",
              "watch"
            ]
          },
          {
            "apiGroups": [
              "storage.azure.com"
            ],
            "resources": [
              "storageaccounts/finalizers",
              "storageaccounts/status",
              "storageaccountsblobservices/finalizers",
              "storageaccountsblobservices/status",
              "storageaccountsblobservicescontainers/finalizers",
              "storageaccountsblobservicescontainers/status",
              "storageaccountsfileservices/finalizers",
              "storageaccountsfileservices/status",
              "storageaccountsfileservicesshares/finalizers",
              "storageaccountsfileservicesshares/status",
              "storageaccountsmanagementpolicies/finalizers",
              "storageaccountsmanagementpolicies/status",
              "storageaccountsqueueservices/finalizers",
              "storageaccountsqueueservices/status",
              "storageaccountsqueueservicesqueues/finalizers",
              "storageaccountsqueueservicesqueues/status",
              "storageaccountstableservices/finalizers",
              "storageaccountstableservices/status",
              "storageaccountstableservicestables/finalizers",
              "storageaccountstableservicestables/status"
            ],
            "verbs": [
              "get",
              "patch",
              "update"
            ]
          },
          {
            "apiGroups": [
              "subscription.azure.com"
            ],
            "resources": [
              "aliases"
            ],
            "verbs": [
              "create",
              "delete",
              "get",
              "list",
              "patch",
              "update",
              "watch"
            ]
          },
          {
            "apiGroups": [
              "subscription.azure.com"
            ],
            "resources": [
              "aliases/finalizers",
              "aliases/status"
            ],
            "verbs": [
              "get",
              "patch",
              "update"
            ]
          },
          {
            "apiGroups": [
              "synapse.azure.com"
            ],
            "resources": [
              "workspaces",
              "workspacesbigdatapools"
            ],
            "verbs": [
              "create",
              "delete",
              "get",
              "list",
              "patch",
              "update",
              "watch"
            ]
          },
          {
            "apiGroups": [
              "synapse.azure.com"
            ],
            "resources": [
              "workspaces/finalizers",
              "workspaces/status",
              "workspacesbigdatapools/finalizers",
              "workspacesbigdatapools/status"
            ],
            "verbs": [
              "get",
              "patch",
              "update"
            ]
          },
          {
            "apiGroups": [
              "web.azure.com"
            ],
            "resources": [
              "serverfarms",
              "sites",
              "sitessourcecontrols"
            ],
            "verbs": [
              "create",
              "delete",
              "get",
              "list",
              "patch",
              "update",
              "watch"
            ]
          },
          {
            "apiGroups": [
              "web.azure.com"
            ],
            "resources": [
              "serverfarms/finalizers",
              "serverfarms/status",
              "sites/finalizers",
              "sites/status",
              "sitessourcecontrols/finalizers",
              "sitessourcecontrols/status"
            ],
            "verbs": [
              "get",
              "patch",
              "update"
            ]
          }
        ]
      },
      "component": {
        "version": "rbac.authorization.k8s.io/v1",
        "kind": "ClusterRole",
        "schema": ""
      }
    },
    {
      "id": "c6667bc6-2dd7-4675-82c1-078434108403",
      "schemaVersion": "components.meshery.io/v1beta1",
      "version": "v1.0.0",
      "displayName": "cert-manager-cainjector",
      "description": "",
      "format": "",
      "model": {
        "id": "e633cca6-b6e1-65bf-a440-0d58915e75dd",
        "schemaVersion": "models.meshery.io/v1beta1",
        "version": "v1.0.0",
        "name": "kubernetes",
        "displayName": "Kubernetes",
        "status": "enabled",
        "registrant": {
          "id": "f9a29d70-c287-426c-a90c-2a96590c8083",
          "name": "Github",
          "credential_id": "00000000-0000-0000-0000-000000000000",
          "type": "registry",
          "sub_type": "",
          "kind": "github",
          "status": "registered",
          "user_id": "00000000-0000-0000-0000-000000000000",
          "created_at": "2025-06-22T05:56:58.393994634Z",
          "updated_at": "2025-06-22T05:56:58.393994634Z",
          "deleted_at": "0001-01-01T00:00:00Z"
        },
        "connection_id": "f9a29d70-c287-426c-a90c-2a96590c8083",
        "category": {
          "id": "9ca27d0d-66ce-42a9-8c85-6236563f2ddb",
          "name": "Orchestration \u0026 Management"
        },
        "subCategory": "Scheduling \u0026 Orchestration",
        "metadata": {
          "isAnnotation": false,
          "primaryColor": "#326CE5",
          "secondaryColor": "#7aa1f0",
          "shape": "circle",
          "styleOverrides": "",
          "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/kubernetes-color.svg",
          "svgComplete": "",
          "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/kubernetes-white.svg"
        },
        "model": {
          "version": "v1.32.0-alpha.3"
        },
        "components_count": 0,
        "relationships_count": 0,
        "components": null,
        "relationships": null
      },
      "styles": {
        "height": 25,
        "position": {
          "x": 444.25,
          "y": 375.9114685058594
        },
        "primaryColor": "#326CE5",
        "secondaryColor": "#7aa1f0",
        "shape": "round-rectangle",
        "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/clusterrolebinding-color.svg",
        "svgComplete": "",
        "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/clusterrolebinding-white.svg",
        "width": 25,
        "x": 7,
        "y": 7,
        "z-index": 27
      },
      "capabilities": [],
      "status": "enabled",
      "metadata": {
        "configurationUISchema": "",
        "genealogy": "",
        "instanceDetails": null,
        "isAnnotation": false,
        "isNamespaced": false,
        "published": false,
        "source_uri": "git://github.com/kubernetes/kubernetes/master/api/openapi-spec/v3"
      },
      "configuration": {
        "metadata": {
          "labels": {
            "app": "cainjector",
            "app.kubernetes.io/component": "cainjector",
            "app.kubernetes.io/instance": "cert-manager",
            "app.kubernetes.io/name": "cainjector",
            "app.kubernetes.io/version": "v1.14.1"
          },
          "name": "cert-manager-cainjector"
        },
        "roleRef": {
          "apiGroup": "rbac.authorization.k8s.io",
          "kind": "ClusterRole",
          "name": "cert-manager-cainjector"
        },
        "subjects": [
          {
            "kind": "ServiceAccount",
            "name": "cert-manager-cainjector",
            "namespace": "cert-manager"
          }
        ]
      },
      "component": {
        "version": "rbac.authorization.k8s.io/v1",
        "kind": "ClusterRoleBinding",
        "schema": ""
      }
    },
    {
      "id": "db16fcd0-db19-40ef-8853-b1a5e109ff4c",
      "schemaVersion": "components.meshery.io/v1beta1",
      "version": "v1.0.0",
      "displayName": "cert-manager-controller-approve:cert-manager-io",
      "description": "",
      "format": "",
      "model": {
        "id": "e633cca6-b6e1-65bf-a440-0d58915e75dd",
        "schemaVersion": "models.meshery.io/v1beta1",
        "version": "v1.0.0",
        "name": "kubernetes",
        "displayName": "Kubernetes",
        "status": "enabled",
        "registrant": {
          "id": "f9a29d70-c287-426c-a90c-2a96590c8083",
          "name": "Github",
          "credential_id": "00000000-0000-0000-0000-000000000000",
          "type": "registry",
          "sub_type": "",
          "kind": "github",
          "status": "registered",
          "user_id": "00000000-0000-0000-0000-000000000000",
          "created_at": "2025-06-22T05:56:58.393994634Z",
          "updated_at": "2025-06-22T05:56:58.393994634Z",
          "deleted_at": "0001-01-01T00:00:00Z"
        },
        "connection_id": "f9a29d70-c287-426c-a90c-2a96590c8083",
        "category": {
          "id": "9ca27d0d-66ce-42a9-8c85-6236563f2ddb",
          "name": "Orchestration \u0026 Management"
        },
        "subCategory": "Scheduling \u0026 Orchestration",
        "metadata": {
          "isAnnotation": false,
          "primaryColor": "#326CE5",
          "secondaryColor": "#7aa1f0",
          "shape": "circle",
          "styleOverrides": "",
          "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/kubernetes-color.svg",
          "svgComplete": "",
          "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/kubernetes-white.svg"
        },
        "model": {
          "version": "v1.32.0-alpha.3"
        },
        "components_count": 0,
        "relationships_count": 0,
        "components": null,
        "relationships": null
      },
      "styles": {
        "height": 25,
        "position": {
          "x": 538.25,
          "y": 469.9114685058594
        },
        "primaryColor": "#326CE5",
        "secondaryColor": "#7aa1f0",
        "shape": "round-rectangle",
        "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/clusterrolebinding-color.svg",
        "svgComplete": "",
        "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/clusterrolebinding-white.svg",
        "width": 25,
        "x": 7,
        "y": 7,
        "z-index": 34
      },
      "capabilities": [],
      "status": "enabled",
      "metadata": {
        "configurationUISchema": "",
        "genealogy": "",
        "instanceDetails": null,
        "isAnnotation": false,
        "isNamespaced": false,
        "published": false,
        "source_uri": "git://github.com/kubernetes/kubernetes/master/api/openapi-spec/v3"
      },
      "configuration": {
        "metadata": {
          "labels": {
            "app": "cert-manager",
            "app.kubernetes.io/component": "cert-manager",
            "app.kubernetes.io/instance": "cert-manager",
            "app.kubernetes.io/name": "cert-manager",
            "app.kubernetes.io/version": "v1.14.1"
          },
          "name": "cert-manager-controller-approve:cert-manager-io"
        },
        "roleRef": {
          "apiGroup": "rbac.authorization.k8s.io",
          "kind": "ClusterRole",
          "name": "cert-manager-controller-approve:cert-manager-io"
        },
        "subjects": [
          {
            "kind": "ServiceAccount",
            "name": "cert-manager",
            "namespace": "cert-manager"
          }
        ]
      },
      "component": {
        "version": "rbac.authorization.k8s.io/v1",
        "kind": "ClusterRoleBinding",
        "schema": ""
      }
    },
    {
      "id": "c55f6acc-ad14-4c67-a14a-633df0c4558d",
      "schemaVersion": "components.meshery.io/v1beta1",
      "version": "v1.0.0",
      "displayName": "cert-manager-controller-certificatesigningrequests",
      "description": "",
      "format": "",
      "model": {
        "id": "e633cca6-b6e1-65bf-a440-0d58915e75dd",
        "schemaVersion": "models.meshery.io/v1beta1",
        "version": "v1.0.0",
        "name": "kubernetes",
        "displayName": "Kubernetes",
        "status": "enabled",
        "registrant": {
          "id": "f9a29d70-c287-426c-a90c-2a96590c8083",
          "name": "Github",
          "credential_id": "00000000-0000-0000-0000-000000000000",
          "type": "registry",
          "sub_type": "",
          "kind": "github",
          "status": "registered",
          "user_id": "00000000-0000-0000-0000-000000000000",
          "created_at": "2025-06-22T05:56:58.393994634Z",
          "updated_at": "2025-06-22T05:56:58.393994634Z",
          "deleted_at": "0001-01-01T00:00:00Z"
        },
        "connection_id": "f9a29d70-c287-426c-a90c-2a96590c8083",
        "category": {
          "id": "9ca27d0d-66ce-42a9-8c85-6236563f2ddb",
          "name": "Orchestration \u0026 Management"
        },
        "subCategory": "Scheduling \u0026 Orchestration",
        "metadata": {
          "isAnnotation": false,
          "primaryColor": "#326CE5",
          "secondaryColor": "#7aa1f0",
          "shape": "circle",
          "styleOverrides": "",
          "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/kubernetes-color.svg",
          "svgComplete": "",
          "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/kubernetes-white.svg"
        },
        "model": {
          "version": "v1.32.0-alpha.3"
        },
        "components_count": 0,
        "relationships_count": 0,
        "components": null,
        "relationships": null
      },
      "styles": {
        "height": 25,
        "position": {
          "x": 632.25,
          "y": 469.9114685058594
        },
        "primaryColor": "#326CE5",
        "secondaryColor": "#7aa1f0",
        "shape": "round-rectangle",
        "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/clusterrolebinding-color.svg",
        "svgComplete": "",
        "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/clusterrolebinding-white.svg",
        "width": 25,
        "x": 7,
        "y": 7,
        "z-index": 35
      },
      "capabilities": [],
      "status": "enabled",
      "metadata": {
        "configurationUISchema": "",
        "genealogy": "",
        "instanceDetails": null,
        "isAnnotation": false,
        "isNamespaced": false,
        "published": false,
        "source_uri": "git://github.com/kubernetes/kubernetes/master/api/openapi-spec/v3"
      },
      "configuration": {
        "metadata": {
          "labels": {
            "app": "cert-manager",
            "app.kubernetes.io/component": "cert-manager",
            "app.kubernetes.io/instance": "cert-manager",
            "app.kubernetes.io/name": "cert-manager",
            "app.kubernetes.io/version": "v1.14.1"
          },
          "name": "cert-manager-controller-certificatesigningrequests"
        },
        "roleRef": {
          "apiGroup": "rbac.authorization.k8s.io",
          "kind": "ClusterRole",
          "name": "cert-manager-controller-certificatesigningrequests"
        },
        "subjects": [
          {
            "kind": "ServiceAccount",
            "name": "cert-manager",
            "namespace": "cert-manager"
          }
        ]
      },
      "component": {
        "version": "rbac.authorization.k8s.io/v1",
        "kind": "ClusterRoleBinding",
        "schema": ""
      }
    },
    {
      "id": "7da5f661-a05b-4cd6-84ec-7d8d244fe05b",
      "schemaVersion": "components.meshery.io/v1beta1",
      "version": "v1.0.0",
      "displayName": "cert-manager-controller-certificates",
      "description": "",
      "format": "",
      "model": {
        "id": "e633cca6-b6e1-65bf-a440-0d58915e75dd",
        "schemaVersion": "models.meshery.io/v1beta1",
        "version": "v1.0.0",
        "name": "kubernetes",
        "displayName": "Kubernetes",
        "status": "enabled",
        "registrant": {
          "id": "f9a29d70-c287-426c-a90c-2a96590c8083",
          "name": "Github",
          "credential_id": "00000000-0000-0000-0000-000000000000",
          "type": "registry",
          "sub_type": "",
          "kind": "github",
          "status": "registered",
          "user_id": "00000000-0000-0000-0000-000000000000",
          "created_at": "2025-06-22T05:56:58.393994634Z",
          "updated_at": "2025-06-22T05:56:58.393994634Z",
          "deleted_at": "0001-01-01T00:00:00Z"
        },
        "connection_id": "f9a29d70-c287-426c-a90c-2a96590c8083",
        "category": {
          "id": "9ca27d0d-66ce-42a9-8c85-6236563f2ddb",
          "name": "Orchestration \u0026 Management"
        },
        "subCategory": "Scheduling \u0026 Orchestration",
        "metadata": {
          "isAnnotation": false,
          "primaryColor": "#326CE5",
          "secondaryColor": "#7aa1f0",
          "shape": "circle",
          "styleOverrides": "",
          "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/kubernetes-color.svg",
          "svgComplete": "",
          "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/kubernetes-white.svg"
        },
        "model": {
          "version": "v1.32.0-alpha.3"
        },
        "components_count": 0,
        "relationships_count": 0,
        "components": null,
        "relationships": null
      },
      "styles": {
        "height": 25,
        "position": {
          "x": 726.25,
          "y": 375.9114685058594
        },
        "primaryColor": "#326CE5",
        "secondaryColor": "#7aa1f0",
        "shape": "round-rectangle",
        "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/clusterrolebinding-color.svg",
        "svgComplete": "",
        "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/clusterrolebinding-white.svg",
        "width": 25,
        "x": 7,
        "y": 7,
        "z-index": 30
      },
      "capabilities": [],
      "status": "enabled",
      "metadata": {
        "configurationUISchema": "",
        "genealogy": "",
        "instanceDetails": null,
        "isAnnotation": false,
        "isNamespaced": false,
        "published": false,
        "source_uri": "git://github.com/kubernetes/kubernetes/master/api/openapi-spec/v3"
      },
      "configuration": {
        "metadata": {
          "labels": {
            "app": "cert-manager",
            "app.kubernetes.io/component": "controller",
            "app.kubernetes.io/instance": "cert-manager",
            "app.kubernetes.io/name": "cert-manager",
            "app.kubernetes.io/version": "v1.14.1"
          },
          "name": "cert-manager-controller-certificates"
        },
        "roleRef": {
          "apiGroup": "rbac.authorization.k8s.io",
          "kind": "ClusterRole",
          "name": "cert-manager-controller-certificates"
        },
        "subjects": [
          {
            "kind": "ServiceAccount",
            "name": "cert-manager",
            "namespace": "cert-manager"
          }
        ]
      },
      "component": {
        "version": "rbac.authorization.k8s.io/v1",
        "kind": "ClusterRoleBinding",
        "schema": ""
      }
    },
    {
      "id": "5b7b87e1-c8c3-4d5b-96d5-6518fb5cae92",
      "schemaVersion": "components.meshery.io/v1beta1",
      "version": "v1.0.0",
      "displayName": "cert-manager-controller-challenges",
      "description": "",
      "format": "",
      "model": {
        "id": "e633cca6-b6e1-65bf-a440-0d58915e75dd",
        "schemaVersion": "models.meshery.io/v1beta1",
        "version": "v1.0.0",
        "name": "kubernetes",
        "displayName": "Kubernetes",
        "status": "enabled",
        "registrant": {
          "id": "f9a29d70-c287-426c-a90c-2a96590c8083",
          "name": "Github",
          "credential_id": "00000000-0000-0000-0000-000000000000",
          "type": "registry",
          "sub_type": "",
          "kind": "github",
          "status": "registered",
          "user_id": "00000000-0000-0000-0000-000000000000",
          "created_at": "2025-06-22T05:56:58.393994634Z",
          "updated_at": "2025-06-22T05:56:58.393994634Z",
          "deleted_at": "0001-01-01T00:00:00Z"
        },
        "connection_id": "f9a29d70-c287-426c-a90c-2a96590c8083",
        "category": {
          "id": "9ca27d0d-66ce-42a9-8c85-6236563f2ddb",
          "name": "Orchestration \u0026 Management"
        },
        "subCategory": "Scheduling \u0026 Orchestration",
        "metadata": {
          "isAnnotation": false,
          "primaryColor": "#326CE5",
          "secondaryColor": "#7aa1f0",
          "shape": "circle",
          "styleOverrides": "",
          "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/kubernetes-color.svg",
          "svgComplete": "",
          "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/kubernetes-white.svg"
        },
        "model": {
          "version": "v1.32.0-alpha.3"
        },
        "components_count": 0,
        "relationships_count": 0,
        "components": null,
        "relationships": null
      },
      "styles": {
        "height": 25,
        "position": {
          "x": 808.25,
          "y": 247.91146850585938
        },
        "primaryColor": "#326CE5",
        "secondaryColor": "#7aa1f0",
        "shape": "round-rectangle",
        "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/clusterrolebinding-color.svg",
        "svgComplete": "",
        "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/clusterrolebinding-white.svg",
        "width": 25,
        "x": 7,
        "y": 7,
        "z-index": 32
      },
      "capabilities": [],
      "status": "enabled",
      "metadata": {
        "configurationUISchema": "",
        "genealogy": "",
        "instanceDetails": null,
        "isAnnotation": false,
        "isNamespaced": false,
        "published": false,
        "source_uri": "git://github.com/kubernetes/kubernetes/master/api/openapi-spec/v3"
      },
      "configuration": {
        "metadata": {
          "labels": {
            "app": "cert-manager",
            "app.kubernetes.io/component": "controller",
            "app.kubernetes.io/instance": "cert-manager",
            "app.kubernetes.io/name": "cert-manager",
            "app.kubernetes.io/version": "v1.14.1"
          },
          "name": "cert-manager-controller-challenges"
        },
        "roleRef": {
          "apiGroup": "rbac.authorization.k8s.io",
          "kind": "ClusterRole",
          "name": "cert-manager-controller-challenges"
        },
        "subjects": [
          {
            "kind": "ServiceAccount",
            "name": "cert-manager",
            "namespace": "cert-manager"
          }
        ]
      },
      "component": {
        "version": "rbac.authorization.k8s.io/v1",
        "kind": "ClusterRoleBinding",
        "schema": ""
      }
    },
    {
      "id": "59d787d1-aa20-43f5-9a0d-5e99ec2c9375",
      "schemaVersion": "components.meshery.io/v1beta1",
      "version": "v1.0.0",
      "displayName": "cert-manager-controller-clusterissuers",
      "description": "",
      "format": "",
      "model": {
        "id": "e633cca6-b6e1-65bf-a440-0d58915e75dd",
        "schemaVersion": "models.meshery.io/v1beta1",
        "version": "v1.0.0",
        "name": "kubernetes",
        "displayName": "Kubernetes",
        "status": "enabled",
        "registrant": {
          "id": "f9a29d70-c287-426c-a90c-2a96590c8083",
          "name": "Github",
          "credential_id": "00000000-0000-0000-0000-000000000000",
          "type": "registry",
          "sub_type": "",
          "kind": "github",
          "status": "registered",
          "user_id": "00000000-0000-0000-0000-000000000000",
          "created_at": "2025-06-22T05:56:58.393994634Z",
          "updated_at": "2025-06-22T05:56:58.393994634Z",
          "deleted_at": "0001-01-01T00:00:00Z"
        },
        "connection_id": "f9a29d70-c287-426c-a90c-2a96590c8083",
        "category": {
          "id": "9ca27d0d-66ce-42a9-8c85-6236563f2ddb",
          "name": "Orchestration \u0026 Management"
        },
        "subCategory": "Scheduling \u0026 Orchestration",
        "metadata": {
          "isAnnotation": false,
          "primaryColor": "#326CE5",
          "secondaryColor": "#7aa1f0",
          "shape": "circle",
          "styleOverrides": "",
          "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/kubernetes-color.svg",
          "svgComplete": "",
          "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/kubernetes-white.svg"
        },
        "model": {
          "version": "v1.32.0-alpha.3"
        },
        "components_count": 0,
        "relationships_count": 0,
        "components": null,
        "relationships": null
      },
      "styles": {
        "height": 25,
        "position": {
          "x": 632.25,
          "y": 375.9114685058594
        },
        "primaryColor": "#326CE5",
        "secondaryColor": "#7aa1f0",
        "shape": "round-rectangle",
        "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/clusterrolebinding-color.svg",
        "svgComplete": "",
        "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/clusterrolebinding-white.svg",
        "width": 25,
        "x": 7,
        "y": 7,
        "z-index": 29
      },
      "capabilities": [],
      "status": "enabled",
      "metadata": {
        "configurationUISchema": "",
        "genealogy": "",
        "instanceDetails": null,
        "isAnnotation": false,
        "isNamespaced": false,
        "published": false,
        "source_uri": "git://github.com/kubernetes/kubernetes/master/api/openapi-spec/v3"
      },
      "configuration": {
        "metadata": {
          "labels": {
            "app": "cert-manager",
            "app.kubernetes.io/component": "controller",
            "app.kubernetes.io/instance": "cert-manager",
            "app.kubernetes.io/name": "cert-manager",
            "app.kubernetes.io/version": "v1.14.1"
          },
          "name": "cert-manager-controller-clusterissuers"
        },
        "roleRef": {
          "apiGroup": "rbac.authorization.k8s.io",
          "kind": "ClusterRole",
          "name": "cert-manager-controller-clusterissuers"
        },
        "subjects": [
          {
            "kind": "ServiceAccount",
            "name": "cert-manager",
            "namespace": "cert-manager"
          }
        ]
      },
      "component": {
        "version": "rbac.authorization.k8s.io/v1",
        "kind": "ClusterRoleBinding",
        "schema": ""
      }
    },
    {
      "id": "ad617d15-e484-4f96-bbf0-a584765924a7",
      "schemaVersion": "components.meshery.io/v1beta1",
      "version": "v1.0.0",
      "displayName": "cert-manager-controller-ingress-shim",
      "description": "",
      "format": "",
      "model": {
        "id": "e633cca6-b6e1-65bf-a440-0d58915e75dd",
        "schemaVersion": "models.meshery.io/v1beta1",
        "version": "v1.0.0",
        "name": "kubernetes",
        "displayName": "Kubernetes",
        "status": "enabled",
        "registrant": {
          "id": "f9a29d70-c287-426c-a90c-2a96590c8083",
          "name": "Github",
          "credential_id": "00000000-0000-0000-0000-000000000000",
          "type": "registry",
          "sub_type": "",
          "kind": "github",
          "status": "registered",
          "user_id": "00000000-0000-0000-0000-000000000000",
          "created_at": "2025-06-22T05:56:58.393994634Z",
          "updated_at": "2025-06-22T05:56:58.393994634Z",
          "deleted_at": "0001-01-01T00:00:00Z"
        },
        "connection_id": "f9a29d70-c287-426c-a90c-2a96590c8083",
        "category": {
          "id": "9ca27d0d-66ce-42a9-8c85-6236563f2ddb",
          "name": "Orchestration \u0026 Management"
        },
        "subCategory": "Scheduling \u0026 Orchestration",
        "metadata": {
          "isAnnotation": false,
          "primaryColor": "#326CE5",
          "secondaryColor": "#7aa1f0",
          "shape": "circle",
          "styleOverrides": "",
          "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/kubernetes-color.svg",
          "svgComplete": "",
          "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/kubernetes-white.svg"
        },
        "model": {
          "version": "v1.32.0-alpha.3"
        },
        "components_count": 0,
        "relationships_count": 0,
        "components": null,
        "relationships": null
      },
      "styles": {
        "height": 25,
        "position": {
          "x": 444.25,
          "y": 469.9114685058594
        },
        "primaryColor": "#326CE5",
        "secondaryColor": "#7aa1f0",
        "shape": "round-rectangle",
        "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/clusterrolebinding-color.svg",
        "svgComplete": "",
        "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/clusterrolebinding-white.svg",
        "width": 25,
        "x": 7,
        "y": 7,
        "z-index": 33
      },
      "capabilities": [],
      "status": "enabled",
      "metadata": {
        "configurationUISchema": "",
        "genealogy": "",
        "instanceDetails": null,
        "isAnnotation": false,
        "isNamespaced": false,
        "published": false,
        "source_uri": "git://github.com/kubernetes/kubernetes/master/api/openapi-spec/v3"
      },
      "configuration": {
        "metadata": {
          "labels": {
            "app": "cert-manager",
            "app.kubernetes.io/component": "controller",
            "app.kubernetes.io/instance": "cert-manager",
            "app.kubernetes.io/name": "cert-manager",
            "app.kubernetes.io/version": "v1.14.1"
          },
          "name": "cert-manager-controller-ingress-shim"
        },
        "roleRef": {
          "apiGroup": "rbac.authorization.k8s.io",
          "kind": "ClusterRole",
          "name": "cert-manager-controller-ingress-shim"
        },
        "subjects": [
          {
            "kind": "ServiceAccount",
            "name": "cert-manager",
            "namespace": "cert-manager"
          }
        ]
      },
      "component": {
        "version": "rbac.authorization.k8s.io/v1",
        "kind": "ClusterRoleBinding",
        "schema": ""
      }
    },
    {
      "id": "71dbcb25-4cd1-4c81-9fe5-7998c925a2b9",
      "schemaVersion": "components.meshery.io/v1beta1",
      "version": "v1.0.0",
      "displayName": "cert-manager-controller-issuers",
      "description": "",
      "format": "",
      "model": {
        "id": "e633cca6-b6e1-65bf-a440-0d58915e75dd",
        "schemaVersion": "models.meshery.io/v1beta1",
        "version": "v1.0.0",
        "name": "kubernetes",
        "displayName": "Kubernetes",
        "status": "enabled",
        "registrant": {
          "id": "f9a29d70-c287-426c-a90c-2a96590c8083",
          "name": "Github",
          "credential_id": "00000000-0000-0000-0000-000000000000",
          "type": "registry",
          "sub_type": "",
          "kind": "github",
          "status": "registered",
          "user_id": "00000000-0000-0000-0000-000000000000",
          "created_at": "2025-06-22T05:56:58.393994634Z",
          "updated_at": "2025-06-22T05:56:58.393994634Z",
          "deleted_at": "0001-01-01T00:00:00Z"
        },
        "connection_id": "f9a29d70-c287-426c-a90c-2a96590c8083",
        "category": {
          "id": "9ca27d0d-66ce-42a9-8c85-6236563f2ddb",
          "name": "Orchestration \u0026 Management"
        },
        "subCategory": "Scheduling \u0026 Orchestration",
        "metadata": {
          "isAnnotation": false,
          "primaryColor": "#326CE5",
          "secondaryColor": "#7aa1f0",
          "shape": "circle",
          "styleOverrides": "",
          "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/kubernetes-color.svg",
          "svgComplete": "",
          "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/kubernetes-white.svg"
        },
        "model": {
          "version": "v1.32.0-alpha.3"
        },
        "components_count": 0,
        "relationships_count": 0,
        "components": null,
        "relationships": null
      },
      "styles": {
        "height": 25,
        "position": {
          "x": 538.25,
          "y": 375.9114685058594
        },
        "primaryColor": "#326CE5",
        "secondaryColor": "#7aa1f0",
        "shape": "round-rectangle",
        "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/clusterrolebinding-color.svg",
        "svgComplete": "",
        "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/clusterrolebinding-white.svg",
        "width": 25,
        "x": 7,
        "y": 7,
        "z-index": 28
      },
      "capabilities": [],
      "status": "enabled",
      "metadata": {
        "configurationUISchema": "",
        "genealogy": "",
        "instanceDetails": null,
        "isAnnotation": false,
        "isNamespaced": false,
        "published": false,
        "source_uri": "git://github.com/kubernetes/kubernetes/master/api/openapi-spec/v3"
      },
      "configuration": {
        "metadata": {
          "labels": {
            "app": "cert-manager",
            "app.kubernetes.io/component": "controller",
            "app.kubernetes.io/instance": "cert-manager",
            "app.kubernetes.io/name": "cert-manager",
            "app.kubernetes.io/version": "v1.14.1"
          },
          "name": "cert-manager-controller-issuers"
        },
        "roleRef": {
          "apiGroup": "rbac.authorization.k8s.io",
          "kind": "ClusterRole",
          "name": "cert-manager-controller-issuers"
        },
        "subjects": [
          {
            "kind": "ServiceAccount",
            "name": "cert-manager",
            "namespace": "cert-manager"
          }
        ]
      },
      "component": {
        "version": "rbac.authorization.k8s.io/v1",
        "kind": "ClusterRoleBinding",
        "schema": ""
      }
    },
    {
      "id": "1adfb054-b85a-4561-9ce5-fe5980a1a3bc",
      "schemaVersion": "components.meshery.io/v1beta1",
      "version": "v1.0.0",
      "displayName": "cert-manager-controller-orders",
      "description": "",
      "format": "",
      "model": {
        "id": "e633cca6-b6e1-65bf-a440-0d58915e75dd",
        "schemaVersion": "models.meshery.io/v1beta1",
        "version": "v1.0.0",
        "name": "kubernetes",
        "displayName": "Kubernetes",
        "status": "enabled",
        "registrant": {
          "id": "f9a29d70-c287-426c-a90c-2a96590c8083",
          "name": "Github",
          "credential_id": "00000000-0000-0000-0000-000000000000",
          "type": "registry",
          "sub_type": "",
          "kind": "github",
          "status": "registered",
          "user_id": "00000000-0000-0000-0000-000000000000",
          "created_at": "2025-06-22T05:56:58.393994634Z",
          "updated_at": "2025-06-22T05:56:58.393994634Z",
          "deleted_at": "0001-01-01T00:00:00Z"
        },
        "connection_id": "f9a29d70-c287-426c-a90c-2a96590c8083",
        "category": {
          "id": "9ca27d0d-66ce-42a9-8c85-6236563f2ddb",
          "name": "Orchestration \u0026 Management"
        },
        "subCategory": "Scheduling \u0026 Orchestration",
        "metadata": {
          "isAnnotation": false,
          "primaryColor": "#326CE5",
          "secondaryColor": "#7aa1f0",
          "shape": "circle",
          "styleOverrides": "",
          "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/kubernetes-color.svg",
          "svgComplete": "",
          "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/kubernetes-white.svg"
        },
        "model": {
          "version": "v1.32.0-alpha.3"
        },
        "components_count": 0,
        "relationships_count": 0,
        "components": null,
        "relationships": null
      },
      "styles": {
        "height": 25,
        "position": {
          "x": 808.25,
          "y": 119.91146850585938
        },
        "primaryColor": "#326CE5",
        "secondaryColor": "#7aa1f0",
        "shape": "round-rectangle",
        "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/clusterrolebinding-color.svg",
        "svgComplete": "",
        "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/clusterrolebinding-white.svg",
        "width": 25,
        "x": 7,
        "y": 7,
        "z-index": 31
      },
      "capabilities": [],
      "status": "enabled",
      "metadata": {
        "configurationUISchema": "",
        "genealogy": "",
        "instanceDetails": null,
        "isAnnotation": false,
        "isNamespaced": false,
        "published": false,
        "source_uri": "git://github.com/kubernetes/kubernetes/master/api/openapi-spec/v3"
      },
      "configuration": {
        "metadata": {
          "labels": {
            "app": "cert-manager",
            "app.kubernetes.io/component": "controller",
            "app.kubernetes.io/instance": "cert-manager",
            "app.kubernetes.io/name": "cert-manager",
            "app.kubernetes.io/version": "v1.14.1"
          },
          "name": "cert-manager-controller-orders"
        },
        "roleRef": {
          "apiGroup": "rbac.authorization.k8s.io",
          "kind": "ClusterRole",
          "name": "cert-manager-controller-orders"
        },
        "subjects": [
          {
            "kind": "ServiceAccount",
            "name": "cert-manager",
            "namespace": "cert-manager"
          }
        ]
      },
      "component": {
        "version": "rbac.authorization.k8s.io/v1",
        "kind": "ClusterRoleBinding",
        "schema": ""
      }
    },
    {
      "id": "45236b47-9d7e-418e-8824-286eeb9d293f",
      "schemaVersion": "components.meshery.io/v1beta1",
      "version": "v1.0.0",
      "displayName": "cert-manager-webhook:subjectaccessreviews",
      "description": "",
      "format": "",
      "model": {
        "id": "e633cca6-b6e1-65bf-a440-0d58915e75dd",
        "schemaVersion": "models.meshery.io/v1beta1",
        "version": "v1.0.0",
        "name": "kubernetes",
        "displayName": "Kubernetes",
        "status": "enabled",
        "registrant": {
          "id": "f9a29d70-c287-426c-a90c-2a96590c8083",
          "name": "Github",
          "credential_id": "00000000-0000-0000-0000-000000000000",
          "type": "registry",
          "sub_type": "",
          "kind": "github",
          "status": "registered",
          "user_id": "00000000-0000-0000-0000-000000000000",
          "created_at": "2025-06-22T05:56:58.393994634Z",
          "updated_at": "2025-06-22T05:56:58.393994634Z",
          "deleted_at": "0001-01-01T00:00:00Z"
        },
        "connection_id": "f9a29d70-c287-426c-a90c-2a96590c8083",
        "category": {
          "id": "9ca27d0d-66ce-42a9-8c85-6236563f2ddb",
          "name": "Orchestration \u0026 Management"
        },
        "subCategory": "Scheduling \u0026 Orchestration",
        "metadata": {
          "isAnnotation": false,
          "primaryColor": "#326CE5",
          "secondaryColor": "#7aa1f0",
          "shape": "circle",
          "styleOverrides": "",
          "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/kubernetes-color.svg",
          "svgComplete": "",
          "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/kubernetes-white.svg"
        },
        "model": {
          "version": "v1.32.0-alpha.3"
        },
        "components_count": 0,
        "relationships_count": 0,
        "components": null,
        "relationships": null
      },
      "styles": {
        "height": 25,
        "position": {
          "x": 726.25,
          "y": 469.9114685058594
        },
        "primaryColor": "#326CE5",
        "secondaryColor": "#7aa1f0",
        "shape": "round-rectangle",
        "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/clusterrolebinding-color.svg",
        "svgComplete": "",
        "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/clusterrolebinding-white.svg",
        "width": 25,
        "x": 7,
        "y": 7,
        "z-index": 36
      },
      "capabilities": [],
      "status": "enabled",
      "metadata": {
        "configurationUISchema": "",
        "genealogy": "",
        "instanceDetails": null,
        "isAnnotation": false,
        "isNamespaced": false,
        "published": false,
        "source_uri": "git://github.com/kubernetes/kubernetes/master/api/openapi-spec/v3"
      },
      "configuration": {
        "metadata": {
          "labels": {
            "app": "webhook",
            "app.kubernetes.io/component": "webhook",
            "app.kubernetes.io/instance": "cert-manager",
            "app.kubernetes.io/name": "webhook",
            "app.kubernetes.io/version": "v1.14.1"
          },
          "name": "cert-manager-webhook:subjectaccessreviews"
        },
        "roleRef": {
          "apiGroup": "rbac.authorization.k8s.io",
          "kind": "ClusterRole",
          "name": "cert-manager-webhook:subjectaccessreviews"
        },
        "subjects": [
          {
            "apiGroup": "",
            "kind": "ServiceAccount",
            "name": "cert-manager-webhook",
            "namespace": "cert-manager"
          }
        ]
      },
      "component": {
        "version": "rbac.authorization.k8s.io/v1",
        "kind": "ClusterRoleBinding",
        "schema": ""
      }
    },
    {
      "id": "693e165e-f7f9-4c8f-8fa2-11f47d75a926",
      "schemaVersion": "components.meshery.io/v1beta1",
      "version": "v1.0.0",
      "displayName": "azureserviceoperator-crd-manager-rolebinding",
      "description": "",
      "format": "",
      "model": {
        "id": "e633cca6-b6e1-65bf-a440-0d58915e75dd",
        "schemaVersion": "models.meshery.io/v1beta1",
        "version": "v1.0.0",
        "name": "kubernetes",
        "displayName": "Kubernetes",
        "status": "enabled",
        "registrant": {
          "id": "f9a29d70-c287-426c-a90c-2a96590c8083",
          "name": "Github",
          "credential_id": "00000000-0000-0000-0000-000000000000",
          "type": "registry",
          "sub_type": "",
          "kind": "github",
          "status": "registered",
          "user_id": "00000000-0000-0000-0000-000000000000",
          "created_at": "2025-06-22T05:56:58.393994634Z",
          "updated_at": "2025-06-22T05:56:58.393994634Z",
          "deleted_at": "0001-01-01T00:00:00Z"
        },
        "connection_id": "f9a29d70-c287-426c-a90c-2a96590c8083",
        "category": {
          "id": "9ca27d0d-66ce-42a9-8c85-6236563f2ddb",
          "name": "Orchestration \u0026 Management"
        },
        "subCategory": "Scheduling \u0026 Orchestration",
        "metadata": {
          "isAnnotation": false,
          "primaryColor": "#326CE5",
          "secondaryColor": "#7aa1f0",
          "shape": "circle",
          "styleOverrides": "",
          "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/kubernetes-color.svg",
          "svgComplete": "",
          "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/kubernetes-white.svg"
        },
        "model": {
          "version": "v1.32.0-alpha.3"
        },
        "components_count": 0,
        "relationships_count": 0,
        "components": null,
        "relationships": null
      },
      "styles": {
        "height": 25,
        "position": {
          "x": 50,
          "y": 50
        },
        "primaryColor": "#326CE5",
        "secondaryColor": "#7aa1f0",
        "shape": "round-rectangle",
        "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/clusterrolebinding-color.svg",
        "svgComplete": "",
        "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/clusterrolebinding-white.svg",
        "width": 25,
        "x": 7,
        "y": 7,
        "z-index": 55
      },
      "capabilities": [],
      "status": "enabled",
      "metadata": {
        "configurationUISchema": "",
        "genealogy": "",
        "instanceDetails": null,
        "isAnnotation": false,
        "isNamespaced": false,
        "published": false,
        "source_uri": "git://github.com/kubernetes/kubernetes/master/api/openapi-spec/v3"
      },
      "configuration": {
        "metadata": {
          "name": "azureserviceoperator-crd-manager-rolebinding"
        },
        "roleRef": {
          "apiGroup": "rbac.authorization.k8s.io",
          "kind": "ClusterRole",
          "name": "azureserviceoperator-crd-manager-role"
        },
        "subjects": [
          {
            "kind": "ServiceAccount",
            "name": "azureserviceoperator-default",
            "namespace": "azureserviceoperator-system"
          }
        ]
      },
      "component": {
        "version": "rbac.authorization.k8s.io/v1",
        "kind": "ClusterRoleBinding",
        "schema": ""
      }
    },
    {
      "id": "2738725d-0a9e-4c66-866d-612596efec1f",
      "schemaVersion": "components.meshery.io/v1beta1",
      "version": "v1.0.0",
      "displayName": "azureserviceoperator-crd-reader-rolebinding",
      "description": "",
      "format": "",
      "model": {
        "id": "e633cca6-b6e1-65bf-a440-0d58915e75dd",
        "schemaVersion": "models.meshery.io/v1beta1",
        "version": "v1.0.0",
        "name": "kubernetes",
        "displayName": "Kubernetes",
        "status": "enabled",
        "registrant": {
          "id": "f9a29d70-c287-426c-a90c-2a96590c8083",
          "name": "Github",
          "credential_id": "00000000-0000-0000-0000-000000000000",
          "type": "registry",
          "sub_type": "",
          "kind": "github",
          "status": "registered",
          "user_id": "00000000-0000-0000-0000-000000000000",
          "created_at": "2025-06-22T05:56:58.393994634Z",
          "updated_at": "2025-06-22T05:56:58.393994634Z",
          "deleted_at": "0001-01-01T00:00:00Z"
        },
        "connection_id": "f9a29d70-c287-426c-a90c-2a96590c8083",
        "category": {
          "id": "9ca27d0d-66ce-42a9-8c85-6236563f2ddb",
          "name": "Orchestration \u0026 Management"
        },
        "subCategory": "Scheduling \u0026 Orchestration",
        "metadata": {
          "isAnnotation": false,
          "primaryColor": "#326CE5",
          "secondaryColor": "#7aa1f0",
          "shape": "circle",
          "styleOverrides": "",
          "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/kubernetes-color.svg",
          "svgComplete": "",
          "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/kubernetes-white.svg"
        },
        "model": {
          "version": "v1.32.0-alpha.3"
        },
        "components_count": 0,
        "relationships_count": 0,
        "components": null,
        "relationships": null
      },
      "styles": {
        "height": 25,
        "position": {
          "x": 50,
          "y": 50
        },
        "primaryColor": "#326CE5",
        "secondaryColor": "#7aa1f0",
        "shape": "round-rectangle",
        "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/clusterrolebinding-color.svg",
        "svgComplete": "",
        "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/clusterrolebinding-white.svg",
        "width": 25,
        "x": 7,
        "y": 7,
        "z-index": 56
      },
      "capabilities": [],
      "status": "enabled",
      "metadata": {
        "configurationUISchema": "",
        "genealogy": "",
        "instanceDetails": null,
        "isAnnotation": false,
        "isNamespaced": false,
        "published": false,
        "source_uri": "git://github.com/kubernetes/kubernetes/master/api/openapi-spec/v3"
      },
      "configuration": {
        "metadata": {
          "name": "azureserviceoperator-crd-reader-rolebinding"
        },
        "roleRef": {
          "apiGroup": "rbac.authorization.k8s.io",
          "kind": "ClusterRole",
          "name": "azureserviceoperator-crd-reader-role"
        },
        "subjects": [
          {
            "kind": "ServiceAccount",
            "name": "azureserviceoperator-default",
            "namespace": "azureserviceoperator-system"
          }
        ]
      },
      "component": {
        "version": "rbac.authorization.k8s.io/v1",
        "kind": "ClusterRoleBinding",
        "schema": ""
      }
    },
    {
      "id": "145ba7cd-4884-442d-ab80-105010ff64e2",
      "schemaVersion": "components.meshery.io/v1beta1",
      "version": "v1.0.0",
      "displayName": "azureserviceoperator-manager-rolebinding",
      "description": "",
      "format": "",
      "model": {
        "id": "e633cca6-b6e1-65bf-a440-0d58915e75dd",
        "schemaVersion": "models.meshery.io/v1beta1",
        "version": "v1.0.0",
        "name": "kubernetes",
        "displayName": "Kubernetes",
        "status": "enabled",
        "registrant": {
          "id": "f9a29d70-c287-426c-a90c-2a96590c8083",
          "name": "Github",
          "credential_id": "00000000-0000-0000-0000-000000000000",
          "type": "registry",
          "sub_type": "",
          "kind": "github",
          "status": "registered",
          "user_id": "00000000-0000-0000-0000-000000000000",
          "created_at": "2025-06-22T05:56:58.393994634Z",
          "updated_at": "2025-06-22T05:56:58.393994634Z",
          "deleted_at": "0001-01-01T00:00:00Z"
        },
        "connection_id": "f9a29d70-c287-426c-a90c-2a96590c8083",
        "category": {
          "id": "9ca27d0d-66ce-42a9-8c85-6236563f2ddb",
          "name": "Orchestration \u0026 Management"
        },
        "subCategory": "Scheduling \u0026 Orchestration",
        "metadata": {
          "isAnnotation": false,
          "primaryColor": "#326CE5",
          "secondaryColor": "#7aa1f0",
          "shape": "circle",
          "styleOverrides": "",
          "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/kubernetes-color.svg",
          "svgComplete": "",
          "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/kubernetes-white.svg"
        },
        "model": {
          "version": "v1.32.0-alpha.3"
        },
        "components_count": 0,
        "relationships_count": 0,
        "components": null,
        "relationships": null
      },
      "styles": {
        "height": 25,
        "position": {
          "x": 50,
          "y": 50
        },
        "primaryColor": "#326CE5",
        "secondaryColor": "#7aa1f0",
        "shape": "round-rectangle",
        "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/clusterrolebinding-color.svg",
        "svgComplete": "",
        "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/clusterrolebinding-white.svg",
        "width": 25,
        "x": 7,
        "y": 7,
        "z-index": 57
      },
      "capabilities": [],
      "status": "enabled",
      "metadata": {
        "configurationUISchema": "",
        "genealogy": "",
        "instanceDetails": null,
        "isAnnotation": false,
        "isNamespaced": false,
        "published": false,
        "source_uri": "git://github.com/kubernetes/kubernetes/master/api/openapi-spec/v3"
      },
      "configuration": {
        "metadata": {
          "name": "azureserviceoperator-manager-rolebinding"
        },
        "roleRef": {
          "apiGroup": "rbac.authorization.k8s.io",
          "kind": "ClusterRole",
          "name": "azureserviceoperator-manager-role"
        },
        "subjects": [
          {
            "kind": "ServiceAccount",
            "name": "azureserviceoperator-default",
            "namespace": "azureserviceoperator-system"
          }
        ]
      },
      "component": {
        "version": "rbac.authorization.k8s.io/v1",
        "kind": "ClusterRoleBinding",
        "schema": ""
      }
    },
    {
      "id": "af0c3a8f-45d6-4ad6-beea-8bae8120bbe5",
      "schemaVersion": "components.meshery.io/v1beta1",
      "version": "v1.0.0",
      "displayName": "",
      "description": "",
      "format": "JSON",
      "model": {
        "id": "550bfe31-5015-a0d1-b695-369c97b4e903",
        "schemaVersion": "models.meshery.io/v1beta1",
        "version": "v1.0.0",
        "name": "meshery-core",
        "displayName": "Meshery Core",
        "status": "enabled",
        "registrant": {
          "id": "98027e7d-9e16-e4f0-6dbd-83f3ac0d9856",
          "name": "meshery",
          "credential_id": "00000000-0000-0000-0000-000000000000",
          "type": "registry",
          "sub_type": "",
          "kind": "meshery",
          "status": "registered",
          "user_id": "00000000-0000-0000-0000-000000000000",
          "created_at": "2025-06-30T22:11:57.571508862Z",
          "updated_at": "2025-06-30T22:11:57.571508862Z",
          "deleted_at": "0001-01-01T00:00:00Z"
        },
        "connection_id": "98027e7d-9e16-e4f0-6dbd-83f3ac0d9856",
        "category": {
          "id": "9ca27d0d-66ce-42a9-8c85-6236563f2ddb",
          "name": "Orchestration \u0026 Management"
        },
        "subCategory": "Application Definition \u0026 Image Build",
        "metadata": {
          "isAnnotation": false,
          "primaryColor": "#00B39F",
          "secondaryColor": "#00D3A9",
          "shape": "circle",
          "styleOverrides": "",
          "svgColor": "ui/public/static/img/meshmodels/meshery-core/color/meshery-core-color.svg",
          "svgComplete": "",
          "svgWhite": "ui/public/static/img/meshmodels/meshery-core/white/meshery-core-white.svg"
        },
        "model": {
          "version": "0.7.2"
        },
        "components_count": 0,
        "relationships_count": 0,
        "components": null,
        "relationships": null
      },
      "styles": {
        "background-opacity": 0,
        "body-text": "",
        "body-text-color": "#808080",
        "body-text-font-family": "Qanelas Soft",
        "body-text-font-size": 12,
        "body-text-font-weight": "400",
        "body-text-horizontal-align": "center",
        "body-text-text-decoration": "none",
        "body-text-vertical-align": "center",
        "border-color": "#808080",
        "border-width": 0,
        "height": 22,
        "menu-forground-color": "#424242",
        "opacity": 1,
        "padding": 2,
        "position": {
          "x": -562.1280426695606,
          "y": -47.39196539692748
        },
        "primaryColor": "#FFDE00",
        "secondaryColor": "#FFDE00",
        "shape": "tag",
        "svgColor": "ui/public/static/img/meshmodels/meshery-core/color/comment-color.svg",
        "svgComplete": "ui/public/static/img/meshmodels/meshery-core/complete/comment-complete.svg",
        "svgWhite": "ui/public/static/img/meshmodels/meshery-core/white/comment-white.svg",
        "width": 22,
        "x": 1.5,
        "y": 7.5,
        "z-index": 77
      },
      "capabilities": [],
      "status": "enabled",
      "metadata": {
        "configurationUISchema": "",
        "genealogy": "",
        "instanceDetails": null,
        "isAnnotation": true,
        "isNamespaced": false,
        "published": false
      },
      "configuration": {
        "userMessages": []
      },
      "component": {
        "version": "core.meshery.io/v1alpha1",
        "kind": "Comment",
        "schema": ""
      }
    },
    {
      "id": "13bc130b-bcfa-4856-b667-858feb365e74",
      "schemaVersion": "components.meshery.io/v1beta1",
      "version": "v1.0.0",
      "displayName": "containers.0",
      "description": "",
      "format": "JSON",
      "model": {
        "id": "550bfe31-5015-a0d1-b695-369c97b4e903",
        "schemaVersion": "models.meshery.io/v1beta1",
        "version": "v1.0.0",
        "name": "meshery-core",
        "displayName": "Meshery Core",
        "status": "enabled",
        "registrant": {
          "id": "98027e7d-9e16-e4f0-6dbd-83f3ac0d9856",
          "name": "meshery",
          "credential_id": "00000000-0000-0000-0000-000000000000",
          "type": "registry",
          "sub_type": "",
          "kind": "meshery",
          "status": "registered",
          "user_id": "00000000-0000-0000-0000-000000000000",
          "created_at": "2025-06-22T05:57:00.309106049Z",
          "updated_at": "2025-06-22T05:57:00.309106049Z",
          "deleted_at": "0001-01-01T00:00:00Z"
        },
        "connection_id": "98027e7d-9e16-e4f0-6dbd-83f3ac0d9856",
        "category": {
          "id": "9ca27d0d-66ce-42a9-8c85-6236563f2ddb",
          "name": "Orchestration \u0026 Management"
        },
        "subCategory": "Application Definition \u0026 Image Build",
        "metadata": {
          "isAnnotation": false,
          "primaryColor": "#00B39F",
          "secondaryColor": "#00D3A9",
          "shape": "circle",
          "styleOverrides": "",
          "svgColor": "ui/public/static/img/meshmodels/meshery-core/color/meshery-core-color.svg",
          "svgComplete": "",
          "svgWhite": "ui/public/static/img/meshmodels/meshery-core/white/meshery-core-white.svg"
        },
        "model": {
          "version": "0.7.2"
        },
        "components_count": 0,
        "relationships_count": 0,
        "components": null,
        "relationships": null
      },
      "styles": {
        "primaryColor": "#326CE5",
        "secondaryColor": "#00D3A9",
        "shape": "circle",
        "svgColor": "ui/public/static/img/meshmodels/meshery-core/color/container-color.svg",
        "svgComplete": "",
        "svgWhite": "ui/public/static/img/meshmodels/meshery-core/white/container-white.svg",
        "z-index": 58
      },
      "capabilities": [],
      "status": "enabled",
      "metadata": {
        "configurationUISchema": "",
        "genealogy": "",
        "hasInvalidSchema": true,
        "instanceDetails": null,
        "isAnnotation": true,
        "isNamespaced": false,
        "published": false
      },
      "configuration": {},
      "component": {
        "version": "core.meshery.io/v1alpha1",
        "kind": "Container",
        "schema": ""
      }
    },
    {
      "id": "2714a376-ebaa-463e-81a0-c1730f5a4f3c",
      "schemaVersion": "components.meshery.io/v1beta1",
      "version": "v1.0.0",
      "displayName": "containers.0",
      "description": "",
      "format": "JSON",
      "model": {
        "id": "550bfe31-5015-a0d1-b695-369c97b4e903",
        "schemaVersion": "models.meshery.io/v1beta1",
        "version": "v1.0.0",
        "name": "meshery-core",
        "displayName": "Meshery Core",
        "status": "enabled",
        "registrant": {
          "id": "98027e7d-9e16-e4f0-6dbd-83f3ac0d9856",
          "name": "meshery",
          "credential_id": "00000000-0000-0000-0000-000000000000",
          "type": "registry",
          "sub_type": "",
          "kind": "meshery",
          "status": "registered",
          "user_id": "00000000-0000-0000-0000-000000000000",
          "created_at": "2025-06-22T05:57:00.309106049Z",
          "updated_at": "2025-06-22T05:57:00.309106049Z",
          "deleted_at": "0001-01-01T00:00:00Z"
        },
        "connection_id": "98027e7d-9e16-e4f0-6dbd-83f3ac0d9856",
        "category": {
          "id": "9ca27d0d-66ce-42a9-8c85-6236563f2ddb",
          "name": "Orchestration \u0026 Management"
        },
        "subCategory": "Application Definition \u0026 Image Build",
        "metadata": {
          "isAnnotation": false,
          "primaryColor": "#00B39F",
          "secondaryColor": "#00D3A9",
          "shape": "circle",
          "styleOverrides": "",
          "svgColor": "ui/public/static/img/meshmodels/meshery-core/color/meshery-core-color.svg",
          "svgComplete": "",
          "svgWhite": "ui/public/static/img/meshmodels/meshery-core/white/meshery-core-white.svg"
        },
        "model": {
          "version": "0.7.2"
        },
        "components_count": 0,
        "relationships_count": 0,
        "components": null,
        "relationships": null
      },
      "styles": {
        "primaryColor": "#326CE5",
        "secondaryColor": "#00D3A9",
        "shape": "circle",
        "svgColor": "ui/public/static/img/meshmodels/meshery-core/color/container-color.svg",
        "svgComplete": "",
        "svgWhite": "ui/public/static/img/meshmodels/meshery-core/white/container-white.svg",
        "z-index": 59
      },
      "capabilities": [],
      "status": "enabled",
      "metadata": {
        "configurationUISchema": "",
        "genealogy": "",
        "hasInvalidSchema": true,
        "instanceDetails": null,
        "isAnnotation": true,
        "isNamespaced": false,
        "published": false
      },
      "configuration": {},
      "component": {
        "version": "core.meshery.io/v1alpha1",
        "kind": "Container",
        "schema": ""
      }
    },
    {
      "id": "3720888b-7413-4b6a-aeba-3ca605a457d2",
      "schemaVersion": "components.meshery.io/v1beta1",
      "version": "v1.0.0",
      "displayName": "containers.0",
      "description": "",
      "format": "JSON",
      "model": {
        "id": "550bfe31-5015-a0d1-b695-369c97b4e903",
        "schemaVersion": "models.meshery.io/v1beta1",
        "version": "v1.0.0",
        "name": "meshery-core",
        "displayName": "Meshery Core",
        "status": "enabled",
        "registrant": {
          "id": "98027e7d-9e16-e4f0-6dbd-83f3ac0d9856",
          "name": "meshery",
          "credential_id": "00000000-0000-0000-0000-000000000000",
          "type": "registry",
          "sub_type": "",
          "kind": "meshery",
          "status": "registered",
          "user_id": "00000000-0000-0000-0000-000000000000",
          "created_at": "2025-06-22T05:57:00.309106049Z",
          "updated_at": "2025-06-22T05:57:00.309106049Z",
          "deleted_at": "0001-01-01T00:00:00Z"
        },
        "connection_id": "98027e7d-9e16-e4f0-6dbd-83f3ac0d9856",
        "category": {
          "id": "9ca27d0d-66ce-42a9-8c85-6236563f2ddb",
          "name": "Orchestration \u0026 Management"
        },
        "subCategory": "Application Definition \u0026 Image Build",
        "metadata": {
          "isAnnotation": false,
          "primaryColor": "#00B39F",
          "secondaryColor": "#00D3A9",
          "shape": "circle",
          "styleOverrides": "",
          "svgColor": "ui/public/static/img/meshmodels/meshery-core/color/meshery-core-color.svg",
          "svgComplete": "",
          "svgWhite": "ui/public/static/img/meshmodels/meshery-core/white/meshery-core-white.svg"
        },
        "model": {
          "version": "0.7.2"
        },
        "components_count": 0,
        "relationships_count": 0,
        "components": null,
        "relationships": null
      },
      "styles": {
        "primaryColor": "#326CE5",
        "secondaryColor": "#00D3A9",
        "shape": "circle",
        "svgColor": "ui/public/static/img/meshmodels/meshery-core/color/container-color.svg",
        "svgComplete": "",
        "svgWhite": "ui/public/static/img/meshmodels/meshery-core/white/container-white.svg",
        "z-index": 60
      },
      "capabilities": [],
      "status": "enabled",
      "metadata": {
        "configurationUISchema": "",
        "genealogy": "",
        "hasInvalidSchema": true,
        "instanceDetails": null,
        "isAnnotation": true,
        "isNamespaced": false,
        "published": false
      },
      "configuration": {},
      "component": {
        "version": "core.meshery.io/v1alpha1",
        "kind": "Container",
        "schema": ""
      }
    },
    {
      "id": "d50218c9-c3bb-420a-9219-da63fa270a57",
      "schemaVersion": "components.meshery.io/v1beta1",
      "version": "v1.0.0",
      "displayName": "containers.0",
      "description": "",
      "format": "JSON",
      "model": {
        "id": "550bfe31-5015-a0d1-b695-369c97b4e903",
        "schemaVersion": "models.meshery.io/v1beta1",
        "version": "v1.0.0",
        "name": "meshery-core",
        "displayName": "Meshery Core",
        "status": "enabled",
        "registrant": {
          "id": "98027e7d-9e16-e4f0-6dbd-83f3ac0d9856",
          "name": "meshery",
          "credential_id": "00000000-0000-0000-0000-000000000000",
          "type": "registry",
          "sub_type": "",
          "kind": "meshery",
          "status": "registered",
          "user_id": "00000000-0000-0000-0000-000000000000",
          "created_at": "2025-06-22T05:57:00.309106049Z",
          "updated_at": "2025-06-22T05:57:00.309106049Z",
          "deleted_at": "0001-01-01T00:00:00Z"
        },
        "connection_id": "98027e7d-9e16-e4f0-6dbd-83f3ac0d9856",
        "category": {
          "id": "9ca27d0d-66ce-42a9-8c85-6236563f2ddb",
          "name": "Orchestration \u0026 Management"
        },
        "subCategory": "Application Definition \u0026 Image Build",
        "metadata": {
          "isAnnotation": false,
          "primaryColor": "#00B39F",
          "secondaryColor": "#00D3A9",
          "shape": "circle",
          "styleOverrides": "",
          "svgColor": "ui/public/static/img/meshmodels/meshery-core/color/meshery-core-color.svg",
          "svgComplete": "",
          "svgWhite": "ui/public/static/img/meshmodels/meshery-core/white/meshery-core-white.svg"
        },
        "model": {
          "version": "0.7.2"
        },
        "components_count": 0,
        "relationships_count": 0,
        "components": null,
        "relationships": null
      },
      "styles": {
        "position": {
          "x": 141.6443084933509,
          "y": 294.9705775682067
        },
        "primaryColor": "#326CE5",
        "secondaryColor": "#00D3A9",
        "shape": "circle",
        "svgColor": "ui/public/static/img/meshmodels/meshery-core/color/container-color.svg",
        "svgComplete": "",
        "svgWhite": "ui/public/static/img/meshmodels/meshery-core/white/container-white.svg",
        "z-index": 61
      },
      "capabilities": [],
      "status": "enabled",
      "metadata": {
        "configurationUISchema": "",
        "genealogy": "",
        "hasInvalidSchema": true,
        "instanceDetails": null,
        "isAnnotation": true,
        "isNamespaced": false,
        "published": false
      },
      "configuration": {},
      "component": {
        "version": "core.meshery.io/v1alpha1",
        "kind": "Container",
        "schema": ""
      }
    },
    {
      "id": "be0d83d1-99a6-4f4c-ac14-847f05a880d0",
      "schemaVersion": "components.meshery.io/v1beta1",
      "version": "v1.0.0",
      "displayName": "certificaterequests.cert-manager.io",
      "description": "",
      "format": "",
      "model": {
        "id": "e633cca6-b6e1-65bf-a440-0d58915e75dd",
        "schemaVersion": "models.meshery.io/v1beta1",
        "version": "v1.0.0",
        "name": "kubernetes",
        "displayName": "Kubernetes",
        "status": "enabled",
        "registrant": {
          "id": "f9a29d70-c287-426c-a90c-2a96590c8083",
          "name": "Github",
          "credential_id": "00000000-0000-0000-0000-000000000000",
          "type": "registry",
          "sub_type": "",
          "kind": "github",
          "status": "registered",
          "user_id": "00000000-0000-0000-0000-000000000000",
          "created_at": "2025-06-22T05:56:58.393994634Z",
          "updated_at": "2025-06-22T05:56:58.393994634Z",
          "deleted_at": "0001-01-01T00:00:00Z"
        },
        "connection_id": "f9a29d70-c287-426c-a90c-2a96590c8083",
        "category": {
          "id": "9ca27d0d-66ce-42a9-8c85-6236563f2ddb",
          "name": "Orchestration \u0026 Management"
        },
        "subCategory": "Scheduling \u0026 Orchestration",
        "metadata": {
          "isAnnotation": false,
          "primaryColor": "#326CE5",
          "secondaryColor": "#7aa1f0",
          "shape": "circle",
          "styleOverrides": "",
          "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/kubernetes-color.svg",
          "svgComplete": "",
          "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/kubernetes-white.svg"
        },
        "model": {
          "version": "v1.32.0-alpha.3"
        },
        "components_count": 0,
        "relationships_count": 0,
        "components": null,
        "relationships": null
      },
      "styles": {
        "position": {
          "x": 901.25,
          "y": 246.91146850585938
        },
        "primaryColor": "#326CE5",
        "secondaryColor": "#7aa1f0",
        "shape": "circle",
        "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/customresourcedefinition-color.svg",
        "svgComplete": "",
        "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/customresourcedefinition-white.svg",
        "z-index": 5
      },
      "capabilities": [],
      "status": "enabled",
      "metadata": {
        "configurationUISchema": "",
        "genealogy": "",
        "instanceDetails": null,
        "isAnnotation": false,
        "isNamespaced": false,
        "published": false,
        "source_uri": "git://github.com/kubernetes/kubernetes/master/api/openapi-spec/v3"
      },
      "configuration": {
        "metadata": {
          "labels": {
            "app": "cert-manager",
            "app.kubernetes.io/instance": "cert-manager",
            "app.kubernetes.io/name": "cert-manager",
            "app.kubernetes.io/version": "v1.14.1"
          },
          "name": "certificaterequests.cert-manager.io"
        },
        "spec": {
          "group": "cert-manager.io",
          "names": {
            "categories": [
              "cert-manager"
            ],
            "kind": "CertificateRequest",
            "listKind": "CertificateRequestList",
            "plural": "certificaterequests",
            "shortNames": [
              "cr",
              "crs"
            ],
            "singular": "certificaterequest"
          },
          "scope": "Namespaced",
          "versions": [
            {
              "additionalPrinterColumns": [
                {
                  "jsonPath": ".status.conditions[?(@.type==\"Approved\")].status",
                  "name": "Approved",
                  "type": "string"
                },
                {
                  "jsonPath": ".status.conditions[?(@.type==\"Denied\")].status",
                  "name": "Denied",
                  "type": "string"
                },
                {
                  "jsonPath": ".status.conditions[?(@.type==\"Ready\")].status",
                  "name": "Ready",
                  "type": "string"
                },
                {
                  "jsonPath": ".spec.issuerRef.name",
                  "name": "Issuer",
                  "type": "string"
                },
                {
                  "jsonPath": ".spec.username",
                  "name": "Requestor",
                  "type": "string"
                },
                {
                  "jsonPath": ".status.conditions[?(@.type==\"Ready\")].message",
                  "name": "Status",
                  "priority": 1,
                  "type": "string"
                },
                {
                  "description": "CreationTimestamp is a timestamp representing the server time when this object was created. It is not guaranteed to be set in happens-before order across separate operations. Clients may not set this value. It is represented in RFC3339 form and is in UTC.",
                  "jsonPath": ".metadata.creationTimestamp",
                  "name": "Age",
                  "type": "date"
                }
              ],
              "name": "v1",
              "schema": {
                "openAPIV3Schema": {
                  "description": "A CertificateRequest is used to request a signed certificate from one of the configured issuers. \n All fields within the CertificateRequest's `spec` are immutable after creation. A CertificateRequest will either succeed or fail, as denoted by its `Ready` status condition and its `status.failureTime` field. \n A CertificateRequest is a one-shot resource, meaning it represents a single point in time request for a certificate and cannot be re-used.",
                  "properties": {
                    "apiVersion": {
                      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                      "type": "string"
                    },
                    "kind": {
                      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                      "type": "string"
                    },
                    "metadata": {
                      "type": "object"
                    },
                    "spec": {
                      "description": "Specification of the desired state of the CertificateRequest resource. https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status",
                      "properties": {
                        "duration": {
                          "description": "Requested 'duration' (i.e. lifetime) of the Certificate. Note that the issuer may choose to ignore the requested duration, just like any other requested attribute.",
                          "type": "string"
                        },
                        "extra": {
                          "additionalProperties": {
                            "items": {
                              "type": "string"
                            },
                            "type": "array"
                          },
                          "description": "Extra contains extra attributes of the user that created the CertificateRequest. Populated by the cert-manager webhook on creation and immutable.",
                          "type": "object"
                        },
                        "groups": {
                          "description": "Groups contains group membership of the user that created the CertificateRequest. Populated by the cert-manager webhook on creation and immutable.",
                          "items": {
                            "type": "string"
                          },
                          "type": "array",
                          "x-kubernetes-list-type": "atomic"
                        },
                        "isCA": {
                          "description": "Requested basic constraints isCA value. Note that the issuer may choose to ignore the requested isCA value, just like any other requested attribute. \n NOTE: If the CSR in the `Request` field has a BasicConstraints extension, it must have the same isCA value as specified here. \n If true, this will automatically add the `cert sign` usage to the list of requested `usages`.",
                          "type": "boolean"
                        },
                        "issuerRef": {
                          "description": "Reference to the issuer responsible for issuing the certificate. If the issuer is namespace-scoped, it must be in the same namespace as the Certificate. If the issuer is cluster-scoped, it can be used from any namespace. \n The `name` field of the reference must always be specified.",
                          "properties": {
                            "group": {
                              "description": "Group of the resource being referred to.",
                              "type": "string"
                            },
                            "kind": {
                              "description": "Kind of the resource being referred to.",
                              "type": "string"
                            },
                            "name": {
                              "description": "Name of the resource being referred to.",
                              "type": "string"
                            }
                          },
                          "required": [
                            "name"
                          ],
                          "type": "object"
                        },
                        "request": {
                          "description": "The PEM-encoded X.509 certificate signing request to be submitted to the issuer for signing. \n If the CSR has a BasicConstraints extension, its isCA attribute must match the `isCA` value of this CertificateRequest. If the CSR has a KeyUsage extension, its key usages must match the key usages in the `usages` field of this CertificateRequest. If the CSR has a ExtKeyUsage extension, its extended key usages must match the extended key usages in the `usages` field of this CertificateRequest.",
                          "format": "byte",
                          "type": "string"
                        },
                        "uid": {
                          "description": "UID contains the uid of the user that created the CertificateRequest. Populated by the cert-manager webhook on creation and immutable.",
                          "type": "string"
                        },
                        "usages": {
                          "description": "Requested key usages and extended key usages. \n NOTE: If the CSR in the `Request` field has uses the KeyUsage or ExtKeyUsage extension, these extensions must have the same values as specified here without any additional values. \n If unset, defaults to `digital signature` and `key encipherment`.",
                          "items": {
                            "description": "KeyUsage specifies valid usage contexts for keys. See: https://tools.ietf.org/html/rfc5280#section-4.2.1.3 https://tools.ietf.org/html/rfc5280#section-4.2.1.12 \n Valid KeyUsage values are as follows: \"signing\", \"digital signature\", \"content commitment\", \"key encipherment\", \"key agreement\", \"data encipherment\", \"cert sign\", \"crl sign\", \"encipher only\", \"decipher only\", \"any\", \"server auth\", \"client auth\", \"code signing\", \"email protection\", \"s/mime\", \"ipsec end system\", \"ipsec tunnel\", \"ipsec user\", \"timestamping\", \"ocsp signing\", \"microsoft sgc\", \"netscape sgc\"",
                            "enum": [
                              "signing",
                              "digital signature",
                              "content commitment",
                              "key encipherment",
                              "key agreement",
                              "data encipherment",
                              "cert sign",
                              "crl sign",
                              "encipher only",
                              "decipher only",
                              "any",
                              "server auth",
                              "client auth",
                              "code signing",
                              "email protection",
                              "s/mime",
                              "ipsec end system",
                              "ipsec tunnel",
                              "ipsec user",
                              "timestamping",
                              "ocsp signing",
                              "microsoft sgc",
                              "netscape sgc"
                            ],
                            "type": "string"
                          },
                          "type": "array"
                        },
                        "username": {
                          "description": "Username contains the name of the user that created the CertificateRequest. Populated by the cert-manager webhook on creation and immutable.",
                          "type": "string"
                        }
                      },
                      "required": [
                        "issuerRef",
                        "request"
                      ],
                      "type": "object"
                    },
                    "status": {
                      "description": "Status of the CertificateRequest. This is set and managed automatically. Read-only. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status",
                      "properties": {
                        "ca": {
                          "description": "The PEM encoded X.509 certificate of the signer, also known as the CA (Certificate Authority). This is set on a best-effort basis by different issuers. If not set, the CA is assumed to be unknown/not available.",
                          "format": "byte",
                          "type": "string"
                        },
                        "certificate": {
                          "description": "The PEM encoded X.509 certificate resulting from the certificate signing request. If not set, the CertificateRequest has either not been completed or has failed. More information on failure can be found by checking the `conditions` field.",
                          "format": "byte",
                          "type": "string"
                        },
                        "conditions": {
                          "description": "List of status conditions to indicate the status of a CertificateRequest. Known condition types are `Ready`, `InvalidRequest`, `Approved` and `Denied`.",
                          "items": {
                            "description": "CertificateRequestCondition contains condition information for a CertificateRequest.",
                            "properties": {
                              "lastTransitionTime": {
                                "description": "LastTransitionTime is the timestamp corresponding to the last status change of this condition.",
                                "format": "date-time",
                                "type": "string"
                              },
                              "message": {
                                "description": "Message is a human readable description of the details of the last transition, complementing reason.",
                                "type": "string"
                              },
                              "reason": {
                                "description": "Reason is a brief machine readable explanation for the condition's last transition.",
                                "type": "string"
                              },
                              "status": {
                                "description": "Status of the condition, one of (`True`, `False`, `Unknown`).",
                                "enum": [
                                  "True",
                                  "False",
                                  "Unknown"
                                ],
                                "type": "string"
                              },
                              "type": {
                                "description": "Type of the condition, known values are (`Ready`, `InvalidRequest`, `Approved`, `Denied`).",
                                "type": "string"
                              }
                            },
                            "required": [
                              "status",
                              "type"
                            ],
                            "type": "object"
                          },
                          "type": "array",
                          "x-kubernetes-list-map-keys": [
                            "type"
                          ],
                          "x-kubernetes-list-type": "map"
                        },
                        "failureTime": {
                          "description": "FailureTime stores the time that this CertificateRequest failed. This is used to influence garbage collection and back-off.",
                          "format": "date-time",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              },
              "served": true,
              "storage": true,
              "subresources": {
                "status": {}
              }
            }
          ]
        }
      },
      "component": {
        "version": "apiextensions.k8s.io/v1",
        "kind": "CustomResourceDefinition",
        "schema": ""
      }
    },
    {
      "id": "bd0f2d48-13a7-42dc-9e48-136a9c02fd45",
      "schemaVersion": "components.meshery.io/v1beta1",
      "version": "v1.0.0",
      "displayName": "certificates.cert-manager.io",
      "description": "",
      "format": "",
      "model": {
        "id": "e633cca6-b6e1-65bf-a440-0d58915e75dd",
        "schemaVersion": "models.meshery.io/v1beta1",
        "version": "v1.0.0",
        "name": "kubernetes",
        "displayName": "Kubernetes",
        "status": "enabled",
        "registrant": {
          "id": "f9a29d70-c287-426c-a90c-2a96590c8083",
          "name": "Github",
          "credential_id": "00000000-0000-0000-0000-000000000000",
          "type": "registry",
          "sub_type": "",
          "kind": "github",
          "status": "registered",
          "user_id": "00000000-0000-0000-0000-000000000000",
          "created_at": "2025-06-22T05:56:58.393994634Z",
          "updated_at": "2025-06-22T05:56:58.393994634Z",
          "deleted_at": "0001-01-01T00:00:00Z"
        },
        "connection_id": "f9a29d70-c287-426c-a90c-2a96590c8083",
        "category": {
          "id": "9ca27d0d-66ce-42a9-8c85-6236563f2ddb",
          "name": "Orchestration \u0026 Management"
        },
        "subCategory": "Scheduling \u0026 Orchestration",
        "metadata": {
          "isAnnotation": false,
          "primaryColor": "#326CE5",
          "secondaryColor": "#7aa1f0",
          "shape": "circle",
          "styleOverrides": "",
          "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/kubernetes-color.svg",
          "svgComplete": "",
          "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/kubernetes-white.svg"
        },
        "model": {
          "version": "v1.32.0-alpha.3"
        },
        "components_count": 0,
        "relationships_count": 0,
        "components": null,
        "relationships": null
      },
      "styles": {
        "position": {
          "x": 443.25,
          "y": 562.9114685058594
        },
        "primaryColor": "#326CE5",
        "secondaryColor": "#7aa1f0",
        "shape": "circle",
        "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/customresourcedefinition-color.svg",
        "svgComplete": "",
        "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/customresourcedefinition-white.svg",
        "z-index": 6
      },
      "capabilities": [],
      "status": "enabled",
      "metadata": {
        "configurationUISchema": "",
        "genealogy": "",
        "instanceDetails": null,
        "isAnnotation": false,
        "isNamespaced": false,
        "published": false,
        "source_uri": "git://github.com/kubernetes/kubernetes/master/api/openapi-spec/v3"
      },
      "configuration": {
        "metadata": {
          "labels": {
            "app": "cert-manager",
            "app.kubernetes.io/instance": "cert-manager",
            "app.kubernetes.io/name": "cert-manager",
            "app.kubernetes.io/version": "v1.14.1"
          },
          "name": "certificates.cert-manager.io"
        },
        "spec": {
          "group": "cert-manager.io",
          "names": {
            "categories": [
              "cert-manager"
            ],
            "kind": "Certificate",
            "listKind": "CertificateList",
            "plural": "certificates",
            "shortNames": [
              "cert",
              "certs"
            ],
            "singular": "certificate"
          },
          "scope": "Namespaced",
          "versions": [
            {
              "additionalPrinterColumns": [
                {
                  "jsonPath": ".status.conditions[?(@.type==\"Ready\")].status",
                  "name": "Ready",
                  "type": "string"
                },
                {
                  "jsonPath": ".spec.secretName",
                  "name": "Secret",
                  "type": "string"
                },
                {
                  "jsonPath": ".spec.issuerRef.name",
                  "name": "Issuer",
                  "priority": 1,
                  "type": "string"
                },
                {
                  "jsonPath": ".status.conditions[?(@.type==\"Ready\")].message",
                  "name": "Status",
                  "priority": 1,
                  "type": "string"
                },
                {
                  "description": "CreationTimestamp is a timestamp representing the server time when this object was created. It is not guaranteed to be set in happens-before order across separate operations. Clients may not set this value. It is represented in RFC3339 form and is in UTC.",
                  "jsonPath": ".metadata.creationTimestamp",
                  "name": "Age",
                  "type": "date"
                }
              ],
              "name": "v1",
              "schema": {
                "openAPIV3Schema": {
                  "description": "A Certificate resource should be created to ensure an up to date and signed X.509 certificate is stored in the Kubernetes Secret resource named in `spec.secretName`. \n The stored certificate will be renewed before it expires (as configured by `spec.renewBefore`).",
                  "properties": {
                    "apiVersion": {
                      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                      "type": "string"
                    },
                    "kind": {
                      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                      "type": "string"
                    },
                    "metadata": {
                      "type": "object"
                    },
                    "spec": {
                      "description": "Specification of the desired state of the Certificate resource. https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status",
                      "properties": {
                        "additionalOutputFormats": {
                          "description": "Defines extra output formats of the private key and signed certificate chain to be written to this Certificate's target Secret. \n This is an Alpha Feature and is only enabled with the `--feature-gates=AdditionalCertificateOutputFormats=true` option set on both the controller and webhook components.",
                          "items": {
                            "description": "CertificateAdditionalOutputFormat defines an additional output format of a Certificate resource. These contain supplementary data formats of the signed certificate chain and paired private key.",
                            "properties": {
                              "type": {
                                "description": "Type is the name of the format type that should be written to the Certificate's target Secret.",
                                "enum": [
                                  "DER",
                                  "CombinedPEM"
                                ],
                                "type": "string"
                              }
                            },
                            "required": [
                              "type"
                            ],
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "commonName": {
                          "description": "Requested common name X509 certificate subject attribute. More info: https://datatracker.ietf.org/doc/html/rfc5280#section-4.1.2.6 NOTE: TLS clients will ignore this value when any subject alternative name is set (see https://tools.ietf.org/html/rfc6125#section-6.4.4). \n Should have a length of 64 characters or fewer to avoid generating invalid CSRs. Cannot be set if the `literalSubject` field is set.",
                          "type": "string"
                        },
                        "dnsNames": {
                          "description": "Requested DNS subject alternative names.",
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        },
                        "duration": {
                          "description": "Requested 'duration' (i.e. lifetime) of the Certificate. Note that the issuer may choose to ignore the requested duration, just like any other requested attribute. \n If unset, this defaults to 90 days. Minimum accepted duration is 1 hour. Value must be in units accepted by Go time.ParseDuration https://golang.org/pkg/time/#ParseDuration.",
                          "type": "string"
                        },
                        "emailAddresses": {
                          "description": "Requested email subject alternative names.",
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        },
                        "encodeUsagesInRequest": {
                          "description": "Whether the KeyUsage and ExtKeyUsage extensions should be set in the encoded CSR. \n This option defaults to true, and should only be disabled if the target issuer does not support CSRs with these X509 KeyUsage/ ExtKeyUsage extensions.",
                          "type": "boolean"
                        },
                        "ipAddresses": {
                          "description": "Requested IP address subject alternative names.",
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        },
                        "isCA": {
                          "description": "Requested basic constraints isCA value. The isCA value is used to set the `isCA` field on the created CertificateRequest resources. Note that the issuer may choose to ignore the requested isCA value, just like any other requested attribute. \n If true, this will automatically add the `cert sign` usage to the list of requested `usages`.",
                          "type": "boolean"
                        },
                        "issuerRef": {
                          "description": "Reference to the issuer responsible for issuing the certificate. If the issuer is namespace-scoped, it must be in the same namespace as the Certificate. If the issuer is cluster-scoped, it can be used from any namespace. \n The `name` field of the reference must always be specified.",
                          "properties": {
                            "group": {
                              "description": "Group of the resource being referred to.",
                              "type": "string"
                            },
                            "kind": {
                              "description": "Kind of the resource being referred to.",
                              "type": "string"
                            },
                            "name": {
                              "description": "Name of the resource being referred to.",
                              "type": "string"
                            }
                          },
                          "required": [
                            "name"
                          ],
                          "type": "object"
                        },
                        "keystores": {
                          "description": "Additional keystore output formats to be stored in the Certificate's Secret.",
                          "properties": {
                            "jks": {
                              "description": "JKS configures options for storing a JKS keystore in the `spec.secretName` Secret resource.",
                              "properties": {
                                "create": {
                                  "description": "Create enables JKS keystore creation for the Certificate. If true, a file named `keystore.jks` will be created in the target Secret resource, encrypted using the password stored in `passwordSecretRef`. The keystore file will be updated immediately. If the issuer provided a CA certificate, a file named `truststore.jks` will also be created in the target Secret resource, encrypted using the password stored in `passwordSecretRef` containing the issuing Certificate Authority",
                                  "type": "boolean"
                                },
                                "passwordSecretRef": {
                                  "description": "PasswordSecretRef is a reference to a key in a Secret resource containing the password used to encrypt the JKS keystore.",
                                  "properties": {
                                    "key": {
                                      "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.",
                                      "type": "string"
                                    },
                                    "name": {
                                      "description": "Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "name"
                                  ],
                                  "type": "object"
                                }
                              },
                              "required": [
                                "create",
                                "passwordSecretRef"
                              ],
                              "type": "object"
                            },
                            "pkcs12": {
                              "description": "PKCS12 configures options for storing a PKCS12 keystore in the `spec.secretName` Secret resource.",
                              "properties": {
                                "create": {
                                  "description": "Create enables PKCS12 keystore creation for the Certificate. If true, a file named `keystore.p12` will be created in the target Secret resource, encrypted using the password stored in `passwordSecretRef`. The keystore file will be updated immediately. If the issuer provided a CA certificate, a file named `truststore.p12` will also be created in the target Secret resource, encrypted using the password stored in `passwordSecretRef` containing the issuing Certificate Authority",
                                  "type": "boolean"
                                },
                                "passwordSecretRef": {
                                  "description": "PasswordSecretRef is a reference to a key in a Secret resource containing the password used to encrypt the PKCS12 keystore.",
                                  "properties": {
                                    "key": {
                                      "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.",
                                      "type": "string"
                                    },
                                    "name": {
                                      "description": "Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "name"
                                  ],
                                  "type": "object"
                                },
                                "profile": {
                                  "description": "Profile specifies the key and certificate encryption algorithms and the HMAC algorithm used to create the PKCS12 keystore. Default value is `LegacyRC2` for backward compatibility. \n If provided, allowed values are: `LegacyRC2`: Deprecated. Not supported by default in OpenSSL 3 or Java 20. `LegacyDES`: Less secure algorithm. Use this option for maximal compatibility. `Modern2023`: Secure algorithm. Use this option in case you have to always use secure algorithms (eg. because of company policy). Please note that the security of the algorithm is not that important in reality, because the unencrypted certificate and private key are also stored in the Secret.",
                                  "enum": [
                                    "LegacyRC2",
                                    "LegacyDES",
                                    "Modern2023"
                                  ],
                                  "type": "string"
                                }
                              },
                              "required": [
                                "create",
                                "passwordSecretRef"
                              ],
                              "type": "object"
                            }
                          },
                          "type": "object"
                        },
                        "literalSubject": {
                          "description": "Requested X.509 certificate subject, represented using the LDAP \"String Representation of a Distinguished Name\" [1]. Important: the LDAP string format also specifies the order of the attributes in the subject, this is important when issuing certs for LDAP authentication. Example: `CN=foo,DC=corp,DC=example,DC=com` More info [1]: https://datatracker.ietf.org/doc/html/rfc4514 More info: https://github.com/cert-manager/cert-manager/issues/3203 More info: https://github.com/cert-manager/cert-manager/issues/4424 \n Cannot be set if the `subject` or `commonName` field is set. This is an Alpha Feature and is only enabled with the `--feature-gates=LiteralCertificateSubject=true` option set on both the controller and webhook components.",
                          "type": "string"
                        },
                        "nameConstraints": {
                          "description": "x.509 certificate NameConstraint extension which MUST NOT be used in a non-CA certificate. More Info: https://datatracker.ietf.org/doc/html/rfc5280#section-4.2.1.10 \n This is an Alpha Feature and is only enabled with the `--feature-gates=NameConstraints=true` option set on both the controller and webhook components.",
                          "properties": {
                            "critical": {
                              "description": "if true then the name constraints are marked critical.",
                              "type": "boolean"
                            },
                            "excluded": {
                              "description": "Excluded contains the constraints which must be disallowed. Any name matching a restriction in the excluded field is invalid regardless of information appearing in the permitted",
                              "properties": {
                                "dnsDomains": {
                                  "description": "DNSDomains is a list of DNS domains that are permitted or excluded.",
                                  "items": {
                                    "type": "string"
                                  },
                                  "type": "array"
                                },
                                "emailAddresses": {
                                  "description": "EmailAddresses is a list of Email Addresses that are permitted or excluded.",
                                  "items": {
                                    "type": "string"
                                  },
                                  "type": "array"
                                },
                                "ipRanges": {
                                  "description": "IPRanges is a list of IP Ranges that are permitted or excluded. This should be a valid CIDR notation.",
                                  "items": {
                                    "type": "string"
                                  },
                                  "type": "array"
                                },
                                "uriDomains": {
                                  "description": "URIDomains is a list of URI domains that are permitted or excluded.",
                                  "items": {
                                    "type": "string"
                                  },
                                  "type": "array"
                                }
                              },
                              "type": "object"
                            },
                            "permitted": {
                              "description": "Permitted contains the constraints in which the names must be located.",
                              "properties": {
                                "dnsDomains": {
                                  "description": "DNSDomains is a list of DNS domains that are permitted or excluded.",
                                  "items": {
                                    "type": "string"
                                  },
                                  "type": "array"
                                },
                                "emailAddresses": {
                                  "description": "EmailAddresses is a list of Email Addresses that are permitted or excluded.",
                                  "items": {
                                    "type": "string"
                                  },
                                  "type": "array"
                                },
                                "ipRanges": {
                                  "description": "IPRanges is a list of IP Ranges that are permitted or excluded. This should be a valid CIDR notation.",
                                  "items": {
                                    "type": "string"
                                  },
                                  "type": "array"
                                },
                                "uriDomains": {
                                  "description": "URIDomains is a list of URI domains that are permitted or excluded.",
                                  "items": {
                                    "type": "string"
                                  },
                                  "type": "array"
                                }
                              },
                              "type": "object"
                            }
                          },
                          "type": "object"
                        },
                        "otherNames": {
                          "description": "`otherNames` is an escape hatch for SAN that allows any type. We currently restrict the support to string like otherNames, cf RFC 5280 p 37 Any UTF8 String valued otherName can be passed with by setting the keys oid: x.x.x.x and UTF8Value: somevalue for `otherName`. Most commonly this would be UPN set with oid: 1.3.6.1.4.1.311.20.2.3 You should ensure that any OID passed is valid for the UTF8String type as we do not explicitly validate this.",
                          "items": {
                            "properties": {
                              "oid": {
                                "description": "OID is the object identifier for the otherName SAN. The object identifier must be expressed as a dotted string, for example, \"1.2.840.113556.1.4.221\".",
                                "type": "string"
                              },
                              "utf8Value": {
                                "description": "utf8Value is the string value of the otherName SAN. The utf8Value accepts any valid UTF8 string to set as value for the otherName SAN.",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "privateKey": {
                          "description": "Private key options. These include the key algorithm and size, the used encoding and the rotation policy.",
                          "properties": {
                            "algorithm": {
                              "description": "Algorithm is the private key algorithm of the corresponding private key for this certificate. \n If provided, allowed values are either `RSA`, `ECDSA` or `Ed25519`. If `algorithm` is specified and `size` is not provided, key size of 2048 will be used for `RSA` key algorithm and key size of 256 will be used for `ECDSA` key algorithm. key size is ignored when using the `Ed25519` key algorithm.",
                              "enum": [
                                "RSA",
                                "ECDSA",
                                "Ed25519"
                              ],
                              "type": "string"
                            },
                            "encoding": {
                              "description": "The private key cryptography standards (PKCS) encoding for this certificate's private key to be encoded in. \n If provided, allowed values are `PKCS1` and `PKCS8` standing for PKCS#1 and PKCS#8, respectively. Defaults to `PKCS1` if not specified.",
                              "enum": [
                                "PKCS1",
                                "PKCS8"
                              ],
                              "type": "string"
                            },
                            "rotationPolicy": {
                              "description": "RotationPolicy controls how private keys should be regenerated when a re-issuance is being processed. \n If set to `Never`, a private key will only be generated if one does not already exist in the target `spec.secretName`. If one does exists but it does not have the correct algorithm or size, a warning will be raised to await user intervention. If set to `Always`, a private key matching the specified requirements will be generated whenever a re-issuance occurs. Default is `Never` for backward compatibility.",
                              "enum": [
                                "Never",
                                "Always"
                              ],
                              "type": "string"
                            },
                            "size": {
                              "description": "Size is the key bit size of the corresponding private key for this certificate. \n If `algorithm` is set to `RSA`, valid values are `2048`, `4096` or `8192`, and will default to `2048` if not specified. If `algorithm` is set to `ECDSA`, valid values are `256`, `384` or `521`, and will default to `256` if not specified. If `algorithm` is set to `Ed25519`, Size is ignored. No other values are allowed.",
                              "type": "integer"
                            }
                          },
                          "type": "object"
                        },
                        "renewBefore": {
                          "description": "How long before the currently issued certificate's expiry cert-manager should renew the certificate. For example, if a certificate is valid for 60 minutes, and `renewBefore=10m`, cert-manager will begin to attempt to renew the certificate 50 minutes after it was issued (i.e. when there are 10 minutes remaining until the certificate is no longer valid). \n NOTE: The actual lifetime of the issued certificate is used to determine the renewal time. If an issuer returns a certificate with a different lifetime than the one requested, cert-manager will use the lifetime of the issued certificate. \n If unset, this defaults to 1/3 of the issued certificate's lifetime. Minimum accepted value is 5 minutes. Value must be in units accepted by Go time.ParseDuration https://golang.org/pkg/time/#ParseDuration.",
                          "type": "string"
                        },
                        "revisionHistoryLimit": {
                          "description": "The maximum number of CertificateRequest revisions that are maintained in the Certificate's history. Each revision represents a single `CertificateRequest` created by this Certificate, either when it was created, renewed, or Spec was changed. Revisions will be removed by oldest first if the number of revisions exceeds this number. \n If set, revisionHistoryLimit must be a value of `1` or greater. If unset (`nil`), revisions will not be garbage collected. Default value is `nil`.",
                          "format": "int32",
                          "type": "integer"
                        },
                        "secretName": {
                          "description": "Name of the Secret resource that will be automatically created and managed by this Certificate resource. It will be populated with a private key and certificate, signed by the denoted issuer. The Secret resource lives in the same namespace as the Certificate resource.",
                          "type": "string"
                        },
                        "secretTemplate": {
                          "description": "Defines annotations and labels to be copied to the Certificate's Secret. Labels and annotations on the Secret will be changed as they appear on the SecretTemplate when added or removed. SecretTemplate annotations are added in conjunction with, and cannot overwrite, the base set of annotations cert-manager sets on the Certificate's Secret.",
                          "properties": {
                            "annotations": {
                              "additionalProperties": {
                                "type": "string"
                              },
                              "description": "Annotations is a key value map to be copied to the target Kubernetes Secret.",
                              "type": "object"
                            },
                            "labels": {
                              "additionalProperties": {
                                "type": "string"
                              },
                              "description": "Labels is a key value map to be copied to the target Kubernetes Secret.",
                              "type": "object"
                            }
                          },
                          "type": "object"
                        },
                        "subject": {
                          "description": "Requested set of X509 certificate subject attributes. More info: https://datatracker.ietf.org/doc/html/rfc5280#section-4.1.2.6 \n The common name attribute is specified separately in the `commonName` field. Cannot be set if the `literalSubject` field is set.",
                          "properties": {
                            "countries": {
                              "description": "Countries to be used on the Certificate.",
                              "items": {
                                "type": "string"
                              },
                              "type": "array"
                            },
                            "localities": {
                              "description": "Cities to be used on the Certificate.",
                              "items": {
                                "type": "string"
                              },
                              "type": "array"
                            },
                            "organizationalUnits": {
                              "description": "Organizational Units to be used on the Certificate.",
                              "items": {
                                "type": "string"
                              },
                              "type": "array"
                            },
                            "organizations": {
                              "description": "Organizations to be used on the Certificate.",
                              "items": {
                                "type": "string"
                              },
                              "type": "array"
                            },
                            "postalCodes": {
                              "description": "Postal codes to be used on the Certificate.",
                              "items": {
                                "type": "string"
                              },
                              "type": "array"
                            },
                            "provinces": {
                              "description": "State/Provinces to be used on the Certificate.",
                              "items": {
                                "type": "string"
                              },
                              "type": "array"
                            },
                            "serialNumber": {
                              "description": "Serial number to be used on the Certificate.",
                              "type": "string"
                            },
                            "streetAddresses": {
                              "description": "Street addresses to be used on the Certificate.",
                              "items": {
                                "type": "string"
                              },
                              "type": "array"
                            }
                          },
                          "type": "object"
                        },
                        "uris": {
                          "description": "Requested URI subject alternative names.",
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        },
                        "usages": {
                          "description": "Requested key usages and extended key usages. These usages are used to set the `usages` field on the created CertificateRequest resources. If `encodeUsagesInRequest` is unset or set to `true`, the usages will additionally be encoded in the `request` field which contains the CSR blob. \n If unset, defaults to `digital signature` and `key encipherment`.",
                          "items": {
                            "description": "KeyUsage specifies valid usage contexts for keys. See: https://tools.ietf.org/html/rfc5280#section-4.2.1.3 https://tools.ietf.org/html/rfc5280#section-4.2.1.12 \n Valid KeyUsage values are as follows: \"signing\", \"digital signature\", \"content commitment\", \"key encipherment\", \"key agreement\", \"data encipherment\", \"cert sign\", \"crl sign\", \"encipher only\", \"decipher only\", \"any\", \"server auth\", \"client auth\", \"code signing\", \"email protection\", \"s/mime\", \"ipsec end system\", \"ipsec tunnel\", \"ipsec user\", \"timestamping\", \"ocsp signing\", \"microsoft sgc\", \"netscape sgc\"",
                            "enum": [
                              "signing",
                              "digital signature",
                              "content commitment",
                              "key encipherment",
                              "key agreement",
                              "data encipherment",
                              "cert sign",
                              "crl sign",
                              "encipher only",
                              "decipher only",
                              "any",
                              "server auth",
                              "client auth",
                              "code signing",
                              "email protection",
                              "s/mime",
                              "ipsec end system",
                              "ipsec tunnel",
                              "ipsec user",
                              "timestamping",
                              "ocsp signing",
                              "microsoft sgc",
                              "netscape sgc"
                            ],
                            "type": "string"
                          },
                          "type": "array"
                        }
                      },
                      "required": [
                        "issuerRef",
                        "secretName"
                      ],
                      "type": "object"
                    },
                    "status": {
                      "description": "Status of the Certificate. This is set and managed automatically. Read-only. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status",
                      "properties": {
                        "conditions": {
                          "description": "List of status conditions to indicate the status of certificates. Known condition types are `Ready` and `Issuing`.",
                          "items": {
                            "description": "CertificateCondition contains condition information for an Certificate.",
                            "properties": {
                              "lastTransitionTime": {
                                "description": "LastTransitionTime is the timestamp corresponding to the last status change of this condition.",
                                "format": "date-time",
                                "type": "string"
                              },
                              "message": {
                                "description": "Message is a human readable description of the details of the last transition, complementing reason.",
                                "type": "string"
                              },
                              "observedGeneration": {
                                "description": "If set, this represents the .metadata.generation that the condition was set based upon. For instance, if .metadata.generation is currently 12, but the .status.condition[x].observedGeneration is 9, the condition is out of date with respect to the current state of the Certificate.",
                                "format": "int64",
                                "type": "integer"
                              },
                              "reason": {
                                "description": "Reason is a brief machine readable explanation for the condition's last transition.",
                                "type": "string"
                              },
                              "status": {
                                "description": "Status of the condition, one of (`True`, `False`, `Unknown`).",
                                "enum": [
                                  "True",
                                  "False",
                                  "Unknown"
                                ],
                                "type": "string"
                              },
                              "type": {
                                "description": "Type of the condition, known values are (`Ready`, `Issuing`).",
                                "type": "string"
                              }
                            },
                            "required": [
                              "status",
                              "type"
                            ],
                            "type": "object"
                          },
                          "type": "array",
                          "x-kubernetes-list-map-keys": [
                            "type"
                          ],
                          "x-kubernetes-list-type": "map"
                        },
                        "failedIssuanceAttempts": {
                          "description": "The number of continuous failed issuance attempts up till now. This field gets removed (if set) on a successful issuance and gets set to 1 if unset and an issuance has failed. If an issuance has failed, the delay till the next issuance will be calculated using formula time.Hour * 2 ^ (failedIssuanceAttempts - 1).",
                          "type": "integer"
                        },
                        "lastFailureTime": {
                          "description": "LastFailureTime is set only if the lastest issuance for this Certificate failed and contains the time of the failure. If an issuance has failed, the delay till the next issuance will be calculated using formula time.Hour * 2 ^ (failedIssuanceAttempts - 1). If the latest issuance has succeeded this field will be unset.",
                          "format": "date-time",
                          "type": "string"
                        },
                        "nextPrivateKeySecretName": {
                          "description": "The name of the Secret resource containing the private key to be used for the next certificate iteration. The keymanager controller will automatically set this field if the `Issuing` condition is set to `True`. It will automatically unset this field when the Issuing condition is not set or False.",
                          "type": "string"
                        },
                        "notAfter": {
                          "description": "The expiration time of the certificate stored in the secret named by this resource in `spec.secretName`.",
                          "format": "date-time",
                          "type": "string"
                        },
                        "notBefore": {
                          "description": "The time after which the certificate stored in the secret named by this resource in `spec.secretName` is valid.",
                          "format": "date-time",
                          "type": "string"
                        },
                        "renewalTime": {
                          "description": "RenewalTime is the time at which the certificate will be next renewed. If not set, no upcoming renewal is scheduled.",
                          "format": "date-time",
                          "type": "string"
                        },
                        "revision": {
                          "description": "The current 'revision' of the certificate as issued. \n When a CertificateRequest resource is created, it will have the `cert-manager.io/certificate-revision` set to one greater than the current value of this field. \n Upon issuance, this field will be set to the value of the annotation on the CertificateRequest resource used to issue the certificate. \n Persisting the value on the CertificateRequest resource allows the certificates controller to know whether a request is part of an old issuance or if it is part of the ongoing revision's issuance by checking if the revision value in the annotation is greater than this field.",
                          "type": "integer"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              },
              "served": true,
              "storage": true,
              "subresources": {
                "status": {}
              }
            }
          ]
        }
      },
      "component": {
        "version": "apiextensions.k8s.io/v1",
        "kind": "CustomResourceDefinition",
        "schema": ""
      }
    },
    {
      "id": "738d3561-1d95-452d-be03-cbbf10418a5f",
      "schemaVersion": "components.meshery.io/v1beta1",
      "version": "v1.0.0",
      "displayName": "challenges.acme.cert-manager.io",
      "description": "",
      "format": "",
      "model": {
        "id": "e633cca6-b6e1-65bf-a440-0d58915e75dd",
        "schemaVersion": "models.meshery.io/v1beta1",
        "version": "v1.0.0",
        "name": "kubernetes",
        "displayName": "Kubernetes",
        "status": "enabled",
        "registrant": {
          "id": "f9a29d70-c287-426c-a90c-2a96590c8083",
          "name": "Github",
          "credential_id": "00000000-0000-0000-0000-000000000000",
          "type": "registry",
          "sub_type": "",
          "kind": "github",
          "status": "registered",
          "user_id": "00000000-0000-0000-0000-000000000000",
          "created_at": "2025-06-22T05:56:58.393994634Z",
          "updated_at": "2025-06-22T05:56:58.393994634Z",
          "deleted_at": "0001-01-01T00:00:00Z"
        },
        "connection_id": "f9a29d70-c287-426c-a90c-2a96590c8083",
        "category": {
          "id": "9ca27d0d-66ce-42a9-8c85-6236563f2ddb",
          "name": "Orchestration \u0026 Management"
        },
        "subCategory": "Scheduling \u0026 Orchestration",
        "metadata": {
          "isAnnotation": false,
          "primaryColor": "#326CE5",
          "secondaryColor": "#7aa1f0",
          "shape": "circle",
          "styleOverrides": "",
          "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/kubernetes-color.svg",
          "svgComplete": "",
          "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/kubernetes-white.svg"
        },
        "model": {
          "version": "v1.32.0-alpha.3"
        },
        "components_count": 0,
        "relationships_count": 0,
        "components": null,
        "relationships": null
      },
      "styles": {
        "position": {
          "x": 535.25,
          "y": 562.9114685058594
        },
        "primaryColor": "#326CE5",
        "secondaryColor": "#7aa1f0",
        "shape": "circle",
        "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/customresourcedefinition-color.svg",
        "svgComplete": "",
        "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/customresourcedefinition-white.svg",
        "z-index": 7
      },
      "capabilities": [],
      "status": "enabled",
      "metadata": {
        "configurationUISchema": "",
        "genealogy": "",
        "instanceDetails": null,
        "isAnnotation": false,
        "isNamespaced": false,
        "published": false,
        "source_uri": "git://github.com/kubernetes/kubernetes/master/api/openapi-spec/v3"
      },
      "configuration": {
        "metadata": {
          "labels": {
            "app": "cert-manager",
            "app.kubernetes.io/instance": "cert-manager",
            "app.kubernetes.io/name": "cert-manager",
            "app.kubernetes.io/version": "v1.14.1"
          },
          "name": "challenges.acme.cert-manager.io"
        },
        "spec": {
          "group": "acme.cert-manager.io",
          "names": {
            "categories": [
              "cert-manager",
              "cert-manager-acme"
            ],
            "kind": "Challenge",
            "listKind": "ChallengeList",
            "plural": "challenges",
            "singular": "challenge"
          },
          "scope": "Namespaced",
          "versions": [
            {
              "additionalPrinterColumns": [
                {
                  "jsonPath": ".status.state",
                  "name": "State",
                  "type": "string"
                },
                {
                  "jsonPath": ".spec.dnsName",
                  "name": "Domain",
                  "type": "string"
                },
                {
                  "jsonPath": ".status.reason",
                  "name": "Reason",
                  "priority": 1,
                  "type": "string"
                },
                {
                  "description": "CreationTimestamp is a timestamp representing the server time when this object was created. It is not guaranteed to be set in happens-before order across separate operations. Clients may not set this value. It is represented in RFC3339 form and is in UTC.",
                  "jsonPath": ".metadata.creationTimestamp",
                  "name": "Age",
                  "type": "date"
                }
              ],
              "name": "v1",
              "schema": {
                "openAPIV3Schema": {
                  "description": "Challenge is a type to represent a Challenge request with an ACME server",
                  "properties": {
                    "apiVersion": {
                      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                      "type": "string"
                    },
                    "kind": {
                      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                      "type": "string"
                    },
                    "metadata": {
                      "type": "object"
                    },
                    "spec": {
                      "properties": {
                        "authorizationURL": {
                          "description": "The URL to the ACME Authorization resource that this challenge is a part of.",
                          "type": "string"
                        },
                        "dnsName": {
                          "description": "dnsName is the identifier that this challenge is for, e.g. example.com. If the requested DNSName is a 'wildcard', this field MUST be set to the non-wildcard domain, e.g. for `*.example.com`, it must be `example.com`.",
                          "type": "string"
                        },
                        "issuerRef": {
                          "description": "References a properly configured ACME-type Issuer which should be used to create this Challenge. If the Issuer does not exist, processing will be retried. If the Issuer is not an 'ACME' Issuer, an error will be returned and the Challenge will be marked as failed.",
                          "properties": {
                            "group": {
                              "description": "Group of the resource being referred to.",
                              "type": "string"
                            },
                            "kind": {
                              "description": "Kind of the resource being referred to.",
                              "type": "string"
                            },
                            "name": {
                              "description": "Name of the resource being referred to.",
                              "type": "string"
                            }
                          },
                          "required": [
                            "name"
                          ],
                          "type": "object"
                        },
                        "key": {
                          "description": "The ACME challenge key for this challenge For HTTP01 challenges, this is the value that must be responded with to complete the HTTP01 challenge in the format: `\u003cprivate key JWK thumbprint\u003e.\u003ckey from acme server for challenge\u003e`. For DNS01 challenges, this is the base64 encoded SHA256 sum of the `\u003cprivate key JWK thumbprint\u003e.\u003ckey from acme server for challenge\u003e` text that must be set as the TXT record content.",
                          "type": "string"
                        },
                        "solver": {
                          "description": "Contains the domain solving configuration that should be used to solve this challenge resource.",
                          "properties": {
                            "dns01": {
                              "description": "Configures cert-manager to attempt to complete authorizations by performing the DNS01 challenge flow.",
                              "properties": {
                                "acmeDNS": {
                                  "description": "Use the 'ACME DNS' (https://github.com/joohoi/acme-dns) API to manage DNS01 challenge records.",
                                  "properties": {
                                    "accountSecretRef": {
                                      "description": "A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.",
                                      "properties": {
                                        "key": {
                                          "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.",
                                          "type": "string"
                                        },
                                        "name": {
                                          "description": "Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "name"
                                      ],
                                      "type": "object"
                                    },
                                    "host": {
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "accountSecretRef",
                                    "host"
                                  ],
                                  "type": "object"
                                },
                                "akamai": {
                                  "description": "Use the Akamai DNS zone management API to manage DNS01 challenge records.",
                                  "properties": {
                                    "accessTokenSecretRef": {
                                      "description": "A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.",
                                      "properties": {
                                        "key": {
                                          "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.",
                                          "type": "string"
                                        },
                                        "name": {
                                          "description": "Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "name"
                                      ],
                                      "type": "object"
                                    },
                                    "clientSecretSecretRef": {
                                      "description": "A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.",
                                      "properties": {
                                        "key": {
                                          "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.",
                                          "type": "string"
                                        },
                                        "name": {
                                          "description": "Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "name"
                                      ],
                                      "type": "object"
                                    },
                                    "clientTokenSecretRef": {
                                      "description": "A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.",
                                      "properties": {
                                        "key": {
                                          "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.",
                                          "type": "string"
                                        },
                                        "name": {
                                          "description": "Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "name"
                                      ],
                                      "type": "object"
                                    },
                                    "serviceConsumerDomain": {
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "accessTokenSecretRef",
                                    "clientSecretSecretRef",
                                    "clientTokenSecretRef",
                                    "serviceConsumerDomain"
                                  ],
                                  "type": "object"
                                },
                                "azureDNS": {
                                  "description": "Use the Microsoft Azure DNS API to manage DNS01 challenge records.",
                                  "properties": {
                                    "clientID": {
                                      "description": "Auth: Azure Service Principal: The ClientID of the Azure Service Principal used to authenticate with Azure DNS. If set, ClientSecret and TenantID must also be set.",
                                      "type": "string"
                                    },
                                    "clientSecretSecretRef": {
                                      "description": "Auth: Azure Service Principal: A reference to a Secret containing the password associated with the Service Principal. If set, ClientID and TenantID must also be set.",
                                      "properties": {
                                        "key": {
                                          "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.",
                                          "type": "string"
                                        },
                                        "name": {
                                          "description": "Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "name"
                                      ],
                                      "type": "object"
                                    },
                                    "environment": {
                                      "description": "name of the Azure environment (default AzurePublicCloud)",
                                      "enum": [
                                        "AzurePublicCloud",
                                        "AzureChinaCloud",
                                        "AzureGermanCloud",
                                        "AzureUSGovernmentCloud"
                                      ],
                                      "type": "string"
                                    },
                                    "hostedZoneName": {
                                      "description": "name of the DNS zone that should be used",
                                      "type": "string"
                                    },
                                    "managedIdentity": {
                                      "description": "Auth: Azure Workload Identity or Azure Managed Service Identity: Settings to enable Azure Workload Identity or Azure Managed Service Identity If set, ClientID, ClientSecret and TenantID must not be set.",
                                      "properties": {
                                        "clientID": {
                                          "description": "client ID of the managed identity, can not be used at the same time as resourceID",
                                          "type": "string"
                                        },
                                        "resourceID": {
                                          "description": "resource ID of the managed identity, can not be used at the same time as clientID Cannot be used for Azure Managed Service Identity",
                                          "type": "string"
                                        }
                                      },
                                      "type": "object"
                                    },
                                    "resourceGroupName": {
                                      "description": "resource group the DNS zone is located in",
                                      "type": "string"
                                    },
                                    "subscriptionID": {
                                      "description": "ID of the Azure subscription",
                                      "type": "string"
                                    },
                                    "tenantID": {
                                      "description": "Auth: Azure Service Principal: The TenantID of the Azure Service Principal used to authenticate with Azure DNS. If set, ClientID and ClientSecret must also be set.",
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "resourceGroupName",
                                    "subscriptionID"
                                  ],
                                  "type": "object"
                                },
                                "cloudDNS": {
                                  "description": "Use the Google Cloud DNS API to manage DNS01 challenge records.",
                                  "properties": {
                                    "hostedZoneName": {
                                      "description": "HostedZoneName is an optional field that tells cert-manager in which Cloud DNS zone the challenge record has to be created. If left empty cert-manager will automatically choose a zone.",
                                      "type": "string"
                                    },
                                    "project": {
                                      "type": "string"
                                    },
                                    "serviceAccountSecretRef": {
                                      "description": "A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.",
                                      "properties": {
                                        "key": {
                                          "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.",
                                          "type": "string"
                                        },
                                        "name": {
                                          "description": "Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "name"
                                      ],
                                      "type": "object"
                                    }
                                  },
                                  "required": [
                                    "project"
                                  ],
                                  "type": "object"
                                },
                                "cloudflare": {
                                  "description": "Use the Cloudflare API to manage DNS01 challenge records.",
                                  "properties": {
                                    "apiKeySecretRef": {
                                      "description": "API key to use to authenticate with Cloudflare. Note: using an API token to authenticate is now the recommended method as it allows greater control of permissions.",
                                      "properties": {
                                        "key": {
                                          "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.",
                                          "type": "string"
                                        },
                                        "name": {
                                          "description": "Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "name"
                                      ],
                                      "type": "object"
                                    },
                                    "apiTokenSecretRef": {
                                      "description": "API token used to authenticate with Cloudflare.",
                                      "properties": {
                                        "key": {
                                          "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.",
                                          "type": "string"
                                        },
                                        "name": {
                                          "description": "Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "name"
                                      ],
                                      "type": "object"
                                    },
                                    "email": {
                                      "description": "Email of the account, only required when using API key based authentication.",
                                      "type": "string"
                                    }
                                  },
                                  "type": "object"
                                },
                                "cnameStrategy": {
                                  "description": "CNAMEStrategy configures how the DNS01 provider should handle CNAME records when found in DNS zones.",
                                  "enum": [
                                    "None",
                                    "Follow"
                                  ],
                                  "type": "string"
                                },
                                "digitalocean": {
                                  "description": "Use the DigitalOcean DNS API to manage DNS01 challenge records.",
                                  "properties": {
                                    "tokenSecretRef": {
                                      "description": "A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.",
                                      "properties": {
                                        "key": {
                                          "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.",
                                          "type": "string"
                                        },
                                        "name": {
                                          "description": "Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "name"
                                      ],
                                      "type": "object"
                                    }
                                  },
                                  "required": [
                                    "tokenSecretRef"
                                  ],
                                  "type": "object"
                                },
                                "rfc2136": {
                                  "description": "Use RFC2136 (\"Dynamic Updates in the Domain Name System\") (https://datatracker.ietf.org/doc/rfc2136/) to manage DNS01 challenge records.",
                                  "properties": {
                                    "nameserver": {
                                      "description": "The IP address or hostname of an authoritative DNS server supporting RFC2136 in the form host:port. If the host is an IPv6 address it must be enclosed in square brackets (e.g [2001:db8::1]) ; port is optional. This field is required.",
                                      "type": "string"
                                    },
                                    "tsigAlgorithm": {
                                      "description": "The TSIG Algorithm configured in the DNS supporting RFC2136. Used only when ``tsigSecretSecretRef`` and ``tsigKeyName`` are defined. Supported values are (case-insensitive): ``HMACMD5`` (default), ``HMACSHA1``, ``HMACSHA256`` or ``HMACSHA512``.",
                                      "type": "string"
                                    },
                                    "tsigKeyName": {
                                      "description": "The TSIG Key name configured in the DNS. If ``tsigSecretSecretRef`` is defined, this field is required.",
                                      "type": "string"
                                    },
                                    "tsigSecretSecretRef": {
                                      "description": "The name of the secret containing the TSIG value. If ``tsigKeyName`` is defined, this field is required.",
                                      "properties": {
                                        "key": {
                                          "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.",
                                          "type": "string"
                                        },
                                        "name": {
                                          "description": "Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "name"
                                      ],
                                      "type": "object"
                                    }
                                  },
                                  "required": [
                                    "nameserver"
                                  ],
                                  "type": "object"
                                },
                                "route53": {
                                  "description": "Use the AWS Route53 API to manage DNS01 challenge records.",
                                  "properties": {
                                    "accessKeyID": {
                                      "description": "The AccessKeyID is used for authentication. Cannot be set when SecretAccessKeyID is set. If neither the Access Key nor Key ID are set, we fall-back to using env vars, shared credentials file or AWS Instance metadata, see: https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/configuring-sdk.html#specifying-credentials",
                                      "type": "string"
                                    },
                                    "accessKeyIDSecretRef": {
                                      "description": "The SecretAccessKey is used for authentication. If set, pull the AWS access key ID from a key within a Kubernetes Secret. Cannot be set when AccessKeyID is set. If neither the Access Key nor Key ID are set, we fall-back to using env vars, shared credentials file or AWS Instance metadata, see: https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/configuring-sdk.html#specifying-credentials",
                                      "properties": {
                                        "key": {
                                          "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.",
                                          "type": "string"
                                        },
                                        "name": {
                                          "description": "Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "name"
                                      ],
                                      "type": "object"
                                    },
                                    "hostedZoneID": {
                                      "description": "If set, the provider will manage only this zone in Route53 and will not do an lookup using the route53:ListHostedZonesByName api call.",
                                      "type": "string"
                                    },
                                    "region": {
                                      "description": "Always set the region when using AccessKeyID and SecretAccessKey",
                                      "type": "string"
                                    },
                                    "role": {
                                      "description": "Role is a Role ARN which the Route53 provider will assume using either the explicit credentials AccessKeyID/SecretAccessKey or the inferred credentials from environment variables, shared credentials file or AWS Instance metadata",
                                      "type": "string"
                                    },
                                    "secretAccessKeySecretRef": {
                                      "description": "The SecretAccessKey is used for authentication. If neither the Access Key nor Key ID are set, we fall-back to using env vars, shared credentials file or AWS Instance metadata, see: https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/configuring-sdk.html#specifying-credentials",
                                      "properties": {
                                        "key": {
                                          "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.",
                                          "type": "string"
                                        },
                                        "name": {
                                          "description": "Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "name"
                                      ],
                                      "type": "object"
                                    }
                                  },
                                  "required": [
                                    "region"
                                  ],
                                  "type": "object"
                                },
                                "webhook": {
                                  "description": "Configure an external webhook based DNS01 challenge solver to manage DNS01 challenge records.",
                                  "properties": {
                                    "config": {
                                      "description": "Additional configuration that should be passed to the webhook apiserver when challenges are processed. This can contain arbitrary JSON data. Secret values should not be specified in this stanza. If secret values are needed (e.g. credentials for a DNS service), you should use a SecretKeySelector to reference a Secret resource. For details on the schema of this field, consult the webhook provider implementation's documentation.",
                                      "x-kubernetes-preserve-unknown-fields": true
                                    },
                                    "groupName": {
                                      "description": "The API group name that should be used when POSTing ChallengePayload resources to the webhook apiserver. This should be the same as the GroupName specified in the webhook provider implementation.",
                                      "type": "string"
                                    },
                                    "solverName": {
                                      "description": "The name of the solver to use, as defined in the webhook provider implementation. This will typically be the name of the provider, e.g. 'cloudflare'.",
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "groupName",
                                    "solverName"
                                  ],
                                  "type": "object"
                                }
                              },
                              "type": "object"
                            },
                            "http01": {
                              "description": "Configures cert-manager to attempt to complete authorizations by performing the HTTP01 challenge flow. It is not possible to obtain certificates for wildcard domain names (e.g. `*.example.com`) using the HTTP01 challenge mechanism.",
                              "properties": {
                                "gatewayHTTPRoute": {
                                  "description": "The Gateway API is a sig-network community API that models service networking in Kubernetes (https://gateway-api.sigs.k8s.io/). The Gateway solver will create HTTPRoutes with the specified labels in the same namespace as the challenge. This solver is experimental, and fields / behaviour may change in the future.",
                                  "properties": {
                                    "labels": {
                                      "additionalProperties": {
                                        "type": "string"
                                      },
                                      "description": "Custom labels that will be applied to HTTPRoutes created by cert-manager while solving HTTP-01 challenges.",
                                      "type": "object"
                                    },
                                    "parentRefs": {
                                      "description": "When solving an HTTP-01 challenge, cert-manager creates an HTTPRoute. cert-manager needs to know which parentRefs should be used when creating the HTTPRoute. Usually, the parentRef references a Gateway. See: https://gateway-api.sigs.k8s.io/api-types/httproute/#attaching-to-gateways",
                                      "items": {
                                        "description": "ParentReference identifies an API object (usually a Gateway) that can be considered a parent of this resource (usually a route). There are two kinds of parent resources with \"Core\" support: \n * Gateway (Gateway conformance profile) * Service (Mesh conformance profile, experimental, ClusterIP Services only) \n This API may be extended in the future to support additional kinds of parent resources. \n The API object must be valid in the cluster; the Group and Kind must be registered in the cluster for this reference to be valid.",
                                        "properties": {
                                          "group": {
                                            "default": "gateway.networking.k8s.io",
                                            "description": "Group is the group of the referent. When unspecified, \"gateway.networking.k8s.io\" is inferred. To set the core API group (such as for a \"Service\" kind referent), Group must be explicitly set to \"\" (empty string). \n Support: Core",
                                            "maxLength": 253,
                                            "pattern": "^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$",
                                            "type": "string"
                                          },
                                          "kind": {
                                            "default": "Gateway",
                                            "description": "Kind is kind of the referent. \n There are two kinds of parent resources with \"Core\" support: \n * Gateway (Gateway conformance profile) * Service (Mesh conformance profile, experimental, ClusterIP Services only) \n Support for other resources is Implementation-Specific.",
                                            "maxLength": 63,
                                            "minLength": 1,
                                            "pattern": "^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$",
                                            "type": "string"
                                          },
                                          "name": {
                                            "description": "Name is the name of the referent. \n Support: Core",
                                            "maxLength": 253,
                                            "minLength": 1,
                                            "type": "string"
                                          },
                                          "namespace": {
                                            "description": "Namespace is the namespace of the referent. When unspecified, this refers to the local namespace of the Route. \n Note that there are specific rules for ParentRefs which cross namespace boundaries. Cross-namespace references are only valid if they are explicitly allowed by something in the namespace they are referring to. For example: Gateway has the AllowedRoutes field, and ReferenceGrant provides a generic way to enable any other kind of cross-namespace reference. \n \u003cgateway:experimental:description\u003e ParentRefs from a Route to a Service in the same namespace are \"producer\" routes, which apply default routing rules to inbound connections from any namespace to the Service. \n ParentRefs from a Route to a Service in a different namespace are \"consumer\" routes, and these routing rules are only applied to outbound connections originating from the same namespace as the Route, for which the intended destination of the connections are a Service targeted as a ParentRef of the Route. \u003c/gateway:experimental:description\u003e \n Support: Core",
                                            "maxLength": 63,
                                            "minLength": 1,
                                            "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$",
                                            "type": "string"
                                          },
                                          "port": {
                                            "description": "Port is the network port this Route targets. It can be interpreted differently based on the type of parent resource. \n When the parent resource is a Gateway, this targets all listeners listening on the specified port that also support this kind of Route(and select this Route). It's not recommended to set `Port` unless the networking behaviors specified in a Route must apply to a specific port as opposed to a listener(s) whose port(s) may be changed. When both Port and SectionName are specified, the name and port of the selected listener must match both specified values. \n \u003cgateway:experimental:description\u003e When the parent resource is a Service, this targets a specific port in the Service spec. When both Port (experimental) and SectionName are specified, the name and port of the selected port must match both specified values. \u003c/gateway:experimental:description\u003e \n Implementations MAY choose to support other parent resources. Implementations supporting other types of parent resources MUST clearly document how/if Port is interpreted. \n For the purpose of status, an attachment is considered successful as long as the parent resource accepts it partially. For example, Gateway listeners can restrict which Routes can attach to them by Route kind, namespace, or hostname. If 1 of 2 Gateway listeners accept attachment from the referencing Route, the Route MUST be considered successfully attached. If no Gateway listeners accept attachment from this Route, the Route MUST be considered detached from the Gateway. \n Support: Extended \n \u003cgateway:experimental\u003e",
                                            "format": "int32",
                                            "maximum": 65535,
                                            "minimum": 1,
                                            "type": "integer"
                                          },
                                          "sectionName": {
                                            "description": "SectionName is the name of a section within the target resource. In the following resources, SectionName is interpreted as the following: \n * Gateway: Listener Name. When both Port (experimental) and SectionName are specified, the name and port of the selected listener must match both specified values. * Service: Port Name. When both Port (experimental) and SectionName are specified, the name and port of the selected listener must match both specified values. Note that attaching Routes to Services as Parents is part of experimental Mesh support and is not supported for any other purpose. \n Implementations MAY choose to support attaching Routes to other resources. If that is the case, they MUST clearly document how SectionName is interpreted. \n When unspecified (empty string), this will reference the entire resource. For the purpose of status, an attachment is considered successful if at least one section in the parent resource accepts it. For example, Gateway listeners can restrict which Routes can attach to them by Route kind, namespace, or hostname. If 1 of 2 Gateway listeners accept attachment from the referencing Route, the Route MUST be considered successfully attached. If no Gateway listeners accept attachment from this Route, the Route MUST be considered detached from the Gateway. \n Support: Core",
                                            "maxLength": 253,
                                            "minLength": 1,
                                            "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$",
                                            "type": "string"
                                          }
                                        },
                                        "required": [
                                          "name"
                                        ],
                                        "type": "object"
                                      },
                                      "type": "array"
                                    },
                                    "serviceType": {
                                      "description": "Optional service type for Kubernetes solver service. Supported values are NodePort or ClusterIP. If unset, defaults to NodePort.",
                                      "type": "string"
                                    }
                                  },
                                  "type": "object"
                                },
                                "ingress": {
                                  "description": "The ingress based HTTP01 challenge solver will solve challenges by creating or modifying Ingress resources in order to route requests for '/.well-known/acme-challenge/XYZ' to 'challenge solver' pods that are provisioned by cert-manager for each Challenge to be completed.",
                                  "properties": {
                                    "class": {
                                      "description": "This field configures the annotation `kubernetes.io/ingress.class` when creating Ingress resources to solve ACME challenges that use this challenge solver. Only one of `class`, `name` or `ingressClassName` may be specified.",
                                      "type": "string"
                                    },
                                    "ingressClassName": {
                                      "description": "This field configures the field `ingressClassName` on the created Ingress resources used to solve ACME challenges that use this challenge solver. This is the recommended way of configuring the ingress class. Only one of `class`, `name` or `ingressClassName` may be specified.",
                                      "type": "string"
                                    },
                                    "ingressTemplate": {
                                      "description": "Optional ingress template used to configure the ACME challenge solver ingress used for HTTP01 challenges.",
                                      "properties": {
                                        "metadata": {
                                          "description": "ObjectMeta overrides for the ingress used to solve HTTP01 challenges. Only the 'labels' and 'annotations' fields may be set. If labels or annotations overlap with in-built values, the values here will override the in-built values.",
                                          "properties": {
                                            "annotations": {
                                              "additionalProperties": {
                                                "type": "string"
                                              },
                                              "description": "Annotations that should be added to the created ACME HTTP01 solver ingress.",
                                              "type": "object"
                                            },
                                            "labels": {
                                              "additionalProperties": {
                                                "type": "string"
                                              },
                                              "description": "Labels that should be added to the created ACME HTTP01 solver ingress.",
                                              "type": "object"
                                            }
                                          },
                                          "type": "object"
                                        }
                                      },
                                      "type": "object"
                                    },
                                    "name": {
                                      "description": "The name of the ingress resource that should have ACME challenge solving routes inserted into it in order to solve HTTP01 challenges. This is typically used in conjunction with ingress controllers like ingress-gce, which maintains a 1:1 mapping between external IPs and ingress resources. Only one of `class`, `name` or `ingressClassName` may be specified.",
                                      "type": "string"
                                    },
                                    "podTemplate": {
                                      "description": "Optional pod template used to configure the ACME challenge solver pods used for HTTP01 challenges.",
                                      "properties": {
                                        "metadata": {
                                          "description": "ObjectMeta overrides for the pod used to solve HTTP01 challenges. Only the 'labels' and 'annotations' fields may be set. If labels or annotations overlap with in-built values, the values here will override the in-built values.",
                                          "properties": {
                                            "annotations": {
                                              "additionalProperties": {
                                                "type": "string"
                                              },
                                              "description": "Annotations that should be added to the create ACME HTTP01 solver pods.",
                                              "type": "object"
                                            },
                                            "labels": {
                                              "additionalProperties": {
                                                "type": "string"
                                              },
                                              "description": "Labels that should be added to the created ACME HTTP01 solver pods.",
                                              "type": "object"
                                            }
                                          },
                                          "type": "object"
                                        },
                                        "spec": {
                                          "description": "PodSpec defines overrides for the HTTP01 challenge solver pod. Check ACMEChallengeSolverHTTP01IngressPodSpec to find out currently supported fields. All other fields will be ignored.",
                                          "properties": {
                                            "affinity": {
                                              "description": "If specified, the pod's scheduling constraints",
                                              "properties": {
                                                "nodeAffinity": {
                                                  "description": "Describes node affinity scheduling rules for the pod.",
                                                  "properties": {
                                                    "preferredDuringSchedulingIgnoredDuringExecution": {
                                                      "description": "The scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding \"weight\" to the sum if the node matches the corresponding matchExpressions; the node(s) with the highest sum are the most preferred.",
                                                      "items": {
                                                        "description": "An empty preferred scheduling term matches all objects with implicit weight 0 (i.e. it's a no-op). A null preferred scheduling term matches no objects (i.e. is also a no-op).",
                                                        "properties": {
                                                          "preference": {
                                                            "description": "A node selector term, associated with the corresponding weight.",
                                                            "properties": {
                                                              "matchExpressions": {
                                                                "description": "A list of node selector requirements by node's labels.",
                                                                "items": {
                                                                  "description": "A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
                                                                  "properties": {
                                                                    "key": {
                                                                      "description": "The label key that the selector applies to.",
                                                                      "type": "string"
                                                                    },
                                                                    "operator": {
                                                                      "description": "Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.",
                                                                      "type": "string"
                                                                    },
                                                                    "values": {
                                                                      "description": "An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.",
                                                                      "items": {
                                                                        "type": "string"
                                                                      },
                                                                      "type": "array"
                                                                    }
                                                                  },
                                                                  "required": [
                                                                    "key",
                                                                    "operator"
                                                                  ],
                                                                  "type": "object"
                                                                },
                                                                "type": "array"
                                                              },
                                                              "matchFields": {
                                                                "description": "A list of node selector requirements by node's fields.",
                                                                "items": {
                                                                  "description": "A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
                                                                  "properties": {
                                                                    "key": {
                                                                      "description": "The label key that the selector applies to.",
                                                                      "type": "string"
                                                                    },
                                                                    "operator": {
                                                                      "description": "Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.",
                                                                      "type": "string"
                                                                    },
                                                                    "values": {
                                                                      "description": "An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.",
                                                                      "items": {
                                                                        "type": "string"
                                                                      },
                                                                      "type": "array"
                                                                    }
                                                                  },
                                                                  "required": [
                                                                    "key",
                                                                    "operator"
                                                                  ],
                                                                  "type": "object"
                                                                },
                                                                "type": "array"
                                                              }
                                                            },
                                                            "type": "object",
                                                            "x-kubernetes-map-type": "atomic"
                                                          },
                                                          "weight": {
                                                            "description": "Weight associated with matching the corresponding nodeSelectorTerm, in the range 1-100.",
                                                            "format": "int32",
                                                            "type": "integer"
                                                          }
                                                        },
                                                        "required": [
                                                          "preference",
                                                          "weight"
                                                        ],
                                                        "type": "object"
                                                      },
                                                      "type": "array"
                                                    },
                                                    "requiredDuringSchedulingIgnoredDuringExecution": {
                                                      "description": "If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to an update), the system may or may not try to eventually evict the pod from its node.",
                                                      "properties": {
                                                        "nodeSelectorTerms": {
                                                          "description": "Required. A list of node selector terms. The terms are ORed.",
                                                          "items": {
                                                            "description": "A null or empty node selector term matches no objects. The requirements of them are ANDed. The TopologySelectorTerm type implements a subset of the NodeSelectorTerm.",
                                                            "properties": {
                                                              "matchExpressions": {
                                                                "description": "A list of node selector requirements by node's labels.",
                                                                "items": {
                                                                  "description": "A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
                                                                  "properties": {
                                                                    "key": {
                                                                      "description": "The label key that the selector applies to.",
                                                                      "type": "string"
                                                                    },
                                                                    "operator": {
                                                                      "description": "Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.",
                                                                      "type": "string"
                                                                    },
                                                                    "values": {
                                                                      "description": "An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.",
                                                                      "items": {
                                                                        "type": "string"
                                                                      },
                                                                      "type": "array"
                                                                    }
                                                                  },
                                                                  "required": [
                                                                    "key",
                                                                    "operator"
                                                                  ],
                                                                  "type": "object"
                                                                },
                                                                "type": "array"
                                                              },
                                                              "matchFields": {
                                                                "description": "A list of node selector requirements by node's fields.",
                                                                "items": {
                                                                  "description": "A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
                                                                  "properties": {
                                                                    "key": {
                                                                      "description": "The label key that the selector applies to.",
                                                                      "type": "string"
                                                                    },
                                                                    "operator": {
                                                                      "description": "Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.",
                                                                      "type": "string"
                                                                    },
                                                                    "values": {
                                                                      "description": "An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.",
                                                                      "items": {
                                                                        "type": "string"
                                                                      },
                                                                      "type": "array"
                                                                    }
                                                                  },
                                                                  "required": [
                                                                    "key",
                                                                    "operator"
                                                                  ],
                                                                  "type": "object"
                                                                },
                                                                "type": "array"
                                                              }
                                                            },
                                                            "type": "object",
                                                            "x-kubernetes-map-type": "atomic"
                                                          },
                                                          "type": "array"
                                                        }
                                                      },
                                                      "required": [
                                                        "nodeSelectorTerms"
                                                      ],
                                                      "type": "object",
                                                      "x-kubernetes-map-type": "atomic"
                                                    }
                                                  },
                                                  "type": "object"
                                                },
                                                "podAffinity": {
                                                  "description": "Describes pod affinity scheduling rules (e.g. co-locate this pod in the same node, zone, etc. as some other pod(s)).",
                                                  "properties": {
                                                    "preferredDuringSchedulingIgnoredDuringExecution": {
                                                      "description": "The scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding \"weight\" to the sum if the node has pods which matches the corresponding podAffinityTerm; the node(s) with the highest sum are the most preferred.",
                                                      "items": {
                                                        "description": "The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)",
                                                        "properties": {
                                                          "podAffinityTerm": {
                                                            "description": "Required. A pod affinity term, associated with the corresponding weight.",
                                                            "properties": {
                                                              "labelSelector": {
                                                                "description": "A label query over a set of resources, in this case pods. If it's null, this PodAffinityTerm matches with no Pods.",
                                                                "properties": {
                                                                  "matchExpressions": {
                                                                    "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                                                                    "items": {
                                                                      "description": "A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
                                                                      "properties": {
                                                                        "key": {
                                                                          "description": "key is the label key that the selector applies to.",
                                                                          "type": "string"
                                                                        },
                                                                        "operator": {
                                                                          "description": "operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.",
                                                                          "type": "string"
                                                                        },
                                                                        "values": {
                                                                          "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.",
                                                                          "items": {
                                                                            "type": "string"
                                                                          },
                                                                          "type": "array"
                                                                        }
                                                                      },
                                                                      "required": [
                                                                        "key",
                                                                        "operator"
                                                                      ],
                                                                      "type": "object"
                                                                    },
                                                                    "type": "array"
                                                                  },
                                                                  "matchLabels": {
                                                                    "additionalProperties": {
                                                                      "type": "string"
                                                                    },
                                                                    "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                                                    "type": "object"
                                                                  }
                                                                },
                                                                "type": "object",
                                                                "x-kubernetes-map-type": "atomic"
                                                              },
                                                              "matchLabelKeys": {
                                                                "description": "MatchLabelKeys is a set of pod label keys to select which pods will be taken into consideration. The keys are used to lookup values from the incoming pod labels, those key-value labels are merged with `LabelSelector` as `key in (value)` to select the group of existing pods which pods will be taken into consideration for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming pod labels will be ignored. The default value is empty. The same key is forbidden to exist in both MatchLabelKeys and LabelSelector. Also, MatchLabelKeys cannot be set when LabelSelector isn't set. This is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate.",
                                                                "items": {
                                                                  "type": "string"
                                                                },
                                                                "type": "array",
                                                                "x-kubernetes-list-type": "atomic"
                                                              },
                                                              "mismatchLabelKeys": {
                                                                "description": "MismatchLabelKeys is a set of pod label keys to select which pods will be taken into consideration. The keys are used to lookup values from the incoming pod labels, those key-value labels are merged with `LabelSelector` as `key notin (value)` to select the group of existing pods which pods will be taken into consideration for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming pod labels will be ignored. The default value is empty. The same key is forbidden to exist in both MismatchLabelKeys and LabelSelector. Also, MismatchLabelKeys cannot be set when LabelSelector isn't set. This is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate.",
                                                                "items": {
                                                                  "type": "string"
                                                                },
                                                                "type": "array",
                                                                "x-kubernetes-list-type": "atomic"
                                                              },
                                                              "namespaceSelector": {
                                                                "description": "A label query over the set of namespaces that the term applies to. The term is applied to the union of the namespaces selected by this field and the ones listed in the namespaces field. null selector and null or empty namespaces list means \"this pod's namespace\". An empty selector ({}) matches all namespaces.",
                                                                "properties": {
                                                                  "matchExpressions": {
                                                                    "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                                                                    "items": {
                                                                      "description": "A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
                                                                      "properties": {
                                                                        "key": {
                                                                          "description": "key is the label key that the selector applies to.",
                                                                          "type": "string"
                                                                        },
                                                                        "operator": {
                                                                          "description": "operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.",
                                                                          "type": "string"
                                                                        },
                                                                        "values": {
                                                                          "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.",
                                                                          "items": {
                                                                            "type": "string"
                                                                          },
                                                                          "type": "array"
                                                                        }
                                                                      },
                                                                      "required": [
                                                                        "key",
                                                                        "operator"
                                                                      ],
                                                                      "type": "object"
                                                                    },
                                                                    "type": "array"
                                                                  },
                                                                  "matchLabels": {
                                                                    "additionalProperties": {
                                                                      "type": "string"
                                                                    },
                                                                    "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                                                    "type": "object"
                                                                  }
                                                                },
                                                                "type": "object",
                                                                "x-kubernetes-map-type": "atomic"
                                                              },
                                                              "namespaces": {
                                                                "description": "namespaces specifies a static list of namespace names that the term applies to. The term is applied to the union of the namespaces listed in this field and the ones selected by namespaceSelector. null or empty namespaces list and null namespaceSelector means \"this pod's namespace\".",
                                                                "items": {
                                                                  "type": "string"
                                                                },
                                                                "type": "array"
                                                              },
                                                              "topologyKey": {
                                                                "description": "This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.",
                                                                "type": "string"
                                                              }
                                                            },
                                                            "required": [
                                                              "topologyKey"
                                                            ],
                                                            "type": "object"
                                                          },
                                                          "weight": {
                                                            "description": "weight associated with matching the corresponding podAffinityTerm, in the range 1-100.",
                                                            "format": "int32",
                                                            "type": "integer"
                                                          }
                                                        },
                                                        "required": [
                                                          "podAffinityTerm",
                                                          "weight"
                                                        ],
                                                        "type": "object"
                                                      },
                                                      "type": "array"
                                                    },
                                                    "requiredDuringSchedulingIgnoredDuringExecution": {
                                                      "description": "If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to a pod label update), the system may or may not try to eventually evict the pod from its node. When there are multiple elements, the lists of nodes corresponding to each podAffinityTerm are intersected, i.e. all terms must be satisfied.",
                                                      "items": {
                                                        "description": "Defines a set of pods (namely those matching the labelSelector relative to the given namespace(s)) that this pod should be co-located (affinity) or not co-located (anti-affinity) with, where co-located is defined as running on a node whose value of the label with key \u003ctopologyKey\u003e matches that of any node on which a pod of the set of pods is running",
                                                        "properties": {
                                                          "labelSelector": {
                                                            "description": "A label query over a set of resources, in this case pods. If it's null, this PodAffinityTerm matches with no Pods.",
                                                            "properties": {
                                                              "matchExpressions": {
                                                                "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                                                                "items": {
                                                                  "description": "A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
                                                                  "properties": {
                                                                    "key": {
                                                                      "description": "key is the label key that the selector applies to.",
                                                                      "type": "string"
                                                                    },
                                                                    "operator": {
                                                                      "description": "operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.",
                                                                      "type": "string"
                                                                    },
                                                                    "values": {
                                                                      "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.",
                                                                      "items": {
                                                                        "type": "string"
                                                                      },
                                                                      "type": "array"
                                                                    }
                                                                  },
                                                                  "required": [
                                                                    "key",
                                                                    "operator"
                                                                  ],
                                                                  "type": "object"
                                                                },
                                                                "type": "array"
                                                              },
                                                              "matchLabels": {
                                                                "additionalProperties": {
                                                                  "type": "string"
                                                                },
                                                                "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                                                "type": "object"
                                                              }
                                                            },
                                                            "type": "object",
                                                            "x-kubernetes-map-type": "atomic"
                                                          },
                                                          "matchLabelKeys": {
                                                            "description": "MatchLabelKeys is a set of pod label keys to select which pods will be taken into consideration. The keys are used to lookup values from the incoming pod labels, those key-value labels are merged with `LabelSelector` as `key in (value)` to select the group of existing pods which pods will be taken into consideration for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming pod labels will be ignored. The default value is empty. The same key is forbidden to exist in both MatchLabelKeys and LabelSelector. Also, MatchLabelKeys cannot be set when LabelSelector isn't set. This is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate.",
                                                            "items": {
                                                              "type": "string"
                                                            },
                                                            "type": "array",
                                                            "x-kubernetes-list-type": "atomic"
                                                          },
                                                          "mismatchLabelKeys": {
                                                            "description": "MismatchLabelKeys is a set of pod label keys to select which pods will be taken into consideration. The keys are used to lookup values from the incoming pod labels, those key-value labels are merged with `LabelSelector` as `key notin (value)` to select the group of existing pods which pods will be taken into consideration for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming pod labels will be ignored. The default value is empty. The same key is forbidden to exist in both MismatchLabelKeys and LabelSelector. Also, MismatchLabelKeys cannot be set when LabelSelector isn't set. This is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate.",
                                                            "items": {
                                                              "type": "string"
                                                            },
                                                            "type": "array",
                                                            "x-kubernetes-list-type": "atomic"
                                                          },
                                                          "namespaceSelector": {
                                                            "description": "A label query over the set of namespaces that the term applies to. The term is applied to the union of the namespaces selected by this field and the ones listed in the namespaces field. null selector and null or empty namespaces list means \"this pod's namespace\". An empty selector ({}) matches all namespaces.",
                                                            "properties": {
                                                              "matchExpressions": {
                                                                "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                                                                "items": {
                                                                  "description": "A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
                                                                  "properties": {
                                                                    "key": {
                                                                      "description": "key is the label key that the selector applies to.",
                                                                      "type": "string"
                                                                    },
                                                                    "operator": {
                                                                      "description": "operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.",
                                                                      "type": "string"
                                                                    },
                                                                    "values": {
                                                                      "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.",
                                                                      "items": {
                                                                        "type": "string"
                                                                      },
                                                                      "type": "array"
                                                                    }
                                                                  },
                                                                  "required": [
                                                                    "key",
                                                                    "operator"
                                                                  ],
                                                                  "type": "object"
                                                                },
                                                                "type": "array"
                                                              },
                                                              "matchLabels": {
                                                                "additionalProperties": {
                                                                  "type": "string"
                                                                },
                                                                "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                                                "type": "object"
                                                              }
                                                            },
                                                            "type": "object",
                                                            "x-kubernetes-map-type": "atomic"
                                                          },
                                                          "namespaces": {
                                                            "description": "namespaces specifies a static list of namespace names that the term applies to. The term is applied to the union of the namespaces listed in this field and the ones selected by namespaceSelector. null or empty namespaces list and null namespaceSelector means \"this pod's namespace\".",
                                                            "items": {
                                                              "type": "string"
                                                            },
                                                            "type": "array"
                                                          },
                                                          "topologyKey": {
                                                            "description": "This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.",
                                                            "type": "string"
                                                          }
                                                        },
                                                        "required": [
                                                          "topologyKey"
                                                        ],
                                                        "type": "object"
                                                      },
                                                      "type": "array"
                                                    }
                                                  },
                                                  "type": "object"
                                                },
                                                "podAntiAffinity": {
                                                  "description": "Describes pod anti-affinity scheduling rules (e.g. avoid putting this pod in the same node, zone, etc. as some other pod(s)).",
                                                  "properties": {
                                                    "preferredDuringSchedulingIgnoredDuringExecution": {
                                                      "description": "The scheduler will prefer to schedule pods to nodes that satisfy the anti-affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling anti-affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding \"weight\" to the sum if the node has pods which matches the corresponding podAffinityTerm; the node(s) with the highest sum are the most preferred.",
                                                      "items": {
                                                        "description": "The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)",
                                                        "properties": {
                                                          "podAffinityTerm": {
                                                            "description": "Required. A pod affinity term, associated with the corresponding weight.",
                                                            "properties": {
                                                              "labelSelector": {
                                                                "description": "A label query over a set of resources, in this case pods. If it's null, this PodAffinityTerm matches with no Pods.",
                                                                "properties": {
                                                                  "matchExpressions": {
                                                                    "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                                                                    "items": {
                                                                      "description": "A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
                                                                      "properties": {
                                                                        "key": {
                                                                          "description": "key is the label key that the selector applies to.",
                                                                          "type": "string"
                                                                        },
                                                                        "operator": {
                                                                          "description": "operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.",
                                                                          "type": "string"
                                                                        },
                                                                        "values": {
                                                                          "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.",
                                                                          "items": {
                                                                            "type": "string"
                                                                          },
                                                                          "type": "array"
                                                                        }
                                                                      },
                                                                      "required": [
                                                                        "key",
                                                                        "operator"
                                                                      ],
                                                                      "type": "object"
                                                                    },
                                                                    "type": "array"
                                                                  },
                                                                  "matchLabels": {
                                                                    "additionalProperties": {
                                                                      "type": "string"
                                                                    },
                                                                    "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                                                    "type": "object"
                                                                  }
                                                                },
                                                                "type": "object",
                                                                "x-kubernetes-map-type": "atomic"
                                                              },
                                                              "matchLabelKeys": {
                                                                "description": "MatchLabelKeys is a set of pod label keys to select which pods will be taken into consideration. The keys are used to lookup values from the incoming pod labels, those key-value labels are merged with `LabelSelector` as `key in (value)` to select the group of existing pods which pods will be taken into consideration for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming pod labels will be ignored. The default value is empty. The same key is forbidden to exist in both MatchLabelKeys and LabelSelector. Also, MatchLabelKeys cannot be set when LabelSelector isn't set. This is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate.",
                                                                "items": {
                                                                  "type": "string"
                                                                },
                                                                "type": "array",
                                                                "x-kubernetes-list-type": "atomic"
                                                              },
                                                              "mismatchLabelKeys": {
                                                                "description": "MismatchLabelKeys is a set of pod label keys to select which pods will be taken into consideration. The keys are used to lookup values from the incoming pod labels, those key-value labels are merged with `LabelSelector` as `key notin (value)` to select the group of existing pods which pods will be taken into consideration for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming pod labels will be ignored. The default value is empty. The same key is forbidden to exist in both MismatchLabelKeys and LabelSelector. Also, MismatchLabelKeys cannot be set when LabelSelector isn't set. This is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate.",
                                                                "items": {
                                                                  "type": "string"
                                                                },
                                                                "type": "array",
                                                                "x-kubernetes-list-type": "atomic"
                                                              },
                                                              "namespaceSelector": {
                                                                "description": "A label query over the set of namespaces that the term applies to. The term is applied to the union of the namespaces selected by this field and the ones listed in the namespaces field. null selector and null or empty namespaces list means \"this pod's namespace\". An empty selector ({}) matches all namespaces.",
                                                                "properties": {
                                                                  "matchExpressions": {
                                                                    "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                                                                    "items": {
                                                                      "description": "A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
                                                                      "properties": {
                                                                        "key": {
                                                                          "description": "key is the label key that the selector applies to.",
                                                                          "type": "string"
                                                                        },
                                                                        "operator": {
                                                                          "description": "operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.",
                                                                          "type": "string"
                                                                        },
                                                                        "values": {
                                                                          "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.",
                                                                          "items": {
                                                                            "type": "string"
                                                                          },
                                                                          "type": "array"
                                                                        }
                                                                      },
                                                                      "required": [
                                                                        "key",
                                                                        "operator"
                                                                      ],
                                                                      "type": "object"
                                                                    },
                                                                    "type": "array"
                                                                  },
                                                                  "matchLabels": {
                                                                    "additionalProperties": {
                                                                      "type": "string"
                                                                    },
                                                                    "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                                                    "type": "object"
                                                                  }
                                                                },
                                                                "type": "object",
                                                                "x-kubernetes-map-type": "atomic"
                                                              },
                                                              "namespaces": {
                                                                "description": "namespaces specifies a static list of namespace names that the term applies to. The term is applied to the union of the namespaces listed in this field and the ones selected by namespaceSelector. null or empty namespaces list and null namespaceSelector means \"this pod's namespace\".",
                                                                "items": {
                                                                  "type": "string"
                                                                },
                                                                "type": "array"
                                                              },
                                                              "topologyKey": {
                                                                "description": "This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.",
                                                                "type": "string"
                                                              }
                                                            },
                                                            "required": [
                                                              "topologyKey"
                                                            ],
                                                            "type": "object"
                                                          },
                                                          "weight": {
                                                            "description": "weight associated with matching the corresponding podAffinityTerm, in the range 1-100.",
                                                            "format": "int32",
                                                            "type": "integer"
                                                          }
                                                        },
                                                        "required": [
                                                          "podAffinityTerm",
                                                          "weight"
                                                        ],
                                                        "type": "object"
                                                      },
                                                      "type": "array"
                                                    },
                                                    "requiredDuringSchedulingIgnoredDuringExecution": {
                                                      "description": "If the anti-affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the anti-affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to a pod label update), the system may or may not try to eventually evict the pod from its node. When there are multiple elements, the lists of nodes corresponding to each podAffinityTerm are intersected, i.e. all terms must be satisfied.",
                                                      "items": {
                                                        "description": "Defines a set of pods (namely those matching the labelSelector relative to the given namespace(s)) that this pod should be co-located (affinity) or not co-located (anti-affinity) with, where co-located is defined as running on a node whose value of the label with key \u003ctopologyKey\u003e matches that of any node on which a pod of the set of pods is running",
                                                        "properties": {
                                                          "labelSelector": {
                                                            "description": "A label query over a set of resources, in this case pods. If it's null, this PodAffinityTerm matches with no Pods.",
                                                            "properties": {
                                                              "matchExpressions": {
                                                                "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                                                                "items": {
                                                                  "description": "A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
                                                                  "properties": {
                                                                    "key": {
                                                                      "description": "key is the label key that the selector applies to.",
                                                                      "type": "string"
                                                                    },
                                                                    "operator": {
                                                                      "description": "operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.",
                                                                      "type": "string"
                                                                    },
                                                                    "values": {
                                                                      "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.",
                                                                      "items": {
                                                                        "type": "string"
                                                                      },
                                                                      "type": "array"
                                                                    }
                                                                  },
                                                                  "required": [
                                                                    "key",
                                                                    "operator"
                                                                  ],
                                                                  "type": "object"
                                                                },
                                                                "type": "array"
                                                              },
                                                              "matchLabels": {
                                                                "additionalProperties": {
                                                                  "type": "string"
                                                                },
                                                                "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                                                "type": "object"
                                                              }
                                                            },
                                                            "type": "object",
                                                            "x-kubernetes-map-type": "atomic"
                                                          },
                                                          "matchLabelKeys": {
                                                            "description": "MatchLabelKeys is a set of pod label keys to select which pods will be taken into consideration. The keys are used to lookup values from the incoming pod labels, those key-value labels are merged with `LabelSelector` as `key in (value)` to select the group of existing pods which pods will be taken into consideration for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming pod labels will be ignored. The default value is empty. The same key is forbidden to exist in both MatchLabelKeys and LabelSelector. Also, MatchLabelKeys cannot be set when LabelSelector isn't set. This is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate.",
                                                            "items": {
                                                              "type": "string"
                                                            },
                                                            "type": "array",
                                                            "x-kubernetes-list-type": "atomic"
                                                          },
                                                          "mismatchLabelKeys": {
                                                            "description": "MismatchLabelKeys is a set of pod label keys to select which pods will be taken into consideration. The keys are used to lookup values from the incoming pod labels, those key-value labels are merged with `LabelSelector` as `key notin (value)` to select the group of existing pods which pods will be taken into consideration for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming pod labels will be ignored. The default value is empty. The same key is forbidden to exist in both MismatchLabelKeys and LabelSelector. Also, MismatchLabelKeys cannot be set when LabelSelector isn't set. This is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate.",
                                                            "items": {
                                                              "type": "string"
                                                            },
                                                            "type": "array",
                                                            "x-kubernetes-list-type": "atomic"
                                                          },
                                                          "namespaceSelector": {
                                                            "description": "A label query over the set of namespaces that the term applies to. The term is applied to the union of the namespaces selected by this field and the ones listed in the namespaces field. null selector and null or empty namespaces list means \"this pod's namespace\". An empty selector ({}) matches all namespaces.",
                                                            "properties": {
                                                              "matchExpressions": {
                                                                "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                                                                "items": {
                                                                  "description": "A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
                                                                  "properties": {
                                                                    "key": {
                                                                      "description": "key is the label key that the selector applies to.",
                                                                      "type": "string"
                                                                    },
                                                                    "operator": {
                                                                      "description": "operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.",
                                                                      "type": "string"
                                                                    },
                                                                    "values": {
                                                                      "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.",
                                                                      "items": {
                                                                        "type": "string"
                                                                      },
                                                                      "type": "array"
                                                                    }
                                                                  },
                                                                  "required": [
                                                                    "key",
                                                                    "operator"
                                                                  ],
                                                                  "type": "object"
                                                                },
                                                                "type": "array"
                                                              },
                                                              "matchLabels": {
                                                                "additionalProperties": {
                                                                  "type": "string"
                                                                },
                                                                "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                                                "type": "object"
                                                              }
                                                            },
                                                            "type": "object",
                                                            "x-kubernetes-map-type": "atomic"
                                                          },
                                                          "namespaces": {
                                                            "description": "namespaces specifies a static list of namespace names that the term applies to. The term is applied to the union of the namespaces listed in this field and the ones selected by namespaceSelector. null or empty namespaces list and null namespaceSelector means \"this pod's namespace\".",
                                                            "items": {
                                                              "type": "string"
                                                            },
                                                            "type": "array"
                                                          },
                                                          "topologyKey": {
                                                            "description": "This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.",
                                                            "type": "string"
                                                          }
                                                        },
                                                        "required": [
                                                          "topologyKey"
                                                        ],
                                                        "type": "object"
                                                      },
                                                      "type": "array"
                                                    }
                                                  },
                                                  "type": "object"
                                                }
                                              },
                                              "type": "object"
                                            },
                                            "imagePullSecrets": {
                                              "description": "If specified, the pod's imagePullSecrets",
                                              "items": {
                                                "description": "LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace.",
                                                "properties": {
                                                  "name": {
                                                    "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
                                                    "type": "string"
                                                  }
                                                },
                                                "type": "object",
                                                "x-kubernetes-map-type": "atomic"
                                              },
                                              "type": "array"
                                            },
                                            "nodeSelector": {
                                              "additionalProperties": {
                                                "type": "string"
                                              },
                                              "description": "NodeSelector is a selector which must be true for the pod to fit on a node. Selector which must match a node's labels for the pod to be scheduled on that node. More info: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/",
                                              "type": "object"
                                            },
                                            "priorityClassName": {
                                              "description": "If specified, the pod's priorityClassName.",
                                              "type": "string"
                                            },
                                            "serviceAccountName": {
                                              "description": "If specified, the pod's service account",
                                              "type": "string"
                                            },
                                            "tolerations": {
                                              "description": "If specified, the pod's tolerations.",
                                              "items": {
                                                "description": "The pod this Toleration is attached to tolerates any taint that matches the triple \u003ckey,value,effect\u003e using the matching operator \u003coperator\u003e.",
                                                "properties": {
                                                  "effect": {
                                                    "description": "Effect indicates the taint effect to match. Empty means match all taint effects. When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.",
                                                    "type": "string"
                                                  },
                                                  "key": {
                                                    "description": "Key is the taint key that the toleration applies to. Empty means match all taint keys. If the key is empty, operator must be Exists; this combination means to match all values and all keys.",
                                                    "type": "string"
                                                  },
                                                  "operator": {
                                                    "description": "Operator represents a key's relationship to the value. Valid operators are Exists and Equal. Defaults to Equal. Exists is equivalent to wildcard for value, so that a pod can tolerate all taints of a particular category.",
                                                    "type": "string"
                                                  },
                                                  "tolerationSeconds": {
                                                    "description": "TolerationSeconds represents the period of time the toleration (which must be of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default, it is not set, which means tolerate the taint forever (do not evict). Zero and negative values will be treated as 0 (evict immediately) by the system.",
                                                    "format": "int64",
                                                    "type": "integer"
                                                  },
                                                  "value": {
                                                    "description": "Value is the taint value the toleration matches to. If the operator is Exists, the value should be empty, otherwise just a regular string.",
                                                    "type": "string"
                                                  }
                                                },
                                                "type": "object"
                                              },
                                              "type": "array"
                                            }
                                          },
                                          "type": "object"
                                        }
                                      },
                                      "type": "object"
                                    },
                                    "serviceType": {
                                      "description": "Optional service type for Kubernetes solver service. Supported values are NodePort or ClusterIP. If unset, defaults to NodePort.",
                                      "type": "string"
                                    }
                                  },
                                  "type": "object"
                                }
                              },
                              "type": "object"
                            },
                            "selector": {
                              "description": "Selector selects a set of DNSNames on the Certificate resource that should be solved using this challenge solver. If not specified, the solver will be treated as the 'default' solver with the lowest priority, i.e. if any other solver has a more specific match, it will be used instead.",
                              "properties": {
                                "dnsNames": {
                                  "description": "List of DNSNames that this solver will be used to solve. If specified and a match is found, a dnsNames selector will take precedence over a dnsZones selector. If multiple solvers match with the same dnsNames value, the solver with the most matching labels in matchLabels will be selected. If neither has more matches, the solver defined earlier in the list will be selected.",
                                  "items": {
                                    "type": "string"
                                  },
                                  "type": "array"
                                },
                                "dnsZones": {
                                  "description": "List of DNSZones that this solver will be used to solve. The most specific DNS zone match specified here will take precedence over other DNS zone matches, so a solver specifying sys.example.com will be selected over one specifying example.com for the domain www.sys.example.com. If multiple solvers match with the same dnsZones value, the solver with the most matching labels in matchLabels will be selected. If neither has more matches, the solver defined earlier in the list will be selected.",
                                  "items": {
                                    "type": "string"
                                  },
                                  "type": "array"
                                },
                                "matchLabels": {
                                  "additionalProperties": {
                                    "type": "string"
                                  },
                                  "description": "A label selector that is used to refine the set of certificate's that this challenge solver will apply to.",
                                  "type": "object"
                                }
                              },
                              "type": "object"
                            }
                          },
                          "type": "object"
                        },
                        "token": {
                          "description": "The ACME challenge token for this challenge. This is the raw value returned from the ACME server.",
                          "type": "string"
                        },
                        "type": {
                          "description": "The type of ACME challenge this resource represents. One of \"HTTP-01\" or \"DNS-01\".",
                          "enum": [
                            "HTTP-01",
                            "DNS-01"
                          ],
                          "type": "string"
                        },
                        "url": {
                          "description": "The URL of the ACME Challenge resource for this challenge. This can be used to lookup details about the status of this challenge.",
                          "type": "string"
                        },
                        "wildcard": {
                          "description": "wildcard will be true if this challenge is for a wildcard identifier, for example '*.example.com'.",
                          "type": "boolean"
                        }
                      },
                      "required": [
                        "authorizationURL",
                        "dnsName",
                        "issuerRef",
                        "key",
                        "solver",
                        "token",
                        "type",
                        "url"
                      ],
                      "type": "object"
                    },
                    "status": {
                      "properties": {
                        "presented": {
                          "description": "presented will be set to true if the challenge values for this challenge are currently 'presented'. This *does not* imply the self check is passing. Only that the values have been 'submitted' for the appropriate challenge mechanism (i.e. the DNS01 TXT record has been presented, or the HTTP01 configuration has been configured).",
                          "type": "boolean"
                        },
                        "processing": {
                          "description": "Used to denote whether this challenge should be processed or not. This field will only be set to true by the 'scheduling' component. It will only be set to false by the 'challenges' controller, after the challenge has reached a final state or timed out. If this field is set to false, the challenge controller will not take any more action.",
                          "type": "boolean"
                        },
                        "reason": {
                          "description": "Contains human readable information on why the Challenge is in the current state.",
                          "type": "string"
                        },
                        "state": {
                          "description": "Contains the current 'state' of the challenge. If not set, the state of the challenge is unknown.",
                          "enum": [
                            "valid",
                            "ready",
                            "pending",
                            "processing",
                            "invalid",
                            "expired",
                            "errored"
                          ],
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "required": [
                    "metadata",
                    "spec"
                  ],
                  "type": "object"
                }
              },
              "served": true,
              "storage": true,
              "subresources": {
                "status": {}
              }
            }
          ]
        }
      },
      "component": {
        "version": "apiextensions.k8s.io/v1",
        "kind": "CustomResourceDefinition",
        "schema": ""
      }
    },
    {
      "id": "19460993-3e37-4aa1-8dac-633e924c69b3",
      "schemaVersion": "components.meshery.io/v1beta1",
      "version": "v1.0.0",
      "displayName": "clusterissuers.cert-manager.io",
      "description": "",
      "format": "",
      "model": {
        "id": "e633cca6-b6e1-65bf-a440-0d58915e75dd",
        "schemaVersion": "models.meshery.io/v1beta1",
        "version": "v1.0.0",
        "name": "kubernetes",
        "displayName": "Kubernetes",
        "status": "enabled",
        "registrant": {
          "id": "f9a29d70-c287-426c-a90c-2a96590c8083",
          "name": "Github",
          "credential_id": "00000000-0000-0000-0000-000000000000",
          "type": "registry",
          "sub_type": "",
          "kind": "github",
          "status": "registered",
          "user_id": "00000000-0000-0000-0000-000000000000",
          "created_at": "2025-06-22T05:56:58.393994634Z",
          "updated_at": "2025-06-22T05:56:58.393994634Z",
          "deleted_at": "0001-01-01T00:00:00Z"
        },
        "connection_id": "f9a29d70-c287-426c-a90c-2a96590c8083",
        "category": {
          "id": "9ca27d0d-66ce-42a9-8c85-6236563f2ddb",
          "name": "Orchestration \u0026 Management"
        },
        "subCategory": "Scheduling \u0026 Orchestration",
        "metadata": {
          "isAnnotation": false,
          "primaryColor": "#326CE5",
          "secondaryColor": "#7aa1f0",
          "shape": "circle",
          "styleOverrides": "",
          "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/kubernetes-color.svg",
          "svgComplete": "",
          "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/kubernetes-white.svg"
        },
        "model": {
          "version": "v1.32.0-alpha.3"
        },
        "components_count": 0,
        "relationships_count": 0,
        "components": null,
        "relationships": null
      },
      "styles": {
        "position": {
          "x": 627.25,
          "y": 562.9114685058594
        },
        "primaryColor": "#326CE5",
        "secondaryColor": "#7aa1f0",
        "shape": "circle",
        "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/customresourcedefinition-color.svg",
        "svgComplete": "",
        "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/customresourcedefinition-white.svg",
        "z-index": 8
      },
      "capabilities": [],
      "status": "enabled",
      "metadata": {
        "configurationUISchema": "",
        "genealogy": "",
        "instanceDetails": null,
        "isAnnotation": false,
        "isNamespaced": false,
        "published": false,
        "source_uri": "git://github.com/kubernetes/kubernetes/master/api/openapi-spec/v3"
      },
      "configuration": {
        "metadata": {
          "labels": {
            "app": "cert-manager",
            "app.kubernetes.io/instance": "cert-manager",
            "app.kubernetes.io/name": "cert-manager",
            "app.kubernetes.io/version": "v1.14.1"
          },
          "name": "clusterissuers.cert-manager.io"
        },
        "spec": {
          "group": "cert-manager.io",
          "names": {
            "categories": [
              "cert-manager"
            ],
            "kind": "ClusterIssuer",
            "listKind": "ClusterIssuerList",
            "plural": "clusterissuers",
            "singular": "clusterissuer"
          },
          "scope": "Cluster",
          "versions": [
            {
              "additionalPrinterColumns": [
                {
                  "jsonPath": ".status.conditions[?(@.type==\"Ready\")].status",
                  "name": "Ready",
                  "type": "string"
                },
                {
                  "jsonPath": ".status.conditions[?(@.type==\"Ready\")].message",
                  "name": "Status",
                  "priority": 1,
                  "type": "string"
                },
                {
                  "description": "CreationTimestamp is a timestamp representing the server time when this object was created. It is not guaranteed to be set in happens-before order across separate operations. Clients may not set this value. It is represented in RFC3339 form and is in UTC.",
                  "jsonPath": ".metadata.creationTimestamp",
                  "name": "Age",
                  "type": "date"
                }
              ],
              "name": "v1",
              "schema": {
                "openAPIV3Schema": {
                  "description": "A ClusterIssuer represents a certificate issuing authority which can be referenced as part of `issuerRef` fields. It is similar to an Issuer, however it is cluster-scoped and therefore can be referenced by resources that exist in *any* namespace, not just the same namespace as the referent.",
                  "properties": {
                    "apiVersion": {
                      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                      "type": "string"
                    },
                    "kind": {
                      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                      "type": "string"
                    },
                    "metadata": {
                      "type": "object"
                    },
                    "spec": {
                      "description": "Desired state of the ClusterIssuer resource.",
                      "properties": {
                        "acme": {
                          "description": "ACME configures this issuer to communicate with a RFC8555 (ACME) server to obtain signed x509 certificates.",
                          "properties": {
                            "caBundle": {
                              "description": "Base64-encoded bundle of PEM CAs which can be used to validate the certificate chain presented by the ACME server. Mutually exclusive with SkipTLSVerify; prefer using CABundle to prevent various kinds of security vulnerabilities. If CABundle and SkipTLSVerify are unset, the system certificate bundle inside the container is used to validate the TLS connection.",
                              "format": "byte",
                              "type": "string"
                            },
                            "disableAccountKeyGeneration": {
                              "description": "Enables or disables generating a new ACME account key. If true, the Issuer resource will *not* request a new account but will expect the account key to be supplied via an existing secret. If false, the cert-manager system will generate a new ACME account key for the Issuer. Defaults to false.",
                              "type": "boolean"
                            },
                            "email": {
                              "description": "Email is the email address to be associated with the ACME account. This field is optional, but it is strongly recommended to be set. It will be used to contact you in case of issues with your account or certificates, including expiry notification emails. This field may be updated after the account is initially registered.",
                              "type": "string"
                            },
                            "enableDurationFeature": {
                              "description": "Enables requesting a Not After date on certificates that matches the duration of the certificate. This is not supported by all ACME servers like Let's Encrypt. If set to true when the ACME server does not support it it will create an error on the Order. Defaults to false.",
                              "type": "boolean"
                            },
                            "externalAccountBinding": {
                              "description": "ExternalAccountBinding is a reference to a CA external account of the ACME server. If set, upon registration cert-manager will attempt to associate the given external account credentials with the registered ACME account.",
                              "properties": {
                                "keyAlgorithm": {
                                  "description": "Deprecated: keyAlgorithm field exists for historical compatibility reasons and should not be used. The algorithm is now hardcoded to HS256 in golang/x/crypto/acme.",
                                  "enum": [
                                    "HS256",
                                    "HS384",
                                    "HS512"
                                  ],
                                  "type": "string"
                                },
                                "keyID": {
                                  "description": "keyID is the ID of the CA key that the External Account is bound to.",
                                  "type": "string"
                                },
                                "keySecretRef": {
                                  "description": "keySecretRef is a Secret Key Selector referencing a data item in a Kubernetes Secret which holds the symmetric MAC key of the External Account Binding. The `key` is the index string that is paired with the key data in the Secret and should not be confused with the key data itself, or indeed with the External Account Binding keyID above. The secret key stored in the Secret **must** be un-padded, base64 URL encoded data.",
                                  "properties": {
                                    "key": {
                                      "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.",
                                      "type": "string"
                                    },
                                    "name": {
                                      "description": "Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "name"
                                  ],
                                  "type": "object"
                                }
                              },
                              "required": [
                                "keyID",
                                "keySecretRef"
                              ],
                              "type": "object"
                            },
                            "preferredChain": {
                              "description": "PreferredChain is the chain to use if the ACME server outputs multiple. PreferredChain is no guarantee that this one gets delivered by the ACME endpoint. For example, for Let's Encrypt's DST crosssign you would use: \"DST Root CA X3\" or \"ISRG Root X1\" for the newer Let's Encrypt root CA. This value picks the first certificate bundle in the ACME alternative chains that has a certificate with this value as its issuer's CN",
                              "maxLength": 64,
                              "type": "string"
                            },
                            "privateKeySecretRef": {
                              "description": "PrivateKey is the name of a Kubernetes Secret resource that will be used to store the automatically generated ACME account private key. Optionally, a `key` may be specified to select a specific entry within the named Secret resource. If `key` is not specified, a default of `tls.key` will be used.",
                              "properties": {
                                "key": {
                                  "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.",
                                  "type": "string"
                                },
                                "name": {
                                  "description": "Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                  "type": "string"
                                }
                              },
                              "required": [
                                "name"
                              ],
                              "type": "object"
                            },
                            "server": {
                              "description": "Server is the URL used to access the ACME server's 'directory' endpoint. For example, for Let's Encrypt's staging endpoint, you would use: \"https://acme-staging-v02.api.letsencrypt.org/directory\". Only ACME v2 endpoints (i.e. RFC 8555) are supported.",
                              "type": "string"
                            },
                            "skipTLSVerify": {
                              "description": "INSECURE: Enables or disables validation of the ACME server TLS certificate. If true, requests to the ACME server will not have the TLS certificate chain validated. Mutually exclusive with CABundle; prefer using CABundle to prevent various kinds of security vulnerabilities. Only enable this option in development environments. If CABundle and SkipTLSVerify are unset, the system certificate bundle inside the container is used to validate the TLS connection. Defaults to false.",
                              "type": "boolean"
                            },
                            "solvers": {
                              "description": "Solvers is a list of challenge solvers that will be used to solve ACME challenges for the matching domains. Solver configurations must be provided in order to obtain certificates from an ACME server. For more information, see: https://cert-manager.io/docs/configuration/acme/",
                              "items": {
                                "description": "An ACMEChallengeSolver describes how to solve ACME challenges for the issuer it is part of. A selector may be provided to use different solving strategies for different DNS names. Only one of HTTP01 or DNS01 must be provided.",
                                "properties": {
                                  "dns01": {
                                    "description": "Configures cert-manager to attempt to complete authorizations by performing the DNS01 challenge flow.",
                                    "properties": {
                                      "acmeDNS": {
                                        "description": "Use the 'ACME DNS' (https://github.com/joohoi/acme-dns) API to manage DNS01 challenge records.",
                                        "properties": {
                                          "accountSecretRef": {
                                            "description": "A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.",
                                            "properties": {
                                              "key": {
                                                "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.",
                                                "type": "string"
                                              },
                                              "name": {
                                                "description": "Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                                "type": "string"
                                              }
                                            },
                                            "required": [
                                              "name"
                                            ],
                                            "type": "object"
                                          },
                                          "host": {
                                            "type": "string"
                                          }
                                        },
                                        "required": [
                                          "accountSecretRef",
                                          "host"
                                        ],
                                        "type": "object"
                                      },
                                      "akamai": {
                                        "description": "Use the Akamai DNS zone management API to manage DNS01 challenge records.",
                                        "properties": {
                                          "accessTokenSecretRef": {
                                            "description": "A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.",
                                            "properties": {
                                              "key": {
                                                "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.",
                                                "type": "string"
                                              },
                                              "name": {
                                                "description": "Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                                "type": "string"
                                              }
                                            },
                                            "required": [
                                              "name"
                                            ],
                                            "type": "object"
                                          },
                                          "clientSecretSecretRef": {
                                            "description": "A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.",
                                            "properties": {
                                              "key": {
                                                "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.",
                                                "type": "string"
                                              },
                                              "name": {
                                                "description": "Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                                "type": "string"
                                              }
                                            },
                                            "required": [
                                              "name"
                                            ],
                                            "type": "object"
                                          },
                                          "clientTokenSecretRef": {
                                            "description": "A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.",
                                            "properties": {
                                              "key": {
                                                "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.",
                                                "type": "string"
                                              },
                                              "name": {
                                                "description": "Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                                "type": "string"
                                              }
                                            },
                                            "required": [
                                              "name"
                                            ],
                                            "type": "object"
                                          },
                                          "serviceConsumerDomain": {
                                            "type": "string"
                                          }
                                        },
                                        "required": [
                                          "accessTokenSecretRef",
                                          "clientSecretSecretRef",
                                          "clientTokenSecretRef",
                                          "serviceConsumerDomain"
                                        ],
                                        "type": "object"
                                      },
                                      "azureDNS": {
                                        "description": "Use the Microsoft Azure DNS API to manage DNS01 challenge records.",
                                        "properties": {
                                          "clientID": {
                                            "description": "Auth: Azure Service Principal: The ClientID of the Azure Service Principal used to authenticate with Azure DNS. If set, ClientSecret and TenantID must also be set.",
                                            "type": "string"
                                          },
                                          "clientSecretSecretRef": {
                                            "description": "Auth: Azure Service Principal: A reference to a Secret containing the password associated with the Service Principal. If set, ClientID and TenantID must also be set.",
                                            "properties": {
                                              "key": {
                                                "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.",
                                                "type": "string"
                                              },
                                              "name": {
                                                "description": "Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                                "type": "string"
                                              }
                                            },
                                            "required": [
                                              "name"
                                            ],
                                            "type": "object"
                                          },
                                          "environment": {
                                            "description": "name of the Azure environment (default AzurePublicCloud)",
                                            "enum": [
                                              "AzurePublicCloud",
                                              "AzureChinaCloud",
                                              "AzureGermanCloud",
                                              "AzureUSGovernmentCloud"
                                            ],
                                            "type": "string"
                                          },
                                          "hostedZoneName": {
                                            "description": "name of the DNS zone that should be used",
                                            "type": "string"
                                          },
                                          "managedIdentity": {
                                            "description": "Auth: Azure Workload Identity or Azure Managed Service Identity: Settings to enable Azure Workload Identity or Azure Managed Service Identity If set, ClientID, ClientSecret and TenantID must not be set.",
                                            "properties": {
                                              "clientID": {
                                                "description": "client ID of the managed identity, can not be used at the same time as resourceID",
                                                "type": "string"
                                              },
                                              "resourceID": {
                                                "description": "resource ID of the managed identity, can not be used at the same time as clientID Cannot be used for Azure Managed Service Identity",
                                                "type": "string"
                                              }
                                            },
                                            "type": "object"
                                          },
                                          "resourceGroupName": {
                                            "description": "resource group the DNS zone is located in",
                                            "type": "string"
                                          },
                                          "subscriptionID": {
                                            "description": "ID of the Azure subscription",
                                            "type": "string"
                                          },
                                          "tenantID": {
                                            "description": "Auth: Azure Service Principal: The TenantID of the Azure Service Principal used to authenticate with Azure DNS. If set, ClientID and ClientSecret must also be set.",
                                            "type": "string"
                                          }
                                        },
                                        "required": [
                                          "resourceGroupName",
                                          "subscriptionID"
                                        ],
                                        "type": "object"
                                      },
                                      "cloudDNS": {
                                        "description": "Use the Google Cloud DNS API to manage DNS01 challenge records.",
                                        "properties": {
                                          "hostedZoneName": {
                                            "description": "HostedZoneName is an optional field that tells cert-manager in which Cloud DNS zone the challenge record has to be created. If left empty cert-manager will automatically choose a zone.",
                                            "type": "string"
                                          },
                                          "project": {
                                            "type": "string"
                                          },
                                          "serviceAccountSecretRef": {
                                            "description": "A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.",
                                            "properties": {
                                              "key": {
                                                "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.",
                                                "type": "string"
                                              },
                                              "name": {
                                                "description": "Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                                "type": "string"
                                              }
                                            },
                                            "required": [
                                              "name"
                                            ],
                                            "type": "object"
                                          }
                                        },
                                        "required": [
                                          "project"
                                        ],
                                        "type": "object"
                                      },
                                      "cloudflare": {
                                        "description": "Use the Cloudflare API to manage DNS01 challenge records.",
                                        "properties": {
                                          "apiKeySecretRef": {
                                            "description": "API key to use to authenticate with Cloudflare. Note: using an API token to authenticate is now the recommended method as it allows greater control of permissions.",
                                            "properties": {
                                              "key": {
                                                "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.",
                                                "type": "string"
                                              },
                                              "name": {
                                                "description": "Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                                "type": "string"
                                              }
                                            },
                                            "required": [
                                              "name"
                                            ],
                                            "type": "object"
                                          },
                                          "apiTokenSecretRef": {
                                            "description": "API token used to authenticate with Cloudflare.",
                                            "properties": {
                                              "key": {
                                                "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.",
                                                "type": "string"
                                              },
                                              "name": {
                                                "description": "Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                                "type": "string"
                                              }
                                            },
                                            "required": [
                                              "name"
                                            ],
                                            "type": "object"
                                          },
                                          "email": {
                                            "description": "Email of the account, only required when using API key based authentication.",
                                            "type": "string"
                                          }
                                        },
                                        "type": "object"
                                      },
                                      "cnameStrategy": {
                                        "description": "CNAMEStrategy configures how the DNS01 provider should handle CNAME records when found in DNS zones.",
                                        "enum": [
                                          "None",
                                          "Follow"
                                        ],
                                        "type": "string"
                                      },
                                      "digitalocean": {
                                        "description": "Use the DigitalOcean DNS API to manage DNS01 challenge records.",
                                        "properties": {
                                          "tokenSecretRef": {
                                            "description": "A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.",
                                            "properties": {
                                              "key": {
                                                "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.",
                                                "type": "string"
                                              },
                                              "name": {
                                                "description": "Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                                "type": "string"
                                              }
                                            },
                                            "required": [
                                              "name"
                                            ],
                                            "type": "object"
                                          }
                                        },
                                        "required": [
                                          "tokenSecretRef"
                                        ],
                                        "type": "object"
                                      },
                                      "rfc2136": {
                                        "description": "Use RFC2136 (\"Dynamic Updates in the Domain Name System\") (https://datatracker.ietf.org/doc/rfc2136/) to manage DNS01 challenge records.",
                                        "properties": {
                                          "nameserver": {
                                            "description": "The IP address or hostname of an authoritative DNS server supporting RFC2136 in the form host:port. If the host is an IPv6 address it must be enclosed in square brackets (e.g [2001:db8::1]) ; port is optional. This field is required.",
                                            "type": "string"
                                          },
                                          "tsigAlgorithm": {
                                            "description": "The TSIG Algorithm configured in the DNS supporting RFC2136. Used only when ``tsigSecretSecretRef`` and ``tsigKeyName`` are defined. Supported values are (case-insensitive): ``HMACMD5`` (default), ``HMACSHA1``, ``HMACSHA256`` or ``HMACSHA512``.",
                                            "type": "string"
                                          },
                                          "tsigKeyName": {
                                            "description": "The TSIG Key name configured in the DNS. If ``tsigSecretSecretRef`` is defined, this field is required.",
                                            "type": "string"
                                          },
                                          "tsigSecretSecretRef": {
                                            "description": "The name of the secret containing the TSIG value. If ``tsigKeyName`` is defined, this field is required.",
                                            "properties": {
                                              "key": {
                                                "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.",
                                                "type": "string"
                                              },
                                              "name": {
                                                "description": "Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                                "type": "string"
                                              }
                                            },
                                            "required": [
                                              "name"
                                            ],
                                            "type": "object"
                                          }
                                        },
                                        "required": [
                                          "nameserver"
                                        ],
                                        "type": "object"
                                      },
                                      "route53": {
                                        "description": "Use the AWS Route53 API to manage DNS01 challenge records.",
                                        "properties": {
                                          "accessKeyID": {
                                            "description": "The AccessKeyID is used for authentication. Cannot be set when SecretAccessKeyID is set. If neither the Access Key nor Key ID are set, we fall-back to using env vars, shared credentials file or AWS Instance metadata, see: https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/configuring-sdk.html#specifying-credentials",
                                            "type": "string"
                                          },
                                          "accessKeyIDSecretRef": {
                                            "description": "The SecretAccessKey is used for authentication. If set, pull the AWS access key ID from a key within a Kubernetes Secret. Cannot be set when AccessKeyID is set. If neither the Access Key nor Key ID are set, we fall-back to using env vars, shared credentials file or AWS Instance metadata, see: https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/configuring-sdk.html#specifying-credentials",
                                            "properties": {
                                              "key": {
                                                "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.",
                                                "type": "string"
                                              },
                                              "name": {
                                                "description": "Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                                "type": "string"
                                              }
                                            },
                                            "required": [
                                              "name"
                                            ],
                                            "type": "object"
                                          },
                                          "hostedZoneID": {
                                            "description": "If set, the provider will manage only this zone in Route53 and will not do an lookup using the route53:ListHostedZonesByName api call.",
                                            "type": "string"
                                          },
                                          "region": {
                                            "description": "Always set the region when using AccessKeyID and SecretAccessKey",
                                            "type": "string"
                                          },
                                          "role": {
                                            "description": "Role is a Role ARN which the Route53 provider will assume using either the explicit credentials AccessKeyID/SecretAccessKey or the inferred credentials from environment variables, shared credentials file or AWS Instance metadata",
                                            "type": "string"
                                          },
                                          "secretAccessKeySecretRef": {
                                            "description": "The SecretAccessKey is used for authentication. If neither the Access Key nor Key ID are set, we fall-back to using env vars, shared credentials file or AWS Instance metadata, see: https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/configuring-sdk.html#specifying-credentials",
                                            "properties": {
                                              "key": {
                                                "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.",
                                                "type": "string"
                                              },
                                              "name": {
                                                "description": "Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                                "type": "string"
                                              }
                                            },
                                            "required": [
                                              "name"
                                            ],
                                            "type": "object"
                                          }
                                        },
                                        "required": [
                                          "region"
                                        ],
                                        "type": "object"
                                      },
                                      "webhook": {
                                        "description": "Configure an external webhook based DNS01 challenge solver to manage DNS01 challenge records.",
                                        "properties": {
                                          "config": {
                                            "description": "Additional configuration that should be passed to the webhook apiserver when challenges are processed. This can contain arbitrary JSON data. Secret values should not be specified in this stanza. If secret values are needed (e.g. credentials for a DNS service), you should use a SecretKeySelector to reference a Secret resource. For details on the schema of this field, consult the webhook provider implementation's documentation.",
                                            "x-kubernetes-preserve-unknown-fields": true
                                          },
                                          "groupName": {
                                            "description": "The API group name that should be used when POSTing ChallengePayload resources to the webhook apiserver. This should be the same as the GroupName specified in the webhook provider implementation.",
                                            "type": "string"
                                          },
                                          "solverName": {
                                            "description": "The name of the solver to use, as defined in the webhook provider implementation. This will typically be the name of the provider, e.g. 'cloudflare'.",
                                            "type": "string"
                                          }
                                        },
                                        "required": [
                                          "groupName",
                                          "solverName"
                                        ],
                                        "type": "object"
                                      }
                                    },
                                    "type": "object"
                                  },
                                  "http01": {
                                    "description": "Configures cert-manager to attempt to complete authorizations by performing the HTTP01 challenge flow. It is not possible to obtain certificates for wildcard domain names (e.g. `*.example.com`) using the HTTP01 challenge mechanism.",
                                    "properties": {
                                      "gatewayHTTPRoute": {
                                        "description": "The Gateway API is a sig-network community API that models service networking in Kubernetes (https://gateway-api.sigs.k8s.io/). The Gateway solver will create HTTPRoutes with the specified labels in the same namespace as the challenge. This solver is experimental, and fields / behaviour may change in the future.",
                                        "properties": {
                                          "labels": {
                                            "additionalProperties": {
                                              "type": "string"
                                            },
                                            "description": "Custom labels that will be applied to HTTPRoutes created by cert-manager while solving HTTP-01 challenges.",
                                            "type": "object"
                                          },
                                          "parentRefs": {
                                            "description": "When solving an HTTP-01 challenge, cert-manager creates an HTTPRoute. cert-manager needs to know which parentRefs should be used when creating the HTTPRoute. Usually, the parentRef references a Gateway. See: https://gateway-api.sigs.k8s.io/api-types/httproute/#attaching-to-gateways",
                                            "items": {
                                              "description": "ParentReference identifies an API object (usually a Gateway) that can be considered a parent of this resource (usually a route). There are two kinds of parent resources with \"Core\" support: \n * Gateway (Gateway conformance profile) * Service (Mesh conformance profile, experimental, ClusterIP Services only) \n This API may be extended in the future to support additional kinds of parent resources. \n The API object must be valid in the cluster; the Group and Kind must be registered in the cluster for this reference to be valid.",
                                              "properties": {
                                                "group": {
                                                  "default": "gateway.networking.k8s.io",
                                                  "description": "Group is the group of the referent. When unspecified, \"gateway.networking.k8s.io\" is inferred. To set the core API group (such as for a \"Service\" kind referent), Group must be explicitly set to \"\" (empty string). \n Support: Core",
                                                  "maxLength": 253,
                                                  "pattern": "^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$",
                                                  "type": "string"
                                                },
                                                "kind": {
                                                  "default": "Gateway",
                                                  "description": "Kind is kind of the referent. \n There are two kinds of parent resources with \"Core\" support: \n * Gateway (Gateway conformance profile) * Service (Mesh conformance profile, experimental, ClusterIP Services only) \n Support for other resources is Implementation-Specific.",
                                                  "maxLength": 63,
                                                  "minLength": 1,
                                                  "pattern": "^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$",
                                                  "type": "string"
                                                },
                                                "name": {
                                                  "description": "Name is the name of the referent. \n Support: Core",
                                                  "maxLength": 253,
                                                  "minLength": 1,
                                                  "type": "string"
                                                },
                                                "namespace": {
                                                  "description": "Namespace is the namespace of the referent. When unspecified, this refers to the local namespace of the Route. \n Note that there are specific rules for ParentRefs which cross namespace boundaries. Cross-namespace references are only valid if they are explicitly allowed by something in the namespace they are referring to. For example: Gateway has the AllowedRoutes field, and ReferenceGrant provides a generic way to enable any other kind of cross-namespace reference. \n \u003cgateway:experimental:description\u003e ParentRefs from a Route to a Service in the same namespace are \"producer\" routes, which apply default routing rules to inbound connections from any namespace to the Service. \n ParentRefs from a Route to a Service in a different namespace are \"consumer\" routes, and these routing rules are only applied to outbound connections originating from the same namespace as the Route, for which the intended destination of the connections are a Service targeted as a ParentRef of the Route. \u003c/gateway:experimental:description\u003e \n Support: Core",
                                                  "maxLength": 63,
                                                  "minLength": 1,
                                                  "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$",
                                                  "type": "string"
                                                },
                                                "port": {
                                                  "description": "Port is the network port this Route targets. It can be interpreted differently based on the type of parent resource. \n When the parent resource is a Gateway, this targets all listeners listening on the specified port that also support this kind of Route(and select this Route). It's not recommended to set `Port` unless the networking behaviors specified in a Route must apply to a specific port as opposed to a listener(s) whose port(s) may be changed. When both Port and SectionName are specified, the name and port of the selected listener must match both specified values. \n \u003cgateway:experimental:description\u003e When the parent resource is a Service, this targets a specific port in the Service spec. When both Port (experimental) and SectionName are specified, the name and port of the selected port must match both specified values. \u003c/gateway:experimental:description\u003e \n Implementations MAY choose to support other parent resources. Implementations supporting other types of parent resources MUST clearly document how/if Port is interpreted. \n For the purpose of status, an attachment is considered successful as long as the parent resource accepts it partially. For example, Gateway listeners can restrict which Routes can attach to them by Route kind, namespace, or hostname. If 1 of 2 Gateway listeners accept attachment from the referencing Route, the Route MUST be considered successfully attached. If no Gateway listeners accept attachment from this Route, the Route MUST be considered detached from the Gateway. \n Support: Extended \n \u003cgateway:experimental\u003e",
                                                  "format": "int32",
                                                  "maximum": 65535,
                                                  "minimum": 1,
                                                  "type": "integer"
                                                },
                                                "sectionName": {
                                                  "description": "SectionName is the name of a section within the target resource. In the following resources, SectionName is interpreted as the following: \n * Gateway: Listener Name. When both Port (experimental) and SectionName are specified, the name and port of the selected listener must match both specified values. * Service: Port Name. When both Port (experimental) and SectionName are specified, the name and port of the selected listener must match both specified values. Note that attaching Routes to Services as Parents is part of experimental Mesh support and is not supported for any other purpose. \n Implementations MAY choose to support attaching Routes to other resources. If that is the case, they MUST clearly document how SectionName is interpreted. \n When unspecified (empty string), this will reference the entire resource. For the purpose of status, an attachment is considered successful if at least one section in the parent resource accepts it. For example, Gateway listeners can restrict which Routes can attach to them by Route kind, namespace, or hostname. If 1 of 2 Gateway listeners accept attachment from the referencing Route, the Route MUST be considered successfully attached. If no Gateway listeners accept attachment from this Route, the Route MUST be considered detached from the Gateway. \n Support: Core",
                                                  "maxLength": 253,
                                                  "minLength": 1,
                                                  "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$",
                                                  "type": "string"
                                                }
                                              },
                                              "required": [
                                                "name"
                                              ],
                                              "type": "object"
                                            },
                                            "type": "array"
                                          },
                                          "serviceType": {
                                            "description": "Optional service type for Kubernetes solver service. Supported values are NodePort or ClusterIP. If unset, defaults to NodePort.",
                                            "type": "string"
                                          }
                                        },
                                        "type": "object"
                                      },
                                      "ingress": {
                                        "description": "The ingress based HTTP01 challenge solver will solve challenges by creating or modifying Ingress resources in order to route requests for '/.well-known/acme-challenge/XYZ' to 'challenge solver' pods that are provisioned by cert-manager for each Challenge to be completed.",
                                        "properties": {
                                          "class": {
                                            "description": "This field configures the annotation `kubernetes.io/ingress.class` when creating Ingress resources to solve ACME challenges that use this challenge solver. Only one of `class`, `name` or `ingressClassName` may be specified.",
                                            "type": "string"
                                          },
                                          "ingressClassName": {
                                            "description": "This field configures the field `ingressClassName` on the created Ingress resources used to solve ACME challenges that use this challenge solver. This is the recommended way of configuring the ingress class. Only one of `class`, `name` or `ingressClassName` may be specified.",
                                            "type": "string"
                                          },
                                          "ingressTemplate": {
                                            "description": "Optional ingress template used to configure the ACME challenge solver ingress used for HTTP01 challenges.",
                                            "properties": {
                                              "metadata": {
                                                "description": "ObjectMeta overrides for the ingress used to solve HTTP01 challenges. Only the 'labels' and 'annotations' fields may be set. If labels or annotations overlap with in-built values, the values here will override the in-built values.",
                                                "properties": {
                                                  "annotations": {
                                                    "additionalProperties": {
                                                      "type": "string"
                                                    },
                                                    "description": "Annotations that should be added to the created ACME HTTP01 solver ingress.",
                                                    "type": "object"
                                                  },
                                                  "labels": {
                                                    "additionalProperties": {
                                                      "type": "string"
                                                    },
                                                    "description": "Labels that should be added to the created ACME HTTP01 solver ingress.",
                                                    "type": "object"
                                                  }
                                                },
                                                "type": "object"
                                              }
                                            },
                                            "type": "object"
                                          },
                                          "name": {
                                            "description": "The name of the ingress resource that should have ACME challenge solving routes inserted into it in order to solve HTTP01 challenges. This is typically used in conjunction with ingress controllers like ingress-gce, which maintains a 1:1 mapping between external IPs and ingress resources. Only one of `class`, `name` or `ingressClassName` may be specified.",
                                            "type": "string"
                                          },
                                          "podTemplate": {
                                            "description": "Optional pod template used to configure the ACME challenge solver pods used for HTTP01 challenges.",
                                            "properties": {
                                              "metadata": {
                                                "description": "ObjectMeta overrides for the pod used to solve HTTP01 challenges. Only the 'labels' and 'annotations' fields may be set. If labels or annotations overlap with in-built values, the values here will override the in-built values.",
                                                "properties": {
                                                  "annotations": {
                                                    "additionalProperties": {
                                                      "type": "string"
                                                    },
                                                    "description": "Annotations that should be added to the create ACME HTTP01 solver pods.",
                                                    "type": "object"
                                                  },
                                                  "labels": {
                                                    "additionalProperties": {
                                                      "type": "string"
                                                    },
                                                    "description": "Labels that should be added to the created ACME HTTP01 solver pods.",
                                                    "type": "object"
                                                  }
                                                },
                                                "type": "object"
                                              },
                                              "spec": {
                                                "description": "PodSpec defines overrides for the HTTP01 challenge solver pod. Check ACMEChallengeSolverHTTP01IngressPodSpec to find out currently supported fields. All other fields will be ignored.",
                                                "properties": {
                                                  "affinity": {
                                                    "description": "If specified, the pod's scheduling constraints",
                                                    "properties": {
                                                      "nodeAffinity": {
                                                        "description": "Describes node affinity scheduling rules for the pod.",
                                                        "properties": {
                                                          "preferredDuringSchedulingIgnoredDuringExecution": {
                                                            "description": "The scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding \"weight\" to the sum if the node matches the corresponding matchExpressions; the node(s) with the highest sum are the most preferred.",
                                                            "items": {
                                                              "description": "An empty preferred scheduling term matches all objects with implicit weight 0 (i.e. it's a no-op). A null preferred scheduling term matches no objects (i.e. is also a no-op).",
                                                              "properties": {
                                                                "preference": {
                                                                  "description": "A node selector term, associated with the corresponding weight.",
                                                                  "properties": {
                                                                    "matchExpressions": {
                                                                      "description": "A list of node selector requirements by node's labels.",
                                                                      "items": {
                                                                        "description": "A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
                                                                        "properties": {
                                                                          "key": {
                                                                            "description": "The label key that the selector applies to.",
                                                                            "type": "string"
                                                                          },
                                                                          "operator": {
                                                                            "description": "Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.",
                                                                            "type": "string"
                                                                          },
                                                                          "values": {
                                                                            "description": "An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.",
                                                                            "items": {
                                                                              "type": "string"
                                                                            },
                                                                            "type": "array"
                                                                          }
                                                                        },
                                                                        "required": [
                                                                          "key",
                                                                          "operator"
                                                                        ],
                                                                        "type": "object"
                                                                      },
                                                                      "type": "array"
                                                                    },
                                                                    "matchFields": {
                                                                      "description": "A list of node selector requirements by node's fields.",
                                                                      "items": {
                                                                        "description": "A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
                                                                        "properties": {
                                                                          "key": {
                                                                            "description": "The label key that the selector applies to.",
                                                                            "type": "string"
                                                                          },
                                                                          "operator": {
                                                                            "description": "Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.",
                                                                            "type": "string"
                                                                          },
                                                                          "values": {
                                                                            "description": "An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.",
                                                                            "items": {
                                                                              "type": "string"
                                                                            },
                                                                            "type": "array"
                                                                          }
                                                                        },
                                                                        "required": [
                                                                          "key",
                                                                          "operator"
                                                                        ],
                                                                        "type": "object"
                                                                      },
                                                                      "type": "array"
                                                                    }
                                                                  },
                                                                  "type": "object",
                                                                  "x-kubernetes-map-type": "atomic"
                                                                },
                                                                "weight": {
                                                                  "description": "Weight associated with matching the corresponding nodeSelectorTerm, in the range 1-100.",
                                                                  "format": "int32",
                                                                  "type": "integer"
                                                                }
                                                              },
                                                              "required": [
                                                                "preference",
                                                                "weight"
                                                              ],
                                                              "type": "object"
                                                            },
                                                            "type": "array"
                                                          },
                                                          "requiredDuringSchedulingIgnoredDuringExecution": {
                                                            "description": "If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to an update), the system may or may not try to eventually evict the pod from its node.",
                                                            "properties": {
                                                              "nodeSelectorTerms": {
                                                                "description": "Required. A list of node selector terms. The terms are ORed.",
                                                                "items": {
                                                                  "description": "A null or empty node selector term matches no objects. The requirements of them are ANDed. The TopologySelectorTerm type implements a subset of the NodeSelectorTerm.",
                                                                  "properties": {
                                                                    "matchExpressions": {
                                                                      "description": "A list of node selector requirements by node's labels.",
                                                                      "items": {
                                                                        "description": "A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
                                                                        "properties": {
                                                                          "key": {
                                                                            "description": "The label key that the selector applies to.",
                                                                            "type": "string"
                                                                          },
                                                                          "operator": {
                                                                            "description": "Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.",
                                                                            "type": "string"
                                                                          },
                                                                          "values": {
                                                                            "description": "An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.",
                                                                            "items": {
                                                                              "type": "string"
                                                                            },
                                                                            "type": "array"
                                                                          }
                                                                        },
                                                                        "required": [
                                                                          "key",
                                                                          "operator"
                                                                        ],
                                                                        "type": "object"
                                                                      },
                                                                      "type": "array"
                                                                    },
                                                                    "matchFields": {
                                                                      "description": "A list of node selector requirements by node's fields.",
                                                                      "items": {
                                                                        "description": "A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
                                                                        "properties": {
                                                                          "key": {
                                                                            "description": "The label key that the selector applies to.",
                                                                            "type": "string"
                                                                          },
                                                                          "operator": {
                                                                            "description": "Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.",
                                                                            "type": "string"
                                                                          },
                                                                          "values": {
                                                                            "description": "An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.",
                                                                            "items": {
                                                                              "type": "string"
                                                                            },
                                                                            "type": "array"
                                                                          }
                                                                        },
                                                                        "required": [
                                                                          "key",
                                                                          "operator"
                                                                        ],
                                                                        "type": "object"
                                                                      },
                                                                      "type": "array"
                                                                    }
                                                                  },
                                                                  "type": "object",
                                                                  "x-kubernetes-map-type": "atomic"
                                                                },
                                                                "type": "array"
                                                              }
                                                            },
                                                            "required": [
                                                              "nodeSelectorTerms"
                                                            ],
                                                            "type": "object",
                                                            "x-kubernetes-map-type": "atomic"
                                                          }
                                                        },
                                                        "type": "object"
                                                      },
                                                      "podAffinity": {
                                                        "description": "Describes pod affinity scheduling rules (e.g. co-locate this pod in the same node, zone, etc. as some other pod(s)).",
                                                        "properties": {
                                                          "preferredDuringSchedulingIgnoredDuringExecution": {
                                                            "description": "The scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding \"weight\" to the sum if the node has pods which matches the corresponding podAffinityTerm; the node(s) with the highest sum are the most preferred.",
                                                            "items": {
                                                              "description": "The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)",
                                                              "properties": {
                                                                "podAffinityTerm": {
                                                                  "description": "Required. A pod affinity term, associated with the corresponding weight.",
                                                                  "properties": {
                                                                    "labelSelector": {
                                                                      "description": "A label query over a set of resources, in this case pods. If it's null, this PodAffinityTerm matches with no Pods.",
                                                                      "properties": {
                                                                        "matchExpressions": {
                                                                          "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                                                                          "items": {
                                                                            "description": "A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
                                                                            "properties": {
                                                                              "key": {
                                                                                "description": "key is the label key that the selector applies to.",
                                                                                "type": "string"
                                                                              },
                                                                              "operator": {
                                                                                "description": "operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.",
                                                                                "type": "string"
                                                                              },
                                                                              "values": {
                                                                                "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.",
                                                                                "items": {
                                                                                  "type": "string"
                                                                                },
                                                                                "type": "array"
                                                                              }
                                                                            },
                                                                            "required": [
                                                                              "key",
                                                                              "operator"
                                                                            ],
                                                                            "type": "object"
                                                                          },
                                                                          "type": "array"
                                                                        },
                                                                        "matchLabels": {
                                                                          "additionalProperties": {
                                                                            "type": "string"
                                                                          },
                                                                          "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                                                          "type": "object"
                                                                        }
                                                                      },
                                                                      "type": "object",
                                                                      "x-kubernetes-map-type": "atomic"
                                                                    },
                                                                    "matchLabelKeys": {
                                                                      "description": "MatchLabelKeys is a set of pod label keys to select which pods will be taken into consideration. The keys are used to lookup values from the incoming pod labels, those key-value labels are merged with `LabelSelector` as `key in (value)` to select the group of existing pods which pods will be taken into consideration for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming pod labels will be ignored. The default value is empty. The same key is forbidden to exist in both MatchLabelKeys and LabelSelector. Also, MatchLabelKeys cannot be set when LabelSelector isn't set. This is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate.",
                                                                      "items": {
                                                                        "type": "string"
                                                                      },
                                                                      "type": "array",
                                                                      "x-kubernetes-list-type": "atomic"
                                                                    },
                                                                    "mismatchLabelKeys": {
                                                                      "description": "MismatchLabelKeys is a set of pod label keys to select which pods will be taken into consideration. The keys are used to lookup values from the incoming pod labels, those key-value labels are merged with `LabelSelector` as `key notin (value)` to select the group of existing pods which pods will be taken into consideration for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming pod labels will be ignored. The default value is empty. The same key is forbidden to exist in both MismatchLabelKeys and LabelSelector. Also, MismatchLabelKeys cannot be set when LabelSelector isn't set. This is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate.",
                                                                      "items": {
                                                                        "type": "string"
                                                                      },
                                                                      "type": "array",
                                                                      "x-kubernetes-list-type": "atomic"
                                                                    },
                                                                    "namespaceSelector": {
                                                                      "description": "A label query over the set of namespaces that the term applies to. The term is applied to the union of the namespaces selected by this field and the ones listed in the namespaces field. null selector and null or empty namespaces list means \"this pod's namespace\". An empty selector ({}) matches all namespaces.",
                                                                      "properties": {
                                                                        "matchExpressions": {
                                                                          "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                                                                          "items": {
                                                                            "description": "A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
                                                                            "properties": {
                                                                              "key": {
                                                                                "description": "key is the label key that the selector applies to.",
                                                                                "type": "string"
                                                                              },
                                                                              "operator": {
                                                                                "description": "operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.",
                                                                                "type": "string"
                                                                              },
                                                                              "values": {
                                                                                "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.",
                                                                                "items": {
                                                                                  "type": "string"
                                                                                },
                                                                                "type": "array"
                                                                              }
                                                                            },
                                                                            "required": [
                                                                              "key",
                                                                              "operator"
                                                                            ],
                                                                            "type": "object"
                                                                          },
                                                                          "type": "array"
                                                                        },
                                                                        "matchLabels": {
                                                                          "additionalProperties": {
                                                                            "type": "string"
                                                                          },
                                                                          "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                                                          "type": "object"
                                                                        }
                                                                      },
                                                                      "type": "object",
                                                                      "x-kubernetes-map-type": "atomic"
                                                                    },
                                                                    "namespaces": {
                                                                      "description": "namespaces specifies a static list of namespace names that the term applies to. The term is applied to the union of the namespaces listed in this field and the ones selected by namespaceSelector. null or empty namespaces list and null namespaceSelector means \"this pod's namespace\".",
                                                                      "items": {
                                                                        "type": "string"
                                                                      },
                                                                      "type": "array"
                                                                    },
                                                                    "topologyKey": {
                                                                      "description": "This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.",
                                                                      "type": "string"
                                                                    }
                                                                  },
                                                                  "required": [
                                                                    "topologyKey"
                                                                  ],
                                                                  "type": "object"
                                                                },
                                                                "weight": {
                                                                  "description": "weight associated with matching the corresponding podAffinityTerm, in the range 1-100.",
                                                                  "format": "int32",
                                                                  "type": "integer"
                                                                }
                                                              },
                                                              "required": [
                                                                "podAffinityTerm",
                                                                "weight"
                                                              ],
                                                              "type": "object"
                                                            },
                                                            "type": "array"
                                                          },
                                                          "requiredDuringSchedulingIgnoredDuringExecution": {
                                                            "description": "If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to a pod label update), the system may or may not try to eventually evict the pod from its node. When there are multiple elements, the lists of nodes corresponding to each podAffinityTerm are intersected, i.e. all terms must be satisfied.",
                                                            "items": {
                                                              "description": "Defines a set of pods (namely those matching the labelSelector relative to the given namespace(s)) that this pod should be co-located (affinity) or not co-located (anti-affinity) with, where co-located is defined as running on a node whose value of the label with key \u003ctopologyKey\u003e matches that of any node on which a pod of the set of pods is running",
                                                              "properties": {
                                                                "labelSelector": {
                                                                  "description": "A label query over a set of resources, in this case pods. If it's null, this PodAffinityTerm matches with no Pods.",
                                                                  "properties": {
                                                                    "matchExpressions": {
                                                                      "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                                                                      "items": {
                                                                        "description": "A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
                                                                        "properties": {
                                                                          "key": {
                                                                            "description": "key is the label key that the selector applies to.",
                                                                            "type": "string"
                                                                          },
                                                                          "operator": {
                                                                            "description": "operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.",
                                                                            "type": "string"
                                                                          },
                                                                          "values": {
                                                                            "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.",
                                                                            "items": {
                                                                              "type": "string"
                                                                            },
                                                                            "type": "array"
                                                                          }
                                                                        },
                                                                        "required": [
                                                                          "key",
                                                                          "operator"
                                                                        ],
                                                                        "type": "object"
                                                                      },
                                                                      "type": "array"
                                                                    },
                                                                    "matchLabels": {
                                                                      "additionalProperties": {
                                                                        "type": "string"
                                                                      },
                                                                      "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                                                      "type": "object"
                                                                    }
                                                                  },
                                                                  "type": "object",
                                                                  "x-kubernetes-map-type": "atomic"
                                                                },
                                                                "matchLabelKeys": {
                                                                  "description": "MatchLabelKeys is a set of pod label keys to select which pods will be taken into consideration. The keys are used to lookup values from the incoming pod labels, those key-value labels are merged with `LabelSelector` as `key in (value)` to select the group of existing pods which pods will be taken into consideration for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming pod labels will be ignored. The default value is empty. The same key is forbidden to exist in both MatchLabelKeys and LabelSelector. Also, MatchLabelKeys cannot be set when LabelSelector isn't set. This is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate.",
                                                                  "items": {
                                                                    "type": "string"
                                                                  },
                                                                  "type": "array",
                                                                  "x-kubernetes-list-type": "atomic"
                                                                },
                                                                "mismatchLabelKeys": {
                                                                  "description": "MismatchLabelKeys is a set of pod label keys to select which pods will be taken into consideration. The keys are used to lookup values from the incoming pod labels, those key-value labels are merged with `LabelSelector` as `key notin (value)` to select the group of existing pods which pods will be taken into consideration for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming pod labels will be ignored. The default value is empty. The same key is forbidden to exist in both MismatchLabelKeys and LabelSelector. Also, MismatchLabelKeys cannot be set when LabelSelector isn't set. This is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate.",
                                                                  "items": {
                                                                    "type": "string"
                                                                  },
                                                                  "type": "array",
                                                                  "x-kubernetes-list-type": "atomic"
                                                                },
                                                                "namespaceSelector": {
                                                                  "description": "A label query over the set of namespaces that the term applies to. The term is applied to the union of the namespaces selected by this field and the ones listed in the namespaces field. null selector and null or empty namespaces list means \"this pod's namespace\". An empty selector ({}) matches all namespaces.",
                                                                  "properties": {
                                                                    "matchExpressions": {
                                                                      "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                                                                      "items": {
                                                                        "description": "A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
                                                                        "properties": {
                                                                          "key": {
                                                                            "description": "key is the label key that the selector applies to.",
                                                                            "type": "string"
                                                                          },
                                                                          "operator": {
                                                                            "description": "operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.",
                                                                            "type": "string"
                                                                          },
                                                                          "values": {
                                                                            "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.",
                                                                            "items": {
                                                                              "type": "string"
                                                                            },
                                                                            "type": "array"
                                                                          }
                                                                        },
                                                                        "required": [
                                                                          "key",
                                                                          "operator"
                                                                        ],
                                                                        "type": "object"
                                                                      },
                                                                      "type": "array"
                                                                    },
                                                                    "matchLabels": {
                                                                      "additionalProperties": {
                                                                        "type": "string"
                                                                      },
                                                                      "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                                                      "type": "object"
                                                                    }
                                                                  },
                                                                  "type": "object",
                                                                  "x-kubernetes-map-type": "atomic"
                                                                },
                                                                "namespaces": {
                                                                  "description": "namespaces specifies a static list of namespace names that the term applies to. The term is applied to the union of the namespaces listed in this field and the ones selected by namespaceSelector. null or empty namespaces list and null namespaceSelector means \"this pod's namespace\".",
                                                                  "items": {
                                                                    "type": "string"
                                                                  },
                                                                  "type": "array"
                                                                },
                                                                "topologyKey": {
                                                                  "description": "This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.",
                                                                  "type": "string"
                                                                }
                                                              },
                                                              "required": [
                                                                "topologyKey"
                                                              ],
                                                              "type": "object"
                                                            },
                                                            "type": "array"
                                                          }
                                                        },
                                                        "type": "object"
                                                      },
                                                      "podAntiAffinity": {
                                                        "description": "Describes pod anti-affinity scheduling rules (e.g. avoid putting this pod in the same node, zone, etc. as some other pod(s)).",
                                                        "properties": {
                                                          "preferredDuringSchedulingIgnoredDuringExecution": {
                                                            "description": "The scheduler will prefer to schedule pods to nodes that satisfy the anti-affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling anti-affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding \"weight\" to the sum if the node has pods which matches the corresponding podAffinityTerm; the node(s) with the highest sum are the most preferred.",
                                                            "items": {
                                                              "description": "The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)",
                                                              "properties": {
                                                                "podAffinityTerm": {
                                                                  "description": "Required. A pod affinity term, associated with the corresponding weight.",
                                                                  "properties": {
                                                                    "labelSelector": {
                                                                      "description": "A label query over a set of resources, in this case pods. If it's null, this PodAffinityTerm matches with no Pods.",
                                                                      "properties": {
                                                                        "matchExpressions": {
                                                                          "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                                                                          "items": {
                                                                            "description": "A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
                                                                            "properties": {
                                                                              "key": {
                                                                                "description": "key is the label key that the selector applies to.",
                                                                                "type": "string"
                                                                              },
                                                                              "operator": {
                                                                                "description": "operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.",
                                                                                "type": "string"
                                                                              },
                                                                              "values": {
                                                                                "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.",
                                                                                "items": {
                                                                                  "type": "string"
                                                                                },
                                                                                "type": "array"
                                                                              }
                                                                            },
                                                                            "required": [
                                                                              "key",
                                                                              "operator"
                                                                            ],
                                                                            "type": "object"
                                                                          },
                                                                          "type": "array"
                                                                        },
                                                                        "matchLabels": {
                                                                          "additionalProperties": {
                                                                            "type": "string"
                                                                          },
                                                                          "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                                                          "type": "object"
                                                                        }
                                                                      },
                                                                      "type": "object",
                                                                      "x-kubernetes-map-type": "atomic"
                                                                    },
                                                                    "matchLabelKeys": {
                                                                      "description": "MatchLabelKeys is a set of pod label keys to select which pods will be taken into consideration. The keys are used to lookup values from the incoming pod labels, those key-value labels are merged with `LabelSelector` as `key in (value)` to select the group of existing pods which pods will be taken into consideration for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming pod labels will be ignored. The default value is empty. The same key is forbidden to exist in both MatchLabelKeys and LabelSelector. Also, MatchLabelKeys cannot be set when LabelSelector isn't set. This is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate.",
                                                                      "items": {
                                                                        "type": "string"
                                                                      },
                                                                      "type": "array",
                                                                      "x-kubernetes-list-type": "atomic"
                                                                    },
                                                                    "mismatchLabelKeys": {
                                                                      "description": "MismatchLabelKeys is a set of pod label keys to select which pods will be taken into consideration. The keys are used to lookup values from the incoming pod labels, those key-value labels are merged with `LabelSelector` as `key notin (value)` to select the group of existing pods which pods will be taken into consideration for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming pod labels will be ignored. The default value is empty. The same key is forbidden to exist in both MismatchLabelKeys and LabelSelector. Also, MismatchLabelKeys cannot be set when LabelSelector isn't set. This is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate.",
                                                                      "items": {
                                                                        "type": "string"
                                                                      },
                                                                      "type": "array",
                                                                      "x-kubernetes-list-type": "atomic"
                                                                    },
                                                                    "namespaceSelector": {
                                                                      "description": "A label query over the set of namespaces that the term applies to. The term is applied to the union of the namespaces selected by this field and the ones listed in the namespaces field. null selector and null or empty namespaces list means \"this pod's namespace\". An empty selector ({}) matches all namespaces.",
                                                                      "properties": {
                                                                        "matchExpressions": {
                                                                          "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                                                                          "items": {
                                                                            "description": "A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
                                                                            "properties": {
                                                                              "key": {
                                                                                "description": "key is the label key that the selector applies to.",
                                                                                "type": "string"
                                                                              },
                                                                              "operator": {
                                                                                "description": "operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.",
                                                                                "type": "string"
                                                                              },
                                                                              "values": {
                                                                                "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.",
                                                                                "items": {
                                                                                  "type": "string"
                                                                                },
                                                                                "type": "array"
                                                                              }
                                                                            },
                                                                            "required": [
                                                                              "key",
                                                                              "operator"
                                                                            ],
                                                                            "type": "object"
                                                                          },
                                                                          "type": "array"
                                                                        },
                                                                        "matchLabels": {
                                                                          "additionalProperties": {
                                                                            "type": "string"
                                                                          },
                                                                          "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                                                          "type": "object"
                                                                        }
                                                                      },
                                                                      "type": "object",
                                                                      "x-kubernetes-map-type": "atomic"
                                                                    },
                                                                    "namespaces": {
                                                                      "description": "namespaces specifies a static list of namespace names that the term applies to. The term is applied to the union of the namespaces listed in this field and the ones selected by namespaceSelector. null or empty namespaces list and null namespaceSelector means \"this pod's namespace\".",
                                                                      "items": {
                                                                        "type": "string"
                                                                      },
                                                                      "type": "array"
                                                                    },
                                                                    "topologyKey": {
                                                                      "description": "This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.",
                                                                      "type": "string"
                                                                    }
                                                                  },
                                                                  "required": [
                                                                    "topologyKey"
                                                                  ],
                                                                  "type": "object"
                                                                },
                                                                "weight": {
                                                                  "description": "weight associated with matching the corresponding podAffinityTerm, in the range 1-100.",
                                                                  "format": "int32",
                                                                  "type": "integer"
                                                                }
                                                              },
                                                              "required": [
                                                                "podAffinityTerm",
                                                                "weight"
                                                              ],
                                                              "type": "object"
                                                            },
                                                            "type": "array"
                                                          },
                                                          "requiredDuringSchedulingIgnoredDuringExecution": {
                                                            "description": "If the anti-affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the anti-affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to a pod label update), the system may or may not try to eventually evict the pod from its node. When there are multiple elements, the lists of nodes corresponding to each podAffinityTerm are intersected, i.e. all terms must be satisfied.",
                                                            "items": {
                                                              "description": "Defines a set of pods (namely those matching the labelSelector relative to the given namespace(s)) that this pod should be co-located (affinity) or not co-located (anti-affinity) with, where co-located is defined as running on a node whose value of the label with key \u003ctopologyKey\u003e matches that of any node on which a pod of the set of pods is running",
                                                              "properties": {
                                                                "labelSelector": {
                                                                  "description": "A label query over a set of resources, in this case pods. If it's null, this PodAffinityTerm matches with no Pods.",
                                                                  "properties": {
                                                                    "matchExpressions": {
                                                                      "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                                                                      "items": {
                                                                        "description": "A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
                                                                        "properties": {
                                                                          "key": {
                                                                            "description": "key is the label key that the selector applies to.",
                                                                            "type": "string"
                                                                          },
                                                                          "operator": {
                                                                            "description": "operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.",
                                                                            "type": "string"
                                                                          },
                                                                          "values": {
                                                                            "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.",
                                                                            "items": {
                                                                              "type": "string"
                                                                            },
                                                                            "type": "array"
                                                                          }
                                                                        },
                                                                        "required": [
                                                                          "key",
                                                                          "operator"
                                                                        ],
                                                                        "type": "object"
                                                                      },
                                                                      "type": "array"
                                                                    },
                                                                    "matchLabels": {
                                                                      "additionalProperties": {
                                                                        "type": "string"
                                                                      },
                                                                      "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                                                      "type": "object"
                                                                    }
                                                                  },
                                                                  "type": "object",
                                                                  "x-kubernetes-map-type": "atomic"
                                                                },
                                                                "matchLabelKeys": {
                                                                  "description": "MatchLabelKeys is a set of pod label keys to select which pods will be taken into consideration. The keys are used to lookup values from the incoming pod labels, those key-value labels are merged with `LabelSelector` as `key in (value)` to select the group of existing pods which pods will be taken into consideration for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming pod labels will be ignored. The default value is empty. The same key is forbidden to exist in both MatchLabelKeys and LabelSelector. Also, MatchLabelKeys cannot be set when LabelSelector isn't set. This is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate.",
                                                                  "items": {
                                                                    "type": "string"
                                                                  },
                                                                  "type": "array",
                                                                  "x-kubernetes-list-type": "atomic"
                                                                },
                                                                "mismatchLabelKeys": {
                                                                  "description": "MismatchLabelKeys is a set of pod label keys to select which pods will be taken into consideration. The keys are used to lookup values from the incoming pod labels, those key-value labels are merged with `LabelSelector` as `key notin (value)` to select the group of existing pods which pods will be taken into consideration for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming pod labels will be ignored. The default value is empty. The same key is forbidden to exist in both MismatchLabelKeys and LabelSelector. Also, MismatchLabelKeys cannot be set when LabelSelector isn't set. This is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate.",
                                                                  "items": {
                                                                    "type": "string"
                                                                  },
                                                                  "type": "array",
                                                                  "x-kubernetes-list-type": "atomic"
                                                                },
                                                                "namespaceSelector": {
                                                                  "description": "A label query over the set of namespaces that the term applies to. The term is applied to the union of the namespaces selected by this field and the ones listed in the namespaces field. null selector and null or empty namespaces list means \"this pod's namespace\". An empty selector ({}) matches all namespaces.",
                                                                  "properties": {
                                                                    "matchExpressions": {
                                                                      "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                                                                      "items": {
                                                                        "description": "A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
                                                                        "properties": {
                                                                          "key": {
                                                                            "description": "key is the label key that the selector applies to.",
                                                                            "type": "string"
                                                                          },
                                                                          "operator": {
                                                                            "description": "operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.",
                                                                            "type": "string"
                                                                          },
                                                                          "values": {
                                                                            "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.",
                                                                            "items": {
                                                                              "type": "string"
                                                                            },
                                                                            "type": "array"
                                                                          }
                                                                        },
                                                                        "required": [
                                                                          "key",
                                                                          "operator"
                                                                        ],
                                                                        "type": "object"
                                                                      },
                                                                      "type": "array"
                                                                    },
                                                                    "matchLabels": {
                                                                      "additionalProperties": {
                                                                        "type": "string"
                                                                      },
                                                                      "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                                                      "type": "object"
                                                                    }
                                                                  },
                                                                  "type": "object",
                                                                  "x-kubernetes-map-type": "atomic"
                                                                },
                                                                "namespaces": {
                                                                  "description": "namespaces specifies a static list of namespace names that the term applies to. The term is applied to the union of the namespaces listed in this field and the ones selected by namespaceSelector. null or empty namespaces list and null namespaceSelector means \"this pod's namespace\".",
                                                                  "items": {
                                                                    "type": "string"
                                                                  },
                                                                  "type": "array"
                                                                },
                                                                "topologyKey": {
                                                                  "description": "This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.",
                                                                  "type": "string"
                                                                }
                                                              },
                                                              "required": [
                                                                "topologyKey"
                                                              ],
                                                              "type": "object"
                                                            },
                                                            "type": "array"
                                                          }
                                                        },
                                                        "type": "object"
                                                      }
                                                    },
                                                    "type": "object"
                                                  },
                                                  "imagePullSecrets": {
                                                    "description": "If specified, the pod's imagePullSecrets",
                                                    "items": {
                                                      "description": "LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace.",
                                                      "properties": {
                                                        "name": {
                                                          "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
                                                          "type": "string"
                                                        }
                                                      },
                                                      "type": "object",
                                                      "x-kubernetes-map-type": "atomic"
                                                    },
                                                    "type": "array"
                                                  },
                                                  "nodeSelector": {
                                                    "additionalProperties": {
                                                      "type": "string"
                                                    },
                                                    "description": "NodeSelector is a selector which must be true for the pod to fit on a node. Selector which must match a node's labels for the pod to be scheduled on that node. More info: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/",
                                                    "type": "object"
                                                  },
                                                  "priorityClassName": {
                                                    "description": "If specified, the pod's priorityClassName.",
                                                    "type": "string"
                                                  },
                                                  "serviceAccountName": {
                                                    "description": "If specified, the pod's service account",
                                                    "type": "string"
                                                  },
                                                  "tolerations": {
                                                    "description": "If specified, the pod's tolerations.",
                                                    "items": {
                                                      "description": "The pod this Toleration is attached to tolerates any taint that matches the triple \u003ckey,value,effect\u003e using the matching operator \u003coperator\u003e.",
                                                      "properties": {
                                                        "effect": {
                                                          "description": "Effect indicates the taint effect to match. Empty means match all taint effects. When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.",
                                                          "type": "string"
                                                        },
                                                        "key": {
                                                          "description": "Key is the taint key that the toleration applies to. Empty means match all taint keys. If the key is empty, operator must be Exists; this combination means to match all values and all keys.",
                                                          "type": "string"
                                                        },
                                                        "operator": {
                                                          "description": "Operator represents a key's relationship to the value. Valid operators are Exists and Equal. Defaults to Equal. Exists is equivalent to wildcard for value, so that a pod can tolerate all taints of a particular category.",
                                                          "type": "string"
                                                        },
                                                        "tolerationSeconds": {
                                                          "description": "TolerationSeconds represents the period of time the toleration (which must be of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default, it is not set, which means tolerate the taint forever (do not evict). Zero and negative values will be treated as 0 (evict immediately) by the system.",
                                                          "format": "int64",
                                                          "type": "integer"
                                                        },
                                                        "value": {
                                                          "description": "Value is the taint value the toleration matches to. If the operator is Exists, the value should be empty, otherwise just a regular string.",
                                                          "type": "string"
                                                        }
                                                      },
                                                      "type": "object"
                                                    },
                                                    "type": "array"
                                                  }
                                                },
                                                "type": "object"
                                              }
                                            },
                                            "type": "object"
                                          },
                                          "serviceType": {
                                            "description": "Optional service type for Kubernetes solver service. Supported values are NodePort or ClusterIP. If unset, defaults to NodePort.",
                                            "type": "string"
                                          }
                                        },
                                        "type": "object"
                                      }
                                    },
                                    "type": "object"
                                  },
                                  "selector": {
                                    "description": "Selector selects a set of DNSNames on the Certificate resource that should be solved using this challenge solver. If not specified, the solver will be treated as the 'default' solver with the lowest priority, i.e. if any other solver has a more specific match, it will be used instead.",
                                    "properties": {
                                      "dnsNames": {
                                        "description": "List of DNSNames that this solver will be used to solve. If specified and a match is found, a dnsNames selector will take precedence over a dnsZones selector. If multiple solvers match with the same dnsNames value, the solver with the most matching labels in matchLabels will be selected. If neither has more matches, the solver defined earlier in the list will be selected.",
                                        "items": {
                                          "type": "string"
                                        },
                                        "type": "array"
                                      },
                                      "dnsZones": {
                                        "description": "List of DNSZones that this solver will be used to solve. The most specific DNS zone match specified here will take precedence over other DNS zone matches, so a solver specifying sys.example.com will be selected over one specifying example.com for the domain www.sys.example.com. If multiple solvers match with the same dnsZones value, the solver with the most matching labels in matchLabels will be selected. If neither has more matches, the solver defined earlier in the list will be selected.",
                                        "items": {
                                          "type": "string"
                                        },
                                        "type": "array"
                                      },
                                      "matchLabels": {
                                        "additionalProperties": {
                                          "type": "string"
                                        },
                                        "description": "A label selector that is used to refine the set of certificate's that this challenge solver will apply to.",
                                        "type": "object"
                                      }
                                    },
                                    "type": "object"
                                  }
                                },
                                "type": "object"
                              },
                              "type": "array"
                            }
                          },
                          "required": [
                            "privateKeySecretRef",
                            "server"
                          ],
                          "type": "object"
                        },
                        "ca": {
                          "description": "CA configures this issuer to sign certificates using a signing CA keypair stored in a Secret resource. This is used to build internal PKIs that are managed by cert-manager.",
                          "properties": {
                            "crlDistributionPoints": {
                              "description": "The CRL distribution points is an X.509 v3 certificate extension which identifies the location of the CRL from which the revocation of this certificate can be checked. If not set, certificates will be issued without distribution points set.",
                              "items": {
                                "type": "string"
                              },
                              "type": "array"
                            },
                            "issuingCertificateURLs": {
                              "description": "IssuingCertificateURLs is a list of URLs which this issuer should embed into certificates it creates. See https://www.rfc-editor.org/rfc/rfc5280#section-4.2.2.1 for more details. As an example, such a URL might be \"http://ca.domain.com/ca.crt\".",
                              "items": {
                                "type": "string"
                              },
                              "type": "array"
                            },
                            "ocspServers": {
                              "description": "The OCSP server list is an X.509 v3 extension that defines a list of URLs of OCSP responders. The OCSP responders can be queried for the revocation status of an issued certificate. If not set, the certificate will be issued with no OCSP servers set. For example, an OCSP server URL could be \"http://ocsp.int-x3.letsencrypt.org\".",
                              "items": {
                                "type": "string"
                              },
                              "type": "array"
                            },
                            "secretName": {
                              "description": "SecretName is the name of the secret used to sign Certificates issued by this Issuer.",
                              "type": "string"
                            }
                          },
                          "required": [
                            "secretName"
                          ],
                          "type": "object"
                        },
                        "selfSigned": {
                          "description": "SelfSigned configures this issuer to 'self sign' certificates using the private key used to create the CertificateRequest object.",
                          "properties": {
                            "crlDistributionPoints": {
                              "description": "The CRL distribution points is an X.509 v3 certificate extension which identifies the location of the CRL from which the revocation of this certificate can be checked. If not set certificate will be issued without CDP. Values are strings.",
                              "items": {
                                "type": "string"
                              },
                              "type": "array"
                            }
                          },
                          "type": "object"
                        },
                        "vault": {
                          "description": "Vault configures this issuer to sign certificates using a HashiCorp Vault PKI backend.",
                          "properties": {
                            "auth": {
                              "description": "Auth configures how cert-manager authenticates with the Vault server.",
                              "properties": {
                                "appRole": {
                                  "description": "AppRole authenticates with Vault using the App Role auth mechanism, with the role and secret stored in a Kubernetes Secret resource.",
                                  "properties": {
                                    "path": {
                                      "description": "Path where the App Role authentication backend is mounted in Vault, e.g: \"approle\"",
                                      "type": "string"
                                    },
                                    "roleId": {
                                      "description": "RoleID configured in the App Role authentication backend when setting up the authentication backend in Vault.",
                                      "type": "string"
                                    },
                                    "secretRef": {
                                      "description": "Reference to a key in a Secret that contains the App Role secret used to authenticate with Vault. The `key` field must be specified and denotes which entry within the Secret resource is used as the app role secret.",
                                      "properties": {
                                        "key": {
                                          "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.",
                                          "type": "string"
                                        },
                                        "name": {
                                          "description": "Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "name"
                                      ],
                                      "type": "object"
                                    }
                                  },
                                  "required": [
                                    "path",
                                    "roleId",
                                    "secretRef"
                                  ],
                                  "type": "object"
                                },
                                "kubernetes": {
                                  "description": "Kubernetes authenticates with Vault by passing the ServiceAccount token stored in the named Secret resource to the Vault server.",
                                  "properties": {
                                    "mountPath": {
                                      "description": "The Vault mountPath here is the mount path to use when authenticating with Vault. For example, setting a value to `/v1/auth/foo`, will use the path `/v1/auth/foo/login` to authenticate with Vault. If unspecified, the default value \"/v1/auth/kubernetes\" will be used.",
                                      "type": "string"
                                    },
                                    "role": {
                                      "description": "A required field containing the Vault Role to assume. A Role binds a Kubernetes ServiceAccount with a set of Vault policies.",
                                      "type": "string"
                                    },
                                    "secretRef": {
                                      "description": "The required Secret field containing a Kubernetes ServiceAccount JWT used for authenticating with Vault. Use of 'ambient credentials' is not supported.",
                                      "properties": {
                                        "key": {
                                          "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.",
                                          "type": "string"
                                        },
                                        "name": {
                                          "description": "Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "name"
                                      ],
                                      "type": "object"
                                    },
                                    "serviceAccountRef": {
                                      "description": "A reference to a service account that will be used to request a bound token (also known as \"projected token\"). Compared to using \"secretRef\", using this field means that you don't rely on statically bound tokens. To use this field, you must configure an RBAC rule to let cert-manager request a token.",
                                      "properties": {
                                        "name": {
                                          "description": "Name of the ServiceAccount used to request a token.",
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "name"
                                      ],
                                      "type": "object"
                                    }
                                  },
                                  "required": [
                                    "role"
                                  ],
                                  "type": "object"
                                },
                                "tokenSecretRef": {
                                  "description": "TokenSecretRef authenticates with Vault by presenting a token.",
                                  "properties": {
                                    "key": {
                                      "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.",
                                      "type": "string"
                                    },
                                    "name": {
                                      "description": "Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "name"
                                  ],
                                  "type": "object"
                                }
                              },
                              "type": "object"
                            },
                            "caBundle": {
                              "description": "Base64-encoded bundle of PEM CAs which will be used to validate the certificate chain presented by Vault. Only used if using HTTPS to connect to Vault and ignored for HTTP connections. Mutually exclusive with CABundleSecretRef. If neither CABundle nor CABundleSecretRef are defined, the certificate bundle in the cert-manager controller container is used to validate the TLS connection.",
                              "format": "byte",
                              "type": "string"
                            },
                            "caBundleSecretRef": {
                              "description": "Reference to a Secret containing a bundle of PEM-encoded CAs to use when verifying the certificate chain presented by Vault when using HTTPS. Mutually exclusive with CABundle. If neither CABundle nor CABundleSecretRef are defined, the certificate bundle in the cert-manager controller container is used to validate the TLS connection. If no key for the Secret is specified, cert-manager will default to 'ca.crt'.",
                              "properties": {
                                "key": {
                                  "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.",
                                  "type": "string"
                                },
                                "name": {
                                  "description": "Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                  "type": "string"
                                }
                              },
                              "required": [
                                "name"
                              ],
                              "type": "object"
                            },
                            "namespace": {
                              "description": "Name of the vault namespace. Namespaces is a set of features within Vault Enterprise that allows Vault environments to support Secure Multi-tenancy. e.g: \"ns1\" More about namespaces can be found here https://www.vaultproject.io/docs/enterprise/namespaces",
                              "type": "string"
                            },
                            "path": {
                              "description": "Path is the mount path of the Vault PKI backend's `sign` endpoint, e.g: \"my_pki_mount/sign/my-role-name\".",
                              "type": "string"
                            },
                            "server": {
                              "description": "Server is the connection address for the Vault server, e.g: \"https://vault.example.com:8200\".",
                              "type": "string"
                            }
                          },
                          "required": [
                            "auth",
                            "path",
                            "server"
                          ],
                          "type": "object"
                        },
                        "venafi": {
                          "description": "Venafi configures this issuer to sign certificates using a Venafi TPP or Venafi Cloud policy zone.",
                          "properties": {
                            "cloud": {
                              "description": "Cloud specifies the Venafi cloud configuration settings. Only one of TPP or Cloud may be specified.",
                              "properties": {
                                "apiTokenSecretRef": {
                                  "description": "APITokenSecretRef is a secret key selector for the Venafi Cloud API token.",
                                  "properties": {
                                    "key": {
                                      "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.",
                                      "type": "string"
                                    },
                                    "name": {
                                      "description": "Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "name"
                                  ],
                                  "type": "object"
                                },
                                "url": {
                                  "description": "URL is the base URL for Venafi Cloud. Defaults to \"https://api.venafi.cloud/v1\".",
                                  "type": "string"
                                }
                              },
                              "required": [
                                "apiTokenSecretRef"
                              ],
                              "type": "object"
                            },
                            "tpp": {
                              "description": "TPP specifies Trust Protection Platform configuration settings. Only one of TPP or Cloud may be specified.",
                              "properties": {
                                "caBundle": {
                                  "description": "Base64-encoded bundle of PEM CAs which will be used to validate the certificate chain presented by the TPP server. Only used if using HTTPS; ignored for HTTP. If undefined, the certificate bundle in the cert-manager controller container is used to validate the chain.",
                                  "format": "byte",
                                  "type": "string"
                                },
                                "credentialsRef": {
                                  "description": "CredentialsRef is a reference to a Secret containing the username and password for the TPP server. The secret must contain two keys, 'username' and 'password'.",
                                  "properties": {
                                    "name": {
                                      "description": "Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "name"
                                  ],
                                  "type": "object"
                                },
                                "url": {
                                  "description": "URL is the base URL for the vedsdk endpoint of the Venafi TPP instance, for example: \"https://tpp.example.com/vedsdk\".",
                                  "type": "string"
                                }
                              },
                              "required": [
                                "credentialsRef",
                                "url"
                              ],
                              "type": "object"
                            },
                            "zone": {
                              "description": "Zone is the Venafi Policy Zone to use for this issuer. All requests made to the Venafi platform will be restricted by the named zone policy. This field is required.",
                              "type": "string"
                            }
                          },
                          "required": [
                            "zone"
                          ],
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "status": {
                      "description": "Status of the ClusterIssuer. This is set and managed automatically.",
                      "properties": {
                        "acme": {
                          "description": "ACME specific status options. This field should only be set if the Issuer is configured to use an ACME server to issue certificates.",
                          "properties": {
                            "lastPrivateKeyHash": {
                              "description": "LastPrivateKeyHash is a hash of the private key associated with the latest registered ACME account, in order to track changes made to registered account associated with the Issuer",
                              "type": "string"
                            },
                            "lastRegisteredEmail": {
                              "description": "LastRegisteredEmail is the email associated with the latest registered ACME account, in order to track changes made to registered account associated with the  Issuer",
                              "type": "string"
                            },
                            "uri": {
                              "description": "URI is the unique account identifier, which can also be used to retrieve account details from the CA",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "conditions": {
                          "description": "List of status conditions to indicate the status of a CertificateRequest. Known condition types are `Ready`.",
                          "items": {
                            "description": "IssuerCondition contains condition information for an Issuer.",
                            "properties": {
                              "lastTransitionTime": {
                                "description": "LastTransitionTime is the timestamp corresponding to the last status change of this condition.",
                                "format": "date-time",
                                "type": "string"
                              },
                              "message": {
                                "description": "Message is a human readable description of the details of the last transition, complementing reason.",
                                "type": "string"
                              },
                              "observedGeneration": {
                                "description": "If set, this represents the .metadata.generation that the condition was set based upon. For instance, if .metadata.generation is currently 12, but the .status.condition[x].observedGeneration is 9, the condition is out of date with respect to the current state of the Issuer.",
                                "format": "int64",
                                "type": "integer"
                              },
                              "reason": {
                                "description": "Reason is a brief machine readable explanation for the condition's last transition.",
                                "type": "string"
                              },
                              "status": {
                                "description": "Status of the condition, one of (`True`, `False`, `Unknown`).",
                                "enum": [
                                  "True",
                                  "False",
                                  "Unknown"
                                ],
                                "type": "string"
                              },
                              "type": {
                                "description": "Type of the condition, known values are (`Ready`).",
                                "type": "string"
                              }
                            },
                            "required": [
                              "status",
                              "type"
                            ],
                            "type": "object"
                          },
                          "type": "array",
                          "x-kubernetes-list-map-keys": [
                            "type"
                          ],
                          "x-kubernetes-list-type": "map"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "required": [
                    "spec"
                  ],
                  "type": "object"
                }
              },
              "served": true,
              "storage": true,
              "subresources": {
                "status": {}
              }
            }
          ]
        }
      },
      "component": {
        "version": "apiextensions.k8s.io/v1",
        "kind": "CustomResourceDefinition",
        "schema": ""
      }
    },
    {
      "id": "dce73b82-d76b-4cdb-8fc2-d6a140731420",
      "schemaVersion": "components.meshery.io/v1beta1",
      "version": "v1.0.0",
      "displayName": "issuers.cert-manager.io",
      "description": "",
      "format": "",
      "model": {
        "id": "e633cca6-b6e1-65bf-a440-0d58915e75dd",
        "schemaVersion": "models.meshery.io/v1beta1",
        "version": "v1.0.0",
        "name": "kubernetes",
        "displayName": "Kubernetes",
        "status": "enabled",
        "registrant": {
          "id": "f9a29d70-c287-426c-a90c-2a96590c8083",
          "name": "Github",
          "credential_id": "00000000-0000-0000-0000-000000000000",
          "type": "registry",
          "sub_type": "",
          "kind": "github",
          "status": "registered",
          "user_id": "00000000-0000-0000-0000-000000000000",
          "created_at": "2025-06-22T05:56:58.393994634Z",
          "updated_at": "2025-06-22T05:56:58.393994634Z",
          "deleted_at": "0001-01-01T00:00:00Z"
        },
        "connection_id": "f9a29d70-c287-426c-a90c-2a96590c8083",
        "category": {
          "id": "9ca27d0d-66ce-42a9-8c85-6236563f2ddb",
          "name": "Orchestration \u0026 Management"
        },
        "subCategory": "Scheduling \u0026 Orchestration",
        "metadata": {
          "isAnnotation": false,
          "primaryColor": "#326CE5",
          "secondaryColor": "#7aa1f0",
          "shape": "circle",
          "styleOverrides": "",
          "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/kubernetes-color.svg",
          "svgComplete": "",
          "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/kubernetes-white.svg"
        },
        "model": {
          "version": "v1.32.0-alpha.3"
        },
        "components_count": 0,
        "relationships_count": 0,
        "components": null,
        "relationships": null
      },
      "styles": {
        "position": {
          "x": 719.25,
          "y": 562.9114685058594
        },
        "primaryColor": "#326CE5",
        "secondaryColor": "#7aa1f0",
        "shape": "circle",
        "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/customresourcedefinition-color.svg",
        "svgComplete": "",
        "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/customresourcedefinition-white.svg",
        "z-index": 9
      },
      "capabilities": [],
      "status": "enabled",
      "metadata": {
        "configurationUISchema": "",
        "genealogy": "",
        "instanceDetails": null,
        "isAnnotation": false,
        "isNamespaced": false,
        "published": false,
        "source_uri": "git://github.com/kubernetes/kubernetes/master/api/openapi-spec/v3"
      },
      "configuration": {
        "metadata": {
          "labels": {
            "app": "cert-manager",
            "app.kubernetes.io/instance": "cert-manager",
            "app.kubernetes.io/name": "cert-manager",
            "app.kubernetes.io/version": "v1.14.1"
          },
          "name": "issuers.cert-manager.io"
        },
        "spec": {
          "group": "cert-manager.io",
          "names": {
            "categories": [
              "cert-manager"
            ],
            "kind": "Issuer",
            "listKind": "IssuerList",
            "plural": "issuers",
            "singular": "issuer"
          },
          "scope": "Namespaced",
          "versions": [
            {
              "additionalPrinterColumns": [
                {
                  "jsonPath": ".status.conditions[?(@.type==\"Ready\")].status",
                  "name": "Ready",
                  "type": "string"
                },
                {
                  "jsonPath": ".status.conditions[?(@.type==\"Ready\")].message",
                  "name": "Status",
                  "priority": 1,
                  "type": "string"
                },
                {
                  "description": "CreationTimestamp is a timestamp representing the server time when this object was created. It is not guaranteed to be set in happens-before order across separate operations. Clients may not set this value. It is represented in RFC3339 form and is in UTC.",
                  "jsonPath": ".metadata.creationTimestamp",
                  "name": "Age",
                  "type": "date"
                }
              ],
              "name": "v1",
              "schema": {
                "openAPIV3Schema": {
                  "description": "An Issuer represents a certificate issuing authority which can be referenced as part of `issuerRef` fields. It is scoped to a single namespace and can therefore only be referenced by resources within the same namespace.",
                  "properties": {
                    "apiVersion": {
                      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                      "type": "string"
                    },
                    "kind": {
                      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                      "type": "string"
                    },
                    "metadata": {
                      "type": "object"
                    },
                    "spec": {
                      "description": "Desired state of the Issuer resource.",
                      "properties": {
                        "acme": {
                          "description": "ACME configures this issuer to communicate with a RFC8555 (ACME) server to obtain signed x509 certificates.",
                          "properties": {
                            "caBundle": {
                              "description": "Base64-encoded bundle of PEM CAs which can be used to validate the certificate chain presented by the ACME server. Mutually exclusive with SkipTLSVerify; prefer using CABundle to prevent various kinds of security vulnerabilities. If CABundle and SkipTLSVerify are unset, the system certificate bundle inside the container is used to validate the TLS connection.",
                              "format": "byte",
                              "type": "string"
                            },
                            "disableAccountKeyGeneration": {
                              "description": "Enables or disables generating a new ACME account key. If true, the Issuer resource will *not* request a new account but will expect the account key to be supplied via an existing secret. If false, the cert-manager system will generate a new ACME account key for the Issuer. Defaults to false.",
                              "type": "boolean"
                            },
                            "email": {
                              "description": "Email is the email address to be associated with the ACME account. This field is optional, but it is strongly recommended to be set. It will be used to contact you in case of issues with your account or certificates, including expiry notification emails. This field may be updated after the account is initially registered.",
                              "type": "string"
                            },
                            "enableDurationFeature": {
                              "description": "Enables requesting a Not After date on certificates that matches the duration of the certificate. This is not supported by all ACME servers like Let's Encrypt. If set to true when the ACME server does not support it it will create an error on the Order. Defaults to false.",
                              "type": "boolean"
                            },
                            "externalAccountBinding": {
                              "description": "ExternalAccountBinding is a reference to a CA external account of the ACME server. If set, upon registration cert-manager will attempt to associate the given external account credentials with the registered ACME account.",
                              "properties": {
                                "keyAlgorithm": {
                                  "description": "Deprecated: keyAlgorithm field exists for historical compatibility reasons and should not be used. The algorithm is now hardcoded to HS256 in golang/x/crypto/acme.",
                                  "enum": [
                                    "HS256",
                                    "HS384",
                                    "HS512"
                                  ],
                                  "type": "string"
                                },
                                "keyID": {
                                  "description": "keyID is the ID of the CA key that the External Account is bound to.",
                                  "type": "string"
                                },
                                "keySecretRef": {
                                  "description": "keySecretRef is a Secret Key Selector referencing a data item in a Kubernetes Secret which holds the symmetric MAC key of the External Account Binding. The `key` is the index string that is paired with the key data in the Secret and should not be confused with the key data itself, or indeed with the External Account Binding keyID above. The secret key stored in the Secret **must** be un-padded, base64 URL encoded data.",
                                  "properties": {
                                    "key": {
                                      "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.",
                                      "type": "string"
                                    },
                                    "name": {
                                      "description": "Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "name"
                                  ],
                                  "type": "object"
                                }
                              },
                              "required": [
                                "keyID",
                                "keySecretRef"
                              ],
                              "type": "object"
                            },
                            "preferredChain": {
                              "description": "PreferredChain is the chain to use if the ACME server outputs multiple. PreferredChain is no guarantee that this one gets delivered by the ACME endpoint. For example, for Let's Encrypt's DST crosssign you would use: \"DST Root CA X3\" or \"ISRG Root X1\" for the newer Let's Encrypt root CA. This value picks the first certificate bundle in the ACME alternative chains that has a certificate with this value as its issuer's CN",
                              "maxLength": 64,
                              "type": "string"
                            },
                            "privateKeySecretRef": {
                              "description": "PrivateKey is the name of a Kubernetes Secret resource that will be used to store the automatically generated ACME account private key. Optionally, a `key` may be specified to select a specific entry within the named Secret resource. If `key` is not specified, a default of `tls.key` will be used.",
                              "properties": {
                                "key": {
                                  "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.",
                                  "type": "string"
                                },
                                "name": {
                                  "description": "Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                  "type": "string"
                                }
                              },
                              "required": [
                                "name"
                              ],
                              "type": "object"
                            },
                            "server": {
                              "description": "Server is the URL used to access the ACME server's 'directory' endpoint. For example, for Let's Encrypt's staging endpoint, you would use: \"https://acme-staging-v02.api.letsencrypt.org/directory\". Only ACME v2 endpoints (i.e. RFC 8555) are supported.",
                              "type": "string"
                            },
                            "skipTLSVerify": {
                              "description": "INSECURE: Enables or disables validation of the ACME server TLS certificate. If true, requests to the ACME server will not have the TLS certificate chain validated. Mutually exclusive with CABundle; prefer using CABundle to prevent various kinds of security vulnerabilities. Only enable this option in development environments. If CABundle and SkipTLSVerify are unset, the system certificate bundle inside the container is used to validate the TLS connection. Defaults to false.",
                              "type": "boolean"
                            },
                            "solvers": {
                              "description": "Solvers is a list of challenge solvers that will be used to solve ACME challenges for the matching domains. Solver configurations must be provided in order to obtain certificates from an ACME server. For more information, see: https://cert-manager.io/docs/configuration/acme/",
                              "items": {
                                "description": "An ACMEChallengeSolver describes how to solve ACME challenges for the issuer it is part of. A selector may be provided to use different solving strategies for different DNS names. Only one of HTTP01 or DNS01 must be provided.",
                                "properties": {
                                  "dns01": {
                                    "description": "Configures cert-manager to attempt to complete authorizations by performing the DNS01 challenge flow.",
                                    "properties": {
                                      "acmeDNS": {
                                        "description": "Use the 'ACME DNS' (https://github.com/joohoi/acme-dns) API to manage DNS01 challenge records.",
                                        "properties": {
                                          "accountSecretRef": {
                                            "description": "A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.",
                                            "properties": {
                                              "key": {
                                                "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.",
                                                "type": "string"
                                              },
                                              "name": {
                                                "description": "Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                                "type": "string"
                                              }
                                            },
                                            "required": [
                                              "name"
                                            ],
                                            "type": "object"
                                          },
                                          "host": {
                                            "type": "string"
                                          }
                                        },
                                        "required": [
                                          "accountSecretRef",
                                          "host"
                                        ],
                                        "type": "object"
                                      },
                                      "akamai": {
                                        "description": "Use the Akamai DNS zone management API to manage DNS01 challenge records.",
                                        "properties": {
                                          "accessTokenSecretRef": {
                                            "description": "A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.",
                                            "properties": {
                                              "key": {
                                                "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.",
                                                "type": "string"
                                              },
                                              "name": {
                                                "description": "Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                                "type": "string"
                                              }
                                            },
                                            "required": [
                                              "name"
                                            ],
                                            "type": "object"
                                          },
                                          "clientSecretSecretRef": {
                                            "description": "A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.",
                                            "properties": {
                                              "key": {
                                                "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.",
                                                "type": "string"
                                              },
                                              "name": {
                                                "description": "Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                                "type": "string"
                                              }
                                            },
                                            "required": [
                                              "name"
                                            ],
                                            "type": "object"
                                          },
                                          "clientTokenSecretRef": {
                                            "description": "A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.",
                                            "properties": {
                                              "key": {
                                                "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.",
                                                "type": "string"
                                              },
                                              "name": {
                                                "description": "Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                                "type": "string"
                                              }
                                            },
                                            "required": [
                                              "name"
                                            ],
                                            "type": "object"
                                          },
                                          "serviceConsumerDomain": {
                                            "type": "string"
                                          }
                                        },
                                        "required": [
                                          "accessTokenSecretRef",
                                          "clientSecretSecretRef",
                                          "clientTokenSecretRef",
                                          "serviceConsumerDomain"
                                        ],
                                        "type": "object"
                                      },
                                      "azureDNS": {
                                        "description": "Use the Microsoft Azure DNS API to manage DNS01 challenge records.",
                                        "properties": {
                                          "clientID": {
                                            "description": "Auth: Azure Service Principal: The ClientID of the Azure Service Principal used to authenticate with Azure DNS. If set, ClientSecret and TenantID must also be set.",
                                            "type": "string"
                                          },
                                          "clientSecretSecretRef": {
                                            "description": "Auth: Azure Service Principal: A reference to a Secret containing the password associated with the Service Principal. If set, ClientID and TenantID must also be set.",
                                            "properties": {
                                              "key": {
                                                "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.",
                                                "type": "string"
                                              },
                                              "name": {
                                                "description": "Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                                "type": "string"
                                              }
                                            },
                                            "required": [
                                              "name"
                                            ],
                                            "type": "object"
                                          },
                                          "environment": {
                                            "description": "name of the Azure environment (default AzurePublicCloud)",
                                            "enum": [
                                              "AzurePublicCloud",
                                              "AzureChinaCloud",
                                              "AzureGermanCloud",
                                              "AzureUSGovernmentCloud"
                                            ],
                                            "type": "string"
                                          },
                                          "hostedZoneName": {
                                            "description": "name of the DNS zone that should be used",
                                            "type": "string"
                                          },
                                          "managedIdentity": {
                                            "description": "Auth: Azure Workload Identity or Azure Managed Service Identity: Settings to enable Azure Workload Identity or Azure Managed Service Identity If set, ClientID, ClientSecret and TenantID must not be set.",
                                            "properties": {
                                              "clientID": {
                                                "description": "client ID of the managed identity, can not be used at the same time as resourceID",
                                                "type": "string"
                                              },
                                              "resourceID": {
                                                "description": "resource ID of the managed identity, can not be used at the same time as clientID Cannot be used for Azure Managed Service Identity",
                                                "type": "string"
                                              }
                                            },
                                            "type": "object"
                                          },
                                          "resourceGroupName": {
                                            "description": "resource group the DNS zone is located in",
                                            "type": "string"
                                          },
                                          "subscriptionID": {
                                            "description": "ID of the Azure subscription",
                                            "type": "string"
                                          },
                                          "tenantID": {
                                            "description": "Auth: Azure Service Principal: The TenantID of the Azure Service Principal used to authenticate with Azure DNS. If set, ClientID and ClientSecret must also be set.",
                                            "type": "string"
                                          }
                                        },
                                        "required": [
                                          "resourceGroupName",
                                          "subscriptionID"
                                        ],
                                        "type": "object"
                                      },
                                      "cloudDNS": {
                                        "description": "Use the Google Cloud DNS API to manage DNS01 challenge records.",
                                        "properties": {
                                          "hostedZoneName": {
                                            "description": "HostedZoneName is an optional field that tells cert-manager in which Cloud DNS zone the challenge record has to be created. If left empty cert-manager will automatically choose a zone.",
                                            "type": "string"
                                          },
                                          "project": {
                                            "type": "string"
                                          },
                                          "serviceAccountSecretRef": {
                                            "description": "A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.",
                                            "properties": {
                                              "key": {
                                                "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.",
                                                "type": "string"
                                              },
                                              "name": {
                                                "description": "Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                                "type": "string"
                                              }
                                            },
                                            "required": [
                                              "name"
                                            ],
                                            "type": "object"
                                          }
                                        },
                                        "required": [
                                          "project"
                                        ],
                                        "type": "object"
                                      },
                                      "cloudflare": {
                                        "description": "Use the Cloudflare API to manage DNS01 challenge records.",
                                        "properties": {
                                          "apiKeySecretRef": {
                                            "description": "API key to use to authenticate with Cloudflare. Note: using an API token to authenticate is now the recommended method as it allows greater control of permissions.",
                                            "properties": {
                                              "key": {
                                                "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.",
                                                "type": "string"
                                              },
                                              "name": {
                                                "description": "Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                                "type": "string"
                                              }
                                            },
                                            "required": [
                                              "name"
                                            ],
                                            "type": "object"
                                          },
                                          "apiTokenSecretRef": {
                                            "description": "API token used to authenticate with Cloudflare.",
                                            "properties": {
                                              "key": {
                                                "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.",
                                                "type": "string"
                                              },
                                              "name": {
                                                "description": "Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                                "type": "string"
                                              }
                                            },
                                            "required": [
                                              "name"
                                            ],
                                            "type": "object"
                                          },
                                          "email": {
                                            "description": "Email of the account, only required when using API key based authentication.",
                                            "type": "string"
                                          }
                                        },
                                        "type": "object"
                                      },
                                      "cnameStrategy": {
                                        "description": "CNAMEStrategy configures how the DNS01 provider should handle CNAME records when found in DNS zones.",
                                        "enum": [
                                          "None",
                                          "Follow"
                                        ],
                                        "type": "string"
                                      },
                                      "digitalocean": {
                                        "description": "Use the DigitalOcean DNS API to manage DNS01 challenge records.",
                                        "properties": {
                                          "tokenSecretRef": {
                                            "description": "A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.",
                                            "properties": {
                                              "key": {
                                                "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.",
                                                "type": "string"
                                              },
                                              "name": {
                                                "description": "Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                                "type": "string"
                                              }
                                            },
                                            "required": [
                                              "name"
                                            ],
                                            "type": "object"
                                          }
                                        },
                                        "required": [
                                          "tokenSecretRef"
                                        ],
                                        "type": "object"
                                      },
                                      "rfc2136": {
                                        "description": "Use RFC2136 (\"Dynamic Updates in the Domain Name System\") (https://datatracker.ietf.org/doc/rfc2136/) to manage DNS01 challenge records.",
                                        "properties": {
                                          "nameserver": {
                                            "description": "The IP address or hostname of an authoritative DNS server supporting RFC2136 in the form host:port. If the host is an IPv6 address it must be enclosed in square brackets (e.g [2001:db8::1]) ; port is optional. This field is required.",
                                            "type": "string"
                                          },
                                          "tsigAlgorithm": {
                                            "description": "The TSIG Algorithm configured in the DNS supporting RFC2136. Used only when ``tsigSecretSecretRef`` and ``tsigKeyName`` are defined. Supported values are (case-insensitive): ``HMACMD5`` (default), ``HMACSHA1``, ``HMACSHA256`` or ``HMACSHA512``.",
                                            "type": "string"
                                          },
                                          "tsigKeyName": {
                                            "description": "The TSIG Key name configured in the DNS. If ``tsigSecretSecretRef`` is defined, this field is required.",
                                            "type": "string"
                                          },
                                          "tsigSecretSecretRef": {
                                            "description": "The name of the secret containing the TSIG value. If ``tsigKeyName`` is defined, this field is required.",
                                            "properties": {
                                              "key": {
                                                "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.",
                                                "type": "string"
                                              },
                                              "name": {
                                                "description": "Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                                "type": "string"
                                              }
                                            },
                                            "required": [
                                              "name"
                                            ],
                                            "type": "object"
                                          }
                                        },
                                        "required": [
                                          "nameserver"
                                        ],
                                        "type": "object"
                                      },
                                      "route53": {
                                        "description": "Use the AWS Route53 API to manage DNS01 challenge records.",
                                        "properties": {
                                          "accessKeyID": {
                                            "description": "The AccessKeyID is used for authentication. Cannot be set when SecretAccessKeyID is set. If neither the Access Key nor Key ID are set, we fall-back to using env vars, shared credentials file or AWS Instance metadata, see: https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/configuring-sdk.html#specifying-credentials",
                                            "type": "string"
                                          },
                                          "accessKeyIDSecretRef": {
                                            "description": "The SecretAccessKey is used for authentication. If set, pull the AWS access key ID from a key within a Kubernetes Secret. Cannot be set when AccessKeyID is set. If neither the Access Key nor Key ID are set, we fall-back to using env vars, shared credentials file or AWS Instance metadata, see: https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/configuring-sdk.html#specifying-credentials",
                                            "properties": {
                                              "key": {
                                                "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.",
                                                "type": "string"
                                              },
                                              "name": {
                                                "description": "Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                                "type": "string"
                                              }
                                            },
                                            "required": [
                                              "name"
                                            ],
                                            "type": "object"
                                          },
                                          "hostedZoneID": {
                                            "description": "If set, the provider will manage only this zone in Route53 and will not do an lookup using the route53:ListHostedZonesByName api call.",
                                            "type": "string"
                                          },
                                          "region": {
                                            "description": "Always set the region when using AccessKeyID and SecretAccessKey",
                                            "type": "string"
                                          },
                                          "role": {
                                            "description": "Role is a Role ARN which the Route53 provider will assume using either the explicit credentials AccessKeyID/SecretAccessKey or the inferred credentials from environment variables, shared credentials file or AWS Instance metadata",
                                            "type": "string"
                                          },
                                          "secretAccessKeySecretRef": {
                                            "description": "The SecretAccessKey is used for authentication. If neither the Access Key nor Key ID are set, we fall-back to using env vars, shared credentials file or AWS Instance metadata, see: https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/configuring-sdk.html#specifying-credentials",
                                            "properties": {
                                              "key": {
                                                "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.",
                                                "type": "string"
                                              },
                                              "name": {
                                                "description": "Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                                "type": "string"
                                              }
                                            },
                                            "required": [
                                              "name"
                                            ],
                                            "type": "object"
                                          }
                                        },
                                        "required": [
                                          "region"
                                        ],
                                        "type": "object"
                                      },
                                      "webhook": {
                                        "description": "Configure an external webhook based DNS01 challenge solver to manage DNS01 challenge records.",
                                        "properties": {
                                          "config": {
                                            "description": "Additional configuration that should be passed to the webhook apiserver when challenges are processed. This can contain arbitrary JSON data. Secret values should not be specified in this stanza. If secret values are needed (e.g. credentials for a DNS service), you should use a SecretKeySelector to reference a Secret resource. For details on the schema of this field, consult the webhook provider implementation's documentation.",
                                            "x-kubernetes-preserve-unknown-fields": true
                                          },
                                          "groupName": {
                                            "description": "The API group name that should be used when POSTing ChallengePayload resources to the webhook apiserver. This should be the same as the GroupName specified in the webhook provider implementation.",
                                            "type": "string"
                                          },
                                          "solverName": {
                                            "description": "The name of the solver to use, as defined in the webhook provider implementation. This will typically be the name of the provider, e.g. 'cloudflare'.",
                                            "type": "string"
                                          }
                                        },
                                        "required": [
                                          "groupName",
                                          "solverName"
                                        ],
                                        "type": "object"
                                      }
                                    },
                                    "type": "object"
                                  },
                                  "http01": {
                                    "description": "Configures cert-manager to attempt to complete authorizations by performing the HTTP01 challenge flow. It is not possible to obtain certificates for wildcard domain names (e.g. `*.example.com`) using the HTTP01 challenge mechanism.",
                                    "properties": {
                                      "gatewayHTTPRoute": {
                                        "description": "The Gateway API is a sig-network community API that models service networking in Kubernetes (https://gateway-api.sigs.k8s.io/). The Gateway solver will create HTTPRoutes with the specified labels in the same namespace as the challenge. This solver is experimental, and fields / behaviour may change in the future.",
                                        "properties": {
                                          "labels": {
                                            "additionalProperties": {
                                              "type": "string"
                                            },
                                            "description": "Custom labels that will be applied to HTTPRoutes created by cert-manager while solving HTTP-01 challenges.",
                                            "type": "object"
                                          },
                                          "parentRefs": {
                                            "description": "When solving an HTTP-01 challenge, cert-manager creates an HTTPRoute. cert-manager needs to know which parentRefs should be used when creating the HTTPRoute. Usually, the parentRef references a Gateway. See: https://gateway-api.sigs.k8s.io/api-types/httproute/#attaching-to-gateways",
                                            "items": {
                                              "description": "ParentReference identifies an API object (usually a Gateway) that can be considered a parent of this resource (usually a route). There are two kinds of parent resources with \"Core\" support: \n * Gateway (Gateway conformance profile) * Service (Mesh conformance profile, experimental, ClusterIP Services only) \n This API may be extended in the future to support additional kinds of parent resources. \n The API object must be valid in the cluster; the Group and Kind must be registered in the cluster for this reference to be valid.",
                                              "properties": {
                                                "group": {
                                                  "default": "gateway.networking.k8s.io",
                                                  "description": "Group is the group of the referent. When unspecified, \"gateway.networking.k8s.io\" is inferred. To set the core API group (such as for a \"Service\" kind referent), Group must be explicitly set to \"\" (empty string). \n Support: Core",
                                                  "maxLength": 253,
                                                  "pattern": "^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$",
                                                  "type": "string"
                                                },
                                                "kind": {
                                                  "default": "Gateway",
                                                  "description": "Kind is kind of the referent. \n There are two kinds of parent resources with \"Core\" support: \n * Gateway (Gateway conformance profile) * Service (Mesh conformance profile, experimental, ClusterIP Services only) \n Support for other resources is Implementation-Specific.",
                                                  "maxLength": 63,
                                                  "minLength": 1,
                                                  "pattern": "^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$",
                                                  "type": "string"
                                                },
                                                "name": {
                                                  "description": "Name is the name of the referent. \n Support: Core",
                                                  "maxLength": 253,
                                                  "minLength": 1,
                                                  "type": "string"
                                                },
                                                "namespace": {
                                                  "description": "Namespace is the namespace of the referent. When unspecified, this refers to the local namespace of the Route. \n Note that there are specific rules for ParentRefs which cross namespace boundaries. Cross-namespace references are only valid if they are explicitly allowed by something in the namespace they are referring to. For example: Gateway has the AllowedRoutes field, and ReferenceGrant provides a generic way to enable any other kind of cross-namespace reference. \n \u003cgateway:experimental:description\u003e ParentRefs from a Route to a Service in the same namespace are \"producer\" routes, which apply default routing rules to inbound connections from any namespace to the Service. \n ParentRefs from a Route to a Service in a different namespace are \"consumer\" routes, and these routing rules are only applied to outbound connections originating from the same namespace as the Route, for which the intended destination of the connections are a Service targeted as a ParentRef of the Route. \u003c/gateway:experimental:description\u003e \n Support: Core",
                                                  "maxLength": 63,
                                                  "minLength": 1,
                                                  "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$",
                                                  "type": "string"
                                                },
                                                "port": {
                                                  "description": "Port is the network port this Route targets. It can be interpreted differently based on the type of parent resource. \n When the parent resource is a Gateway, this targets all listeners listening on the specified port that also support this kind of Route(and select this Route). It's not recommended to set `Port` unless the networking behaviors specified in a Route must apply to a specific port as opposed to a listener(s) whose port(s) may be changed. When both Port and SectionName are specified, the name and port of the selected listener must match both specified values. \n \u003cgateway:experimental:description\u003e When the parent resource is a Service, this targets a specific port in the Service spec. When both Port (experimental) and SectionName are specified, the name and port of the selected port must match both specified values. \u003c/gateway:experimental:description\u003e \n Implementations MAY choose to support other parent resources. Implementations supporting other types of parent resources MUST clearly document how/if Port is interpreted. \n For the purpose of status, an attachment is considered successful as long as the parent resource accepts it partially. For example, Gateway listeners can restrict which Routes can attach to them by Route kind, namespace, or hostname. If 1 of 2 Gateway listeners accept attachment from the referencing Route, the Route MUST be considered successfully attached. If no Gateway listeners accept attachment from this Route, the Route MUST be considered detached from the Gateway. \n Support: Extended \n \u003cgateway:experimental\u003e",
                                                  "format": "int32",
                                                  "maximum": 65535,
                                                  "minimum": 1,
                                                  "type": "integer"
                                                },
                                                "sectionName": {
                                                  "description": "SectionName is the name of a section within the target resource. In the following resources, SectionName is interpreted as the following: \n * Gateway: Listener Name. When both Port (experimental) and SectionName are specified, the name and port of the selected listener must match both specified values. * Service: Port Name. When both Port (experimental) and SectionName are specified, the name and port of the selected listener must match both specified values. Note that attaching Routes to Services as Parents is part of experimental Mesh support and is not supported for any other purpose. \n Implementations MAY choose to support attaching Routes to other resources. If that is the case, they MUST clearly document how SectionName is interpreted. \n When unspecified (empty string), this will reference the entire resource. For the purpose of status, an attachment is considered successful if at least one section in the parent resource accepts it. For example, Gateway listeners can restrict which Routes can attach to them by Route kind, namespace, or hostname. If 1 of 2 Gateway listeners accept attachment from the referencing Route, the Route MUST be considered successfully attached. If no Gateway listeners accept attachment from this Route, the Route MUST be considered detached from the Gateway. \n Support: Core",
                                                  "maxLength": 253,
                                                  "minLength": 1,
                                                  "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$",
                                                  "type": "string"
                                                }
                                              },
                                              "required": [
                                                "name"
                                              ],
                                              "type": "object"
                                            },
                                            "type": "array"
                                          },
                                          "serviceType": {
                                            "description": "Optional service type for Kubernetes solver service. Supported values are NodePort or ClusterIP. If unset, defaults to NodePort.",
                                            "type": "string"
                                          }
                                        },
                                        "type": "object"
                                      },
                                      "ingress": {
                                        "description": "The ingress based HTTP01 challenge solver will solve challenges by creating or modifying Ingress resources in order to route requests for '/.well-known/acme-challenge/XYZ' to 'challenge solver' pods that are provisioned by cert-manager for each Challenge to be completed.",
                                        "properties": {
                                          "class": {
                                            "description": "This field configures the annotation `kubernetes.io/ingress.class` when creating Ingress resources to solve ACME challenges that use this challenge solver. Only one of `class`, `name` or `ingressClassName` may be specified.",
                                            "type": "string"
                                          },
                                          "ingressClassName": {
                                            "description": "This field configures the field `ingressClassName` on the created Ingress resources used to solve ACME challenges that use this challenge solver. This is the recommended way of configuring the ingress class. Only one of `class`, `name` or `ingressClassName` may be specified.",
                                            "type": "string"
                                          },
                                          "ingressTemplate": {
                                            "description": "Optional ingress template used to configure the ACME challenge solver ingress used for HTTP01 challenges.",
                                            "properties": {
                                              "metadata": {
                                                "description": "ObjectMeta overrides for the ingress used to solve HTTP01 challenges. Only the 'labels' and 'annotations' fields may be set. If labels or annotations overlap with in-built values, the values here will override the in-built values.",
                                                "properties": {
                                                  "annotations": {
                                                    "additionalProperties": {
                                                      "type": "string"
                                                    },
                                                    "description": "Annotations that should be added to the created ACME HTTP01 solver ingress.",
                                                    "type": "object"
                                                  },
                                                  "labels": {
                                                    "additionalProperties": {
                                                      "type": "string"
                                                    },
                                                    "description": "Labels that should be added to the created ACME HTTP01 solver ingress.",
                                                    "type": "object"
                                                  }
                                                },
                                                "type": "object"
                                              }
                                            },
                                            "type": "object"
                                          },
                                          "name": {
                                            "description": "The name of the ingress resource that should have ACME challenge solving routes inserted into it in order to solve HTTP01 challenges. This is typically used in conjunction with ingress controllers like ingress-gce, which maintains a 1:1 mapping between external IPs and ingress resources. Only one of `class`, `name` or `ingressClassName` may be specified.",
                                            "type": "string"
                                          },
                                          "podTemplate": {
                                            "description": "Optional pod template used to configure the ACME challenge solver pods used for HTTP01 challenges.",
                                            "properties": {
                                              "metadata": {
                                                "description": "ObjectMeta overrides for the pod used to solve HTTP01 challenges. Only the 'labels' and 'annotations' fields may be set. If labels or annotations overlap with in-built values, the values here will override the in-built values.",
                                                "properties": {
                                                  "annotations": {
                                                    "additionalProperties": {
                                                      "type": "string"
                                                    },
                                                    "description": "Annotations that should be added to the create ACME HTTP01 solver pods.",
                                                    "type": "object"
                                                  },
                                                  "labels": {
                                                    "additionalProperties": {
                                                      "type": "string"
                                                    },
                                                    "description": "Labels that should be added to the created ACME HTTP01 solver pods.",
                                                    "type": "object"
                                                  }
                                                },
                                                "type": "object"
                                              },
                                              "spec": {
                                                "description": "PodSpec defines overrides for the HTTP01 challenge solver pod. Check ACMEChallengeSolverHTTP01IngressPodSpec to find out currently supported fields. All other fields will be ignored.",
                                                "properties": {
                                                  "affinity": {
                                                    "description": "If specified, the pod's scheduling constraints",
                                                    "properties": {
                                                      "nodeAffinity": {
                                                        "description": "Describes node affinity scheduling rules for the pod.",
                                                        "properties": {
                                                          "preferredDuringSchedulingIgnoredDuringExecution": {
                                                            "description": "The scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding \"weight\" to the sum if the node matches the corresponding matchExpressions; the node(s) with the highest sum are the most preferred.",
                                                            "items": {
                                                              "description": "An empty preferred scheduling term matches all objects with implicit weight 0 (i.e. it's a no-op). A null preferred scheduling term matches no objects (i.e. is also a no-op).",
                                                              "properties": {
                                                                "preference": {
                                                                  "description": "A node selector term, associated with the corresponding weight.",
                                                                  "properties": {
                                                                    "matchExpressions": {
                                                                      "description": "A list of node selector requirements by node's labels.",
                                                                      "items": {
                                                                        "description": "A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
                                                                        "properties": {
                                                                          "key": {
                                                                            "description": "The label key that the selector applies to.",
                                                                            "type": "string"
                                                                          },
                                                                          "operator": {
                                                                            "description": "Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.",
                                                                            "type": "string"
                                                                          },
                                                                          "values": {
                                                                            "description": "An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.",
                                                                            "items": {
                                                                              "type": "string"
                                                                            },
                                                                            "type": "array"
                                                                          }
                                                                        },
                                                                        "required": [
                                                                          "key",
                                                                          "operator"
                                                                        ],
                                                                        "type": "object"
                                                                      },
                                                                      "type": "array"
                                                                    },
                                                                    "matchFields": {
                                                                      "description": "A list of node selector requirements by node's fields.",
                                                                      "items": {
                                                                        "description": "A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
                                                                        "properties": {
                                                                          "key": {
                                                                            "description": "The label key that the selector applies to.",
                                                                            "type": "string"
                                                                          },
                                                                          "operator": {
                                                                            "description": "Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.",
                                                                            "type": "string"
                                                                          },
                                                                          "values": {
                                                                            "description": "An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.",
                                                                            "items": {
                                                                              "type": "string"
                                                                            },
                                                                            "type": "array"
                                                                          }
                                                                        },
                                                                        "required": [
                                                                          "key",
                                                                          "operator"
                                                                        ],
                                                                        "type": "object"
                                                                      },
                                                                      "type": "array"
                                                                    }
                                                                  },
                                                                  "type": "object",
                                                                  "x-kubernetes-map-type": "atomic"
                                                                },
                                                                "weight": {
                                                                  "description": "Weight associated with matching the corresponding nodeSelectorTerm, in the range 1-100.",
                                                                  "format": "int32",
                                                                  "type": "integer"
                                                                }
                                                              },
                                                              "required": [
                                                                "preference",
                                                                "weight"
                                                              ],
                                                              "type": "object"
                                                            },
                                                            "type": "array"
                                                          },
                                                          "requiredDuringSchedulingIgnoredDuringExecution": {
                                                            "description": "If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to an update), the system may or may not try to eventually evict the pod from its node.",
                                                            "properties": {
                                                              "nodeSelectorTerms": {
                                                                "description": "Required. A list of node selector terms. The terms are ORed.",
                                                                "items": {
                                                                  "description": "A null or empty node selector term matches no objects. The requirements of them are ANDed. The TopologySelectorTerm type implements a subset of the NodeSelectorTerm.",
                                                                  "properties": {
                                                                    "matchExpressions": {
                                                                      "description": "A list of node selector requirements by node's labels.",
                                                                      "items": {
                                                                        "description": "A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
                                                                        "properties": {
                                                                          "key": {
                                                                            "description": "The label key that the selector applies to.",
                                                                            "type": "string"
                                                                          },
                                                                          "operator": {
                                                                            "description": "Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.",
                                                                            "type": "string"
                                                                          },
                                                                          "values": {
                                                                            "description": "An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.",
                                                                            "items": {
                                                                              "type": "string"
                                                                            },
                                                                            "type": "array"
                                                                          }
                                                                        },
                                                                        "required": [
                                                                          "key",
                                                                          "operator"
                                                                        ],
                                                                        "type": "object"
                                                                      },
                                                                      "type": "array"
                                                                    },
                                                                    "matchFields": {
                                                                      "description": "A list of node selector requirements by node's fields.",
                                                                      "items": {
                                                                        "description": "A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
                                                                        "properties": {
                                                                          "key": {
                                                                            "description": "The label key that the selector applies to.",
                                                                            "type": "string"
                                                                          },
                                                                          "operator": {
                                                                            "description": "Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.",
                                                                            "type": "string"
                                                                          },
                                                                          "values": {
                                                                            "description": "An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.",
                                                                            "items": {
                                                                              "type": "string"
                                                                            },
                                                                            "type": "array"
                                                                          }
                                                                        },
                                                                        "required": [
                                                                          "key",
                                                                          "operator"
                                                                        ],
                                                                        "type": "object"
                                                                      },
                                                                      "type": "array"
                                                                    }
                                                                  },
                                                                  "type": "object",
                                                                  "x-kubernetes-map-type": "atomic"
                                                                },
                                                                "type": "array"
                                                              }
                                                            },
                                                            "required": [
                                                              "nodeSelectorTerms"
                                                            ],
                                                            "type": "object",
                                                            "x-kubernetes-map-type": "atomic"
                                                          }
                                                        },
                                                        "type": "object"
                                                      },
                                                      "podAffinity": {
                                                        "description": "Describes pod affinity scheduling rules (e.g. co-locate this pod in the same node, zone, etc. as some other pod(s)).",
                                                        "properties": {
                                                          "preferredDuringSchedulingIgnoredDuringExecution": {
                                                            "description": "The scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding \"weight\" to the sum if the node has pods which matches the corresponding podAffinityTerm; the node(s) with the highest sum are the most preferred.",
                                                            "items": {
                                                              "description": "The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)",
                                                              "properties": {
                                                                "podAffinityTerm": {
                                                                  "description": "Required. A pod affinity term, associated with the corresponding weight.",
                                                                  "properties": {
                                                                    "labelSelector": {
                                                                      "description": "A label query over a set of resources, in this case pods. If it's null, this PodAffinityTerm matches with no Pods.",
                                                                      "properties": {
                                                                        "matchExpressions": {
                                                                          "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                                                                          "items": {
                                                                            "description": "A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
                                                                            "properties": {
                                                                              "key": {
                                                                                "description": "key is the label key that the selector applies to.",
                                                                                "type": "string"
                                                                              },
                                                                              "operator": {
                                                                                "description": "operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.",
                                                                                "type": "string"
                                                                              },
                                                                              "values": {
                                                                                "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.",
                                                                                "items": {
                                                                                  "type": "string"
                                                                                },
                                                                                "type": "array"
                                                                              }
                                                                            },
                                                                            "required": [
                                                                              "key",
                                                                              "operator"
                                                                            ],
                                                                            "type": "object"
                                                                          },
                                                                          "type": "array"
                                                                        },
                                                                        "matchLabels": {
                                                                          "additionalProperties": {
                                                                            "type": "string"
                                                                          },
                                                                          "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                                                          "type": "object"
                                                                        }
                                                                      },
                                                                      "type": "object",
                                                                      "x-kubernetes-map-type": "atomic"
                                                                    },
                                                                    "matchLabelKeys": {
                                                                      "description": "MatchLabelKeys is a set of pod label keys to select which pods will be taken into consideration. The keys are used to lookup values from the incoming pod labels, those key-value labels are merged with `LabelSelector` as `key in (value)` to select the group of existing pods which pods will be taken into consideration for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming pod labels will be ignored. The default value is empty. The same key is forbidden to exist in both MatchLabelKeys and LabelSelector. Also, MatchLabelKeys cannot be set when LabelSelector isn't set. This is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate.",
                                                                      "items": {
                                                                        "type": "string"
                                                                      },
                                                                      "type": "array",
                                                                      "x-kubernetes-list-type": "atomic"
                                                                    },
                                                                    "mismatchLabelKeys": {
                                                                      "description": "MismatchLabelKeys is a set of pod label keys to select which pods will be taken into consideration. The keys are used to lookup values from the incoming pod labels, those key-value labels are merged with `LabelSelector` as `key notin (value)` to select the group of existing pods which pods will be taken into consideration for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming pod labels will be ignored. The default value is empty. The same key is forbidden to exist in both MismatchLabelKeys and LabelSelector. Also, MismatchLabelKeys cannot be set when LabelSelector isn't set. This is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate.",
                                                                      "items": {
                                                                        "type": "string"
                                                                      },
                                                                      "type": "array",
                                                                      "x-kubernetes-list-type": "atomic"
                                                                    },
                                                                    "namespaceSelector": {
                                                                      "description": "A label query over the set of namespaces that the term applies to. The term is applied to the union of the namespaces selected by this field and the ones listed in the namespaces field. null selector and null or empty namespaces list means \"this pod's namespace\". An empty selector ({}) matches all namespaces.",
                                                                      "properties": {
                                                                        "matchExpressions": {
                                                                          "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                                                                          "items": {
                                                                            "description": "A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
                                                                            "properties": {
                                                                              "key": {
                                                                                "description": "key is the label key that the selector applies to.",
                                                                                "type": "string"
                                                                              },
                                                                              "operator": {
                                                                                "description": "operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.",
                                                                                "type": "string"
                                                                              },
                                                                              "values": {
                                                                                "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.",
                                                                                "items": {
                                                                                  "type": "string"
                                                                                },
                                                                                "type": "array"
                                                                              }
                                                                            },
                                                                            "required": [
                                                                              "key",
                                                                              "operator"
                                                                            ],
                                                                            "type": "object"
                                                                          },
                                                                          "type": "array"
                                                                        },
                                                                        "matchLabels": {
                                                                          "additionalProperties": {
                                                                            "type": "string"
                                                                          },
                                                                          "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                                                          "type": "object"
                                                                        }
                                                                      },
                                                                      "type": "object",
                                                                      "x-kubernetes-map-type": "atomic"
                                                                    },
                                                                    "namespaces": {
                                                                      "description": "namespaces specifies a static list of namespace names that the term applies to. The term is applied to the union of the namespaces listed in this field and the ones selected by namespaceSelector. null or empty namespaces list and null namespaceSelector means \"this pod's namespace\".",
                                                                      "items": {
                                                                        "type": "string"
                                                                      },
                                                                      "type": "array"
                                                                    },
                                                                    "topologyKey": {
                                                                      "description": "This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.",
                                                                      "type": "string"
                                                                    }
                                                                  },
                                                                  "required": [
                                                                    "topologyKey"
                                                                  ],
                                                                  "type": "object"
                                                                },
                                                                "weight": {
                                                                  "description": "weight associated with matching the corresponding podAffinityTerm, in the range 1-100.",
                                                                  "format": "int32",
                                                                  "type": "integer"
                                                                }
                                                              },
                                                              "required": [
                                                                "podAffinityTerm",
                                                                "weight"
                                                              ],
                                                              "type": "object"
                                                            },
                                                            "type": "array"
                                                          },
                                                          "requiredDuringSchedulingIgnoredDuringExecution": {
                                                            "description": "If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to a pod label update), the system may or may not try to eventually evict the pod from its node. When there are multiple elements, the lists of nodes corresponding to each podAffinityTerm are intersected, i.e. all terms must be satisfied.",
                                                            "items": {
                                                              "description": "Defines a set of pods (namely those matching the labelSelector relative to the given namespace(s)) that this pod should be co-located (affinity) or not co-located (anti-affinity) with, where co-located is defined as running on a node whose value of the label with key \u003ctopologyKey\u003e matches that of any node on which a pod of the set of pods is running",
                                                              "properties": {
                                                                "labelSelector": {
                                                                  "description": "A label query over a set of resources, in this case pods. If it's null, this PodAffinityTerm matches with no Pods.",
                                                                  "properties": {
                                                                    "matchExpressions": {
                                                                      "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                                                                      "items": {
                                                                        "description": "A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
                                                                        "properties": {
                                                                          "key": {
                                                                            "description": "key is the label key that the selector applies to.",
                                                                            "type": "string"
                                                                          },
                                                                          "operator": {
                                                                            "description": "operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.",
                                                                            "type": "string"
                                                                          },
                                                                          "values": {
                                                                            "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.",
                                                                            "items": {
                                                                              "type": "string"
                                                                            },
                                                                            "type": "array"
                                                                          }
                                                                        },
                                                                        "required": [
                                                                          "key",
                                                                          "operator"
                                                                        ],
                                                                        "type": "object"
                                                                      },
                                                                      "type": "array"
                                                                    },
                                                                    "matchLabels": {
                                                                      "additionalProperties": {
                                                                        "type": "string"
                                                                      },
                                                                      "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                                                      "type": "object"
                                                                    }
                                                                  },
                                                                  "type": "object",
                                                                  "x-kubernetes-map-type": "atomic"
                                                                },
                                                                "matchLabelKeys": {
                                                                  "description": "MatchLabelKeys is a set of pod label keys to select which pods will be taken into consideration. The keys are used to lookup values from the incoming pod labels, those key-value labels are merged with `LabelSelector` as `key in (value)` to select the group of existing pods which pods will be taken into consideration for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming pod labels will be ignored. The default value is empty. The same key is forbidden to exist in both MatchLabelKeys and LabelSelector. Also, MatchLabelKeys cannot be set when LabelSelector isn't set. This is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate.",
                                                                  "items": {
                                                                    "type": "string"
                                                                  },
                                                                  "type": "array",
                                                                  "x-kubernetes-list-type": "atomic"
                                                                },
                                                                "mismatchLabelKeys": {
                                                                  "description": "MismatchLabelKeys is a set of pod label keys to select which pods will be taken into consideration. The keys are used to lookup values from the incoming pod labels, those key-value labels are merged with `LabelSelector` as `key notin (value)` to select the group of existing pods which pods will be taken into consideration for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming pod labels will be ignored. The default value is empty. The same key is forbidden to exist in both MismatchLabelKeys and LabelSelector. Also, MismatchLabelKeys cannot be set when LabelSelector isn't set. This is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate.",
                                                                  "items": {
                                                                    "type": "string"
                                                                  },
                                                                  "type": "array",
                                                                  "x-kubernetes-list-type": "atomic"
                                                                },
                                                                "namespaceSelector": {
                                                                  "description": "A label query over the set of namespaces that the term applies to. The term is applied to the union of the namespaces selected by this field and the ones listed in the namespaces field. null selector and null or empty namespaces list means \"this pod's namespace\". An empty selector ({}) matches all namespaces.",
                                                                  "properties": {
                                                                    "matchExpressions": {
                                                                      "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                                                                      "items": {
                                                                        "description": "A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
                                                                        "properties": {
                                                                          "key": {
                                                                            "description": "key is the label key that the selector applies to.",
                                                                            "type": "string"
                                                                          },
                                                                          "operator": {
                                                                            "description": "operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.",
                                                                            "type": "string"
                                                                          },
                                                                          "values": {
                                                                            "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.",
                                                                            "items": {
                                                                              "type": "string"
                                                                            },
                                                                            "type": "array"
                                                                          }
                                                                        },
                                                                        "required": [
                                                                          "key",
                                                                          "operator"
                                                                        ],
                                                                        "type": "object"
                                                                      },
                                                                      "type": "array"
                                                                    },
                                                                    "matchLabels": {
                                                                      "additionalProperties": {
                                                                        "type": "string"
                                                                      },
                                                                      "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                                                      "type": "object"
                                                                    }
                                                                  },
                                                                  "type": "object",
                                                                  "x-kubernetes-map-type": "atomic"
                                                                },
                                                                "namespaces": {
                                                                  "description": "namespaces specifies a static list of namespace names that the term applies to. The term is applied to the union of the namespaces listed in this field and the ones selected by namespaceSelector. null or empty namespaces list and null namespaceSelector means \"this pod's namespace\".",
                                                                  "items": {
                                                                    "type": "string"
                                                                  },
                                                                  "type": "array"
                                                                },
                                                                "topologyKey": {
                                                                  "description": "This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.",
                                                                  "type": "string"
                                                                }
                                                              },
                                                              "required": [
                                                                "topologyKey"
                                                              ],
                                                              "type": "object"
                                                            },
                                                            "type": "array"
                                                          }
                                                        },
                                                        "type": "object"
                                                      },
                                                      "podAntiAffinity": {
                                                        "description": "Describes pod anti-affinity scheduling rules (e.g. avoid putting this pod in the same node, zone, etc. as some other pod(s)).",
                                                        "properties": {
                                                          "preferredDuringSchedulingIgnoredDuringExecution": {
                                                            "description": "The scheduler will prefer to schedule pods to nodes that satisfy the anti-affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling anti-affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding \"weight\" to the sum if the node has pods which matches the corresponding podAffinityTerm; the node(s) with the highest sum are the most preferred.",
                                                            "items": {
                                                              "description": "The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)",
                                                              "properties": {
                                                                "podAffinityTerm": {
                                                                  "description": "Required. A pod affinity term, associated with the corresponding weight.",
                                                                  "properties": {
                                                                    "labelSelector": {
                                                                      "description": "A label query over a set of resources, in this case pods. If it's null, this PodAffinityTerm matches with no Pods.",
                                                                      "properties": {
                                                                        "matchExpressions": {
                                                                          "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                                                                          "items": {
                                                                            "description": "A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
                                                                            "properties": {
                                                                              "key": {
                                                                                "description": "key is the label key that the selector applies to.",
                                                                                "type": "string"
                                                                              },
                                                                              "operator": {
                                                                                "description": "operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.",
                                                                                "type": "string"
                                                                              },
                                                                              "values": {
                                                                                "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.",
                                                                                "items": {
                                                                                  "type": "string"
                                                                                },
                                                                                "type": "array"
                                                                              }
                                                                            },
                                                                            "required": [
                                                                              "key",
                                                                              "operator"
                                                                            ],
                                                                            "type": "object"
                                                                          },
                                                                          "type": "array"
                                                                        },
                                                                        "matchLabels": {
                                                                          "additionalProperties": {
                                                                            "type": "string"
                                                                          },
                                                                          "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                                                          "type": "object"
                                                                        }
                                                                      },
                                                                      "type": "object",
                                                                      "x-kubernetes-map-type": "atomic"
                                                                    },
                                                                    "matchLabelKeys": {
                                                                      "description": "MatchLabelKeys is a set of pod label keys to select which pods will be taken into consideration. The keys are used to lookup values from the incoming pod labels, those key-value labels are merged with `LabelSelector` as `key in (value)` to select the group of existing pods which pods will be taken into consideration for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming pod labels will be ignored. The default value is empty. The same key is forbidden to exist in both MatchLabelKeys and LabelSelector. Also, MatchLabelKeys cannot be set when LabelSelector isn't set. This is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate.",
                                                                      "items": {
                                                                        "type": "string"
                                                                      },
                                                                      "type": "array",
                                                                      "x-kubernetes-list-type": "atomic"
                                                                    },
                                                                    "mismatchLabelKeys": {
                                                                      "description": "MismatchLabelKeys is a set of pod label keys to select which pods will be taken into consideration. The keys are used to lookup values from the incoming pod labels, those key-value labels are merged with `LabelSelector` as `key notin (value)` to select the group of existing pods which pods will be taken into consideration for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming pod labels will be ignored. The default value is empty. The same key is forbidden to exist in both MismatchLabelKeys and LabelSelector. Also, MismatchLabelKeys cannot be set when LabelSelector isn't set. This is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate.",
                                                                      "items": {
                                                                        "type": "string"
                                                                      },
                                                                      "type": "array",
                                                                      "x-kubernetes-list-type": "atomic"
                                                                    },
                                                                    "namespaceSelector": {
                                                                      "description": "A label query over the set of namespaces that the term applies to. The term is applied to the union of the namespaces selected by this field and the ones listed in the namespaces field. null selector and null or empty namespaces list means \"this pod's namespace\". An empty selector ({}) matches all namespaces.",
                                                                      "properties": {
                                                                        "matchExpressions": {
                                                                          "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                                                                          "items": {
                                                                            "description": "A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
                                                                            "properties": {
                                                                              "key": {
                                                                                "description": "key is the label key that the selector applies to.",
                                                                                "type": "string"
                                                                              },
                                                                              "operator": {
                                                                                "description": "operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.",
                                                                                "type": "string"
                                                                              },
                                                                              "values": {
                                                                                "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.",
                                                                                "items": {
                                                                                  "type": "string"
                                                                                },
                                                                                "type": "array"
                                                                              }
                                                                            },
                                                                            "required": [
                                                                              "key",
                                                                              "operator"
                                                                            ],
                                                                            "type": "object"
                                                                          },
                                                                          "type": "array"
                                                                        },
                                                                        "matchLabels": {
                                                                          "additionalProperties": {
                                                                            "type": "string"
                                                                          },
                                                                          "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                                                          "type": "object"
                                                                        }
                                                                      },
                                                                      "type": "object",
                                                                      "x-kubernetes-map-type": "atomic"
                                                                    },
                                                                    "namespaces": {
                                                                      "description": "namespaces specifies a static list of namespace names that the term applies to. The term is applied to the union of the namespaces listed in this field and the ones selected by namespaceSelector. null or empty namespaces list and null namespaceSelector means \"this pod's namespace\".",
                                                                      "items": {
                                                                        "type": "string"
                                                                      },
                                                                      "type": "array"
                                                                    },
                                                                    "topologyKey": {
                                                                      "description": "This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.",
                                                                      "type": "string"
                                                                    }
                                                                  },
                                                                  "required": [
                                                                    "topologyKey"
                                                                  ],
                                                                  "type": "object"
                                                                },
                                                                "weight": {
                                                                  "description": "weight associated with matching the corresponding podAffinityTerm, in the range 1-100.",
                                                                  "format": "int32",
                                                                  "type": "integer"
                                                                }
                                                              },
                                                              "required": [
                                                                "podAffinityTerm",
                                                                "weight"
                                                              ],
                                                              "type": "object"
                                                            },
                                                            "type": "array"
                                                          },
                                                          "requiredDuringSchedulingIgnoredDuringExecution": {
                                                            "description": "If the anti-affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the anti-affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to a pod label update), the system may or may not try to eventually evict the pod from its node. When there are multiple elements, the lists of nodes corresponding to each podAffinityTerm are intersected, i.e. all terms must be satisfied.",
                                                            "items": {
                                                              "description": "Defines a set of pods (namely those matching the labelSelector relative to the given namespace(s)) that this pod should be co-located (affinity) or not co-located (anti-affinity) with, where co-located is defined as running on a node whose value of the label with key \u003ctopologyKey\u003e matches that of any node on which a pod of the set of pods is running",
                                                              "properties": {
                                                                "labelSelector": {
                                                                  "description": "A label query over a set of resources, in this case pods. If it's null, this PodAffinityTerm matches with no Pods.",
                                                                  "properties": {
                                                                    "matchExpressions": {
                                                                      "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                                                                      "items": {
                                                                        "description": "A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
                                                                        "properties": {
                                                                          "key": {
                                                                            "description": "key is the label key that the selector applies to.",
                                                                            "type": "string"
                                                                          },
                                                                          "operator": {
                                                                            "description": "operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.",
                                                                            "type": "string"
                                                                          },
                                                                          "values": {
                                                                            "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.",
                                                                            "items": {
                                                                              "type": "string"
                                                                            },
                                                                            "type": "array"
                                                                          }
                                                                        },
                                                                        "required": [
                                                                          "key",
                                                                          "operator"
                                                                        ],
                                                                        "type": "object"
                                                                      },
                                                                      "type": "array"
                                                                    },
                                                                    "matchLabels": {
                                                                      "additionalProperties": {
                                                                        "type": "string"
                                                                      },
                                                                      "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                                                      "type": "object"
                                                                    }
                                                                  },
                                                                  "type": "object",
                                                                  "x-kubernetes-map-type": "atomic"
                                                                },
                                                                "matchLabelKeys": {
                                                                  "description": "MatchLabelKeys is a set of pod label keys to select which pods will be taken into consideration. The keys are used to lookup values from the incoming pod labels, those key-value labels are merged with `LabelSelector` as `key in (value)` to select the group of existing pods which pods will be taken into consideration for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming pod labels will be ignored. The default value is empty. The same key is forbidden to exist in both MatchLabelKeys and LabelSelector. Also, MatchLabelKeys cannot be set when LabelSelector isn't set. This is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate.",
                                                                  "items": {
                                                                    "type": "string"
                                                                  },
                                                                  "type": "array",
                                                                  "x-kubernetes-list-type": "atomic"
                                                                },
                                                                "mismatchLabelKeys": {
                                                                  "description": "MismatchLabelKeys is a set of pod label keys to select which pods will be taken into consideration. The keys are used to lookup values from the incoming pod labels, those key-value labels are merged with `LabelSelector` as `key notin (value)` to select the group of existing pods which pods will be taken into consideration for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming pod labels will be ignored. The default value is empty. The same key is forbidden to exist in both MismatchLabelKeys and LabelSelector. Also, MismatchLabelKeys cannot be set when LabelSelector isn't set. This is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate.",
                                                                  "items": {
                                                                    "type": "string"
                                                                  },
                                                                  "type": "array",
                                                                  "x-kubernetes-list-type": "atomic"
                                                                },
                                                                "namespaceSelector": {
                                                                  "description": "A label query over the set of namespaces that the term applies to. The term is applied to the union of the namespaces selected by this field and the ones listed in the namespaces field. null selector and null or empty namespaces list means \"this pod's namespace\". An empty selector ({}) matches all namespaces.",
                                                                  "properties": {
                                                                    "matchExpressions": {
                                                                      "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                                                                      "items": {
                                                                        "description": "A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
                                                                        "properties": {
                                                                          "key": {
                                                                            "description": "key is the label key that the selector applies to.",
                                                                            "type": "string"
                                                                          },
                                                                          "operator": {
                                                                            "description": "operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.",
                                                                            "type": "string"
                                                                          },
                                                                          "values": {
                                                                            "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.",
                                                                            "items": {
                                                                              "type": "string"
                                                                            },
                                                                            "type": "array"
                                                                          }
                                                                        },
                                                                        "required": [
                                                                          "key",
                                                                          "operator"
                                                                        ],
                                                                        "type": "object"
                                                                      },
                                                                      "type": "array"
                                                                    },
                                                                    "matchLabels": {
                                                                      "additionalProperties": {
                                                                        "type": "string"
                                                                      },
                                                                      "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                                                      "type": "object"
                                                                    }
                                                                  },
                                                                  "type": "object",
                                                                  "x-kubernetes-map-type": "atomic"
                                                                },
                                                                "namespaces": {
                                                                  "description": "namespaces specifies a static list of namespace names that the term applies to. The term is applied to the union of the namespaces listed in this field and the ones selected by namespaceSelector. null or empty namespaces list and null namespaceSelector means \"this pod's namespace\".",
                                                                  "items": {
                                                                    "type": "string"
                                                                  },
                                                                  "type": "array"
                                                                },
                                                                "topologyKey": {
                                                                  "description": "This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.",
                                                                  "type": "string"
                                                                }
                                                              },
                                                              "required": [
                                                                "topologyKey"
                                                              ],
                                                              "type": "object"
                                                            },
                                                            "type": "array"
                                                          }
                                                        },
                                                        "type": "object"
                                                      }
                                                    },
                                                    "type": "object"
                                                  },
                                                  "imagePullSecrets": {
                                                    "description": "If specified, the pod's imagePullSecrets",
                                                    "items": {
                                                      "description": "LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace.",
                                                      "properties": {
                                                        "name": {
                                                          "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
                                                          "type": "string"
                                                        }
                                                      },
                                                      "type": "object",
                                                      "x-kubernetes-map-type": "atomic"
                                                    },
                                                    "type": "array"
                                                  },
                                                  "nodeSelector": {
                                                    "additionalProperties": {
                                                      "type": "string"
                                                    },
                                                    "description": "NodeSelector is a selector which must be true for the pod to fit on a node. Selector which must match a node's labels for the pod to be scheduled on that node. More info: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/",
                                                    "type": "object"
                                                  },
                                                  "priorityClassName": {
                                                    "description": "If specified, the pod's priorityClassName.",
                                                    "type": "string"
                                                  },
                                                  "serviceAccountName": {
                                                    "description": "If specified, the pod's service account",
                                                    "type": "string"
                                                  },
                                                  "tolerations": {
                                                    "description": "If specified, the pod's tolerations.",
                                                    "items": {
                                                      "description": "The pod this Toleration is attached to tolerates any taint that matches the triple \u003ckey,value,effect\u003e using the matching operator \u003coperator\u003e.",
                                                      "properties": {
                                                        "effect": {
                                                          "description": "Effect indicates the taint effect to match. Empty means match all taint effects. When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.",
                                                          "type": "string"
                                                        },
                                                        "key": {
                                                          "description": "Key is the taint key that the toleration applies to. Empty means match all taint keys. If the key is empty, operator must be Exists; this combination means to match all values and all keys.",
                                                          "type": "string"
                                                        },
                                                        "operator": {
                                                          "description": "Operator represents a key's relationship to the value. Valid operators are Exists and Equal. Defaults to Equal. Exists is equivalent to wildcard for value, so that a pod can tolerate all taints of a particular category.",
                                                          "type": "string"
                                                        },
                                                        "tolerationSeconds": {
                                                          "description": "TolerationSeconds represents the period of time the toleration (which must be of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default, it is not set, which means tolerate the taint forever (do not evict). Zero and negative values will be treated as 0 (evict immediately) by the system.",
                                                          "format": "int64",
                                                          "type": "integer"
                                                        },
                                                        "value": {
                                                          "description": "Value is the taint value the toleration matches to. If the operator is Exists, the value should be empty, otherwise just a regular string.",
                                                          "type": "string"
                                                        }
                                                      },
                                                      "type": "object"
                                                    },
                                                    "type": "array"
                                                  }
                                                },
                                                "type": "object"
                                              }
                                            },
                                            "type": "object"
                                          },
                                          "serviceType": {
                                            "description": "Optional service type for Kubernetes solver service. Supported values are NodePort or ClusterIP. If unset, defaults to NodePort.",
                                            "type": "string"
                                          }
                                        },
                                        "type": "object"
                                      }
                                    },
                                    "type": "object"
                                  },
                                  "selector": {
                                    "description": "Selector selects a set of DNSNames on the Certificate resource that should be solved using this challenge solver. If not specified, the solver will be treated as the 'default' solver with the lowest priority, i.e. if any other solver has a more specific match, it will be used instead.",
                                    "properties": {
                                      "dnsNames": {
                                        "description": "List of DNSNames that this solver will be used to solve. If specified and a match is found, a dnsNames selector will take precedence over a dnsZones selector. If multiple solvers match with the same dnsNames value, the solver with the most matching labels in matchLabels will be selected. If neither has more matches, the solver defined earlier in the list will be selected.",
                                        "items": {
                                          "type": "string"
                                        },
                                        "type": "array"
                                      },
                                      "dnsZones": {
                                        "description": "List of DNSZones that this solver will be used to solve. The most specific DNS zone match specified here will take precedence over other DNS zone matches, so a solver specifying sys.example.com will be selected over one specifying example.com for the domain www.sys.example.com. If multiple solvers match with the same dnsZones value, the solver with the most matching labels in matchLabels will be selected. If neither has more matches, the solver defined earlier in the list will be selected.",
                                        "items": {
                                          "type": "string"
                                        },
                                        "type": "array"
                                      },
                                      "matchLabels": {
                                        "additionalProperties": {
                                          "type": "string"
                                        },
                                        "description": "A label selector that is used to refine the set of certificate's that this challenge solver will apply to.",
                                        "type": "object"
                                      }
                                    },
                                    "type": "object"
                                  }
                                },
                                "type": "object"
                              },
                              "type": "array"
                            }
                          },
                          "required": [
                            "privateKeySecretRef",
                            "server"
                          ],
                          "type": "object"
                        },
                        "ca": {
                          "description": "CA configures this issuer to sign certificates using a signing CA keypair stored in a Secret resource. This is used to build internal PKIs that are managed by cert-manager.",
                          "properties": {
                            "crlDistributionPoints": {
                              "description": "The CRL distribution points is an X.509 v3 certificate extension which identifies the location of the CRL from which the revocation of this certificate can be checked. If not set, certificates will be issued without distribution points set.",
                              "items": {
                                "type": "string"
                              },
                              "type": "array"
                            },
                            "issuingCertificateURLs": {
                              "description": "IssuingCertificateURLs is a list of URLs which this issuer should embed into certificates it creates. See https://www.rfc-editor.org/rfc/rfc5280#section-4.2.2.1 for more details. As an example, such a URL might be \"http://ca.domain.com/ca.crt\".",
                              "items": {
                                "type": "string"
                              },
                              "type": "array"
                            },
                            "ocspServers": {
                              "description": "The OCSP server list is an X.509 v3 extension that defines a list of URLs of OCSP responders. The OCSP responders can be queried for the revocation status of an issued certificate. If not set, the certificate will be issued with no OCSP servers set. For example, an OCSP server URL could be \"http://ocsp.int-x3.letsencrypt.org\".",
                              "items": {
                                "type": "string"
                              },
                              "type": "array"
                            },
                            "secretName": {
                              "description": "SecretName is the name of the secret used to sign Certificates issued by this Issuer.",
                              "type": "string"
                            }
                          },
                          "required": [
                            "secretName"
                          ],
                          "type": "object"
                        },
                        "selfSigned": {
                          "description": "SelfSigned configures this issuer to 'self sign' certificates using the private key used to create the CertificateRequest object.",
                          "properties": {
                            "crlDistributionPoints": {
                              "description": "The CRL distribution points is an X.509 v3 certificate extension which identifies the location of the CRL from which the revocation of this certificate can be checked. If not set certificate will be issued without CDP. Values are strings.",
                              "items": {
                                "type": "string"
                              },
                              "type": "array"
                            }
                          },
                          "type": "object"
                        },
                        "vault": {
                          "description": "Vault configures this issuer to sign certificates using a HashiCorp Vault PKI backend.",
                          "properties": {
                            "auth": {
                              "description": "Auth configures how cert-manager authenticates with the Vault server.",
                              "properties": {
                                "appRole": {
                                  "description": "AppRole authenticates with Vault using the App Role auth mechanism, with the role and secret stored in a Kubernetes Secret resource.",
                                  "properties": {
                                    "path": {
                                      "description": "Path where the App Role authentication backend is mounted in Vault, e.g: \"approle\"",
                                      "type": "string"
                                    },
                                    "roleId": {
                                      "description": "RoleID configured in the App Role authentication backend when setting up the authentication backend in Vault.",
                                      "type": "string"
                                    },
                                    "secretRef": {
                                      "description": "Reference to a key in a Secret that contains the App Role secret used to authenticate with Vault. The `key` field must be specified and denotes which entry within the Secret resource is used as the app role secret.",
                                      "properties": {
                                        "key": {
                                          "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.",
                                          "type": "string"
                                        },
                                        "name": {
                                          "description": "Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "name"
                                      ],
                                      "type": "object"
                                    }
                                  },
                                  "required": [
                                    "path",
                                    "roleId",
                                    "secretRef"
                                  ],
                                  "type": "object"
                                },
                                "kubernetes": {
                                  "description": "Kubernetes authenticates with Vault by passing the ServiceAccount token stored in the named Secret resource to the Vault server.",
                                  "properties": {
                                    "mountPath": {
                                      "description": "The Vault mountPath here is the mount path to use when authenticating with Vault. For example, setting a value to `/v1/auth/foo`, will use the path `/v1/auth/foo/login` to authenticate with Vault. If unspecified, the default value \"/v1/auth/kubernetes\" will be used.",
                                      "type": "string"
                                    },
                                    "role": {
                                      "description": "A required field containing the Vault Role to assume. A Role binds a Kubernetes ServiceAccount with a set of Vault policies.",
                                      "type": "string"
                                    },
                                    "secretRef": {
                                      "description": "The required Secret field containing a Kubernetes ServiceAccount JWT used for authenticating with Vault. Use of 'ambient credentials' is not supported.",
                                      "properties": {
                                        "key": {
                                          "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.",
                                          "type": "string"
                                        },
                                        "name": {
                                          "description": "Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "name"
                                      ],
                                      "type": "object"
                                    },
                                    "serviceAccountRef": {
                                      "description": "A reference to a service account that will be used to request a bound token (also known as \"projected token\"). Compared to using \"secretRef\", using this field means that you don't rely on statically bound tokens. To use this field, you must configure an RBAC rule to let cert-manager request a token.",
                                      "properties": {
                                        "name": {
                                          "description": "Name of the ServiceAccount used to request a token.",
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "name"
                                      ],
                                      "type": "object"
                                    }
                                  },
                                  "required": [
                                    "role"
                                  ],
                                  "type": "object"
                                },
                                "tokenSecretRef": {
                                  "description": "TokenSecretRef authenticates with Vault by presenting a token.",
                                  "properties": {
                                    "key": {
                                      "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.",
                                      "type": "string"
                                    },
                                    "name": {
                                      "description": "Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "name"
                                  ],
                                  "type": "object"
                                }
                              },
                              "type": "object"
                            },
                            "caBundle": {
                              "description": "Base64-encoded bundle of PEM CAs which will be used to validate the certificate chain presented by Vault. Only used if using HTTPS to connect to Vault and ignored for HTTP connections. Mutually exclusive with CABundleSecretRef. If neither CABundle nor CABundleSecretRef are defined, the certificate bundle in the cert-manager controller container is used to validate the TLS connection.",
                              "format": "byte",
                              "type": "string"
                            },
                            "caBundleSecretRef": {
                              "description": "Reference to a Secret containing a bundle of PEM-encoded CAs to use when verifying the certificate chain presented by Vault when using HTTPS. Mutually exclusive with CABundle. If neither CABundle nor CABundleSecretRef are defined, the certificate bundle in the cert-manager controller container is used to validate the TLS connection. If no key for the Secret is specified, cert-manager will default to 'ca.crt'.",
                              "properties": {
                                "key": {
                                  "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.",
                                  "type": "string"
                                },
                                "name": {
                                  "description": "Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                  "type": "string"
                                }
                              },
                              "required": [
                                "name"
                              ],
                              "type": "object"
                            },
                            "namespace": {
                              "description": "Name of the vault namespace. Namespaces is a set of features within Vault Enterprise that allows Vault environments to support Secure Multi-tenancy. e.g: \"ns1\" More about namespaces can be found here https://www.vaultproject.io/docs/enterprise/namespaces",
                              "type": "string"
                            },
                            "path": {
                              "description": "Path is the mount path of the Vault PKI backend's `sign` endpoint, e.g: \"my_pki_mount/sign/my-role-name\".",
                              "type": "string"
                            },
                            "server": {
                              "description": "Server is the connection address for the Vault server, e.g: \"https://vault.example.com:8200\".",
                              "type": "string"
                            }
                          },
                          "required": [
                            "auth",
                            "path",
                            "server"
                          ],
                          "type": "object"
                        },
                        "venafi": {
                          "description": "Venafi configures this issuer to sign certificates using a Venafi TPP or Venafi Cloud policy zone.",
                          "properties": {
                            "cloud": {
                              "description": "Cloud specifies the Venafi cloud configuration settings. Only one of TPP or Cloud may be specified.",
                              "properties": {
                                "apiTokenSecretRef": {
                                  "description": "APITokenSecretRef is a secret key selector for the Venafi Cloud API token.",
                                  "properties": {
                                    "key": {
                                      "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.",
                                      "type": "string"
                                    },
                                    "name": {
                                      "description": "Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "name"
                                  ],
                                  "type": "object"
                                },
                                "url": {
                                  "description": "URL is the base URL for Venafi Cloud. Defaults to \"https://api.venafi.cloud/v1\".",
                                  "type": "string"
                                }
                              },
                              "required": [
                                "apiTokenSecretRef"
                              ],
                              "type": "object"
                            },
                            "tpp": {
                              "description": "TPP specifies Trust Protection Platform configuration settings. Only one of TPP or Cloud may be specified.",
                              "properties": {
                                "caBundle": {
                                  "description": "Base64-encoded bundle of PEM CAs which will be used to validate the certificate chain presented by the TPP server. Only used if using HTTPS; ignored for HTTP. If undefined, the certificate bundle in the cert-manager controller container is used to validate the chain.",
                                  "format": "byte",
                                  "type": "string"
                                },
                                "credentialsRef": {
                                  "description": "CredentialsRef is a reference to a Secret containing the username and password for the TPP server. The secret must contain two keys, 'username' and 'password'.",
                                  "properties": {
                                    "name": {
                                      "description": "Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "name"
                                  ],
                                  "type": "object"
                                },
                                "url": {
                                  "description": "URL is the base URL for the vedsdk endpoint of the Venafi TPP instance, for example: \"https://tpp.example.com/vedsdk\".",
                                  "type": "string"
                                }
                              },
                              "required": [
                                "credentialsRef",
                                "url"
                              ],
                              "type": "object"
                            },
                            "zone": {
                              "description": "Zone is the Venafi Policy Zone to use for this issuer. All requests made to the Venafi platform will be restricted by the named zone policy. This field is required.",
                              "type": "string"
                            }
                          },
                          "required": [
                            "zone"
                          ],
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "status": {
                      "description": "Status of the Issuer. This is set and managed automatically.",
                      "properties": {
                        "acme": {
                          "description": "ACME specific status options. This field should only be set if the Issuer is configured to use an ACME server to issue certificates.",
                          "properties": {
                            "lastPrivateKeyHash": {
                              "description": "LastPrivateKeyHash is a hash of the private key associated with the latest registered ACME account, in order to track changes made to registered account associated with the Issuer",
                              "type": "string"
                            },
                            "lastRegisteredEmail": {
                              "description": "LastRegisteredEmail is the email associated with the latest registered ACME account, in order to track changes made to registered account associated with the  Issuer",
                              "type": "string"
                            },
                            "uri": {
                              "description": "URI is the unique account identifier, which can also be used to retrieve account details from the CA",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "conditions": {
                          "description": "List of status conditions to indicate the status of a CertificateRequest. Known condition types are `Ready`.",
                          "items": {
                            "description": "IssuerCondition contains condition information for an Issuer.",
                            "properties": {
                              "lastTransitionTime": {
                                "description": "LastTransitionTime is the timestamp corresponding to the last status change of this condition.",
                                "format": "date-time",
                                "type": "string"
                              },
                              "message": {
                                "description": "Message is a human readable description of the details of the last transition, complementing reason.",
                                "type": "string"
                              },
                              "observedGeneration": {
                                "description": "If set, this represents the .metadata.generation that the condition was set based upon. For instance, if .metadata.generation is currently 12, but the .status.condition[x].observedGeneration is 9, the condition is out of date with respect to the current state of the Issuer.",
                                "format": "int64",
                                "type": "integer"
                              },
                              "reason": {
                                "description": "Reason is a brief machine readable explanation for the condition's last transition.",
                                "type": "string"
                              },
                              "status": {
                                "description": "Status of the condition, one of (`True`, `False`, `Unknown`).",
                                "enum": [
                                  "True",
                                  "False",
                                  "Unknown"
                                ],
                                "type": "string"
                              },
                              "type": {
                                "description": "Type of the condition, known values are (`Ready`).",
                                "type": "string"
                              }
                            },
                            "required": [
                              "status",
                              "type"
                            ],
                            "type": "object"
                          },
                          "type": "array",
                          "x-kubernetes-list-map-keys": [
                            "type"
                          ],
                          "x-kubernetes-list-type": "map"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "required": [
                    "spec"
                  ],
                  "type": "object"
                }
              },
              "served": true,
              "storage": true,
              "subresources": {
                "status": {}
              }
            }
          ]
        }
      },
      "component": {
        "version": "apiextensions.k8s.io/v1",
        "kind": "CustomResourceDefinition",
        "schema": ""
      }
    },
    {
      "id": "6be62448-979e-4fb3-9119-3e7ce67af173",
      "schemaVersion": "components.meshery.io/v1beta1",
      "version": "v1.0.0",
      "displayName": "orders.acme.cert-manager.io",
      "description": "",
      "format": "",
      "model": {
        "id": "e633cca6-b6e1-65bf-a440-0d58915e75dd",
        "schemaVersion": "models.meshery.io/v1beta1",
        "version": "v1.0.0",
        "name": "kubernetes",
        "displayName": "Kubernetes",
        "status": "enabled",
        "registrant": {
          "id": "f9a29d70-c287-426c-a90c-2a96590c8083",
          "name": "Github",
          "credential_id": "00000000-0000-0000-0000-000000000000",
          "type": "registry",
          "sub_type": "",
          "kind": "github",
          "status": "registered",
          "user_id": "00000000-0000-0000-0000-000000000000",
          "created_at": "2025-06-22T05:56:58.393994634Z",
          "updated_at": "2025-06-22T05:56:58.393994634Z",
          "deleted_at": "0001-01-01T00:00:00Z"
        },
        "connection_id": "f9a29d70-c287-426c-a90c-2a96590c8083",
        "category": {
          "id": "9ca27d0d-66ce-42a9-8c85-6236563f2ddb",
          "name": "Orchestration \u0026 Management"
        },
        "subCategory": "Scheduling \u0026 Orchestration",
        "metadata": {
          "isAnnotation": false,
          "primaryColor": "#326CE5",
          "secondaryColor": "#7aa1f0",
          "shape": "circle",
          "styleOverrides": "",
          "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/kubernetes-color.svg",
          "svgComplete": "",
          "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/kubernetes-white.svg"
        },
        "model": {
          "version": "v1.32.0-alpha.3"
        },
        "components_count": 0,
        "relationships_count": 0,
        "components": null,
        "relationships": null
      },
      "styles": {
        "position": {
          "x": 811.25,
          "y": 562.9114685058594
        },
        "primaryColor": "#326CE5",
        "secondaryColor": "#7aa1f0",
        "shape": "circle",
        "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/customresourcedefinition-color.svg",
        "svgComplete": "",
        "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/customresourcedefinition-white.svg",
        "z-index": 10
      },
      "capabilities": [],
      "status": "enabled",
      "metadata": {
        "configurationUISchema": "",
        "genealogy": "",
        "instanceDetails": null,
        "isAnnotation": false,
        "isNamespaced": false,
        "published": false,
        "source_uri": "git://github.com/kubernetes/kubernetes/master/api/openapi-spec/v3"
      },
      "configuration": {
        "metadata": {
          "labels": {
            "app": "cert-manager",
            "app.kubernetes.io/instance": "cert-manager",
            "app.kubernetes.io/name": "cert-manager",
            "app.kubernetes.io/version": "v1.14.1"
          },
          "name": "orders.acme.cert-manager.io"
        },
        "spec": {
          "group": "acme.cert-manager.io",
          "names": {
            "categories": [
              "cert-manager",
              "cert-manager-acme"
            ],
            "kind": "Order",
            "listKind": "OrderList",
            "plural": "orders",
            "singular": "order"
          },
          "scope": "Namespaced",
          "versions": [
            {
              "additionalPrinterColumns": [
                {
                  "jsonPath": ".status.state",
                  "name": "State",
                  "type": "string"
                },
                {
                  "jsonPath": ".spec.issuerRef.name",
                  "name": "Issuer",
                  "priority": 1,
                  "type": "string"
                },
                {
                  "jsonPath": ".status.reason",
                  "name": "Reason",
                  "priority": 1,
                  "type": "string"
                },
                {
                  "description": "CreationTimestamp is a timestamp representing the server time when this object was created. It is not guaranteed to be set in happens-before order across separate operations. Clients may not set this value. It is represented in RFC3339 form and is in UTC.",
                  "jsonPath": ".metadata.creationTimestamp",
                  "name": "Age",
                  "type": "date"
                }
              ],
              "name": "v1",
              "schema": {
                "openAPIV3Schema": {
                  "description": "Order is a type to represent an Order with an ACME server",
                  "properties": {
                    "apiVersion": {
                      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                      "type": "string"
                    },
                    "kind": {
                      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                      "type": "string"
                    },
                    "metadata": {
                      "type": "object"
                    },
                    "spec": {
                      "properties": {
                        "commonName": {
                          "description": "CommonName is the common name as specified on the DER encoded CSR. If specified, this value must also be present in `dnsNames` or `ipAddresses`. This field must match the corresponding field on the DER encoded CSR.",
                          "type": "string"
                        },
                        "dnsNames": {
                          "description": "DNSNames is a list of DNS names that should be included as part of the Order validation process. This field must match the corresponding field on the DER encoded CSR.",
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        },
                        "duration": {
                          "description": "Duration is the duration for the not after date for the requested certificate. this is set on order creation as pe the ACME spec.",
                          "type": "string"
                        },
                        "ipAddresses": {
                          "description": "IPAddresses is a list of IP addresses that should be included as part of the Order validation process. This field must match the corresponding field on the DER encoded CSR.",
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        },
                        "issuerRef": {
                          "description": "IssuerRef references a properly configured ACME-type Issuer which should be used to create this Order. If the Issuer does not exist, processing will be retried. If the Issuer is not an 'ACME' Issuer, an error will be returned and the Order will be marked as failed.",
                          "properties": {
                            "group": {
                              "description": "Group of the resource being referred to.",
                              "type": "string"
                            },
                            "kind": {
                              "description": "Kind of the resource being referred to.",
                              "type": "string"
                            },
                            "name": {
                              "description": "Name of the resource being referred to.",
                              "type": "string"
                            }
                          },
                          "required": [
                            "name"
                          ],
                          "type": "object"
                        },
                        "request": {
                          "description": "Certificate signing request bytes in DER encoding. This will be used when finalizing the order. This field must be set on the order.",
                          "format": "byte",
                          "type": "string"
                        }
                      },
                      "required": [
                        "issuerRef",
                        "request"
                      ],
                      "type": "object"
                    },
                    "status": {
                      "properties": {
                        "authorizations": {
                          "description": "Authorizations contains data returned from the ACME server on what authorizations must be completed in order to validate the DNS names specified on the Order.",
                          "items": {
                            "description": "ACMEAuthorization contains data returned from the ACME server on an authorization that must be completed in order validate a DNS name on an ACME Order resource.",
                            "properties": {
                              "challenges": {
                                "description": "Challenges specifies the challenge types offered by the ACME server. One of these challenge types will be selected when validating the DNS name and an appropriate Challenge resource will be created to perform the ACME challenge process.",
                                "items": {
                                  "description": "Challenge specifies a challenge offered by the ACME server for an Order. An appropriate Challenge resource can be created to perform the ACME challenge process.",
                                  "properties": {
                                    "token": {
                                      "description": "Token is the token that must be presented for this challenge. This is used to compute the 'key' that must also be presented.",
                                      "type": "string"
                                    },
                                    "type": {
                                      "description": "Type is the type of challenge being offered, e.g. 'http-01', 'dns-01', 'tls-sni-01', etc. This is the raw value retrieved from the ACME server. Only 'http-01' and 'dns-01' are supported by cert-manager, other values will be ignored.",
                                      "type": "string"
                                    },
                                    "url": {
                                      "description": "URL is the URL of this challenge. It can be used to retrieve additional metadata about the Challenge from the ACME server.",
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "token",
                                    "type",
                                    "url"
                                  ],
                                  "type": "object"
                                },
                                "type": "array"
                              },
                              "identifier": {
                                "description": "Identifier is the DNS name to be validated as part of this authorization",
                                "type": "string"
                              },
                              "initialState": {
                                "description": "InitialState is the initial state of the ACME authorization when first fetched from the ACME server. If an Authorization is already 'valid', the Order controller will not create a Challenge resource for the authorization. This will occur when working with an ACME server that enables 'authz reuse' (such as Let's Encrypt's production endpoint). If not set and 'identifier' is set, the state is assumed to be pending and a Challenge will be created.",
                                "enum": [
                                  "valid",
                                  "ready",
                                  "pending",
                                  "processing",
                                  "invalid",
                                  "expired",
                                  "errored"
                                ],
                                "type": "string"
                              },
                              "url": {
                                "description": "URL is the URL of the Authorization that must be completed",
                                "type": "string"
                              },
                              "wildcard": {
                                "description": "Wildcard will be true if this authorization is for a wildcard DNS name. If this is true, the identifier will be the *non-wildcard* version of the DNS name. For example, if '*.example.com' is the DNS name being validated, this field will be 'true' and the 'identifier' field will be 'example.com'.",
                                "type": "boolean"
                              }
                            },
                            "required": [
                              "url"
                            ],
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "certificate": {
                          "description": "Certificate is a copy of the PEM encoded certificate for this Order. This field will be populated after the order has been successfully finalized with the ACME server, and the order has transitioned to the 'valid' state.",
                          "format": "byte",
                          "type": "string"
                        },
                        "failureTime": {
                          "description": "FailureTime stores the time that this order failed. This is used to influence garbage collection and back-off.",
                          "format": "date-time",
                          "type": "string"
                        },
                        "finalizeURL": {
                          "description": "FinalizeURL of the Order. This is used to obtain certificates for this order once it has been completed.",
                          "type": "string"
                        },
                        "reason": {
                          "description": "Reason optionally provides more information about a why the order is in the current state.",
                          "type": "string"
                        },
                        "state": {
                          "description": "State contains the current state of this Order resource. States 'success' and 'expired' are 'final'",
                          "enum": [
                            "valid",
                            "ready",
                            "pending",
                            "processing",
                            "invalid",
                            "expired",
                            "errored"
                          ],
                          "type": "string"
                        },
                        "url": {
                          "description": "URL of the Order. This will initially be empty when the resource is first created. The Order controller will populate this field when the Order is first processed. This field will be immutable after it is initially set.",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "required": [
                    "metadata",
                    "spec"
                  ],
                  "type": "object"
                }
              },
              "served": true,
              "storage": true,
              "subresources": {
                "status": {}
              }
            }
          ]
        }
      },
      "component": {
        "version": "apiextensions.k8s.io/v1",
        "kind": "CustomResourceDefinition",
        "schema": ""
      }
    },
    {
      "id": "ad59bd7c-5594-4269-ba27-07579c5370f9",
      "schemaVersion": "components.meshery.io/v1beta1",
      "version": "v1.0.0",
      "displayName": "cert-manager-cainjector",
      "description": "",
      "format": "",
      "model": {
        "id": "e633cca6-b6e1-65bf-a440-0d58915e75dd",
        "schemaVersion": "models.meshery.io/v1beta1",
        "version": "v1.0.0",
        "name": "kubernetes",
        "displayName": "Kubernetes",
        "status": "enabled",
        "registrant": {
          "id": "f9a29d70-c287-426c-a90c-2a96590c8083",
          "name": "Github",
          "credential_id": "00000000-0000-0000-0000-000000000000",
          "type": "registry",
          "sub_type": "",
          "kind": "github",
          "status": "registered",
          "user_id": "00000000-0000-0000-0000-000000000000",
          "created_at": "2025-06-22T05:56:58.393994634Z",
          "updated_at": "2025-06-22T05:56:58.393994634Z",
          "deleted_at": "0001-01-01T00:00:00Z"
        },
        "connection_id": "f9a29d70-c287-426c-a90c-2a96590c8083",
        "category": {
          "id": "9ca27d0d-66ce-42a9-8c85-6236563f2ddb",
          "name": "Orchestration \u0026 Management"
        },
        "subCategory": "Scheduling \u0026 Orchestration",
        "metadata": {
          "isAnnotation": false,
          "primaryColor": "#326CE5",
          "secondaryColor": "#7aa1f0",
          "shape": "circle",
          "styleOverrides": "",
          "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/kubernetes-color.svg",
          "svgComplete": "",
          "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/kubernetes-white.svg"
        },
        "model": {
          "version": "v1.32.0-alpha.3"
        },
        "components_count": 0,
        "relationships_count": 0,
        "components": null,
        "relationships": null
      },
      "styles": {
        "background-image": "none",
        "background-opacity": 0.5,
        "border-width": 2,
        "position": {
          "x": 457.08367983367975,
          "y": -171.95547536108467
        },
        "primaryColor": "#326CE5",
        "secondaryColor": "#7aa1f0",
        "shape": "round-rectangle",
        "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/deployment-color.svg",
        "svgComplete": "ui/public/static/img/meshmodels/kubernetes/complete/deployment-complete.svg",
        "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/deployment-white.svg",
        "z-index": 44
      },
      "capabilities": [],
      "status": "enabled",
      "metadata": {
        "configurationUISchema": "",
        "genealogy": "parent",
        "instanceDetails": null,
        "isAnnotation": false,
        "isNamespaced": true,
        "published": false,
        "source_uri": "git://github.com/kubernetes/kubernetes/master/api/openapi-spec/v3"
      },
      "configuration": {
        "metadata": {
          "labels": {
            "app": "cainjector",
            "app.kubernetes.io/component": "cainjector",
            "app.kubernetes.io/instance": "cert-manager",
            "app.kubernetes.io/name": "cainjector",
            "app.kubernetes.io/version": "v1.14.1"
          },
          "name": "cert-manager-cainjector",
          "namespace": "cert-manager"
        },
        "spec": {
          "replicas": 1,
          "revisionHistoryLimit": null,
          "selector": {
            "matchLabels": {
              "app.kubernetes.io/component": "cainjector",
              "app.kubernetes.io/instance": "cert-manager",
              "app.kubernetes.io/name": "cainjector"
            }
          },
          "template": {
            "metadata": {
              "labels": {
                "app": "cainjector",
                "app.kubernetes.io/component": "cainjector",
                "app.kubernetes.io/instance": "cert-manager",
                "app.kubernetes.io/name": "cainjector",
                "app.kubernetes.io/version": "v1.14.1"
              }
            },
            "spec": {
              "containers": [
                {
                  "args": [
                    "--v=2",
                    "--leader-election-namespace=kube-system"
                  ],
                  "env": [
                    {
                      "name": "POD_NAMESPACE",
                      "valueFrom": {
                        "fieldRef": {
                          "fieldPath": "metadata.namespace"
                        }
                      }
                    }
                  ],
                  "envFrom": [
                    {
                      "secretRef": {
                        "name": "aso-controller-settings"
                      }
                    }
                  ],
                  "image": "quay.io/jetstack/cert-manager-cainjector:v1.14.1",
                  "imagePullPolicy": "IfNotPresent",
                  "name": "cert-manager-cainjector",
                  "securityContext": {
                    "allowPrivilegeEscalation": false,
                    "capabilities": {
                      "drop": [
                        "ALL"
                      ]
                    },
                    "readOnlyRootFilesystem": true
                  }
                }
              ],
              "enableServiceLinks": false,
              "nodeSelector": {
                "kubernetes.io/os": "linux"
              },
              "securityContext": {
                "runAsNonRoot": true,
                "seccompProfile": {
                  "type": "RuntimeDefault"
                }
              },
              "serviceAccountName": "cert-manager-cainjector"
            }
          }
        }
      },
      "component": {
        "version": "apps/v1",
        "kind": "Deployment",
        "schema": ""
      }
    },
    {
      "id": "99c24ba2-ce1f-4db4-8348-4695534463da",
      "schemaVersion": "components.meshery.io/v1beta1",
      "version": "v1.0.0",
      "displayName": "cert-manager",
      "description": "",
      "format": "",
      "model": {
        "id": "e633cca6-b6e1-65bf-a440-0d58915e75dd",
        "schemaVersion": "models.meshery.io/v1beta1",
        "version": "v1.0.0",
        "name": "kubernetes",
        "displayName": "Kubernetes",
        "status": "enabled",
        "registrant": {
          "id": "f9a29d70-c287-426c-a90c-2a96590c8083",
          "name": "Github",
          "credential_id": "00000000-0000-0000-0000-000000000000",
          "type": "registry",
          "sub_type": "",
          "kind": "github",
          "status": "registered",
          "user_id": "00000000-0000-0000-0000-000000000000",
          "created_at": "2025-06-22T05:56:58.393994634Z",
          "updated_at": "2025-06-22T05:56:58.393994634Z",
          "deleted_at": "0001-01-01T00:00:00Z"
        },
        "connection_id": "f9a29d70-c287-426c-a90c-2a96590c8083",
        "category": {
          "id": "9ca27d0d-66ce-42a9-8c85-6236563f2ddb",
          "name": "Orchestration \u0026 Management"
        },
        "subCategory": "Scheduling \u0026 Orchestration",
        "metadata": {
          "isAnnotation": false,
          "primaryColor": "#326CE5",
          "secondaryColor": "#7aa1f0",
          "shape": "circle",
          "styleOverrides": "",
          "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/kubernetes-color.svg",
          "svgComplete": "",
          "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/kubernetes-white.svg"
        },
        "model": {
          "version": "v1.32.0-alpha.3"
        },
        "components_count": 0,
        "relationships_count": 0,
        "components": null,
        "relationships": null
      },
      "styles": {
        "background-image": "none",
        "background-opacity": 0.5,
        "border-width": 2,
        "position": {
          "x": 329.08367983367975,
          "y": -43.955475361084666
        },
        "primaryColor": "#326CE5",
        "secondaryColor": "#7aa1f0",
        "shape": "round-rectangle",
        "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/deployment-color.svg",
        "svgComplete": "ui/public/static/img/meshmodels/kubernetes/complete/deployment-complete.svg",
        "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/deployment-white.svg",
        "z-index": 45
      },
      "capabilities": [],
      "status": "enabled",
      "metadata": {
        "configurationUISchema": "",
        "genealogy": "parent",
        "instanceDetails": null,
        "isAnnotation": false,
        "isNamespaced": true,
        "published": false,
        "source_uri": "git://github.com/kubernetes/kubernetes/master/api/openapi-spec/v3"
      },
      "configuration": {
        "metadata": {
          "labels": {
            "app": "cert-manager",
            "app.kubernetes.io/component": "controller",
            "app.kubernetes.io/instance": "cert-manager",
            "app.kubernetes.io/name": "cert-manager",
            "app.kubernetes.io/version": "v1.14.1"
          },
          "name": "cert-manager",
          "namespace": "cert-manager"
        },
        "spec": {
          "replicas": 1,
          "revisionHistoryLimit": null,
          "selector": {
            "matchLabels": {
              "app.kubernetes.io/component": "controller",
              "app.kubernetes.io/instance": "cert-manager",
              "app.kubernetes.io/name": "cert-manager"
            }
          },
          "template": {
            "metadata": {
              "annotations": {
                "prometheus.io/path": "/metrics",
                "prometheus.io/port": "9402",
                "prometheus.io/scrape": "true"
              },
              "labels": {
                "app": "cert-manager",
                "app.kubernetes.io/component": "controller",
                "app.kubernetes.io/instance": "cert-manager",
                "app.kubernetes.io/name": "cert-manager",
                "app.kubernetes.io/version": "v1.14.1"
              }
            },
            "spec": {
              "containers": [
                {
                  "args": [
                    "--v=2",
                    "--cluster-resource-namespace=$(POD_NAMESPACE)",
                    "--leader-election-namespace=kube-system",
                    "--acme-http01-solver-image=quay.io/jetstack/cert-manager-acmesolver:v1.14.1",
                    "--max-concurrent-challenges=60"
                  ],
                  "env": [
                    {
                      "name": "POD_NAMESPACE",
                      "valueFrom": {
                        "fieldRef": {
                          "fieldPath": "metadata.namespace"
                        }
                      }
                    }
                  ],
                  "envFrom": [
                    {
                      "secretRef": {
                        "name": "aso-controller-settings"
                      }
                    }
                  ],
                  "image": "quay.io/jetstack/cert-manager-controller:v1.14.1",
                  "imagePullPolicy": "IfNotPresent",
                  "livenessProbe": {
                    "failureThreshold": 8,
                    "httpGet": {
                      "path": "/livez",
                      "port": "http-healthz",
                      "scheme": "HTTP"
                    },
                    "initialDelaySeconds": 10,
                    "periodSeconds": 10,
                    "successThreshold": 1,
                    "timeoutSeconds": 15
                  },
                  "name": "cert-manager-controller",
                  "ports": [
                    {
                      "containerPort": 9402,
                      "name": "http-metrics",
                      "protocol": "TCP"
                    },
                    {
                      "containerPort": 9403,
                      "name": "http-healthz",
                      "protocol": "TCP"
                    }
                  ],
                  "securityContext": {
                    "allowPrivilegeEscalation": false,
                    "capabilities": {
                      "drop": [
                        "ALL"
                      ]
                    },
                    "readOnlyRootFilesystem": true
                  }
                }
              ],
              "enableServiceLinks": false,
              "nodeSelector": {
                "kubernetes.io/os": "linux"
              },
              "securityContext": {
                "runAsNonRoot": true,
                "seccompProfile": {
                  "type": "RuntimeDefault"
                }
              },
              "serviceAccountName": "cert-manager"
            }
          }
        }
      },
      "component": {
        "version": "apps/v1",
        "kind": "Deployment",
        "schema": ""
      }
    },
    {
      "id": "62a77c06-e758-452b-bf5f-b9f1414a4b3b",
      "schemaVersion": "components.meshery.io/v1beta1",
      "version": "v1.0.0",
      "displayName": "cert-manager-webhook",
      "description": "",
      "format": "",
      "model": {
        "id": "e633cca6-b6e1-65bf-a440-0d58915e75dd",
        "schemaVersion": "models.meshery.io/v1beta1",
        "version": "v1.0.0",
        "name": "kubernetes",
        "displayName": "Kubernetes",
        "status": "enabled",
        "registrant": {
          "id": "f9a29d70-c287-426c-a90c-2a96590c8083",
          "name": "Github",
          "credential_id": "00000000-0000-0000-0000-000000000000",
          "type": "registry",
          "sub_type": "",
          "kind": "github",
          "status": "registered",
          "user_id": "00000000-0000-0000-0000-000000000000",
          "created_at": "2025-06-22T05:56:58.393994634Z",
          "updated_at": "2025-06-22T05:56:58.393994634Z",
          "deleted_at": "0001-01-01T00:00:00Z"
        },
        "connection_id": "f9a29d70-c287-426c-a90c-2a96590c8083",
        "category": {
          "id": "9ca27d0d-66ce-42a9-8c85-6236563f2ddb",
          "name": "Orchestration \u0026 Management"
        },
        "subCategory": "Scheduling \u0026 Orchestration",
        "metadata": {
          "isAnnotation": false,
          "primaryColor": "#326CE5",
          "secondaryColor": "#7aa1f0",
          "shape": "circle",
          "styleOverrides": "",
          "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/kubernetes-color.svg",
          "svgComplete": "",
          "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/kubernetes-white.svg"
        },
        "model": {
          "version": "v1.32.0-alpha.3"
        },
        "components_count": 0,
        "relationships_count": 0,
        "components": null,
        "relationships": null
      },
      "styles": {
        "background-image": "none",
        "background-opacity": 0.5,
        "border-width": 2,
        "position": {
          "x": 457.08367983367975,
          "y": -43.955475361084666
        },
        "primaryColor": "#326CE5",
        "secondaryColor": "#7aa1f0",
        "shape": "round-rectangle",
        "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/deployment-color.svg",
        "svgComplete": "ui/public/static/img/meshmodels/kubernetes/complete/deployment-complete.svg",
        "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/deployment-white.svg",
        "z-index": 46
      },
      "capabilities": [],
      "status": "enabled",
      "metadata": {
        "configurationUISchema": "",
        "genealogy": "parent",
        "instanceDetails": null,
        "isAnnotation": false,
        "isNamespaced": true,
        "published": false,
        "source_uri": "git://github.com/kubernetes/kubernetes/master/api/openapi-spec/v3"
      },
      "configuration": {
        "metadata": {
          "labels": {
            "app": "webhook",
            "app.kubernetes.io/component": "webhook",
            "app.kubernetes.io/instance": "cert-manager",
            "app.kubernetes.io/name": "webhook",
            "app.kubernetes.io/version": "v1.14.1"
          },
          "name": "cert-manager-webhook",
          "namespace": "cert-manager"
        },
        "spec": {
          "replicas": 1,
          "revisionHistoryLimit": null,
          "selector": {
            "matchLabels": {
              "app.kubernetes.io/component": "webhook",
              "app.kubernetes.io/instance": "cert-manager",
              "app.kubernetes.io/name": "webhook"
            }
          },
          "template": {
            "metadata": {
              "labels": {
                "app": "webhook",
                "app.kubernetes.io/component": "webhook",
                "app.kubernetes.io/instance": "cert-manager",
                "app.kubernetes.io/name": "webhook",
                "app.kubernetes.io/version": "v1.14.1"
              }
            },
            "spec": {
              "containers": [
                {
                  "args": [
                    "--v=2",
                    "--secure-port=10250",
                    "--dynamic-serving-ca-secret-namespace=$(POD_NAMESPACE)",
                    "--dynamic-serving-ca-secret-name=cert-manager-webhook-ca",
                    "--dynamic-serving-dns-names=cert-manager-webhook",
                    "--dynamic-serving-dns-names=cert-manager-webhook.$(POD_NAMESPACE)",
                    "--dynamic-serving-dns-names=cert-manager-webhook.$(POD_NAMESPACE).svc"
                  ],
                  "env": [
                    {
                      "name": "POD_NAMESPACE",
                      "valueFrom": {
                        "fieldRef": {
                          "fieldPath": "metadata.namespace"
                        }
                      }
                    }
                  ],
                  "envFrom": [
                    {
                      "secretRef": {
                        "name": "aso-controller-settings"
                      }
                    }
                  ],
                  "image": "quay.io/jetstack/cert-manager-webhook:v1.14.1",
                  "imagePullPolicy": "IfNotPresent",
                  "livenessProbe": {
                    "failureThreshold": 3,
                    "httpGet": {
                      "path": "/livez",
                      "port": 6080,
                      "scheme": "HTTP"
                    },
                    "initialDelaySeconds": 60,
                    "periodSeconds": 10,
                    "successThreshold": 1,
                    "timeoutSeconds": 1
                  },
                  "name": "cert-manager-webhook",
                  "ports": [
                    {
                      "containerPort": 10250,
                      "name": "https",
                      "protocol": "TCP"
                    },
                    {
                      "containerPort": 6080,
                      "name": "healthcheck",
                      "protocol": "TCP"
                    }
                  ],
                  "readinessProbe": {
                    "failureThreshold": 3,
                    "httpGet": {
                      "path": "/healthz",
                      "port": 6080,
                      "scheme": "HTTP"
                    },
                    "initialDelaySeconds": 5,
                    "periodSeconds": 5,
                    "successThreshold": 1,
                    "timeoutSeconds": 1
                  },
                  "securityContext": {
                    "allowPrivilegeEscalation": false,
                    "capabilities": {
                      "drop": [
                        "ALL"
                      ]
                    },
                    "readOnlyRootFilesystem": true
                  }
                }
              ],
              "enableServiceLinks": false,
              "nodeSelector": {
                "kubernetes.io/os": "linux"
              },
              "securityContext": {
                "runAsNonRoot": true,
                "seccompProfile": {
                  "type": "RuntimeDefault"
                }
              },
              "serviceAccountName": "cert-manager-webhook"
            }
          }
        }
      },
      "component": {
        "version": "apps/v1",
        "kind": "Deployment",
        "schema": ""
      }
    },
    {
      "id": "8d12e551-c0c4-4294-8bbb-2b6d35acb737",
      "schemaVersion": "components.meshery.io/v1beta1",
      "version": "v1.0.0",
      "displayName": "azureserviceoperator-controller-manager",
      "description": "",
      "format": "",
      "model": {
        "id": "e633cca6-b6e1-65bf-a440-0d58915e75dd",
        "schemaVersion": "models.meshery.io/v1beta1",
        "version": "v1.0.0",
        "name": "kubernetes",
        "displayName": "Kubernetes",
        "status": "enabled",
        "registrant": {
          "id": "f9a29d70-c287-426c-a90c-2a96590c8083",
          "name": "Github",
          "credential_id": "00000000-0000-0000-0000-000000000000",
          "type": "registry",
          "sub_type": "",
          "kind": "github",
          "status": "registered",
          "user_id": "00000000-0000-0000-0000-000000000000",
          "created_at": "2025-06-22T05:56:58.393994634Z",
          "updated_at": "2025-06-22T05:56:58.393994634Z",
          "deleted_at": "0001-01-01T00:00:00Z"
        },
        "connection_id": "f9a29d70-c287-426c-a90c-2a96590c8083",
        "category": {
          "id": "9ca27d0d-66ce-42a9-8c85-6236563f2ddb",
          "name": "Orchestration \u0026 Management"
        },
        "subCategory": "Scheduling \u0026 Orchestration",
        "metadata": {
          "isAnnotation": false,
          "primaryColor": "#326CE5",
          "secondaryColor": "#7aa1f0",
          "shape": "circle",
          "styleOverrides": "",
          "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/kubernetes-color.svg",
          "svgComplete": "",
          "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/kubernetes-white.svg"
        },
        "model": {
          "version": "v1.32.0-alpha.3"
        },
        "components_count": 0,
        "relationships_count": 0,
        "components": null,
        "relationships": null
      },
      "styles": {
        "background-image": "none",
        "background-opacity": 0.5,
        "border-width": 2,
        "position": {
          "x": 141.6443084933509,
          "y": 303.9705775682067
        },
        "primaryColor": "#326CE5",
        "secondaryColor": "#7aa1f0",
        "shape": "round-rectangle",
        "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/deployment-color.svg",
        "svgComplete": "ui/public/static/img/meshmodels/kubernetes/complete/deployment-complete.svg",
        "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/deployment-white.svg",
        "z-index": 62
      },
      "capabilities": [],
      "status": "enabled",
      "metadata": {
        "configurationUISchema": "",
        "genealogy": "parent",
        "instanceDetails": null,
        "isAnnotation": false,
        "isNamespaced": true,
        "published": false,
        "source_uri": "git://github.com/kubernetes/kubernetes/master/api/openapi-spec/v3"
      },
      "configuration": {
        "metadata": {
          "labels": {
            "app.kubernetes.io/name": "azure-service-operator",
            "app.kubernetes.io/version": "v2.13.0",
            "control-plane": "controller-manager"
          },
          "name": "azureserviceoperator-controller-manager",
          "namespace": "azureserviceoperator-system"
        },
        "spec": {
          "replicas": 2,
          "revisionHistoryLimit": 10,
          "selector": {
            "matchLabels": {
              "control-plane": "controller-manager"
            }
          },
          "strategy": {
            "type": "Recreate"
          },
          "template": {
            "metadata": {
              "annotations": {
                "kubectl.kubernetes.io/default-container": "manager"
              },
              "labels": {
                "app.kubernetes.io/name": "azure-service-operator",
                "app.kubernetes.io/version": "v2.13.0",
                "control-plane": "controller-manager"
              }
            },
            "spec": {
              "containers": [
                {
                  "args": [
                    "--metrics-addr=0.0.0.0:8443",
                    "--secure-metrics=true",
                    "--profiling-metrics=false",
                    "--health-addr=:8081",
                    "--enable-leader-election",
                    "--v=2",
                    "--crd-pattern=",
                    "--webhook-port=9443",
                    "--webhook-cert-dir=/tmp/k8s-webhook-server/serving-certs"
                  ],
                  "command": [],
                  "env": [
                    {
                      "name": "GOMEMLIMIT",
                      "value": "400MiB"
                    },
                    {
                      "name": "AZURE_CLIENT_ID",
                      "valueFrom": {
                        "secretKeyRef": {
                          "key": "AZURE_CLIENT_ID",
                          "name": "aso-controller-settings"
                        }
                      }
                    },
                    {
                      "name": "AZURE_CLIENT_SECRET",
                      "valueFrom": {
                        "secretKeyRef": {
                          "key": "AZURE_CLIENT_SECRET",
                          "name": "aso-controller-settings",
                          "optional": true
                        }
                      }
                    },
                    {
                      "name": "AZURE_TENANT_ID",
                      "valueFrom": {
                        "secretKeyRef": {
                          "key": "AZURE_TENANT_ID",
                          "name": "aso-controller-settings"
                        }
                      }
                    },
                    {
                      "name": "AZURE_ADDITIONAL_TENANTS",
                      "valueFrom": {
                        "secretKeyRef": {
                          "key": "AZURE_ADDITIONAL_TENANTS",
                          "name": "aso-controller-settings",
                          "optional": true
                        }
                      }
                    },
                    {
                      "name": "AZURE_USER_ASSIGNED_IDENTITY_CREDENTIALS",
                      "valueFrom": {
                        "secretKeyRef": {
                          "key": "AZURE_USER_ASSIGNED_IDENTITY_CREDENTIALS",
                          "name": "aso-controller-settings",
                          "optional": true
                        }
                      }
                    },
                    {
                      "name": "AZURE_SUBSCRIPTION_ID",
                      "valueFrom": {
                        "secretKeyRef": {
                          "key": "AZURE_SUBSCRIPTION_ID",
                          "name": "aso-controller-settings"
                        }
                      }
                    },
                    {
                      "name": "AZURE_CLIENT_CERTIFICATE",
                      "valueFrom": {
                        "secretKeyRef": {
                          "key": "AZURE_CLIENT_CERTIFICATE",
                          "name": "aso-controller-settings",
                          "optional": true
                        }
                      }
                    },
                    {
                      "name": "AZURE_CLIENT_CERTIFICATE_PASSWORD",
                      "valueFrom": {
                        "secretKeyRef": {
                          "key": "AZURE_CLIENT_CERTIFICATE_PASSWORD",
                          "name": "aso-controller-settings",
                          "optional": true
                        }
                      }
                    },
                    {
                      "name": "AZURE_AUTHORITY_HOST",
                      "valueFrom": {
                        "secretKeyRef": {
                          "key": "AZURE_AUTHORITY_HOST",
                          "name": "aso-controller-settings",
                          "optional": true
                        }
                      }
                    },
                    {
                      "name": "AZURE_RESOURCE_MANAGER_ENDPOINT",
                      "valueFrom": {
                        "secretKeyRef": {
                          "key": "AZURE_RESOURCE_MANAGER_ENDPOINT",
                          "name": "aso-controller-settings",
                          "optional": true
                        }
                      }
                    },
                    {
                      "name": "AZURE_RESOURCE_MANAGER_AUDIENCE",
                      "valueFrom": {
                        "secretKeyRef": {
                          "key": "AZURE_RESOURCE_MANAGER_AUDIENCE",
                          "name": "aso-controller-settings",
                          "optional": true
                        }
                      }
                    },
                    {
                      "name": "AZURE_TARGET_NAMESPACES",
                      "valueFrom": {
                        "secretKeyRef": {
                          "key": "AZURE_TARGET_NAMESPACES",
                          "name": "aso-controller-settings",
                          "optional": true
                        }
                      }
                    },
                    {
                      "name": "AZURE_OPERATOR_MODE",
                      "valueFrom": {
                        "secretKeyRef": {
                          "key": "AZURE_OPERATOR_MODE",
                          "name": "aso-controller-settings",
                          "optional": true
                        }
                      }
                    },
                    {
                      "name": "AZURE_SYNC_PERIOD",
                      "valueFrom": {
                        "secretKeyRef": {
                          "key": "AZURE_SYNC_PERIOD",
                          "name": "aso-controller-settings",
                          "optional": true
                        }
                      }
                    },
                    {
                      "name": "USE_WORKLOAD_IDENTITY_AUTH",
                      "valueFrom": {
                        "secretKeyRef": {
                          "key": "USE_WORKLOAD_IDENTITY_AUTH",
                          "name": "aso-controller-settings",
                          "optional": true
                        }
                      }
                    },
                    {
                      "name": "AZURE_USER_AGENT_SUFFIX",
                      "valueFrom": {
                        "secretKeyRef": {
                          "key": "AZURE_USER_AGENT_SUFFIX",
                          "name": "aso-controller-settings",
                          "optional": true
                        }
                      }
                    },
                    {
                      "name": "MAX_CONCURRENT_RECONCILES",
                      "valueFrom": {
                        "secretKeyRef": {
                          "key": "MAX_CONCURRENT_RECONCILES",
                          "name": "aso-controller-settings",
                          "optional": true
                        }
                      }
                    },
                    {
                      "name": "RATE_LIMIT_MODE",
                      "valueFrom": {
                        "secretKeyRef": {
                          "key": "RATE_LIMIT_MODE",
                          "name": "aso-controller-settings",
                          "optional": true
                        }
                      }
                    },
                    {
                      "name": "RATE_LIMIT_QPS",
                      "valueFrom": {
                        "secretKeyRef": {
                          "key": "RATE_LIMIT_QPS",
                          "name": "aso-controller-settings",
                          "optional": true
                        }
                      }
                    },
                    {
                      "name": "RATE_LIMIT_BUCKET_SIZE",
                      "valueFrom": {
                        "secretKeyRef": {
                          "key": "RATE_LIMIT_BUCKET_SIZE",
                          "name": "aso-controller-settings",
                          "optional": true
                        }
                      }
                    },
                    {
                      "name": "DEFAULT_RECONCILE_POLICY",
                      "valueFrom": {
                        "secretKeyRef": {
                          "key": "DEFAULT_RECONCILE_POLICY",
                          "name": "aso-controller-settings",
                          "optional": true
                        }
                      }
                    },
                    {
                      "name": "POD_NAMESPACE",
                      "valueFrom": {
                        "fieldRef": {
                          "fieldPath": "metadata.namespace"
                        }
                      }
                    }
                  ],
                  "envFrom": [
                    {
                      "secretRef": {
                        "name": "aso-controller-settings"
                      }
                    }
                  ],
                  "image": "mcr.microsoft.com/k8s/azureserviceoperator:v2.13.0",
                  "imagePullPolicy": "Always",
                  "livenessProbe": {
                    "httpGet": {
                      "path": "/healthz",
                      "port": 8081
                    },
                    "initialDelaySeconds": 60
                  },
                  "name": "manager",
                  "ports": [
                    {
                      "containerPort": 9443,
                      "name": "webhook-server",
                      "protocol": "TCP"
                    },
                    {
                      "containerPort": 8081,
                      "name": "health-port",
                      "protocol": "TCP"
                    },
                    {
                      "containerPort": 8443,
                      "name": "metrics-port",
                      "protocol": "TCP"
                    }
                  ],
                  "readinessProbe": {
                    "httpGet": {
                      "path": "/readyz",
                      "port": 8081
                    },
                    "initialDelaySeconds": 60
                  },
                  "resizePolicy": [],
                  "resources": {
                    "limits": {
                      "cpu": "500m",
                      "memory": "512Mi"
                    },
                    "requests": {
                      "cpu": "200m",
                      "memory": "256Mi"
                    }
                  },
                  "securityContext": {
                    "allowPrivilegeEscalation": false,
                    "capabilities": {
                      "drop": [
                        "ALL"
                      ]
                    },
                    "readOnlyRootFilesystem": true,
                    "runAsGroup": 65532,
                    "runAsNonRoot": true,
                    "runAsUser": 65532
                  },
                  "volumeDevices": [],
                  "volumeMounts": [
                    {
                      "mountPath": "/var/run/secrets/tokens",
                      "name": "azure-identity",
                      "readOnly": true
                    },
                    {
                      "mountPath": "/tmp/k8s-webhook-server/serving-certs",
                      "name": "cert",
                      "readOnly": true
                    }
                  ]
                }
              ],
              "nodeSelector": {
                "kubernetes.io/os": "linux"
              },
              "serviceAccountName": "azureserviceoperator-default",
              "terminationGracePeriodSeconds": 10,
              "volumes": [
                {
                  "name": "cert",
                  "secret": {
                    "defaultMode": 420,
                    "secretName": "webhook-server-cert"
                  }
                },
                {
                  "name": "azure-identity",
                  "projected": {
                    "defaultMode": 420,
                    "sources": [
                      {
                        "serviceAccountToken": {
                          "audience": "api://AzureADTokenExchange",
                          "expirationSeconds": 3600,
                          "path": "azure-identity"
                        }
                      }
                    ]
                  }
                }
              ]
            }
          }
        }
      },
      "component": {
        "version": "apps/v1",
        "kind": "Deployment",
        "schema": ""
      }
    },
    {
      "id": "fd542ffe-7724-41d8-bc9e-bb522c81abad",
      "schemaVersion": "components.meshery.io/v1beta1",
      "version": "v1.0.0",
      "displayName": "azureserviceoperator-selfsigned-issuer",
      "description": "",
      "format": "",
      "model": {
        "id": "ae623995-2078-f1d0-3470-2444c73c4a4d",
        "schemaVersion": "models.meshery.io/v1beta1",
        "version": "v1.0.0",
        "name": "cert-manager",
        "displayName": "cert-manager",
        "status": "enabled",
        "registrant": {
          "id": "f9a29d70-c287-426c-a90c-2a96590c8083",
          "name": "Github",
          "credential_id": "00000000-0000-0000-0000-000000000000",
          "type": "registry",
          "sub_type": "",
          "kind": "github",
          "status": "registered",
          "user_id": "00000000-0000-0000-0000-000000000000",
          "created_at": "2025-06-22T05:56:58.393994634Z",
          "updated_at": "2025-06-22T05:56:58.393994634Z",
          "deleted_at": "0001-01-01T00:00:00Z"
        },
        "connection_id": "f9a29d70-c287-426c-a90c-2a96590c8083",
        "category": {
          "id": "639aa59e-5b2d-0c11-92c5-74c5014d41df",
          "name": "Provisioning"
        },
        "subCategory": "Key Management Service",
        "metadata": {
          "isAnnotation": false,
          "primaryColor": "#005FEE",
          "secondaryColor": "#376384",
          "shape": "circle",
          "styleOverrides": "",
          "svgColor": "ui/public/static/img/meshmodels/cert-manager/color/cert-manager-color.svg",
          "svgComplete": "",
          "svgWhite": "ui/public/static/img/meshmodels/cert-manager/white/cert-manager-white.svg"
        },
        "model": {
          "version": "v1.18.1"
        },
        "components_count": 0,
        "relationships_count": 0,
        "components": null,
        "relationships": null
      },
      "styles": {
        "position": {
          "x": 74.1245579736004,
          "y": 248.71693931456838
        },
        "primaryColor": "#005FEE",
        "secondaryColor": "#00D3A9",
        "shape": "circle",
        "svgColor": "ui/public/static/img/meshmodels/cert-manager/color/issuer-color.svg",
        "svgComplete": "",
        "svgWhite": "ui/public/static/img/meshmodels/cert-manager/white/issuer-white.svg",
        "z-index": 63
      },
      "capabilities": [],
      "status": "enabled",
      "metadata": {
        "configurationUISchema": "",
        "genealogy": "",
        "instanceDetails": null,
        "isAnnotation": false,
        "isNamespaced": true,
        "published": false,
        "source_uri": "git://github.com/cert-manager/cert-manager/master/deploy/crds"
      },
      "configuration": {
        "metadata": {
          "name": "azureserviceoperator-selfsigned-issuer",
          "namespace": "azureserviceoperator-system"
        },
        "spec": {
          "selfSigned": {}
        }
      },
      "component": {
        "version": "cert-manager.io/v1",
        "kind": "Issuer",
        "schema": ""
      }
    },
    {
      "id": "eeb06363-7319-4eee-969a-13a2a5ecda36",
      "schemaVersion": "components.meshery.io/v1beta1",
      "version": "v1.0.0",
      "displayName": "azureserviceoperator-mutating-webhook-configuration",
      "description": "",
      "format": "",
      "model": {
        "id": "e633cca6-b6e1-65bf-a440-0d58915e75dd",
        "schemaVersion": "models.meshery.io/v1beta1",
        "version": "v1.0.0",
        "name": "kubernetes",
        "displayName": "Kubernetes",
        "status": "enabled",
        "registrant": {
          "id": "f9a29d70-c287-426c-a90c-2a96590c8083",
          "name": "Github",
          "credential_id": "00000000-0000-0000-0000-000000000000",
          "type": "registry",
          "sub_type": "",
          "kind": "github",
          "status": "registered",
          "user_id": "00000000-0000-0000-0000-000000000000",
          "created_at": "2025-06-22T05:56:58.393994634Z",
          "updated_at": "2025-06-22T05:56:58.393994634Z",
          "deleted_at": "0001-01-01T00:00:00Z"
        },
        "connection_id": "f9a29d70-c287-426c-a90c-2a96590c8083",
        "category": {
          "id": "9ca27d0d-66ce-42a9-8c85-6236563f2ddb",
          "name": "Orchestration \u0026 Management"
        },
        "subCategory": "Scheduling \u0026 Orchestration",
        "metadata": {
          "isAnnotation": false,
          "primaryColor": "#326CE5",
          "secondaryColor": "#7aa1f0",
          "shape": "circle",
          "styleOverrides": "",
          "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/kubernetes-color.svg",
          "svgComplete": "",
          "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/kubernetes-white.svg"
        },
        "model": {
          "version": "v1.32.0-alpha.3"
        },
        "components_count": 0,
        "relationships_count": 0,
        "components": null,
        "relationships": null
      },
      "styles": {
        "position": {
          "x": -69.46527841541749,
          "y": 28.42988028610518
        },
        "primaryColor": "#326CE5",
        "secondaryColor": "#7aa1f0",
        "shape": "round-hexagon",
        "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/mutatingwebhookconfiguration-color.svg",
        "svgComplete": "",
        "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/mutatingwebhookconfiguration-white.svg",
        "z-index": 64
      },
      "capabilities": [],
      "status": "enabled",
      "metadata": {
        "configurationUISchema": "",
        "genealogy": "",
        "instanceDetails": null,
        "isAnnotation": false,
        "isNamespaced": false,
        "published": false,
        "source_uri": "git://github.com/kubernetes/kubernetes/master/api/openapi-spec/v3"
      },
      "configuration": {
        "metadata": {
          "annotations": {
            "cert-manager.io/inject-ca-from": "azureserviceoperator-system/azureserviceoperator-serving-cert"
          },
          "name": "azureserviceoperator-mutating-webhook-configuration"
        },
        "webhooks": [
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-alertsmanagement-azure-com-v1api20210401-smartdetectoralertrule"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20210401.smartdetectoralertrules.alertsmanagement.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "alertsmanagement.azure.com"
                ],
                "apiVersions": [
                  "v1api20210401"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "smartdetectoralertrules"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-alertsmanagement-azure-com-v1api20230301-prometheusrulegroup"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20230301.prometheusrulegroups.alertsmanagement.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "alertsmanagement.azure.com"
                ],
                "apiVersions": [
                  "v1api20230301"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "prometheusrulegroups"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-apimanagement-azure-com-v1api20220801-api"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20220801.apis.apimanagement.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "apimanagement.azure.com"
                ],
                "apiVersions": [
                  "v1api20220801"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "apis"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-apimanagement-azure-com-v1api20220801-apiversionset"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20220801.apiversionsets.apimanagement.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "apimanagement.azure.com"
                ],
                "apiVersions": [
                  "v1api20220801"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "apiversionsets"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-apimanagement-azure-com-v1api20220801-authorizationprovider"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20220801.authorizationproviders.apimanagement.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "apimanagement.azure.com"
                ],
                "apiVersions": [
                  "v1api20220801"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "authorizationproviders"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-apimanagement-azure-com-v1api20220801-authorizationprovidersauthorization"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20220801.authorizationprovidersauthorizations.apimanagement.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "apimanagement.azure.com"
                ],
                "apiVersions": [
                  "v1api20220801"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "authorizationprovidersauthorizations"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-apimanagement-azure-com-v1api20220801-authorizationprovidersauthorizationsaccesspolicy"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20220801.authorizationprovidersauthorizationsaccesspolicies.apimanagement.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "apimanagement.azure.com"
                ],
                "apiVersions": [
                  "v1api20220801"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "authorizationprovidersauthorizationsaccesspolicies"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-apimanagement-azure-com-v1api20220801-backend"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20220801.backends.apimanagement.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "apimanagement.azure.com"
                ],
                "apiVersions": [
                  "v1api20220801"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "backends"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-apimanagement-azure-com-v1api20220801-namedvalue"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20220801.namedvalues.apimanagement.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "apimanagement.azure.com"
                ],
                "apiVersions": [
                  "v1api20220801"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "namedvalues"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-apimanagement-azure-com-v1api20220801-policy"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20220801.policies.apimanagement.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "apimanagement.azure.com"
                ],
                "apiVersions": [
                  "v1api20220801"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "policies"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-apimanagement-azure-com-v1api20220801-policyfragment"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20220801.policyfragments.apimanagement.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "apimanagement.azure.com"
                ],
                "apiVersions": [
                  "v1api20220801"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "policyfragments"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-apimanagement-azure-com-v1api20220801-productapi"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20220801.productapis.apimanagement.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "apimanagement.azure.com"
                ],
                "apiVersions": [
                  "v1api20220801"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "productapis"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-apimanagement-azure-com-v1api20220801-productpolicy"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20220801.productpolicies.apimanagement.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "apimanagement.azure.com"
                ],
                "apiVersions": [
                  "v1api20220801"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "productpolicies"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-apimanagement-azure-com-v1api20220801-product"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20220801.products.apimanagement.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "apimanagement.azure.com"
                ],
                "apiVersions": [
                  "v1api20220801"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "products"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-apimanagement-azure-com-v1api20220801-service"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20220801.services.apimanagement.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "apimanagement.azure.com"
                ],
                "apiVersions": [
                  "v1api20220801"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "services"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-apimanagement-azure-com-v1api20220801-subscription"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20220801.subscriptions.apimanagement.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "apimanagement.azure.com"
                ],
                "apiVersions": [
                  "v1api20220801"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "subscriptions"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-apimanagement-azure-com-v1api20230501preview-api"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20230501preview.apis.apimanagement.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "apimanagement.azure.com"
                ],
                "apiVersions": [
                  "v1api20230501preview"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "apis"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-apimanagement-azure-com-v1api20230501preview-apiversionset"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20230501preview.apiversionsets.apimanagement.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "apimanagement.azure.com"
                ],
                "apiVersions": [
                  "v1api20230501preview"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "apiversionsets"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-apimanagement-azure-com-v1api20230501preview-authorizationprovider"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20230501preview.authorizationproviders.apimanagement.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "apimanagement.azure.com"
                ],
                "apiVersions": [
                  "v1api20230501preview"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "authorizationproviders"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-apimanagement-azure-com-v1api20230501preview-authorizationprovidersauthorization"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20230501preview.authorizationprovidersauthorizations.apimanagement.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "apimanagement.azure.com"
                ],
                "apiVersions": [
                  "v1api20230501preview"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "authorizationprovidersauthorizations"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-apimanagement-azure-com-v1api20230501preview-authorizationprovidersauthorizationsaccesspolicy"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20230501preview.authorizationprovidersauthorizationsaccesspolicies.apimanagement.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "apimanagement.azure.com"
                ],
                "apiVersions": [
                  "v1api20230501preview"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "authorizationprovidersauthorizationsaccesspolicies"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-apimanagement-azure-com-v1api20230501preview-backend"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20230501preview.backends.apimanagement.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "apimanagement.azure.com"
                ],
                "apiVersions": [
                  "v1api20230501preview"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "backends"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-apimanagement-azure-com-v1api20230501preview-namedvalue"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20230501preview.namedvalues.apimanagement.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "apimanagement.azure.com"
                ],
                "apiVersions": [
                  "v1api20230501preview"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "namedvalues"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-apimanagement-azure-com-v1api20230501preview-policy"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20230501preview.policies.apimanagement.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "apimanagement.azure.com"
                ],
                "apiVersions": [
                  "v1api20230501preview"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "policies"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-apimanagement-azure-com-v1api20230501preview-policyfragment"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20230501preview.policyfragments.apimanagement.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "apimanagement.azure.com"
                ],
                "apiVersions": [
                  "v1api20230501preview"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "policyfragments"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-apimanagement-azure-com-v1api20230501preview-productapi"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20230501preview.productapis.apimanagement.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "apimanagement.azure.com"
                ],
                "apiVersions": [
                  "v1api20230501preview"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "productapis"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-apimanagement-azure-com-v1api20230501preview-productpolicy"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20230501preview.productpolicies.apimanagement.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "apimanagement.azure.com"
                ],
                "apiVersions": [
                  "v1api20230501preview"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "productpolicies"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-apimanagement-azure-com-v1api20230501preview-product"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20230501preview.products.apimanagement.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "apimanagement.azure.com"
                ],
                "apiVersions": [
                  "v1api20230501preview"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "products"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-apimanagement-azure-com-v1api20230501preview-service"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20230501preview.services.apimanagement.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "apimanagement.azure.com"
                ],
                "apiVersions": [
                  "v1api20230501preview"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "services"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-apimanagement-azure-com-v1api20230501preview-subscription"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20230501preview.subscriptions.apimanagement.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "apimanagement.azure.com"
                ],
                "apiVersions": [
                  "v1api20230501preview"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "subscriptions"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-app-azure-com-v1api20240301-authconfig"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20240301.authconfigs.app.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "app.azure.com"
                ],
                "apiVersions": [
                  "v1api20240301"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "authconfigs"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-app-azure-com-v1api20240301-containerapp"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20240301.containerapps.app.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "app.azure.com"
                ],
                "apiVersions": [
                  "v1api20240301"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "containerapps"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-app-azure-com-v1api20240301-job"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20240301.jobs.app.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "app.azure.com"
                ],
                "apiVersions": [
                  "v1api20240301"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "jobs"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-app-azure-com-v1api20240301-managedenvironment"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20240301.managedenvironments.app.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "app.azure.com"
                ],
                "apiVersions": [
                  "v1api20240301"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "managedenvironments"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-appconfiguration-azure-com-v1api20220501-configurationstore"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20220501.configurationstores.appconfiguration.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "appconfiguration.azure.com"
                ],
                "apiVersions": [
                  "v1api20220501"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "configurationstores"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-authorization-azure-com-v1api20200801preview-roleassignment"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20200801preview.roleassignments.authorization.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "authorization.azure.com"
                ],
                "apiVersions": [
                  "v1api20200801preview"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "roleassignments"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-authorization-azure-com-v1api20220401-roleassignment"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20220401.roleassignments.authorization.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "authorization.azure.com"
                ],
                "apiVersions": [
                  "v1api20220401"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "roleassignments"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-authorization-azure-com-v1api20220401-roledefinition"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20220401.roledefinitions.authorization.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "authorization.azure.com"
                ],
                "apiVersions": [
                  "v1api20220401"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "roledefinitions"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-batch-azure-com-v1api20210101-batchaccount"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20210101.batchaccounts.batch.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "batch.azure.com"
                ],
                "apiVersions": [
                  "v1api20210101"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "batchaccounts"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-cache-azure-com-v1api20201201-redis"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20201201.redis.cache.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "cache.azure.com"
                ],
                "apiVersions": [
                  "v1api20201201"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "redis"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-cache-azure-com-v1api20201201-redisfirewallrule"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20201201.redisfirewallrules.cache.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "cache.azure.com"
                ],
                "apiVersions": [
                  "v1api20201201"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "redisfirewallrules"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-cache-azure-com-v1api20201201-redislinkedserver"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20201201.redislinkedservers.cache.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "cache.azure.com"
                ],
                "apiVersions": [
                  "v1api20201201"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "redislinkedservers"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-cache-azure-com-v1api20201201-redispatchschedule"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20201201.redispatchschedules.cache.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "cache.azure.com"
                ],
                "apiVersions": [
                  "v1api20201201"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "redispatchschedules"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-cache-azure-com-v1api20210301-redisenterprisedatabase"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20210301.redisenterprisedatabases.cache.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "cache.azure.com"
                ],
                "apiVersions": [
                  "v1api20210301"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "redisenterprisedatabases"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-cache-azure-com-v1api20210301-redisenterprise"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20210301.redisenterprises.cache.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "cache.azure.com"
                ],
                "apiVersions": [
                  "v1api20210301"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "redisenterprises"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-cache-azure-com-v1api20230401-redis"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20230401.redis.cache.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "cache.azure.com"
                ],
                "apiVersions": [
                  "v1api20230401"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "redis"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-cache-azure-com-v1api20230401-redisfirewallrule"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20230401.redisfirewallrules.cache.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "cache.azure.com"
                ],
                "apiVersions": [
                  "v1api20230401"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "redisfirewallrules"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-cache-azure-com-v1api20230401-redislinkedserver"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20230401.redislinkedservers.cache.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "cache.azure.com"
                ],
                "apiVersions": [
                  "v1api20230401"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "redislinkedservers"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-cache-azure-com-v1api20230401-redispatchschedule"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20230401.redispatchschedules.cache.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "cache.azure.com"
                ],
                "apiVersions": [
                  "v1api20230401"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "redispatchschedules"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-cache-azure-com-v1api20230701-redisenterprisedatabase"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20230701.redisenterprisedatabases.cache.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "cache.azure.com"
                ],
                "apiVersions": [
                  "v1api20230701"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "redisenterprisedatabases"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-cache-azure-com-v1api20230701-redisenterprise"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20230701.redisenterprises.cache.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "cache.azure.com"
                ],
                "apiVersions": [
                  "v1api20230701"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "redisenterprises"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-cache-azure-com-v1api20230801-redis"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20230801.redis.cache.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "cache.azure.com"
                ],
                "apiVersions": [
                  "v1api20230801"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "redis"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-cache-azure-com-v1api20230801-redisfirewallrule"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20230801.redisfirewallrules.cache.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "cache.azure.com"
                ],
                "apiVersions": [
                  "v1api20230801"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "redisfirewallrules"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-cache-azure-com-v1api20230801-redislinkedserver"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20230801.redislinkedservers.cache.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "cache.azure.com"
                ],
                "apiVersions": [
                  "v1api20230801"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "redislinkedservers"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-cache-azure-com-v1api20230801-redispatchschedule"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20230801.redispatchschedules.cache.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "cache.azure.com"
                ],
                "apiVersions": [
                  "v1api20230801"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "redispatchschedules"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-cdn-azure-com-v1api20210601-profile"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20210601.profiles.cdn.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "cdn.azure.com"
                ],
                "apiVersions": [
                  "v1api20210601"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "profiles"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-cdn-azure-com-v1api20210601-profilesendpoint"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20210601.profilesendpoints.cdn.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "cdn.azure.com"
                ],
                "apiVersions": [
                  "v1api20210601"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "profilesendpoints"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-cdn-azure-com-v1api20230501-afdcustomdomain"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20230501.afdcustomdomains.cdn.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "cdn.azure.com"
                ],
                "apiVersions": [
                  "v1api20230501"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "afdcustomdomains"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-cdn-azure-com-v1api20230501-afdendpoint"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20230501.afdendpoints.cdn.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "cdn.azure.com"
                ],
                "apiVersions": [
                  "v1api20230501"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "afdendpoints"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-cdn-azure-com-v1api20230501-afdorigingroup"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20230501.afdorigingroups.cdn.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "cdn.azure.com"
                ],
                "apiVersions": [
                  "v1api20230501"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "afdorigingroups"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-cdn-azure-com-v1api20230501-afdorigin"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20230501.afdorigins.cdn.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "cdn.azure.com"
                ],
                "apiVersions": [
                  "v1api20230501"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "afdorigins"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-cdn-azure-com-v1api20230501-profile"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20230501.profiles.cdn.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "cdn.azure.com"
                ],
                "apiVersions": [
                  "v1api20230501"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "profiles"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-cdn-azure-com-v1api20230501-route"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20230501.routes.cdn.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "cdn.azure.com"
                ],
                "apiVersions": [
                  "v1api20230501"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "routes"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-cdn-azure-com-v1api20230501-rule"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20230501.rules.cdn.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "cdn.azure.com"
                ],
                "apiVersions": [
                  "v1api20230501"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "rules"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-cdn-azure-com-v1api20230501-ruleset"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20230501.rulesets.cdn.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "cdn.azure.com"
                ],
                "apiVersions": [
                  "v1api20230501"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "rulesets"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-cdn-azure-com-v1api20230501-secret"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20230501.secrets.cdn.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "cdn.azure.com"
                ],
                "apiVersions": [
                  "v1api20230501"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "secrets"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-cdn-azure-com-v1api20230501-securitypolicy"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20230501.securitypolicies.cdn.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "cdn.azure.com"
                ],
                "apiVersions": [
                  "v1api20230501"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "securitypolicies"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-compute-azure-com-v1api20200930-disk"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20200930.disks.compute.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "compute.azure.com"
                ],
                "apiVersions": [
                  "v1api20200930"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "disks"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-compute-azure-com-v1api20200930-snapshot"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20200930.snapshots.compute.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "compute.azure.com"
                ],
                "apiVersions": [
                  "v1api20200930"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "snapshots"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-compute-azure-com-v1api20201201-virtualmachine"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20201201.virtualmachines.compute.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "compute.azure.com"
                ],
                "apiVersions": [
                  "v1api20201201"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "virtualmachines"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-compute-azure-com-v1api20201201-virtualmachinescaleset"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20201201.virtualmachinescalesets.compute.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "compute.azure.com"
                ],
                "apiVersions": [
                  "v1api20201201"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "virtualmachinescalesets"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-compute-azure-com-v1api20201201-virtualmachinescalesetsextension"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20201201.virtualmachinescalesetsextensions.compute.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "compute.azure.com"
                ],
                "apiVersions": [
                  "v1api20201201"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "virtualmachinescalesetsextensions"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-compute-azure-com-v1api20201201-virtualmachinesextension"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20201201.virtualmachinesextensions.compute.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "compute.azure.com"
                ],
                "apiVersions": [
                  "v1api20201201"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "virtualmachinesextensions"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-compute-azure-com-v1api20210701-image"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20210701.images.compute.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "compute.azure.com"
                ],
                "apiVersions": [
                  "v1api20210701"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "images"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-compute-azure-com-v1api20220301-image"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20220301.images.compute.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "compute.azure.com"
                ],
                "apiVersions": [
                  "v1api20220301"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "images"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-compute-azure-com-v1api20220301-virtualmachine"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20220301.virtualmachines.compute.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "compute.azure.com"
                ],
                "apiVersions": [
                  "v1api20220301"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "virtualmachines"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-compute-azure-com-v1api20220301-virtualmachinescaleset"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20220301.virtualmachinescalesets.compute.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "compute.azure.com"
                ],
                "apiVersions": [
                  "v1api20220301"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "virtualmachinescalesets"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-compute-azure-com-v1api20220301-virtualmachinescalesetsextension"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20220301.virtualmachinescalesetsextensions.compute.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "compute.azure.com"
                ],
                "apiVersions": [
                  "v1api20220301"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "virtualmachinescalesetsextensions"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-compute-azure-com-v1api20220301-virtualmachinesextension"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20220301.virtualmachinesextensions.compute.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "compute.azure.com"
                ],
                "apiVersions": [
                  "v1api20220301"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "virtualmachinesextensions"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-compute-azure-com-v1api20220702-diskencryptionset"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20220702.diskencryptionsets.compute.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "compute.azure.com"
                ],
                "apiVersions": [
                  "v1api20220702"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "diskencryptionsets"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-compute-azure-com-v1api20240302-diskaccess"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20240302.diskaccesses.compute.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "compute.azure.com"
                ],
                "apiVersions": [
                  "v1api20240302"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "diskaccesses"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-compute-azure-com-v1api20240302-diskencryptionset"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20240302.diskencryptionsets.compute.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "compute.azure.com"
                ],
                "apiVersions": [
                  "v1api20240302"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "diskencryptionsets"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-compute-azure-com-v1api20240302-disk"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20240302.disks.compute.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "compute.azure.com"
                ],
                "apiVersions": [
                  "v1api20240302"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "disks"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-compute-azure-com-v1api20240302-snapshot"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20240302.snapshots.compute.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "compute.azure.com"
                ],
                "apiVersions": [
                  "v1api20240302"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "snapshots"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-containerinstance-azure-com-v1api20211001-containergroup"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20211001.containergroups.containerinstance.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "containerinstance.azure.com"
                ],
                "apiVersions": [
                  "v1api20211001"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "containergroups"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-containerregistry-azure-com-v1api20210901-registry"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20210901.registries.containerregistry.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "containerregistry.azure.com"
                ],
                "apiVersions": [
                  "v1api20210901"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "registries"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-containerregistry-azure-com-v1api20230701-registry"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20230701.registries.containerregistry.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "containerregistry.azure.com"
                ],
                "apiVersions": [
                  "v1api20230701"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "registries"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-containerregistry-azure-com-v1api20230701-registryreplication"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20230701.registryreplications.containerregistry.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "containerregistry.azure.com"
                ],
                "apiVersions": [
                  "v1api20230701"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "registryreplications"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-containerservice-azure-com-v1api20210501-managedcluster"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20210501.managedclusters.containerservice.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "containerservice.azure.com"
                ],
                "apiVersions": [
                  "v1api20210501"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "managedclusters"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-containerservice-azure-com-v1api20210501-managedclustersagentpool"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20210501.managedclustersagentpools.containerservice.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "containerservice.azure.com"
                ],
                "apiVersions": [
                  "v1api20210501"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "managedclustersagentpools"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-containerservice-azure-com-v1api20230201-managedcluster"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20230201.managedclusters.containerservice.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "containerservice.azure.com"
                ],
                "apiVersions": [
                  "v1api20230201"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "managedclusters"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-containerservice-azure-com-v1api20230201-managedclustersagentpool"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20230201.managedclustersagentpools.containerservice.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "containerservice.azure.com"
                ],
                "apiVersions": [
                  "v1api20230201"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "managedclustersagentpools"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-containerservice-azure-com-v1api20230315preview-fleet"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20230315preview.fleets.containerservice.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "containerservice.azure.com"
                ],
                "apiVersions": [
                  "v1api20230315preview"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "fleets"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-containerservice-azure-com-v1api20230315preview-fleetsmember"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20230315preview.fleetsmembers.containerservice.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "containerservice.azure.com"
                ],
                "apiVersions": [
                  "v1api20230315preview"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "fleetsmembers"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-containerservice-azure-com-v1api20230315preview-fleetsupdaterun"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20230315preview.fleetsupdateruns.containerservice.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "containerservice.azure.com"
                ],
                "apiVersions": [
                  "v1api20230315preview"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "fleetsupdateruns"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-containerservice-azure-com-v1api20231001-managedcluster"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20231001.managedclusters.containerservice.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "containerservice.azure.com"
                ],
                "apiVersions": [
                  "v1api20231001"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "managedclusters"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-containerservice-azure-com-v1api20231001-managedclustersagentpool"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20231001.managedclustersagentpools.containerservice.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "containerservice.azure.com"
                ],
                "apiVersions": [
                  "v1api20231001"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "managedclustersagentpools"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-containerservice-azure-com-v1api20231001-trustedaccessrolebinding"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20231001.trustedaccessrolebindings.containerservice.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "containerservice.azure.com"
                ],
                "apiVersions": [
                  "v1api20231001"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "trustedaccessrolebindings"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-containerservice-azure-com-v1api20231102preview-managedcluster"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20231102preview.managedclusters.containerservice.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "containerservice.azure.com"
                ],
                "apiVersions": [
                  "v1api20231102preview"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "managedclusters"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-containerservice-azure-com-v1api20231102preview-managedclustersagentpool"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20231102preview.managedclustersagentpools.containerservice.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "containerservice.azure.com"
                ],
                "apiVersions": [
                  "v1api20231102preview"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "managedclustersagentpools"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-containerservice-azure-com-v1api20240402preview-managedcluster"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20240402preview.managedclusters.containerservice.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "containerservice.azure.com"
                ],
                "apiVersions": [
                  "v1api20240402preview"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "managedclusters"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-containerservice-azure-com-v1api20240402preview-managedclustersagentpool"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20240402preview.managedclustersagentpools.containerservice.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "containerservice.azure.com"
                ],
                "apiVersions": [
                  "v1api20240402preview"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "managedclustersagentpools"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-containerservice-azure-com-v1api20240402preview-trustedaccessrolebinding"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20240402preview.trustedaccessrolebindings.containerservice.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "containerservice.azure.com"
                ],
                "apiVersions": [
                  "v1api20240402preview"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "trustedaccessrolebindings"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-containerservice-azure-com-v1api20240901-maintenanceconfiguration"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20240901.maintenanceconfigurations.containerservice.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "containerservice.azure.com"
                ],
                "apiVersions": [
                  "v1api20240901"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "maintenanceconfigurations"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-containerservice-azure-com-v1api20240901-managedcluster"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20240901.managedclusters.containerservice.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "containerservice.azure.com"
                ],
                "apiVersions": [
                  "v1api20240901"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "managedclusters"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-containerservice-azure-com-v1api20240901-managedclustersagentpool"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20240901.managedclustersagentpools.containerservice.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "containerservice.azure.com"
                ],
                "apiVersions": [
                  "v1api20240901"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "managedclustersagentpools"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-containerservice-azure-com-v1api20240901-trustedaccessrolebinding"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20240901.trustedaccessrolebindings.containerservice.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "containerservice.azure.com"
                ],
                "apiVersions": [
                  "v1api20240901"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "trustedaccessrolebindings"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-datafactory-azure-com-v1api20180601-factory"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20180601.factories.datafactory.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "datafactory.azure.com"
                ],
                "apiVersions": [
                  "v1api20180601"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "factories"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-dataprotection-azure-com-v1api20230101-backupvault"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20230101.backupvaults.dataprotection.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "dataprotection.azure.com"
                ],
                "apiVersions": [
                  "v1api20230101"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "backupvaults"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-dataprotection-azure-com-v1api20230101-backupvaultsbackuppolicy"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20230101.backupvaultsbackuppolicies.dataprotection.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "dataprotection.azure.com"
                ],
                "apiVersions": [
                  "v1api20230101"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "backupvaultsbackuppolicies"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-dataprotection-azure-com-v1api20231101-backupvault"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20231101.backupvaults.dataprotection.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "dataprotection.azure.com"
                ],
                "apiVersions": [
                  "v1api20231101"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "backupvaults"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-dataprotection-azure-com-v1api20231101-backupvaultsbackupinstance"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20231101.backupvaultsbackupinstances.dataprotection.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "dataprotection.azure.com"
                ],
                "apiVersions": [
                  "v1api20231101"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "backupvaultsbackupinstances"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-dataprotection-azure-com-v1api20231101-backupvaultsbackuppolicy"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20231101.backupvaultsbackuppolicies.dataprotection.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "dataprotection.azure.com"
                ],
                "apiVersions": [
                  "v1api20231101"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "backupvaultsbackuppolicies"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-dbformariadb-azure-com-v1api20180601-configuration"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20180601.configurations.dbformariadb.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "dbformariadb.azure.com"
                ],
                "apiVersions": [
                  "v1api20180601"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "configurations"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-dbformariadb-azure-com-v1api20180601-database"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20180601.databases.dbformariadb.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "dbformariadb.azure.com"
                ],
                "apiVersions": [
                  "v1api20180601"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "databases"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-dbformariadb-azure-com-v1api20180601-server"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20180601.servers.dbformariadb.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "dbformariadb.azure.com"
                ],
                "apiVersions": [
                  "v1api20180601"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "servers"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-dbformysql-azure-com-v1-user"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1.users.dbformysql.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "dbformysql.azure.com"
                ],
                "apiVersions": [
                  "v1"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "users"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-dbformysql-azure-com-v1api20210501-flexibleserver"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20210501.flexibleservers.dbformysql.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "dbformysql.azure.com"
                ],
                "apiVersions": [
                  "v1api20210501"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "flexibleservers"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-dbformysql-azure-com-v1api20210501-flexibleserversdatabase"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20210501.flexibleserversdatabases.dbformysql.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "dbformysql.azure.com"
                ],
                "apiVersions": [
                  "v1api20210501"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "flexibleserversdatabases"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-dbformysql-azure-com-v1api20210501-flexibleserversfirewallrule"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20210501.flexibleserversfirewallrules.dbformysql.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "dbformysql.azure.com"
                ],
                "apiVersions": [
                  "v1api20210501"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "flexibleserversfirewallrules"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-dbformysql-azure-com-v1api20220101-flexibleserversadministrator"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20220101.flexibleserversadministrators.dbformysql.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "dbformysql.azure.com"
                ],
                "apiVersions": [
                  "v1api20220101"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "flexibleserversadministrators"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-dbformysql-azure-com-v1api20220101-flexibleserversconfiguration"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20220101.flexibleserversconfigurations.dbformysql.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "dbformysql.azure.com"
                ],
                "apiVersions": [
                  "v1api20220101"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "flexibleserversconfigurations"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-dbformysql-azure-com-v1api20230630-flexibleserver"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20230630.flexibleservers.dbformysql.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "dbformysql.azure.com"
                ],
                "apiVersions": [
                  "v1api20230630"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "flexibleservers"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-dbformysql-azure-com-v1api20230630-flexibleserversadministrator"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20230630.flexibleserversadministrators.dbformysql.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "dbformysql.azure.com"
                ],
                "apiVersions": [
                  "v1api20230630"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "flexibleserversadministrators"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-dbformysql-azure-com-v1api20230630-flexibleserversconfiguration"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20230630.flexibleserversconfigurations.dbformysql.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "dbformysql.azure.com"
                ],
                "apiVersions": [
                  "v1api20230630"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "flexibleserversconfigurations"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-dbformysql-azure-com-v1api20230630-flexibleserversdatabase"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20230630.flexibleserversdatabases.dbformysql.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "dbformysql.azure.com"
                ],
                "apiVersions": [
                  "v1api20230630"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "flexibleserversdatabases"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-dbformysql-azure-com-v1api20230630-flexibleserversfirewallrule"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20230630.flexibleserversfirewallrules.dbformysql.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "dbformysql.azure.com"
                ],
                "apiVersions": [
                  "v1api20230630"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "flexibleserversfirewallrules"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-dbformysql-azure-com-v1api20231230-flexibleserver"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20231230.flexibleservers.dbformysql.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "dbformysql.azure.com"
                ],
                "apiVersions": [
                  "v1api20231230"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "flexibleservers"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-dbformysql-azure-com-v1api20231230-flexibleserversadministrator"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20231230.flexibleserversadministrators.dbformysql.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "dbformysql.azure.com"
                ],
                "apiVersions": [
                  "v1api20231230"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "flexibleserversadministrators"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-dbformysql-azure-com-v1api20231230-flexibleserversconfiguration"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20231230.flexibleserversconfigurations.dbformysql.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "dbformysql.azure.com"
                ],
                "apiVersions": [
                  "v1api20231230"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "flexibleserversconfigurations"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-dbformysql-azure-com-v1api20231230-flexibleserversdatabase"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20231230.flexibleserversdatabases.dbformysql.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "dbformysql.azure.com"
                ],
                "apiVersions": [
                  "v1api20231230"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "flexibleserversdatabases"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-dbformysql-azure-com-v1api20231230-flexibleserversfirewallrule"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20231230.flexibleserversfirewallrules.dbformysql.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "dbformysql.azure.com"
                ],
                "apiVersions": [
                  "v1api20231230"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "flexibleserversfirewallrules"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-dbforpostgresql-azure-com-v1-user"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1.users.dbforpostgresql.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "dbforpostgresql.azure.com"
                ],
                "apiVersions": [
                  "v1"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "users"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-dbforpostgresql-azure-com-v1api20210601-flexibleserver"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20210601.flexibleservers.dbforpostgresql.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "dbforpostgresql.azure.com"
                ],
                "apiVersions": [
                  "v1api20210601"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "flexibleservers"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-dbforpostgresql-azure-com-v1api20210601-flexibleserversconfiguration"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20210601.flexibleserversconfigurations.dbforpostgresql.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "dbforpostgresql.azure.com"
                ],
                "apiVersions": [
                  "v1api20210601"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "flexibleserversconfigurations"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-dbforpostgresql-azure-com-v1api20210601-flexibleserversdatabase"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20210601.flexibleserversdatabases.dbforpostgresql.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "dbforpostgresql.azure.com"
                ],
                "apiVersions": [
                  "v1api20210601"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "flexibleserversdatabases"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-dbforpostgresql-azure-com-v1api20210601-flexibleserversfirewallrule"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20210601.flexibleserversfirewallrules.dbforpostgresql.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "dbforpostgresql.azure.com"
                ],
                "apiVersions": [
                  "v1api20210601"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "flexibleserversfirewallrules"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-dbforpostgresql-azure-com-v1api20220120preview-flexibleserver"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20220120preview.flexibleservers.dbforpostgresql.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "dbforpostgresql.azure.com"
                ],
                "apiVersions": [
                  "v1api20220120preview"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "flexibleservers"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-dbforpostgresql-azure-com-v1api20220120preview-flexibleserversconfiguration"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20220120preview.flexibleserversconfigurations.dbforpostgresql.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "dbforpostgresql.azure.com"
                ],
                "apiVersions": [
                  "v1api20220120preview"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "flexibleserversconfigurations"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-dbforpostgresql-azure-com-v1api20220120preview-flexibleserversdatabase"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20220120preview.flexibleserversdatabases.dbforpostgresql.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "dbforpostgresql.azure.com"
                ],
                "apiVersions": [
                  "v1api20220120preview"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "flexibleserversdatabases"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-dbforpostgresql-azure-com-v1api20220120preview-flexibleserversfirewallrule"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20220120preview.flexibleserversfirewallrules.dbforpostgresql.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "dbforpostgresql.azure.com"
                ],
                "apiVersions": [
                  "v1api20220120preview"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "flexibleserversfirewallrules"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-dbforpostgresql-azure-com-v1api20221201-flexibleserver"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20221201.flexibleservers.dbforpostgresql.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "dbforpostgresql.azure.com"
                ],
                "apiVersions": [
                  "v1api20221201"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "flexibleservers"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-dbforpostgresql-azure-com-v1api20221201-flexibleserversconfiguration"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20221201.flexibleserversconfigurations.dbforpostgresql.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "dbforpostgresql.azure.com"
                ],
                "apiVersions": [
                  "v1api20221201"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "flexibleserversconfigurations"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-dbforpostgresql-azure-com-v1api20221201-flexibleserversdatabase"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20221201.flexibleserversdatabases.dbforpostgresql.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "dbforpostgresql.azure.com"
                ],
                "apiVersions": [
                  "v1api20221201"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "flexibleserversdatabases"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-dbforpostgresql-azure-com-v1api20221201-flexibleserversfirewallrule"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20221201.flexibleserversfirewallrules.dbforpostgresql.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "dbforpostgresql.azure.com"
                ],
                "apiVersions": [
                  "v1api20221201"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "flexibleserversfirewallrules"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-dbforpostgresql-azure-com-v1api20230601preview-flexibleserver"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20230601preview.flexibleservers.dbforpostgresql.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "dbforpostgresql.azure.com"
                ],
                "apiVersions": [
                  "v1api20230601preview"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "flexibleservers"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-dbforpostgresql-azure-com-v1api20230601preview-flexibleserversconfiguration"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20230601preview.flexibleserversconfigurations.dbforpostgresql.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "dbforpostgresql.azure.com"
                ],
                "apiVersions": [
                  "v1api20230601preview"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "flexibleserversconfigurations"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-dbforpostgresql-azure-com-v1api20230601preview-flexibleserversdatabase"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20230601preview.flexibleserversdatabases.dbforpostgresql.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "dbforpostgresql.azure.com"
                ],
                "apiVersions": [
                  "v1api20230601preview"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "flexibleserversdatabases"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-dbforpostgresql-azure-com-v1api20230601preview-flexibleserversfirewallrule"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20230601preview.flexibleserversfirewallrules.dbforpostgresql.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "dbforpostgresql.azure.com"
                ],
                "apiVersions": [
                  "v1api20230601preview"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "flexibleserversfirewallrules"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-dbforpostgresql-azure-com-v1api20240801-flexibleserver"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20240801.flexibleservers.dbforpostgresql.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "dbforpostgresql.azure.com"
                ],
                "apiVersions": [
                  "v1api20240801"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "flexibleservers"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-dbforpostgresql-azure-com-v1api20240801-flexibleserversadvancedthreatprotectionsettings"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20240801.flexibleserversadvancedthreatprotectionsettings.dbforpostgresql.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "dbforpostgresql.azure.com"
                ],
                "apiVersions": [
                  "v1api20240801"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "flexibleserversadvancedthreatprotectionsettings"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-dbforpostgresql-azure-com-v1api20240801-flexibleserversbackup"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20240801.flexibleserversbackups.dbforpostgresql.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "dbforpostgresql.azure.com"
                ],
                "apiVersions": [
                  "v1api20240801"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "flexibleserversbackups"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-dbforpostgresql-azure-com-v1api20240801-flexibleserversconfiguration"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20240801.flexibleserversconfigurations.dbforpostgresql.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "dbforpostgresql.azure.com"
                ],
                "apiVersions": [
                  "v1api20240801"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "flexibleserversconfigurations"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-dbforpostgresql-azure-com-v1api20240801-flexibleserversdatabase"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20240801.flexibleserversdatabases.dbforpostgresql.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "dbforpostgresql.azure.com"
                ],
                "apiVersions": [
                  "v1api20240801"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "flexibleserversdatabases"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-dbforpostgresql-azure-com-v1api20240801-flexibleserversfirewallrule"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20240801.flexibleserversfirewallrules.dbforpostgresql.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "dbforpostgresql.azure.com"
                ],
                "apiVersions": [
                  "v1api20240801"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "flexibleserversfirewallrules"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-dbforpostgresql-azure-com-v1api20240801-flexibleserversvirtualendpoint"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20240801.flexibleserversvirtualendpoints.dbforpostgresql.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "dbforpostgresql.azure.com"
                ],
                "apiVersions": [
                  "v1api20240801"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "flexibleserversvirtualendpoints"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-devices-azure-com-v1api20210702-iothub"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20210702.iothubs.devices.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "devices.azure.com"
                ],
                "apiVersions": [
                  "v1api20210702"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "iothubs"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-documentdb-azure-com-v1api20210515-databaseaccount"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20210515.databaseaccounts.documentdb.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "documentdb.azure.com"
                ],
                "apiVersions": [
                  "v1api20210515"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "databaseaccounts"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-documentdb-azure-com-v1api20210515-mongodbdatabasecollection"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20210515.mongodbdatabasecollections.documentdb.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "documentdb.azure.com"
                ],
                "apiVersions": [
                  "v1api20210515"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "mongodbdatabasecollections"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-documentdb-azure-com-v1api20210515-mongodbdatabasecollectionthroughputsetting"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20210515.mongodbdatabasecollectionthroughputsettings.documentdb.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "documentdb.azure.com"
                ],
                "apiVersions": [
                  "v1api20210515"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "mongodbdatabasecollectionthroughputsettings"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-documentdb-azure-com-v1api20210515-mongodbdatabase"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20210515.mongodbdatabases.documentdb.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "documentdb.azure.com"
                ],
                "apiVersions": [
                  "v1api20210515"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "mongodbdatabases"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-documentdb-azure-com-v1api20210515-mongodbdatabasethroughputsetting"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20210515.mongodbdatabasethroughputsettings.documentdb.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "documentdb.azure.com"
                ],
                "apiVersions": [
                  "v1api20210515"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "mongodbdatabasethroughputsettings"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-documentdb-azure-com-v1api20210515-sqldatabasecontainer"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20210515.sqldatabasecontainers.documentdb.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "documentdb.azure.com"
                ],
                "apiVersions": [
                  "v1api20210515"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "sqldatabasecontainers"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-documentdb-azure-com-v1api20210515-sqldatabasecontainerstoredprocedure"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20210515.sqldatabasecontainerstoredprocedures.documentdb.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "documentdb.azure.com"
                ],
                "apiVersions": [
                  "v1api20210515"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "sqldatabasecontainerstoredprocedures"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-documentdb-azure-com-v1api20210515-sqldatabasecontainerthroughputsetting"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20210515.sqldatabasecontainerthroughputsettings.documentdb.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "documentdb.azure.com"
                ],
                "apiVersions": [
                  "v1api20210515"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "sqldatabasecontainerthroughputsettings"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-documentdb-azure-com-v1api20210515-sqldatabasecontainertrigger"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20210515.sqldatabasecontainertriggers.documentdb.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "documentdb.azure.com"
                ],
                "apiVersions": [
                  "v1api20210515"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "sqldatabasecontainertriggers"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-documentdb-azure-com-v1api20210515-sqldatabasecontaineruserdefinedfunction"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20210515.sqldatabasecontaineruserdefinedfunctions.documentdb.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "documentdb.azure.com"
                ],
                "apiVersions": [
                  "v1api20210515"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "sqldatabasecontaineruserdefinedfunctions"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-documentdb-azure-com-v1api20210515-sqldatabase"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20210515.sqldatabases.documentdb.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "documentdb.azure.com"
                ],
                "apiVersions": [
                  "v1api20210515"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "sqldatabases"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-documentdb-azure-com-v1api20210515-sqldatabasethroughputsetting"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20210515.sqldatabasethroughputsettings.documentdb.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "documentdb.azure.com"
                ],
                "apiVersions": [
                  "v1api20210515"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "sqldatabasethroughputsettings"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-documentdb-azure-com-v1api20210515-sqlroleassignment"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20210515.sqlroleassignments.documentdb.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "documentdb.azure.com"
                ],
                "apiVersions": [
                  "v1api20210515"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "sqlroleassignments"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-documentdb-azure-com-v1api20231115-databaseaccount"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20231115.databaseaccounts.documentdb.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "documentdb.azure.com"
                ],
                "apiVersions": [
                  "v1api20231115"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "databaseaccounts"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-documentdb-azure-com-v1api20231115-mongodbdatabasecollection"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20231115.mongodbdatabasecollections.documentdb.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "documentdb.azure.com"
                ],
                "apiVersions": [
                  "v1api20231115"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "mongodbdatabasecollections"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-documentdb-azure-com-v1api20231115-mongodbdatabasecollectionthroughputsetting"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20231115.mongodbdatabasecollectionthroughputsettings.documentdb.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "documentdb.azure.com"
                ],
                "apiVersions": [
                  "v1api20231115"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "mongodbdatabasecollectionthroughputsettings"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-documentdb-azure-com-v1api20231115-mongodbdatabase"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20231115.mongodbdatabases.documentdb.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "documentdb.azure.com"
                ],
                "apiVersions": [
                  "v1api20231115"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "mongodbdatabases"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-documentdb-azure-com-v1api20231115-mongodbdatabasethroughputsetting"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20231115.mongodbdatabasethroughputsettings.documentdb.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "documentdb.azure.com"
                ],
                "apiVersions": [
                  "v1api20231115"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "mongodbdatabasethroughputsettings"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-documentdb-azure-com-v1api20231115-sqldatabasecontainer"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20231115.sqldatabasecontainers.documentdb.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "documentdb.azure.com"
                ],
                "apiVersions": [
                  "v1api20231115"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "sqldatabasecontainers"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-documentdb-azure-com-v1api20231115-sqldatabasecontainerstoredprocedure"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20231115.sqldatabasecontainerstoredprocedures.documentdb.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "documentdb.azure.com"
                ],
                "apiVersions": [
                  "v1api20231115"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "sqldatabasecontainerstoredprocedures"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-documentdb-azure-com-v1api20231115-sqldatabasecontainerthroughputsetting"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20231115.sqldatabasecontainerthroughputsettings.documentdb.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "documentdb.azure.com"
                ],
                "apiVersions": [
                  "v1api20231115"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "sqldatabasecontainerthroughputsettings"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-documentdb-azure-com-v1api20231115-sqldatabasecontainertrigger"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20231115.sqldatabasecontainertriggers.documentdb.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "documentdb.azure.com"
                ],
                "apiVersions": [
                  "v1api20231115"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "sqldatabasecontainertriggers"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-documentdb-azure-com-v1api20231115-sqldatabasecontaineruserdefinedfunction"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20231115.sqldatabasecontaineruserdefinedfunctions.documentdb.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "documentdb.azure.com"
                ],
                "apiVersions": [
                  "v1api20231115"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "sqldatabasecontaineruserdefinedfunctions"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-documentdb-azure-com-v1api20231115-sqldatabase"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20231115.sqldatabases.documentdb.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "documentdb.azure.com"
                ],
                "apiVersions": [
                  "v1api20231115"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "sqldatabases"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-documentdb-azure-com-v1api20231115-sqldatabasethroughputsetting"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20231115.sqldatabasethroughputsettings.documentdb.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "documentdb.azure.com"
                ],
                "apiVersions": [
                  "v1api20231115"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "sqldatabasethroughputsettings"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-documentdb-azure-com-v1api20231115-sqlroleassignment"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20231115.sqlroleassignments.documentdb.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "documentdb.azure.com"
                ],
                "apiVersions": [
                  "v1api20231115"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "sqlroleassignments"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-documentdb-azure-com-v1api20240815-databaseaccount"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20240815.databaseaccounts.documentdb.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "documentdb.azure.com"
                ],
                "apiVersions": [
                  "v1api20240815"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "databaseaccounts"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-documentdb-azure-com-v1api20240815-mongodbdatabasecollection"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20240815.mongodbdatabasecollections.documentdb.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "documentdb.azure.com"
                ],
                "apiVersions": [
                  "v1api20240815"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "mongodbdatabasecollections"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-documentdb-azure-com-v1api20240815-mongodbdatabasecollectionthroughputsetting"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20240815.mongodbdatabasecollectionthroughputsettings.documentdb.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "documentdb.azure.com"
                ],
                "apiVersions": [
                  "v1api20240815"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "mongodbdatabasecollectionthroughputsettings"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-documentdb-azure-com-v1api20240815-mongodbdatabase"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20240815.mongodbdatabases.documentdb.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "documentdb.azure.com"
                ],
                "apiVersions": [
                  "v1api20240815"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "mongodbdatabases"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-documentdb-azure-com-v1api20240815-mongodbdatabasethroughputsetting"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20240815.mongodbdatabasethroughputsettings.documentdb.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "documentdb.azure.com"
                ],
                "apiVersions": [
                  "v1api20240815"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "mongodbdatabasethroughputsettings"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-documentdb-azure-com-v1api20240815-mongodbuserdefinition"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20240815.mongodbuserdefinitions.documentdb.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "documentdb.azure.com"
                ],
                "apiVersions": [
                  "v1api20240815"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "mongodbuserdefinitions"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-documentdb-azure-com-v1api20240815-sqldatabasecontainer"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20240815.sqldatabasecontainers.documentdb.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "documentdb.azure.com"
                ],
                "apiVersions": [
                  "v1api20240815"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "sqldatabasecontainers"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-documentdb-azure-com-v1api20240815-sqldatabasecontainerstoredprocedure"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20240815.sqldatabasecontainerstoredprocedures.documentdb.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "documentdb.azure.com"
                ],
                "apiVersions": [
                  "v1api20240815"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "sqldatabasecontainerstoredprocedures"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-documentdb-azure-com-v1api20240815-sqldatabasecontainerthroughputsetting"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20240815.sqldatabasecontainerthroughputsettings.documentdb.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "documentdb.azure.com"
                ],
                "apiVersions": [
                  "v1api20240815"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "sqldatabasecontainerthroughputsettings"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-documentdb-azure-com-v1api20240815-sqldatabasecontainertrigger"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20240815.sqldatabasecontainertriggers.documentdb.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "documentdb.azure.com"
                ],
                "apiVersions": [
                  "v1api20240815"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "sqldatabasecontainertriggers"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-documentdb-azure-com-v1api20240815-sqldatabasecontaineruserdefinedfunction"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20240815.sqldatabasecontaineruserdefinedfunctions.documentdb.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "documentdb.azure.com"
                ],
                "apiVersions": [
                  "v1api20240815"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "sqldatabasecontaineruserdefinedfunctions"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-documentdb-azure-com-v1api20240815-sqldatabase"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20240815.sqldatabases.documentdb.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "documentdb.azure.com"
                ],
                "apiVersions": [
                  "v1api20240815"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "sqldatabases"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-documentdb-azure-com-v1api20240815-sqldatabasethroughputsetting"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20240815.sqldatabasethroughputsettings.documentdb.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "documentdb.azure.com"
                ],
                "apiVersions": [
                  "v1api20240815"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "sqldatabasethroughputsettings"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-documentdb-azure-com-v1api20240815-sqlroleassignment"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20240815.sqlroleassignments.documentdb.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "documentdb.azure.com"
                ],
                "apiVersions": [
                  "v1api20240815"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "sqlroleassignments"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-eventgrid-azure-com-v1api20200601-domain"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20200601.domains.eventgrid.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "eventgrid.azure.com"
                ],
                "apiVersions": [
                  "v1api20200601"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "domains"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-eventgrid-azure-com-v1api20200601-domainstopic"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20200601.domainstopics.eventgrid.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "eventgrid.azure.com"
                ],
                "apiVersions": [
                  "v1api20200601"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "domainstopics"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-eventgrid-azure-com-v1api20200601-eventsubscription"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20200601.eventsubscriptions.eventgrid.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "eventgrid.azure.com"
                ],
                "apiVersions": [
                  "v1api20200601"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "eventsubscriptions"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-eventgrid-azure-com-v1api20200601-topic"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20200601.topics.eventgrid.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "eventgrid.azure.com"
                ],
                "apiVersions": [
                  "v1api20200601"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "topics"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-eventhub-azure-com-v1api20211101-namespace"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20211101.namespaces.eventhub.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "eventhub.azure.com"
                ],
                "apiVersions": [
                  "v1api20211101"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "namespaces"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-eventhub-azure-com-v1api20211101-namespacesauthorizationrule"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20211101.namespacesauthorizationrules.eventhub.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "eventhub.azure.com"
                ],
                "apiVersions": [
                  "v1api20211101"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "namespacesauthorizationrules"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-eventhub-azure-com-v1api20211101-namespaceseventhub"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20211101.namespaceseventhubs.eventhub.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "eventhub.azure.com"
                ],
                "apiVersions": [
                  "v1api20211101"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "namespaceseventhubs"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-eventhub-azure-com-v1api20211101-namespaceseventhubsauthorizationrule"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20211101.namespaceseventhubsauthorizationrules.eventhub.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "eventhub.azure.com"
                ],
                "apiVersions": [
                  "v1api20211101"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "namespaceseventhubsauthorizationrules"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-eventhub-azure-com-v1api20211101-namespaceseventhubsconsumergroup"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20211101.namespaceseventhubsconsumergroups.eventhub.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "eventhub.azure.com"
                ],
                "apiVersions": [
                  "v1api20211101"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "namespaceseventhubsconsumergroups"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-eventhub-azure-com-v1api20240101-namespace"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20240101.namespaces.eventhub.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "eventhub.azure.com"
                ],
                "apiVersions": [
                  "v1api20240101"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "namespaces"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-eventhub-azure-com-v1api20240101-namespacesauthorizationrule"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20240101.namespacesauthorizationrules.eventhub.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "eventhub.azure.com"
                ],
                "apiVersions": [
                  "v1api20240101"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "namespacesauthorizationrules"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-eventhub-azure-com-v1api20240101-namespaceseventhub"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20240101.namespaceseventhubs.eventhub.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "eventhub.azure.com"
                ],
                "apiVersions": [
                  "v1api20240101"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "namespaceseventhubs"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-eventhub-azure-com-v1api20240101-namespaceseventhubsauthorizationrule"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20240101.namespaceseventhubsauthorizationrules.eventhub.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "eventhub.azure.com"
                ],
                "apiVersions": [
                  "v1api20240101"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "namespaceseventhubsauthorizationrules"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-eventhub-azure-com-v1api20240101-namespaceseventhubsconsumergroup"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20240101.namespaceseventhubsconsumergroups.eventhub.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "eventhub.azure.com"
                ],
                "apiVersions": [
                  "v1api20240101"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "namespaceseventhubsconsumergroups"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-insights-azure-com-v1api20180301-metricalert"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20180301.metricalerts.insights.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "insights.azure.com"
                ],
                "apiVersions": [
                  "v1api20180301"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "metricalerts"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-insights-azure-com-v1api20180501preview-webtest"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20180501preview.webtests.insights.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "insights.azure.com"
                ],
                "apiVersions": [
                  "v1api20180501preview"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "webtests"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-insights-azure-com-v1api20200202-component"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20200202.components.insights.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "insights.azure.com"
                ],
                "apiVersions": [
                  "v1api20200202"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "components"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-insights-azure-com-v1api20210501preview-diagnosticsetting"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20210501preview.diagnosticsettings.insights.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "insights.azure.com"
                ],
                "apiVersions": [
                  "v1api20210501preview"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "diagnosticsettings"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-insights-azure-com-v1api20220615-scheduledqueryrule"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20220615.scheduledqueryrules.insights.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "insights.azure.com"
                ],
                "apiVersions": [
                  "v1api20220615"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "scheduledqueryrules"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-insights-azure-com-v1api20220615-webtest"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20220615.webtests.insights.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "insights.azure.com"
                ],
                "apiVersions": [
                  "v1api20220615"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "webtests"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-insights-azure-com-v1api20221001-autoscalesetting"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20221001.autoscalesettings.insights.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "insights.azure.com"
                ],
                "apiVersions": [
                  "v1api20221001"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "autoscalesettings"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-insights-azure-com-v1api20230101-actiongroup"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20230101.actiongroups.insights.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "insights.azure.com"
                ],
                "apiVersions": [
                  "v1api20230101"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "actiongroups"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-insights-azure-com-v1api20240101preview-scheduledqueryrule"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20240101preview.scheduledqueryrules.insights.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "insights.azure.com"
                ],
                "apiVersions": [
                  "v1api20240101preview"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "scheduledqueryrules"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-keyvault-azure-com-v1api20210401preview-vault"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20210401preview.vaults.keyvault.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "keyvault.azure.com"
                ],
                "apiVersions": [
                  "v1api20210401preview"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "vaults"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-keyvault-azure-com-v1api20230701-vault"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20230701.vaults.keyvault.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "keyvault.azure.com"
                ],
                "apiVersions": [
                  "v1api20230701"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "vaults"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-kubernetesconfiguration-azure-com-v1api20230501-extension"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20230501.extensions.kubernetesconfiguration.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "kubernetesconfiguration.azure.com"
                ],
                "apiVersions": [
                  "v1api20230501"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "extensions"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-kubernetesconfiguration-azure-com-v1api20230501-fluxconfiguration"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20230501.fluxconfigurations.kubernetesconfiguration.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "kubernetesconfiguration.azure.com"
                ],
                "apiVersions": [
                  "v1api20230501"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "fluxconfigurations"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-kubernetesconfiguration-azure-com-v1api20241101-extension"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20241101.extensions.kubernetesconfiguration.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "kubernetesconfiguration.azure.com"
                ],
                "apiVersions": [
                  "v1api20241101"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "extensions"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-kubernetesconfiguration-azure-com-v1api20241101-fluxconfiguration"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20241101.fluxconfigurations.kubernetesconfiguration.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "kubernetesconfiguration.azure.com"
                ],
                "apiVersions": [
                  "v1api20241101"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "fluxconfigurations"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-kusto-azure-com-v1api20230815-cluster"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20230815.clusters.kusto.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "kusto.azure.com"
                ],
                "apiVersions": [
                  "v1api20230815"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "clusters"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-kusto-azure-com-v1api20230815-database"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20230815.databases.kusto.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "kusto.azure.com"
                ],
                "apiVersions": [
                  "v1api20230815"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "databases"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-kusto-azure-com-v1api20230815-dataconnection"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20230815.dataconnections.kusto.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "kusto.azure.com"
                ],
                "apiVersions": [
                  "v1api20230815"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "dataconnections"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-machinelearningservices-azure-com-v1api20210701-workspace"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20210701.workspaces.machinelearningservices.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "machinelearningservices.azure.com"
                ],
                "apiVersions": [
                  "v1api20210701"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "workspaces"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-machinelearningservices-azure-com-v1api20210701-workspacescompute"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20210701.workspacescomputes.machinelearningservices.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "machinelearningservices.azure.com"
                ],
                "apiVersions": [
                  "v1api20210701"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "workspacescomputes"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-machinelearningservices-azure-com-v1api20210701-workspacesconnection"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20210701.workspacesconnections.machinelearningservices.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "machinelearningservices.azure.com"
                ],
                "apiVersions": [
                  "v1api20210701"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "workspacesconnections"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-machinelearningservices-azure-com-v1api20240401-registry"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20240401.registries.machinelearningservices.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "machinelearningservices.azure.com"
                ],
                "apiVersions": [
                  "v1api20240401"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "registries"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-machinelearningservices-azure-com-v1api20240401-workspace"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20240401.workspaces.machinelearningservices.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "machinelearningservices.azure.com"
                ],
                "apiVersions": [
                  "v1api20240401"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "workspaces"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-machinelearningservices-azure-com-v1api20240401-workspacescompute"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20240401.workspacescomputes.machinelearningservices.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "machinelearningservices.azure.com"
                ],
                "apiVersions": [
                  "v1api20240401"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "workspacescomputes"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-machinelearningservices-azure-com-v1api20240401-workspacesconnection"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20240401.workspacesconnections.machinelearningservices.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "machinelearningservices.azure.com"
                ],
                "apiVersions": [
                  "v1api20240401"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "workspacesconnections"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-managedidentity-azure-com-v1api20181130-userassignedidentity"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20181130.userassignedidentities.managedidentity.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "managedidentity.azure.com"
                ],
                "apiVersions": [
                  "v1api20181130"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "userassignedidentities"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-managedidentity-azure-com-v1api20220131preview-federatedidentitycredential"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20220131preview.federatedidentitycredentials.managedidentity.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "managedidentity.azure.com"
                ],
                "apiVersions": [
                  "v1api20220131preview"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "federatedidentitycredentials"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-managedidentity-azure-com-v1api20230131-federatedidentitycredential"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20230131.federatedidentitycredentials.managedidentity.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "managedidentity.azure.com"
                ],
                "apiVersions": [
                  "v1api20230131"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "federatedidentitycredentials"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-managedidentity-azure-com-v1api20230131-userassignedidentity"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20230131.userassignedidentities.managedidentity.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "managedidentity.azure.com"
                ],
                "apiVersions": [
                  "v1api20230131"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "userassignedidentities"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-monitor-azure-com-v1api20230403-account"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20230403.accounts.monitor.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "monitor.azure.com"
                ],
                "apiVersions": [
                  "v1api20230403"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "accounts"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-network-frontdoor-azure-com-v1api20220501-webapplicationfirewallpolicy"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20220501.webapplicationfirewallpolicies.network.frontdoor.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "network.frontdoor.azure.com"
                ],
                "apiVersions": [
                  "v1api20220501"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "webapplicationfirewallpolicies"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-network-azure-com-v1api20180501-dnszone"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20180501.dnszones.network.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "network.azure.com"
                ],
                "apiVersions": [
                  "v1api20180501"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "dnszones"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-network-azure-com-v1api20180501-dnszonesaaaarecord"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20180501.dnszonesaaaarecords.network.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "network.azure.com"
                ],
                "apiVersions": [
                  "v1api20180501"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "dnszonesaaaarecords"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-network-azure-com-v1api20180501-dnszonesarecord"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20180501.dnszonesarecords.network.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "network.azure.com"
                ],
                "apiVersions": [
                  "v1api20180501"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "dnszonesarecords"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-network-azure-com-v1api20180501-dnszonescaarecord"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20180501.dnszonescaarecords.network.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "network.azure.com"
                ],
                "apiVersions": [
                  "v1api20180501"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "dnszonescaarecords"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-network-azure-com-v1api20180501-dnszonescnamerecord"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20180501.dnszonescnamerecords.network.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "network.azure.com"
                ],
                "apiVersions": [
                  "v1api20180501"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "dnszonescnamerecords"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-network-azure-com-v1api20180501-dnszonesmxrecord"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20180501.dnszonesmxrecords.network.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "network.azure.com"
                ],
                "apiVersions": [
                  "v1api20180501"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "dnszonesmxrecords"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-network-azure-com-v1api20180501-dnszonesnsrecord"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20180501.dnszonesnsrecords.network.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "network.azure.com"
                ],
                "apiVersions": [
                  "v1api20180501"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "dnszonesnsrecords"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-network-azure-com-v1api20180501-dnszonesptrrecord"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20180501.dnszonesptrrecords.network.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "network.azure.com"
                ],
                "apiVersions": [
                  "v1api20180501"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "dnszonesptrrecords"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-network-azure-com-v1api20180501-dnszonessrvrecord"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20180501.dnszonessrvrecords.network.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "network.azure.com"
                ],
                "apiVersions": [
                  "v1api20180501"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "dnszonessrvrecords"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-network-azure-com-v1api20180501-dnszonestxtrecord"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20180501.dnszonestxtrecords.network.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "network.azure.com"
                ],
                "apiVersions": [
                  "v1api20180501"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "dnszonestxtrecords"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-network-azure-com-v1api20180901-privatednszone"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20180901.privatednszones.network.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "network.azure.com"
                ],
                "apiVersions": [
                  "v1api20180901"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "privatednszones"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-network-azure-com-v1api20200601-privatednszonesaaaarecord"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20200601.privatednszonesaaaarecords.network.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "network.azure.com"
                ],
                "apiVersions": [
                  "v1api20200601"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "privatednszonesaaaarecords"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-network-azure-com-v1api20200601-privatednszonesarecord"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20200601.privatednszonesarecords.network.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "network.azure.com"
                ],
                "apiVersions": [
                  "v1api20200601"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "privatednszonesarecords"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-network-azure-com-v1api20200601-privatednszonescnamerecord"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20200601.privatednszonescnamerecords.network.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "network.azure.com"
                ],
                "apiVersions": [
                  "v1api20200601"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "privatednszonescnamerecords"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-network-azure-com-v1api20200601-privatednszonesmxrecord"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20200601.privatednszonesmxrecords.network.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "network.azure.com"
                ],
                "apiVersions": [
                  "v1api20200601"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "privatednszonesmxrecords"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-network-azure-com-v1api20200601-privatednszonesptrrecord"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20200601.privatednszonesptrrecords.network.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "network.azure.com"
                ],
                "apiVersions": [
                  "v1api20200601"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "privatednszonesptrrecords"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-network-azure-com-v1api20200601-privatednszonessrvrecord"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20200601.privatednszonessrvrecords.network.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "network.azure.com"
                ],
                "apiVersions": [
                  "v1api20200601"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "privatednszonessrvrecords"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-network-azure-com-v1api20200601-privatednszonestxtrecord"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20200601.privatednszonestxtrecords.network.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "network.azure.com"
                ],
                "apiVersions": [
                  "v1api20200601"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "privatednszonestxtrecords"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-network-azure-com-v1api20200601-privatednszonesvirtualnetworklink"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20200601.privatednszonesvirtualnetworklinks.network.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "network.azure.com"
                ],
                "apiVersions": [
                  "v1api20200601"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "privatednszonesvirtualnetworklinks"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-network-azure-com-v1api20201101-loadbalancer"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20201101.loadbalancers.network.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "network.azure.com"
                ],
                "apiVersions": [
                  "v1api20201101"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "loadbalancers"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-network-azure-com-v1api20201101-loadbalancersinboundnatrule"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20201101.loadbalancersinboundnatrules.network.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "network.azure.com"
                ],
                "apiVersions": [
                  "v1api20201101"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "loadbalancersinboundnatrules"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-network-azure-com-v1api20201101-networkinterface"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20201101.networkinterfaces.network.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "network.azure.com"
                ],
                "apiVersions": [
                  "v1api20201101"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "networkinterfaces"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-network-azure-com-v1api20201101-networksecuritygroup"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20201101.networksecuritygroups.network.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "network.azure.com"
                ],
                "apiVersions": [
                  "v1api20201101"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "networksecuritygroups"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-network-azure-com-v1api20201101-networksecuritygroupssecurityrule"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20201101.networksecuritygroupssecurityrules.network.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "network.azure.com"
                ],
                "apiVersions": [
                  "v1api20201101"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "networksecuritygroupssecurityrules"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-network-azure-com-v1api20201101-publicipaddress"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20201101.publicipaddresses.network.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "network.azure.com"
                ],
                "apiVersions": [
                  "v1api20201101"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "publicipaddresses"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-network-azure-com-v1api20201101-routetable"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20201101.routetables.network.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "network.azure.com"
                ],
                "apiVersions": [
                  "v1api20201101"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "routetables"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-network-azure-com-v1api20201101-routetablesroute"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20201101.routetablesroutes.network.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "network.azure.com"
                ],
                "apiVersions": [
                  "v1api20201101"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "routetablesroutes"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-network-azure-com-v1api20201101-virtualnetworkgateway"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20201101.virtualnetworkgateways.network.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "network.azure.com"
                ],
                "apiVersions": [
                  "v1api20201101"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "virtualnetworkgateways"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-network-azure-com-v1api20201101-virtualnetwork"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20201101.virtualnetworks.network.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "network.azure.com"
                ],
                "apiVersions": [
                  "v1api20201101"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "virtualnetworks"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-network-azure-com-v1api20201101-virtualnetworkssubnet"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20201101.virtualnetworkssubnets.network.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "network.azure.com"
                ],
                "apiVersions": [
                  "v1api20201101"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "virtualnetworkssubnets"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-network-azure-com-v1api20201101-virtualnetworksvirtualnetworkpeering"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20201101.virtualnetworksvirtualnetworkpeerings.network.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "network.azure.com"
                ],
                "apiVersions": [
                  "v1api20201101"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "virtualnetworksvirtualnetworkpeerings"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-network-azure-com-v1api20220401-trafficmanagerprofile"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20220401.trafficmanagerprofiles.network.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "network.azure.com"
                ],
                "apiVersions": [
                  "v1api20220401"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "trafficmanagerprofiles"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-network-azure-com-v1api20220401-trafficmanagerprofilesazureendpoint"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20220401.trafficmanagerprofilesazureendpoints.network.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "network.azure.com"
                ],
                "apiVersions": [
                  "v1api20220401"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "trafficmanagerprofilesazureendpoints"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-network-azure-com-v1api20220401-trafficmanagerprofilesexternalendpoint"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20220401.trafficmanagerprofilesexternalendpoints.network.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "network.azure.com"
                ],
                "apiVersions": [
                  "v1api20220401"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "trafficmanagerprofilesexternalendpoints"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-network-azure-com-v1api20220401-trafficmanagerprofilesnestedendpoint"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20220401.trafficmanagerprofilesnestedendpoints.network.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "network.azure.com"
                ],
                "apiVersions": [
                  "v1api20220401"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "trafficmanagerprofilesnestedendpoints"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-network-azure-com-v1api20220701-applicationgateway"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20220701.applicationgateways.network.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "network.azure.com"
                ],
                "apiVersions": [
                  "v1api20220701"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "applicationgateways"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-network-azure-com-v1api20220701-bastionhost"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20220701.bastionhosts.network.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "network.azure.com"
                ],
                "apiVersions": [
                  "v1api20220701"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "bastionhosts"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-network-azure-com-v1api20220701-dnsforwardingruleset"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20220701.dnsforwardingrulesets.network.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "network.azure.com"
                ],
                "apiVersions": [
                  "v1api20220701"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "dnsforwardingrulesets"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-network-azure-com-v1api20220701-dnsforwardingrulesetsforwardingrule"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20220701.dnsforwardingrulesetsforwardingrules.network.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "network.azure.com"
                ],
                "apiVersions": [
                  "v1api20220701"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "dnsforwardingrulesetsforwardingrules"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-network-azure-com-v1api20220701-dnsforwardingrulesetsvirtualnetworklink"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20220701.dnsforwardingrulesetsvirtualnetworklinks.network.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "network.azure.com"
                ],
                "apiVersions": [
                  "v1api20220701"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "dnsforwardingrulesetsvirtualnetworklinks"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-network-azure-com-v1api20220701-dnsresolver"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20220701.dnsresolvers.network.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "network.azure.com"
                ],
                "apiVersions": [
                  "v1api20220701"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "dnsresolvers"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-network-azure-com-v1api20220701-dnsresolversinboundendpoint"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20220701.dnsresolversinboundendpoints.network.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "network.azure.com"
                ],
                "apiVersions": [
                  "v1api20220701"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "dnsresolversinboundendpoints"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-network-azure-com-v1api20220701-dnsresolversoutboundendpoint"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20220701.dnsresolversoutboundendpoints.network.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "network.azure.com"
                ],
                "apiVersions": [
                  "v1api20220701"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "dnsresolversoutboundendpoints"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-network-azure-com-v1api20220701-natgateway"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20220701.natgateways.network.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "network.azure.com"
                ],
                "apiVersions": [
                  "v1api20220701"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "natgateways"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-network-azure-com-v1api20220701-privateendpoint"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20220701.privateendpoints.network.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "network.azure.com"
                ],
                "apiVersions": [
                  "v1api20220701"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "privateendpoints"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-network-azure-com-v1api20220701-privateendpointsprivatednszonegroup"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20220701.privateendpointsprivatednszonegroups.network.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "network.azure.com"
                ],
                "apiVersions": [
                  "v1api20220701"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "privateendpointsprivatednszonegroups"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-network-azure-com-v1api20220701-privatelinkservice"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20220701.privatelinkservices.network.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "network.azure.com"
                ],
                "apiVersions": [
                  "v1api20220701"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "privatelinkservices"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-network-azure-com-v1api20220701-publicipprefix"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20220701.publicipprefixes.network.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "network.azure.com"
                ],
                "apiVersions": [
                  "v1api20220701"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "publicipprefixes"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-network-azure-com-v1api20240101-applicationsecuritygroup"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20240101.applicationsecuritygroups.network.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "network.azure.com"
                ],
                "apiVersions": [
                  "v1api20240101"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "applicationsecuritygroups"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-network-azure-com-v1api20240101-webapplicationfirewallpolicy"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20240101.webapplicationfirewallpolicies.network.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "network.azure.com"
                ],
                "apiVersions": [
                  "v1api20240101"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "webapplicationfirewallpolicies"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-network-azure-com-v1api20240301-bastionhost"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20240301.bastionhosts.network.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "network.azure.com"
                ],
                "apiVersions": [
                  "v1api20240301"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "bastionhosts"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-network-azure-com-v1api20240301-loadbalancer"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20240301.loadbalancers.network.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "network.azure.com"
                ],
                "apiVersions": [
                  "v1api20240301"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "loadbalancers"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-network-azure-com-v1api20240301-loadbalancersinboundnatrule"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20240301.loadbalancersinboundnatrules.network.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "network.azure.com"
                ],
                "apiVersions": [
                  "v1api20240301"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "loadbalancersinboundnatrules"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-network-azure-com-v1api20240301-natgateway"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20240301.natgateways.network.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "network.azure.com"
                ],
                "apiVersions": [
                  "v1api20240301"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "natgateways"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-network-azure-com-v1api20240301-networkinterface"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20240301.networkinterfaces.network.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "network.azure.com"
                ],
                "apiVersions": [
                  "v1api20240301"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "networkinterfaces"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-network-azure-com-v1api20240301-networksecuritygroup"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20240301.networksecuritygroups.network.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "network.azure.com"
                ],
                "apiVersions": [
                  "v1api20240301"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "networksecuritygroups"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-network-azure-com-v1api20240301-networksecuritygroupssecurityrule"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20240301.networksecuritygroupssecurityrules.network.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "network.azure.com"
                ],
                "apiVersions": [
                  "v1api20240301"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "networksecuritygroupssecurityrules"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-network-azure-com-v1api20240301-privateendpoint"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20240301.privateendpoints.network.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "network.azure.com"
                ],
                "apiVersions": [
                  "v1api20240301"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "privateendpoints"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-network-azure-com-v1api20240301-privateendpointsprivatednszonegroup"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20240301.privateendpointsprivatednszonegroups.network.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "network.azure.com"
                ],
                "apiVersions": [
                  "v1api20240301"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "privateendpointsprivatednszonegroups"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-network-azure-com-v1api20240301-privatelinkservice"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20240301.privatelinkservices.network.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "network.azure.com"
                ],
                "apiVersions": [
                  "v1api20240301"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "privatelinkservices"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-network-azure-com-v1api20240301-publicipaddress"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20240301.publicipaddresses.network.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "network.azure.com"
                ],
                "apiVersions": [
                  "v1api20240301"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "publicipaddresses"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-network-azure-com-v1api20240301-publicipprefix"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20240301.publicipprefixes.network.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "network.azure.com"
                ],
                "apiVersions": [
                  "v1api20240301"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "publicipprefixes"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-network-azure-com-v1api20240301-routetable"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20240301.routetables.network.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "network.azure.com"
                ],
                "apiVersions": [
                  "v1api20240301"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "routetables"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-network-azure-com-v1api20240301-routetablesroute"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20240301.routetablesroutes.network.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "network.azure.com"
                ],
                "apiVersions": [
                  "v1api20240301"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "routetablesroutes"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-network-azure-com-v1api20240301-virtualnetworkgateway"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20240301.virtualnetworkgateways.network.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "network.azure.com"
                ],
                "apiVersions": [
                  "v1api20240301"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "virtualnetworkgateways"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-network-azure-com-v1api20240301-virtualnetwork"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20240301.virtualnetworks.network.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "network.azure.com"
                ],
                "apiVersions": [
                  "v1api20240301"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "virtualnetworks"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-network-azure-com-v1api20240301-virtualnetworkssubnet"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20240301.virtualnetworkssubnets.network.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "network.azure.com"
                ],
                "apiVersions": [
                  "v1api20240301"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "virtualnetworkssubnets"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-network-azure-com-v1api20240301-virtualnetworksvirtualnetworkpeering"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20240301.virtualnetworksvirtualnetworkpeerings.network.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "network.azure.com"
                ],
                "apiVersions": [
                  "v1api20240301"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "virtualnetworksvirtualnetworkpeerings"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-network-azure-com-v1api20240601-privatednszone"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20240601.privatednszones.network.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "network.azure.com"
                ],
                "apiVersions": [
                  "v1api20240601"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "privatednszones"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-network-azure-com-v1api20240601-privatednszonesaaaarecord"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20240601.privatednszonesaaaarecords.network.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "network.azure.com"
                ],
                "apiVersions": [
                  "v1api20240601"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "privatednszonesaaaarecords"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-network-azure-com-v1api20240601-privatednszonesarecord"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20240601.privatednszonesarecords.network.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "network.azure.com"
                ],
                "apiVersions": [
                  "v1api20240601"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "privatednszonesarecords"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-network-azure-com-v1api20240601-privatednszonescnamerecord"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20240601.privatednszonescnamerecords.network.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "network.azure.com"
                ],
                "apiVersions": [
                  "v1api20240601"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "privatednszonescnamerecords"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-network-azure-com-v1api20240601-privatednszonesmxrecord"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20240601.privatednszonesmxrecords.network.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "network.azure.com"
                ],
                "apiVersions": [
                  "v1api20240601"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "privatednszonesmxrecords"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-network-azure-com-v1api20240601-privatednszonesptrrecord"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20240601.privatednszonesptrrecords.network.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "network.azure.com"
                ],
                "apiVersions": [
                  "v1api20240601"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "privatednszonesptrrecords"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-network-azure-com-v1api20240601-privatednszonessrvrecord"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20240601.privatednszonessrvrecords.network.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "network.azure.com"
                ],
                "apiVersions": [
                  "v1api20240601"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "privatednszonessrvrecords"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-network-azure-com-v1api20240601-privatednszonestxtrecord"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20240601.privatednszonestxtrecords.network.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "network.azure.com"
                ],
                "apiVersions": [
                  "v1api20240601"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "privatednszonestxtrecords"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-network-azure-com-v1api20240601-privatednszonesvirtualnetworklink"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20240601.privatednszonesvirtualnetworklinks.network.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "network.azure.com"
                ],
                "apiVersions": [
                  "v1api20240601"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "privatednszonesvirtualnetworklinks"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-notificationhubs-azure-com-v1api20230901-namespace"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20230901.namespaces.notificationhubs.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "notificationhubs.azure.com"
                ],
                "apiVersions": [
                  "v1api20230901"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "namespaces"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-notificationhubs-azure-com-v1api20230901-namespacesauthorizationrule"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20230901.namespacesauthorizationrules.notificationhubs.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "notificationhubs.azure.com"
                ],
                "apiVersions": [
                  "v1api20230901"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "namespacesauthorizationrules"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-notificationhubs-azure-com-v1api20230901-notificationhub"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20230901.notificationhubs.notificationhubs.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "notificationhubs.azure.com"
                ],
                "apiVersions": [
                  "v1api20230901"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "notificationhubs"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-notificationhubs-azure-com-v1api20230901-notificationhubsauthorizationrule"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20230901.notificationhubsauthorizationrules.notificationhubs.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "notificationhubs.azure.com"
                ],
                "apiVersions": [
                  "v1api20230901"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "notificationhubsauthorizationrules"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-operationalinsights-azure-com-v1api20210601-workspace"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20210601.workspaces.operationalinsights.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "operationalinsights.azure.com"
                ],
                "apiVersions": [
                  "v1api20210601"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "workspaces"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-redhatopenshift-azure-com-v1api20231122-openshiftcluster"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20231122.openshiftclusters.redhatopenshift.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "redhatopenshift.azure.com"
                ],
                "apiVersions": [
                  "v1api20231122"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "openshiftclusters"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-resources-azure-com-v1api20200601-resourcegroup"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20200601.resourcegroups.resources.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "resources.azure.com"
                ],
                "apiVersions": [
                  "v1api20200601"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "resourcegroups"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-search-azure-com-v1api20220901-searchservice"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20220901.searchservices.search.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "search.azure.com"
                ],
                "apiVersions": [
                  "v1api20220901"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "searchservices"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-servicebus-azure-com-v1api20210101preview-namespace"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20210101preview.namespaces.servicebus.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "servicebus.azure.com"
                ],
                "apiVersions": [
                  "v1api20210101preview"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "namespaces"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-servicebus-azure-com-v1api20210101preview-namespacesauthorizationrule"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20210101preview.namespacesauthorizationrules.servicebus.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "servicebus.azure.com"
                ],
                "apiVersions": [
                  "v1api20210101preview"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "namespacesauthorizationrules"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-servicebus-azure-com-v1api20210101preview-namespacesqueue"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20210101preview.namespacesqueues.servicebus.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "servicebus.azure.com"
                ],
                "apiVersions": [
                  "v1api20210101preview"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "namespacesqueues"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-servicebus-azure-com-v1api20210101preview-namespacestopic"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20210101preview.namespacestopics.servicebus.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "servicebus.azure.com"
                ],
                "apiVersions": [
                  "v1api20210101preview"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "namespacestopics"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-servicebus-azure-com-v1api20210101preview-namespacestopicssubscription"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20210101preview.namespacestopicssubscriptions.servicebus.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "servicebus.azure.com"
                ],
                "apiVersions": [
                  "v1api20210101preview"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "namespacestopicssubscriptions"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-servicebus-azure-com-v1api20210101preview-namespacestopicssubscriptionsrule"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20210101preview.namespacestopicssubscriptionsrules.servicebus.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "servicebus.azure.com"
                ],
                "apiVersions": [
                  "v1api20210101preview"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "namespacestopicssubscriptionsrules"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-servicebus-azure-com-v1api20211101-namespace"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20211101.namespaces.servicebus.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "servicebus.azure.com"
                ],
                "apiVersions": [
                  "v1api20211101"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "namespaces"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-servicebus-azure-com-v1api20211101-namespacesauthorizationrule"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20211101.namespacesauthorizationrules.servicebus.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "servicebus.azure.com"
                ],
                "apiVersions": [
                  "v1api20211101"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "namespacesauthorizationrules"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-servicebus-azure-com-v1api20211101-namespacesqueue"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20211101.namespacesqueues.servicebus.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "servicebus.azure.com"
                ],
                "apiVersions": [
                  "v1api20211101"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "namespacesqueues"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-servicebus-azure-com-v1api20211101-namespacestopic"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20211101.namespacestopics.servicebus.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "servicebus.azure.com"
                ],
                "apiVersions": [
                  "v1api20211101"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "namespacestopics"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-servicebus-azure-com-v1api20211101-namespacestopicssubscription"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20211101.namespacestopicssubscriptions.servicebus.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "servicebus.azure.com"
                ],
                "apiVersions": [
                  "v1api20211101"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "namespacestopicssubscriptions"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-servicebus-azure-com-v1api20211101-namespacestopicssubscriptionsrule"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20211101.namespacestopicssubscriptionsrules.servicebus.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "servicebus.azure.com"
                ],
                "apiVersions": [
                  "v1api20211101"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "namespacestopicssubscriptionsrules"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-servicebus-azure-com-v1api20221001preview-namespace"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20221001preview.namespaces.servicebus.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "servicebus.azure.com"
                ],
                "apiVersions": [
                  "v1api20221001preview"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "namespaces"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-servicebus-azure-com-v1api20221001preview-namespacesauthorizationrule"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20221001preview.namespacesauthorizationrules.servicebus.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "servicebus.azure.com"
                ],
                "apiVersions": [
                  "v1api20221001preview"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "namespacesauthorizationrules"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-servicebus-azure-com-v1api20221001preview-namespacesqueue"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20221001preview.namespacesqueues.servicebus.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "servicebus.azure.com"
                ],
                "apiVersions": [
                  "v1api20221001preview"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "namespacesqueues"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-servicebus-azure-com-v1api20221001preview-namespacestopic"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20221001preview.namespacestopics.servicebus.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "servicebus.azure.com"
                ],
                "apiVersions": [
                  "v1api20221001preview"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "namespacestopics"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-servicebus-azure-com-v1api20221001preview-namespacestopicssubscription"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20221001preview.namespacestopicssubscriptions.servicebus.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "servicebus.azure.com"
                ],
                "apiVersions": [
                  "v1api20221001preview"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "namespacestopicssubscriptions"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-servicebus-azure-com-v1api20221001preview-namespacestopicssubscriptionsrule"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20221001preview.namespacestopicssubscriptionsrules.servicebus.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "servicebus.azure.com"
                ],
                "apiVersions": [
                  "v1api20221001preview"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "namespacestopicssubscriptionsrules"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-servicebus-azure-com-v1api20240101-namespace"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20240101.namespaces.servicebus.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "servicebus.azure.com"
                ],
                "apiVersions": [
                  "v1api20240101"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "namespaces"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-servicebus-azure-com-v1api20240101-namespacesauthorizationrule"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20240101.namespacesauthorizationrules.servicebus.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "servicebus.azure.com"
                ],
                "apiVersions": [
                  "v1api20240101"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "namespacesauthorizationrules"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-servicebus-azure-com-v1api20240101-namespacesqueue"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20240101.namespacesqueues.servicebus.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "servicebus.azure.com"
                ],
                "apiVersions": [
                  "v1api20240101"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "namespacesqueues"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-servicebus-azure-com-v1api20240101-namespacestopic"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20240101.namespacestopics.servicebus.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "servicebus.azure.com"
                ],
                "apiVersions": [
                  "v1api20240101"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "namespacestopics"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-servicebus-azure-com-v1api20240101-namespacestopicssubscription"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20240101.namespacestopicssubscriptions.servicebus.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "servicebus.azure.com"
                ],
                "apiVersions": [
                  "v1api20240101"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "namespacestopicssubscriptions"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-servicebus-azure-com-v1api20240101-namespacestopicssubscriptionsrule"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20240101.namespacestopicssubscriptionsrules.servicebus.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "servicebus.azure.com"
                ],
                "apiVersions": [
                  "v1api20240101"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "namespacestopicssubscriptionsrules"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-servicebus-azure-com-v1api20240101-topicauthorizationrule"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20240101.topicauthorizationrules.servicebus.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "servicebus.azure.com"
                ],
                "apiVersions": [
                  "v1api20240101"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "topicauthorizationrules"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-signalrservice-azure-com-v1api20211001-signalr"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20211001.signalrs.signalrservice.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "signalrservice.azure.com"
                ],
                "apiVersions": [
                  "v1api20211001"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "signalrs"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-signalrservice-azure-com-v1api20240301-customcertificate"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20240301.customcertificates.signalrservice.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "signalrservice.azure.com"
                ],
                "apiVersions": [
                  "v1api20240301"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "customcertificates"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-signalrservice-azure-com-v1api20240301-customdomain"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20240301.customdomains.signalrservice.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "signalrservice.azure.com"
                ],
                "apiVersions": [
                  "v1api20240301"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "customdomains"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-signalrservice-azure-com-v1api20240301-replica"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20240301.replicas.signalrservice.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "signalrservice.azure.com"
                ],
                "apiVersions": [
                  "v1api20240301"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "replicas"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-signalrservice-azure-com-v1api20240301-signalr"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20240301.signalrs.signalrservice.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "signalrservice.azure.com"
                ],
                "apiVersions": [
                  "v1api20240301"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "signalrs"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-sql-azure-com-v1-user"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1.users.sql.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "sql.azure.com"
                ],
                "apiVersions": [
                  "v1"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "users"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-sql-azure-com-v1api20211101-server"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20211101.servers.sql.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "sql.azure.com"
                ],
                "apiVersions": [
                  "v1api20211101"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "servers"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-sql-azure-com-v1api20211101-serversadministrator"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20211101.serversadministrators.sql.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "sql.azure.com"
                ],
                "apiVersions": [
                  "v1api20211101"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "serversadministrators"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-sql-azure-com-v1api20211101-serversadvancedthreatprotectionsetting"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20211101.serversadvancedthreatprotectionsettings.sql.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "sql.azure.com"
                ],
                "apiVersions": [
                  "v1api20211101"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "serversadvancedthreatprotectionsettings"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-sql-azure-com-v1api20211101-serversauditingsetting"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20211101.serversauditingsettings.sql.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "sql.azure.com"
                ],
                "apiVersions": [
                  "v1api20211101"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "serversauditingsettings"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-sql-azure-com-v1api20211101-serversazureadonlyauthentication"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20211101.serversazureadonlyauthentications.sql.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "sql.azure.com"
                ],
                "apiVersions": [
                  "v1api20211101"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "serversazureadonlyauthentications"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-sql-azure-com-v1api20211101-serversconnectionpolicy"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20211101.serversconnectionpolicies.sql.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "sql.azure.com"
                ],
                "apiVersions": [
                  "v1api20211101"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "serversconnectionpolicies"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-sql-azure-com-v1api20211101-serversdatabase"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20211101.serversdatabases.sql.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "sql.azure.com"
                ],
                "apiVersions": [
                  "v1api20211101"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "serversdatabases"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-sql-azure-com-v1api20211101-serversdatabasesadvancedthreatprotectionsetting"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20211101.serversdatabasesadvancedthreatprotectionsettings.sql.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "sql.azure.com"
                ],
                "apiVersions": [
                  "v1api20211101"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "serversdatabasesadvancedthreatprotectionsettings"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-sql-azure-com-v1api20211101-serversdatabasesauditingsetting"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20211101.serversdatabasesauditingsettings.sql.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "sql.azure.com"
                ],
                "apiVersions": [
                  "v1api20211101"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "serversdatabasesauditingsettings"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-sql-azure-com-v1api20211101-serversdatabasesbackuplongtermretentionpolicy"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20211101.serversdatabasesbackuplongtermretentionpolicies.sql.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "sql.azure.com"
                ],
                "apiVersions": [
                  "v1api20211101"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "serversdatabasesbackuplongtermretentionpolicies"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-sql-azure-com-v1api20211101-serversdatabasesbackupshorttermretentionpolicy"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20211101.serversdatabasesbackupshorttermretentionpolicies.sql.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "sql.azure.com"
                ],
                "apiVersions": [
                  "v1api20211101"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "serversdatabasesbackupshorttermretentionpolicies"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-sql-azure-com-v1api20211101-serversdatabasessecurityalertpolicy"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20211101.serversdatabasessecurityalertpolicies.sql.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "sql.azure.com"
                ],
                "apiVersions": [
                  "v1api20211101"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "serversdatabasessecurityalertpolicies"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-sql-azure-com-v1api20211101-serversdatabasestransparentdataencryption"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20211101.serversdatabasestransparentdataencryptions.sql.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "sql.azure.com"
                ],
                "apiVersions": [
                  "v1api20211101"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "serversdatabasestransparentdataencryptions"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-sql-azure-com-v1api20211101-serversdatabasesvulnerabilityassessment"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20211101.serversdatabasesvulnerabilityassessments.sql.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "sql.azure.com"
                ],
                "apiVersions": [
                  "v1api20211101"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "serversdatabasesvulnerabilityassessments"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-sql-azure-com-v1api20211101-serverselasticpool"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20211101.serverselasticpools.sql.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "sql.azure.com"
                ],
                "apiVersions": [
                  "v1api20211101"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "serverselasticpools"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-sql-azure-com-v1api20211101-serversfailovergroup"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20211101.serversfailovergroups.sql.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "sql.azure.com"
                ],
                "apiVersions": [
                  "v1api20211101"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "serversfailovergroups"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-sql-azure-com-v1api20211101-serversfirewallrule"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20211101.serversfirewallrules.sql.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "sql.azure.com"
                ],
                "apiVersions": [
                  "v1api20211101"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "serversfirewallrules"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-sql-azure-com-v1api20211101-serversipv6firewallrule"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20211101.serversipv6firewallrules.sql.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "sql.azure.com"
                ],
                "apiVersions": [
                  "v1api20211101"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "serversipv6firewallrules"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-sql-azure-com-v1api20211101-serversoutboundfirewallrule"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20211101.serversoutboundfirewallrules.sql.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "sql.azure.com"
                ],
                "apiVersions": [
                  "v1api20211101"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "serversoutboundfirewallrules"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-sql-azure-com-v1api20211101-serverssecurityalertpolicy"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20211101.serverssecurityalertpolicies.sql.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "sql.azure.com"
                ],
                "apiVersions": [
                  "v1api20211101"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "serverssecurityalertpolicies"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-sql-azure-com-v1api20211101-serversvirtualnetworkrule"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20211101.serversvirtualnetworkrules.sql.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "sql.azure.com"
                ],
                "apiVersions": [
                  "v1api20211101"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "serversvirtualnetworkrules"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-sql-azure-com-v1api20211101-serversvulnerabilityassessment"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20211101.serversvulnerabilityassessments.sql.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "sql.azure.com"
                ],
                "apiVersions": [
                  "v1api20211101"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "serversvulnerabilityassessments"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-storage-azure-com-v1api20210401-storageaccount"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20210401.storageaccounts.storage.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "storage.azure.com"
                ],
                "apiVersions": [
                  "v1api20210401"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "storageaccounts"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-storage-azure-com-v1api20210401-storageaccountsblobservice"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20210401.storageaccountsblobservices.storage.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "storage.azure.com"
                ],
                "apiVersions": [
                  "v1api20210401"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "storageaccountsblobservices"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-storage-azure-com-v1api20210401-storageaccountsblobservicescontainer"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20210401.storageaccountsblobservicescontainers.storage.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "storage.azure.com"
                ],
                "apiVersions": [
                  "v1api20210401"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "storageaccountsblobservicescontainers"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-storage-azure-com-v1api20210401-storageaccountsmanagementpolicy"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20210401.storageaccountsmanagementpolicies.storage.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "storage.azure.com"
                ],
                "apiVersions": [
                  "v1api20210401"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "storageaccountsmanagementpolicies"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-storage-azure-com-v1api20210401-storageaccountsqueueservice"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20210401.storageaccountsqueueservices.storage.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "storage.azure.com"
                ],
                "apiVersions": [
                  "v1api20210401"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "storageaccountsqueueservices"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-storage-azure-com-v1api20210401-storageaccountsqueueservicesqueue"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20210401.storageaccountsqueueservicesqueues.storage.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "storage.azure.com"
                ],
                "apiVersions": [
                  "v1api20210401"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "storageaccountsqueueservicesqueues"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-storage-azure-com-v1api20220901-storageaccount"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20220901.storageaccounts.storage.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "storage.azure.com"
                ],
                "apiVersions": [
                  "v1api20220901"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "storageaccounts"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-storage-azure-com-v1api20220901-storageaccountsblobservice"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20220901.storageaccountsblobservices.storage.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "storage.azure.com"
                ],
                "apiVersions": [
                  "v1api20220901"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "storageaccountsblobservices"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-storage-azure-com-v1api20220901-storageaccountsblobservicescontainer"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20220901.storageaccountsblobservicescontainers.storage.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "storage.azure.com"
                ],
                "apiVersions": [
                  "v1api20220901"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "storageaccountsblobservicescontainers"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-storage-azure-com-v1api20220901-storageaccountsfileservice"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20220901.storageaccountsfileservices.storage.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "storage.azure.com"
                ],
                "apiVersions": [
                  "v1api20220901"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "storageaccountsfileservices"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-storage-azure-com-v1api20220901-storageaccountsfileservicesshare"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20220901.storageaccountsfileservicesshares.storage.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "storage.azure.com"
                ],
                "apiVersions": [
                  "v1api20220901"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "storageaccountsfileservicesshares"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-storage-azure-com-v1api20220901-storageaccountsmanagementpolicy"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20220901.storageaccountsmanagementpolicies.storage.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "storage.azure.com"
                ],
                "apiVersions": [
                  "v1api20220901"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "storageaccountsmanagementpolicies"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-storage-azure-com-v1api20220901-storageaccountsqueueservice"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20220901.storageaccountsqueueservices.storage.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "storage.azure.com"
                ],
                "apiVersions": [
                  "v1api20220901"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "storageaccountsqueueservices"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-storage-azure-com-v1api20220901-storageaccountsqueueservicesqueue"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20220901.storageaccountsqueueservicesqueues.storage.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "storage.azure.com"
                ],
                "apiVersions": [
                  "v1api20220901"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "storageaccountsqueueservicesqueues"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-storage-azure-com-v1api20220901-storageaccountstableservice"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20220901.storageaccountstableservices.storage.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "storage.azure.com"
                ],
                "apiVersions": [
                  "v1api20220901"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "storageaccountstableservices"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-storage-azure-com-v1api20220901-storageaccountstableservicestable"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20220901.storageaccountstableservicestables.storage.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "storage.azure.com"
                ],
                "apiVersions": [
                  "v1api20220901"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "storageaccountstableservicestables"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-storage-azure-com-v1api20230101-storageaccount"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20230101.storageaccounts.storage.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "storage.azure.com"
                ],
                "apiVersions": [
                  "v1api20230101"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "storageaccounts"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-storage-azure-com-v1api20230101-storageaccountsblobservice"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20230101.storageaccountsblobservices.storage.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "storage.azure.com"
                ],
                "apiVersions": [
                  "v1api20230101"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "storageaccountsblobservices"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-storage-azure-com-v1api20230101-storageaccountsblobservicescontainer"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20230101.storageaccountsblobservicescontainers.storage.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "storage.azure.com"
                ],
                "apiVersions": [
                  "v1api20230101"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "storageaccountsblobservicescontainers"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-storage-azure-com-v1api20230101-storageaccountsfileservice"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20230101.storageaccountsfileservices.storage.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "storage.azure.com"
                ],
                "apiVersions": [
                  "v1api20230101"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "storageaccountsfileservices"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-storage-azure-com-v1api20230101-storageaccountsfileservicesshare"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20230101.storageaccountsfileservicesshares.storage.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "storage.azure.com"
                ],
                "apiVersions": [
                  "v1api20230101"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "storageaccountsfileservicesshares"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-storage-azure-com-v1api20230101-storageaccountsmanagementpolicy"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20230101.storageaccountsmanagementpolicies.storage.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "storage.azure.com"
                ],
                "apiVersions": [
                  "v1api20230101"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "storageaccountsmanagementpolicies"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-storage-azure-com-v1api20230101-storageaccountsqueueservice"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20230101.storageaccountsqueueservices.storage.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "storage.azure.com"
                ],
                "apiVersions": [
                  "v1api20230101"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "storageaccountsqueueservices"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-storage-azure-com-v1api20230101-storageaccountsqueueservicesqueue"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20230101.storageaccountsqueueservicesqueues.storage.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "storage.azure.com"
                ],
                "apiVersions": [
                  "v1api20230101"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "storageaccountsqueueservicesqueues"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-storage-azure-com-v1api20230101-storageaccountstableservice"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20230101.storageaccountstableservices.storage.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "storage.azure.com"
                ],
                "apiVersions": [
                  "v1api20230101"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "storageaccountstableservices"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-storage-azure-com-v1api20230101-storageaccountstableservicestable"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20230101.storageaccountstableservicestables.storage.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "storage.azure.com"
                ],
                "apiVersions": [
                  "v1api20230101"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "storageaccountstableservicestables"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-subscription-azure-com-v1api20211001-alias"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20211001.aliases.subscription.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "subscription.azure.com"
                ],
                "apiVersions": [
                  "v1api20211001"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "aliases"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-synapse-azure-com-v1api20210601-workspace"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20210601.workspaces.synapse.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "synapse.azure.com"
                ],
                "apiVersions": [
                  "v1api20210601"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "workspaces"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-synapse-azure-com-v1api20210601-workspacesbigdatapool"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20210601.workspacesbigdatapools.synapse.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "synapse.azure.com"
                ],
                "apiVersions": [
                  "v1api20210601"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "workspacesbigdatapools"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-web-azure-com-v1api20220301-serverfarm"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20220301.serverfarms.web.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "web.azure.com"
                ],
                "apiVersions": [
                  "v1api20220301"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "serverfarms"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-web-azure-com-v1api20220301-site"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20220301.sites.web.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "web.azure.com"
                ],
                "apiVersions": [
                  "v1api20220301"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "sites"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/mutate-web-azure-com-v1api20220301-sitessourcecontrol"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "default.v1api20220301.sitessourcecontrols.web.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "web.azure.com"
                ],
                "apiVersions": [
                  "v1api20220301"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "sitessourcecontrols"
                ]
              }
            ],
            "sideEffects": "None"
          }
        ]
      },
      "component": {
        "version": "admissionregistration.k8s.io/v1",
        "kind": "MutatingWebhookConfiguration",
        "schema": ""
      }
    },
    {
      "id": "99f447b7-d02a-41f8-a06e-d269d4d32189",
      "schemaVersion": "components.meshery.io/v1beta1",
      "version": "v1.0.0",
      "displayName": "cert-manager-webhook",
      "description": "",
      "format": "",
      "model": {
        "id": "e633cca6-b6e1-65bf-a440-0d58915e75dd",
        "schemaVersion": "models.meshery.io/v1beta1",
        "version": "v1.0.0",
        "name": "kubernetes",
        "displayName": "Kubernetes",
        "status": "enabled",
        "registrant": {
          "id": "f9a29d70-c287-426c-a90c-2a96590c8083",
          "name": "Github",
          "credential_id": "00000000-0000-0000-0000-000000000000",
          "type": "registry",
          "sub_type": "",
          "kind": "github",
          "status": "registered",
          "user_id": "00000000-0000-0000-0000-000000000000",
          "created_at": "2025-06-22T05:56:58.393994634Z",
          "updated_at": "2025-06-22T05:56:58.393994634Z",
          "deleted_at": "0001-01-01T00:00:00Z"
        },
        "connection_id": "f9a29d70-c287-426c-a90c-2a96590c8083",
        "category": {
          "id": "9ca27d0d-66ce-42a9-8c85-6236563f2ddb",
          "name": "Orchestration \u0026 Management"
        },
        "subCategory": "Scheduling \u0026 Orchestration",
        "metadata": {
          "isAnnotation": false,
          "primaryColor": "#326CE5",
          "secondaryColor": "#7aa1f0",
          "shape": "circle",
          "styleOverrides": "",
          "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/kubernetes-color.svg",
          "svgComplete": "",
          "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/kubernetes-white.svg"
        },
        "model": {
          "version": "v1.32.0-alpha.3"
        },
        "components_count": 0,
        "relationships_count": 0,
        "components": null,
        "relationships": null
      },
      "styles": {
        "position": {
          "x": 993.25,
          "y": 246.91146850585938
        },
        "primaryColor": "#326CE5",
        "secondaryColor": "#7aa1f0",
        "shape": "round-hexagon",
        "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/mutatingwebhookconfiguration-color.svg",
        "svgComplete": "",
        "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/mutatingwebhookconfiguration-white.svg",
        "z-index": 47
      },
      "capabilities": [],
      "status": "enabled",
      "metadata": {
        "configurationUISchema": "",
        "genealogy": "",
        "instanceDetails": null,
        "isAnnotation": false,
        "isNamespaced": false,
        "published": false,
        "source_uri": "git://github.com/kubernetes/kubernetes/master/api/openapi-spec/v3"
      },
      "configuration": {
        "metadata": {
          "annotations": {
            "cert-manager.io/inject-ca-from-secret": "cert-manager/cert-manager-webhook-ca"
          },
          "labels": {
            "app": "webhook",
            "app.kubernetes.io/component": "webhook",
            "app.kubernetes.io/instance": "cert-manager",
            "app.kubernetes.io/name": "webhook",
            "app.kubernetes.io/version": "v1.14.1"
          },
          "name": "cert-manager-webhook"
        },
        "webhooks": [
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "cert-manager-webhook",
                "namespace": "cert-manager",
                "path": "/mutate"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Equivalent",
            "name": "webhook.cert-manager.io",
            "rules": [
              {
                "apiGroups": [
                  "cert-manager.io"
                ],
                "apiVersions": [
                  "v1"
                ],
                "operations": [
                  "CREATE"
                ],
                "resources": [
                  "certificaterequests"
                ]
              }
            ],
            "sideEffects": "None",
            "timeoutSeconds": 30
          }
        ]
      },
      "component": {
        "version": "admissionregistration.k8s.io/v1",
        "kind": "MutatingWebhookConfiguration",
        "schema": ""
      }
    },
    {
      "id": "9cc4d1ff-1ae8-4b4e-9108-bef31408d0da",
      "schemaVersion": "components.meshery.io/v1beta1",
      "version": "v1.0.0",
      "displayName": "kube-system",
      "description": "",
      "format": "JSON",
      "model": {
        "id": "e633cca6-b6e1-65bf-a440-0d58915e75dd",
        "schemaVersion": "models.meshery.io/v1beta1",
        "version": "v1.0.0",
        "name": "kubernetes",
        "displayName": "Kubernetes",
        "status": "enabled",
        "registrant": {
          "id": "f9a29d70-c287-426c-a90c-2a96590c8083",
          "name": "Github",
          "credential_id": "00000000-0000-0000-0000-000000000000",
          "type": "registry",
          "sub_type": "",
          "kind": "github",
          "status": "registered",
          "user_id": "00000000-0000-0000-0000-000000000000",
          "created_at": "2025-06-22T05:56:58.393994634Z",
          "updated_at": "2025-06-22T05:56:58.393994634Z",
          "deleted_at": "0001-01-01T00:00:00Z"
        },
        "connection_id": "f9a29d70-c287-426c-a90c-2a96590c8083",
        "category": {
          "id": "9ca27d0d-66ce-42a9-8c85-6236563f2ddb",
          "name": "Orchestration \u0026 Management"
        },
        "subCategory": "Scheduling \u0026 Orchestration",
        "metadata": {
          "isAnnotation": false,
          "primaryColor": "#326CE5",
          "secondaryColor": "#7aa1f0",
          "shape": "circle",
          "styleOverrides": "",
          "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/kubernetes-color.svg",
          "svgComplete": "",
          "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/kubernetes-white.svg"
        },
        "model": {
          "version": "v1.32.0-alpha.3"
        },
        "components_count": 0,
        "relationships_count": 0,
        "components": null,
        "relationships": null
      },
      "styles": {
        "background-image": "none",
        "background-opacity": 0.5,
        "border-style": "dashed",
        "border-width": 2,
        "position": {
          "x": 424.8535715426834,
          "y": 330.85843472497027
        },
        "primaryColor": "#326CE5",
        "secondaryColor": "#7aa1f0",
        "shape": "rectangle",
        "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/namespace-color.svg",
        "svgComplete": "ui/public/static/img/meshmodels/kubernetes/complete/namespace-complete.svg",
        "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/namespace-white.svg",
        "z-index": 65
      },
      "capabilities": [],
      "status": "enabled",
      "metadata": {
        "configurationUISchema": "",
        "genealogy": "parent",
        "instanceDetails": null,
        "isAnnotation": false,
        "isNamespaced": false,
        "published": false,
        "source_uri": "git://github.com/kubernetes/kubernetes/master/api/openapi-spec/v3"
      },
      "configuration": {},
      "component": {
        "version": "v1",
        "kind": "Namespace",
        "schema": ""
      }
    },
    {
      "id": "bdbf668e-ec96-48a3-9dac-47a5717756fc",
      "schemaVersion": "components.meshery.io/v1beta1",
      "version": "v1.0.0",
      "displayName": "azureserviceoperator-system",
      "description": "",
      "format": "",
      "model": {
        "id": "e633cca6-b6e1-65bf-a440-0d58915e75dd",
        "schemaVersion": "models.meshery.io/v1beta1",
        "version": "v1.0.0",
        "name": "kubernetes",
        "displayName": "Kubernetes",
        "status": "enabled",
        "registrant": {
          "id": "f9a29d70-c287-426c-a90c-2a96590c8083",
          "name": "Github",
          "credential_id": "00000000-0000-0000-0000-000000000000",
          "type": "registry",
          "sub_type": "",
          "kind": "github",
          "status": "registered",
          "user_id": "00000000-0000-0000-0000-000000000000",
          "created_at": "2025-06-22T05:56:58.393994634Z",
          "updated_at": "2025-06-22T05:56:58.393994634Z",
          "deleted_at": "0001-01-01T00:00:00Z"
        },
        "connection_id": "f9a29d70-c287-426c-a90c-2a96590c8083",
        "category": {
          "id": "9ca27d0d-66ce-42a9-8c85-6236563f2ddb",
          "name": "Orchestration \u0026 Management"
        },
        "subCategory": "Scheduling \u0026 Orchestration",
        "metadata": {
          "isAnnotation": false,
          "primaryColor": "#326CE5",
          "secondaryColor": "#7aa1f0",
          "shape": "circle",
          "styleOverrides": "",
          "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/kubernetes-color.svg",
          "svgComplete": "",
          "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/kubernetes-white.svg"
        },
        "model": {
          "version": "v1.32.0-alpha.3"
        },
        "components_count": 0,
        "relationships_count": 0,
        "components": null,
        "relationships": null
      },
      "styles": {
        "background-image": "none",
        "background-opacity": 0.5,
        "border-style": "dashed",
        "border-width": 2,
        "position": {
          "x": -28.678274428274378,
          "y": 202.12003578467989
        },
        "primaryColor": "#326CE5",
        "secondaryColor": "#7aa1f0",
        "shape": "rectangle",
        "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/namespace-color.svg",
        "svgComplete": "ui/public/static/img/meshmodels/kubernetes/complete/namespace-complete.svg",
        "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/namespace-white.svg",
        "z-index": 66
      },
      "capabilities": [],
      "status": "enabled",
      "metadata": {
        "configurationUISchema": "",
        "genealogy": "parent",
        "instanceDetails": null,
        "isAnnotation": false,
        "isNamespaced": false,
        "published": false,
        "source_uri": "git://github.com/kubernetes/kubernetes/master/api/openapi-spec/v3"
      },
      "configuration": {
        "metadata": {
          "name": "azureserviceoperator-system"
        }
      },
      "component": {
        "version": "v1",
        "kind": "Namespace",
        "schema": ""
      }
    },
    {
      "id": "779771c4-bd19-4425-a27b-a75afd10b4b2",
      "schemaVersion": "components.meshery.io/v1beta1",
      "version": "v1.0.0",
      "displayName": "cert-manager",
      "description": "",
      "format": "",
      "model": {
        "id": "e633cca6-b6e1-65bf-a440-0d58915e75dd",
        "schemaVersion": "models.meshery.io/v1beta1",
        "version": "v1.0.0",
        "name": "kubernetes",
        "displayName": "Kubernetes",
        "status": "enabled",
        "registrant": {
          "id": "f9a29d70-c287-426c-a90c-2a96590c8083",
          "name": "Github",
          "credential_id": "00000000-0000-0000-0000-000000000000",
          "type": "registry",
          "sub_type": "",
          "kind": "github",
          "status": "registered",
          "user_id": "00000000-0000-0000-0000-000000000000",
          "created_at": "2025-06-22T05:56:58.393994634Z",
          "updated_at": "2025-06-22T05:56:58.393994634Z",
          "deleted_at": "0001-01-01T00:00:00Z"
        },
        "connection_id": "f9a29d70-c287-426c-a90c-2a96590c8083",
        "category": {
          "id": "9ca27d0d-66ce-42a9-8c85-6236563f2ddb",
          "name": "Orchestration \u0026 Management"
        },
        "subCategory": "Scheduling \u0026 Orchestration",
        "metadata": {
          "isAnnotation": false,
          "primaryColor": "#326CE5",
          "secondaryColor": "#7aa1f0",
          "shape": "circle",
          "styleOverrides": "",
          "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/kubernetes-color.svg",
          "svgComplete": "",
          "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/kubernetes-white.svg"
        },
        "model": {
          "version": "v1.32.0-alpha.3"
        },
        "components_count": 0,
        "relationships_count": 0,
        "components": null,
        "relationships": null
      },
      "styles": {
        "background-image": "none",
        "background-opacity": 0.5,
        "border-style": "dashed",
        "border-width": 2,
        "position": {
          "x": 564.0836798336798,
          "y": 59.367279481639116
        },
        "primaryColor": "#326CE5",
        "secondaryColor": "#7aa1f0",
        "shape": "rectangle",
        "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/namespace-color.svg",
        "svgComplete": "ui/public/static/img/meshmodels/kubernetes/complete/namespace-complete.svg",
        "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/namespace-white.svg",
        "z-index": 67
      },
      "capabilities": [],
      "status": "enabled",
      "metadata": {
        "configurationUISchema": "",
        "genealogy": "parent",
        "instanceDetails": null,
        "isAnnotation": false,
        "isNamespaced": false,
        "published": false,
        "source_uri": "git://github.com/kubernetes/kubernetes/master/api/openapi-spec/v3"
      },
      "configuration": {
        "metadata": {
          "name": "cert-manager"
        }
      },
      "component": {
        "version": "v1",
        "kind": "Namespace",
        "schema": ""
      }
    },
    {
      "id": "0d801979-0a3f-4702-80e6-00b512f4005c",
      "schemaVersion": "components.meshery.io/v1beta1",
      "version": "v1.0.0",
      "displayName": "azureserviceoperator-pdb",
      "description": "",
      "format": "",
      "model": {
        "id": "e633cca6-b6e1-65bf-a440-0d58915e75dd",
        "schemaVersion": "models.meshery.io/v1beta1",
        "version": "v1.0.0",
        "name": "kubernetes",
        "displayName": "Kubernetes",
        "status": "enabled",
        "registrant": {
          "id": "f9a29d70-c287-426c-a90c-2a96590c8083",
          "name": "Github",
          "credential_id": "00000000-0000-0000-0000-000000000000",
          "type": "registry",
          "sub_type": "",
          "kind": "github",
          "status": "registered",
          "user_id": "00000000-0000-0000-0000-000000000000",
          "created_at": "2025-06-22T05:56:58.393994634Z",
          "updated_at": "2025-06-22T05:56:58.393994634Z",
          "deleted_at": "0001-01-01T00:00:00Z"
        },
        "connection_id": "f9a29d70-c287-426c-a90c-2a96590c8083",
        "category": {
          "id": "9ca27d0d-66ce-42a9-8c85-6236563f2ddb",
          "name": "Orchestration \u0026 Management"
        },
        "subCategory": "Scheduling \u0026 Orchestration",
        "metadata": {
          "isAnnotation": false,
          "primaryColor": "#326CE5",
          "secondaryColor": "#7aa1f0",
          "shape": "circle",
          "styleOverrides": "",
          "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/kubernetes-color.svg",
          "svgComplete": "",
          "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/kubernetes-white.svg"
        },
        "model": {
          "version": "v1.32.0-alpha.3"
        },
        "components_count": 0,
        "relationships_count": 0,
        "components": null,
        "relationships": null
      },
      "styles": {
        "position": {
          "x": 130.15158500062745,
          "y": 102.18471478234386
        },
        "primaryColor": "#326CE5",
        "secondaryColor": "#7aa1f0",
        "shape": "concave-hexagon",
        "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/poddisruptionbudget-color.svg",
        "svgComplete": "",
        "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/poddisruptionbudget-white.svg",
        "z-index": 68
      },
      "capabilities": [],
      "status": "enabled",
      "metadata": {
        "configurationUISchema": "",
        "genealogy": "",
        "instanceDetails": null,
        "isAnnotation": false,
        "isNamespaced": true,
        "published": false,
        "source_uri": "git://github.com/kubernetes/kubernetes/master/api/openapi-spec/v3"
      },
      "configuration": {
        "metadata": {
          "labels": {
            "app.kubernetes.io/name": "azure-service-operator",
            "control-plane": "controller-manager"
          },
          "name": "azureserviceoperator-pdb",
          "namespace": "azureserviceoperator-system"
        },
        "spec": {
          "minAvailable": "50%",
          "selector": {
            "matchLabels": {
              "control-plane": "controller-manager"
            }
          }
        }
      },
      "component": {
        "version": "policy/v1",
        "kind": "PodDisruptionBudget",
        "schema": ""
      }
    },
    {
      "id": "da6d1c91-251a-49fb-9120-c3140541ed9a",
      "schemaVersion": "components.meshery.io/v1beta1",
      "version": "v1.0.0",
      "displayName": "",
      "description": "",
      "format": "JSON",
      "model": {
        "id": "c099bfc5-1542-85d4-10bd-26133e7209ff",
        "schemaVersion": "models.meshery.io/v1beta1",
        "version": "v1.0.0",
        "name": "meshery-arrows",
        "displayName": "Meshery Arrows",
        "description": "Icons that used for pointing out",
        "status": "enabled",
        "registrant": {
          "id": "98027e7d-9e16-e4f0-6dbd-83f3ac0d9856",
          "name": "meshery",
          "credential_id": "00000000-0000-0000-0000-000000000000",
          "type": "registry",
          "sub_type": "",
          "kind": "meshery",
          "status": "registered",
          "user_id": "00000000-0000-0000-0000-000000000000",
          "created_at": "2025-06-30T22:11:57.571508862Z",
          "updated_at": "2025-06-30T22:11:57.571508862Z",
          "deleted_at": "0001-01-01T00:00:00Z"
        },
        "connection_id": "98027e7d-9e16-e4f0-6dbd-83f3ac0d9856",
        "category": {
          "id": "9ca27d0d-66ce-42a9-8c85-6236563f2ddb",
          "name": "Orchestration \u0026 Management"
        },
        "subCategory": "Application Definition \u0026 Image Build",
        "metadata": {
          "isAnnotation": true,
          "primaryColor": "#2196F3",
          "secondaryColor": "#00D3A9",
          "shape": "polygon",
          "styleOverrides": "",
          "svgColor": "ui/public/static/img/meshmodels/meshery-arrows/color/meshery-arrows-color.svg",
          "svgComplete": "",
          "svgWhite": "ui/public/static/img/meshmodels/meshery-arrows/white/meshery-arrows-white.svg"
        },
        "model": {
          "version": "0.7.2"
        },
        "components_count": 0,
        "relationships_count": 0,
        "components": null,
        "relationships": null
      },
      "styles": {
        "background-image": "none",
        "background-opacity": 0,
        "body-text": "",
        "body-text-color": "#808080",
        "body-text-font-family": "Qanelas Soft",
        "body-text-font-size": 12,
        "body-text-font-weight": "400",
        "body-text-horizontal-align": "center",
        "body-text-text-decoration": "none",
        "body-text-vertical-align": "center",
        "border-color": "#00b39f",
        "border-style": "solid",
        "border-width": 15,
        "data": {
          "label": ""
        },
        "height": 30,
        "opacity": 1,
        "padding": 6,
        "position": {
          "x": -331.7981629008926,
          "y": 259.896400192542
        },
        "primaryColor": "#b30007",
        "secondaryColor": "#00D3A9",
        "shape": "polygon",
        "shape-polygon-points": "-1 0.22 -1 -0.23 0.46 -0.23 0.46 -0.46 1 0 0.46 0.46 0.46 0.23",
        "svgColor": "ui/public/static/img/meshmodels/meshery-arrows/color/rightarrow-color.svg",
        "svgComplete": "ui/public/static/img/meshmodels/meshery-arrows/complete/rightarrow-complete.svg",
        "svgWhite": "ui/public/static/img/meshmodels/meshery-arrows/white/rightarrow-white.svg",
        "width": 30,
        "z-index": 75
      },
      "capabilities": [],
      "status": "enabled",
      "metadata": {
        "configurationUISchema": "",
        "genealogy": "",
        "hasInvalidSchema": true,
        "instanceDetails": null,
        "isAnnotation": true,
        "isNamespaced": false,
        "published": false
      },
      "configuration": {},
      "component": {
        "version": "core.meshery.io/v1alpha1",
        "kind": "RightArrow",
        "schema": ""
      }
    },
    {
      "id": "f54c199e-ae09-47c8-82cf-a718fc84d8a9",
      "schemaVersion": "components.meshery.io/v1beta1",
      "version": "v1.0.0",
      "displayName": "cert-manager-cainjector:leaderelection",
      "description": "",
      "format": "",
      "model": {
        "id": "e633cca6-b6e1-65bf-a440-0d58915e75dd",
        "schemaVersion": "models.meshery.io/v1beta1",
        "version": "v1.0.0",
        "name": "kubernetes",
        "displayName": "Kubernetes",
        "status": "enabled",
        "registrant": {
          "id": "f9a29d70-c287-426c-a90c-2a96590c8083",
          "name": "Github",
          "credential_id": "00000000-0000-0000-0000-000000000000",
          "type": "registry",
          "sub_type": "",
          "kind": "github",
          "status": "registered",
          "user_id": "00000000-0000-0000-0000-000000000000",
          "created_at": "2025-06-22T05:56:58.393994634Z",
          "updated_at": "2025-06-22T05:56:58.393994634Z",
          "deleted_at": "0001-01-01T00:00:00Z"
        },
        "connection_id": "f9a29d70-c287-426c-a90c-2a96590c8083",
        "category": {
          "id": "9ca27d0d-66ce-42a9-8c85-6236563f2ddb",
          "name": "Orchestration \u0026 Management"
        },
        "subCategory": "Scheduling \u0026 Orchestration",
        "metadata": {
          "isAnnotation": false,
          "primaryColor": "#326CE5",
          "secondaryColor": "#7aa1f0",
          "shape": "circle",
          "styleOverrides": "",
          "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/kubernetes-color.svg",
          "svgComplete": "",
          "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/kubernetes-white.svg"
        },
        "model": {
          "version": "v1.32.0-alpha.3"
        },
        "components_count": 0,
        "relationships_count": 0,
        "components": null,
        "relationships": null
      },
      "styles": {
        "height": 22,
        "position": {
          "x": 287.0191434034702,
          "y": 293.3835324000337
        },
        "primaryColor": "#326CE5",
        "secondaryColor": "#7aa1f0",
        "shape": "round-rectangle",
        "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/role-color.svg",
        "svgComplete": "",
        "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/role-white.svg",
        "width": 22,
        "x": 8.5,
        "y": 7.5,
        "z-index": 4
      },
      "capabilities": [],
      "status": "enabled",
      "metadata": {
        "configurationUISchema": "",
        "genealogy": "",
        "instanceDetails": null,
        "isAnnotation": false,
        "isNamespaced": true,
        "published": false,
        "source_uri": "git://github.com/kubernetes/kubernetes/master/api/openapi-spec/v3"
      },
      "configuration": {
        "metadata": {
          "labels": {
            "app": "cainjector",
            "app.kubernetes.io/component": "cainjector",
            "app.kubernetes.io/instance": "cert-manager",
            "app.kubernetes.io/name": "cainjector",
            "app.kubernetes.io/version": "v1.14.1"
          },
          "name": "cert-manager-cainjector:leaderelection",
          "namespace": "kube-system"
        },
        "rules": [
          {
            "apiGroups": [
              "coordination.k8s.io"
            ],
            "resourceNames": [
              "cert-manager-cainjector-leader-election",
              "cert-manager-cainjector-leader-election-core"
            ],
            "resources": [
              "leases"
            ],
            "verbs": [
              "get",
              "update",
              "patch"
            ]
          },
          {
            "apiGroups": [
              "coordination.k8s.io"
            ],
            "resources": [
              "leases"
            ],
            "verbs": [
              "create"
            ]
          }
        ]
      },
      "component": {
        "version": "rbac.authorization.k8s.io/v1",
        "kind": "Role",
        "schema": ""
      }
    },
    {
      "id": "530b843c-3d51-4e6a-8ca2-7212c758dc77",
      "schemaVersion": "components.meshery.io/v1beta1",
      "version": "v1.0.0",
      "displayName": "cert-manager:leaderelection",
      "description": "",
      "format": "",
      "model": {
        "id": "e633cca6-b6e1-65bf-a440-0d58915e75dd",
        "schemaVersion": "models.meshery.io/v1beta1",
        "version": "v1.0.0",
        "name": "kubernetes",
        "displayName": "Kubernetes",
        "status": "enabled",
        "registrant": {
          "id": "f9a29d70-c287-426c-a90c-2a96590c8083",
          "name": "Github",
          "credential_id": "00000000-0000-0000-0000-000000000000",
          "type": "registry",
          "sub_type": "",
          "kind": "github",
          "status": "registered",
          "user_id": "00000000-0000-0000-0000-000000000000",
          "created_at": "2025-06-22T05:56:58.393994634Z",
          "updated_at": "2025-06-22T05:56:58.393994634Z",
          "deleted_at": "0001-01-01T00:00:00Z"
        },
        "connection_id": "f9a29d70-c287-426c-a90c-2a96590c8083",
        "category": {
          "id": "9ca27d0d-66ce-42a9-8c85-6236563f2ddb",
          "name": "Orchestration \u0026 Management"
        },
        "subCategory": "Scheduling \u0026 Orchestration",
        "metadata": {
          "isAnnotation": false,
          "primaryColor": "#326CE5",
          "secondaryColor": "#7aa1f0",
          "shape": "circle",
          "styleOverrides": "",
          "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/kubernetes-color.svg",
          "svgComplete": "",
          "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/kubernetes-white.svg"
        },
        "model": {
          "version": "v1.32.0-alpha.3"
        },
        "components_count": 0,
        "relationships_count": 0,
        "components": null,
        "relationships": null
      },
      "styles": {
        "height": 22,
        "position": {
          "x": 375.0191434034702,
          "y": 293.3835324000337
        },
        "primaryColor": "#326CE5",
        "secondaryColor": "#7aa1f0",
        "shape": "round-rectangle",
        "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/role-color.svg",
        "svgComplete": "",
        "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/role-white.svg",
        "width": 22,
        "x": 8.5,
        "y": 7.5,
        "z-index": 37
      },
      "capabilities": [],
      "status": "enabled",
      "metadata": {
        "configurationUISchema": "",
        "genealogy": "",
        "instanceDetails": null,
        "isAnnotation": false,
        "isNamespaced": true,
        "published": false,
        "source_uri": "git://github.com/kubernetes/kubernetes/master/api/openapi-spec/v3"
      },
      "configuration": {
        "metadata": {
          "labels": {
            "app": "cert-manager",
            "app.kubernetes.io/component": "controller",
            "app.kubernetes.io/instance": "cert-manager",
            "app.kubernetes.io/name": "cert-manager",
            "app.kubernetes.io/version": "v1.14.1"
          },
          "name": "cert-manager:leaderelection",
          "namespace": "kube-system"
        },
        "rules": [
          {
            "apiGroups": [
              "coordination.k8s.io"
            ],
            "resourceNames": [
              "cert-manager-controller"
            ],
            "resources": [
              "leases"
            ],
            "verbs": [
              "get",
              "update",
              "patch"
            ]
          },
          {
            "apiGroups": [
              "coordination.k8s.io"
            ],
            "resources": [
              "leases"
            ],
            "verbs": [
              "create"
            ]
          }
        ]
      },
      "component": {
        "version": "rbac.authorization.k8s.io/v1",
        "kind": "Role",
        "schema": ""
      }
    },
    {
      "id": "90b471fa-60f0-4ec2-9552-4a4912259c63",
      "schemaVersion": "components.meshery.io/v1beta1",
      "version": "v1.0.0",
      "displayName": "cert-manager-webhook:dynamic-serving",
      "description": "",
      "format": "",
      "model": {
        "id": "e633cca6-b6e1-65bf-a440-0d58915e75dd",
        "schemaVersion": "models.meshery.io/v1beta1",
        "version": "v1.0.0",
        "name": "kubernetes",
        "displayName": "Kubernetes",
        "status": "enabled",
        "registrant": {
          "id": "f9a29d70-c287-426c-a90c-2a96590c8083",
          "name": "Github",
          "credential_id": "00000000-0000-0000-0000-000000000000",
          "type": "registry",
          "sub_type": "",
          "kind": "github",
          "status": "registered",
          "user_id": "00000000-0000-0000-0000-000000000000",
          "created_at": "2025-06-22T05:56:58.393994634Z",
          "updated_at": "2025-06-22T05:56:58.393994634Z",
          "deleted_at": "0001-01-01T00:00:00Z"
        },
        "connection_id": "f9a29d70-c287-426c-a90c-2a96590c8083",
        "category": {
          "id": "9ca27d0d-66ce-42a9-8c85-6236563f2ddb",
          "name": "Orchestration \u0026 Management"
        },
        "subCategory": "Scheduling \u0026 Orchestration",
        "metadata": {
          "isAnnotation": false,
          "primaryColor": "#326CE5",
          "secondaryColor": "#7aa1f0",
          "shape": "circle",
          "styleOverrides": "",
          "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/kubernetes-color.svg",
          "svgComplete": "",
          "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/kubernetes-white.svg"
        },
        "model": {
          "version": "v1.32.0-alpha.3"
        },
        "components_count": 0,
        "relationships_count": 0,
        "components": null,
        "relationships": null
      },
      "styles": {
        "height": 22,
        "position": {
          "x": 609.6472405159304,
          "y": 344.78632584935946
        },
        "primaryColor": "#326CE5",
        "secondaryColor": "#7aa1f0",
        "shape": "round-rectangle",
        "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/role-color.svg",
        "svgComplete": "",
        "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/role-white.svg",
        "width": 22,
        "x": 8.5,
        "y": 7.5,
        "z-index": 38
      },
      "capabilities": [],
      "status": "enabled",
      "metadata": {
        "configurationUISchema": "",
        "genealogy": "",
        "instanceDetails": null,
        "isAnnotation": false,
        "isNamespaced": true,
        "published": false,
        "source_uri": "git://github.com/kubernetes/kubernetes/master/api/openapi-spec/v3"
      },
      "configuration": {
        "metadata": {
          "labels": {
            "app": "webhook",
            "app.kubernetes.io/component": "webhook",
            "app.kubernetes.io/instance": "cert-manager",
            "app.kubernetes.io/name": "webhook",
            "app.kubernetes.io/version": "v1.14.1"
          },
          "name": "cert-manager-webhook:dynamic-serving",
          "namespace": "kube-system"
        },
        "rules": [
          {
            "apiGroups": [
              ""
            ],
            "resourceNames": [
              "cert-manager-webhook-ca"
            ],
            "resources": [
              "secrets"
            ],
            "verbs": [
              "get",
              "list",
              "watch",
              "update"
            ]
          },
          {
            "apiGroups": [
              ""
            ],
            "resources": [
              "secrets"
            ],
            "verbs": [
              "create"
            ]
          }
        ]
      },
      "component": {
        "version": "rbac.authorization.k8s.io/v1",
        "kind": "Role",
        "schema": ""
      }
    },
    {
      "id": "879bbd9e-1b1a-4cfc-b63d-eb46ed9f6c5f",
      "schemaVersion": "components.meshery.io/v1beta1",
      "version": "v1.0.0",
      "displayName": "azureserviceoperator-leader-election-role",
      "description": "",
      "format": "",
      "model": {
        "id": "e633cca6-b6e1-65bf-a440-0d58915e75dd",
        "schemaVersion": "models.meshery.io/v1beta1",
        "version": "v1.0.0",
        "name": "kubernetes",
        "displayName": "Kubernetes",
        "status": "enabled",
        "registrant": {
          "id": "f9a29d70-c287-426c-a90c-2a96590c8083",
          "name": "Github",
          "credential_id": "00000000-0000-0000-0000-000000000000",
          "type": "registry",
          "sub_type": "",
          "kind": "github",
          "status": "registered",
          "user_id": "00000000-0000-0000-0000-000000000000",
          "created_at": "2025-06-22T05:56:58.393994634Z",
          "updated_at": "2025-06-22T05:56:58.393994634Z",
          "deleted_at": "0001-01-01T00:00:00Z"
        },
        "connection_id": "f9a29d70-c287-426c-a90c-2a96590c8083",
        "category": {
          "id": "9ca27d0d-66ce-42a9-8c85-6236563f2ddb",
          "name": "Orchestration \u0026 Management"
        },
        "subCategory": "Scheduling \u0026 Orchestration",
        "metadata": {
          "isAnnotation": false,
          "primaryColor": "#326CE5",
          "secondaryColor": "#7aa1f0",
          "shape": "circle",
          "styleOverrides": "",
          "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/kubernetes-color.svg",
          "svgComplete": "",
          "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/kubernetes-white.svg"
        },
        "model": {
          "version": "v1.32.0-alpha.3"
        },
        "components_count": 0,
        "relationships_count": 0,
        "components": null,
        "relationships": null
      },
      "styles": {
        "height": 22,
        "position": {
          "x": -171.73509144795278,
          "y": 57.26949400115309
        },
        "primaryColor": "#326CE5",
        "secondaryColor": "#7aa1f0",
        "shape": "round-rectangle",
        "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/role-color.svg",
        "svgComplete": "",
        "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/role-white.svg",
        "width": 22,
        "x": 8.5,
        "y": 7.5,
        "z-index": 69
      },
      "capabilities": [],
      "status": "enabled",
      "metadata": {
        "configurationUISchema": "",
        "genealogy": "",
        "instanceDetails": null,
        "isAnnotation": false,
        "isNamespaced": true,
        "published": false,
        "source_uri": "git://github.com/kubernetes/kubernetes/master/api/openapi-spec/v3"
      },
      "configuration": {
        "metadata": {
          "name": "azureserviceoperator-leader-election-role",
          "namespace": "azureserviceoperator-system"
        },
        "rules": [
          {
            "apiGroups": [
              ""
            ],
            "resources": [
              "configmaps"
            ],
            "verbs": [
              "get",
              "list",
              "watch",
              "create",
              "update",
              "patch",
              "delete"
            ]
          },
          {
            "apiGroups": [
              ""
            ],
            "resources": [
              "configmaps/status"
            ],
            "verbs": [
              "get",
              "update",
              "patch"
            ]
          },
          {
            "apiGroups": [
              ""
            ],
            "resources": [
              "events"
            ],
            "verbs": [
              "create"
            ]
          },
          {
            "apiGroups": [
              "coordination.k8s.io"
            ],
            "resources": [
              "leases"
            ],
            "verbs": [
              "create",
              "delete",
              "get",
              "list",
              "patch",
              "update",
              "watch"
            ]
          }
        ]
      },
      "component": {
        "version": "rbac.authorization.k8s.io/v1",
        "kind": "Role",
        "schema": ""
      }
    },
    {
      "id": "117150c9-92f6-47f3-bf8f-0a73c1f11575",
      "schemaVersion": "components.meshery.io/v1beta1",
      "version": "v1.0.0",
      "displayName": "cert-manager-cainjector:leaderelection",
      "description": "",
      "format": "",
      "model": {
        "id": "e633cca6-b6e1-65bf-a440-0d58915e75dd",
        "schemaVersion": "models.meshery.io/v1beta1",
        "version": "v1.0.0",
        "name": "kubernetes",
        "displayName": "Kubernetes",
        "status": "enabled",
        "registrant": {
          "id": "f9a29d70-c287-426c-a90c-2a96590c8083",
          "name": "Github",
          "credential_id": "00000000-0000-0000-0000-000000000000",
          "type": "registry",
          "sub_type": "",
          "kind": "github",
          "status": "registered",
          "user_id": "00000000-0000-0000-0000-000000000000",
          "created_at": "2025-06-22T05:56:58.393994634Z",
          "updated_at": "2025-06-22T05:56:58.393994634Z",
          "deleted_at": "0001-01-01T00:00:00Z"
        },
        "connection_id": "f9a29d70-c287-426c-a90c-2a96590c8083",
        "category": {
          "id": "9ca27d0d-66ce-42a9-8c85-6236563f2ddb",
          "name": "Orchestration \u0026 Management"
        },
        "subCategory": "Scheduling \u0026 Orchestration",
        "metadata": {
          "isAnnotation": false,
          "primaryColor": "#326CE5",
          "secondaryColor": "#7aa1f0",
          "shape": "circle",
          "styleOverrides": "",
          "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/kubernetes-color.svg",
          "svgComplete": "",
          "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/kubernetes-white.svg"
        },
        "model": {
          "version": "v1.32.0-alpha.3"
        },
        "components_count": 0,
        "relationships_count": 0,
        "components": null,
        "relationships": null
      },
      "styles": {
        "height": 25,
        "position": {
          "x": 533.2012709045399,
          "y": 364.68317352961026
        },
        "primaryColor": "#326CE5",
        "secondaryColor": "#7aa1f0",
        "shape": "round-rectangle",
        "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/rolebinding-color.svg",
        "svgComplete": "",
        "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/rolebinding-white.svg",
        "width": 25,
        "x": 7,
        "y": 7,
        "z-index": 39
      },
      "capabilities": [],
      "status": "enabled",
      "metadata": {
        "configurationUISchema": "",
        "genealogy": "",
        "instanceDetails": null,
        "isAnnotation": false,
        "isNamespaced": true,
        "published": false,
        "source_uri": "git://github.com/kubernetes/kubernetes/master/api/openapi-spec/v3"
      },
      "configuration": {
        "metadata": {
          "labels": {
            "app": "cainjector",
            "app.kubernetes.io/component": "cainjector",
            "app.kubernetes.io/instance": "cert-manager",
            "app.kubernetes.io/name": "cainjector",
            "app.kubernetes.io/version": "v1.14.1"
          },
          "name": "cert-manager-cainjector:leaderelection",
          "namespace": "kube-system"
        },
        "roleRef": {
          "apiGroup": "rbac.authorization.k8s.io",
          "kind": "Role",
          "name": "cert-manager-cainjector:leaderelection"
        },
        "subjects": [
          {
            "kind": "ServiceAccount",
            "name": "cert-manager-cainjector",
            "namespace": "cert-manager"
          }
        ]
      },
      "component": {
        "version": "rbac.authorization.k8s.io/v1",
        "kind": "RoleBinding",
        "schema": ""
      }
    },
    {
      "id": "fbb22c09-c289-436c-8c7c-09ecc3901b3d",
      "schemaVersion": "components.meshery.io/v1beta1",
      "version": "v1.0.0",
      "displayName": "cert-manager:leaderelection",
      "description": "",
      "format": "",
      "model": {
        "id": "e633cca6-b6e1-65bf-a440-0d58915e75dd",
        "schemaVersion": "models.meshery.io/v1beta1",
        "version": "v1.0.0",
        "name": "kubernetes",
        "displayName": "Kubernetes",
        "status": "enabled",
        "registrant": {
          "id": "f9a29d70-c287-426c-a90c-2a96590c8083",
          "name": "Github",
          "credential_id": "00000000-0000-0000-0000-000000000000",
          "type": "registry",
          "sub_type": "",
          "kind": "github",
          "status": "registered",
          "user_id": "00000000-0000-0000-0000-000000000000",
          "created_at": "2025-06-22T05:56:58.393994634Z",
          "updated_at": "2025-06-22T05:56:58.393994634Z",
          "deleted_at": "0001-01-01T00:00:00Z"
        },
        "connection_id": "f9a29d70-c287-426c-a90c-2a96590c8083",
        "category": {
          "id": "9ca27d0d-66ce-42a9-8c85-6236563f2ddb",
          "name": "Orchestration \u0026 Management"
        },
        "subCategory": "Scheduling \u0026 Orchestration",
        "metadata": {
          "isAnnotation": false,
          "primaryColor": "#326CE5",
          "secondaryColor": "#7aa1f0",
          "shape": "circle",
          "styleOverrides": "",
          "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/kubernetes-color.svg",
          "svgComplete": "",
          "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/kubernetes-white.svg"
        },
        "model": {
          "version": "v1.32.0-alpha.3"
        },
        "components_count": 0,
        "relationships_count": 0,
        "components": null,
        "relationships": null
      },
      "styles": {
        "height": 25,
        "position": {
          "x": 582.1879996818966,
          "y": 271.0336959203302
        },
        "primaryColor": "#326CE5",
        "secondaryColor": "#7aa1f0",
        "shape": "round-rectangle",
        "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/rolebinding-color.svg",
        "svgComplete": "",
        "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/rolebinding-white.svg",
        "width": 25,
        "x": 7,
        "y": 7,
        "z-index": 40
      },
      "capabilities": [],
      "status": "enabled",
      "metadata": {
        "configurationUISchema": "",
        "genealogy": "",
        "instanceDetails": null,
        "isAnnotation": false,
        "isNamespaced": true,
        "published": false,
        "source_uri": "git://github.com/kubernetes/kubernetes/master/api/openapi-spec/v3"
      },
      "configuration": {
        "metadata": {
          "labels": {
            "app": "cert-manager",
            "app.kubernetes.io/component": "controller",
            "app.kubernetes.io/instance": "cert-manager",
            "app.kubernetes.io/name": "cert-manager",
            "app.kubernetes.io/version": "v1.14.1"
          },
          "name": "cert-manager:leaderelection",
          "namespace": "kube-system"
        },
        "roleRef": {
          "apiGroup": "rbac.authorization.k8s.io",
          "kind": "Role",
          "name": "cert-manager:leaderelection"
        },
        "subjects": [
          {
            "apiGroup": "",
            "kind": "ServiceAccount",
            "name": "cert-manager",
            "namespace": "cert-manager"
          }
        ]
      },
      "component": {
        "version": "rbac.authorization.k8s.io/v1",
        "kind": "RoleBinding",
        "schema": ""
      }
    },
    {
      "id": "1052a840-34c0-49d0-abbb-8cb047bb7db7",
      "schemaVersion": "components.meshery.io/v1beta1",
      "version": "v1.0.0",
      "displayName": "cert-manager-webhook:dynamic-serving",
      "description": "",
      "format": "",
      "model": {
        "id": "e633cca6-b6e1-65bf-a440-0d58915e75dd",
        "schemaVersion": "models.meshery.io/v1beta1",
        "version": "v1.0.0",
        "name": "kubernetes",
        "displayName": "Kubernetes",
        "status": "enabled",
        "registrant": {
          "id": "f9a29d70-c287-426c-a90c-2a96590c8083",
          "name": "Github",
          "credential_id": "00000000-0000-0000-0000-000000000000",
          "type": "registry",
          "sub_type": "",
          "kind": "github",
          "status": "registered",
          "user_id": "00000000-0000-0000-0000-000000000000",
          "created_at": "2025-06-22T05:56:58.393994634Z",
          "updated_at": "2025-06-22T05:56:58.393994634Z",
          "deleted_at": "0001-01-01T00:00:00Z"
        },
        "connection_id": "f9a29d70-c287-426c-a90c-2a96590c8083",
        "category": {
          "id": "9ca27d0d-66ce-42a9-8c85-6236563f2ddb",
          "name": "Orchestration \u0026 Management"
        },
        "subCategory": "Scheduling \u0026 Orchestration",
        "metadata": {
          "isAnnotation": false,
          "primaryColor": "#326CE5",
          "secondaryColor": "#7aa1f0",
          "shape": "circle",
          "styleOverrides": "",
          "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/kubernetes-color.svg",
          "svgComplete": "",
          "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/kubernetes-white.svg"
        },
        "model": {
          "version": "v1.32.0-alpha.3"
        },
        "components_count": 0,
        "relationships_count": 0,
        "components": null,
        "relationships": null
      },
      "styles": {
        "height": 25,
        "position": {
          "x": 682.1873611841042,
          "y": 280.6900343243629
        },
        "primaryColor": "#326CE5",
        "secondaryColor": "#7aa1f0",
        "shape": "round-rectangle",
        "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/rolebinding-color.svg",
        "svgComplete": "",
        "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/rolebinding-white.svg",
        "width": 25,
        "x": 7,
        "y": 7,
        "z-index": 41
      },
      "capabilities": [],
      "status": "enabled",
      "metadata": {
        "configurationUISchema": "",
        "genealogy": "",
        "instanceDetails": null,
        "isAnnotation": false,
        "isNamespaced": true,
        "published": false,
        "source_uri": "git://github.com/kubernetes/kubernetes/master/api/openapi-spec/v3"
      },
      "configuration": {
        "metadata": {
          "labels": {
            "app": "webhook",
            "app.kubernetes.io/component": "webhook",
            "app.kubernetes.io/instance": "cert-manager",
            "app.kubernetes.io/name": "webhook",
            "app.kubernetes.io/version": "v1.14.1"
          },
          "name": "cert-manager-webhook:dynamic-serving",
          "namespace": "cert-manager"
        },
        "roleRef": {
          "apiGroup": "rbac.authorization.k8s.io",
          "kind": "Role",
          "name": "cert-manager-webhook:dynamic-serving"
        },
        "subjects": [
          {
            "apiGroup": "",
            "kind": "ServiceAccount",
            "name": "cert-manager-webhook",
            "namespace": "cert-manager"
          }
        ]
      },
      "component": {
        "version": "rbac.authorization.k8s.io/v1",
        "kind": "RoleBinding",
        "schema": ""
      }
    },
    {
      "id": "05574fe0-4101-4063-a438-86ce03cf2ca0",
      "schemaVersion": "components.meshery.io/v1beta1",
      "version": "v1.0.0",
      "displayName": "azureserviceoperator-leader-election-rolebinding",
      "description": "",
      "format": "",
      "model": {
        "id": "e633cca6-b6e1-65bf-a440-0d58915e75dd",
        "schemaVersion": "models.meshery.io/v1beta1",
        "version": "v1.0.0",
        "name": "kubernetes",
        "displayName": "Kubernetes",
        "status": "enabled",
        "registrant": {
          "id": "f9a29d70-c287-426c-a90c-2a96590c8083",
          "name": "Github",
          "credential_id": "00000000-0000-0000-0000-000000000000",
          "type": "registry",
          "sub_type": "",
          "kind": "github",
          "status": "registered",
          "user_id": "00000000-0000-0000-0000-000000000000",
          "created_at": "2025-06-22T05:56:58.393994634Z",
          "updated_at": "2025-06-22T05:56:58.393994634Z",
          "deleted_at": "0001-01-01T00:00:00Z"
        },
        "connection_id": "f9a29d70-c287-426c-a90c-2a96590c8083",
        "category": {
          "id": "9ca27d0d-66ce-42a9-8c85-6236563f2ddb",
          "name": "Orchestration \u0026 Management"
        },
        "subCategory": "Scheduling \u0026 Orchestration",
        "metadata": {
          "isAnnotation": false,
          "primaryColor": "#326CE5",
          "secondaryColor": "#7aa1f0",
          "shape": "circle",
          "styleOverrides": "",
          "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/kubernetes-color.svg",
          "svgComplete": "",
          "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/kubernetes-white.svg"
        },
        "model": {
          "version": "v1.32.0-alpha.3"
        },
        "components_count": 0,
        "relationships_count": 0,
        "components": null,
        "relationships": null
      },
      "styles": {
        "height": 25,
        "position": {
          "x": -25.10394042466961,
          "y": 61.915306235647094
        },
        "primaryColor": "#326CE5",
        "secondaryColor": "#7aa1f0",
        "shape": "round-rectangle",
        "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/rolebinding-color.svg",
        "svgComplete": "",
        "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/rolebinding-white.svg",
        "width": 25,
        "x": 7,
        "y": 7,
        "z-index": 70
      },
      "capabilities": [],
      "status": "enabled",
      "metadata": {
        "configurationUISchema": "",
        "genealogy": "",
        "instanceDetails": null,
        "isAnnotation": false,
        "isNamespaced": true,
        "published": false,
        "source_uri": "git://github.com/kubernetes/kubernetes/master/api/openapi-spec/v3"
      },
      "configuration": {
        "metadata": {
          "name": "azureserviceoperator-leader-election-rolebinding",
          "namespace": "azureserviceoperator-system"
        },
        "roleRef": {
          "apiGroup": "rbac.authorization.k8s.io",
          "kind": "Role",
          "name": "azureserviceoperator-leader-election-role"
        },
        "subjects": [
          {
            "kind": "ServiceAccount",
            "name": "azureserviceoperator-default",
            "namespace": "azureserviceoperator-system"
          }
        ]
      },
      "component": {
        "version": "rbac.authorization.k8s.io/v1",
        "kind": "RoleBinding",
        "schema": ""
      }
    },
    {
      "id": "e9094d62-9fdd-4c67-9a48-a0f9f2606edf",
      "schemaVersion": "components.meshery.io/v1beta1",
      "version": "v1.0.0",
      "displayName": "aso-controller-settings",
      "description": "",
      "format": "JSON",
      "model": {
        "id": "e633cca6-b6e1-65bf-a440-0d58915e75dd",
        "schemaVersion": "models.meshery.io/v1beta1",
        "version": "v1.0.0",
        "name": "kubernetes",
        "displayName": "Kubernetes",
        "status": "enabled",
        "registrant": {
          "id": "f9a29d70-c287-426c-a90c-2a96590c8083",
          "name": "Github",
          "credential_id": "00000000-0000-0000-0000-000000000000",
          "type": "registry",
          "sub_type": "",
          "kind": "github",
          "status": "registered",
          "user_id": "00000000-0000-0000-0000-000000000000",
          "created_at": "2025-06-22T05:56:58.393994634Z",
          "updated_at": "2025-06-22T05:56:58.393994634Z",
          "deleted_at": "0001-01-01T00:00:00Z"
        },
        "connection_id": "f9a29d70-c287-426c-a90c-2a96590c8083",
        "category": {
          "id": "9ca27d0d-66ce-42a9-8c85-6236563f2ddb",
          "name": "Orchestration \u0026 Management"
        },
        "subCategory": "Scheduling \u0026 Orchestration",
        "metadata": {
          "isAnnotation": false,
          "primaryColor": "#326CE5",
          "secondaryColor": "#7aa1f0",
          "shape": "circle",
          "styleOverrides": "",
          "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/kubernetes-color.svg",
          "svgComplete": "",
          "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/kubernetes-white.svg"
        },
        "model": {
          "version": "v1.32.0-alpha.3"
        },
        "components_count": 0,
        "relationships_count": 0,
        "components": null,
        "relationships": null
      },
      "styles": {
        "background-clip": "node",
        "background-image-containment": "over",
        "background-opacity": 0,
        "body-text": "",
        "body-text-color": "#808080",
        "body-text-font-family": "Qanelas Soft",
        "body-text-font-size": 12,
        "body-text-font-weight": "400",
        "body-text-horizontal-align": "center",
        "body-text-text-decoration": "none",
        "body-text-vertical-align": "center",
        "border-width": 0,
        "height": 32,
        "opacity": 1,
        "padding": 1,
        "position": {
          "x": -231.5008573498997,
          "y": 195.4105536099397
        },
        "primaryColor": "#326CE5",
        "secondaryColor": "#7aa1f0",
        "shape": "shield",
        "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/secret-color.svg",
        "svgComplete": "ui/public/static/img/meshmodels/kubernetes/complete/secret-complete.svg",
        "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/secret-white.svg",
        "width": 32,
        "z-index": 49
      },
      "capabilities": [],
      "status": "enabled",
      "metadata": {
        "configurationUISchema": "",
        "genealogy": "",
        "instanceDetails": null,
        "isAnnotation": false,
        "isNamespaced": true,
        "published": false,
        "source_uri": "git://github.com/kubernetes/kubernetes/master/api/openapi-spec/v3"
      },
      "configuration": {
        "metadata": {
          "name": "aso-controller-settings",
          "namespace": "azureserviceoperator-system"
        }
      },
      "component": {
        "version": "v1",
        "kind": "Secret",
        "schema": ""
      }
    },
    {
      "id": "9ffb1705-16f7-4730-bb7b-ff5902df86a8",
      "schemaVersion": "components.meshery.io/v1beta1",
      "version": "v1.0.0",
      "displayName": "",
      "description": "",
      "format": "JSON",
      "model": {
        "id": "550bfe31-5015-a0d1-b695-369c97b4e903",
        "schemaVersion": "models.meshery.io/v1beta1",
        "version": "v1.0.0",
        "name": "meshery-core",
        "displayName": "Meshery Core",
        "status": "enabled",
        "registrant": {
          "id": "98027e7d-9e16-e4f0-6dbd-83f3ac0d9856",
          "name": "meshery",
          "credential_id": "00000000-0000-0000-0000-000000000000",
          "type": "registry",
          "sub_type": "",
          "kind": "meshery",
          "status": "registered",
          "user_id": "00000000-0000-0000-0000-000000000000",
          "created_at": "2025-06-30T22:11:57.571508862Z",
          "updated_at": "2025-06-30T22:11:57.571508862Z",
          "deleted_at": "0001-01-01T00:00:00Z"
        },
        "connection_id": "98027e7d-9e16-e4f0-6dbd-83f3ac0d9856",
        "category": {
          "id": "9ca27d0d-66ce-42a9-8c85-6236563f2ddb",
          "name": "Orchestration \u0026 Management"
        },
        "subCategory": "Application Definition \u0026 Image Build",
        "metadata": {
          "isAnnotation": false,
          "primaryColor": "#00B39F",
          "secondaryColor": "#00D3A9",
          "shape": "circle",
          "styleOverrides": "",
          "svgColor": "ui/public/static/img/meshmodels/meshery-core/color/meshery-core-color.svg",
          "svgComplete": "",
          "svgWhite": "ui/public/static/img/meshmodels/meshery-core/white/meshery-core-white.svg"
        },
        "model": {
          "version": "0.7.2"
        },
        "components_count": 0,
        "relationships_count": 0,
        "components": null,
        "relationships": null
      },
      "styles": {
        "background-image": "none",
        "background-opacity": 0,
        "body-text": "",
        "body-text-color": "#808080",
        "body-text-font-family": "Qanelas Soft",
        "body-text-font-size": 12,
        "body-text-font-weight": "400",
        "body-text-horizontal-align": "center",
        "body-text-text-decoration": "none",
        "body-text-vertical-align": "center",
        "border-style": "dashed",
        "border-width": 1,
        "data": {
          "label": ""
        },
        "height": 30,
        "opacity": 1,
        "padding": 6,
        "position": {
          "x": 426.0597803628574,
          "y": 777.0723848959035
        },
        "primaryColor": "#00B39F",
        "secondaryColor": "#00D3A9",
        "shape": "rectangle",
        "svgColor": "ui/public/static/img/meshmodels/meshery-core/color/section-color.svg",
        "svgComplete": "",
        "svgWhite": "ui/public/static/img/meshmodels/meshery-core/white/section-white.svg",
        "width": 30,
        "z-index": 76
      },
      "capabilities": [],
      "status": "enabled",
      "metadata": {
        "configurationUISchema": "",
        "genealogy": "parent",
        "hasInvalidSchema": true,
        "instanceDetails": null,
        "isAnnotation": true,
        "isNamespaced": false,
        "published": false
      },
      "configuration": {},
      "component": {
        "version": "core.meshery.io/v1alpha1",
        "kind": "Section",
        "schema": ""
      }
    },
    {
      "id": "0b92eea0-5acd-459f-9b59-085a8962af9c",
      "schemaVersion": "components.meshery.io/v1beta1",
      "version": "v1.0.0",
      "displayName": "cert-manager",
      "description": "",
      "format": "",
      "model": {
        "id": "e633cca6-b6e1-65bf-a440-0d58915e75dd",
        "schemaVersion": "models.meshery.io/v1beta1",
        "version": "v1.0.0",
        "name": "kubernetes",
        "displayName": "Kubernetes",
        "status": "enabled",
        "registrant": {
          "id": "f9a29d70-c287-426c-a90c-2a96590c8083",
          "name": "Github",
          "credential_id": "00000000-0000-0000-0000-000000000000",
          "type": "registry",
          "sub_type": "",
          "kind": "github",
          "status": "registered",
          "user_id": "00000000-0000-0000-0000-000000000000",
          "created_at": "2025-06-22T05:56:58.393994634Z",
          "updated_at": "2025-06-22T05:56:58.393994634Z",
          "deleted_at": "0001-01-01T00:00:00Z"
        },
        "connection_id": "f9a29d70-c287-426c-a90c-2a96590c8083",
        "category": {
          "id": "9ca27d0d-66ce-42a9-8c85-6236563f2ddb",
          "name": "Orchestration \u0026 Management"
        },
        "subCategory": "Scheduling \u0026 Orchestration",
        "metadata": {
          "isAnnotation": false,
          "primaryColor": "#326CE5",
          "secondaryColor": "#7aa1f0",
          "shape": "circle",
          "styleOverrides": "",
          "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/kubernetes-color.svg",
          "svgComplete": "",
          "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/kubernetes-white.svg"
        },
        "model": {
          "version": "v1.32.0-alpha.3"
        },
        "components_count": 0,
        "relationships_count": 0,
        "components": null,
        "relationships": null
      },
      "styles": {
        "background-position-y": "4.5",
        "height": 20,
        "padding": 12,
        "position": {
          "x": 575.0836798336798,
          "y": -181.95547536108467
        },
        "primaryColor": "#326CE5",
        "secondaryColor": "#7aa1f0",
        "shape": "round-triangle",
        "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/service-color.svg",
        "svgComplete": "",
        "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/service-white.svg",
        "width": 20,
        "z-index": 42
      },
      "capabilities": [],
      "status": "enabled",
      "metadata": {
        "configurationUISchema": "",
        "genealogy": "",
        "instanceDetails": null,
        "isAnnotation": false,
        "isNamespaced": true,
        "published": false,
        "source_uri": "git://github.com/kubernetes/kubernetes/master/api/openapi-spec/v3"
      },
      "configuration": {
        "metadata": {
          "labels": {
            "app": "cert-manager",
            "app.kubernetes.io/component": "controller",
            "app.kubernetes.io/instance": "cert-manager",
            "app.kubernetes.io/name": "cert-manager",
            "app.kubernetes.io/version": "v1.14.1"
          },
          "name": "cert-manager",
          "namespace": "cert-manager"
        },
        "spec": {
          "ports": [
            {
              "name": "tcp-prometheus-servicemonitor",
              "port": 9402,
              "protocol": "TCP",
              "targetPort": 9402
            }
          ],
          "selector": {
            "app.kubernetes.io/component": "controller",
            "app.kubernetes.io/instance": "cert-manager",
            "app.kubernetes.io/name": "cert-manager"
          },
          "type": "ClusterIP"
        }
      },
      "component": {
        "version": "v1",
        "kind": "Service",
        "schema": ""
      }
    },
    {
      "id": "f520b3fc-be04-4f09-9e68-d84fc1ba017c",
      "schemaVersion": "components.meshery.io/v1beta1",
      "version": "v1.0.0",
      "displayName": "cert-manager-webhook",
      "description": "",
      "format": "",
      "model": {
        "id": "e633cca6-b6e1-65bf-a440-0d58915e75dd",
        "schemaVersion": "models.meshery.io/v1beta1",
        "version": "v1.0.0",
        "name": "kubernetes",
        "displayName": "Kubernetes",
        "status": "enabled",
        "registrant": {
          "id": "f9a29d70-c287-426c-a90c-2a96590c8083",
          "name": "Github",
          "credential_id": "00000000-0000-0000-0000-000000000000",
          "type": "registry",
          "sub_type": "",
          "kind": "github",
          "status": "registered",
          "user_id": "00000000-0000-0000-0000-000000000000",
          "created_at": "2025-06-22T05:56:58.393994634Z",
          "updated_at": "2025-06-22T05:56:58.393994634Z",
          "deleted_at": "0001-01-01T00:00:00Z"
        },
        "connection_id": "f9a29d70-c287-426c-a90c-2a96590c8083",
        "category": {
          "id": "9ca27d0d-66ce-42a9-8c85-6236563f2ddb",
          "name": "Orchestration \u0026 Management"
        },
        "subCategory": "Scheduling \u0026 Orchestration",
        "metadata": {
          "isAnnotation": false,
          "primaryColor": "#326CE5",
          "secondaryColor": "#7aa1f0",
          "shape": "circle",
          "styleOverrides": "",
          "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/kubernetes-color.svg",
          "svgComplete": "",
          "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/kubernetes-white.svg"
        },
        "model": {
          "version": "v1.32.0-alpha.3"
        },
        "components_count": 0,
        "relationships_count": 0,
        "components": null,
        "relationships": null
      },
      "styles": {
        "background-position-y": "4.5",
        "height": 20,
        "padding": 12,
        "position": {
          "x": 575.0836798336798,
          "y": -53.955475361084666
        },
        "primaryColor": "#326CE5",
        "secondaryColor": "#7aa1f0",
        "shape": "round-triangle",
        "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/service-color.svg",
        "svgComplete": "",
        "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/service-white.svg",
        "width": 20,
        "z-index": 43
      },
      "capabilities": [],
      "status": "enabled",
      "metadata": {
        "configurationUISchema": "",
        "genealogy": "",
        "instanceDetails": null,
        "isAnnotation": false,
        "isNamespaced": true,
        "published": false,
        "source_uri": "git://github.com/kubernetes/kubernetes/master/api/openapi-spec/v3"
      },
      "configuration": {
        "metadata": {
          "labels": {
            "app": "webhook",
            "app.kubernetes.io/component": "webhook",
            "app.kubernetes.io/instance": "cert-manager",
            "app.kubernetes.io/name": "webhook",
            "app.kubernetes.io/version": "v1.14.1"
          },
          "name": "cert-manager-webhook",
          "namespace": "cert-manager"
        },
        "spec": {
          "ports": [
            {
              "name": "https",
              "port": 443,
              "protocol": "TCP",
              "targetPort": "https"
            }
          ],
          "selector": {
            "app.kubernetes.io/component": "webhook",
            "app.kubernetes.io/instance": "cert-manager",
            "app.kubernetes.io/name": "webhook"
          },
          "type": "ClusterIP"
        }
      },
      "component": {
        "version": "v1",
        "kind": "Service",
        "schema": ""
      }
    },
    {
      "id": "81e4ccc2-f6e0-4020-b521-d22f565ce82d",
      "schemaVersion": "components.meshery.io/v1beta1",
      "version": "v1.0.0",
      "displayName": "azureserviceoperator-webhook-service",
      "description": "",
      "format": "",
      "model": {
        "id": "e633cca6-b6e1-65bf-a440-0d58915e75dd",
        "schemaVersion": "models.meshery.io/v1beta1",
        "version": "v1.0.0",
        "name": "kubernetes",
        "displayName": "Kubernetes",
        "status": "enabled",
        "registrant": {
          "id": "f9a29d70-c287-426c-a90c-2a96590c8083",
          "name": "Github",
          "credential_id": "00000000-0000-0000-0000-000000000000",
          "type": "registry",
          "sub_type": "",
          "kind": "github",
          "status": "registered",
          "user_id": "00000000-0000-0000-0000-000000000000",
          "created_at": "2025-06-22T05:56:58.393994634Z",
          "updated_at": "2025-06-22T05:56:58.393994634Z",
          "deleted_at": "0001-01-01T00:00:00Z"
        },
        "connection_id": "f9a29d70-c287-426c-a90c-2a96590c8083",
        "category": {
          "id": "9ca27d0d-66ce-42a9-8c85-6236563f2ddb",
          "name": "Orchestration \u0026 Management"
        },
        "subCategory": "Scheduling \u0026 Orchestration",
        "metadata": {
          "isAnnotation": false,
          "primaryColor": "#326CE5",
          "secondaryColor": "#7aa1f0",
          "shape": "circle",
          "styleOverrides": "",
          "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/kubernetes-color.svg",
          "svgComplete": "",
          "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/kubernetes-white.svg"
        },
        "model": {
          "version": "v1.32.0-alpha.3"
        },
        "components_count": 0,
        "relationships_count": 0,
        "components": null,
        "relationships": null
      },
      "styles": {
        "background-position-y": "4.5",
        "height": 20,
        "padding": 12,
        "position": {
          "x": 19.534121383163814,
          "y": 103.62130521893428
        },
        "primaryColor": "#326CE5",
        "secondaryColor": "#7aa1f0",
        "shape": "round-triangle",
        "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/service-color.svg",
        "svgComplete": "",
        "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/service-white.svg",
        "width": 20,
        "z-index": 71
      },
      "capabilities": [],
      "status": "enabled",
      "metadata": {
        "configurationUISchema": "",
        "genealogy": "",
        "instanceDetails": null,
        "isAnnotation": false,
        "isNamespaced": true,
        "published": false,
        "source_uri": "git://github.com/kubernetes/kubernetes/master/api/openapi-spec/v3"
      },
      "configuration": {
        "metadata": {
          "labels": {
            "app.kubernetes.io/name": "azure-service-operator",
            "app.kubernetes.io/version": "v2.13.0"
          },
          "name": "azureserviceoperator-webhook-service",
          "namespace": "azureserviceoperator-system"
        },
        "spec": {
          "ports": [
            {
              "port": 443,
              "targetPort": 9443
            }
          ],
          "selector": {
            "control-plane": "controller-manager"
          }
        }
      },
      "component": {
        "version": "v1",
        "kind": "Service",
        "schema": ""
      }
    },
    {
      "id": "9cdedfe3-17ea-4c1e-b07e-abf36d3dd9c7",
      "schemaVersion": "components.meshery.io/v1beta1",
      "version": "v1.0.0",
      "displayName": "azureserviceoperator-controller-manager-metrics-service",
      "description": "",
      "format": "",
      "model": {
        "id": "e633cca6-b6e1-65bf-a440-0d58915e75dd",
        "schemaVersion": "models.meshery.io/v1beta1",
        "version": "v1.0.0",
        "name": "kubernetes",
        "displayName": "Kubernetes",
        "status": "enabled",
        "registrant": {
          "id": "f9a29d70-c287-426c-a90c-2a96590c8083",
          "name": "Github",
          "credential_id": "00000000-0000-0000-0000-000000000000",
          "type": "registry",
          "sub_type": "",
          "kind": "github",
          "status": "registered",
          "user_id": "00000000-0000-0000-0000-000000000000",
          "created_at": "2025-06-22T05:56:58.393994634Z",
          "updated_at": "2025-06-22T05:56:58.393994634Z",
          "deleted_at": "0001-01-01T00:00:00Z"
        },
        "connection_id": "f9a29d70-c287-426c-a90c-2a96590c8083",
        "category": {
          "id": "9ca27d0d-66ce-42a9-8c85-6236563f2ddb",
          "name": "Orchestration \u0026 Management"
        },
        "subCategory": "Scheduling \u0026 Orchestration",
        "metadata": {
          "isAnnotation": false,
          "primaryColor": "#326CE5",
          "secondaryColor": "#7aa1f0",
          "shape": "circle",
          "styleOverrides": "",
          "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/kubernetes-color.svg",
          "svgComplete": "",
          "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/kubernetes-white.svg"
        },
        "model": {
          "version": "v1.32.0-alpha.3"
        },
        "components_count": 0,
        "relationships_count": 0,
        "components": null,
        "relationships": null
      },
      "styles": {
        "background-position-y": "4.5",
        "height": 20,
        "padding": 12,
        "position": {
          "x": -72.40766655862411,
          "y": 245.8437584413876
        },
        "primaryColor": "#326CE5",
        "secondaryColor": "#7aa1f0",
        "shape": "round-triangle",
        "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/service-color.svg",
        "svgComplete": "",
        "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/service-white.svg",
        "width": 20,
        "z-index": 72
      },
      "capabilities": [],
      "status": "enabled",
      "metadata": {
        "configurationUISchema": "",
        "genealogy": "",
        "instanceDetails": null,
        "isAnnotation": false,
        "isNamespaced": true,
        "published": false,
        "source_uri": "git://github.com/kubernetes/kubernetes/master/api/openapi-spec/v3"
      },
      "configuration": {
        "metadata": {
          "labels": {
            "app.kubernetes.io/name": "azure-service-operator",
            "app.kubernetes.io/version": "v2.13.0",
            "control-plane": "controller-manager"
          },
          "name": "azureserviceoperator-controller-manager-metrics-service",
          "namespace": "azureserviceoperator-system"
        },
        "spec": {
          "ports": [
            {
              "name": "metrics",
              "port": 8443
            }
          ],
          "selector": {
            "control-plane": "controller-manager"
          }
        }
      },
      "component": {
        "version": "v1",
        "kind": "Service",
        "schema": ""
      }
    },
    {
      "id": "8020ae58-3287-429c-a6f0-4eaa7c9d182c",
      "schemaVersion": "components.meshery.io/v1beta1",
      "version": "v1.0.0",
      "displayName": "cert-manager",
      "description": "",
      "format": "",
      "model": {
        "id": "e633cca6-b6e1-65bf-a440-0d58915e75dd",
        "schemaVersion": "models.meshery.io/v1beta1",
        "version": "v1.0.0",
        "name": "kubernetes",
        "displayName": "Kubernetes",
        "status": "enabled",
        "registrant": {
          "id": "f9a29d70-c287-426c-a90c-2a96590c8083",
          "name": "Github",
          "credential_id": "00000000-0000-0000-0000-000000000000",
          "type": "registry",
          "sub_type": "",
          "kind": "github",
          "status": "registered",
          "user_id": "00000000-0000-0000-0000-000000000000",
          "created_at": "2025-06-22T05:56:58.393994634Z",
          "updated_at": "2025-06-22T05:56:58.393994634Z",
          "deleted_at": "0001-01-01T00:00:00Z"
        },
        "connection_id": "f9a29d70-c287-426c-a90c-2a96590c8083",
        "category": {
          "id": "9ca27d0d-66ce-42a9-8c85-6236563f2ddb",
          "name": "Orchestration \u0026 Management"
        },
        "subCategory": "Scheduling \u0026 Orchestration",
        "metadata": {
          "isAnnotation": false,
          "primaryColor": "#326CE5",
          "secondaryColor": "#7aa1f0",
          "shape": "circle",
          "styleOverrides": "",
          "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/kubernetes-color.svg",
          "svgComplete": "",
          "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/kubernetes-white.svg"
        },
        "model": {
          "version": "v1.32.0-alpha.3"
        },
        "components_count": 0,
        "relationships_count": 0,
        "components": null,
        "relationships": null
      },
      "styles": {
        "position": {
          "x": 781.0836798336798,
          "y": 66.04452463891533
        },
        "primaryColor": "#326CE5",
        "secondaryColor": "#7aa1f0",
        "shape": "bottom-round-rectangle",
        "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/serviceaccount-color.svg",
        "svgComplete": "",
        "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/serviceaccount-white.svg",
        "z-index": 12
      },
      "capabilities": [],
      "status": "enabled",
      "metadata": {
        "configurationUISchema": "",
        "genealogy": "",
        "instanceDetails": null,
        "isAnnotation": false,
        "isNamespaced": true,
        "published": false,
        "source_uri": "git://github.com/kubernetes/kubernetes/master/api/openapi-spec/v3"
      },
      "configuration": {
        "automountServiceAccountToken": true,
        "imagePullSecrets": [],
        "metadata": {
          "labels": {
            "app": "cert-manager",
            "app.kubernetes.io/component": "controller",
            "app.kubernetes.io/instance": "cert-manager",
            "app.kubernetes.io/name": "cert-manager",
            "app.kubernetes.io/version": "v1.14.1"
          },
          "name": "cert-manager",
          "namespace": "cert-manager"
        },
        "secrets": []
      },
      "component": {
        "version": "v1",
        "kind": "ServiceAccount",
        "schema": ""
      }
    },
    {
      "id": "345fb78a-0c6d-4547-a801-18d05eb9cbb1",
      "schemaVersion": "components.meshery.io/v1beta1",
      "version": "v1.0.0",
      "displayName": "cert-manager-cainjector",
      "description": "",
      "format": "",
      "model": {
        "id": "e633cca6-b6e1-65bf-a440-0d58915e75dd",
        "schemaVersion": "models.meshery.io/v1beta1",
        "version": "v1.0.0",
        "name": "kubernetes",
        "displayName": "Kubernetes",
        "status": "enabled",
        "registrant": {
          "id": "f9a29d70-c287-426c-a90c-2a96590c8083",
          "name": "Github",
          "credential_id": "00000000-0000-0000-0000-000000000000",
          "type": "registry",
          "sub_type": "",
          "kind": "github",
          "status": "registered",
          "user_id": "00000000-0000-0000-0000-000000000000",
          "created_at": "2025-06-22T05:56:58.393994634Z",
          "updated_at": "2025-06-22T05:56:58.393994634Z",
          "deleted_at": "0001-01-01T00:00:00Z"
        },
        "connection_id": "f9a29d70-c287-426c-a90c-2a96590c8083",
        "category": {
          "id": "9ca27d0d-66ce-42a9-8c85-6236563f2ddb",
          "name": "Orchestration \u0026 Management"
        },
        "subCategory": "Scheduling \u0026 Orchestration",
        "metadata": {
          "isAnnotation": false,
          "primaryColor": "#326CE5",
          "secondaryColor": "#7aa1f0",
          "shape": "circle",
          "styleOverrides": "",
          "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/kubernetes-color.svg",
          "svgComplete": "",
          "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/kubernetes-white.svg"
        },
        "model": {
          "version": "v1.32.0-alpha.3"
        },
        "components_count": 0,
        "relationships_count": 0,
        "components": null,
        "relationships": null
      },
      "styles": {
        "position": {
          "x": 771.0836798336798,
          "y": 254.04452463891533
        },
        "primaryColor": "#326CE5",
        "secondaryColor": "#7aa1f0",
        "shape": "bottom-round-rectangle",
        "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/serviceaccount-color.svg",
        "svgComplete": "",
        "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/serviceaccount-white.svg",
        "z-index": 11
      },
      "capabilities": [],
      "status": "enabled",
      "metadata": {
        "configurationUISchema": "",
        "genealogy": "",
        "instanceDetails": null,
        "isAnnotation": false,
        "isNamespaced": true,
        "published": false,
        "source_uri": "git://github.com/kubernetes/kubernetes/master/api/openapi-spec/v3"
      },
      "configuration": {
        "automountServiceAccountToken": true,
        "metadata": {
          "labels": {
            "app": "cainjector",
            "app.kubernetes.io/component": "cainjector",
            "app.kubernetes.io/instance": "cert-manager",
            "app.kubernetes.io/name": "cainjector",
            "app.kubernetes.io/version": "v1.14.1"
          },
          "name": "cert-manager-cainjector",
          "namespace": "cert-manager"
        }
      },
      "component": {
        "version": "v1",
        "kind": "ServiceAccount",
        "schema": ""
      }
    },
    {
      "id": "e678a048-8c95-4f49-8045-5cd96370ecf2",
      "schemaVersion": "components.meshery.io/v1beta1",
      "version": "v1.0.0",
      "displayName": "cert-manager-webhook",
      "description": "",
      "format": "",
      "model": {
        "id": "e633cca6-b6e1-65bf-a440-0d58915e75dd",
        "schemaVersion": "models.meshery.io/v1beta1",
        "version": "v1.0.0",
        "name": "kubernetes",
        "displayName": "Kubernetes",
        "status": "enabled",
        "registrant": {
          "id": "f9a29d70-c287-426c-a90c-2a96590c8083",
          "name": "Github",
          "credential_id": "00000000-0000-0000-0000-000000000000",
          "type": "registry",
          "sub_type": "",
          "kind": "github",
          "status": "registered",
          "user_id": "00000000-0000-0000-0000-000000000000",
          "created_at": "2025-06-22T05:56:58.393994634Z",
          "updated_at": "2025-06-22T05:56:58.393994634Z",
          "deleted_at": "0001-01-01T00:00:00Z"
        },
        "connection_id": "f9a29d70-c287-426c-a90c-2a96590c8083",
        "category": {
          "id": "9ca27d0d-66ce-42a9-8c85-6236563f2ddb",
          "name": "Orchestration \u0026 Management"
        },
        "subCategory": "Scheduling \u0026 Orchestration",
        "metadata": {
          "isAnnotation": false,
          "primaryColor": "#326CE5",
          "secondaryColor": "#7aa1f0",
          "shape": "circle",
          "styleOverrides": "",
          "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/kubernetes-color.svg",
          "svgComplete": "",
          "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/kubernetes-white.svg"
        },
        "model": {
          "version": "v1.32.0-alpha.3"
        },
        "components_count": 0,
        "relationships_count": 0,
        "components": null,
        "relationships": null
      },
      "styles": {
        "position": {
          "x": 781.0836798336798,
          "y": 160.04452463891533
        },
        "primaryColor": "#326CE5",
        "secondaryColor": "#7aa1f0",
        "shape": "bottom-round-rectangle",
        "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/serviceaccount-color.svg",
        "svgComplete": "",
        "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/serviceaccount-white.svg",
        "z-index": 13
      },
      "capabilities": [],
      "status": "enabled",
      "metadata": {
        "configurationUISchema": "",
        "genealogy": "",
        "instanceDetails": null,
        "isAnnotation": false,
        "isNamespaced": true,
        "published": false,
        "source_uri": "git://github.com/kubernetes/kubernetes/master/api/openapi-spec/v3"
      },
      "configuration": {
        "automountServiceAccountToken": true,
        "metadata": {
          "labels": {
            "app": "webhook",
            "app.kubernetes.io/component": "webhook",
            "app.kubernetes.io/instance": "cert-manager",
            "app.kubernetes.io/name": "webhook",
            "app.kubernetes.io/version": "v1.14.1"
          },
          "name": "cert-manager-webhook",
          "namespace": "cert-manager"
        }
      },
      "component": {
        "version": "v1",
        "kind": "ServiceAccount",
        "schema": ""
      }
    },
    {
      "id": "1327b2fc-d03f-46c3-9772-f39a70707d95",
      "schemaVersion": "components.meshery.io/v1beta1",
      "version": "v1.0.0",
      "displayName": "azureserviceoperator-default",
      "description": "",
      "format": "",
      "model": {
        "id": "e633cca6-b6e1-65bf-a440-0d58915e75dd",
        "schemaVersion": "models.meshery.io/v1beta1",
        "version": "v1.0.0",
        "name": "kubernetes",
        "displayName": "Kubernetes",
        "status": "enabled",
        "registrant": {
          "id": "f9a29d70-c287-426c-a90c-2a96590c8083",
          "name": "Github",
          "credential_id": "00000000-0000-0000-0000-000000000000",
          "type": "registry",
          "sub_type": "",
          "kind": "github",
          "status": "registered",
          "user_id": "00000000-0000-0000-0000-000000000000",
          "created_at": "2025-06-22T05:56:58.393994634Z",
          "updated_at": "2025-06-22T05:56:58.393994634Z",
          "deleted_at": "0001-01-01T00:00:00Z"
        },
        "connection_id": "f9a29d70-c287-426c-a90c-2a96590c8083",
        "category": {
          "id": "9ca27d0d-66ce-42a9-8c85-6236563f2ddb",
          "name": "Orchestration \u0026 Management"
        },
        "subCategory": "Scheduling \u0026 Orchestration",
        "metadata": {
          "isAnnotation": false,
          "primaryColor": "#326CE5",
          "secondaryColor": "#7aa1f0",
          "shape": "circle",
          "styleOverrides": "",
          "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/kubernetes-color.svg",
          "svgComplete": "",
          "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/kubernetes-white.svg"
        },
        "model": {
          "version": "v1.32.0-alpha.3"
        },
        "components_count": 0,
        "relationships_count": 0,
        "components": null,
        "relationships": null
      },
      "styles": {
        "position": {
          "x": 72.68796753700998,
          "y": 151.0287896264187
        },
        "primaryColor": "#326CE5",
        "secondaryColor": "#7aa1f0",
        "shape": "bottom-round-rectangle",
        "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/serviceaccount-color.svg",
        "svgComplete": "",
        "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/serviceaccount-white.svg",
        "z-index": 73
      },
      "capabilities": [],
      "status": "enabled",
      "metadata": {
        "configurationUISchema": "",
        "genealogy": "",
        "instanceDetails": null,
        "isAnnotation": false,
        "isNamespaced": true,
        "published": false,
        "source_uri": "git://github.com/kubernetes/kubernetes/master/api/openapi-spec/v3"
      },
      "configuration": {
        "metadata": {
          "labels": {
            "app.kubernetes.io/name": "azure-service-operator"
          },
          "name": "azureserviceoperator-default",
          "namespace": "azureserviceoperator-system"
        }
      },
      "component": {
        "version": "v1",
        "kind": "ServiceAccount",
        "schema": ""
      }
    },
    {
      "id": "1ebd06d9-6aae-4a47-977f-f73ec35faf35",
      "schemaVersion": "components.meshery.io/v1beta1",
      "version": "v1.0.0",
      "displayName": "",
      "description": "",
      "format": "JSON",
      "model": {
        "id": "550bfe31-5015-a0d1-b695-369c97b4e903",
        "schemaVersion": "models.meshery.io/v1beta1",
        "version": "v1.0.0",
        "name": "meshery-core",
        "displayName": "Meshery Core",
        "status": "enabled",
        "registrant": {
          "id": "98027e7d-9e16-e4f0-6dbd-83f3ac0d9856",
          "name": "meshery",
          "credential_id": "00000000-0000-0000-0000-000000000000",
          "type": "registry",
          "sub_type": "",
          "kind": "meshery",
          "status": "registered",
          "user_id": "00000000-0000-0000-0000-000000000000",
          "created_at": "2025-06-22T05:57:00.309106049Z",
          "updated_at": "2025-06-22T05:57:00.309106049Z",
          "deleted_at": "0001-01-01T00:00:00Z"
        },
        "connection_id": "98027e7d-9e16-e4f0-6dbd-83f3ac0d9856",
        "category": {
          "id": "9ca27d0d-66ce-42a9-8c85-6236563f2ddb",
          "name": "Orchestration \u0026 Management"
        },
        "subCategory": "Application Definition \u0026 Image Build",
        "metadata": {
          "isAnnotation": false,
          "primaryColor": "#00B39F",
          "secondaryColor": "#00D3A9",
          "shape": "circle",
          "styleOverrides": "",
          "svgColor": "ui/public/static/img/meshmodels/meshery-core/color/meshery-core-color.svg",
          "svgComplete": "",
          "svgWhite": "ui/public/static/img/meshmodels/meshery-core/white/meshery-core-white.svg"
        },
        "model": {
          "version": "0.7.2"
        },
        "components_count": 0,
        "relationships_count": 0,
        "components": null,
        "relationships": null
      },
      "styles": {
        "background-image": "none",
        "background-opacity": 0.7,
        "body-text": "You need to update the values inside the secret aso-controller-settings.\nIt is present inside the azureserviceoperator-system namespace\n\nUpdate the string data:\nAZURE_SUBSCRIPTION_ID\nAZURE_TENANT_ID\nAZURE_CLIENT_ID\nAZURE_CLIENT_SECRET",
        "body-text-color": "rgb(255,255,255)",
        "body-text-font-family": "Qanelas Soft",
        "body-text-font-size": 18,
        "body-text-font-weight": "400",
        "body-text-horizontal-align": "center",
        "body-text-text-decoration": "none",
        "body-text-vertical-align": "center",
        "border-color": "#808080",
        "border-style": "dashed",
        "border-width": 1,
        "data": {
          "label": ""
        },
        "height": 217.89243,
        "opacity": 1,
        "padding": 6,
        "position": {
          "x": -520.6268604487263,
          "y": 361.02458757254635
        },
        "primaryColor": "rgb(0,211,169)",
        "secondaryColor": "#FFDE00",
        "shape": "rectangle",
        "svgColor": "ui/public/static/img/meshmodels/meshery-core/color/textbox-color.svg",
        "svgComplete": "",
        "svgWhite": "ui/public/static/img/meshmodels/meshery-core/white/textbox-white.svg",
        "width": 293.6011,
        "z-index": 51
      },
      "capabilities": [],
      "status": "enabled",
      "metadata": {
        "configurationUISchema": "",
        "genealogy": "",
        "hasInvalidSchema": true,
        "instanceDetails": null,
        "isAnnotation": true,
        "isNamespaced": false,
        "published": false
      },
      "configuration": {},
      "component": {
        "version": "core.meshery.io/v1alpha1",
        "kind": "TextBox",
        "schema": ""
      }
    },
    {
      "id": "4ccb8b77-15d8-45f7-8d6e-8a87dadd3d41",
      "schemaVersion": "components.meshery.io/v1beta1",
      "version": "v1.0.0",
      "displayName": "",
      "description": "",
      "format": "JSON",
      "model": {
        "id": "550bfe31-5015-a0d1-b695-369c97b4e903",
        "schemaVersion": "models.meshery.io/v1beta1",
        "version": "v1.0.0",
        "name": "meshery-core",
        "displayName": "Meshery Core",
        "status": "enabled",
        "registrant": {
          "id": "98027e7d-9e16-e4f0-6dbd-83f3ac0d9856",
          "name": "meshery",
          "credential_id": "00000000-0000-0000-0000-000000000000",
          "type": "registry",
          "sub_type": "",
          "kind": "meshery",
          "status": "registered",
          "user_id": "00000000-0000-0000-0000-000000000000",
          "created_at": "2025-06-22T05:57:00.309106049Z",
          "updated_at": "2025-06-22T05:57:00.309106049Z",
          "deleted_at": "0001-01-01T00:00:00Z"
        },
        "connection_id": "98027e7d-9e16-e4f0-6dbd-83f3ac0d9856",
        "category": {
          "id": "9ca27d0d-66ce-42a9-8c85-6236563f2ddb",
          "name": "Orchestration \u0026 Management"
        },
        "subCategory": "Application Definition \u0026 Image Build",
        "metadata": {
          "isAnnotation": false,
          "primaryColor": "#00B39F",
          "secondaryColor": "#00D3A9",
          "shape": "circle",
          "styleOverrides": "",
          "svgColor": "ui/public/static/img/meshmodels/meshery-core/color/meshery-core-color.svg",
          "svgComplete": "",
          "svgWhite": "ui/public/static/img/meshmodels/meshery-core/white/meshery-core-white.svg"
        },
        "model": {
          "version": "0.7.2"
        },
        "components_count": 0,
        "relationships_count": 0,
        "components": null,
        "relationships": null
      },
      "styles": {
        "background-image": "none",
        "background-opacity": 0,
        "body-text": "",
        "body-text-color": "#808080",
        "body-text-font-family": "Qanelas Soft",
        "body-text-font-size": 12,
        "body-text-font-weight": "400",
        "body-text-horizontal-align": "center",
        "body-text-text-decoration": "none",
        "body-text-vertical-align": "center",
        "border-color": "#808080",
        "border-style": "dashed",
        "border-width": 1,
        "data": {
          "label": ""
        },
        "height": 60,
        "opacity": 1,
        "padding": 6,
        "position": {
          "x": 454.10466548195353,
          "y": 390.6915031186593
        },
        "primaryColor": "#00B39F",
        "secondaryColor": "#FFDE00",
        "shape": "rectangle",
        "svgColor": "ui/public/static/img/meshmodels/meshery-core/color/textbox-color.svg",
        "svgComplete": "",
        "svgWhite": "ui/public/static/img/meshmodels/meshery-core/white/textbox-white.svg",
        "width": 180,
        "z-index": 50
      },
      "capabilities": [],
      "status": "enabled",
      "metadata": {
        "configurationUISchema": "",
        "genealogy": "",
        "hasInvalidSchema": true,
        "instanceDetails": null,
        "isAnnotation": true,
        "isNamespaced": false,
        "published": false
      },
      "configuration": {},
      "component": {
        "version": "core.meshery.io/v1alpha1",
        "kind": "TextBox",
        "schema": ""
      }
    },
    {
      "id": "cf2dcc02-0756-4538-af43-0927d1572992",
      "schemaVersion": "components.meshery.io/v1beta1",
      "version": "v1.0.0",
      "displayName": "azureserviceoperator-validating-webhook-configuration",
      "description": "",
      "format": "",
      "model": {
        "id": "e633cca6-b6e1-65bf-a440-0d58915e75dd",
        "schemaVersion": "models.meshery.io/v1beta1",
        "version": "v1.0.0",
        "name": "kubernetes",
        "displayName": "Kubernetes",
        "status": "enabled",
        "registrant": {
          "id": "f9a29d70-c287-426c-a90c-2a96590c8083",
          "name": "Github",
          "credential_id": "00000000-0000-0000-0000-000000000000",
          "type": "registry",
          "sub_type": "",
          "kind": "github",
          "status": "registered",
          "user_id": "00000000-0000-0000-0000-000000000000",
          "created_at": "2025-06-22T05:56:58.393994634Z",
          "updated_at": "2025-06-22T05:56:58.393994634Z",
          "deleted_at": "0001-01-01T00:00:00Z"
        },
        "connection_id": "f9a29d70-c287-426c-a90c-2a96590c8083",
        "category": {
          "id": "9ca27d0d-66ce-42a9-8c85-6236563f2ddb",
          "name": "Orchestration \u0026 Management"
        },
        "subCategory": "Scheduling \u0026 Orchestration",
        "metadata": {
          "isAnnotation": false,
          "primaryColor": "#326CE5",
          "secondaryColor": "#7aa1f0",
          "shape": "circle",
          "styleOverrides": "",
          "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/kubernetes-color.svg",
          "svgComplete": "",
          "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/kubernetes-white.svg"
        },
        "model": {
          "version": "v1.32.0-alpha.3"
        },
        "components_count": 0,
        "relationships_count": 0,
        "components": null,
        "relationships": null
      },
      "styles": {
        "position": {
          "x": -23.00655903164403,
          "y": 26.770640308113265
        },
        "primaryColor": "#326CE5",
        "secondaryColor": "#7aa1f0",
        "shape": "heptagon",
        "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/validatingwebhookconfiguration-color.svg",
        "svgComplete": "",
        "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/validatingwebhookconfiguration-white.svg",
        "z-index": 74
      },
      "capabilities": [],
      "status": "enabled",
      "metadata": {
        "configurationUISchema": "",
        "genealogy": "",
        "instanceDetails": null,
        "isAnnotation": false,
        "isNamespaced": false,
        "published": false,
        "source_uri": "git://github.com/kubernetes/kubernetes/master/api/openapi-spec/v3"
      },
      "configuration": {
        "metadata": {
          "annotations": {
            "cert-manager.io/inject-ca-from": "azureserviceoperator-system/azureserviceoperator-serving-cert"
          },
          "name": "azureserviceoperator-validating-webhook-configuration"
        },
        "webhooks": [
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-alertsmanagement-azure-com-v1api20210401-smartdetectoralertrule"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20210401.smartdetectoralertrules.alertsmanagement.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "alertsmanagement.azure.com"
                ],
                "apiVersions": [
                  "v1api20210401"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "smartdetectoralertrules"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-alertsmanagement-azure-com-v1api20230301-prometheusrulegroup"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20230301.prometheusrulegroups.alertsmanagement.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "alertsmanagement.azure.com"
                ],
                "apiVersions": [
                  "v1api20230301"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "prometheusrulegroups"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-apimanagement-azure-com-v1api20220801-api"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20220801.apis.apimanagement.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "apimanagement.azure.com"
                ],
                "apiVersions": [
                  "v1api20220801"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "apis"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-apimanagement-azure-com-v1api20220801-apiversionset"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20220801.apiversionsets.apimanagement.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "apimanagement.azure.com"
                ],
                "apiVersions": [
                  "v1api20220801"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "apiversionsets"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-apimanagement-azure-com-v1api20220801-authorizationprovider"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20220801.authorizationproviders.apimanagement.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "apimanagement.azure.com"
                ],
                "apiVersions": [
                  "v1api20220801"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "authorizationproviders"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-apimanagement-azure-com-v1api20220801-authorizationprovidersauthorization"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20220801.authorizationprovidersauthorizations.apimanagement.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "apimanagement.azure.com"
                ],
                "apiVersions": [
                  "v1api20220801"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "authorizationprovidersauthorizations"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-apimanagement-azure-com-v1api20220801-authorizationprovidersauthorizationsaccesspolicy"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20220801.authorizationprovidersauthorizationsaccesspolicies.apimanagement.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "apimanagement.azure.com"
                ],
                "apiVersions": [
                  "v1api20220801"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "authorizationprovidersauthorizationsaccesspolicies"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-apimanagement-azure-com-v1api20220801-backend"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20220801.backends.apimanagement.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "apimanagement.azure.com"
                ],
                "apiVersions": [
                  "v1api20220801"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "backends"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-apimanagement-azure-com-v1api20220801-namedvalue"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20220801.namedvalues.apimanagement.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "apimanagement.azure.com"
                ],
                "apiVersions": [
                  "v1api20220801"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "namedvalues"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-apimanagement-azure-com-v1api20220801-policy"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20220801.policies.apimanagement.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "apimanagement.azure.com"
                ],
                "apiVersions": [
                  "v1api20220801"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "policies"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-apimanagement-azure-com-v1api20220801-policyfragment"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20220801.policyfragments.apimanagement.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "apimanagement.azure.com"
                ],
                "apiVersions": [
                  "v1api20220801"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "policyfragments"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-apimanagement-azure-com-v1api20220801-productapi"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20220801.productapis.apimanagement.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "apimanagement.azure.com"
                ],
                "apiVersions": [
                  "v1api20220801"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "productapis"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-apimanagement-azure-com-v1api20220801-productpolicy"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20220801.productpolicies.apimanagement.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "apimanagement.azure.com"
                ],
                "apiVersions": [
                  "v1api20220801"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "productpolicies"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-apimanagement-azure-com-v1api20220801-product"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20220801.products.apimanagement.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "apimanagement.azure.com"
                ],
                "apiVersions": [
                  "v1api20220801"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "products"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-apimanagement-azure-com-v1api20220801-service"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20220801.services.apimanagement.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "apimanagement.azure.com"
                ],
                "apiVersions": [
                  "v1api20220801"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "services"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-apimanagement-azure-com-v1api20220801-subscription"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20220801.subscriptions.apimanagement.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "apimanagement.azure.com"
                ],
                "apiVersions": [
                  "v1api20220801"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "subscriptions"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-apimanagement-azure-com-v1api20230501preview-api"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20230501preview.apis.apimanagement.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "apimanagement.azure.com"
                ],
                "apiVersions": [
                  "v1api20230501preview"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "apis"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-apimanagement-azure-com-v1api20230501preview-apiversionset"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20230501preview.apiversionsets.apimanagement.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "apimanagement.azure.com"
                ],
                "apiVersions": [
                  "v1api20230501preview"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "apiversionsets"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-apimanagement-azure-com-v1api20230501preview-authorizationprovider"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20230501preview.authorizationproviders.apimanagement.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "apimanagement.azure.com"
                ],
                "apiVersions": [
                  "v1api20230501preview"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "authorizationproviders"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-apimanagement-azure-com-v1api20230501preview-authorizationprovidersauthorization"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20230501preview.authorizationprovidersauthorizations.apimanagement.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "apimanagement.azure.com"
                ],
                "apiVersions": [
                  "v1api20230501preview"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "authorizationprovidersauthorizations"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-apimanagement-azure-com-v1api20230501preview-authorizationprovidersauthorizationsaccesspolicy"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20230501preview.authorizationprovidersauthorizationsaccesspolicies.apimanagement.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "apimanagement.azure.com"
                ],
                "apiVersions": [
                  "v1api20230501preview"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "authorizationprovidersauthorizationsaccesspolicies"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-apimanagement-azure-com-v1api20230501preview-backend"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20230501preview.backends.apimanagement.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "apimanagement.azure.com"
                ],
                "apiVersions": [
                  "v1api20230501preview"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "backends"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-apimanagement-azure-com-v1api20230501preview-namedvalue"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20230501preview.namedvalues.apimanagement.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "apimanagement.azure.com"
                ],
                "apiVersions": [
                  "v1api20230501preview"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "namedvalues"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-apimanagement-azure-com-v1api20230501preview-policy"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20230501preview.policies.apimanagement.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "apimanagement.azure.com"
                ],
                "apiVersions": [
                  "v1api20230501preview"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "policies"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-apimanagement-azure-com-v1api20230501preview-policyfragment"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20230501preview.policyfragments.apimanagement.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "apimanagement.azure.com"
                ],
                "apiVersions": [
                  "v1api20230501preview"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "policyfragments"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-apimanagement-azure-com-v1api20230501preview-productapi"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20230501preview.productapis.apimanagement.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "apimanagement.azure.com"
                ],
                "apiVersions": [
                  "v1api20230501preview"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "productapis"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-apimanagement-azure-com-v1api20230501preview-productpolicy"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20230501preview.productpolicies.apimanagement.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "apimanagement.azure.com"
                ],
                "apiVersions": [
                  "v1api20230501preview"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "productpolicies"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-apimanagement-azure-com-v1api20230501preview-product"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20230501preview.products.apimanagement.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "apimanagement.azure.com"
                ],
                "apiVersions": [
                  "v1api20230501preview"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "products"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-apimanagement-azure-com-v1api20230501preview-service"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20230501preview.services.apimanagement.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "apimanagement.azure.com"
                ],
                "apiVersions": [
                  "v1api20230501preview"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "services"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-apimanagement-azure-com-v1api20230501preview-subscription"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20230501preview.subscriptions.apimanagement.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "apimanagement.azure.com"
                ],
                "apiVersions": [
                  "v1api20230501preview"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "subscriptions"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-app-azure-com-v1api20240301-authconfig"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20240301.authconfigs.app.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "app.azure.com"
                ],
                "apiVersions": [
                  "v1api20240301"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "authconfigs"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-app-azure-com-v1api20240301-containerapp"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20240301.containerapps.app.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "app.azure.com"
                ],
                "apiVersions": [
                  "v1api20240301"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "containerapps"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-app-azure-com-v1api20240301-job"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20240301.jobs.app.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "app.azure.com"
                ],
                "apiVersions": [
                  "v1api20240301"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "jobs"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-app-azure-com-v1api20240301-managedenvironment"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20240301.managedenvironments.app.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "app.azure.com"
                ],
                "apiVersions": [
                  "v1api20240301"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "managedenvironments"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-appconfiguration-azure-com-v1api20220501-configurationstore"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20220501.configurationstores.appconfiguration.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "appconfiguration.azure.com"
                ],
                "apiVersions": [
                  "v1api20220501"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "configurationstores"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-authorization-azure-com-v1api20200801preview-roleassignment"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20200801preview.roleassignments.authorization.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "authorization.azure.com"
                ],
                "apiVersions": [
                  "v1api20200801preview"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "roleassignments"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-authorization-azure-com-v1api20220401-roleassignment"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20220401.roleassignments.authorization.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "authorization.azure.com"
                ],
                "apiVersions": [
                  "v1api20220401"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "roleassignments"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-authorization-azure-com-v1api20220401-roledefinition"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20220401.roledefinitions.authorization.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "authorization.azure.com"
                ],
                "apiVersions": [
                  "v1api20220401"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "roledefinitions"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-batch-azure-com-v1api20210101-batchaccount"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20210101.batchaccounts.batch.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "batch.azure.com"
                ],
                "apiVersions": [
                  "v1api20210101"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "batchaccounts"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-cache-azure-com-v1api20201201-redis"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20201201.redis.cache.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "cache.azure.com"
                ],
                "apiVersions": [
                  "v1api20201201"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "redis"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-cache-azure-com-v1api20201201-redisfirewallrule"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20201201.redisfirewallrules.cache.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "cache.azure.com"
                ],
                "apiVersions": [
                  "v1api20201201"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "redisfirewallrules"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-cache-azure-com-v1api20201201-redislinkedserver"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20201201.redislinkedservers.cache.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "cache.azure.com"
                ],
                "apiVersions": [
                  "v1api20201201"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "redislinkedservers"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-cache-azure-com-v1api20201201-redispatchschedule"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20201201.redispatchschedules.cache.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "cache.azure.com"
                ],
                "apiVersions": [
                  "v1api20201201"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "redispatchschedules"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-cache-azure-com-v1api20210301-redisenterprisedatabase"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20210301.redisenterprisedatabases.cache.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "cache.azure.com"
                ],
                "apiVersions": [
                  "v1api20210301"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "redisenterprisedatabases"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-cache-azure-com-v1api20210301-redisenterprise"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20210301.redisenterprises.cache.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "cache.azure.com"
                ],
                "apiVersions": [
                  "v1api20210301"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "redisenterprises"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-cache-azure-com-v1api20230401-redis"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20230401.redis.cache.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "cache.azure.com"
                ],
                "apiVersions": [
                  "v1api20230401"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "redis"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-cache-azure-com-v1api20230401-redisfirewallrule"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20230401.redisfirewallrules.cache.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "cache.azure.com"
                ],
                "apiVersions": [
                  "v1api20230401"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "redisfirewallrules"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-cache-azure-com-v1api20230401-redislinkedserver"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20230401.redislinkedservers.cache.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "cache.azure.com"
                ],
                "apiVersions": [
                  "v1api20230401"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "redislinkedservers"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-cache-azure-com-v1api20230401-redispatchschedule"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20230401.redispatchschedules.cache.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "cache.azure.com"
                ],
                "apiVersions": [
                  "v1api20230401"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "redispatchschedules"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-cache-azure-com-v1api20230701-redisenterprisedatabase"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20230701.redisenterprisedatabases.cache.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "cache.azure.com"
                ],
                "apiVersions": [
                  "v1api20230701"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "redisenterprisedatabases"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-cache-azure-com-v1api20230701-redisenterprise"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20230701.redisenterprises.cache.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "cache.azure.com"
                ],
                "apiVersions": [
                  "v1api20230701"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "redisenterprises"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-cache-azure-com-v1api20230801-redis"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20230801.redis.cache.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "cache.azure.com"
                ],
                "apiVersions": [
                  "v1api20230801"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "redis"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-cache-azure-com-v1api20230801-redisfirewallrule"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20230801.redisfirewallrules.cache.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "cache.azure.com"
                ],
                "apiVersions": [
                  "v1api20230801"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "redisfirewallrules"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-cache-azure-com-v1api20230801-redislinkedserver"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20230801.redislinkedservers.cache.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "cache.azure.com"
                ],
                "apiVersions": [
                  "v1api20230801"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "redislinkedservers"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-cache-azure-com-v1api20230801-redispatchschedule"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20230801.redispatchschedules.cache.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "cache.azure.com"
                ],
                "apiVersions": [
                  "v1api20230801"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "redispatchschedules"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-cdn-azure-com-v1api20210601-profile"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20210601.profiles.cdn.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "cdn.azure.com"
                ],
                "apiVersions": [
                  "v1api20210601"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "profiles"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-cdn-azure-com-v1api20210601-profilesendpoint"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20210601.profilesendpoints.cdn.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "cdn.azure.com"
                ],
                "apiVersions": [
                  "v1api20210601"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "profilesendpoints"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-cdn-azure-com-v1api20230501-afdcustomdomain"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20230501.afdcustomdomains.cdn.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "cdn.azure.com"
                ],
                "apiVersions": [
                  "v1api20230501"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "afdcustomdomains"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-cdn-azure-com-v1api20230501-afdendpoint"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20230501.afdendpoints.cdn.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "cdn.azure.com"
                ],
                "apiVersions": [
                  "v1api20230501"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "afdendpoints"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-cdn-azure-com-v1api20230501-afdorigingroup"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20230501.afdorigingroups.cdn.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "cdn.azure.com"
                ],
                "apiVersions": [
                  "v1api20230501"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "afdorigingroups"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-cdn-azure-com-v1api20230501-afdorigin"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20230501.afdorigins.cdn.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "cdn.azure.com"
                ],
                "apiVersions": [
                  "v1api20230501"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "afdorigins"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-cdn-azure-com-v1api20230501-profile"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20230501.profiles.cdn.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "cdn.azure.com"
                ],
                "apiVersions": [
                  "v1api20230501"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "profiles"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-cdn-azure-com-v1api20230501-route"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20230501.routes.cdn.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "cdn.azure.com"
                ],
                "apiVersions": [
                  "v1api20230501"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "routes"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-cdn-azure-com-v1api20230501-rule"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20230501.rules.cdn.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "cdn.azure.com"
                ],
                "apiVersions": [
                  "v1api20230501"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "rules"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-cdn-azure-com-v1api20230501-ruleset"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20230501.rulesets.cdn.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "cdn.azure.com"
                ],
                "apiVersions": [
                  "v1api20230501"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "rulesets"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-cdn-azure-com-v1api20230501-secret"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20230501.secrets.cdn.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "cdn.azure.com"
                ],
                "apiVersions": [
                  "v1api20230501"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "secrets"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-cdn-azure-com-v1api20230501-securitypolicy"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20230501.securitypolicies.cdn.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "cdn.azure.com"
                ],
                "apiVersions": [
                  "v1api20230501"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "securitypolicies"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-compute-azure-com-v1api20200930-disk"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20200930.disks.compute.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "compute.azure.com"
                ],
                "apiVersions": [
                  "v1api20200930"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "disks"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-compute-azure-com-v1api20200930-snapshot"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20200930.snapshots.compute.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "compute.azure.com"
                ],
                "apiVersions": [
                  "v1api20200930"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "snapshots"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-compute-azure-com-v1api20201201-virtualmachine"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20201201.virtualmachines.compute.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "compute.azure.com"
                ],
                "apiVersions": [
                  "v1api20201201"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "virtualmachines"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-compute-azure-com-v1api20201201-virtualmachinescaleset"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20201201.virtualmachinescalesets.compute.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "compute.azure.com"
                ],
                "apiVersions": [
                  "v1api20201201"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "virtualmachinescalesets"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-compute-azure-com-v1api20201201-virtualmachinescalesetsextension"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20201201.virtualmachinescalesetsextensions.compute.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "compute.azure.com"
                ],
                "apiVersions": [
                  "v1api20201201"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "virtualmachinescalesetsextensions"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-compute-azure-com-v1api20201201-virtualmachinesextension"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20201201.virtualmachinesextensions.compute.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "compute.azure.com"
                ],
                "apiVersions": [
                  "v1api20201201"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "virtualmachinesextensions"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-compute-azure-com-v1api20210701-image"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20210701.images.compute.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "compute.azure.com"
                ],
                "apiVersions": [
                  "v1api20210701"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "images"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-compute-azure-com-v1api20220301-image"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20220301.images.compute.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "compute.azure.com"
                ],
                "apiVersions": [
                  "v1api20220301"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "images"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-compute-azure-com-v1api20220301-virtualmachine"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20220301.virtualmachines.compute.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "compute.azure.com"
                ],
                "apiVersions": [
                  "v1api20220301"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "virtualmachines"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-compute-azure-com-v1api20220301-virtualmachinescaleset"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20220301.virtualmachinescalesets.compute.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "compute.azure.com"
                ],
                "apiVersions": [
                  "v1api20220301"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "virtualmachinescalesets"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-compute-azure-com-v1api20220301-virtualmachinescalesetsextension"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20220301.virtualmachinescalesetsextensions.compute.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "compute.azure.com"
                ],
                "apiVersions": [
                  "v1api20220301"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "virtualmachinescalesetsextensions"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-compute-azure-com-v1api20220301-virtualmachinesextension"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20220301.virtualmachinesextensions.compute.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "compute.azure.com"
                ],
                "apiVersions": [
                  "v1api20220301"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "virtualmachinesextensions"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-compute-azure-com-v1api20220702-diskencryptionset"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20220702.diskencryptionsets.compute.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "compute.azure.com"
                ],
                "apiVersions": [
                  "v1api20220702"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "diskencryptionsets"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-compute-azure-com-v1api20240302-diskaccess"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20240302.diskaccesses.compute.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "compute.azure.com"
                ],
                "apiVersions": [
                  "v1api20240302"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "diskaccesses"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-compute-azure-com-v1api20240302-diskencryptionset"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20240302.diskencryptionsets.compute.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "compute.azure.com"
                ],
                "apiVersions": [
                  "v1api20240302"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "diskencryptionsets"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-compute-azure-com-v1api20240302-disk"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20240302.disks.compute.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "compute.azure.com"
                ],
                "apiVersions": [
                  "v1api20240302"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "disks"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-compute-azure-com-v1api20240302-snapshot"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20240302.snapshots.compute.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "compute.azure.com"
                ],
                "apiVersions": [
                  "v1api20240302"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "snapshots"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-containerinstance-azure-com-v1api20211001-containergroup"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20211001.containergroups.containerinstance.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "containerinstance.azure.com"
                ],
                "apiVersions": [
                  "v1api20211001"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "containergroups"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-containerregistry-azure-com-v1api20210901-registry"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20210901.registries.containerregistry.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "containerregistry.azure.com"
                ],
                "apiVersions": [
                  "v1api20210901"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "registries"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-containerregistry-azure-com-v1api20230701-registry"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20230701.registries.containerregistry.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "containerregistry.azure.com"
                ],
                "apiVersions": [
                  "v1api20230701"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "registries"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-containerregistry-azure-com-v1api20230701-registryreplication"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20230701.registryreplications.containerregistry.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "containerregistry.azure.com"
                ],
                "apiVersions": [
                  "v1api20230701"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "registryreplications"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-containerservice-azure-com-v1api20210501-managedcluster"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20210501.managedclusters.containerservice.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "containerservice.azure.com"
                ],
                "apiVersions": [
                  "v1api20210501"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "managedclusters"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-containerservice-azure-com-v1api20210501-managedclustersagentpool"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20210501.managedclustersagentpools.containerservice.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "containerservice.azure.com"
                ],
                "apiVersions": [
                  "v1api20210501"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "managedclustersagentpools"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-containerservice-azure-com-v1api20230201-managedcluster"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20230201.managedclusters.containerservice.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "containerservice.azure.com"
                ],
                "apiVersions": [
                  "v1api20230201"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "managedclusters"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-containerservice-azure-com-v1api20230201-managedclustersagentpool"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20230201.managedclustersagentpools.containerservice.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "containerservice.azure.com"
                ],
                "apiVersions": [
                  "v1api20230201"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "managedclustersagentpools"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-containerservice-azure-com-v1api20230315preview-fleet"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20230315preview.fleets.containerservice.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "containerservice.azure.com"
                ],
                "apiVersions": [
                  "v1api20230315preview"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "fleets"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-containerservice-azure-com-v1api20230315preview-fleetsmember"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20230315preview.fleetsmembers.containerservice.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "containerservice.azure.com"
                ],
                "apiVersions": [
                  "v1api20230315preview"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "fleetsmembers"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-containerservice-azure-com-v1api20230315preview-fleetsupdaterun"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20230315preview.fleetsupdateruns.containerservice.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "containerservice.azure.com"
                ],
                "apiVersions": [
                  "v1api20230315preview"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "fleetsupdateruns"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-containerservice-azure-com-v1api20231001-managedcluster"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20231001.managedclusters.containerservice.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "containerservice.azure.com"
                ],
                "apiVersions": [
                  "v1api20231001"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "managedclusters"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-containerservice-azure-com-v1api20231001-managedclustersagentpool"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20231001.managedclustersagentpools.containerservice.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "containerservice.azure.com"
                ],
                "apiVersions": [
                  "v1api20231001"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "managedclustersagentpools"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-containerservice-azure-com-v1api20231001-trustedaccessrolebinding"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20231001.trustedaccessrolebindings.containerservice.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "containerservice.azure.com"
                ],
                "apiVersions": [
                  "v1api20231001"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "trustedaccessrolebindings"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-containerservice-azure-com-v1api20231102preview-managedcluster"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20231102preview.managedclusters.containerservice.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "containerservice.azure.com"
                ],
                "apiVersions": [
                  "v1api20231102preview"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "managedclusters"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-containerservice-azure-com-v1api20231102preview-managedclustersagentpool"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20231102preview.managedclustersagentpools.containerservice.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "containerservice.azure.com"
                ],
                "apiVersions": [
                  "v1api20231102preview"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "managedclustersagentpools"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-containerservice-azure-com-v1api20240402preview-managedcluster"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20240402preview.managedclusters.containerservice.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "containerservice.azure.com"
                ],
                "apiVersions": [
                  "v1api20240402preview"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "managedclusters"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-containerservice-azure-com-v1api20240402preview-managedclustersagentpool"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20240402preview.managedclustersagentpools.containerservice.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "containerservice.azure.com"
                ],
                "apiVersions": [
                  "v1api20240402preview"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "managedclustersagentpools"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-containerservice-azure-com-v1api20240402preview-trustedaccessrolebinding"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20240402preview.trustedaccessrolebindings.containerservice.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "containerservice.azure.com"
                ],
                "apiVersions": [
                  "v1api20240402preview"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "trustedaccessrolebindings"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-containerservice-azure-com-v1api20240901-maintenanceconfiguration"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20240901.maintenanceconfigurations.containerservice.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "containerservice.azure.com"
                ],
                "apiVersions": [
                  "v1api20240901"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "maintenanceconfigurations"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-containerservice-azure-com-v1api20240901-managedcluster"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20240901.managedclusters.containerservice.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "containerservice.azure.com"
                ],
                "apiVersions": [
                  "v1api20240901"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "managedclusters"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-containerservice-azure-com-v1api20240901-managedclustersagentpool"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20240901.managedclustersagentpools.containerservice.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "containerservice.azure.com"
                ],
                "apiVersions": [
                  "v1api20240901"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "managedclustersagentpools"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-containerservice-azure-com-v1api20240901-trustedaccessrolebinding"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20240901.trustedaccessrolebindings.containerservice.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "containerservice.azure.com"
                ],
                "apiVersions": [
                  "v1api20240901"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "trustedaccessrolebindings"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-datafactory-azure-com-v1api20180601-factory"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20180601.factories.datafactory.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "datafactory.azure.com"
                ],
                "apiVersions": [
                  "v1api20180601"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "factories"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-dataprotection-azure-com-v1api20230101-backupvault"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20230101.backupvaults.dataprotection.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "dataprotection.azure.com"
                ],
                "apiVersions": [
                  "v1api20230101"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "backupvaults"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-dataprotection-azure-com-v1api20230101-backupvaultsbackuppolicy"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20230101.backupvaultsbackuppolicies.dataprotection.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "dataprotection.azure.com"
                ],
                "apiVersions": [
                  "v1api20230101"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "backupvaultsbackuppolicies"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-dataprotection-azure-com-v1api20231101-backupvault"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20231101.backupvaults.dataprotection.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "dataprotection.azure.com"
                ],
                "apiVersions": [
                  "v1api20231101"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "backupvaults"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-dataprotection-azure-com-v1api20231101-backupvaultsbackupinstance"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20231101.backupvaultsbackupinstances.dataprotection.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "dataprotection.azure.com"
                ],
                "apiVersions": [
                  "v1api20231101"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "backupvaultsbackupinstances"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-dataprotection-azure-com-v1api20231101-backupvaultsbackuppolicy"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20231101.backupvaultsbackuppolicies.dataprotection.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "dataprotection.azure.com"
                ],
                "apiVersions": [
                  "v1api20231101"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "backupvaultsbackuppolicies"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-dbformariadb-azure-com-v1api20180601-configuration"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20180601.configurations.dbformariadb.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "dbformariadb.azure.com"
                ],
                "apiVersions": [
                  "v1api20180601"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "configurations"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-dbformariadb-azure-com-v1api20180601-database"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20180601.databases.dbformariadb.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "dbformariadb.azure.com"
                ],
                "apiVersions": [
                  "v1api20180601"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "databases"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-dbformariadb-azure-com-v1api20180601-server"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20180601.servers.dbformariadb.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "dbformariadb.azure.com"
                ],
                "apiVersions": [
                  "v1api20180601"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "servers"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-dbformysql-azure-com-v1-user"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1.users.dbformysql.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "dbformysql.azure.com"
                ],
                "apiVersions": [
                  "v1"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "users"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-dbformysql-azure-com-v1api20210501-flexibleserver"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20210501.flexibleservers.dbformysql.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "dbformysql.azure.com"
                ],
                "apiVersions": [
                  "v1api20210501"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "flexibleservers"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-dbformysql-azure-com-v1api20210501-flexibleserversdatabase"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20210501.flexibleserversdatabases.dbformysql.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "dbformysql.azure.com"
                ],
                "apiVersions": [
                  "v1api20210501"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "flexibleserversdatabases"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-dbformysql-azure-com-v1api20210501-flexibleserversfirewallrule"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20210501.flexibleserversfirewallrules.dbformysql.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "dbformysql.azure.com"
                ],
                "apiVersions": [
                  "v1api20210501"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "flexibleserversfirewallrules"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-dbformysql-azure-com-v1api20220101-flexibleserversadministrator"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20220101.flexibleserversadministrators.dbformysql.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "dbformysql.azure.com"
                ],
                "apiVersions": [
                  "v1api20220101"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "flexibleserversadministrators"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-dbformysql-azure-com-v1api20220101-flexibleserversconfiguration"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20220101.flexibleserversconfigurations.dbformysql.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "dbformysql.azure.com"
                ],
                "apiVersions": [
                  "v1api20220101"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "flexibleserversconfigurations"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-dbformysql-azure-com-v1api20230630-flexibleserver"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20230630.flexibleservers.dbformysql.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "dbformysql.azure.com"
                ],
                "apiVersions": [
                  "v1api20230630"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "flexibleservers"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-dbformysql-azure-com-v1api20230630-flexibleserversadministrator"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20230630.flexibleserversadministrators.dbformysql.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "dbformysql.azure.com"
                ],
                "apiVersions": [
                  "v1api20230630"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "flexibleserversadministrators"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-dbformysql-azure-com-v1api20230630-flexibleserversconfiguration"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20230630.flexibleserversconfigurations.dbformysql.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "dbformysql.azure.com"
                ],
                "apiVersions": [
                  "v1api20230630"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "flexibleserversconfigurations"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-dbformysql-azure-com-v1api20230630-flexibleserversdatabase"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20230630.flexibleserversdatabases.dbformysql.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "dbformysql.azure.com"
                ],
                "apiVersions": [
                  "v1api20230630"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "flexibleserversdatabases"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-dbformysql-azure-com-v1api20230630-flexibleserversfirewallrule"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20230630.flexibleserversfirewallrules.dbformysql.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "dbformysql.azure.com"
                ],
                "apiVersions": [
                  "v1api20230630"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "flexibleserversfirewallrules"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-dbformysql-azure-com-v1api20231230-flexibleserver"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20231230.flexibleservers.dbformysql.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "dbformysql.azure.com"
                ],
                "apiVersions": [
                  "v1api20231230"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "flexibleservers"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-dbformysql-azure-com-v1api20231230-flexibleserversadministrator"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20231230.flexibleserversadministrators.dbformysql.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "dbformysql.azure.com"
                ],
                "apiVersions": [
                  "v1api20231230"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "flexibleserversadministrators"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-dbformysql-azure-com-v1api20231230-flexibleserversconfiguration"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20231230.flexibleserversconfigurations.dbformysql.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "dbformysql.azure.com"
                ],
                "apiVersions": [
                  "v1api20231230"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "flexibleserversconfigurations"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-dbformysql-azure-com-v1api20231230-flexibleserversdatabase"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20231230.flexibleserversdatabases.dbformysql.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "dbformysql.azure.com"
                ],
                "apiVersions": [
                  "v1api20231230"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "flexibleserversdatabases"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-dbformysql-azure-com-v1api20231230-flexibleserversfirewallrule"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20231230.flexibleserversfirewallrules.dbformysql.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "dbformysql.azure.com"
                ],
                "apiVersions": [
                  "v1api20231230"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "flexibleserversfirewallrules"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-dbforpostgresql-azure-com-v1-user"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1.users.dbforpostgresql.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "dbforpostgresql.azure.com"
                ],
                "apiVersions": [
                  "v1"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "users"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-dbforpostgresql-azure-com-v1api20210601-flexibleserver"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20210601.flexibleservers.dbforpostgresql.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "dbforpostgresql.azure.com"
                ],
                "apiVersions": [
                  "v1api20210601"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "flexibleservers"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-dbforpostgresql-azure-com-v1api20210601-flexibleserversconfiguration"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20210601.flexibleserversconfigurations.dbforpostgresql.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "dbforpostgresql.azure.com"
                ],
                "apiVersions": [
                  "v1api20210601"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "flexibleserversconfigurations"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-dbforpostgresql-azure-com-v1api20210601-flexibleserversdatabase"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20210601.flexibleserversdatabases.dbforpostgresql.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "dbforpostgresql.azure.com"
                ],
                "apiVersions": [
                  "v1api20210601"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "flexibleserversdatabases"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-dbforpostgresql-azure-com-v1api20210601-flexibleserversfirewallrule"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20210601.flexibleserversfirewallrules.dbforpostgresql.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "dbforpostgresql.azure.com"
                ],
                "apiVersions": [
                  "v1api20210601"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "flexibleserversfirewallrules"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-dbforpostgresql-azure-com-v1api20220120preview-flexibleserver"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20220120preview.flexibleservers.dbforpostgresql.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "dbforpostgresql.azure.com"
                ],
                "apiVersions": [
                  "v1api20220120preview"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "flexibleservers"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-dbforpostgresql-azure-com-v1api20220120preview-flexibleserversconfiguration"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20220120preview.flexibleserversconfigurations.dbforpostgresql.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "dbforpostgresql.azure.com"
                ],
                "apiVersions": [
                  "v1api20220120preview"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "flexibleserversconfigurations"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-dbforpostgresql-azure-com-v1api20220120preview-flexibleserversdatabase"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20220120preview.flexibleserversdatabases.dbforpostgresql.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "dbforpostgresql.azure.com"
                ],
                "apiVersions": [
                  "v1api20220120preview"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "flexibleserversdatabases"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-dbforpostgresql-azure-com-v1api20220120preview-flexibleserversfirewallrule"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20220120preview.flexibleserversfirewallrules.dbforpostgresql.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "dbforpostgresql.azure.com"
                ],
                "apiVersions": [
                  "v1api20220120preview"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "flexibleserversfirewallrules"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-dbforpostgresql-azure-com-v1api20221201-flexibleserver"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20221201.flexibleservers.dbforpostgresql.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "dbforpostgresql.azure.com"
                ],
                "apiVersions": [
                  "v1api20221201"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "flexibleservers"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-dbforpostgresql-azure-com-v1api20221201-flexibleserversconfiguration"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20221201.flexibleserversconfigurations.dbforpostgresql.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "dbforpostgresql.azure.com"
                ],
                "apiVersions": [
                  "v1api20221201"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "flexibleserversconfigurations"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-dbforpostgresql-azure-com-v1api20221201-flexibleserversdatabase"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20221201.flexibleserversdatabases.dbforpostgresql.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "dbforpostgresql.azure.com"
                ],
                "apiVersions": [
                  "v1api20221201"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "flexibleserversdatabases"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-dbforpostgresql-azure-com-v1api20221201-flexibleserversfirewallrule"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20221201.flexibleserversfirewallrules.dbforpostgresql.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "dbforpostgresql.azure.com"
                ],
                "apiVersions": [
                  "v1api20221201"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "flexibleserversfirewallrules"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-dbforpostgresql-azure-com-v1api20230601preview-flexibleserver"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20230601preview.flexibleservers.dbforpostgresql.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "dbforpostgresql.azure.com"
                ],
                "apiVersions": [
                  "v1api20230601preview"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "flexibleservers"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-dbforpostgresql-azure-com-v1api20230601preview-flexibleserversconfiguration"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20230601preview.flexibleserversconfigurations.dbforpostgresql.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "dbforpostgresql.azure.com"
                ],
                "apiVersions": [
                  "v1api20230601preview"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "flexibleserversconfigurations"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-dbforpostgresql-azure-com-v1api20230601preview-flexibleserversdatabase"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20230601preview.flexibleserversdatabases.dbforpostgresql.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "dbforpostgresql.azure.com"
                ],
                "apiVersions": [
                  "v1api20230601preview"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "flexibleserversdatabases"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-dbforpostgresql-azure-com-v1api20230601preview-flexibleserversfirewallrule"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20230601preview.flexibleserversfirewallrules.dbforpostgresql.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "dbforpostgresql.azure.com"
                ],
                "apiVersions": [
                  "v1api20230601preview"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "flexibleserversfirewallrules"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-dbforpostgresql-azure-com-v1api20240801-flexibleserver"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20240801.flexibleservers.dbforpostgresql.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "dbforpostgresql.azure.com"
                ],
                "apiVersions": [
                  "v1api20240801"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "flexibleservers"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-dbforpostgresql-azure-com-v1api20240801-flexibleserversadvancedthreatprotectionsettings"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20240801.flexibleserversadvancedthreatprotectionsettings.dbforpostgresql.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "dbforpostgresql.azure.com"
                ],
                "apiVersions": [
                  "v1api20240801"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "flexibleserversadvancedthreatprotectionsettings"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-dbforpostgresql-azure-com-v1api20240801-flexibleserversbackup"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20240801.flexibleserversbackups.dbforpostgresql.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "dbforpostgresql.azure.com"
                ],
                "apiVersions": [
                  "v1api20240801"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "flexibleserversbackups"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-dbforpostgresql-azure-com-v1api20240801-flexibleserversconfiguration"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20240801.flexibleserversconfigurations.dbforpostgresql.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "dbforpostgresql.azure.com"
                ],
                "apiVersions": [
                  "v1api20240801"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "flexibleserversconfigurations"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-dbforpostgresql-azure-com-v1api20240801-flexibleserversdatabase"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20240801.flexibleserversdatabases.dbforpostgresql.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "dbforpostgresql.azure.com"
                ],
                "apiVersions": [
                  "v1api20240801"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "flexibleserversdatabases"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-dbforpostgresql-azure-com-v1api20240801-flexibleserversfirewallrule"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20240801.flexibleserversfirewallrules.dbforpostgresql.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "dbforpostgresql.azure.com"
                ],
                "apiVersions": [
                  "v1api20240801"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "flexibleserversfirewallrules"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-dbforpostgresql-azure-com-v1api20240801-flexibleserversvirtualendpoint"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20240801.flexibleserversvirtualendpoints.dbforpostgresql.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "dbforpostgresql.azure.com"
                ],
                "apiVersions": [
                  "v1api20240801"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "flexibleserversvirtualendpoints"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-devices-azure-com-v1api20210702-iothub"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20210702.iothubs.devices.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "devices.azure.com"
                ],
                "apiVersions": [
                  "v1api20210702"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "iothubs"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-documentdb-azure-com-v1api20210515-databaseaccount"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20210515.databaseaccounts.documentdb.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "documentdb.azure.com"
                ],
                "apiVersions": [
                  "v1api20210515"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "databaseaccounts"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-documentdb-azure-com-v1api20210515-mongodbdatabasecollection"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20210515.mongodbdatabasecollections.documentdb.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "documentdb.azure.com"
                ],
                "apiVersions": [
                  "v1api20210515"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "mongodbdatabasecollections"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-documentdb-azure-com-v1api20210515-mongodbdatabasecollectionthroughputsetting"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20210515.mongodbdatabasecollectionthroughputsettings.documentdb.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "documentdb.azure.com"
                ],
                "apiVersions": [
                  "v1api20210515"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "mongodbdatabasecollectionthroughputsettings"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-documentdb-azure-com-v1api20210515-mongodbdatabase"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20210515.mongodbdatabases.documentdb.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "documentdb.azure.com"
                ],
                "apiVersions": [
                  "v1api20210515"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "mongodbdatabases"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-documentdb-azure-com-v1api20210515-mongodbdatabasethroughputsetting"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20210515.mongodbdatabasethroughputsettings.documentdb.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "documentdb.azure.com"
                ],
                "apiVersions": [
                  "v1api20210515"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "mongodbdatabasethroughputsettings"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-documentdb-azure-com-v1api20210515-sqldatabasecontainer"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20210515.sqldatabasecontainers.documentdb.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "documentdb.azure.com"
                ],
                "apiVersions": [
                  "v1api20210515"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "sqldatabasecontainers"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-documentdb-azure-com-v1api20210515-sqldatabasecontainerstoredprocedure"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20210515.sqldatabasecontainerstoredprocedures.documentdb.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "documentdb.azure.com"
                ],
                "apiVersions": [
                  "v1api20210515"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "sqldatabasecontainerstoredprocedures"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-documentdb-azure-com-v1api20210515-sqldatabasecontainerthroughputsetting"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20210515.sqldatabasecontainerthroughputsettings.documentdb.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "documentdb.azure.com"
                ],
                "apiVersions": [
                  "v1api20210515"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "sqldatabasecontainerthroughputsettings"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-documentdb-azure-com-v1api20210515-sqldatabasecontainertrigger"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20210515.sqldatabasecontainertriggers.documentdb.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "documentdb.azure.com"
                ],
                "apiVersions": [
                  "v1api20210515"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "sqldatabasecontainertriggers"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-documentdb-azure-com-v1api20210515-sqldatabasecontaineruserdefinedfunction"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20210515.sqldatabasecontaineruserdefinedfunctions.documentdb.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "documentdb.azure.com"
                ],
                "apiVersions": [
                  "v1api20210515"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "sqldatabasecontaineruserdefinedfunctions"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-documentdb-azure-com-v1api20210515-sqldatabase"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20210515.sqldatabases.documentdb.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "documentdb.azure.com"
                ],
                "apiVersions": [
                  "v1api20210515"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "sqldatabases"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-documentdb-azure-com-v1api20210515-sqldatabasethroughputsetting"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20210515.sqldatabasethroughputsettings.documentdb.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "documentdb.azure.com"
                ],
                "apiVersions": [
                  "v1api20210515"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "sqldatabasethroughputsettings"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-documentdb-azure-com-v1api20210515-sqlroleassignment"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20210515.sqlroleassignments.documentdb.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "documentdb.azure.com"
                ],
                "apiVersions": [
                  "v1api20210515"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "sqlroleassignments"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-documentdb-azure-com-v1api20231115-databaseaccount"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20231115.databaseaccounts.documentdb.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "documentdb.azure.com"
                ],
                "apiVersions": [
                  "v1api20231115"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "databaseaccounts"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-documentdb-azure-com-v1api20231115-mongodbdatabasecollection"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20231115.mongodbdatabasecollections.documentdb.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "documentdb.azure.com"
                ],
                "apiVersions": [
                  "v1api20231115"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "mongodbdatabasecollections"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-documentdb-azure-com-v1api20231115-mongodbdatabasecollectionthroughputsetting"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20231115.mongodbdatabasecollectionthroughputsettings.documentdb.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "documentdb.azure.com"
                ],
                "apiVersions": [
                  "v1api20231115"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "mongodbdatabasecollectionthroughputsettings"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-documentdb-azure-com-v1api20231115-mongodbdatabase"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20231115.mongodbdatabases.documentdb.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "documentdb.azure.com"
                ],
                "apiVersions": [
                  "v1api20231115"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "mongodbdatabases"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-documentdb-azure-com-v1api20231115-mongodbdatabasethroughputsetting"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20231115.mongodbdatabasethroughputsettings.documentdb.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "documentdb.azure.com"
                ],
                "apiVersions": [
                  "v1api20231115"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "mongodbdatabasethroughputsettings"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-documentdb-azure-com-v1api20231115-sqldatabasecontainer"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20231115.sqldatabasecontainers.documentdb.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "documentdb.azure.com"
                ],
                "apiVersions": [
                  "v1api20231115"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "sqldatabasecontainers"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-documentdb-azure-com-v1api20231115-sqldatabasecontainerstoredprocedure"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20231115.sqldatabasecontainerstoredprocedures.documentdb.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "documentdb.azure.com"
                ],
                "apiVersions": [
                  "v1api20231115"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "sqldatabasecontainerstoredprocedures"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-documentdb-azure-com-v1api20231115-sqldatabasecontainerthroughputsetting"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20231115.sqldatabasecontainerthroughputsettings.documentdb.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "documentdb.azure.com"
                ],
                "apiVersions": [
                  "v1api20231115"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "sqldatabasecontainerthroughputsettings"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-documentdb-azure-com-v1api20231115-sqldatabasecontainertrigger"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20231115.sqldatabasecontainertriggers.documentdb.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "documentdb.azure.com"
                ],
                "apiVersions": [
                  "v1api20231115"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "sqldatabasecontainertriggers"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-documentdb-azure-com-v1api20231115-sqldatabasecontaineruserdefinedfunction"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20231115.sqldatabasecontaineruserdefinedfunctions.documentdb.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "documentdb.azure.com"
                ],
                "apiVersions": [
                  "v1api20231115"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "sqldatabasecontaineruserdefinedfunctions"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-documentdb-azure-com-v1api20231115-sqldatabase"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20231115.sqldatabases.documentdb.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "documentdb.azure.com"
                ],
                "apiVersions": [
                  "v1api20231115"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "sqldatabases"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-documentdb-azure-com-v1api20231115-sqldatabasethroughputsetting"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20231115.sqldatabasethroughputsettings.documentdb.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "documentdb.azure.com"
                ],
                "apiVersions": [
                  "v1api20231115"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "sqldatabasethroughputsettings"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-documentdb-azure-com-v1api20231115-sqlroleassignment"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20231115.sqlroleassignments.documentdb.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "documentdb.azure.com"
                ],
                "apiVersions": [
                  "v1api20231115"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "sqlroleassignments"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-documentdb-azure-com-v1api20240815-databaseaccount"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20240815.databaseaccounts.documentdb.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "documentdb.azure.com"
                ],
                "apiVersions": [
                  "v1api20240815"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "databaseaccounts"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-documentdb-azure-com-v1api20240815-mongodbdatabasecollection"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20240815.mongodbdatabasecollections.documentdb.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "documentdb.azure.com"
                ],
                "apiVersions": [
                  "v1api20240815"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "mongodbdatabasecollections"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-documentdb-azure-com-v1api20240815-mongodbdatabasecollectionthroughputsetting"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20240815.mongodbdatabasecollectionthroughputsettings.documentdb.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "documentdb.azure.com"
                ],
                "apiVersions": [
                  "v1api20240815"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "mongodbdatabasecollectionthroughputsettings"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-documentdb-azure-com-v1api20240815-mongodbdatabase"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20240815.mongodbdatabases.documentdb.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "documentdb.azure.com"
                ],
                "apiVersions": [
                  "v1api20240815"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "mongodbdatabases"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-documentdb-azure-com-v1api20240815-mongodbdatabasethroughputsetting"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20240815.mongodbdatabasethroughputsettings.documentdb.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "documentdb.azure.com"
                ],
                "apiVersions": [
                  "v1api20240815"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "mongodbdatabasethroughputsettings"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-documentdb-azure-com-v1api20240815-mongodbuserdefinition"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20240815.mongodbuserdefinitions.documentdb.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "documentdb.azure.com"
                ],
                "apiVersions": [
                  "v1api20240815"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "mongodbuserdefinitions"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-documentdb-azure-com-v1api20240815-sqldatabasecontainer"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20240815.sqldatabasecontainers.documentdb.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "documentdb.azure.com"
                ],
                "apiVersions": [
                  "v1api20240815"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "sqldatabasecontainers"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-documentdb-azure-com-v1api20240815-sqldatabasecontainerstoredprocedure"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20240815.sqldatabasecontainerstoredprocedures.documentdb.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "documentdb.azure.com"
                ],
                "apiVersions": [
                  "v1api20240815"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "sqldatabasecontainerstoredprocedures"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-documentdb-azure-com-v1api20240815-sqldatabasecontainerthroughputsetting"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20240815.sqldatabasecontainerthroughputsettings.documentdb.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "documentdb.azure.com"
                ],
                "apiVersions": [
                  "v1api20240815"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "sqldatabasecontainerthroughputsettings"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-documentdb-azure-com-v1api20240815-sqldatabasecontainertrigger"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20240815.sqldatabasecontainertriggers.documentdb.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "documentdb.azure.com"
                ],
                "apiVersions": [
                  "v1api20240815"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "sqldatabasecontainertriggers"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-documentdb-azure-com-v1api20240815-sqldatabasecontaineruserdefinedfunction"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20240815.sqldatabasecontaineruserdefinedfunctions.documentdb.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "documentdb.azure.com"
                ],
                "apiVersions": [
                  "v1api20240815"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "sqldatabasecontaineruserdefinedfunctions"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-documentdb-azure-com-v1api20240815-sqldatabase"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20240815.sqldatabases.documentdb.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "documentdb.azure.com"
                ],
                "apiVersions": [
                  "v1api20240815"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "sqldatabases"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-documentdb-azure-com-v1api20240815-sqldatabasethroughputsetting"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20240815.sqldatabasethroughputsettings.documentdb.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "documentdb.azure.com"
                ],
                "apiVersions": [
                  "v1api20240815"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "sqldatabasethroughputsettings"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-documentdb-azure-com-v1api20240815-sqlroleassignment"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20240815.sqlroleassignments.documentdb.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "documentdb.azure.com"
                ],
                "apiVersions": [
                  "v1api20240815"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "sqlroleassignments"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-eventgrid-azure-com-v1api20200601-domain"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20200601.domains.eventgrid.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "eventgrid.azure.com"
                ],
                "apiVersions": [
                  "v1api20200601"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "domains"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-eventgrid-azure-com-v1api20200601-domainstopic"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20200601.domainstopics.eventgrid.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "eventgrid.azure.com"
                ],
                "apiVersions": [
                  "v1api20200601"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "domainstopics"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-eventgrid-azure-com-v1api20200601-eventsubscription"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20200601.eventsubscriptions.eventgrid.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "eventgrid.azure.com"
                ],
                "apiVersions": [
                  "v1api20200601"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "eventsubscriptions"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-eventgrid-azure-com-v1api20200601-topic"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20200601.topics.eventgrid.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "eventgrid.azure.com"
                ],
                "apiVersions": [
                  "v1api20200601"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "topics"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-eventhub-azure-com-v1api20211101-namespace"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20211101.namespaces.eventhub.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "eventhub.azure.com"
                ],
                "apiVersions": [
                  "v1api20211101"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "namespaces"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-eventhub-azure-com-v1api20211101-namespacesauthorizationrule"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20211101.namespacesauthorizationrules.eventhub.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "eventhub.azure.com"
                ],
                "apiVersions": [
                  "v1api20211101"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "namespacesauthorizationrules"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-eventhub-azure-com-v1api20211101-namespaceseventhub"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20211101.namespaceseventhubs.eventhub.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "eventhub.azure.com"
                ],
                "apiVersions": [
                  "v1api20211101"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "namespaceseventhubs"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-eventhub-azure-com-v1api20211101-namespaceseventhubsauthorizationrule"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20211101.namespaceseventhubsauthorizationrules.eventhub.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "eventhub.azure.com"
                ],
                "apiVersions": [
                  "v1api20211101"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "namespaceseventhubsauthorizationrules"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-eventhub-azure-com-v1api20211101-namespaceseventhubsconsumergroup"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20211101.namespaceseventhubsconsumergroups.eventhub.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "eventhub.azure.com"
                ],
                "apiVersions": [
                  "v1api20211101"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "namespaceseventhubsconsumergroups"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-eventhub-azure-com-v1api20240101-namespace"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20240101.namespaces.eventhub.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "eventhub.azure.com"
                ],
                "apiVersions": [
                  "v1api20240101"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "namespaces"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-eventhub-azure-com-v1api20240101-namespacesauthorizationrule"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20240101.namespacesauthorizationrules.eventhub.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "eventhub.azure.com"
                ],
                "apiVersions": [
                  "v1api20240101"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "namespacesauthorizationrules"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-eventhub-azure-com-v1api20240101-namespaceseventhub"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20240101.namespaceseventhubs.eventhub.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "eventhub.azure.com"
                ],
                "apiVersions": [
                  "v1api20240101"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "namespaceseventhubs"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-eventhub-azure-com-v1api20240101-namespaceseventhubsauthorizationrule"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20240101.namespaceseventhubsauthorizationrules.eventhub.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "eventhub.azure.com"
                ],
                "apiVersions": [
                  "v1api20240101"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "namespaceseventhubsauthorizationrules"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-eventhub-azure-com-v1api20240101-namespaceseventhubsconsumergroup"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20240101.namespaceseventhubsconsumergroups.eventhub.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "eventhub.azure.com"
                ],
                "apiVersions": [
                  "v1api20240101"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "namespaceseventhubsconsumergroups"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-insights-azure-com-v1api20180301-metricalert"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20180301.metricalerts.insights.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "insights.azure.com"
                ],
                "apiVersions": [
                  "v1api20180301"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "metricalerts"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-insights-azure-com-v1api20180501preview-webtest"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20180501preview.webtests.insights.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "insights.azure.com"
                ],
                "apiVersions": [
                  "v1api20180501preview"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "webtests"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-insights-azure-com-v1api20200202-component"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20200202.components.insights.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "insights.azure.com"
                ],
                "apiVersions": [
                  "v1api20200202"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "components"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-insights-azure-com-v1api20210501preview-diagnosticsetting"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20210501preview.diagnosticsettings.insights.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "insights.azure.com"
                ],
                "apiVersions": [
                  "v1api20210501preview"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "diagnosticsettings"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-insights-azure-com-v1api20220615-scheduledqueryrule"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20220615.scheduledqueryrules.insights.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "insights.azure.com"
                ],
                "apiVersions": [
                  "v1api20220615"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "scheduledqueryrules"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-insights-azure-com-v1api20220615-webtest"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20220615.webtests.insights.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "insights.azure.com"
                ],
                "apiVersions": [
                  "v1api20220615"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "webtests"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-insights-azure-com-v1api20221001-autoscalesetting"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20221001.autoscalesettings.insights.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "insights.azure.com"
                ],
                "apiVersions": [
                  "v1api20221001"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "autoscalesettings"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-insights-azure-com-v1api20230101-actiongroup"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20230101.actiongroups.insights.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "insights.azure.com"
                ],
                "apiVersions": [
                  "v1api20230101"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "actiongroups"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-insights-azure-com-v1api20240101preview-scheduledqueryrule"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20240101preview.scheduledqueryrules.insights.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "insights.azure.com"
                ],
                "apiVersions": [
                  "v1api20240101preview"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "scheduledqueryrules"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-keyvault-azure-com-v1api20210401preview-vault"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20210401preview.vaults.keyvault.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "keyvault.azure.com"
                ],
                "apiVersions": [
                  "v1api20210401preview"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "vaults"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-keyvault-azure-com-v1api20230701-vault"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20230701.vaults.keyvault.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "keyvault.azure.com"
                ],
                "apiVersions": [
                  "v1api20230701"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "vaults"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-kubernetesconfiguration-azure-com-v1api20230501-extension"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20230501.extensions.kubernetesconfiguration.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "kubernetesconfiguration.azure.com"
                ],
                "apiVersions": [
                  "v1api20230501"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "extensions"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-kubernetesconfiguration-azure-com-v1api20230501-fluxconfiguration"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20230501.fluxconfigurations.kubernetesconfiguration.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "kubernetesconfiguration.azure.com"
                ],
                "apiVersions": [
                  "v1api20230501"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "fluxconfigurations"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-kubernetesconfiguration-azure-com-v1api20241101-extension"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20241101.extensions.kubernetesconfiguration.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "kubernetesconfiguration.azure.com"
                ],
                "apiVersions": [
                  "v1api20241101"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "extensions"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-kubernetesconfiguration-azure-com-v1api20241101-fluxconfiguration"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20241101.fluxconfigurations.kubernetesconfiguration.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "kubernetesconfiguration.azure.com"
                ],
                "apiVersions": [
                  "v1api20241101"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "fluxconfigurations"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-kusto-azure-com-v1api20230815-cluster"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20230815.clusters.kusto.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "kusto.azure.com"
                ],
                "apiVersions": [
                  "v1api20230815"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "clusters"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-kusto-azure-com-v1api20230815-database"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20230815.databases.kusto.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "kusto.azure.com"
                ],
                "apiVersions": [
                  "v1api20230815"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "databases"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-kusto-azure-com-v1api20230815-dataconnection"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20230815.dataconnections.kusto.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "kusto.azure.com"
                ],
                "apiVersions": [
                  "v1api20230815"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "dataconnections"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-machinelearningservices-azure-com-v1api20210701-workspace"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20210701.workspaces.machinelearningservices.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "machinelearningservices.azure.com"
                ],
                "apiVersions": [
                  "v1api20210701"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "workspaces"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-machinelearningservices-azure-com-v1api20210701-workspacescompute"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20210701.workspacescomputes.machinelearningservices.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "machinelearningservices.azure.com"
                ],
                "apiVersions": [
                  "v1api20210701"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "workspacescomputes"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-machinelearningservices-azure-com-v1api20210701-workspacesconnection"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20210701.workspacesconnections.machinelearningservices.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "machinelearningservices.azure.com"
                ],
                "apiVersions": [
                  "v1api20210701"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "workspacesconnections"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-machinelearningservices-azure-com-v1api20240401-registry"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20240401.registries.machinelearningservices.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "machinelearningservices.azure.com"
                ],
                "apiVersions": [
                  "v1api20240401"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "registries"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-machinelearningservices-azure-com-v1api20240401-workspace"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20240401.workspaces.machinelearningservices.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "machinelearningservices.azure.com"
                ],
                "apiVersions": [
                  "v1api20240401"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "workspaces"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-machinelearningservices-azure-com-v1api20240401-workspacescompute"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20240401.workspacescomputes.machinelearningservices.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "machinelearningservices.azure.com"
                ],
                "apiVersions": [
                  "v1api20240401"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "workspacescomputes"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-machinelearningservices-azure-com-v1api20240401-workspacesconnection"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20240401.workspacesconnections.machinelearningservices.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "machinelearningservices.azure.com"
                ],
                "apiVersions": [
                  "v1api20240401"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "workspacesconnections"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-managedidentity-azure-com-v1api20181130-userassignedidentity"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20181130.userassignedidentities.managedidentity.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "managedidentity.azure.com"
                ],
                "apiVersions": [
                  "v1api20181130"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "userassignedidentities"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-managedidentity-azure-com-v1api20220131preview-federatedidentitycredential"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20220131preview.federatedidentitycredentials.managedidentity.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "managedidentity.azure.com"
                ],
                "apiVersions": [
                  "v1api20220131preview"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "federatedidentitycredentials"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-managedidentity-azure-com-v1api20230131-federatedidentitycredential"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20230131.federatedidentitycredentials.managedidentity.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "managedidentity.azure.com"
                ],
                "apiVersions": [
                  "v1api20230131"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "federatedidentitycredentials"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-managedidentity-azure-com-v1api20230131-userassignedidentity"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20230131.userassignedidentities.managedidentity.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "managedidentity.azure.com"
                ],
                "apiVersions": [
                  "v1api20230131"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "userassignedidentities"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-monitor-azure-com-v1api20230403-account"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20230403.accounts.monitor.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "monitor.azure.com"
                ],
                "apiVersions": [
                  "v1api20230403"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "accounts"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-network-frontdoor-azure-com-v1api20220501-webapplicationfirewallpolicy"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20220501.webapplicationfirewallpolicies.network.frontdoor.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "network.frontdoor.azure.com"
                ],
                "apiVersions": [
                  "v1api20220501"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "webapplicationfirewallpolicies"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-network-azure-com-v1api20180501-dnszone"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20180501.dnszones.network.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "network.azure.com"
                ],
                "apiVersions": [
                  "v1api20180501"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "dnszones"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-network-azure-com-v1api20180501-dnszonesaaaarecord"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20180501.dnszonesaaaarecords.network.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "network.azure.com"
                ],
                "apiVersions": [
                  "v1api20180501"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "dnszonesaaaarecords"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-network-azure-com-v1api20180501-dnszonesarecord"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20180501.dnszonesarecords.network.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "network.azure.com"
                ],
                "apiVersions": [
                  "v1api20180501"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "dnszonesarecords"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-network-azure-com-v1api20180501-dnszonescaarecord"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20180501.dnszonescaarecords.network.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "network.azure.com"
                ],
                "apiVersions": [
                  "v1api20180501"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "dnszonescaarecords"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-network-azure-com-v1api20180501-dnszonescnamerecord"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20180501.dnszonescnamerecords.network.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "network.azure.com"
                ],
                "apiVersions": [
                  "v1api20180501"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "dnszonescnamerecords"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-network-azure-com-v1api20180501-dnszonesmxrecord"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20180501.dnszonesmxrecords.network.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "network.azure.com"
                ],
                "apiVersions": [
                  "v1api20180501"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "dnszonesmxrecords"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-network-azure-com-v1api20180501-dnszonesnsrecord"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20180501.dnszonesnsrecords.network.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "network.azure.com"
                ],
                "apiVersions": [
                  "v1api20180501"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "dnszonesnsrecords"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-network-azure-com-v1api20180501-dnszonesptrrecord"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20180501.dnszonesptrrecords.network.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "network.azure.com"
                ],
                "apiVersions": [
                  "v1api20180501"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "dnszonesptrrecords"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-network-azure-com-v1api20180501-dnszonessrvrecord"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20180501.dnszonessrvrecords.network.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "network.azure.com"
                ],
                "apiVersions": [
                  "v1api20180501"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "dnszonessrvrecords"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-network-azure-com-v1api20180501-dnszonestxtrecord"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20180501.dnszonestxtrecords.network.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "network.azure.com"
                ],
                "apiVersions": [
                  "v1api20180501"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "dnszonestxtrecords"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-network-azure-com-v1api20180901-privatednszone"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20180901.privatednszones.network.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "network.azure.com"
                ],
                "apiVersions": [
                  "v1api20180901"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "privatednszones"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-network-azure-com-v1api20200601-privatednszonesaaaarecord"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20200601.privatednszonesaaaarecords.network.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "network.azure.com"
                ],
                "apiVersions": [
                  "v1api20200601"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "privatednszonesaaaarecords"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-network-azure-com-v1api20200601-privatednszonesarecord"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20200601.privatednszonesarecords.network.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "network.azure.com"
                ],
                "apiVersions": [
                  "v1api20200601"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "privatednszonesarecords"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-network-azure-com-v1api20200601-privatednszonescnamerecord"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20200601.privatednszonescnamerecords.network.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "network.azure.com"
                ],
                "apiVersions": [
                  "v1api20200601"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "privatednszonescnamerecords"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-network-azure-com-v1api20200601-privatednszonesmxrecord"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20200601.privatednszonesmxrecords.network.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "network.azure.com"
                ],
                "apiVersions": [
                  "v1api20200601"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "privatednszonesmxrecords"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-network-azure-com-v1api20200601-privatednszonesptrrecord"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20200601.privatednszonesptrrecords.network.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "network.azure.com"
                ],
                "apiVersions": [
                  "v1api20200601"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "privatednszonesptrrecords"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-network-azure-com-v1api20200601-privatednszonessrvrecord"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20200601.privatednszonessrvrecords.network.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "network.azure.com"
                ],
                "apiVersions": [
                  "v1api20200601"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "privatednszonessrvrecords"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-network-azure-com-v1api20200601-privatednszonestxtrecord"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20200601.privatednszonestxtrecords.network.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "network.azure.com"
                ],
                "apiVersions": [
                  "v1api20200601"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "privatednszonestxtrecords"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-network-azure-com-v1api20200601-privatednszonesvirtualnetworklink"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20200601.privatednszonesvirtualnetworklinks.network.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "network.azure.com"
                ],
                "apiVersions": [
                  "v1api20200601"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "privatednszonesvirtualnetworklinks"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-network-azure-com-v1api20201101-loadbalancer"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20201101.loadbalancers.network.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "network.azure.com"
                ],
                "apiVersions": [
                  "v1api20201101"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "loadbalancers"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-network-azure-com-v1api20201101-loadbalancersinboundnatrule"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20201101.loadbalancersinboundnatrules.network.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "network.azure.com"
                ],
                "apiVersions": [
                  "v1api20201101"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "loadbalancersinboundnatrules"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-network-azure-com-v1api20201101-networkinterface"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20201101.networkinterfaces.network.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "network.azure.com"
                ],
                "apiVersions": [
                  "v1api20201101"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "networkinterfaces"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-network-azure-com-v1api20201101-networksecuritygroup"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20201101.networksecuritygroups.network.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "network.azure.com"
                ],
                "apiVersions": [
                  "v1api20201101"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "networksecuritygroups"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-network-azure-com-v1api20201101-networksecuritygroupssecurityrule"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20201101.networksecuritygroupssecurityrules.network.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "network.azure.com"
                ],
                "apiVersions": [
                  "v1api20201101"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "networksecuritygroupssecurityrules"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-network-azure-com-v1api20201101-publicipaddress"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20201101.publicipaddresses.network.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "network.azure.com"
                ],
                "apiVersions": [
                  "v1api20201101"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "publicipaddresses"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-network-azure-com-v1api20201101-routetable"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20201101.routetables.network.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "network.azure.com"
                ],
                "apiVersions": [
                  "v1api20201101"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "routetables"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-network-azure-com-v1api20201101-routetablesroute"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20201101.routetablesroutes.network.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "network.azure.com"
                ],
                "apiVersions": [
                  "v1api20201101"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "routetablesroutes"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-network-azure-com-v1api20201101-virtualnetworkgateway"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20201101.virtualnetworkgateways.network.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "network.azure.com"
                ],
                "apiVersions": [
                  "v1api20201101"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "virtualnetworkgateways"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-network-azure-com-v1api20201101-virtualnetwork"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20201101.virtualnetworks.network.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "network.azure.com"
                ],
                "apiVersions": [
                  "v1api20201101"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "virtualnetworks"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-network-azure-com-v1api20201101-virtualnetworkssubnet"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20201101.virtualnetworkssubnets.network.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "network.azure.com"
                ],
                "apiVersions": [
                  "v1api20201101"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "virtualnetworkssubnets"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-network-azure-com-v1api20201101-virtualnetworksvirtualnetworkpeering"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20201101.virtualnetworksvirtualnetworkpeerings.network.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "network.azure.com"
                ],
                "apiVersions": [
                  "v1api20201101"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "virtualnetworksvirtualnetworkpeerings"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-network-azure-com-v1api20220401-trafficmanagerprofile"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20220401.trafficmanagerprofiles.network.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "network.azure.com"
                ],
                "apiVersions": [
                  "v1api20220401"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "trafficmanagerprofiles"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-network-azure-com-v1api20220401-trafficmanagerprofilesazureendpoint"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20220401.trafficmanagerprofilesazureendpoints.network.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "network.azure.com"
                ],
                "apiVersions": [
                  "v1api20220401"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "trafficmanagerprofilesazureendpoints"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-network-azure-com-v1api20220401-trafficmanagerprofilesexternalendpoint"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20220401.trafficmanagerprofilesexternalendpoints.network.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "network.azure.com"
                ],
                "apiVersions": [
                  "v1api20220401"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "trafficmanagerprofilesexternalendpoints"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-network-azure-com-v1api20220401-trafficmanagerprofilesnestedendpoint"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20220401.trafficmanagerprofilesnestedendpoints.network.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "network.azure.com"
                ],
                "apiVersions": [
                  "v1api20220401"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "trafficmanagerprofilesnestedendpoints"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-network-azure-com-v1api20220701-applicationgateway"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20220701.applicationgateways.network.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "network.azure.com"
                ],
                "apiVersions": [
                  "v1api20220701"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "applicationgateways"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-network-azure-com-v1api20220701-bastionhost"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20220701.bastionhosts.network.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "network.azure.com"
                ],
                "apiVersions": [
                  "v1api20220701"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "bastionhosts"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-network-azure-com-v1api20220701-dnsforwardingruleset"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20220701.dnsforwardingrulesets.network.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "network.azure.com"
                ],
                "apiVersions": [
                  "v1api20220701"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "dnsforwardingrulesets"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-network-azure-com-v1api20220701-dnsforwardingrulesetsforwardingrule"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20220701.dnsforwardingrulesetsforwardingrules.network.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "network.azure.com"
                ],
                "apiVersions": [
                  "v1api20220701"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "dnsforwardingrulesetsforwardingrules"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-network-azure-com-v1api20220701-dnsforwardingrulesetsvirtualnetworklink"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20220701.dnsforwardingrulesetsvirtualnetworklinks.network.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "network.azure.com"
                ],
                "apiVersions": [
                  "v1api20220701"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "dnsforwardingrulesetsvirtualnetworklinks"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-network-azure-com-v1api20220701-dnsresolver"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20220701.dnsresolvers.network.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "network.azure.com"
                ],
                "apiVersions": [
                  "v1api20220701"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "dnsresolvers"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-network-azure-com-v1api20220701-dnsresolversinboundendpoint"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20220701.dnsresolversinboundendpoints.network.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "network.azure.com"
                ],
                "apiVersions": [
                  "v1api20220701"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "dnsresolversinboundendpoints"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-network-azure-com-v1api20220701-dnsresolversoutboundendpoint"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20220701.dnsresolversoutboundendpoints.network.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "network.azure.com"
                ],
                "apiVersions": [
                  "v1api20220701"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "dnsresolversoutboundendpoints"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-network-azure-com-v1api20220701-natgateway"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20220701.natgateways.network.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "network.azure.com"
                ],
                "apiVersions": [
                  "v1api20220701"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "natgateways"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-network-azure-com-v1api20220701-privateendpoint"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20220701.privateendpoints.network.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "network.azure.com"
                ],
                "apiVersions": [
                  "v1api20220701"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "privateendpoints"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-network-azure-com-v1api20220701-privateendpointsprivatednszonegroup"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20220701.privateendpointsprivatednszonegroups.network.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "network.azure.com"
                ],
                "apiVersions": [
                  "v1api20220701"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "privateendpointsprivatednszonegroups"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-network-azure-com-v1api20220701-privatelinkservice"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20220701.privatelinkservices.network.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "network.azure.com"
                ],
                "apiVersions": [
                  "v1api20220701"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "privatelinkservices"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-network-azure-com-v1api20220701-publicipprefix"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20220701.publicipprefixes.network.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "network.azure.com"
                ],
                "apiVersions": [
                  "v1api20220701"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "publicipprefixes"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-network-azure-com-v1api20240101-applicationsecuritygroup"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20240101.applicationsecuritygroups.network.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "network.azure.com"
                ],
                "apiVersions": [
                  "v1api20240101"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "applicationsecuritygroups"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-network-azure-com-v1api20240101-webapplicationfirewallpolicy"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20240101.webapplicationfirewallpolicies.network.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "network.azure.com"
                ],
                "apiVersions": [
                  "v1api20240101"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "webapplicationfirewallpolicies"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-network-azure-com-v1api20240301-bastionhost"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20240301.bastionhosts.network.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "network.azure.com"
                ],
                "apiVersions": [
                  "v1api20240301"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "bastionhosts"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-network-azure-com-v1api20240301-loadbalancer"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20240301.loadbalancers.network.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "network.azure.com"
                ],
                "apiVersions": [
                  "v1api20240301"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "loadbalancers"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-network-azure-com-v1api20240301-loadbalancersinboundnatrule"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20240301.loadbalancersinboundnatrules.network.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "network.azure.com"
                ],
                "apiVersions": [
                  "v1api20240301"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "loadbalancersinboundnatrules"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-network-azure-com-v1api20240301-natgateway"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20240301.natgateways.network.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "network.azure.com"
                ],
                "apiVersions": [
                  "v1api20240301"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "natgateways"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-network-azure-com-v1api20240301-networkinterface"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20240301.networkinterfaces.network.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "network.azure.com"
                ],
                "apiVersions": [
                  "v1api20240301"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "networkinterfaces"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-network-azure-com-v1api20240301-networksecuritygroup"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20240301.networksecuritygroups.network.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "network.azure.com"
                ],
                "apiVersions": [
                  "v1api20240301"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "networksecuritygroups"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-network-azure-com-v1api20240301-networksecuritygroupssecurityrule"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20240301.networksecuritygroupssecurityrules.network.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "network.azure.com"
                ],
                "apiVersions": [
                  "v1api20240301"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "networksecuritygroupssecurityrules"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-network-azure-com-v1api20240301-privateendpoint"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20240301.privateendpoints.network.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "network.azure.com"
                ],
                "apiVersions": [
                  "v1api20240301"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "privateendpoints"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-network-azure-com-v1api20240301-privateendpointsprivatednszonegroup"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20240301.privateendpointsprivatednszonegroups.network.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "network.azure.com"
                ],
                "apiVersions": [
                  "v1api20240301"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "privateendpointsprivatednszonegroups"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-network-azure-com-v1api20240301-privatelinkservice"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20240301.privatelinkservices.network.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "network.azure.com"
                ],
                "apiVersions": [
                  "v1api20240301"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "privatelinkservices"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-network-azure-com-v1api20240301-publicipaddress"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20240301.publicipaddresses.network.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "network.azure.com"
                ],
                "apiVersions": [
                  "v1api20240301"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "publicipaddresses"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-network-azure-com-v1api20240301-publicipprefix"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20240301.publicipprefixes.network.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "network.azure.com"
                ],
                "apiVersions": [
                  "v1api20240301"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "publicipprefixes"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-network-azure-com-v1api20240301-routetable"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20240301.routetables.network.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "network.azure.com"
                ],
                "apiVersions": [
                  "v1api20240301"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "routetables"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-network-azure-com-v1api20240301-routetablesroute"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20240301.routetablesroutes.network.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "network.azure.com"
                ],
                "apiVersions": [
                  "v1api20240301"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "routetablesroutes"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-network-azure-com-v1api20240301-virtualnetworkgateway"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20240301.virtualnetworkgateways.network.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "network.azure.com"
                ],
                "apiVersions": [
                  "v1api20240301"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "virtualnetworkgateways"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-network-azure-com-v1api20240301-virtualnetwork"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20240301.virtualnetworks.network.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "network.azure.com"
                ],
                "apiVersions": [
                  "v1api20240301"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "virtualnetworks"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-network-azure-com-v1api20240301-virtualnetworkssubnet"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20240301.virtualnetworkssubnets.network.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "network.azure.com"
                ],
                "apiVersions": [
                  "v1api20240301"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "virtualnetworkssubnets"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-network-azure-com-v1api20240301-virtualnetworksvirtualnetworkpeering"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20240301.virtualnetworksvirtualnetworkpeerings.network.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "network.azure.com"
                ],
                "apiVersions": [
                  "v1api20240301"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "virtualnetworksvirtualnetworkpeerings"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-network-azure-com-v1api20240601-privatednszone"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20240601.privatednszones.network.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "network.azure.com"
                ],
                "apiVersions": [
                  "v1api20240601"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "privatednszones"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-network-azure-com-v1api20240601-privatednszonesaaaarecord"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20240601.privatednszonesaaaarecords.network.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "network.azure.com"
                ],
                "apiVersions": [
                  "v1api20240601"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "privatednszonesaaaarecords"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-network-azure-com-v1api20240601-privatednszonesarecord"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20240601.privatednszonesarecords.network.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "network.azure.com"
                ],
                "apiVersions": [
                  "v1api20240601"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "privatednszonesarecords"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-network-azure-com-v1api20240601-privatednszonescnamerecord"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20240601.privatednszonescnamerecords.network.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "network.azure.com"
                ],
                "apiVersions": [
                  "v1api20240601"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "privatednszonescnamerecords"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-network-azure-com-v1api20240601-privatednszonesmxrecord"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20240601.privatednszonesmxrecords.network.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "network.azure.com"
                ],
                "apiVersions": [
                  "v1api20240601"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "privatednszonesmxrecords"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-network-azure-com-v1api20240601-privatednszonesptrrecord"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20240601.privatednszonesptrrecords.network.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "network.azure.com"
                ],
                "apiVersions": [
                  "v1api20240601"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "privatednszonesptrrecords"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-network-azure-com-v1api20240601-privatednszonessrvrecord"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20240601.privatednszonessrvrecords.network.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "network.azure.com"
                ],
                "apiVersions": [
                  "v1api20240601"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "privatednszonessrvrecords"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-network-azure-com-v1api20240601-privatednszonestxtrecord"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20240601.privatednszonestxtrecords.network.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "network.azure.com"
                ],
                "apiVersions": [
                  "v1api20240601"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "privatednszonestxtrecords"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-network-azure-com-v1api20240601-privatednszonesvirtualnetworklink"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20240601.privatednszonesvirtualnetworklinks.network.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "network.azure.com"
                ],
                "apiVersions": [
                  "v1api20240601"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "privatednszonesvirtualnetworklinks"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-notificationhubs-azure-com-v1api20230901-namespace"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20230901.namespaces.notificationhubs.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "notificationhubs.azure.com"
                ],
                "apiVersions": [
                  "v1api20230901"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "namespaces"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-notificationhubs-azure-com-v1api20230901-namespacesauthorizationrule"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20230901.namespacesauthorizationrules.notificationhubs.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "notificationhubs.azure.com"
                ],
                "apiVersions": [
                  "v1api20230901"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "namespacesauthorizationrules"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-notificationhubs-azure-com-v1api20230901-notificationhub"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20230901.notificationhubs.notificationhubs.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "notificationhubs.azure.com"
                ],
                "apiVersions": [
                  "v1api20230901"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "notificationhubs"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-notificationhubs-azure-com-v1api20230901-notificationhubsauthorizationrule"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20230901.notificationhubsauthorizationrules.notificationhubs.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "notificationhubs.azure.com"
                ],
                "apiVersions": [
                  "v1api20230901"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "notificationhubsauthorizationrules"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-operationalinsights-azure-com-v1api20210601-workspace"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20210601.workspaces.operationalinsights.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "operationalinsights.azure.com"
                ],
                "apiVersions": [
                  "v1api20210601"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "workspaces"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-redhatopenshift-azure-com-v1api20231122-openshiftcluster"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20231122.openshiftclusters.redhatopenshift.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "redhatopenshift.azure.com"
                ],
                "apiVersions": [
                  "v1api20231122"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "openshiftclusters"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-resources-azure-com-v1api20200601-resourcegroup"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20200601.resourcegroups.resources.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "resources.azure.com"
                ],
                "apiVersions": [
                  "v1api20200601"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "resourcegroups"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-search-azure-com-v1api20220901-searchservice"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20220901.searchservices.search.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "search.azure.com"
                ],
                "apiVersions": [
                  "v1api20220901"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "searchservices"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-servicebus-azure-com-v1api20210101preview-namespace"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20210101preview.namespaces.servicebus.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "servicebus.azure.com"
                ],
                "apiVersions": [
                  "v1api20210101preview"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "namespaces"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-servicebus-azure-com-v1api20210101preview-namespacesauthorizationrule"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20210101preview.namespacesauthorizationrules.servicebus.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "servicebus.azure.com"
                ],
                "apiVersions": [
                  "v1api20210101preview"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "namespacesauthorizationrules"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-servicebus-azure-com-v1api20210101preview-namespacesqueue"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20210101preview.namespacesqueues.servicebus.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "servicebus.azure.com"
                ],
                "apiVersions": [
                  "v1api20210101preview"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "namespacesqueues"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-servicebus-azure-com-v1api20210101preview-namespacestopic"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20210101preview.namespacestopics.servicebus.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "servicebus.azure.com"
                ],
                "apiVersions": [
                  "v1api20210101preview"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "namespacestopics"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-servicebus-azure-com-v1api20210101preview-namespacestopicssubscription"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20210101preview.namespacestopicssubscriptions.servicebus.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "servicebus.azure.com"
                ],
                "apiVersions": [
                  "v1api20210101preview"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "namespacestopicssubscriptions"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-servicebus-azure-com-v1api20210101preview-namespacestopicssubscriptionsrule"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20210101preview.namespacestopicssubscriptionsrules.servicebus.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "servicebus.azure.com"
                ],
                "apiVersions": [
                  "v1api20210101preview"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "namespacestopicssubscriptionsrules"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-servicebus-azure-com-v1api20211101-namespace"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20211101.namespaces.servicebus.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "servicebus.azure.com"
                ],
                "apiVersions": [
                  "v1api20211101"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "namespaces"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-servicebus-azure-com-v1api20211101-namespacesauthorizationrule"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20211101.namespacesauthorizationrules.servicebus.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "servicebus.azure.com"
                ],
                "apiVersions": [
                  "v1api20211101"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "namespacesauthorizationrules"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-servicebus-azure-com-v1api20211101-namespacesqueue"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20211101.namespacesqueues.servicebus.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "servicebus.azure.com"
                ],
                "apiVersions": [
                  "v1api20211101"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "namespacesqueues"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-servicebus-azure-com-v1api20211101-namespacestopic"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20211101.namespacestopics.servicebus.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "servicebus.azure.com"
                ],
                "apiVersions": [
                  "v1api20211101"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "namespacestopics"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-servicebus-azure-com-v1api20211101-namespacestopicssubscription"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20211101.namespacestopicssubscriptions.servicebus.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "servicebus.azure.com"
                ],
                "apiVersions": [
                  "v1api20211101"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "namespacestopicssubscriptions"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-servicebus-azure-com-v1api20211101-namespacestopicssubscriptionsrule"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20211101.namespacestopicssubscriptionsrules.servicebus.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "servicebus.azure.com"
                ],
                "apiVersions": [
                  "v1api20211101"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "namespacestopicssubscriptionsrules"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-servicebus-azure-com-v1api20221001preview-namespace"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20221001preview.namespaces.servicebus.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "servicebus.azure.com"
                ],
                "apiVersions": [
                  "v1api20221001preview"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "namespaces"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-servicebus-azure-com-v1api20221001preview-namespacesauthorizationrule"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20221001preview.namespacesauthorizationrules.servicebus.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "servicebus.azure.com"
                ],
                "apiVersions": [
                  "v1api20221001preview"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "namespacesauthorizationrules"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-servicebus-azure-com-v1api20221001preview-namespacesqueue"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20221001preview.namespacesqueues.servicebus.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "servicebus.azure.com"
                ],
                "apiVersions": [
                  "v1api20221001preview"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "namespacesqueues"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-servicebus-azure-com-v1api20221001preview-namespacestopic"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20221001preview.namespacestopics.servicebus.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "servicebus.azure.com"
                ],
                "apiVersions": [
                  "v1api20221001preview"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "namespacestopics"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-servicebus-azure-com-v1api20221001preview-namespacestopicssubscription"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20221001preview.namespacestopicssubscriptions.servicebus.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "servicebus.azure.com"
                ],
                "apiVersions": [
                  "v1api20221001preview"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "namespacestopicssubscriptions"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-servicebus-azure-com-v1api20221001preview-namespacestopicssubscriptionsrule"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20221001preview.namespacestopicssubscriptionsrules.servicebus.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "servicebus.azure.com"
                ],
                "apiVersions": [
                  "v1api20221001preview"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "namespacestopicssubscriptionsrules"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-servicebus-azure-com-v1api20240101-namespace"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20240101.namespaces.servicebus.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "servicebus.azure.com"
                ],
                "apiVersions": [
                  "v1api20240101"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "namespaces"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-servicebus-azure-com-v1api20240101-namespacesauthorizationrule"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20240101.namespacesauthorizationrules.servicebus.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "servicebus.azure.com"
                ],
                "apiVersions": [
                  "v1api20240101"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "namespacesauthorizationrules"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-servicebus-azure-com-v1api20240101-namespacesqueue"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20240101.namespacesqueues.servicebus.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "servicebus.azure.com"
                ],
                "apiVersions": [
                  "v1api20240101"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "namespacesqueues"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-servicebus-azure-com-v1api20240101-namespacestopic"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20240101.namespacestopics.servicebus.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "servicebus.azure.com"
                ],
                "apiVersions": [
                  "v1api20240101"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "namespacestopics"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-servicebus-azure-com-v1api20240101-namespacestopicssubscription"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20240101.namespacestopicssubscriptions.servicebus.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "servicebus.azure.com"
                ],
                "apiVersions": [
                  "v1api20240101"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "namespacestopicssubscriptions"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-servicebus-azure-com-v1api20240101-namespacestopicssubscriptionsrule"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20240101.namespacestopicssubscriptionsrules.servicebus.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "servicebus.azure.com"
                ],
                "apiVersions": [
                  "v1api20240101"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "namespacestopicssubscriptionsrules"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-servicebus-azure-com-v1api20240101-topicauthorizationrule"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20240101.topicauthorizationrules.servicebus.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "servicebus.azure.com"
                ],
                "apiVersions": [
                  "v1api20240101"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "topicauthorizationrules"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-signalrservice-azure-com-v1api20211001-signalr"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20211001.signalrs.signalrservice.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "signalrservice.azure.com"
                ],
                "apiVersions": [
                  "v1api20211001"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "signalrs"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-signalrservice-azure-com-v1api20240301-customcertificate"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20240301.customcertificates.signalrservice.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "signalrservice.azure.com"
                ],
                "apiVersions": [
                  "v1api20240301"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "customcertificates"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-signalrservice-azure-com-v1api20240301-customdomain"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20240301.customdomains.signalrservice.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "signalrservice.azure.com"
                ],
                "apiVersions": [
                  "v1api20240301"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "customdomains"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-signalrservice-azure-com-v1api20240301-replica"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20240301.replicas.signalrservice.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "signalrservice.azure.com"
                ],
                "apiVersions": [
                  "v1api20240301"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "replicas"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-signalrservice-azure-com-v1api20240301-signalr"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20240301.signalrs.signalrservice.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "signalrservice.azure.com"
                ],
                "apiVersions": [
                  "v1api20240301"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "signalrs"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-sql-azure-com-v1-user"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1.users.sql.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "sql.azure.com"
                ],
                "apiVersions": [
                  "v1"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "users"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-sql-azure-com-v1api20211101-server"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20211101.servers.sql.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "sql.azure.com"
                ],
                "apiVersions": [
                  "v1api20211101"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "servers"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-sql-azure-com-v1api20211101-serversadministrator"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20211101.serversadministrators.sql.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "sql.azure.com"
                ],
                "apiVersions": [
                  "v1api20211101"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "serversadministrators"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-sql-azure-com-v1api20211101-serversadvancedthreatprotectionsetting"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20211101.serversadvancedthreatprotectionsettings.sql.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "sql.azure.com"
                ],
                "apiVersions": [
                  "v1api20211101"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "serversadvancedthreatprotectionsettings"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-sql-azure-com-v1api20211101-serversauditingsetting"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20211101.serversauditingsettings.sql.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "sql.azure.com"
                ],
                "apiVersions": [
                  "v1api20211101"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "serversauditingsettings"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-sql-azure-com-v1api20211101-serversazureadonlyauthentication"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20211101.serversazureadonlyauthentications.sql.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "sql.azure.com"
                ],
                "apiVersions": [
                  "v1api20211101"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "serversazureadonlyauthentications"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-sql-azure-com-v1api20211101-serversconnectionpolicy"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20211101.serversconnectionpolicies.sql.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "sql.azure.com"
                ],
                "apiVersions": [
                  "v1api20211101"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "serversconnectionpolicies"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-sql-azure-com-v1api20211101-serversdatabase"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20211101.serversdatabases.sql.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "sql.azure.com"
                ],
                "apiVersions": [
                  "v1api20211101"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "serversdatabases"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-sql-azure-com-v1api20211101-serversdatabasesadvancedthreatprotectionsetting"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20211101.serversdatabasesadvancedthreatprotectionsettings.sql.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "sql.azure.com"
                ],
                "apiVersions": [
                  "v1api20211101"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "serversdatabasesadvancedthreatprotectionsettings"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-sql-azure-com-v1api20211101-serversdatabasesauditingsetting"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20211101.serversdatabasesauditingsettings.sql.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "sql.azure.com"
                ],
                "apiVersions": [
                  "v1api20211101"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "serversdatabasesauditingsettings"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-sql-azure-com-v1api20211101-serversdatabasesbackuplongtermretentionpolicy"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20211101.serversdatabasesbackuplongtermretentionpolicies.sql.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "sql.azure.com"
                ],
                "apiVersions": [
                  "v1api20211101"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "serversdatabasesbackuplongtermretentionpolicies"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-sql-azure-com-v1api20211101-serversdatabasesbackupshorttermretentionpolicy"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20211101.serversdatabasesbackupshorttermretentionpolicies.sql.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "sql.azure.com"
                ],
                "apiVersions": [
                  "v1api20211101"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "serversdatabasesbackupshorttermretentionpolicies"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-sql-azure-com-v1api20211101-serversdatabasessecurityalertpolicy"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20211101.serversdatabasessecurityalertpolicies.sql.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "sql.azure.com"
                ],
                "apiVersions": [
                  "v1api20211101"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "serversdatabasessecurityalertpolicies"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-sql-azure-com-v1api20211101-serversdatabasestransparentdataencryption"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20211101.serversdatabasestransparentdataencryptions.sql.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "sql.azure.com"
                ],
                "apiVersions": [
                  "v1api20211101"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "serversdatabasestransparentdataencryptions"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-sql-azure-com-v1api20211101-serversdatabasesvulnerabilityassessment"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20211101.serversdatabasesvulnerabilityassessments.sql.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "sql.azure.com"
                ],
                "apiVersions": [
                  "v1api20211101"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "serversdatabasesvulnerabilityassessments"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-sql-azure-com-v1api20211101-serverselasticpool"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20211101.serverselasticpools.sql.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "sql.azure.com"
                ],
                "apiVersions": [
                  "v1api20211101"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "serverselasticpools"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-sql-azure-com-v1api20211101-serversfailovergroup"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20211101.serversfailovergroups.sql.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "sql.azure.com"
                ],
                "apiVersions": [
                  "v1api20211101"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "serversfailovergroups"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-sql-azure-com-v1api20211101-serversfirewallrule"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20211101.serversfirewallrules.sql.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "sql.azure.com"
                ],
                "apiVersions": [
                  "v1api20211101"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "serversfirewallrules"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-sql-azure-com-v1api20211101-serversipv6firewallrule"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20211101.serversipv6firewallrules.sql.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "sql.azure.com"
                ],
                "apiVersions": [
                  "v1api20211101"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "serversipv6firewallrules"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-sql-azure-com-v1api20211101-serversoutboundfirewallrule"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20211101.serversoutboundfirewallrules.sql.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "sql.azure.com"
                ],
                "apiVersions": [
                  "v1api20211101"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "serversoutboundfirewallrules"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-sql-azure-com-v1api20211101-serverssecurityalertpolicy"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20211101.serverssecurityalertpolicies.sql.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "sql.azure.com"
                ],
                "apiVersions": [
                  "v1api20211101"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "serverssecurityalertpolicies"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-sql-azure-com-v1api20211101-serversvirtualnetworkrule"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20211101.serversvirtualnetworkrules.sql.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "sql.azure.com"
                ],
                "apiVersions": [
                  "v1api20211101"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "serversvirtualnetworkrules"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-sql-azure-com-v1api20211101-serversvulnerabilityassessment"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20211101.serversvulnerabilityassessments.sql.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "sql.azure.com"
                ],
                "apiVersions": [
                  "v1api20211101"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "serversvulnerabilityassessments"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-storage-azure-com-v1api20210401-storageaccount"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20210401.storageaccounts.storage.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "storage.azure.com"
                ],
                "apiVersions": [
                  "v1api20210401"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "storageaccounts"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-storage-azure-com-v1api20210401-storageaccountsblobservice"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20210401.storageaccountsblobservices.storage.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "storage.azure.com"
                ],
                "apiVersions": [
                  "v1api20210401"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "storageaccountsblobservices"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-storage-azure-com-v1api20210401-storageaccountsblobservicescontainer"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20210401.storageaccountsblobservicescontainers.storage.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "storage.azure.com"
                ],
                "apiVersions": [
                  "v1api20210401"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "storageaccountsblobservicescontainers"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-storage-azure-com-v1api20210401-storageaccountsmanagementpolicy"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20210401.storageaccountsmanagementpolicies.storage.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "storage.azure.com"
                ],
                "apiVersions": [
                  "v1api20210401"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "storageaccountsmanagementpolicies"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-storage-azure-com-v1api20210401-storageaccountsqueueservice"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20210401.storageaccountsqueueservices.storage.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "storage.azure.com"
                ],
                "apiVersions": [
                  "v1api20210401"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "storageaccountsqueueservices"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-storage-azure-com-v1api20210401-storageaccountsqueueservicesqueue"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20210401.storageaccountsqueueservicesqueues.storage.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "storage.azure.com"
                ],
                "apiVersions": [
                  "v1api20210401"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "storageaccountsqueueservicesqueues"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-storage-azure-com-v1api20220901-storageaccount"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20220901.storageaccounts.storage.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "storage.azure.com"
                ],
                "apiVersions": [
                  "v1api20220901"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "storageaccounts"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-storage-azure-com-v1api20220901-storageaccountsblobservice"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20220901.storageaccountsblobservices.storage.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "storage.azure.com"
                ],
                "apiVersions": [
                  "v1api20220901"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "storageaccountsblobservices"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-storage-azure-com-v1api20220901-storageaccountsblobservicescontainer"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20220901.storageaccountsblobservicescontainers.storage.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "storage.azure.com"
                ],
                "apiVersions": [
                  "v1api20220901"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "storageaccountsblobservicescontainers"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-storage-azure-com-v1api20220901-storageaccountsfileservice"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20220901.storageaccountsfileservices.storage.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "storage.azure.com"
                ],
                "apiVersions": [
                  "v1api20220901"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "storageaccountsfileservices"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-storage-azure-com-v1api20220901-storageaccountsfileservicesshare"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20220901.storageaccountsfileservicesshares.storage.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "storage.azure.com"
                ],
                "apiVersions": [
                  "v1api20220901"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "storageaccountsfileservicesshares"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-storage-azure-com-v1api20220901-storageaccountsmanagementpolicy"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20220901.storageaccountsmanagementpolicies.storage.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "storage.azure.com"
                ],
                "apiVersions": [
                  "v1api20220901"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "storageaccountsmanagementpolicies"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-storage-azure-com-v1api20220901-storageaccountsqueueservice"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20220901.storageaccountsqueueservices.storage.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "storage.azure.com"
                ],
                "apiVersions": [
                  "v1api20220901"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "storageaccountsqueueservices"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-storage-azure-com-v1api20220901-storageaccountsqueueservicesqueue"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20220901.storageaccountsqueueservicesqueues.storage.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "storage.azure.com"
                ],
                "apiVersions": [
                  "v1api20220901"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "storageaccountsqueueservicesqueues"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-storage-azure-com-v1api20220901-storageaccountstableservice"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20220901.storageaccountstableservices.storage.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "storage.azure.com"
                ],
                "apiVersions": [
                  "v1api20220901"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "storageaccountstableservices"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-storage-azure-com-v1api20220901-storageaccountstableservicestable"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20220901.storageaccountstableservicestables.storage.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "storage.azure.com"
                ],
                "apiVersions": [
                  "v1api20220901"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "storageaccountstableservicestables"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-storage-azure-com-v1api20230101-storageaccount"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20230101.storageaccounts.storage.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "storage.azure.com"
                ],
                "apiVersions": [
                  "v1api20230101"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "storageaccounts"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-storage-azure-com-v1api20230101-storageaccountsblobservice"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20230101.storageaccountsblobservices.storage.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "storage.azure.com"
                ],
                "apiVersions": [
                  "v1api20230101"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "storageaccountsblobservices"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-storage-azure-com-v1api20230101-storageaccountsblobservicescontainer"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20230101.storageaccountsblobservicescontainers.storage.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "storage.azure.com"
                ],
                "apiVersions": [
                  "v1api20230101"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "storageaccountsblobservicescontainers"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-storage-azure-com-v1api20230101-storageaccountsfileservice"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20230101.storageaccountsfileservices.storage.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "storage.azure.com"
                ],
                "apiVersions": [
                  "v1api20230101"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "storageaccountsfileservices"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-storage-azure-com-v1api20230101-storageaccountsfileservicesshare"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20230101.storageaccountsfileservicesshares.storage.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "storage.azure.com"
                ],
                "apiVersions": [
                  "v1api20230101"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "storageaccountsfileservicesshares"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-storage-azure-com-v1api20230101-storageaccountsmanagementpolicy"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20230101.storageaccountsmanagementpolicies.storage.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "storage.azure.com"
                ],
                "apiVersions": [
                  "v1api20230101"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "storageaccountsmanagementpolicies"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-storage-azure-com-v1api20230101-storageaccountsqueueservice"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20230101.storageaccountsqueueservices.storage.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "storage.azure.com"
                ],
                "apiVersions": [
                  "v1api20230101"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "storageaccountsqueueservices"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-storage-azure-com-v1api20230101-storageaccountsqueueservicesqueue"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20230101.storageaccountsqueueservicesqueues.storage.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "storage.azure.com"
                ],
                "apiVersions": [
                  "v1api20230101"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "storageaccountsqueueservicesqueues"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-storage-azure-com-v1api20230101-storageaccountstableservice"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20230101.storageaccountstableservices.storage.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "storage.azure.com"
                ],
                "apiVersions": [
                  "v1api20230101"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "storageaccountstableservices"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-storage-azure-com-v1api20230101-storageaccountstableservicestable"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20230101.storageaccountstableservicestables.storage.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "storage.azure.com"
                ],
                "apiVersions": [
                  "v1api20230101"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "storageaccountstableservicestables"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-subscription-azure-com-v1api20211001-alias"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20211001.aliases.subscription.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "subscription.azure.com"
                ],
                "apiVersions": [
                  "v1api20211001"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "aliases"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-synapse-azure-com-v1api20210601-workspace"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20210601.workspaces.synapse.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "synapse.azure.com"
                ],
                "apiVersions": [
                  "v1api20210601"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "workspaces"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-synapse-azure-com-v1api20210601-workspacesbigdatapool"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20210601.workspacesbigdatapools.synapse.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "synapse.azure.com"
                ],
                "apiVersions": [
                  "v1api20210601"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "workspacesbigdatapools"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-web-azure-com-v1api20220301-serverfarm"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20220301.serverfarms.web.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "web.azure.com"
                ],
                "apiVersions": [
                  "v1api20220301"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "serverfarms"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-web-azure-com-v1api20220301-site"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20220301.sites.web.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "web.azure.com"
                ],
                "apiVersions": [
                  "v1api20220301"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "sites"
                ]
              }
            ],
            "sideEffects": "None"
          },
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "azureserviceoperator-webhook-service",
                "namespace": "azureserviceoperator-system",
                "path": "/validate-web-azure-com-v1api20220301-sitessourcecontrol"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Exact",
            "name": "validate.v1api20220301.sitessourcecontrols.web.azure.com",
            "rules": [
              {
                "apiGroups": [
                  "web.azure.com"
                ],
                "apiVersions": [
                  "v1api20220301"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "sitessourcecontrols"
                ]
              }
            ],
            "sideEffects": "None"
          }
        ]
      },
      "component": {
        "version": "admissionregistration.k8s.io/v1",
        "kind": "ValidatingWebhookConfiguration",
        "schema": ""
      }
    },
    {
      "id": "66bbed47-b86a-492f-b9bf-a30d225a7bae",
      "schemaVersion": "components.meshery.io/v1beta1",
      "version": "v1.0.0",
      "displayName": "cert-manager-webhook",
      "description": "",
      "format": "",
      "model": {
        "id": "e633cca6-b6e1-65bf-a440-0d58915e75dd",
        "schemaVersion": "models.meshery.io/v1beta1",
        "version": "v1.0.0",
        "name": "kubernetes",
        "displayName": "Kubernetes",
        "status": "enabled",
        "registrant": {
          "id": "f9a29d70-c287-426c-a90c-2a96590c8083",
          "name": "Github",
          "credential_id": "00000000-0000-0000-0000-000000000000",
          "type": "registry",
          "sub_type": "",
          "kind": "github",
          "status": "registered",
          "user_id": "00000000-0000-0000-0000-000000000000",
          "created_at": "2025-06-22T05:56:58.393994634Z",
          "updated_at": "2025-06-22T05:56:58.393994634Z",
          "deleted_at": "0001-01-01T00:00:00Z"
        },
        "connection_id": "f9a29d70-c287-426c-a90c-2a96590c8083",
        "category": {
          "id": "9ca27d0d-66ce-42a9-8c85-6236563f2ddb",
          "name": "Orchestration \u0026 Management"
        },
        "subCategory": "Scheduling \u0026 Orchestration",
        "metadata": {
          "isAnnotation": false,
          "primaryColor": "#326CE5",
          "secondaryColor": "#7aa1f0",
          "shape": "circle",
          "styleOverrides": "",
          "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/kubernetes-color.svg",
          "svgComplete": "",
          "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/kubernetes-white.svg"
        },
        "model": {
          "version": "v1.32.0-alpha.3"
        },
        "components_count": 0,
        "relationships_count": 0,
        "components": null,
        "relationships": null
      },
      "styles": {
        "position": {
          "x": 443.25,
          "y": 654.9114685058594
        },
        "primaryColor": "#326CE5",
        "secondaryColor": "#7aa1f0",
        "shape": "heptagon",
        "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/validatingwebhookconfiguration-color.svg",
        "svgComplete": "",
        "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/validatingwebhookconfiguration-white.svg",
        "z-index": 48
      },
      "capabilities": [],
      "status": "enabled",
      "metadata": {
        "configurationUISchema": "",
        "genealogy": "",
        "instanceDetails": null,
        "isAnnotation": false,
        "isNamespaced": false,
        "published": false,
        "source_uri": "git://github.com/kubernetes/kubernetes/master/api/openapi-spec/v3"
      },
      "configuration": {
        "metadata": {
          "annotations": {
            "cert-manager.io/inject-ca-from-secret": "cert-manager/cert-manager-webhook-ca"
          },
          "labels": {
            "app": "webhook",
            "app.kubernetes.io/component": "webhook",
            "app.kubernetes.io/instance": "cert-manager",
            "app.kubernetes.io/name": "webhook",
            "app.kubernetes.io/version": "v1.14.1"
          },
          "name": "cert-manager-webhook"
        },
        "webhooks": [
          {
            "admissionReviewVersions": [
              "v1"
            ],
            "clientConfig": {
              "service": {
                "name": "cert-manager-webhook",
                "namespace": "cert-manager",
                "path": "/validate"
              }
            },
            "failurePolicy": "Fail",
            "matchPolicy": "Equivalent",
            "name": "webhook.cert-manager.io",
            "namespaceSelector": {
              "matchExpressions": [
                {
                  "key": "cert-manager.io/disable-validation",
                  "operator": "NotIn",
                  "values": [
                    "true"
                  ]
                }
              ]
            },
            "rules": [
              {
                "apiGroups": [
                  "cert-manager.io",
                  "acme.cert-manager.io"
                ],
                "apiVersions": [
                  "v1"
                ],
                "operations": [
                  "CREATE",
                  "UPDATE"
                ],
                "resources": [
                  "*/*"
                ]
              }
            ],
            "sideEffects": "None",
            "timeoutSeconds": 30
          }
        ]
      },
      "component": {
        "version": "admissionregistration.k8s.io/v1",
        "kind": "ValidatingWebhookConfiguration",
        "schema": ""
      }
    }
  ],
  "preferences": {
    "layers": {
      "components": {
        "CustomResourceDefinition-kubernetes": false
      },
      "expandedComponents": {
        "8d12e551-c0c4-4294-8bbb-2b6d35acb737": true
      },
      "relationships": {
        "hierarchical-sibling-matchlabels": false
      }
    }
  },
  "relationships": [
    {
      "id": "1472f4b9-663a-4df8-ba64-f82ad2c6540d",
      "evaluationQuery": null,
      "kind": "hierarchical",
      "metadata": {
        "description": "Namespace to namespaced components",
        "styles": {
          "primaryColor": "",
          "svgColor": "",
          "svgWhite": ""
        },
        "isAnnotation": false
      },
      "model": {
        "id": "e633cca6-b6e1-65bf-a440-0d58915e75dd",
        "schemaVersion": "models.meshery.io/v1beta1",
        "version": "v1.0.0",
        "name": "kubernetes",
        "displayName": "Kubernetes",
        "status": "enabled",
        "registrant": {
          "id": "00000000-0000-0000-0000-000000000000",
          "name": "",
          "credential_id": "00000000-0000-0000-0000-000000000000",
          "type": "",
          "sub_type": "",
          "kind": "",
          "status": "",
          "user_id": "00000000-0000-0000-0000-000000000000",
          "created_at": "0001-01-01T00:00:00Z",
          "updated_at": "0001-01-01T00:00:00Z",
          "deleted_at": "0001-01-01T00:00:00Z"
        },
        "connection_id": "f9a29d70-c287-426c-a90c-2a96590c8083",
        "category": {
          "id": "9ca27d0d-66ce-42a9-8c85-6236563f2ddb",
          "name": "Orchestration \u0026 Management"
        },
        "subCategory": "Scheduling \u0026 Orchestration",
        "metadata": {
          "isAnnotation": false,
          "primaryColor": "#326CE5",
          "secondaryColor": "#7aa1f0",
          "shape": "circle",
          "styleOverrides": "",
          "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/kubernetes-color.svg",
          "svgComplete": "",
          "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/kubernetes-white.svg"
        },
        "model": {
          "version": "v1.32.0-alpha.3"
        },
        "components_count": 0,
        "relationships_count": 0,
        "components": null,
        "relationships": null
      },
      "schemaVersion": "",
      "selectors": [
        {
          "allow": {
            "from": [
              {
                "id": "e9094d62-9fdd-4c67-9a48-a0f9f2606edf",
                "kind": "*",
                "match": {},
                "match_strategy_matrix": null,
                "model": {
                  "id": "00000000-0000-0000-0000-000000000000",
                  "schemaVersion": "",
                  "version": "",
                  "name": "*",
                  "displayName": "",
                  "status": "",
                  "registrant": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": "",
                    "credential_id": "00000000-0000-0000-0000-000000000000",
                    "type": "",
                    "sub_type": "",
                    "kind": "",
                    "status": "",
                    "user_id": "00000000-0000-0000-0000-000000000000",
                    "created_at": "0001-01-01T00:00:00Z",
                    "updated_at": "0001-01-01T00:00:00Z",
                    "deleted_at": "0001-01-01T00:00:00Z"
                  },
                  "connection_id": "00000000-0000-0000-0000-000000000000",
                  "category": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": ""
                  },
                  "subCategory": "",
                  "metadata": null,
                  "model": {
                    "version": ""
                  },
                  "components_count": 0,
                  "relationships_count": 0,
                  "components": null,
                  "relationships": null
                },
                "patch": {
                  "patchStrategy": "replace",
                  "mutatedRef": [
                    [
                      "configuration",
                      "metadata",
                      "namespace"
                    ]
                  ]
                }
              }
            ],
            "to": [
              {
                "id": "bdbf668e-ec96-48a3-9dac-47a5717756fc",
                "kind": "Namespace",
                "match": {},
                "match_strategy_matrix": null,
                "model": {
                  "id": "00000000-0000-0000-0000-000000000000",
                  "schemaVersion": "",
                  "version": "",
                  "name": "kubernetes",
                  "displayName": "",
                  "status": "",
                  "registrant": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": "",
                    "credential_id": "00000000-0000-0000-0000-000000000000",
                    "type": "",
                    "sub_type": "",
                    "kind": "github",
                    "status": "",
                    "user_id": "00000000-0000-0000-0000-000000000000",
                    "created_at": "0001-01-01T00:00:00Z",
                    "updated_at": "0001-01-01T00:00:00Z",
                    "deleted_at": "0001-01-01T00:00:00Z"
                  },
                  "connection_id": "00000000-0000-0000-0000-000000000000",
                  "category": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": ""
                  },
                  "subCategory": "",
                  "metadata": null,
                  "model": {
                    "version": ""
                  },
                  "components_count": 0,
                  "relationships_count": 0,
                  "components": null,
                  "relationships": null
                },
                "patch": {
                  "patchStrategy": "replace",
                  "mutatorRef": [
                    [
                      "displayName"
                    ]
                  ]
                }
              }
            ]
          },
          "deny": {
            "from": [
              {
                "id": null,
                "kind": "Namespace",
                "match": {},
                "match_strategy_matrix": null,
                "model": {
                  "id": "00000000-0000-0000-0000-000000000000",
                  "schemaVersion": "",
                  "version": "",
                  "name": "kubernetes",
                  "displayName": "",
                  "status": "",
                  "registrant": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": "",
                    "credential_id": "00000000-0000-0000-0000-000000000000",
                    "type": "",
                    "sub_type": "",
                    "kind": "github",
                    "status": "",
                    "user_id": "00000000-0000-0000-0000-000000000000",
                    "created_at": "0001-01-01T00:00:00Z",
                    "updated_at": "0001-01-01T00:00:00Z",
                    "deleted_at": "0001-01-01T00:00:00Z"
                  },
                  "connection_id": "00000000-0000-0000-0000-000000000000",
                  "category": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": ""
                  },
                  "subCategory": "",
                  "metadata": null,
                  "model": {
                    "version": ""
                  },
                  "components_count": 0,
                  "relationships_count": 0,
                  "components": null,
                  "relationships": null
                },
                "patch": null
              }
            ],
            "to": [
              {
                "id": null,
                "kind": "Namespace",
                "match": {},
                "match_strategy_matrix": null,
                "model": {
                  "id": "00000000-0000-0000-0000-000000000000",
                  "schemaVersion": "",
                  "version": "",
                  "name": "kubernetes",
                  "displayName": "",
                  "status": "",
                  "registrant": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": "",
                    "credential_id": "00000000-0000-0000-0000-000000000000",
                    "type": "",
                    "sub_type": "",
                    "kind": "github",
                    "status": "",
                    "user_id": "00000000-0000-0000-0000-000000000000",
                    "created_at": "0001-01-01T00:00:00Z",
                    "updated_at": "0001-01-01T00:00:00Z",
                    "deleted_at": "0001-01-01T00:00:00Z"
                  },
                  "connection_id": "00000000-0000-0000-0000-000000000000",
                  "category": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": ""
                  },
                  "subCategory": "",
                  "metadata": null,
                  "model": {
                    "version": ""
                  },
                  "components_count": 0,
                  "relationships_count": 0,
                  "components": null,
                  "relationships": null
                },
                "patch": null
              }
            ]
          }
        }
      ],
      "subType": "inventory",
      "status": "approved",
      "type": "parent",
      "version": ""
    },
    {
      "id": "acae0885-a107-490d-8a84-e03a0bcbc56c",
      "evaluationQuery": null,
      "kind": "hierarchical",
      "metadata": {
        "description": "Namespace to namespaced components",
        "styles": {
          "primaryColor": "",
          "svgColor": "",
          "svgWhite": ""
        },
        "isAnnotation": false
      },
      "model": {
        "id": "e633cca6-b6e1-65bf-a440-0d58915e75dd",
        "schemaVersion": "models.meshery.io/v1beta1",
        "version": "v1.0.0",
        "name": "kubernetes",
        "displayName": "Kubernetes",
        "status": "enabled",
        "registrant": {
          "id": "00000000-0000-0000-0000-000000000000",
          "name": "",
          "credential_id": "00000000-0000-0000-0000-000000000000",
          "type": "",
          "sub_type": "",
          "kind": "",
          "status": "",
          "user_id": "00000000-0000-0000-0000-000000000000",
          "created_at": "0001-01-01T00:00:00Z",
          "updated_at": "0001-01-01T00:00:00Z",
          "deleted_at": "0001-01-01T00:00:00Z"
        },
        "connection_id": "f9a29d70-c287-426c-a90c-2a96590c8083",
        "category": {
          "id": "9ca27d0d-66ce-42a9-8c85-6236563f2ddb",
          "name": "Orchestration \u0026 Management"
        },
        "subCategory": "Scheduling \u0026 Orchestration",
        "metadata": {
          "isAnnotation": false,
          "primaryColor": "#326CE5",
          "secondaryColor": "#7aa1f0",
          "shape": "circle",
          "styleOverrides": "",
          "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/kubernetes-color.svg",
          "svgComplete": "",
          "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/kubernetes-white.svg"
        },
        "model": {
          "version": "v1.32.0-alpha.3"
        },
        "components_count": 0,
        "relationships_count": 0,
        "components": null,
        "relationships": null
      },
      "schemaVersion": "",
      "selectors": [
        {
          "allow": {
            "from": [
              {
                "id": "e9094d62-9fdd-4c67-9a48-a0f9f2606edf",
                "kind": "*",
                "match": {},
                "match_strategy_matrix": null,
                "model": {
                  "id": "00000000-0000-0000-0000-000000000000",
                  "schemaVersion": "",
                  "version": "",
                  "name": "*",
                  "displayName": "",
                  "status": "",
                  "registrant": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": "",
                    "credential_id": "00000000-0000-0000-0000-000000000000",
                    "type": "",
                    "sub_type": "",
                    "kind": "",
                    "status": "",
                    "user_id": "00000000-0000-0000-0000-000000000000",
                    "created_at": "0001-01-01T00:00:00Z",
                    "updated_at": "0001-01-01T00:00:00Z",
                    "deleted_at": "0001-01-01T00:00:00Z"
                  },
                  "connection_id": "00000000-0000-0000-0000-000000000000",
                  "category": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": ""
                  },
                  "subCategory": "",
                  "metadata": null,
                  "model": {
                    "version": ""
                  },
                  "components_count": 0,
                  "relationships_count": 0,
                  "components": null,
                  "relationships": null
                },
                "patch": {
                  "patchStrategy": "replace",
                  "mutatedRef": [
                    [
                      "configuration",
                      "metadata",
                      "namespace"
                    ]
                  ]
                }
              }
            ],
            "to": [
              {
                "id": "bdbf668e-ec96-48a3-9dac-47a5717756fc",
                "kind": "Namespace",
                "match": {},
                "match_strategy_matrix": null,
                "model": {
                  "id": "00000000-0000-0000-0000-000000000000",
                  "schemaVersion": "",
                  "version": "",
                  "name": "kubernetes",
                  "displayName": "",
                  "status": "",
                  "registrant": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": "",
                    "credential_id": "00000000-0000-0000-0000-000000000000",
                    "type": "",
                    "sub_type": "",
                    "kind": "github",
                    "status": "",
                    "user_id": "00000000-0000-0000-0000-000000000000",
                    "created_at": "0001-01-01T00:00:00Z",
                    "updated_at": "0001-01-01T00:00:00Z",
                    "deleted_at": "0001-01-01T00:00:00Z"
                  },
                  "connection_id": "00000000-0000-0000-0000-000000000000",
                  "category": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": ""
                  },
                  "subCategory": "",
                  "metadata": null,
                  "model": {
                    "version": ""
                  },
                  "components_count": 0,
                  "relationships_count": 0,
                  "components": null,
                  "relationships": null
                },
                "patch": {
                  "patchStrategy": "replace",
                  "mutatorRef": [
                    [
                      "displayName"
                    ]
                  ]
                }
              }
            ]
          },
          "deny": {
            "from": [
              {
                "id": null,
                "kind": "Namespace",
                "match": {},
                "match_strategy_matrix": null,
                "model": {
                  "id": "00000000-0000-0000-0000-000000000000",
                  "schemaVersion": "",
                  "version": "",
                  "name": "kubernetes",
                  "displayName": "",
                  "status": "",
                  "registrant": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": "",
                    "credential_id": "00000000-0000-0000-0000-000000000000",
                    "type": "",
                    "sub_type": "",
                    "kind": "github",
                    "status": "",
                    "user_id": "00000000-0000-0000-0000-000000000000",
                    "created_at": "0001-01-01T00:00:00Z",
                    "updated_at": "0001-01-01T00:00:00Z",
                    "deleted_at": "0001-01-01T00:00:00Z"
                  },
                  "connection_id": "00000000-0000-0000-0000-000000000000",
                  "category": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": ""
                  },
                  "subCategory": "",
                  "metadata": null,
                  "model": {
                    "version": ""
                  },
                  "components_count": 0,
                  "relationships_count": 0,
                  "components": null,
                  "relationships": null
                },
                "patch": null
              }
            ],
            "to": [
              {
                "id": null,
                "kind": "Namespace",
                "match": {},
                "match_strategy_matrix": null,
                "model": {
                  "id": "00000000-0000-0000-0000-000000000000",
                  "schemaVersion": "",
                  "version": "",
                  "name": "kubernetes",
                  "displayName": "",
                  "status": "",
                  "registrant": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": "",
                    "credential_id": "00000000-0000-0000-0000-000000000000",
                    "type": "",
                    "sub_type": "",
                    "kind": "github",
                    "status": "",
                    "user_id": "00000000-0000-0000-0000-000000000000",
                    "created_at": "0001-01-01T00:00:00Z",
                    "updated_at": "0001-01-01T00:00:00Z",
                    "deleted_at": "0001-01-01T00:00:00Z"
                  },
                  "connection_id": "00000000-0000-0000-0000-000000000000",
                  "category": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": ""
                  },
                  "subCategory": "",
                  "metadata": null,
                  "model": {
                    "version": ""
                  },
                  "components_count": 0,
                  "relationships_count": 0,
                  "components": null,
                  "relationships": null
                },
                "patch": null
              }
            ]
          }
        }
      ],
      "subType": "inventory",
      "status": "approved",
      "type": "parent",
      "version": ""
    },
    {
      "id": "b412d964-630f-43a1-90f9-172d252582bb",
      "evaluationQuery": null,
      "kind": "hierarchical",
      "metadata": {
        "description": "Namespace to namespaced components",
        "styles": {
          "primaryColor": "",
          "svgColor": "",
          "svgWhite": ""
        },
        "isAnnotation": false
      },
      "model": {
        "id": "e633cca6-b6e1-65bf-a440-0d58915e75dd",
        "schemaVersion": "models.meshery.io/v1beta1",
        "version": "v1.0.0",
        "name": "kubernetes",
        "displayName": "Kubernetes",
        "status": "enabled",
        "registrant": {
          "id": "00000000-0000-0000-0000-000000000000",
          "name": "",
          "credential_id": "00000000-0000-0000-0000-000000000000",
          "type": "",
          "sub_type": "",
          "kind": "",
          "status": "",
          "user_id": "00000000-0000-0000-0000-000000000000",
          "created_at": "0001-01-01T00:00:00Z",
          "updated_at": "0001-01-01T00:00:00Z",
          "deleted_at": "0001-01-01T00:00:00Z"
        },
        "connection_id": "f9a29d70-c287-426c-a90c-2a96590c8083",
        "category": {
          "id": "9ca27d0d-66ce-42a9-8c85-6236563f2ddb",
          "name": "Orchestration \u0026 Management"
        },
        "subCategory": "Scheduling \u0026 Orchestration",
        "metadata": {
          "isAnnotation": false,
          "primaryColor": "#326CE5",
          "secondaryColor": "#7aa1f0",
          "shape": "circle",
          "styleOverrides": "",
          "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/kubernetes-color.svg",
          "svgComplete": "",
          "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/kubernetes-white.svg"
        },
        "model": {
          "version": "v1.32.0-alpha.3"
        },
        "components_count": 0,
        "relationships_count": 0,
        "components": null,
        "relationships": null
      },
      "schemaVersion": "",
      "selectors": [
        {
          "allow": {
            "from": [
              {
                "id": "90b471fa-60f0-4ec2-9552-4a4912259c63",
                "kind": "*",
                "match": {},
                "match_strategy_matrix": null,
                "model": {
                  "id": "00000000-0000-0000-0000-000000000000",
                  "schemaVersion": "",
                  "version": "",
                  "name": "*",
                  "displayName": "",
                  "status": "",
                  "registrant": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": "",
                    "credential_id": "00000000-0000-0000-0000-000000000000",
                    "type": "",
                    "sub_type": "",
                    "kind": "",
                    "status": "",
                    "user_id": "00000000-0000-0000-0000-000000000000",
                    "created_at": "0001-01-01T00:00:00Z",
                    "updated_at": "0001-01-01T00:00:00Z",
                    "deleted_at": "0001-01-01T00:00:00Z"
                  },
                  "connection_id": "00000000-0000-0000-0000-000000000000",
                  "category": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": ""
                  },
                  "subCategory": "",
                  "metadata": null,
                  "model": {
                    "version": ""
                  },
                  "components_count": 0,
                  "relationships_count": 0,
                  "components": null,
                  "relationships": null
                },
                "patch": {
                  "patchStrategy": "replace",
                  "mutatedRef": [
                    [
                      "configuration",
                      "metadata",
                      "namespace"
                    ]
                  ]
                }
              }
            ],
            "to": [
              {
                "id": "9cc4d1ff-1ae8-4b4e-9108-bef31408d0da",
                "kind": "Namespace",
                "match": {},
                "match_strategy_matrix": null,
                "model": {
                  "id": "00000000-0000-0000-0000-000000000000",
                  "schemaVersion": "",
                  "version": "",
                  "name": "kubernetes",
                  "displayName": "",
                  "status": "",
                  "registrant": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": "",
                    "credential_id": "00000000-0000-0000-0000-000000000000",
                    "type": "",
                    "sub_type": "",
                    "kind": "github",
                    "status": "",
                    "user_id": "00000000-0000-0000-0000-000000000000",
                    "created_at": "0001-01-01T00:00:00Z",
                    "updated_at": "0001-01-01T00:00:00Z",
                    "deleted_at": "0001-01-01T00:00:00Z"
                  },
                  "connection_id": "00000000-0000-0000-0000-000000000000",
                  "category": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": ""
                  },
                  "subCategory": "",
                  "metadata": null,
                  "model": {
                    "version": ""
                  },
                  "components_count": 0,
                  "relationships_count": 0,
                  "components": null,
                  "relationships": null
                },
                "patch": {
                  "patchStrategy": "replace",
                  "mutatorRef": [
                    [
                      "displayName"
                    ]
                  ]
                }
              }
            ]
          },
          "deny": {
            "from": [
              {
                "id": null,
                "kind": "Namespace",
                "match": {},
                "match_strategy_matrix": null,
                "model": {
                  "id": "00000000-0000-0000-0000-000000000000",
                  "schemaVersion": "",
                  "version": "",
                  "name": "kubernetes",
                  "displayName": "",
                  "status": "",
                  "registrant": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": "",
                    "credential_id": "00000000-0000-0000-0000-000000000000",
                    "type": "",
                    "sub_type": "",
                    "kind": "github",
                    "status": "",
                    "user_id": "00000000-0000-0000-0000-000000000000",
                    "created_at": "0001-01-01T00:00:00Z",
                    "updated_at": "0001-01-01T00:00:00Z",
                    "deleted_at": "0001-01-01T00:00:00Z"
                  },
                  "connection_id": "00000000-0000-0000-0000-000000000000",
                  "category": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": ""
                  },
                  "subCategory": "",
                  "metadata": null,
                  "model": {
                    "version": ""
                  },
                  "components_count": 0,
                  "relationships_count": 0,
                  "components": null,
                  "relationships": null
                },
                "patch": null
              }
            ],
            "to": [
              {
                "id": null,
                "kind": "Namespace",
                "match": {},
                "match_strategy_matrix": null,
                "model": {
                  "id": "00000000-0000-0000-0000-000000000000",
                  "schemaVersion": "",
                  "version": "",
                  "name": "kubernetes",
                  "displayName": "",
                  "status": "",
                  "registrant": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": "",
                    "credential_id": "00000000-0000-0000-0000-000000000000",
                    "type": "",
                    "sub_type": "",
                    "kind": "github",
                    "status": "",
                    "user_id": "00000000-0000-0000-0000-000000000000",
                    "created_at": "0001-01-01T00:00:00Z",
                    "updated_at": "0001-01-01T00:00:00Z",
                    "deleted_at": "0001-01-01T00:00:00Z"
                  },
                  "connection_id": "00000000-0000-0000-0000-000000000000",
                  "category": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": ""
                  },
                  "subCategory": "",
                  "metadata": null,
                  "model": {
                    "version": ""
                  },
                  "components_count": 0,
                  "relationships_count": 0,
                  "components": null,
                  "relationships": null
                },
                "patch": null
              }
            ]
          }
        }
      ],
      "subType": "inventory",
      "status": "approved",
      "type": "parent",
      "version": ""
    },
    {
      "id": "f7955ace-d70a-4eab-9fdd-cc39f7dd28c5",
      "evaluationQuery": null,
      "kind": "hierarchical",
      "metadata": {
        "description": "Namespace to namespaced components",
        "styles": {
          "primaryColor": "",
          "svgColor": "",
          "svgWhite": ""
        },
        "isAnnotation": false
      },
      "model": {
        "id": "e633cca6-b6e1-65bf-a440-0d58915e75dd",
        "schemaVersion": "models.meshery.io/v1beta1",
        "version": "v1.0.0",
        "name": "kubernetes",
        "displayName": "Kubernetes",
        "status": "enabled",
        "registrant": {
          "id": "00000000-0000-0000-0000-000000000000",
          "name": "",
          "credential_id": "00000000-0000-0000-0000-000000000000",
          "type": "",
          "sub_type": "",
          "kind": "",
          "status": "",
          "user_id": "00000000-0000-0000-0000-000000000000",
          "created_at": "0001-01-01T00:00:00Z",
          "updated_at": "0001-01-01T00:00:00Z",
          "deleted_at": "0001-01-01T00:00:00Z"
        },
        "connection_id": "f9a29d70-c287-426c-a90c-2a96590c8083",
        "category": {
          "id": "9ca27d0d-66ce-42a9-8c85-6236563f2ddb",
          "name": "Orchestration \u0026 Management"
        },
        "subCategory": "Scheduling \u0026 Orchestration",
        "metadata": {
          "isAnnotation": false,
          "primaryColor": "#326CE5",
          "secondaryColor": "#7aa1f0",
          "shape": "circle",
          "styleOverrides": "",
          "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/kubernetes-color.svg",
          "svgComplete": "",
          "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/kubernetes-white.svg"
        },
        "model": {
          "version": "v1.32.0-alpha.3"
        },
        "components_count": 0,
        "relationships_count": 0,
        "components": null,
        "relationships": null
      },
      "schemaVersion": "",
      "selectors": [
        {
          "allow": {
            "from": [
              {
                "id": "e9094d62-9fdd-4c67-9a48-a0f9f2606edf",
                "kind": "*",
                "match": {},
                "match_strategy_matrix": null,
                "model": {
                  "id": "00000000-0000-0000-0000-000000000000",
                  "schemaVersion": "",
                  "version": "",
                  "name": "*",
                  "displayName": "",
                  "status": "",
                  "registrant": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": "",
                    "credential_id": "00000000-0000-0000-0000-000000000000",
                    "type": "",
                    "sub_type": "",
                    "kind": "",
                    "status": "",
                    "user_id": "00000000-0000-0000-0000-000000000000",
                    "created_at": "0001-01-01T00:00:00Z",
                    "updated_at": "0001-01-01T00:00:00Z",
                    "deleted_at": "0001-01-01T00:00:00Z"
                  },
                  "connection_id": "00000000-0000-0000-0000-000000000000",
                  "category": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": ""
                  },
                  "subCategory": "",
                  "metadata": null,
                  "model": {
                    "version": ""
                  },
                  "components_count": 0,
                  "relationships_count": 0,
                  "components": null,
                  "relationships": null
                },
                "patch": {
                  "patchStrategy": "replace",
                  "mutatedRef": [
                    [
                      "configuration",
                      "metadata",
                      "namespace"
                    ]
                  ]
                }
              }
            ],
            "to": [
              {
                "id": "bdbf668e-ec96-48a3-9dac-47a5717756fc",
                "kind": "Namespace",
                "match": {},
                "match_strategy_matrix": null,
                "model": {
                  "id": "00000000-0000-0000-0000-000000000000",
                  "schemaVersion": "",
                  "version": "",
                  "name": "kubernetes",
                  "displayName": "",
                  "status": "",
                  "registrant": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": "",
                    "credential_id": "00000000-0000-0000-0000-000000000000",
                    "type": "",
                    "sub_type": "",
                    "kind": "github",
                    "status": "",
                    "user_id": "00000000-0000-0000-0000-000000000000",
                    "created_at": "0001-01-01T00:00:00Z",
                    "updated_at": "0001-01-01T00:00:00Z",
                    "deleted_at": "0001-01-01T00:00:00Z"
                  },
                  "connection_id": "00000000-0000-0000-0000-000000000000",
                  "category": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": ""
                  },
                  "subCategory": "",
                  "metadata": null,
                  "model": {
                    "version": ""
                  },
                  "components_count": 0,
                  "relationships_count": 0,
                  "components": null,
                  "relationships": null
                },
                "patch": {
                  "patchStrategy": "replace",
                  "mutatorRef": [
                    [
                      "displayName"
                    ]
                  ]
                }
              }
            ]
          },
          "deny": {
            "from": [
              {
                "id": null,
                "kind": "Namespace",
                "match": {},
                "match_strategy_matrix": null,
                "model": {
                  "id": "00000000-0000-0000-0000-000000000000",
                  "schemaVersion": "",
                  "version": "",
                  "name": "kubernetes",
                  "displayName": "",
                  "status": "",
                  "registrant": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": "",
                    "credential_id": "00000000-0000-0000-0000-000000000000",
                    "type": "",
                    "sub_type": "",
                    "kind": "github",
                    "status": "",
                    "user_id": "00000000-0000-0000-0000-000000000000",
                    "created_at": "0001-01-01T00:00:00Z",
                    "updated_at": "0001-01-01T00:00:00Z",
                    "deleted_at": "0001-01-01T00:00:00Z"
                  },
                  "connection_id": "00000000-0000-0000-0000-000000000000",
                  "category": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": ""
                  },
                  "subCategory": "",
                  "metadata": null,
                  "model": {
                    "version": ""
                  },
                  "components_count": 0,
                  "relationships_count": 0,
                  "components": null,
                  "relationships": null
                },
                "patch": null
              }
            ],
            "to": [
              {
                "id": null,
                "kind": "Namespace",
                "match": {},
                "match_strategy_matrix": null,
                "model": {
                  "id": "00000000-0000-0000-0000-000000000000",
                  "schemaVersion": "",
                  "version": "",
                  "name": "kubernetes",
                  "displayName": "",
                  "status": "",
                  "registrant": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": "",
                    "credential_id": "00000000-0000-0000-0000-000000000000",
                    "type": "",
                    "sub_type": "",
                    "kind": "github",
                    "status": "",
                    "user_id": "00000000-0000-0000-0000-000000000000",
                    "created_at": "0001-01-01T00:00:00Z",
                    "updated_at": "0001-01-01T00:00:00Z",
                    "deleted_at": "0001-01-01T00:00:00Z"
                  },
                  "connection_id": "00000000-0000-0000-0000-000000000000",
                  "category": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": ""
                  },
                  "subCategory": "",
                  "metadata": null,
                  "model": {
                    "version": ""
                  },
                  "components_count": 0,
                  "relationships_count": 0,
                  "components": null,
                  "relationships": null
                },
                "patch": null
              }
            ]
          }
        }
      ],
      "subType": "inventory",
      "status": "approved",
      "type": "parent",
      "version": ""
    },
    {
      "id": "05103210-9b3d-413a-9bc8-4791a9e35370",
      "evaluationQuery": "",
      "kind": "edge",
      "metadata": {
        "description": "In Kubernetes, Secrets are a versatile resource that can be referenced by various other resources to provide configuration data to applications or other Kubnernetes resources.\\n\\nBy referencing ConfigMaps in these various contexts, you can centralize and manage configuration data more efficiently, allowing for easier updates, versioning, and maintenance of configurations in a Kubernetes environment.",
        "styles": {
          "primaryColor": "",
          "svgColor": "",
          "svgWhite": ""
        },
        "isAnnotation": false
      },
      "model": {
        "id": "e633cca6-b6e1-65bf-a440-0d58915e75dd",
        "schemaVersion": "models.meshery.io/v1beta1",
        "version": "v1.0.0",
        "name": "kubernetes",
        "displayName": "Kubernetes",
        "status": "enabled",
        "registrant": {
          "id": "00000000-0000-0000-0000-000000000000",
          "name": "",
          "credential_id": "00000000-0000-0000-0000-000000000000",
          "type": "",
          "sub_type": "",
          "kind": "",
          "status": "",
          "user_id": "00000000-0000-0000-0000-000000000000",
          "created_at": "0001-01-01T00:00:00Z",
          "updated_at": "0001-01-01T00:00:00Z",
          "deleted_at": "0001-01-01T00:00:00Z"
        },
        "connection_id": "f9a29d70-c287-426c-a90c-2a96590c8083",
        "category": {
          "id": "9ca27d0d-66ce-42a9-8c85-6236563f2ddb",
          "name": "Orchestration \u0026 Management"
        },
        "subCategory": "Scheduling \u0026 Orchestration",
        "metadata": {
          "isAnnotation": false,
          "primaryColor": "#326CE5",
          "secondaryColor": "#7aa1f0",
          "shape": "circle",
          "styleOverrides": "",
          "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/kubernetes-color.svg",
          "svgComplete": "",
          "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/kubernetes-white.svg"
        },
        "model": {
          "version": "v1.32.0-alpha.3"
        },
        "components_count": 0,
        "relationships_count": 0,
        "components": null,
        "relationships": null
      },
      "schemaVersion": "relationships.meshery.io/v1alpha3",
      "selectors": [
        {
          "allow": {
            "from": [
              {
                "id": "e9094d62-9fdd-4c67-9a48-a0f9f2606edf",
                "kind": "Secret",
                "match": {},
                "match_strategy_matrix": null,
                "model": {
                  "id": "00000000-0000-0000-0000-000000000000",
                  "schemaVersion": "",
                  "version": "",
                  "name": "kubernetes",
                  "displayName": "",
                  "status": "",
                  "registrant": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": "",
                    "credential_id": "00000000-0000-0000-0000-000000000000",
                    "type": "",
                    "sub_type": "",
                    "kind": "github",
                    "status": "",
                    "user_id": "00000000-0000-0000-0000-000000000000",
                    "created_at": "0001-01-01T00:00:00Z",
                    "updated_at": "0001-01-01T00:00:00Z",
                    "deleted_at": "0001-01-01T00:00:00Z"
                  },
                  "connection_id": "00000000-0000-0000-0000-000000000000",
                  "category": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": ""
                  },
                  "subCategory": "",
                  "metadata": null,
                  "model": {
                    "version": ""
                  },
                  "components_count": 0,
                  "relationships_count": 0,
                  "components": null,
                  "relationships": null
                },
                "patch": {
                  "patchStrategy": "replace",
                  "mutatorRef": [
                    [
                      "displayName"
                    ]
                  ]
                }
              }
            ],
            "to": [
              {
                "id": "ad59bd7c-5594-4269-ba27-07579c5370f9",
                "kind": "Deployment",
                "match": {},
                "match_strategy_matrix": null,
                "model": {
                  "id": "00000000-0000-0000-0000-000000000000",
                  "schemaVersion": "",
                  "version": "",
                  "name": "kubernetes",
                  "displayName": "",
                  "status": "",
                  "registrant": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": "",
                    "credential_id": "00000000-0000-0000-0000-000000000000",
                    "type": "",
                    "sub_type": "",
                    "kind": "github",
                    "status": "",
                    "user_id": "00000000-0000-0000-0000-000000000000",
                    "created_at": "0001-01-01T00:00:00Z",
                    "updated_at": "0001-01-01T00:00:00Z",
                    "deleted_at": "0001-01-01T00:00:00Z"
                  },
                  "connection_id": "00000000-0000-0000-0000-000000000000",
                  "category": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": ""
                  },
                  "subCategory": "",
                  "metadata": null,
                  "model": {
                    "version": ""
                  },
                  "components_count": 0,
                  "relationships_count": 0,
                  "components": null,
                  "relationships": null
                },
                "patch": {
                  "patchStrategy": "replace",
                  "mutatedRef": [
                    [
                      "configuration",
                      "spec",
                      "template",
                      "spec",
                      "containers",
                      "0",
                      "envFrom",
                      "0",
                      "secretRef",
                      "name"
                    ]
                  ]
                }
              }
            ]
          },
          "deny": {
            "from": null,
            "to": null
          }
        }
      ],
      "subType": "reference",
      "status": "approved",
      "type": "non-binding",
      "version": "v1.0.0"
    },
    {
      "id": "19aa1d8b-9b92-4a72-8f63-95885fd3690e",
      "evaluationQuery": "",
      "kind": "hierarchical",
      "metadata": {
        "description": "Namespace to namespaced components",
        "styles": {
          "primaryColor": "",
          "svgColor": "",
          "svgWhite": ""
        },
        "isAnnotation": false
      },
      "model": {
        "id": "e633cca6-b6e1-65bf-a440-0d58915e75dd",
        "schemaVersion": "models.meshery.io/v1beta1",
        "version": "v1.0.0",
        "name": "kubernetes",
        "displayName": "Kubernetes",
        "status": "enabled",
        "registrant": {
          "id": "00000000-0000-0000-0000-000000000000",
          "name": "",
          "credential_id": "00000000-0000-0000-0000-000000000000",
          "type": "",
          "sub_type": "",
          "kind": "",
          "status": "",
          "user_id": "00000000-0000-0000-0000-000000000000",
          "created_at": "0001-01-01T00:00:00Z",
          "updated_at": "0001-01-01T00:00:00Z",
          "deleted_at": "0001-01-01T00:00:00Z"
        },
        "connection_id": "f9a29d70-c287-426c-a90c-2a96590c8083",
        "category": {
          "id": "9ca27d0d-66ce-42a9-8c85-6236563f2ddb",
          "name": "Orchestration \u0026 Management"
        },
        "subCategory": "Scheduling \u0026 Orchestration",
        "metadata": {
          "isAnnotation": false,
          "primaryColor": "#326CE5",
          "secondaryColor": "#7aa1f0",
          "shape": "circle",
          "styleOverrides": "",
          "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/kubernetes-color.svg",
          "svgComplete": "",
          "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/kubernetes-white.svg"
        },
        "model": {
          "version": "v1.32.0-alpha.3"
        },
        "components_count": 0,
        "relationships_count": 0,
        "components": null,
        "relationships": null
      },
      "schemaVersion": "relationships.meshery.io/v1alpha3",
      "selectors": [
        {
          "allow": {
            "from": [
              {
                "id": "879bbd9e-1b1a-4cfc-b63d-eb46ed9f6c5f",
                "kind": "*",
                "match": {},
                "match_strategy_matrix": null,
                "model": {
                  "id": "00000000-0000-0000-0000-000000000000",
                  "schemaVersion": "",
                  "version": "",
                  "name": "*",
                  "displayName": "",
                  "status": "",
                  "registrant": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": "",
                    "credential_id": "00000000-0000-0000-0000-000000000000",
                    "type": "",
                    "sub_type": "",
                    "kind": "",
                    "status": "",
                    "user_id": "00000000-0000-0000-0000-000000000000",
                    "created_at": "0001-01-01T00:00:00Z",
                    "updated_at": "0001-01-01T00:00:00Z",
                    "deleted_at": "0001-01-01T00:00:00Z"
                  },
                  "connection_id": "00000000-0000-0000-0000-000000000000",
                  "category": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": ""
                  },
                  "subCategory": "",
                  "metadata": null,
                  "model": {
                    "version": ""
                  },
                  "components_count": 0,
                  "relationships_count": 0,
                  "components": null,
                  "relationships": null
                },
                "patch": {
                  "patchStrategy": "replace",
                  "mutatedRef": [
                    [
                      "configuration",
                      "metadata",
                      "namespace"
                    ]
                  ]
                }
              }
            ],
            "to": [
              {
                "id": "bdbf668e-ec96-48a3-9dac-47a5717756fc",
                "kind": "Namespace",
                "match": {},
                "match_strategy_matrix": null,
                "model": {
                  "id": "00000000-0000-0000-0000-000000000000",
                  "schemaVersion": "",
                  "version": "",
                  "name": "kubernetes",
                  "displayName": "",
                  "status": "",
                  "registrant": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": "",
                    "credential_id": "00000000-0000-0000-0000-000000000000",
                    "type": "",
                    "sub_type": "",
                    "kind": "github",
                    "status": "",
                    "user_id": "00000000-0000-0000-0000-000000000000",
                    "created_at": "0001-01-01T00:00:00Z",
                    "updated_at": "0001-01-01T00:00:00Z",
                    "deleted_at": "0001-01-01T00:00:00Z"
                  },
                  "connection_id": "00000000-0000-0000-0000-000000000000",
                  "category": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": ""
                  },
                  "subCategory": "",
                  "metadata": null,
                  "model": {
                    "version": ""
                  },
                  "components_count": 0,
                  "relationships_count": 0,
                  "components": null,
                  "relationships": null
                },
                "patch": {
                  "patchStrategy": "replace",
                  "mutatorRef": [
                    [
                      "displayName"
                    ]
                  ]
                }
              }
            ]
          }
        }
      ],
      "subType": "inventory",
      "status": "approved",
      "type": "parent",
      "version": "v1.0.0"
    },
    {
      "id": "1aee430b-52ba-4345-800a-944a341ebc71",
      "evaluationQuery": "",
      "kind": "edge",
      "metadata": {
        "description": "A relationship that represents a set of permissions",
        "styles": {
          "primaryColor": "",
          "svgColor": "",
          "svgWhite": ""
        },
        "isAnnotation": false
      },
      "model": {
        "id": "e633cca6-b6e1-65bf-a440-0d58915e75dd",
        "schemaVersion": "models.meshery.io/v1beta1",
        "version": "v1.0.0",
        "name": "kubernetes",
        "displayName": "Kubernetes",
        "status": "enabled",
        "registrant": {
          "id": "00000000-0000-0000-0000-000000000000",
          "name": "",
          "credential_id": "00000000-0000-0000-0000-000000000000",
          "type": "",
          "sub_type": "",
          "kind": "",
          "status": "",
          "user_id": "00000000-0000-0000-0000-000000000000",
          "created_at": "0001-01-01T00:00:00Z",
          "updated_at": "0001-01-01T00:00:00Z",
          "deleted_at": "0001-01-01T00:00:00Z"
        },
        "connection_id": "f9a29d70-c287-426c-a90c-2a96590c8083",
        "category": {
          "id": "9ca27d0d-66ce-42a9-8c85-6236563f2ddb",
          "name": "Orchestration \u0026 Management"
        },
        "subCategory": "Scheduling \u0026 Orchestration",
        "metadata": {
          "isAnnotation": false,
          "primaryColor": "#326CE5",
          "secondaryColor": "#7aa1f0",
          "shape": "circle",
          "styleOverrides": "",
          "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/kubernetes-color.svg",
          "svgComplete": "",
          "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/kubernetes-white.svg"
        },
        "model": {
          "version": "v1.32.0-alpha.3"
        },
        "components_count": 0,
        "relationships_count": 0,
        "components": null,
        "relationships": null
      },
      "schemaVersion": "relationships.meshery.io/v1alpha3",
      "selectors": [
        {
          "allow": {
            "from": [
              {
                "id": "b01d9d33-1032-4a59-bd34-34b421428d41",
                "kind": "ClusterRole",
                "match": {
                  "from": [
                    {
                      "id": "b01d9d33-1032-4a59-bd34-34b421428d41",
                      "kind": "self",
                      "mutatorRef": [
                        [
                          "component",
                          "kind"
                        ],
                        [
                          "displayName"
                        ]
                      ]
                    }
                  ],
                  "to": [
                    {
                      "id": "1adfb054-b85a-4561-9ce5-fe5980a1a3bc",
                      "kind": "ClusterRoleBinding",
                      "mutatedRef": [
                        [
                          "configuration",
                          "roleRef",
                          "kind"
                        ],
                        [
                          "configuration",
                          "roleRef",
                          "name"
                        ]
                      ]
                    }
                  ]
                },
                "match_strategy_matrix": null,
                "model": {
                  "id": "00000000-0000-0000-0000-000000000000",
                  "schemaVersion": "",
                  "version": "",
                  "name": "kubernetes",
                  "displayName": "",
                  "status": "",
                  "registrant": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": "",
                    "credential_id": "00000000-0000-0000-0000-000000000000",
                    "type": "",
                    "sub_type": "",
                    "kind": "github",
                    "status": "",
                    "user_id": "00000000-0000-0000-0000-000000000000",
                    "created_at": "0001-01-01T00:00:00Z",
                    "updated_at": "0001-01-01T00:00:00Z",
                    "deleted_at": "0001-01-01T00:00:00Z"
                  },
                  "connection_id": "00000000-0000-0000-0000-000000000000",
                  "category": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": ""
                  },
                  "subCategory": "",
                  "metadata": null,
                  "model": {
                    "version": ""
                  },
                  "components_count": 0,
                  "relationships_count": 0,
                  "components": null,
                  "relationships": null
                },
                "patch": null
              }
            ],
            "to": [
              {
                "id": "8020ae58-3287-429c-a6f0-4eaa7c9d182c",
                "kind": "ServiceAccount",
                "match": {
                  "from": [
                    {
                      "id": "1adfb054-b85a-4561-9ce5-fe5980a1a3bc",
                      "kind": "ClusterRoleBinding",
                      "mutatedRef": [
                        [
                          "configuration",
                          "subjects",
                          "_",
                          "name"
                        ]
                      ]
                    }
                  ],
                  "to": [
                    {
                      "id": "8020ae58-3287-429c-a6f0-4eaa7c9d182c",
                      "kind": "self",
                      "mutatorRef": [
                        [
                          "displayName"
                        ]
                      ]
                    }
                  ]
                },
                "match_strategy_matrix": null,
                "model": {
                  "id": "00000000-0000-0000-0000-000000000000",
                  "schemaVersion": "",
                  "version": "",
                  "name": "kubernetes",
                  "displayName": "",
                  "status": "",
                  "registrant": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": "",
                    "credential_id": "00000000-0000-0000-0000-000000000000",
                    "type": "",
                    "sub_type": "",
                    "kind": "github",
                    "status": "",
                    "user_id": "00000000-0000-0000-0000-000000000000",
                    "created_at": "0001-01-01T00:00:00Z",
                    "updated_at": "0001-01-01T00:00:00Z",
                    "deleted_at": "0001-01-01T00:00:00Z"
                  },
                  "connection_id": "00000000-0000-0000-0000-000000000000",
                  "category": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": ""
                  },
                  "subCategory": "",
                  "metadata": null,
                  "model": {
                    "version": ""
                  },
                  "components_count": 0,
                  "relationships_count": 0,
                  "components": null,
                  "relationships": null
                },
                "patch": null
              }
            ]
          }
        }
      ],
      "subType": "permission",
      "status": "approved",
      "type": "binding",
      "version": "v1.0.0"
    },
    {
      "id": "1d3a0872-b8ba-4858-9968-1733f2a7c4f8",
      "evaluationQuery": "",
      "kind": "hierarchical",
      "metadata": {
        "description": "Namespace to namespaced components",
        "styles": {
          "primaryColor": "",
          "svgColor": "",
          "svgWhite": ""
        },
        "isAnnotation": false
      },
      "model": {
        "id": "e633cca6-b6e1-65bf-a440-0d58915e75dd",
        "schemaVersion": "models.meshery.io/v1beta1",
        "version": "v1.0.0",
        "name": "kubernetes",
        "displayName": "Kubernetes",
        "status": "enabled",
        "registrant": {
          "id": "00000000-0000-0000-0000-000000000000",
          "name": "",
          "credential_id": "00000000-0000-0000-0000-000000000000",
          "type": "",
          "sub_type": "",
          "kind": "",
          "status": "",
          "user_id": "00000000-0000-0000-0000-000000000000",
          "created_at": "0001-01-01T00:00:00Z",
          "updated_at": "0001-01-01T00:00:00Z",
          "deleted_at": "0001-01-01T00:00:00Z"
        },
        "connection_id": "f9a29d70-c287-426c-a90c-2a96590c8083",
        "category": {
          "id": "9ca27d0d-66ce-42a9-8c85-6236563f2ddb",
          "name": "Orchestration \u0026 Management"
        },
        "subCategory": "Scheduling \u0026 Orchestration",
        "metadata": {
          "isAnnotation": false,
          "primaryColor": "#326CE5",
          "secondaryColor": "#7aa1f0",
          "shape": "circle",
          "styleOverrides": "",
          "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/kubernetes-color.svg",
          "svgComplete": "",
          "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/kubernetes-white.svg"
        },
        "model": {
          "version": "v1.32.0-alpha.3"
        },
        "components_count": 0,
        "relationships_count": 0,
        "components": null,
        "relationships": null
      },
      "schemaVersion": "relationships.meshery.io/v1alpha3",
      "selectors": [
        {
          "allow": {
            "from": [
              {
                "id": "345fb78a-0c6d-4547-a801-18d05eb9cbb1",
                "kind": "*",
                "match": {},
                "match_strategy_matrix": null,
                "model": {
                  "id": "00000000-0000-0000-0000-000000000000",
                  "schemaVersion": "",
                  "version": "",
                  "name": "*",
                  "displayName": "",
                  "status": "",
                  "registrant": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": "",
                    "credential_id": "00000000-0000-0000-0000-000000000000",
                    "type": "",
                    "sub_type": "",
                    "kind": "",
                    "status": "",
                    "user_id": "00000000-0000-0000-0000-000000000000",
                    "created_at": "0001-01-01T00:00:00Z",
                    "updated_at": "0001-01-01T00:00:00Z",
                    "deleted_at": "0001-01-01T00:00:00Z"
                  },
                  "connection_id": "00000000-0000-0000-0000-000000000000",
                  "category": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": ""
                  },
                  "subCategory": "",
                  "metadata": null,
                  "model": {
                    "version": ""
                  },
                  "components_count": 0,
                  "relationships_count": 0,
                  "components": null,
                  "relationships": null
                },
                "patch": {
                  "patchStrategy": "replace",
                  "mutatedRef": [
                    [
                      "configuration",
                      "metadata",
                      "namespace"
                    ]
                  ]
                }
              }
            ],
            "to": [
              {
                "id": "779771c4-bd19-4425-a27b-a75afd10b4b2",
                "kind": "Namespace",
                "match": {},
                "match_strategy_matrix": null,
                "model": {
                  "id": "00000000-0000-0000-0000-000000000000",
                  "schemaVersion": "",
                  "version": "",
                  "name": "kubernetes",
                  "displayName": "",
                  "status": "",
                  "registrant": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": "",
                    "credential_id": "00000000-0000-0000-0000-000000000000",
                    "type": "",
                    "sub_type": "",
                    "kind": "github",
                    "status": "",
                    "user_id": "00000000-0000-0000-0000-000000000000",
                    "created_at": "0001-01-01T00:00:00Z",
                    "updated_at": "0001-01-01T00:00:00Z",
                    "deleted_at": "0001-01-01T00:00:00Z"
                  },
                  "connection_id": "00000000-0000-0000-0000-000000000000",
                  "category": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": ""
                  },
                  "subCategory": "",
                  "metadata": null,
                  "model": {
                    "version": ""
                  },
                  "components_count": 0,
                  "relationships_count": 0,
                  "components": null,
                  "relationships": null
                },
                "patch": {
                  "patchStrategy": "replace",
                  "mutatorRef": [
                    [
                      "displayName"
                    ]
                  ]
                }
              }
            ]
          }
        }
      ],
      "subType": "inventory",
      "status": "approved",
      "type": "parent",
      "version": "v1.0.0"
    },
    {
      "id": "1ed2a6b9-0de6-4da5-bfa6-6d50c20ccbab",
      "evaluationQuery": "",
      "kind": "hierarchical",
      "metadata": {
        "description": "Namespace to namespaced components",
        "styles": {
          "primaryColor": "",
          "svgColor": "",
          "svgWhite": ""
        },
        "isAnnotation": false
      },
      "model": {
        "id": "e633cca6-b6e1-65bf-a440-0d58915e75dd",
        "schemaVersion": "models.meshery.io/v1beta1",
        "version": "v1.0.0",
        "name": "kubernetes",
        "displayName": "Kubernetes",
        "status": "enabled",
        "registrant": {
          "id": "00000000-0000-0000-0000-000000000000",
          "name": "",
          "credential_id": "00000000-0000-0000-0000-000000000000",
          "type": "",
          "sub_type": "",
          "kind": "",
          "status": "",
          "user_id": "00000000-0000-0000-0000-000000000000",
          "created_at": "0001-01-01T00:00:00Z",
          "updated_at": "0001-01-01T00:00:00Z",
          "deleted_at": "0001-01-01T00:00:00Z"
        },
        "connection_id": "f9a29d70-c287-426c-a90c-2a96590c8083",
        "category": {
          "id": "9ca27d0d-66ce-42a9-8c85-6236563f2ddb",
          "name": "Orchestration \u0026 Management"
        },
        "subCategory": "Scheduling \u0026 Orchestration",
        "metadata": {
          "isAnnotation": false,
          "primaryColor": "#326CE5",
          "secondaryColor": "#7aa1f0",
          "shape": "circle",
          "styleOverrides": "",
          "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/kubernetes-color.svg",
          "svgComplete": "",
          "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/kubernetes-white.svg"
        },
        "model": {
          "version": "v1.32.0-alpha.3"
        },
        "components_count": 0,
        "relationships_count": 0,
        "components": null,
        "relationships": null
      },
      "schemaVersion": "relationships.meshery.io/v1alpha3",
      "selectors": [
        {
          "allow": {
            "from": [
              {
                "id": "81e4ccc2-f6e0-4020-b521-d22f565ce82d",
                "kind": "*",
                "match": {},
                "match_strategy_matrix": null,
                "model": {
                  "id": "00000000-0000-0000-0000-000000000000",
                  "schemaVersion": "",
                  "version": "",
                  "name": "*",
                  "displayName": "",
                  "status": "",
                  "registrant": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": "",
                    "credential_id": "00000000-0000-0000-0000-000000000000",
                    "type": "",
                    "sub_type": "",
                    "kind": "",
                    "status": "",
                    "user_id": "00000000-0000-0000-0000-000000000000",
                    "created_at": "0001-01-01T00:00:00Z",
                    "updated_at": "0001-01-01T00:00:00Z",
                    "deleted_at": "0001-01-01T00:00:00Z"
                  },
                  "connection_id": "00000000-0000-0000-0000-000000000000",
                  "category": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": ""
                  },
                  "subCategory": "",
                  "metadata": null,
                  "model": {
                    "version": ""
                  },
                  "components_count": 0,
                  "relationships_count": 0,
                  "components": null,
                  "relationships": null
                },
                "patch": {
                  "patchStrategy": "replace",
                  "mutatedRef": [
                    [
                      "configuration",
                      "metadata",
                      "namespace"
                    ]
                  ]
                }
              }
            ],
            "to": [
              {
                "id": "bdbf668e-ec96-48a3-9dac-47a5717756fc",
                "kind": "Namespace",
                "match": {},
                "match_strategy_matrix": null,
                "model": {
                  "id": "00000000-0000-0000-0000-000000000000",
                  "schemaVersion": "",
                  "version": "",
                  "name": "kubernetes",
                  "displayName": "",
                  "status": "",
                  "registrant": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": "",
                    "credential_id": "00000000-0000-0000-0000-000000000000",
                    "type": "",
                    "sub_type": "",
                    "kind": "github",
                    "status": "",
                    "user_id": "00000000-0000-0000-0000-000000000000",
                    "created_at": "0001-01-01T00:00:00Z",
                    "updated_at": "0001-01-01T00:00:00Z",
                    "deleted_at": "0001-01-01T00:00:00Z"
                  },
                  "connection_id": "00000000-0000-0000-0000-000000000000",
                  "category": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": ""
                  },
                  "subCategory": "",
                  "metadata": null,
                  "model": {
                    "version": ""
                  },
                  "components_count": 0,
                  "relationships_count": 0,
                  "components": null,
                  "relationships": null
                },
                "patch": {
                  "patchStrategy": "replace",
                  "mutatorRef": [
                    [
                      "displayName"
                    ]
                  ]
                }
              }
            ]
          }
        }
      ],
      "subType": "inventory",
      "status": "approved",
      "type": "parent",
      "version": "v1.0.0"
    },
    {
      "id": "20ba59e2-790c-4bbb-b6c6-e1199477674d",
      "evaluationQuery": "",
      "kind": "hierarchical",
      "metadata": {
        "description": "Namespace to namespaced components",
        "styles": {
          "primaryColor": "",
          "svgColor": "",
          "svgWhite": ""
        },
        "isAnnotation": false
      },
      "model": {
        "id": "e633cca6-b6e1-65bf-a440-0d58915e75dd",
        "schemaVersion": "models.meshery.io/v1beta1",
        "version": "v1.0.0",
        "name": "kubernetes",
        "displayName": "Kubernetes",
        "status": "enabled",
        "registrant": {
          "id": "00000000-0000-0000-0000-000000000000",
          "name": "",
          "credential_id": "00000000-0000-0000-0000-000000000000",
          "type": "",
          "sub_type": "",
          "kind": "",
          "status": "",
          "user_id": "00000000-0000-0000-0000-000000000000",
          "created_at": "0001-01-01T00:00:00Z",
          "updated_at": "0001-01-01T00:00:00Z",
          "deleted_at": "0001-01-01T00:00:00Z"
        },
        "connection_id": "f9a29d70-c287-426c-a90c-2a96590c8083",
        "category": {
          "id": "9ca27d0d-66ce-42a9-8c85-6236563f2ddb",
          "name": "Orchestration \u0026 Management"
        },
        "subCategory": "Scheduling \u0026 Orchestration",
        "metadata": {
          "isAnnotation": false,
          "primaryColor": "#326CE5",
          "secondaryColor": "#7aa1f0",
          "shape": "circle",
          "styleOverrides": "",
          "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/kubernetes-color.svg",
          "svgComplete": "",
          "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/kubernetes-white.svg"
        },
        "model": {
          "version": "v1.32.0-alpha.3"
        },
        "components_count": 0,
        "relationships_count": 0,
        "components": null,
        "relationships": null
      },
      "schemaVersion": "relationships.meshery.io/v1alpha3",
      "selectors": [
        {
          "allow": {
            "from": [
              {
                "id": "1327b2fc-d03f-46c3-9772-f39a70707d95",
                "kind": "*",
                "match": {},
                "match_strategy_matrix": null,
                "model": {
                  "id": "00000000-0000-0000-0000-000000000000",
                  "schemaVersion": "",
                  "version": "",
                  "name": "*",
                  "displayName": "",
                  "status": "",
                  "registrant": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": "",
                    "credential_id": "00000000-0000-0000-0000-000000000000",
                    "type": "",
                    "sub_type": "",
                    "kind": "",
                    "status": "",
                    "user_id": "00000000-0000-0000-0000-000000000000",
                    "created_at": "0001-01-01T00:00:00Z",
                    "updated_at": "0001-01-01T00:00:00Z",
                    "deleted_at": "0001-01-01T00:00:00Z"
                  },
                  "connection_id": "00000000-0000-0000-0000-000000000000",
                  "category": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": ""
                  },
                  "subCategory": "",
                  "metadata": null,
                  "model": {
                    "version": ""
                  },
                  "components_count": 0,
                  "relationships_count": 0,
                  "components": null,
                  "relationships": null
                },
                "patch": {
                  "patchStrategy": "replace",
                  "mutatedRef": [
                    [
                      "configuration",
                      "metadata",
                      "namespace"
                    ]
                  ]
                }
              }
            ],
            "to": [
              {
                "id": "bdbf668e-ec96-48a3-9dac-47a5717756fc",
                "kind": "Namespace",
                "match": {},
                "match_strategy_matrix": null,
                "model": {
                  "id": "00000000-0000-0000-0000-000000000000",
                  "schemaVersion": "",
                  "version": "",
                  "name": "kubernetes",
                  "displayName": "",
                  "status": "",
                  "registrant": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": "",
                    "credential_id": "00000000-0000-0000-0000-000000000000",
                    "type": "",
                    "sub_type": "",
                    "kind": "github",
                    "status": "",
                    "user_id": "00000000-0000-0000-0000-000000000000",
                    "created_at": "0001-01-01T00:00:00Z",
                    "updated_at": "0001-01-01T00:00:00Z",
                    "deleted_at": "0001-01-01T00:00:00Z"
                  },
                  "connection_id": "00000000-0000-0000-0000-000000000000",
                  "category": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": ""
                  },
                  "subCategory": "",
                  "metadata": null,
                  "model": {
                    "version": ""
                  },
                  "components_count": 0,
                  "relationships_count": 0,
                  "components": null,
                  "relationships": null
                },
                "patch": {
                  "patchStrategy": "replace",
                  "mutatorRef": [
                    [
                      "displayName"
                    ]
                  ]
                }
              }
            ]
          }
        }
      ],
      "subType": "inventory",
      "status": "approved",
      "type": "parent",
      "version": "v1.0.0"
    },
    {
      "id": "222e8bc1-617a-4ac3-a4b6-dd56335faaf5",
      "evaluationQuery": "",
      "kind": "edge",
      "metadata": {
        "description": "A relationship that represents a set of permissions",
        "styles": {
          "primaryColor": "",
          "svgColor": "",
          "svgWhite": ""
        },
        "isAnnotation": false
      },
      "model": {
        "id": "e633cca6-b6e1-65bf-a440-0d58915e75dd",
        "schemaVersion": "models.meshery.io/v1beta1",
        "version": "v1.0.0",
        "name": "kubernetes",
        "displayName": "Kubernetes",
        "status": "enabled",
        "registrant": {
          "id": "00000000-0000-0000-0000-000000000000",
          "name": "",
          "credential_id": "00000000-0000-0000-0000-000000000000",
          "type": "",
          "sub_type": "",
          "kind": "",
          "status": "",
          "user_id": "00000000-0000-0000-0000-000000000000",
          "created_at": "0001-01-01T00:00:00Z",
          "updated_at": "0001-01-01T00:00:00Z",
          "deleted_at": "0001-01-01T00:00:00Z"
        },
        "connection_id": "f9a29d70-c287-426c-a90c-2a96590c8083",
        "category": {
          "id": "9ca27d0d-66ce-42a9-8c85-6236563f2ddb",
          "name": "Orchestration \u0026 Management"
        },
        "subCategory": "Scheduling \u0026 Orchestration",
        "metadata": {
          "isAnnotation": false,
          "primaryColor": "#326CE5",
          "secondaryColor": "#7aa1f0",
          "shape": "circle",
          "styleOverrides": "",
          "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/kubernetes-color.svg",
          "svgComplete": "",
          "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/kubernetes-white.svg"
        },
        "model": {
          "version": "v1.32.0-alpha.3"
        },
        "components_count": 0,
        "relationships_count": 0,
        "components": null,
        "relationships": null
      },
      "schemaVersion": "relationships.meshery.io/v1alpha3",
      "selectors": [
        {
          "allow": {
            "from": [
              {
                "id": "52107d2e-f2a4-47da-ac72-9bb252bd524c",
                "kind": "ClusterRole",
                "match": {
                  "from": [
                    {
                      "id": "52107d2e-f2a4-47da-ac72-9bb252bd524c",
                      "kind": "self",
                      "mutatorRef": [
                        [
                          "component",
                          "kind"
                        ],
                        [
                          "displayName"
                        ]
                      ]
                    }
                  ],
                  "to": [
                    {
                      "id": "45236b47-9d7e-418e-8824-286eeb9d293f",
                      "kind": "ClusterRoleBinding",
                      "mutatedRef": [
                        [
                          "configuration",
                          "roleRef",
                          "kind"
                        ],
                        [
                          "configuration",
                          "roleRef",
                          "name"
                        ]
                      ]
                    }
                  ]
                },
                "match_strategy_matrix": null,
                "model": {
                  "id": "00000000-0000-0000-0000-000000000000",
                  "schemaVersion": "",
                  "version": "",
                  "name": "kubernetes",
                  "displayName": "",
                  "status": "",
                  "registrant": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": "",
                    "credential_id": "00000000-0000-0000-0000-000000000000",
                    "type": "",
                    "sub_type": "",
                    "kind": "github",
                    "status": "",
                    "user_id": "00000000-0000-0000-0000-000000000000",
                    "created_at": "0001-01-01T00:00:00Z",
                    "updated_at": "0001-01-01T00:00:00Z",
                    "deleted_at": "0001-01-01T00:00:00Z"
                  },
                  "connection_id": "00000000-0000-0000-0000-000000000000",
                  "category": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": ""
                  },
                  "subCategory": "",
                  "metadata": null,
                  "model": {
                    "version": ""
                  },
                  "components_count": 0,
                  "relationships_count": 0,
                  "components": null,
                  "relationships": null
                },
                "patch": null
              }
            ],
            "to": [
              {
                "id": "e678a048-8c95-4f49-8045-5cd96370ecf2",
                "kind": "ServiceAccount",
                "match": {
                  "from": [
                    {
                      "id": "45236b47-9d7e-418e-8824-286eeb9d293f",
                      "kind": "ClusterRoleBinding",
                      "mutatedRef": [
                        [
                          "configuration",
                          "subjects",
                          "_",
                          "name"
                        ]
                      ]
                    }
                  ],
                  "to": [
                    {
                      "id": "e678a048-8c95-4f49-8045-5cd96370ecf2",
                      "kind": "self",
                      "mutatorRef": [
                        [
                          "displayName"
                        ]
                      ]
                    }
                  ]
                },
                "match_strategy_matrix": null,
                "model": {
                  "id": "00000000-0000-0000-0000-000000000000",
                  "schemaVersion": "",
                  "version": "",
                  "name": "kubernetes",
                  "displayName": "",
                  "status": "",
                  "registrant": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": "",
                    "credential_id": "00000000-0000-0000-0000-000000000000",
                    "type": "",
                    "sub_type": "",
                    "kind": "github",
                    "status": "",
                    "user_id": "00000000-0000-0000-0000-000000000000",
                    "created_at": "0001-01-01T00:00:00Z",
                    "updated_at": "0001-01-01T00:00:00Z",
                    "deleted_at": "0001-01-01T00:00:00Z"
                  },
                  "connection_id": "00000000-0000-0000-0000-000000000000",
                  "category": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": ""
                  },
                  "subCategory": "",
                  "metadata": null,
                  "model": {
                    "version": ""
                  },
                  "components_count": 0,
                  "relationships_count": 0,
                  "components": null,
                  "relationships": null
                },
                "patch": null
              }
            ]
          }
        }
      ],
      "subType": "permission",
      "status": "approved",
      "type": "binding",
      "version": "v1.0.0"
    },
    {
      "id": "2404b2ca-21d5-4c55-a69c-b3bacb7cb4b0",
      "evaluationQuery": "",
      "kind": "edge",
      "metadata": {
        "description": "In Kubernetes, Secrets are a versatile resource that can be referenced by various other resources to provide configuration data to applications or other Kubnernetes resources.\\n\\nBy referencing ConfigMaps in these various contexts, you can centralize and manage configuration data more efficiently, allowing for easier updates, versioning, and maintenance of configurations in a Kubernetes environment.",
        "styles": {
          "primaryColor": "",
          "svgColor": "",
          "svgWhite": ""
        },
        "isAnnotation": false
      },
      "model": {
        "id": "e633cca6-b6e1-65bf-a440-0d58915e75dd",
        "schemaVersion": "models.meshery.io/v1beta1",
        "version": "v1.0.0",
        "name": "kubernetes",
        "displayName": "Kubernetes",
        "status": "enabled",
        "registrant": {
          "id": "00000000-0000-0000-0000-000000000000",
          "name": "",
          "credential_id": "00000000-0000-0000-0000-000000000000",
          "type": "",
          "sub_type": "",
          "kind": "",
          "status": "",
          "user_id": "00000000-0000-0000-0000-000000000000",
          "created_at": "0001-01-01T00:00:00Z",
          "updated_at": "0001-01-01T00:00:00Z",
          "deleted_at": "0001-01-01T00:00:00Z"
        },
        "connection_id": "f9a29d70-c287-426c-a90c-2a96590c8083",
        "category": {
          "id": "9ca27d0d-66ce-42a9-8c85-6236563f2ddb",
          "name": "Orchestration \u0026 Management"
        },
        "subCategory": "Scheduling \u0026 Orchestration",
        "metadata": {
          "isAnnotation": false,
          "primaryColor": "#326CE5",
          "secondaryColor": "#7aa1f0",
          "shape": "circle",
          "styleOverrides": "",
          "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/kubernetes-color.svg",
          "svgComplete": "",
          "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/kubernetes-white.svg"
        },
        "model": {
          "version": "v1.32.0-alpha.3"
        },
        "components_count": 0,
        "relationships_count": 0,
        "components": null,
        "relationships": null
      },
      "schemaVersion": "relationships.meshery.io/v1alpha3",
      "selectors": [
        {
          "allow": {
            "from": [
              {
                "id": "e9094d62-9fdd-4c67-9a48-a0f9f2606edf",
                "kind": "Secret",
                "match": {},
                "match_strategy_matrix": null,
                "model": {
                  "id": "00000000-0000-0000-0000-000000000000",
                  "schemaVersion": "",
                  "version": "",
                  "name": "kubernetes",
                  "displayName": "",
                  "status": "",
                  "registrant": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": "",
                    "credential_id": "00000000-0000-0000-0000-000000000000",
                    "type": "",
                    "sub_type": "",
                    "kind": "github",
                    "status": "",
                    "user_id": "00000000-0000-0000-0000-000000000000",
                    "created_at": "0001-01-01T00:00:00Z",
                    "updated_at": "0001-01-01T00:00:00Z",
                    "deleted_at": "0001-01-01T00:00:00Z"
                  },
                  "connection_id": "00000000-0000-0000-0000-000000000000",
                  "category": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": ""
                  },
                  "subCategory": "",
                  "metadata": null,
                  "model": {
                    "version": ""
                  },
                  "components_count": 0,
                  "relationships_count": 0,
                  "components": null,
                  "relationships": null
                },
                "patch": {
                  "patchStrategy": "replace",
                  "mutatorRef": [
                    [
                      "displayName"
                    ]
                  ]
                }
              }
            ],
            "to": [
              {
                "id": "8d12e551-c0c4-4294-8bbb-2b6d35acb737",
                "kind": "Deployment",
                "match": {},
                "match_strategy_matrix": null,
                "model": {
                  "id": "00000000-0000-0000-0000-000000000000",
                  "schemaVersion": "",
                  "version": "",
                  "name": "kubernetes",
                  "displayName": "",
                  "status": "",
                  "registrant": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": "",
                    "credential_id": "00000000-0000-0000-0000-000000000000",
                    "type": "",
                    "sub_type": "",
                    "kind": "github",
                    "status": "",
                    "user_id": "00000000-0000-0000-0000-000000000000",
                    "created_at": "0001-01-01T00:00:00Z",
                    "updated_at": "0001-01-01T00:00:00Z",
                    "deleted_at": "0001-01-01T00:00:00Z"
                  },
                  "connection_id": "00000000-0000-0000-0000-000000000000",
                  "category": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": ""
                  },
                  "subCategory": "",
                  "metadata": null,
                  "model": {
                    "version": ""
                  },
                  "components_count": 0,
                  "relationships_count": 0,
                  "components": null,
                  "relationships": null
                },
                "patch": {
                  "patchStrategy": "replace",
                  "mutatedRef": [
                    [
                      "configuration",
                      "spec",
                      "template",
                      "spec",
                      "containers",
                      "0",
                      "envFrom",
                      "0",
                      "secretRef",
                      "name"
                    ]
                  ]
                }
              }
            ]
          },
          "deny": {
            "from": null,
            "to": null
          }
        }
      ],
      "subType": "reference",
      "status": "approved",
      "type": "non-binding",
      "version": "v1.0.0"
    },
    {
      "id": "27f6126b-6b3b-4556-ad68-1cd9a9316fc6",
      "evaluationQuery": "",
      "kind": "edge",
      "metadata": {
        "description": "A relationship that represents a set of permissions",
        "styles": {
          "primaryColor": "",
          "svgColor": "",
          "svgWhite": ""
        },
        "isAnnotation": false
      },
      "model": {
        "id": "e633cca6-b6e1-65bf-a440-0d58915e75dd",
        "schemaVersion": "models.meshery.io/v1beta1",
        "version": "v1.0.0",
        "name": "kubernetes",
        "displayName": "Kubernetes",
        "status": "enabled",
        "registrant": {
          "id": "00000000-0000-0000-0000-000000000000",
          "name": "",
          "credential_id": "00000000-0000-0000-0000-000000000000",
          "type": "",
          "sub_type": "",
          "kind": "",
          "status": "",
          "user_id": "00000000-0000-0000-0000-000000000000",
          "created_at": "0001-01-01T00:00:00Z",
          "updated_at": "0001-01-01T00:00:00Z",
          "deleted_at": "0001-01-01T00:00:00Z"
        },
        "connection_id": "f9a29d70-c287-426c-a90c-2a96590c8083",
        "category": {
          "id": "9ca27d0d-66ce-42a9-8c85-6236563f2ddb",
          "name": "Orchestration \u0026 Management"
        },
        "subCategory": "Scheduling \u0026 Orchestration",
        "metadata": {
          "isAnnotation": false,
          "primaryColor": "#326CE5",
          "secondaryColor": "#7aa1f0",
          "shape": "circle",
          "styleOverrides": "",
          "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/kubernetes-color.svg",
          "svgComplete": "",
          "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/kubernetes-white.svg"
        },
        "model": {
          "version": "v1.32.0-alpha.3"
        },
        "components_count": 0,
        "relationships_count": 0,
        "components": null,
        "relationships": null
      },
      "schemaVersion": "relationships.meshery.io/v1alpha3",
      "selectors": [
        {
          "allow": {
            "from": [
              {
                "id": "90b471fa-60f0-4ec2-9552-4a4912259c63",
                "kind": "Role",
                "match": {
                  "from": [
                    {
                      "id": "90b471fa-60f0-4ec2-9552-4a4912259c63",
                      "kind": "self",
                      "mutatorRef": [
                        [
                          "component",
                          "kind"
                        ],
                        [
                          "displayName"
                        ]
                      ]
                    }
                  ],
                  "to": [
                    {
                      "id": "1052a840-34c0-49d0-abbb-8cb047bb7db7",
                      "kind": "RoleBinding",
                      "mutatedRef": [
                        [
                          "configuration",
                          "roleRef",
                          "kind"
                        ],
                        [
                          "configuration",
                          "roleRef",
                          "name"
                        ]
                      ]
                    }
                  ]
                },
                "match_strategy_matrix": null,
                "model": {
                  "id": "00000000-0000-0000-0000-000000000000",
                  "schemaVersion": "",
                  "version": "",
                  "name": "kubernetes",
                  "displayName": "",
                  "status": "",
                  "registrant": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": "",
                    "credential_id": "00000000-0000-0000-0000-000000000000",
                    "type": "",
                    "sub_type": "",
                    "kind": "github",
                    "status": "",
                    "user_id": "00000000-0000-0000-0000-000000000000",
                    "created_at": "0001-01-01T00:00:00Z",
                    "updated_at": "0001-01-01T00:00:00Z",
                    "deleted_at": "0001-01-01T00:00:00Z"
                  },
                  "connection_id": "00000000-0000-0000-0000-000000000000",
                  "category": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": ""
                  },
                  "subCategory": "",
                  "metadata": null,
                  "model": {
                    "version": ""
                  },
                  "components_count": 0,
                  "relationships_count": 0,
                  "components": null,
                  "relationships": null
                },
                "patch": null
              }
            ],
            "to": [
              {
                "id": "e678a048-8c95-4f49-8045-5cd96370ecf2",
                "kind": "ServiceAccount",
                "match": {
                  "from": [
                    {
                      "id": "1052a840-34c0-49d0-abbb-8cb047bb7db7",
                      "kind": "RoleBinding",
                      "mutatedRef": [
                        [
                          "configuration",
                          "subjects",
                          "_",
                          "name"
                        ]
                      ]
                    }
                  ],
                  "to": [
                    {
                      "id": "e678a048-8c95-4f49-8045-5cd96370ecf2",
                      "kind": "self",
                      "mutatorRef": [
                        [
                          "displayName"
                        ]
                      ]
                    }
                  ]
                },
                "match_strategy_matrix": null,
                "model": {
                  "id": "00000000-0000-0000-0000-000000000000",
                  "schemaVersion": "",
                  "version": "",
                  "name": "kubernetes",
                  "displayName": "",
                  "status": "",
                  "registrant": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": "",
                    "credential_id": "00000000-0000-0000-0000-000000000000",
                    "type": "",
                    "sub_type": "",
                    "kind": "github",
                    "status": "",
                    "user_id": "00000000-0000-0000-0000-000000000000",
                    "created_at": "0001-01-01T00:00:00Z",
                    "updated_at": "0001-01-01T00:00:00Z",
                    "deleted_at": "0001-01-01T00:00:00Z"
                  },
                  "connection_id": "00000000-0000-0000-0000-000000000000",
                  "category": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": ""
                  },
                  "subCategory": "",
                  "metadata": null,
                  "model": {
                    "version": ""
                  },
                  "components_count": 0,
                  "relationships_count": 0,
                  "components": null,
                  "relationships": null
                },
                "patch": null
              }
            ]
          }
        }
      ],
      "subType": "permission",
      "status": "approved",
      "type": "binding",
      "version": "v1.0.0"
    },
    {
      "id": "28367db3-ebfe-4853-91b2-106c1f67a4c1",
      "evaluationQuery": "",
      "kind": "hierarchical",
      "metadata": {
        "description": "Namespace to namespaced components",
        "styles": {
          "primaryColor": "",
          "svgColor": "",
          "svgWhite": ""
        },
        "isAnnotation": false
      },
      "model": {
        "id": "e633cca6-b6e1-65bf-a440-0d58915e75dd",
        "schemaVersion": "models.meshery.io/v1beta1",
        "version": "v1.0.0",
        "name": "kubernetes",
        "displayName": "Kubernetes",
        "status": "enabled",
        "registrant": {
          "id": "00000000-0000-0000-0000-000000000000",
          "name": "",
          "credential_id": "00000000-0000-0000-0000-000000000000",
          "type": "",
          "sub_type": "",
          "kind": "",
          "status": "",
          "user_id": "00000000-0000-0000-0000-000000000000",
          "created_at": "0001-01-01T00:00:00Z",
          "updated_at": "0001-01-01T00:00:00Z",
          "deleted_at": "0001-01-01T00:00:00Z"
        },
        "connection_id": "f9a29d70-c287-426c-a90c-2a96590c8083",
        "category": {
          "id": "9ca27d0d-66ce-42a9-8c85-6236563f2ddb",
          "name": "Orchestration \u0026 Management"
        },
        "subCategory": "Scheduling \u0026 Orchestration",
        "metadata": {
          "isAnnotation": false,
          "primaryColor": "#326CE5",
          "secondaryColor": "#7aa1f0",
          "shape": "circle",
          "styleOverrides": "",
          "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/kubernetes-color.svg",
          "svgComplete": "",
          "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/kubernetes-white.svg"
        },
        "model": {
          "version": "v1.32.0-alpha.3"
        },
        "components_count": 0,
        "relationships_count": 0,
        "components": null,
        "relationships": null
      },
      "schemaVersion": "relationships.meshery.io/v1alpha3",
      "selectors": [
        {
          "allow": {
            "from": [
              {
                "id": "e678a048-8c95-4f49-8045-5cd96370ecf2",
                "kind": "*",
                "match": {},
                "match_strategy_matrix": null,
                "model": {
                  "id": "00000000-0000-0000-0000-000000000000",
                  "schemaVersion": "",
                  "version": "",
                  "name": "*",
                  "displayName": "",
                  "status": "",
                  "registrant": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": "",
                    "credential_id": "00000000-0000-0000-0000-000000000000",
                    "type": "",
                    "sub_type": "",
                    "kind": "",
                    "status": "",
                    "user_id": "00000000-0000-0000-0000-000000000000",
                    "created_at": "0001-01-01T00:00:00Z",
                    "updated_at": "0001-01-01T00:00:00Z",
                    "deleted_at": "0001-01-01T00:00:00Z"
                  },
                  "connection_id": "00000000-0000-0000-0000-000000000000",
                  "category": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": ""
                  },
                  "subCategory": "",
                  "metadata": null,
                  "model": {
                    "version": ""
                  },
                  "components_count": 0,
                  "relationships_count": 0,
                  "components": null,
                  "relationships": null
                },
                "patch": {
                  "patchStrategy": "replace",
                  "mutatedRef": [
                    [
                      "configuration",
                      "metadata",
                      "namespace"
                    ]
                  ]
                }
              }
            ],
            "to": [
              {
                "id": "779771c4-bd19-4425-a27b-a75afd10b4b2",
                "kind": "Namespace",
                "match": {},
                "match_strategy_matrix": null,
                "model": {
                  "id": "00000000-0000-0000-0000-000000000000",
                  "schemaVersion": "",
                  "version": "",
                  "name": "kubernetes",
                  "displayName": "",
                  "status": "",
                  "registrant": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": "",
                    "credential_id": "00000000-0000-0000-0000-000000000000",
                    "type": "",
                    "sub_type": "",
                    "kind": "github",
                    "status": "",
                    "user_id": "00000000-0000-0000-0000-000000000000",
                    "created_at": "0001-01-01T00:00:00Z",
                    "updated_at": "0001-01-01T00:00:00Z",
                    "deleted_at": "0001-01-01T00:00:00Z"
                  },
                  "connection_id": "00000000-0000-0000-0000-000000000000",
                  "category": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": ""
                  },
                  "subCategory": "",
                  "metadata": null,
                  "model": {
                    "version": ""
                  },
                  "components_count": 0,
                  "relationships_count": 0,
                  "components": null,
                  "relationships": null
                },
                "patch": {
                  "patchStrategy": "replace",
                  "mutatorRef": [
                    [
                      "displayName"
                    ]
                  ]
                }
              }
            ]
          }
        }
      ],
      "subType": "inventory",
      "status": "approved",
      "type": "parent",
      "version": "v1.0.0"
    },
    {
      "id": "2a7947b4-943f-492c-91ac-c47b2eddb63b",
      "evaluationQuery": "",
      "kind": "edge",
      "metadata": {
        "description": "A relationship that represents a set of permissions",
        "styles": {
          "primaryColor": "",
          "svgColor": "",
          "svgWhite": ""
        },
        "isAnnotation": false
      },
      "model": {
        "id": "e633cca6-b6e1-65bf-a440-0d58915e75dd",
        "schemaVersion": "models.meshery.io/v1beta1",
        "version": "v1.0.0",
        "name": "kubernetes",
        "displayName": "Kubernetes",
        "status": "enabled",
        "registrant": {
          "id": "00000000-0000-0000-0000-000000000000",
          "name": "",
          "credential_id": "00000000-0000-0000-0000-000000000000",
          "type": "",
          "sub_type": "",
          "kind": "",
          "status": "",
          "user_id": "00000000-0000-0000-0000-000000000000",
          "created_at": "0001-01-01T00:00:00Z",
          "updated_at": "0001-01-01T00:00:00Z",
          "deleted_at": "0001-01-01T00:00:00Z"
        },
        "connection_id": "f9a29d70-c287-426c-a90c-2a96590c8083",
        "category": {
          "id": "9ca27d0d-66ce-42a9-8c85-6236563f2ddb",
          "name": "Orchestration \u0026 Management"
        },
        "subCategory": "Scheduling \u0026 Orchestration",
        "metadata": {
          "isAnnotation": false,
          "primaryColor": "#326CE5",
          "secondaryColor": "#7aa1f0",
          "shape": "circle",
          "styleOverrides": "",
          "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/kubernetes-color.svg",
          "svgComplete": "",
          "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/kubernetes-white.svg"
        },
        "model": {
          "version": "v1.32.0-alpha.3"
        },
        "components_count": 0,
        "relationships_count": 0,
        "components": null,
        "relationships": null
      },
      "schemaVersion": "relationships.meshery.io/v1alpha3",
      "selectors": [
        {
          "allow": {
            "from": [
              {
                "id": "793b33f4-0df4-49c5-9138-7ae3e1c5f0e1",
                "kind": "ClusterRole",
                "match": {
                  "from": [
                    {
                      "id": "793b33f4-0df4-49c5-9138-7ae3e1c5f0e1",
                      "kind": "self",
                      "mutatorRef": [
                        [
                          "component",
                          "kind"
                        ],
                        [
                          "displayName"
                        ]
                      ]
                    }
                  ],
                  "to": [
                    {
                      "id": "c6667bc6-2dd7-4675-82c1-078434108403",
                      "kind": "ClusterRoleBinding",
                      "mutatedRef": [
                        [
                          "configuration",
                          "roleRef",
                          "kind"
                        ],
                        [
                          "configuration",
                          "roleRef",
                          "name"
                        ]
                      ]
                    }
                  ]
                },
                "match_strategy_matrix": null,
                "model": {
                  "id": "00000000-0000-0000-0000-000000000000",
                  "schemaVersion": "",
                  "version": "",
                  "name": "kubernetes",
                  "displayName": "",
                  "status": "",
                  "registrant": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": "",
                    "credential_id": "00000000-0000-0000-0000-000000000000",
                    "type": "",
                    "sub_type": "",
                    "kind": "github",
                    "status": "",
                    "user_id": "00000000-0000-0000-0000-000000000000",
                    "created_at": "0001-01-01T00:00:00Z",
                    "updated_at": "0001-01-01T00:00:00Z",
                    "deleted_at": "0001-01-01T00:00:00Z"
                  },
                  "connection_id": "00000000-0000-0000-0000-000000000000",
                  "category": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": ""
                  },
                  "subCategory": "",
                  "metadata": null,
                  "model": {
                    "version": ""
                  },
                  "components_count": 0,
                  "relationships_count": 0,
                  "components": null,
                  "relationships": null
                },
                "patch": null
              }
            ],
            "to": [
              {
                "id": "345fb78a-0c6d-4547-a801-18d05eb9cbb1",
                "kind": "ServiceAccount",
                "match": {
                  "from": [
                    {
                      "id": "c6667bc6-2dd7-4675-82c1-078434108403",
                      "kind": "ClusterRoleBinding",
                      "mutatedRef": [
                        [
                          "configuration",
                          "subjects",
                          "_",
                          "name"
                        ]
                      ]
                    }
                  ],
                  "to": [
                    {
                      "id": "345fb78a-0c6d-4547-a801-18d05eb9cbb1",
                      "kind": "self",
                      "mutatorRef": [
                        [
                          "displayName"
                        ]
                      ]
                    }
                  ]
                },
                "match_strategy_matrix": null,
                "model": {
                  "id": "00000000-0000-0000-0000-000000000000",
                  "schemaVersion": "",
                  "version": "",
                  "name": "kubernetes",
                  "displayName": "",
                  "status": "",
                  "registrant": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": "",
                    "credential_id": "00000000-0000-0000-0000-000000000000",
                    "type": "",
                    "sub_type": "",
                    "kind": "github",
                    "status": "",
                    "user_id": "00000000-0000-0000-0000-000000000000",
                    "created_at": "0001-01-01T00:00:00Z",
                    "updated_at": "0001-01-01T00:00:00Z",
                    "deleted_at": "0001-01-01T00:00:00Z"
                  },
                  "connection_id": "00000000-0000-0000-0000-000000000000",
                  "category": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": ""
                  },
                  "subCategory": "",
                  "metadata": null,
                  "model": {
                    "version": ""
                  },
                  "components_count": 0,
                  "relationships_count": 0,
                  "components": null,
                  "relationships": null
                },
                "patch": null
              }
            ]
          }
        }
      ],
      "subType": "permission",
      "status": "approved",
      "type": "binding",
      "version": "v1.0.0"
    },
    {
      "id": "30d44f9f-79e8-4f21-9035-4433315d81fc",
      "evaluationQuery": "",
      "kind": "edge",
      "metadata": {
        "description": "A relationship that represents a set of permissions",
        "styles": {
          "primaryColor": "",
          "svgColor": "",
          "svgWhite": ""
        },
        "isAnnotation": false
      },
      "model": {
        "id": "e633cca6-b6e1-65bf-a440-0d58915e75dd",
        "schemaVersion": "models.meshery.io/v1beta1",
        "version": "v1.0.0",
        "name": "kubernetes",
        "displayName": "Kubernetes",
        "status": "enabled",
        "registrant": {
          "id": "00000000-0000-0000-0000-000000000000",
          "name": "",
          "credential_id": "00000000-0000-0000-0000-000000000000",
          "type": "",
          "sub_type": "",
          "kind": "",
          "status": "",
          "user_id": "00000000-0000-0000-0000-000000000000",
          "created_at": "0001-01-01T00:00:00Z",
          "updated_at": "0001-01-01T00:00:00Z",
          "deleted_at": "0001-01-01T00:00:00Z"
        },
        "connection_id": "f9a29d70-c287-426c-a90c-2a96590c8083",
        "category": {
          "id": "9ca27d0d-66ce-42a9-8c85-6236563f2ddb",
          "name": "Orchestration \u0026 Management"
        },
        "subCategory": "Scheduling \u0026 Orchestration",
        "metadata": {
          "isAnnotation": false,
          "primaryColor": "#326CE5",
          "secondaryColor": "#7aa1f0",
          "shape": "circle",
          "styleOverrides": "",
          "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/kubernetes-color.svg",
          "svgComplete": "",
          "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/kubernetes-white.svg"
        },
        "model": {
          "version": "v1.32.0-alpha.3"
        },
        "components_count": 0,
        "relationships_count": 0,
        "components": null,
        "relationships": null
      },
      "schemaVersion": "relationships.meshery.io/v1alpha3",
      "selectors": [
        {
          "allow": {
            "from": [
              {
                "id": "8e946f2c-7b06-4c26-81cd-27a8eb2eb71f",
                "kind": "ClusterRole",
                "match": {
                  "from": [
                    {
                      "id": "8e946f2c-7b06-4c26-81cd-27a8eb2eb71f",
                      "kind": "self",
                      "mutatorRef": [
                        [
                          "component",
                          "kind"
                        ],
                        [
                          "displayName"
                        ]
                      ]
                    }
                  ],
                  "to": [
                    {
                      "id": "7da5f661-a05b-4cd6-84ec-7d8d244fe05b",
                      "kind": "ClusterRoleBinding",
                      "mutatedRef": [
                        [
                          "configuration",
                          "roleRef",
                          "kind"
                        ],
                        [
                          "configuration",
                          "roleRef",
                          "name"
                        ]
                      ]
                    }
                  ]
                },
                "match_strategy_matrix": null,
                "model": {
                  "id": "00000000-0000-0000-0000-000000000000",
                  "schemaVersion": "",
                  "version": "",
                  "name": "kubernetes",
                  "displayName": "",
                  "status": "",
                  "registrant": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": "",
                    "credential_id": "00000000-0000-0000-0000-000000000000",
                    "type": "",
                    "sub_type": "",
                    "kind": "github",
                    "status": "",
                    "user_id": "00000000-0000-0000-0000-000000000000",
                    "created_at": "0001-01-01T00:00:00Z",
                    "updated_at": "0001-01-01T00:00:00Z",
                    "deleted_at": "0001-01-01T00:00:00Z"
                  },
                  "connection_id": "00000000-0000-0000-0000-000000000000",
                  "category": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": ""
                  },
                  "subCategory": "",
                  "metadata": null,
                  "model": {
                    "version": ""
                  },
                  "components_count": 0,
                  "relationships_count": 0,
                  "components": null,
                  "relationships": null
                },
                "patch": null
              }
            ],
            "to": [
              {
                "id": "8020ae58-3287-429c-a6f0-4eaa7c9d182c",
                "kind": "ServiceAccount",
                "match": {
                  "from": [
                    {
                      "id": "7da5f661-a05b-4cd6-84ec-7d8d244fe05b",
                      "kind": "ClusterRoleBinding",
                      "mutatedRef": [
                        [
                          "configuration",
                          "subjects",
                          "_",
                          "name"
                        ]
                      ]
                    }
                  ],
                  "to": [
                    {
                      "id": "8020ae58-3287-429c-a6f0-4eaa7c9d182c",
                      "kind": "self",
                      "mutatorRef": [
                        [
                          "displayName"
                        ]
                      ]
                    }
                  ]
                },
                "match_strategy_matrix": null,
                "model": {
                  "id": "00000000-0000-0000-0000-000000000000",
                  "schemaVersion": "",
                  "version": "",
                  "name": "kubernetes",
                  "displayName": "",
                  "status": "",
                  "registrant": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": "",
                    "credential_id": "00000000-0000-0000-0000-000000000000",
                    "type": "",
                    "sub_type": "",
                    "kind": "github",
                    "status": "",
                    "user_id": "00000000-0000-0000-0000-000000000000",
                    "created_at": "0001-01-01T00:00:00Z",
                    "updated_at": "0001-01-01T00:00:00Z",
                    "deleted_at": "0001-01-01T00:00:00Z"
                  },
                  "connection_id": "00000000-0000-0000-0000-000000000000",
                  "category": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": ""
                  },
                  "subCategory": "",
                  "metadata": null,
                  "model": {
                    "version": ""
                  },
                  "components_count": 0,
                  "relationships_count": 0,
                  "components": null,
                  "relationships": null
                },
                "patch": null
              }
            ]
          }
        }
      ],
      "subType": "permission",
      "status": "approved",
      "type": "binding",
      "version": "v1.0.0"
    },
    {
      "id": "32e38cbd-ee0a-4f08-8a3d-9f4ef2608d95",
      "evaluationQuery": "",
      "kind": "edge",
      "metadata": {
        "description": "In Kubernetes, Secrets are a versatile resource that can be referenced by various other resources to provide configuration data to applications or other Kubnernetes resources.\\n\\nBy referencing ConfigMaps in these various contexts, you can centralize and manage configuration data more efficiently, allowing for easier updates, versioning, and maintenance of configurations in a Kubernetes environment.",
        "styles": {
          "primaryColor": "",
          "svgColor": "",
          "svgWhite": ""
        },
        "isAnnotation": false
      },
      "model": {
        "id": "e633cca6-b6e1-65bf-a440-0d58915e75dd",
        "schemaVersion": "models.meshery.io/v1beta1",
        "version": "v1.0.0",
        "name": "kubernetes",
        "displayName": "Kubernetes",
        "status": "enabled",
        "registrant": {
          "id": "00000000-0000-0000-0000-000000000000",
          "name": "",
          "credential_id": "00000000-0000-0000-0000-000000000000",
          "type": "",
          "sub_type": "",
          "kind": "",
          "status": "",
          "user_id": "00000000-0000-0000-0000-000000000000",
          "created_at": "0001-01-01T00:00:00Z",
          "updated_at": "0001-01-01T00:00:00Z",
          "deleted_at": "0001-01-01T00:00:00Z"
        },
        "connection_id": "f9a29d70-c287-426c-a90c-2a96590c8083",
        "category": {
          "id": "9ca27d0d-66ce-42a9-8c85-6236563f2ddb",
          "name": "Orchestration \u0026 Management"
        },
        "subCategory": "Scheduling \u0026 Orchestration",
        "metadata": {
          "isAnnotation": false,
          "primaryColor": "#326CE5",
          "secondaryColor": "#7aa1f0",
          "shape": "circle",
          "styleOverrides": "",
          "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/kubernetes-color.svg",
          "svgComplete": "",
          "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/kubernetes-white.svg"
        },
        "model": {
          "version": "v1.32.0-alpha.3"
        },
        "components_count": 0,
        "relationships_count": 0,
        "components": null,
        "relationships": null
      },
      "schemaVersion": "relationships.meshery.io/v1alpha3",
      "selectors": [
        {
          "allow": {
            "from": [
              {
                "id": "e9094d62-9fdd-4c67-9a48-a0f9f2606edf",
                "kind": "Secret",
                "match": {},
                "match_strategy_matrix": null,
                "model": {
                  "id": "00000000-0000-0000-0000-000000000000",
                  "schemaVersion": "",
                  "version": "",
                  "name": "kubernetes",
                  "displayName": "",
                  "status": "",
                  "registrant": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": "",
                    "credential_id": "00000000-0000-0000-0000-000000000000",
                    "type": "",
                    "sub_type": "",
                    "kind": "github",
                    "status": "",
                    "user_id": "00000000-0000-0000-0000-000000000000",
                    "created_at": "0001-01-01T00:00:00Z",
                    "updated_at": "0001-01-01T00:00:00Z",
                    "deleted_at": "0001-01-01T00:00:00Z"
                  },
                  "connection_id": "00000000-0000-0000-0000-000000000000",
                  "category": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": ""
                  },
                  "subCategory": "",
                  "metadata": null,
                  "model": {
                    "version": ""
                  },
                  "components_count": 0,
                  "relationships_count": 0,
                  "components": null,
                  "relationships": null
                },
                "patch": {
                  "patchStrategy": "replace",
                  "mutatorRef": [
                    [
                      "configuration",
                      "metadata",
                      "name"
                    ]
                  ]
                }
              }
            ],
            "to": [
              {
                "id": "8d12e551-c0c4-4294-8bbb-2b6d35acb737",
                "kind": "Deployment",
                "match": {},
                "match_strategy_matrix": null,
                "model": {
                  "id": "00000000-0000-0000-0000-000000000000",
                  "schemaVersion": "",
                  "version": "",
                  "name": "kubernetes",
                  "displayName": "",
                  "status": "",
                  "registrant": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": "",
                    "credential_id": "00000000-0000-0000-0000-000000000000",
                    "type": "",
                    "sub_type": "",
                    "kind": "github",
                    "status": "",
                    "user_id": "00000000-0000-0000-0000-000000000000",
                    "created_at": "0001-01-01T00:00:00Z",
                    "updated_at": "0001-01-01T00:00:00Z",
                    "deleted_at": "0001-01-01T00:00:00Z"
                  },
                  "connection_id": "00000000-0000-0000-0000-000000000000",
                  "category": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": ""
                  },
                  "subCategory": "",
                  "metadata": null,
                  "model": {
                    "version": ""
                  },
                  "components_count": 0,
                  "relationships_count": 0,
                  "components": null,
                  "relationships": null
                },
                "patch": {
                  "patchStrategy": "replace",
                  "mutatedRef": [
                    [
                      "configuration",
                      "spec",
                      "template",
                      "spec",
                      "containers",
                      "0",
                      "envFrom",
                      "0",
                      "secretRef",
                      "name"
                    ]
                  ]
                }
              }
            ]
          },
          "deny": {
            "from": null,
            "to": null
          }
        }
      ],
      "subType": "reference",
      "status": "approved",
      "type": "non-binding",
      "version": "v1.0.0"
    },
    {
      "id": "37418500-a203-401d-8e45-8ef99ed1c8a8",
      "evaluationQuery": "",
      "kind": "hierarchical",
      "metadata": {
        "description": "Namespace to namespaced components",
        "styles": {
          "primaryColor": "",
          "svgColor": "",
          "svgWhite": ""
        },
        "isAnnotation": false
      },
      "model": {
        "id": "e633cca6-b6e1-65bf-a440-0d58915e75dd",
        "schemaVersion": "models.meshery.io/v1beta1",
        "version": "v1.0.0",
        "name": "kubernetes",
        "displayName": "Kubernetes",
        "status": "enabled",
        "registrant": {
          "id": "00000000-0000-0000-0000-000000000000",
          "name": "",
          "credential_id": "00000000-0000-0000-0000-000000000000",
          "type": "",
          "sub_type": "",
          "kind": "",
          "status": "",
          "user_id": "00000000-0000-0000-0000-000000000000",
          "created_at": "0001-01-01T00:00:00Z",
          "updated_at": "0001-01-01T00:00:00Z",
          "deleted_at": "0001-01-01T00:00:00Z"
        },
        "connection_id": "f9a29d70-c287-426c-a90c-2a96590c8083",
        "category": {
          "id": "9ca27d0d-66ce-42a9-8c85-6236563f2ddb",
          "name": "Orchestration \u0026 Management"
        },
        "subCategory": "Scheduling \u0026 Orchestration",
        "metadata": {
          "isAnnotation": false,
          "primaryColor": "#326CE5",
          "secondaryColor": "#7aa1f0",
          "shape": "circle",
          "styleOverrides": "",
          "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/kubernetes-color.svg",
          "svgComplete": "",
          "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/kubernetes-white.svg"
        },
        "model": {
          "version": "v1.32.0-alpha.3"
        },
        "components_count": 0,
        "relationships_count": 0,
        "components": null,
        "relationships": null
      },
      "schemaVersion": "relationships.meshery.io/v1alpha3",
      "selectors": [
        {
          "allow": {
            "from": [
              {
                "id": "9cdedfe3-17ea-4c1e-b07e-abf36d3dd9c7",
                "kind": "*",
                "match": {},
                "match_strategy_matrix": null,
                "model": {
                  "id": "00000000-0000-0000-0000-000000000000",
                  "schemaVersion": "",
                  "version": "",
                  "name": "*",
                  "displayName": "",
                  "status": "",
                  "registrant": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": "",
                    "credential_id": "00000000-0000-0000-0000-000000000000",
                    "type": "",
                    "sub_type": "",
                    "kind": "",
                    "status": "",
                    "user_id": "00000000-0000-0000-0000-000000000000",
                    "created_at": "0001-01-01T00:00:00Z",
                    "updated_at": "0001-01-01T00:00:00Z",
                    "deleted_at": "0001-01-01T00:00:00Z"
                  },
                  "connection_id": "00000000-0000-0000-0000-000000000000",
                  "category": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": ""
                  },
                  "subCategory": "",
                  "metadata": null,
                  "model": {
                    "version": ""
                  },
                  "components_count": 0,
                  "relationships_count": 0,
                  "components": null,
                  "relationships": null
                },
                "patch": {
                  "patchStrategy": "replace",
                  "mutatedRef": [
                    [
                      "configuration",
                      "metadata",
                      "namespace"
                    ]
                  ]
                }
              }
            ],
            "to": [
              {
                "id": "bdbf668e-ec96-48a3-9dac-47a5717756fc",
                "kind": "Namespace",
                "match": {},
                "match_strategy_matrix": null,
                "model": {
                  "id": "00000000-0000-0000-0000-000000000000",
                  "schemaVersion": "",
                  "version": "",
                  "name": "kubernetes",
                  "displayName": "",
                  "status": "",
                  "registrant": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": "",
                    "credential_id": "00000000-0000-0000-0000-000000000000",
                    "type": "",
                    "sub_type": "",
                    "kind": "github",
                    "status": "",
                    "user_id": "00000000-0000-0000-0000-000000000000",
                    "created_at": "0001-01-01T00:00:00Z",
                    "updated_at": "0001-01-01T00:00:00Z",
                    "deleted_at": "0001-01-01T00:00:00Z"
                  },
                  "connection_id": "00000000-0000-0000-0000-000000000000",
                  "category": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": ""
                  },
                  "subCategory": "",
                  "metadata": null,
                  "model": {
                    "version": ""
                  },
                  "components_count": 0,
                  "relationships_count": 0,
                  "components": null,
                  "relationships": null
                },
                "patch": {
                  "patchStrategy": "replace",
                  "mutatorRef": [
                    [
                      "displayName"
                    ]
                  ]
                }
              }
            ]
          }
        }
      ],
      "subType": "inventory",
      "status": "approved",
      "type": "parent",
      "version": "v1.0.0"
    },
    {
      "id": "41da4c79-4a0f-4bae-8bc5-29ff79c7c7ca",
      "evaluationQuery": "",
      "kind": "hierarchical",
      "metadata": {
        "description": "Namespace to namespaced components",
        "styles": {
          "primaryColor": "",
          "svgColor": "",
          "svgWhite": ""
        },
        "isAnnotation": false
      },
      "model": {
        "id": "e633cca6-b6e1-65bf-a440-0d58915e75dd",
        "schemaVersion": "models.meshery.io/v1beta1",
        "version": "v1.0.0",
        "name": "kubernetes",
        "displayName": "Kubernetes",
        "status": "enabled",
        "registrant": {
          "id": "00000000-0000-0000-0000-000000000000",
          "name": "",
          "credential_id": "00000000-0000-0000-0000-000000000000",
          "type": "",
          "sub_type": "",
          "kind": "",
          "status": "",
          "user_id": "00000000-0000-0000-0000-000000000000",
          "created_at": "0001-01-01T00:00:00Z",
          "updated_at": "0001-01-01T00:00:00Z",
          "deleted_at": "0001-01-01T00:00:00Z"
        },
        "connection_id": "f9a29d70-c287-426c-a90c-2a96590c8083",
        "category": {
          "id": "9ca27d0d-66ce-42a9-8c85-6236563f2ddb",
          "name": "Orchestration \u0026 Management"
        },
        "subCategory": "Scheduling \u0026 Orchestration",
        "metadata": {
          "isAnnotation": false,
          "primaryColor": "#326CE5",
          "secondaryColor": "#7aa1f0",
          "shape": "circle",
          "styleOverrides": "",
          "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/kubernetes-color.svg",
          "svgComplete": "",
          "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/kubernetes-white.svg"
        },
        "model": {
          "version": "v1.32.0-alpha.3"
        },
        "components_count": 0,
        "relationships_count": 0,
        "components": null,
        "relationships": null
      },
      "schemaVersion": "relationships.meshery.io/v1alpha3",
      "selectors": [
        {
          "allow": {
            "from": [
              {
                "id": "99c24ba2-ce1f-4db4-8348-4695534463da",
                "kind": "*",
                "match": {},
                "match_strategy_matrix": null,
                "model": {
                  "id": "00000000-0000-0000-0000-000000000000",
                  "schemaVersion": "",
                  "version": "",
                  "name": "*",
                  "displayName": "",
                  "status": "",
                  "registrant": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": "",
                    "credential_id": "00000000-0000-0000-0000-000000000000",
                    "type": "",
                    "sub_type": "",
                    "kind": "",
                    "status": "",
                    "user_id": "00000000-0000-0000-0000-000000000000",
                    "created_at": "0001-01-01T00:00:00Z",
                    "updated_at": "0001-01-01T00:00:00Z",
                    "deleted_at": "0001-01-01T00:00:00Z"
                  },
                  "connection_id": "00000000-0000-0000-0000-000000000000",
                  "category": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": ""
                  },
                  "subCategory": "",
                  "metadata": null,
                  "model": {
                    "version": ""
                  },
                  "components_count": 0,
                  "relationships_count": 0,
                  "components": null,
                  "relationships": null
                },
                "patch": {
                  "patchStrategy": "replace",
                  "mutatedRef": [
                    [
                      "configuration",
                      "metadata",
                      "namespace"
                    ]
                  ]
                }
              }
            ],
            "to": [
              {
                "id": "779771c4-bd19-4425-a27b-a75afd10b4b2",
                "kind": "Namespace",
                "match": {},
                "match_strategy_matrix": null,
                "model": {
                  "id": "00000000-0000-0000-0000-000000000000",
                  "schemaVersion": "",
                  "version": "",
                  "name": "kubernetes",
                  "displayName": "",
                  "status": "",
                  "registrant": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": "",
                    "credential_id": "00000000-0000-0000-0000-000000000000",
                    "type": "",
                    "sub_type": "",
                    "kind": "github",
                    "status": "",
                    "user_id": "00000000-0000-0000-0000-000000000000",
                    "created_at": "0001-01-01T00:00:00Z",
                    "updated_at": "0001-01-01T00:00:00Z",
                    "deleted_at": "0001-01-01T00:00:00Z"
                  },
                  "connection_id": "00000000-0000-0000-0000-000000000000",
                  "category": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": ""
                  },
                  "subCategory": "",
                  "metadata": null,
                  "model": {
                    "version": ""
                  },
                  "components_count": 0,
                  "relationships_count": 0,
                  "components": null,
                  "relationships": null
                },
                "patch": {
                  "patchStrategy": "replace",
                  "mutatorRef": [
                    [
                      "displayName"
                    ]
                  ]
                }
              }
            ]
          }
        }
      ],
      "subType": "inventory",
      "status": "approved",
      "type": "parent",
      "version": "v1.0.0"
    },
    {
      "id": "43870961-7efc-4400-9c29-12de11d5a5f8",
      "evaluationQuery": "",
      "kind": "edge",
      "metadata": {
        "description": "A relationship that represents a set of permissions",
        "styles": {
          "primaryColor": "",
          "svgColor": "",
          "svgWhite": ""
        },
        "isAnnotation": false
      },
      "model": {
        "id": "e633cca6-b6e1-65bf-a440-0d58915e75dd",
        "schemaVersion": "models.meshery.io/v1beta1",
        "version": "v1.0.0",
        "name": "kubernetes",
        "displayName": "Kubernetes",
        "status": "enabled",
        "registrant": {
          "id": "00000000-0000-0000-0000-000000000000",
          "name": "",
          "credential_id": "00000000-0000-0000-0000-000000000000",
          "type": "",
          "sub_type": "",
          "kind": "",
          "status": "",
          "user_id": "00000000-0000-0000-0000-000000000000",
          "created_at": "0001-01-01T00:00:00Z",
          "updated_at": "0001-01-01T00:00:00Z",
          "deleted_at": "0001-01-01T00:00:00Z"
        },
        "connection_id": "f9a29d70-c287-426c-a90c-2a96590c8083",
        "category": {
          "id": "9ca27d0d-66ce-42a9-8c85-6236563f2ddb",
          "name": "Orchestration \u0026 Management"
        },
        "subCategory": "Scheduling \u0026 Orchestration",
        "metadata": {
          "isAnnotation": false,
          "primaryColor": "#326CE5",
          "secondaryColor": "#7aa1f0",
          "shape": "circle",
          "styleOverrides": "",
          "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/kubernetes-color.svg",
          "svgComplete": "",
          "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/kubernetes-white.svg"
        },
        "model": {
          "version": "v1.32.0-alpha.3"
        },
        "components_count": 0,
        "relationships_count": 0,
        "components": null,
        "relationships": null
      },
      "schemaVersion": "relationships.meshery.io/v1alpha3",
      "selectors": [
        {
          "allow": {
            "from": [
              {
                "id": "9f53affc-e535-4e98-ae74-3049a759f348",
                "kind": "ClusterRole",
                "match": {
                  "from": [
                    {
                      "id": "9f53affc-e535-4e98-ae74-3049a759f348",
                      "kind": "self",
                      "mutatorRef": [
                        [
                          "component",
                          "kind"
                        ],
                        [
                          "displayName"
                        ]
                      ]
                    }
                  ],
                  "to": [
                    {
                      "id": "c55f6acc-ad14-4c67-a14a-633df0c4558d",
                      "kind": "ClusterRoleBinding",
                      "mutatedRef": [
                        [
                          "configuration",
                          "roleRef",
                          "kind"
                        ],
                        [
                          "configuration",
                          "roleRef",
                          "name"
                        ]
                      ]
                    }
                  ]
                },
                "match_strategy_matrix": null,
                "model": {
                  "id": "00000000-0000-0000-0000-000000000000",
                  "schemaVersion": "",
                  "version": "",
                  "name": "kubernetes",
                  "displayName": "",
                  "status": "",
                  "registrant": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": "",
                    "credential_id": "00000000-0000-0000-0000-000000000000",
                    "type": "",
                    "sub_type": "",
                    "kind": "github",
                    "status": "",
                    "user_id": "00000000-0000-0000-0000-000000000000",
                    "created_at": "0001-01-01T00:00:00Z",
                    "updated_at": "0001-01-01T00:00:00Z",
                    "deleted_at": "0001-01-01T00:00:00Z"
                  },
                  "connection_id": "00000000-0000-0000-0000-000000000000",
                  "category": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": ""
                  },
                  "subCategory": "",
                  "metadata": null,
                  "model": {
                    "version": ""
                  },
                  "components_count": 0,
                  "relationships_count": 0,
                  "components": null,
                  "relationships": null
                },
                "patch": null
              }
            ],
            "to": [
              {
                "id": "8020ae58-3287-429c-a6f0-4eaa7c9d182c",
                "kind": "ServiceAccount",
                "match": {
                  "from": [
                    {
                      "id": "c55f6acc-ad14-4c67-a14a-633df0c4558d",
                      "kind": "ClusterRoleBinding",
                      "mutatedRef": [
                        [
                          "configuration",
                          "subjects",
                          "_",
                          "name"
                        ]
                      ]
                    }
                  ],
                  "to": [
                    {
                      "id": "8020ae58-3287-429c-a6f0-4eaa7c9d182c",
                      "kind": "self",
                      "mutatorRef": [
                        [
                          "displayName"
                        ]
                      ]
                    }
                  ]
                },
                "match_strategy_matrix": null,
                "model": {
                  "id": "00000000-0000-0000-0000-000000000000",
                  "schemaVersion": "",
                  "version": "",
                  "name": "kubernetes",
                  "displayName": "",
                  "status": "",
                  "registrant": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": "",
                    "credential_id": "00000000-0000-0000-0000-000000000000",
                    "type": "",
                    "sub_type": "",
                    "kind": "github",
                    "status": "",
                    "user_id": "00000000-0000-0000-0000-000000000000",
                    "created_at": "0001-01-01T00:00:00Z",
                    "updated_at": "0001-01-01T00:00:00Z",
                    "deleted_at": "0001-01-01T00:00:00Z"
                  },
                  "connection_id": "00000000-0000-0000-0000-000000000000",
                  "category": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": ""
                  },
                  "subCategory": "",
                  "metadata": null,
                  "model": {
                    "version": ""
                  },
                  "components_count": 0,
                  "relationships_count": 0,
                  "components": null,
                  "relationships": null
                },
                "patch": null
              }
            ]
          }
        }
      ],
      "subType": "permission",
      "status": "approved",
      "type": "binding",
      "version": "v1.0.0"
    },
    {
      "id": "46ba610b-d304-4a0b-890b-d4da9d40bfbe",
      "evaluationQuery": "",
      "kind": "edge",
      "metadata": {
        "description": "A relationship that represents a set of permissions",
        "styles": {
          "primaryColor": "",
          "svgColor": "",
          "svgWhite": ""
        },
        "isAnnotation": false
      },
      "model": {
        "id": "e633cca6-b6e1-65bf-a440-0d58915e75dd",
        "schemaVersion": "models.meshery.io/v1beta1",
        "version": "v1.0.0",
        "name": "kubernetes",
        "displayName": "Kubernetes",
        "status": "enabled",
        "registrant": {
          "id": "00000000-0000-0000-0000-000000000000",
          "name": "",
          "credential_id": "00000000-0000-0000-0000-000000000000",
          "type": "",
          "sub_type": "",
          "kind": "",
          "status": "",
          "user_id": "00000000-0000-0000-0000-000000000000",
          "created_at": "0001-01-01T00:00:00Z",
          "updated_at": "0001-01-01T00:00:00Z",
          "deleted_at": "0001-01-01T00:00:00Z"
        },
        "connection_id": "f9a29d70-c287-426c-a90c-2a96590c8083",
        "category": {
          "id": "9ca27d0d-66ce-42a9-8c85-6236563f2ddb",
          "name": "Orchestration \u0026 Management"
        },
        "subCategory": "Scheduling \u0026 Orchestration",
        "metadata": {
          "isAnnotation": false,
          "primaryColor": "#326CE5",
          "secondaryColor": "#7aa1f0",
          "shape": "circle",
          "styleOverrides": "",
          "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/kubernetes-color.svg",
          "svgComplete": "",
          "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/kubernetes-white.svg"
        },
        "model": {
          "version": "v1.32.0-alpha.3"
        },
        "components_count": 0,
        "relationships_count": 0,
        "components": null,
        "relationships": null
      },
      "schemaVersion": "relationships.meshery.io/v1alpha3",
      "selectors": [
        {
          "allow": {
            "from": [
              {
                "id": "e8972199-7a00-4fc9-8729-5c66c227607c",
                "kind": "ClusterRole",
                "match": {
                  "from": [
                    {
                      "id": "e8972199-7a00-4fc9-8729-5c66c227607c",
                      "kind": "self",
                      "mutatorRef": [
                        [
                          "component",
                          "kind"
                        ],
                        [
                          "displayName"
                        ]
                      ]
                    }
                  ],
                  "to": [
                    {
                      "id": "145ba7cd-4884-442d-ab80-105010ff64e2",
                      "kind": "ClusterRoleBinding",
                      "mutatedRef": [
                        [
                          "configuration",
                          "roleRef",
                          "kind"
                        ],
                        [
                          "configuration",
                          "roleRef",
                          "name"
                        ]
                      ]
                    }
                  ]
                },
                "match_strategy_matrix": null,
                "model": {
                  "id": "00000000-0000-0000-0000-000000000000",
                  "schemaVersion": "",
                  "version": "",
                  "name": "kubernetes",
                  "displayName": "",
                  "status": "",
                  "registrant": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": "",
                    "credential_id": "00000000-0000-0000-0000-000000000000",
                    "type": "",
                    "sub_type": "",
                    "kind": "github",
                    "status": "",
                    "user_id": "00000000-0000-0000-0000-000000000000",
                    "created_at": "0001-01-01T00:00:00Z",
                    "updated_at": "0001-01-01T00:00:00Z",
                    "deleted_at": "0001-01-01T00:00:00Z"
                  },
                  "connection_id": "00000000-0000-0000-0000-000000000000",
                  "category": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": ""
                  },
                  "subCategory": "",
                  "metadata": null,
                  "model": {
                    "version": ""
                  },
                  "components_count": 0,
                  "relationships_count": 0,
                  "components": null,
                  "relationships": null
                },
                "patch": null
              }
            ],
            "to": [
              {
                "id": "1327b2fc-d03f-46c3-9772-f39a70707d95",
                "kind": "ServiceAccount",
                "match": {
                  "from": [
                    {
                      "id": "145ba7cd-4884-442d-ab80-105010ff64e2",
                      "kind": "ClusterRoleBinding",
                      "mutatedRef": [
                        [
                          "configuration",
                          "subjects",
                          "_",
                          "name"
                        ]
                      ]
                    }
                  ],
                  "to": [
                    {
                      "id": "1327b2fc-d03f-46c3-9772-f39a70707d95",
                      "kind": "self",
                      "mutatorRef": [
                        [
                          "displayName"
                        ]
                      ]
                    }
                  ]
                },
                "match_strategy_matrix": null,
                "model": {
                  "id": "00000000-0000-0000-0000-000000000000",
                  "schemaVersion": "",
                  "version": "",
                  "name": "kubernetes",
                  "displayName": "",
                  "status": "",
                  "registrant": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": "",
                    "credential_id": "00000000-0000-0000-0000-000000000000",
                    "type": "",
                    "sub_type": "",
                    "kind": "github",
                    "status": "",
                    "user_id": "00000000-0000-0000-0000-000000000000",
                    "created_at": "0001-01-01T00:00:00Z",
                    "updated_at": "0001-01-01T00:00:00Z",
                    "deleted_at": "0001-01-01T00:00:00Z"
                  },
                  "connection_id": "00000000-0000-0000-0000-000000000000",
                  "category": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": ""
                  },
                  "subCategory": "",
                  "metadata": null,
                  "model": {
                    "version": ""
                  },
                  "components_count": 0,
                  "relationships_count": 0,
                  "components": null,
                  "relationships": null
                },
                "patch": null
              }
            ]
          }
        }
      ],
      "subType": "permission",
      "status": "approved",
      "type": "binding",
      "version": "v1.0.0"
    },
    {
      "id": "50bb01b2-a892-4990-82f4-775b8ef8beab",
      "evaluationQuery": "",
      "kind": "hierarchical",
      "metadata": {
        "description": "A hierarchical inventory relationship in which the configuration of (parent) component is patched with the configuration of other (child) component. Eg: The configuration of the EnvoyFilter (parent) component is patched with the configuration as received from WASMFilter (child) component.",
        "styles": {
          "primaryColor": "",
          "svgColor": "",
          "svgWhite": ""
        },
        "isAnnotation": false
      },
      "model": {
        "id": "e633cca6-b6e1-65bf-a440-0d58915e75dd",
        "schemaVersion": "models.meshery.io/v1beta1",
        "version": "v1.0.0",
        "name": "kubernetes",
        "displayName": "Kubernetes",
        "status": "enabled",
        "registrant": {
          "id": "00000000-0000-0000-0000-000000000000",
          "name": "",
          "credential_id": "00000000-0000-0000-0000-000000000000",
          "type": "",
          "sub_type": "",
          "kind": "",
          "status": "",
          "user_id": "00000000-0000-0000-0000-000000000000",
          "created_at": "0001-01-01T00:00:00Z",
          "updated_at": "0001-01-01T00:00:00Z",
          "deleted_at": "0001-01-01T00:00:00Z"
        },
        "connection_id": "f9a29d70-c287-426c-a90c-2a96590c8083",
        "category": {
          "id": "9ca27d0d-66ce-42a9-8c85-6236563f2ddb",
          "name": "Orchestration \u0026 Management"
        },
        "subCategory": "Scheduling \u0026 Orchestration",
        "metadata": {
          "isAnnotation": false,
          "primaryColor": "#326CE5",
          "secondaryColor": "#7aa1f0",
          "shape": "circle",
          "styleOverrides": "",
          "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/kubernetes-color.svg",
          "svgComplete": "",
          "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/kubernetes-white.svg"
        },
        "model": {
          "version": "v1.32.0-alpha.3"
        },
        "components_count": 0,
        "relationships_count": 0,
        "components": null,
        "relationships": null
      },
      "schemaVersion": "relationships.meshery.io/v1alpha3",
      "selectors": [
        {
          "allow": {
            "from": [
              {
                "id": "2714a376-ebaa-463e-81a0-c1730f5a4f3c",
                "kind": "Container",
                "match": {},
                "match_strategy_matrix": null,
                "model": {
                  "id": "00000000-0000-0000-0000-000000000000",
                  "schemaVersion": "",
                  "version": "",
                  "name": "meshery-core",
                  "displayName": "",
                  "status": "",
                  "registrant": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": "",
                    "credential_id": "00000000-0000-0000-0000-000000000000",
                    "type": "",
                    "sub_type": "",
                    "kind": "github",
                    "status": "",
                    "user_id": "00000000-0000-0000-0000-000000000000",
                    "created_at": "0001-01-01T00:00:00Z",
                    "updated_at": "0001-01-01T00:00:00Z",
                    "deleted_at": "0001-01-01T00:00:00Z"
                  },
                  "connection_id": "00000000-0000-0000-0000-000000000000",
                  "category": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": ""
                  },
                  "subCategory": "",
                  "metadata": null,
                  "model": {
                    "version": ""
                  },
                  "components_count": 0,
                  "relationships_count": 0,
                  "components": null,
                  "relationships": null
                },
                "patch": {
                  "patchStrategy": "replace",
                  "mutatorRef": [
                    [
                      "configuration",
                      "spec",
                      "template",
                      "spec",
                      "containers",
                      "0"
                    ]
                  ],
                  "mutatedRef": [
                    [
                      "configuration",
                      "spec",
                      "template",
                      "spec",
                      "containers",
                      "0"
                    ]
                  ]
                }
              }
            ],
            "to": [
              {
                "id": "62a77c06-e758-452b-bf5f-b9f1414a4b3b",
                "kind": "Deployment",
                "match": {},
                "match_strategy_matrix": null,
                "model": {
                  "id": "00000000-0000-0000-0000-000000000000",
                  "schemaVersion": "",
                  "version": "",
                  "name": "kubernetes",
                  "displayName": "",
                  "status": "",
                  "registrant": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": "",
                    "credential_id": "00000000-0000-0000-0000-000000000000",
                    "type": "",
                    "sub_type": "",
                    "kind": "github",
                    "status": "",
                    "user_id": "00000000-0000-0000-0000-000000000000",
                    "created_at": "0001-01-01T00:00:00Z",
                    "updated_at": "0001-01-01T00:00:00Z",
                    "deleted_at": "0001-01-01T00:00:00Z"
                  },
                  "connection_id": "00000000-0000-0000-0000-000000000000",
                  "category": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": ""
                  },
                  "subCategory": "",
                  "metadata": null,
                  "model": {
                    "version": ""
                  },
                  "components_count": 0,
                  "relationships_count": 0,
                  "components": null,
                  "relationships": null
                },
                "patch": {
                  "patchStrategy": "replace",
                  "mutatorRef": [
                    [
                      "configuration",
                      "spec",
                      "template",
                      "spec",
                      "containers",
                      "0"
                    ]
                  ],
                  "mutatedRef": [
                    [
                      "configuration",
                      "spec",
                      "template",
                      "spec",
                      "containers",
                      "0"
                    ]
                  ]
                }
              }
            ]
          },
          "deny": {
            "from": null,
            "to": null
          }
        }
      ],
      "subType": "alias",
      "status": "approved",
      "type": "parent",
      "version": "v1.0.0"
    },
    {
      "id": "5218a103-3ed3-4e8a-97a0-b06648c9d0f2",
      "evaluationQuery": "",
      "kind": "hierarchical",
      "metadata": {
        "description": "Namespace to namespaced components",
        "styles": {
          "primaryColor": "",
          "svgColor": "",
          "svgWhite": ""
        },
        "isAnnotation": false
      },
      "model": {
        "id": "e633cca6-b6e1-65bf-a440-0d58915e75dd",
        "schemaVersion": "models.meshery.io/v1beta1",
        "version": "v1.0.0",
        "name": "kubernetes",
        "displayName": "Kubernetes",
        "status": "enabled",
        "registrant": {
          "id": "00000000-0000-0000-0000-000000000000",
          "name": "",
          "credential_id": "00000000-0000-0000-0000-000000000000",
          "type": "",
          "sub_type": "",
          "kind": "",
          "status": "",
          "user_id": "00000000-0000-0000-0000-000000000000",
          "created_at": "0001-01-01T00:00:00Z",
          "updated_at": "0001-01-01T00:00:00Z",
          "deleted_at": "0001-01-01T00:00:00Z"
        },
        "connection_id": "f9a29d70-c287-426c-a90c-2a96590c8083",
        "category": {
          "id": "9ca27d0d-66ce-42a9-8c85-6236563f2ddb",
          "name": "Orchestration \u0026 Management"
        },
        "subCategory": "Scheduling \u0026 Orchestration",
        "metadata": {
          "isAnnotation": false,
          "primaryColor": "#326CE5",
          "secondaryColor": "#7aa1f0",
          "shape": "circle",
          "styleOverrides": "",
          "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/kubernetes-color.svg",
          "svgComplete": "",
          "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/kubernetes-white.svg"
        },
        "model": {
          "version": "v1.32.0-alpha.3"
        },
        "components_count": 0,
        "relationships_count": 0,
        "components": null,
        "relationships": null
      },
      "schemaVersion": "relationships.meshery.io/v1alpha3",
      "selectors": [
        {
          "allow": {
            "from": [
              {
                "id": "f54c199e-ae09-47c8-82cf-a718fc84d8a9",
                "kind": "*",
                "match": {},
                "match_strategy_matrix": null,
                "model": {
                  "id": "00000000-0000-0000-0000-000000000000",
                  "schemaVersion": "",
                  "version": "",
                  "name": "*",
                  "displayName": "",
                  "status": "",
                  "registrant": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": "",
                    "credential_id": "00000000-0000-0000-0000-000000000000",
                    "type": "",
                    "sub_type": "",
                    "kind": "",
                    "status": "",
                    "user_id": "00000000-0000-0000-0000-000000000000",
                    "created_at": "0001-01-01T00:00:00Z",
                    "updated_at": "0001-01-01T00:00:00Z",
                    "deleted_at": "0001-01-01T00:00:00Z"
                  },
                  "connection_id": "00000000-0000-0000-0000-000000000000",
                  "category": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": ""
                  },
                  "subCategory": "",
                  "metadata": null,
                  "model": {
                    "version": ""
                  },
                  "components_count": 0,
                  "relationships_count": 0,
                  "components": null,
                  "relationships": null
                },
                "patch": {
                  "patchStrategy": "replace",
                  "mutatedRef": [
                    [
                      "configuration",
                      "metadata",
                      "namespace"
                    ]
                  ]
                }
              }
            ],
            "to": [
              {
                "id": "9cc4d1ff-1ae8-4b4e-9108-bef31408d0da",
                "kind": "Namespace",
                "match": {},
                "match_strategy_matrix": null,
                "model": {
                  "id": "00000000-0000-0000-0000-000000000000",
                  "schemaVersion": "",
                  "version": "",
                  "name": "kubernetes",
                  "displayName": "",
                  "status": "",
                  "registrant": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": "",
                    "credential_id": "00000000-0000-0000-0000-000000000000",
                    "type": "",
                    "sub_type": "",
                    "kind": "github",
                    "status": "",
                    "user_id": "00000000-0000-0000-0000-000000000000",
                    "created_at": "0001-01-01T00:00:00Z",
                    "updated_at": "0001-01-01T00:00:00Z",
                    "deleted_at": "0001-01-01T00:00:00Z"
                  },
                  "connection_id": "00000000-0000-0000-0000-000000000000",
                  "category": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": ""
                  },
                  "subCategory": "",
                  "metadata": null,
                  "model": {
                    "version": ""
                  },
                  "components_count": 0,
                  "relationships_count": 0,
                  "components": null,
                  "relationships": null
                },
                "patch": {
                  "patchStrategy": "replace",
                  "mutatorRef": [
                    [
                      "displayName"
                    ]
                  ]
                }
              }
            ]
          }
        }
      ],
      "subType": "inventory",
      "status": "approved",
      "type": "parent",
      "version": "v1.0.0"
    },
    {
      "id": "549c55e9-1cf3-429c-8fb1-2a9840b54369",
      "evaluationQuery": "",
      "kind": "hierarchical",
      "metadata": {
        "description": "Namespace to namespaced components",
        "styles": {
          "primaryColor": "",
          "svgColor": "",
          "svgWhite": ""
        },
        "isAnnotation": false
      },
      "model": {
        "id": "e633cca6-b6e1-65bf-a440-0d58915e75dd",
        "schemaVersion": "models.meshery.io/v1beta1",
        "version": "v1.0.0",
        "name": "kubernetes",
        "displayName": "Kubernetes",
        "status": "enabled",
        "registrant": {
          "id": "00000000-0000-0000-0000-000000000000",
          "name": "",
          "credential_id": "00000000-0000-0000-0000-000000000000",
          "type": "",
          "sub_type": "",
          "kind": "",
          "status": "",
          "user_id": "00000000-0000-0000-0000-000000000000",
          "created_at": "0001-01-01T00:00:00Z",
          "updated_at": "0001-01-01T00:00:00Z",
          "deleted_at": "0001-01-01T00:00:00Z"
        },
        "connection_id": "f9a29d70-c287-426c-a90c-2a96590c8083",
        "category": {
          "id": "9ca27d0d-66ce-42a9-8c85-6236563f2ddb",
          "name": "Orchestration \u0026 Management"
        },
        "subCategory": "Scheduling \u0026 Orchestration",
        "metadata": {
          "isAnnotation": false,
          "primaryColor": "#326CE5",
          "secondaryColor": "#7aa1f0",
          "shape": "circle",
          "styleOverrides": "",
          "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/kubernetes-color.svg",
          "svgComplete": "",
          "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/kubernetes-white.svg"
        },
        "model": {
          "version": "v1.32.0-alpha.3"
        },
        "components_count": 0,
        "relationships_count": 0,
        "components": null,
        "relationships": null
      },
      "schemaVersion": "relationships.meshery.io/v1alpha3",
      "selectors": [
        {
          "allow": {
            "from": [
              {
                "id": "f520b3fc-be04-4f09-9e68-d84fc1ba017c",
                "kind": "*",
                "match": {},
                "match_strategy_matrix": null,
                "model": {
                  "id": "00000000-0000-0000-0000-000000000000",
                  "schemaVersion": "",
                  "version": "",
                  "name": "*",
                  "displayName": "",
                  "status": "",
                  "registrant": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": "",
                    "credential_id": "00000000-0000-0000-0000-000000000000",
                    "type": "",
                    "sub_type": "",
                    "kind": "",
                    "status": "",
                    "user_id": "00000000-0000-0000-0000-000000000000",
                    "created_at": "0001-01-01T00:00:00Z",
                    "updated_at": "0001-01-01T00:00:00Z",
                    "deleted_at": "0001-01-01T00:00:00Z"
                  },
                  "connection_id": "00000000-0000-0000-0000-000000000000",
                  "category": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": ""
                  },
                  "subCategory": "",
                  "metadata": null,
                  "model": {
                    "version": ""
                  },
                  "components_count": 0,
                  "relationships_count": 0,
                  "components": null,
                  "relationships": null
                },
                "patch": {
                  "patchStrategy": "replace",
                  "mutatedRef": [
                    [
                      "configuration",
                      "metadata",
                      "namespace"
                    ]
                  ]
                }
              }
            ],
            "to": [
              {
                "id": "779771c4-bd19-4425-a27b-a75afd10b4b2",
                "kind": "Namespace",
                "match": {},
                "match_strategy_matrix": null,
                "model": {
                  "id": "00000000-0000-0000-0000-000000000000",
                  "schemaVersion": "",
                  "version": "",
                  "name": "kubernetes",
                  "displayName": "",
                  "status": "",
                  "registrant": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": "",
                    "credential_id": "00000000-0000-0000-0000-000000000000",
                    "type": "",
                    "sub_type": "",
                    "kind": "github",
                    "status": "",
                    "user_id": "00000000-0000-0000-0000-000000000000",
                    "created_at": "0001-01-01T00:00:00Z",
                    "updated_at": "0001-01-01T00:00:00Z",
                    "deleted_at": "0001-01-01T00:00:00Z"
                  },
                  "connection_id": "00000000-0000-0000-0000-000000000000",
                  "category": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": ""
                  },
                  "subCategory": "",
                  "metadata": null,
                  "model": {
                    "version": ""
                  },
                  "components_count": 0,
                  "relationships_count": 0,
                  "components": null,
                  "relationships": null
                },
                "patch": {
                  "patchStrategy": "replace",
                  "mutatorRef": [
                    [
                      "displayName"
                    ]
                  ]
                }
              }
            ]
          }
        }
      ],
      "subType": "inventory",
      "status": "approved",
      "type": "parent",
      "version": "v1.0.0"
    },
    {
      "id": "55aa4ec5-a752-44a4-b997-150d80583f10",
      "evaluationQuery": "",
      "kind": "hierarchical",
      "metadata": {
        "description": "Namespace to namespaced components",
        "styles": {
          "primaryColor": "",
          "svgColor": "",
          "svgWhite": ""
        },
        "isAnnotation": false
      },
      "model": {
        "id": "e633cca6-b6e1-65bf-a440-0d58915e75dd",
        "schemaVersion": "models.meshery.io/v1beta1",
        "version": "v1.0.0",
        "name": "kubernetes",
        "displayName": "Kubernetes",
        "status": "enabled",
        "registrant": {
          "id": "00000000-0000-0000-0000-000000000000",
          "name": "",
          "credential_id": "00000000-0000-0000-0000-000000000000",
          "type": "",
          "sub_type": "",
          "kind": "",
          "status": "",
          "user_id": "00000000-0000-0000-0000-000000000000",
          "created_at": "0001-01-01T00:00:00Z",
          "updated_at": "0001-01-01T00:00:00Z",
          "deleted_at": "0001-01-01T00:00:00Z"
        },
        "connection_id": "f9a29d70-c287-426c-a90c-2a96590c8083",
        "category": {
          "id": "9ca27d0d-66ce-42a9-8c85-6236563f2ddb",
          "name": "Orchestration \u0026 Management"
        },
        "subCategory": "Scheduling \u0026 Orchestration",
        "metadata": {
          "isAnnotation": false,
          "primaryColor": "#326CE5",
          "secondaryColor": "#7aa1f0",
          "shape": "circle",
          "styleOverrides": "",
          "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/kubernetes-color.svg",
          "svgComplete": "",
          "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/kubernetes-white.svg"
        },
        "model": {
          "version": "v1.32.0-alpha.3"
        },
        "components_count": 0,
        "relationships_count": 0,
        "components": null,
        "relationships": null
      },
      "schemaVersion": "relationships.meshery.io/v1alpha3",
      "selectors": [
        {
          "allow": {
            "from": [
              {
                "id": "117150c9-92f6-47f3-bf8f-0a73c1f11575",
                "kind": "*",
                "match": {},
                "match_strategy_matrix": null,
                "model": {
                  "id": "00000000-0000-0000-0000-000000000000",
                  "schemaVersion": "",
                  "version": "",
                  "name": "*",
                  "displayName": "",
                  "status": "",
                  "registrant": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": "",
                    "credential_id": "00000000-0000-0000-0000-000000000000",
                    "type": "",
                    "sub_type": "",
                    "kind": "",
                    "status": "",
                    "user_id": "00000000-0000-0000-0000-000000000000",
                    "created_at": "0001-01-01T00:00:00Z",
                    "updated_at": "0001-01-01T00:00:00Z",
                    "deleted_at": "0001-01-01T00:00:00Z"
                  },
                  "connection_id": "00000000-0000-0000-0000-000000000000",
                  "category": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": ""
                  },
                  "subCategory": "",
                  "metadata": null,
                  "model": {
                    "version": ""
                  },
                  "components_count": 0,
                  "relationships_count": 0,
                  "components": null,
                  "relationships": null
                },
                "patch": {
                  "patchStrategy": "replace",
                  "mutatedRef": [
                    [
                      "configuration",
                      "metadata",
                      "namespace"
                    ]
                  ]
                }
              }
            ],
            "to": [
              {
                "id": "9cc4d1ff-1ae8-4b4e-9108-bef31408d0da",
                "kind": "Namespace",
                "match": {},
                "match_strategy_matrix": null,
                "model": {
                  "id": "00000000-0000-0000-0000-000000000000",
                  "schemaVersion": "",
                  "version": "",
                  "name": "kubernetes",
                  "displayName": "",
                  "status": "",
                  "registrant": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": "",
                    "credential_id": "00000000-0000-0000-0000-000000000000",
                    "type": "",
                    "sub_type": "",
                    "kind": "github",
                    "status": "",
                    "user_id": "00000000-0000-0000-0000-000000000000",
                    "created_at": "0001-01-01T00:00:00Z",
                    "updated_at": "0001-01-01T00:00:00Z",
                    "deleted_at": "0001-01-01T00:00:00Z"
                  },
                  "connection_id": "00000000-0000-0000-0000-000000000000",
                  "category": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": ""
                  },
                  "subCategory": "",
                  "metadata": null,
                  "model": {
                    "version": ""
                  },
                  "components_count": 0,
                  "relationships_count": 0,
                  "components": null,
                  "relationships": null
                },
                "patch": {
                  "patchStrategy": "replace",
                  "mutatorRef": [
                    [
                      "displayName"
                    ]
                  ]
                }
              }
            ]
          }
        }
      ],
      "subType": "inventory",
      "status": "approved",
      "type": "parent",
      "version": "v1.0.0"
    },
    {
      "id": "55c09265-b08b-4c6c-b58f-2aa3cb9a9e9c",
      "evaluationQuery": "",
      "kind": "edge",
      "metadata": {
        "description": "A relationship that represents a set of permissions",
        "styles": {
          "primaryColor": "",
          "svgColor": "",
          "svgWhite": ""
        },
        "isAnnotation": false
      },
      "model": {
        "id": "e633cca6-b6e1-65bf-a440-0d58915e75dd",
        "schemaVersion": "models.meshery.io/v1beta1",
        "version": "v1.0.0",
        "name": "kubernetes",
        "displayName": "Kubernetes",
        "status": "enabled",
        "registrant": {
          "id": "00000000-0000-0000-0000-000000000000",
          "name": "",
          "credential_id": "00000000-0000-0000-0000-000000000000",
          "type": "",
          "sub_type": "",
          "kind": "",
          "status": "",
          "user_id": "00000000-0000-0000-0000-000000000000",
          "created_at": "0001-01-01T00:00:00Z",
          "updated_at": "0001-01-01T00:00:00Z",
          "deleted_at": "0001-01-01T00:00:00Z"
        },
        "connection_id": "f9a29d70-c287-426c-a90c-2a96590c8083",
        "category": {
          "id": "9ca27d0d-66ce-42a9-8c85-6236563f2ddb",
          "name": "Orchestration \u0026 Management"
        },
        "subCategory": "Scheduling \u0026 Orchestration",
        "metadata": {
          "isAnnotation": false,
          "primaryColor": "#326CE5",
          "secondaryColor": "#7aa1f0",
          "shape": "circle",
          "styleOverrides": "",
          "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/kubernetes-color.svg",
          "svgComplete": "",
          "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/kubernetes-white.svg"
        },
        "model": {
          "version": "v1.32.0-alpha.3"
        },
        "components_count": 0,
        "relationships_count": 0,
        "components": null,
        "relationships": null
      },
      "schemaVersion": "relationships.meshery.io/v1alpha3",
      "selectors": [
        {
          "allow": {
            "from": [
              {
                "id": "f54c199e-ae09-47c8-82cf-a718fc84d8a9",
                "kind": "Role",
                "match": {
                  "from": [
                    {
                      "id": "f54c199e-ae09-47c8-82cf-a718fc84d8a9",
                      "kind": "self",
                      "mutatorRef": [
                        [
                          "component",
                          "kind"
                        ],
                        [
                          "displayName"
                        ]
                      ]
                    }
                  ],
                  "to": [
                    {
                      "id": "117150c9-92f6-47f3-bf8f-0a73c1f11575",
                      "kind": "RoleBinding",
                      "mutatedRef": [
                        [
                          "configuration",
                          "roleRef",
                          "kind"
                        ],
                        [
                          "configuration",
                          "roleRef",
                          "name"
                        ]
                      ]
                    }
                  ]
                },
                "match_strategy_matrix": null,
                "model": {
                  "id": "00000000-0000-0000-0000-000000000000",
                  "schemaVersion": "",
                  "version": "",
                  "name": "kubernetes",
                  "displayName": "",
                  "status": "",
                  "registrant": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": "",
                    "credential_id": "00000000-0000-0000-0000-000000000000",
                    "type": "",
                    "sub_type": "",
                    "kind": "github",
                    "status": "",
                    "user_id": "00000000-0000-0000-0000-000000000000",
                    "created_at": "0001-01-01T00:00:00Z",
                    "updated_at": "0001-01-01T00:00:00Z",
                    "deleted_at": "0001-01-01T00:00:00Z"
                  },
                  "connection_id": "00000000-0000-0000-0000-000000000000",
                  "category": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": ""
                  },
                  "subCategory": "",
                  "metadata": null,
                  "model": {
                    "version": ""
                  },
                  "components_count": 0,
                  "relationships_count": 0,
                  "components": null,
                  "relationships": null
                },
                "patch": null
              }
            ],
            "to": [
              {
                "id": "345fb78a-0c6d-4547-a801-18d05eb9cbb1",
                "kind": "ServiceAccount",
                "match": {
                  "from": [
                    {
                      "id": "117150c9-92f6-47f3-bf8f-0a73c1f11575",
                      "kind": "RoleBinding",
                      "mutatedRef": [
                        [
                          "configuration",
                          "subjects",
                          "_",
                          "name"
                        ]
                      ]
                    }
                  ],
                  "to": [
                    {
                      "id": "345fb78a-0c6d-4547-a801-18d05eb9cbb1",
                      "kind": "self",
                      "mutatorRef": [
                        [
                          "displayName"
                        ]
                      ]
                    }
                  ]
                },
                "match_strategy_matrix": null,
                "model": {
                  "id": "00000000-0000-0000-0000-000000000000",
                  "schemaVersion": "",
                  "version": "",
                  "name": "kubernetes",
                  "displayName": "",
                  "status": "",
                  "registrant": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": "",
                    "credential_id": "00000000-0000-0000-0000-000000000000",
                    "type": "",
                    "sub_type": "",
                    "kind": "github",
                    "status": "",
                    "user_id": "00000000-0000-0000-0000-000000000000",
                    "created_at": "0001-01-01T00:00:00Z",
                    "updated_at": "0001-01-01T00:00:00Z",
                    "deleted_at": "0001-01-01T00:00:00Z"
                  },
                  "connection_id": "00000000-0000-0000-0000-000000000000",
                  "category": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": ""
                  },
                  "subCategory": "",
                  "metadata": null,
                  "model": {
                    "version": ""
                  },
                  "components_count": 0,
                  "relationships_count": 0,
                  "components": null,
                  "relationships": null
                },
                "patch": null
              }
            ]
          }
        }
      ],
      "subType": "permission",
      "status": "approved",
      "type": "binding",
      "version": "v1.0.0"
    },
    {
      "id": "5b879027-a09c-4393-abcf-379a3b243ec5",
      "evaluationQuery": "",
      "kind": "edge",
      "metadata": {
        "description": "In Kubernetes, Secrets are a versatile resource that can be referenced by various other resources to provide configuration data to applications or other Kubnernetes resources.\\n\\nBy referencing ConfigMaps in these various contexts, you can centralize and manage configuration data more efficiently, allowing for easier updates, versioning, and maintenance of configurations in a Kubernetes environment.",
        "styles": {
          "primaryColor": "",
          "svgColor": "",
          "svgWhite": ""
        },
        "isAnnotation": false
      },
      "model": {
        "id": "e633cca6-b6e1-65bf-a440-0d58915e75dd",
        "schemaVersion": "models.meshery.io/v1beta1",
        "version": "v1.0.0",
        "name": "kubernetes",
        "displayName": "Kubernetes",
        "status": "enabled",
        "registrant": {
          "id": "00000000-0000-0000-0000-000000000000",
          "name": "",
          "credential_id": "00000000-0000-0000-0000-000000000000",
          "type": "",
          "sub_type": "",
          "kind": "",
          "status": "",
          "user_id": "00000000-0000-0000-0000-000000000000",
          "created_at": "0001-01-01T00:00:00Z",
          "updated_at": "0001-01-01T00:00:00Z",
          "deleted_at": "0001-01-01T00:00:00Z"
        },
        "connection_id": "f9a29d70-c287-426c-a90c-2a96590c8083",
        "category": {
          "id": "9ca27d0d-66ce-42a9-8c85-6236563f2ddb",
          "name": "Orchestration \u0026 Management"
        },
        "subCategory": "Scheduling \u0026 Orchestration",
        "metadata": {
          "isAnnotation": false,
          "primaryColor": "#326CE5",
          "secondaryColor": "#7aa1f0",
          "shape": "circle",
          "styleOverrides": "",
          "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/kubernetes-color.svg",
          "svgComplete": "",
          "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/kubernetes-white.svg"
        },
        "model": {
          "version": "v1.32.0-alpha.3"
        },
        "components_count": 0,
        "relationships_count": 0,
        "components": null,
        "relationships": null
      },
      "schemaVersion": "relationships.meshery.io/v1alpha3",
      "selectors": [
        {
          "allow": {
            "from": [
              {
                "id": "e9094d62-9fdd-4c67-9a48-a0f9f2606edf",
                "kind": "Secret",
                "match": {},
                "match_strategy_matrix": null,
                "model": {
                  "id": "00000000-0000-0000-0000-000000000000",
                  "schemaVersion": "",
                  "version": "",
                  "name": "kubernetes",
                  "displayName": "",
                  "status": "",
                  "registrant": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": "",
                    "credential_id": "00000000-0000-0000-0000-000000000000",
                    "type": "",
                    "sub_type": "",
                    "kind": "github",
                    "status": "",
                    "user_id": "00000000-0000-0000-0000-000000000000",
                    "created_at": "0001-01-01T00:00:00Z",
                    "updated_at": "0001-01-01T00:00:00Z",
                    "deleted_at": "0001-01-01T00:00:00Z"
                  },
                  "connection_id": "00000000-0000-0000-0000-000000000000",
                  "category": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": ""
                  },
                  "subCategory": "",
                  "metadata": null,
                  "model": {
                    "version": ""
                  },
                  "components_count": 0,
                  "relationships_count": 0,
                  "components": null,
                  "relationships": null
                },
                "patch": {
                  "patchStrategy": "replace",
                  "mutatorRef": [
                    [
                      "displayName"
                    ]
                  ]
                }
              }
            ],
            "to": [
              {
                "id": "62a77c06-e758-452b-bf5f-b9f1414a4b3b",
                "kind": "Deployment",
                "match": {},
                "match_strategy_matrix": null,
                "model": {
                  "id": "00000000-0000-0000-0000-000000000000",
                  "schemaVersion": "",
                  "version": "",
                  "name": "kubernetes",
                  "displayName": "",
                  "status": "",
                  "registrant": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": "",
                    "credential_id": "00000000-0000-0000-0000-000000000000",
                    "type": "",
                    "sub_type": "",
                    "kind": "github",
                    "status": "",
                    "user_id": "00000000-0000-0000-0000-000000000000",
                    "created_at": "0001-01-01T00:00:00Z",
                    "updated_at": "0001-01-01T00:00:00Z",
                    "deleted_at": "0001-01-01T00:00:00Z"
                  },
                  "connection_id": "00000000-0000-0000-0000-000000000000",
                  "category": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": ""
                  },
                  "subCategory": "",
                  "metadata": null,
                  "model": {
                    "version": ""
                  },
                  "components_count": 0,
                  "relationships_count": 0,
                  "components": null,
                  "relationships": null
                },
                "patch": {
                  "patchStrategy": "replace",
                  "mutatedRef": [
                    [
                      "configuration",
                      "spec",
                      "template",
                      "spec",
                      "containers",
                      "0",
                      "envFrom",
                      "0",
                      "secretRef",
                      "name"
                    ]
                  ]
                }
              }
            ]
          },
          "deny": {
            "from": null,
            "to": null
          }
        }
      ],
      "subType": "reference",
      "status": "approved",
      "type": "non-binding",
      "version": "v1.0.0"
    },
    {
      "id": "60e2b8bd-d836-468e-9271-2356ad82f37f",
      "evaluationQuery": "",
      "kind": "hierarchical",
      "metadata": {
        "description": "Namespace to namespaced components",
        "styles": {
          "primaryColor": "",
          "svgColor": "",
          "svgWhite": ""
        },
        "isAnnotation": false
      },
      "model": {
        "id": "e633cca6-b6e1-65bf-a440-0d58915e75dd",
        "schemaVersion": "models.meshery.io/v1beta1",
        "version": "v1.0.0",
        "name": "kubernetes",
        "displayName": "Kubernetes",
        "status": "enabled",
        "registrant": {
          "id": "00000000-0000-0000-0000-000000000000",
          "name": "",
          "credential_id": "00000000-0000-0000-0000-000000000000",
          "type": "",
          "sub_type": "",
          "kind": "",
          "status": "",
          "user_id": "00000000-0000-0000-0000-000000000000",
          "created_at": "0001-01-01T00:00:00Z",
          "updated_at": "0001-01-01T00:00:00Z",
          "deleted_at": "0001-01-01T00:00:00Z"
        },
        "connection_id": "f9a29d70-c287-426c-a90c-2a96590c8083",
        "category": {
          "id": "9ca27d0d-66ce-42a9-8c85-6236563f2ddb",
          "name": "Orchestration \u0026 Management"
        },
        "subCategory": "Scheduling \u0026 Orchestration",
        "metadata": {
          "isAnnotation": false,
          "primaryColor": "#326CE5",
          "secondaryColor": "#7aa1f0",
          "shape": "circle",
          "styleOverrides": "",
          "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/kubernetes-color.svg",
          "svgComplete": "",
          "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/kubernetes-white.svg"
        },
        "model": {
          "version": "v1.32.0-alpha.3"
        },
        "components_count": 0,
        "relationships_count": 0,
        "components": null,
        "relationships": null
      },
      "schemaVersion": "relationships.meshery.io/v1alpha3",
      "selectors": [
        {
          "allow": {
            "from": [
              {
                "id": "8020ae58-3287-429c-a6f0-4eaa7c9d182c",
                "kind": "*",
                "match": {},
                "match_strategy_matrix": null,
                "model": {
                  "id": "00000000-0000-0000-0000-000000000000",
                  "schemaVersion": "",
                  "version": "",
                  "name": "*",
                  "displayName": "",
                  "status": "",
                  "registrant": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": "",
                    "credential_id": "00000000-0000-0000-0000-000000000000",
                    "type": "",
                    "sub_type": "",
                    "kind": "",
                    "status": "",
                    "user_id": "00000000-0000-0000-0000-000000000000",
                    "created_at": "0001-01-01T00:00:00Z",
                    "updated_at": "0001-01-01T00:00:00Z",
                    "deleted_at": "0001-01-01T00:00:00Z"
                  },
                  "connection_id": "00000000-0000-0000-0000-000000000000",
                  "category": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": ""
                  },
                  "subCategory": "",
                  "metadata": null,
                  "model": {
                    "version": ""
                  },
                  "components_count": 0,
                  "relationships_count": 0,
                  "components": null,
                  "relationships": null
                },
                "patch": {
                  "patchStrategy": "replace",
                  "mutatedRef": [
                    [
                      "configuration",
                      "metadata",
                      "namespace"
                    ]
                  ]
                }
              }
            ],
            "to": [
              {
                "id": "779771c4-bd19-4425-a27b-a75afd10b4b2",
                "kind": "Namespace",
                "match": {},
                "match_strategy_matrix": null,
                "model": {
                  "id": "00000000-0000-0000-0000-000000000000",
                  "schemaVersion": "",
                  "version": "",
                  "name": "kubernetes",
                  "displayName": "",
                  "status": "",
                  "registrant": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": "",
                    "credential_id": "00000000-0000-0000-0000-000000000000",
                    "type": "",
                    "sub_type": "",
                    "kind": "github",
                    "status": "",
                    "user_id": "00000000-0000-0000-0000-000000000000",
                    "created_at": "0001-01-01T00:00:00Z",
                    "updated_at": "0001-01-01T00:00:00Z",
                    "deleted_at": "0001-01-01T00:00:00Z"
                  },
                  "connection_id": "00000000-0000-0000-0000-000000000000",
                  "category": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": ""
                  },
                  "subCategory": "",
                  "metadata": null,
                  "model": {
                    "version": ""
                  },
                  "components_count": 0,
                  "relationships_count": 0,
                  "components": null,
                  "relationships": null
                },
                "patch": {
                  "patchStrategy": "replace",
                  "mutatorRef": [
                    [
                      "displayName"
                    ]
                  ]
                }
              }
            ]
          }
        }
      ],
      "subType": "inventory",
      "status": "approved",
      "type": "parent",
      "version": "v1.0.0"
    },
    {
      "id": "632b3146-7ffe-48fd-9ee0-dec397eee20b",
      "evaluationQuery": "",
      "kind": "edge",
      "metadata": {
        "description": "A relationship that represents a set of permissions",
        "styles": {
          "primaryColor": "",
          "svgColor": "",
          "svgWhite": ""
        },
        "isAnnotation": false
      },
      "model": {
        "id": "e633cca6-b6e1-65bf-a440-0d58915e75dd",
        "schemaVersion": "models.meshery.io/v1beta1",
        "version": "v1.0.0",
        "name": "kubernetes",
        "displayName": "Kubernetes",
        "status": "enabled",
        "registrant": {
          "id": "00000000-0000-0000-0000-000000000000",
          "name": "",
          "credential_id": "00000000-0000-0000-0000-000000000000",
          "type": "",
          "sub_type": "",
          "kind": "",
          "status": "",
          "user_id": "00000000-0000-0000-0000-000000000000",
          "created_at": "0001-01-01T00:00:00Z",
          "updated_at": "0001-01-01T00:00:00Z",
          "deleted_at": "0001-01-01T00:00:00Z"
        },
        "connection_id": "f9a29d70-c287-426c-a90c-2a96590c8083",
        "category": {
          "id": "9ca27d0d-66ce-42a9-8c85-6236563f2ddb",
          "name": "Orchestration \u0026 Management"
        },
        "subCategory": "Scheduling \u0026 Orchestration",
        "metadata": {
          "isAnnotation": false,
          "primaryColor": "#326CE5",
          "secondaryColor": "#7aa1f0",
          "shape": "circle",
          "styleOverrides": "",
          "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/kubernetes-color.svg",
          "svgComplete": "",
          "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/kubernetes-white.svg"
        },
        "model": {
          "version": "v1.32.0-alpha.3"
        },
        "components_count": 0,
        "relationships_count": 0,
        "components": null,
        "relationships": null
      },
      "schemaVersion": "relationships.meshery.io/v1alpha3",
      "selectors": [
        {
          "allow": {
            "from": [
              {
                "id": "af8c6036-e749-4e27-9113-f2446dbed047",
                "kind": "ClusterRole",
                "match": {
                  "from": [
                    {
                      "id": "af8c6036-e749-4e27-9113-f2446dbed047",
                      "kind": "self",
                      "mutatorRef": [
                        [
                          "component",
                          "kind"
                        ],
                        [
                          "displayName"
                        ]
                      ]
                    }
                  ],
                  "to": [
                    {
                      "id": "db16fcd0-db19-40ef-8853-b1a5e109ff4c",
                      "kind": "ClusterRoleBinding",
                      "mutatedRef": [
                        [
                          "configuration",
                          "roleRef",
                          "kind"
                        ],
                        [
                          "configuration",
                          "roleRef",
                          "name"
                        ]
                      ]
                    }
                  ]
                },
                "match_strategy_matrix": null,
                "model": {
                  "id": "00000000-0000-0000-0000-000000000000",
                  "schemaVersion": "",
                  "version": "",
                  "name": "kubernetes",
                  "displayName": "",
                  "status": "",
                  "registrant": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": "",
                    "credential_id": "00000000-0000-0000-0000-000000000000",
                    "type": "",
                    "sub_type": "",
                    "kind": "github",
                    "status": "",
                    "user_id": "00000000-0000-0000-0000-000000000000",
                    "created_at": "0001-01-01T00:00:00Z",
                    "updated_at": "0001-01-01T00:00:00Z",
                    "deleted_at": "0001-01-01T00:00:00Z"
                  },
                  "connection_id": "00000000-0000-0000-0000-000000000000",
                  "category": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": ""
                  },
                  "subCategory": "",
                  "metadata": null,
                  "model": {
                    "version": ""
                  },
                  "components_count": 0,
                  "relationships_count": 0,
                  "components": null,
                  "relationships": null
                },
                "patch": null
              }
            ],
            "to": [
              {
                "id": "8020ae58-3287-429c-a6f0-4eaa7c9d182c",
                "kind": "ServiceAccount",
                "match": {
                  "from": [
                    {
                      "id": "db16fcd0-db19-40ef-8853-b1a5e109ff4c",
                      "kind": "ClusterRoleBinding",
                      "mutatedRef": [
                        [
                          "configuration",
                          "subjects",
                          "_",
                          "name"
                        ]
                      ]
                    }
                  ],
                  "to": [
                    {
                      "id": "8020ae58-3287-429c-a6f0-4eaa7c9d182c",
                      "kind": "self",
                      "mutatorRef": [
                        [
                          "displayName"
                        ]
                      ]
                    }
                  ]
                },
                "match_strategy_matrix": null,
                "model": {
                  "id": "00000000-0000-0000-0000-000000000000",
                  "schemaVersion": "",
                  "version": "",
                  "name": "kubernetes",
                  "displayName": "",
                  "status": "",
                  "registrant": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": "",
                    "credential_id": "00000000-0000-0000-0000-000000000000",
                    "type": "",
                    "sub_type": "",
                    "kind": "github",
                    "status": "",
                    "user_id": "00000000-0000-0000-0000-000000000000",
                    "created_at": "0001-01-01T00:00:00Z",
                    "updated_at": "0001-01-01T00:00:00Z",
                    "deleted_at": "0001-01-01T00:00:00Z"
                  },
                  "connection_id": "00000000-0000-0000-0000-000000000000",
                  "category": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": ""
                  },
                  "subCategory": "",
                  "metadata": null,
                  "model": {
                    "version": ""
                  },
                  "components_count": 0,
                  "relationships_count": 0,
                  "components": null,
                  "relationships": null
                },
                "patch": null
              }
            ]
          }
        }
      ],
      "subType": "permission",
      "status": "approved",
      "type": "binding",
      "version": "v1.0.0"
    },
    {
      "id": "652fed5b-7bb0-4eee-b742-b56dcc820528",
      "evaluationQuery": "",
      "kind": "edge",
      "metadata": {
        "description": "In Kubernetes, Secrets are a versatile resource that can be referenced by various other resources to provide configuration data to applications or other Kubnernetes resources.\\n\\nBy referencing ConfigMaps in these various contexts, you can centralize and manage configuration data more efficiently, allowing for easier updates, versioning, and maintenance of configurations in a Kubernetes environment.",
        "styles": {
          "primaryColor": "",
          "svgColor": "",
          "svgWhite": ""
        },
        "isAnnotation": false
      },
      "model": {
        "id": "e633cca6-b6e1-65bf-a440-0d58915e75dd",
        "schemaVersion": "models.meshery.io/v1beta1",
        "version": "v1.0.0",
        "name": "kubernetes",
        "displayName": "Kubernetes",
        "status": "enabled",
        "registrant": {
          "id": "00000000-0000-0000-0000-000000000000",
          "name": "",
          "credential_id": "00000000-0000-0000-0000-000000000000",
          "type": "",
          "sub_type": "",
          "kind": "",
          "status": "",
          "user_id": "00000000-0000-0000-0000-000000000000",
          "created_at": "0001-01-01T00:00:00Z",
          "updated_at": "0001-01-01T00:00:00Z",
          "deleted_at": "0001-01-01T00:00:00Z"
        },
        "connection_id": "f9a29d70-c287-426c-a90c-2a96590c8083",
        "category": {
          "id": "9ca27d0d-66ce-42a9-8c85-6236563f2ddb",
          "name": "Orchestration \u0026 Management"
        },
        "subCategory": "Scheduling \u0026 Orchestration",
        "metadata": {
          "isAnnotation": false,
          "primaryColor": "#326CE5",
          "secondaryColor": "#7aa1f0",
          "shape": "circle",
          "styleOverrides": "",
          "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/kubernetes-color.svg",
          "svgComplete": "",
          "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/kubernetes-white.svg"
        },
        "model": {
          "version": "v1.32.0-alpha.3"
        },
        "components_count": 0,
        "relationships_count": 0,
        "components": null,
        "relationships": null
      },
      "schemaVersion": "relationships.meshery.io/v1alpha3",
      "selectors": [
        {
          "allow": {
            "from": [
              {
                "id": "e9094d62-9fdd-4c67-9a48-a0f9f2606edf",
                "kind": "Secret",
                "match": {},
                "match_strategy_matrix": null,
                "model": {
                  "id": "00000000-0000-0000-0000-000000000000",
                  "schemaVersion": "",
                  "version": "",
                  "name": "kubernetes",
                  "displayName": "",
                  "status": "",
                  "registrant": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": "",
                    "credential_id": "00000000-0000-0000-0000-000000000000",
                    "type": "",
                    "sub_type": "",
                    "kind": "github",
                    "status": "",
                    "user_id": "00000000-0000-0000-0000-000000000000",
                    "created_at": "0001-01-01T00:00:00Z",
                    "updated_at": "0001-01-01T00:00:00Z",
                    "deleted_at": "0001-01-01T00:00:00Z"
                  },
                  "connection_id": "00000000-0000-0000-0000-000000000000",
                  "category": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": ""
                  },
                  "subCategory": "",
                  "metadata": null,
                  "model": {
                    "version": ""
                  },
                  "components_count": 0,
                  "relationships_count": 0,
                  "components": null,
                  "relationships": null
                },
                "patch": {
                  "patchStrategy": "replace",
                  "mutatorRef": [
                    [
                      "configuration",
                      "metadata",
                      "name"
                    ]
                  ]
                }
              }
            ],
            "to": [
              {
                "id": "ad59bd7c-5594-4269-ba27-07579c5370f9",
                "kind": "Deployment",
                "match": {},
                "match_strategy_matrix": null,
                "model": {
                  "id": "00000000-0000-0000-0000-000000000000",
                  "schemaVersion": "",
                  "version": "",
                  "name": "kubernetes",
                  "displayName": "",
                  "status": "",
                  "registrant": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": "",
                    "credential_id": "00000000-0000-0000-0000-000000000000",
                    "type": "",
                    "sub_type": "",
                    "kind": "github",
                    "status": "",
                    "user_id": "00000000-0000-0000-0000-000000000000",
                    "created_at": "0001-01-01T00:00:00Z",
                    "updated_at": "0001-01-01T00:00:00Z",
                    "deleted_at": "0001-01-01T00:00:00Z"
                  },
                  "connection_id": "00000000-0000-0000-0000-000000000000",
                  "category": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": ""
                  },
                  "subCategory": "",
                  "metadata": null,
                  "model": {
                    "version": ""
                  },
                  "components_count": 0,
                  "relationships_count": 0,
                  "components": null,
                  "relationships": null
                },
                "patch": {
                  "patchStrategy": "replace",
                  "mutatedRef": [
                    [
                      "configuration",
                      "spec",
                      "template",
                      "spec",
                      "containers",
                      "0",
                      "envFrom",
                      "0",
                      "secretRef",
                      "name"
                    ]
                  ]
                }
              }
            ]
          },
          "deny": {
            "from": null,
            "to": null
          }
        }
      ],
      "subType": "reference",
      "status": "approved",
      "type": "non-binding",
      "version": "v1.0.0"
    },
    {
      "id": "6ce11d39-3eef-4f49-8587-d6b8898e811b",
      "evaluationQuery": "",
      "kind": "hierarchical",
      "metadata": {
        "description": "Namespace to namespaced components",
        "styles": {
          "primaryColor": "",
          "svgColor": "",
          "svgWhite": ""
        },
        "isAnnotation": false
      },
      "model": {
        "id": "e633cca6-b6e1-65bf-a440-0d58915e75dd",
        "schemaVersion": "models.meshery.io/v1beta1",
        "version": "v1.0.0",
        "name": "kubernetes",
        "displayName": "Kubernetes",
        "status": "enabled",
        "registrant": {
          "id": "00000000-0000-0000-0000-000000000000",
          "name": "",
          "credential_id": "00000000-0000-0000-0000-000000000000",
          "type": "",
          "sub_type": "",
          "kind": "",
          "status": "",
          "user_id": "00000000-0000-0000-0000-000000000000",
          "created_at": "0001-01-01T00:00:00Z",
          "updated_at": "0001-01-01T00:00:00Z",
          "deleted_at": "0001-01-01T00:00:00Z"
        },
        "connection_id": "f9a29d70-c287-426c-a90c-2a96590c8083",
        "category": {
          "id": "9ca27d0d-66ce-42a9-8c85-6236563f2ddb",
          "name": "Orchestration \u0026 Management"
        },
        "subCategory": "Scheduling \u0026 Orchestration",
        "metadata": {
          "isAnnotation": false,
          "primaryColor": "#326CE5",
          "secondaryColor": "#7aa1f0",
          "shape": "circle",
          "styleOverrides": "",
          "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/kubernetes-color.svg",
          "svgComplete": "",
          "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/kubernetes-white.svg"
        },
        "model": {
          "version": "v1.32.0-alpha.3"
        },
        "components_count": 0,
        "relationships_count": 0,
        "components": null,
        "relationships": null
      },
      "schemaVersion": "relationships.meshery.io/v1alpha3",
      "selectors": [
        {
          "allow": {
            "from": [
              {
                "id": "530b843c-3d51-4e6a-8ca2-7212c758dc77",
                "kind": "*",
                "match": {},
                "match_strategy_matrix": null,
                "model": {
                  "id": "00000000-0000-0000-0000-000000000000",
                  "schemaVersion": "",
                  "version": "",
                  "name": "*",
                  "displayName": "",
                  "status": "",
                  "registrant": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": "",
                    "credential_id": "00000000-0000-0000-0000-000000000000",
                    "type": "",
                    "sub_type": "",
                    "kind": "",
                    "status": "",
                    "user_id": "00000000-0000-0000-0000-000000000000",
                    "created_at": "0001-01-01T00:00:00Z",
                    "updated_at": "0001-01-01T00:00:00Z",
                    "deleted_at": "0001-01-01T00:00:00Z"
                  },
                  "connection_id": "00000000-0000-0000-0000-000000000000",
                  "category": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": ""
                  },
                  "subCategory": "",
                  "metadata": null,
                  "model": {
                    "version": ""
                  },
                  "components_count": 0,
                  "relationships_count": 0,
                  "components": null,
                  "relationships": null
                },
                "patch": {
                  "patchStrategy": "replace",
                  "mutatedRef": [
                    [
                      "configuration",
                      "metadata",
                      "namespace"
                    ]
                  ]
                }
              }
            ],
            "to": [
              {
                "id": "9cc4d1ff-1ae8-4b4e-9108-bef31408d0da",
                "kind": "Namespace",
                "match": {},
                "match_strategy_matrix": null,
                "model": {
                  "id": "00000000-0000-0000-0000-000000000000",
                  "schemaVersion": "",
                  "version": "",
                  "name": "kubernetes",
                  "displayName": "",
                  "status": "",
                  "registrant": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": "",
                    "credential_id": "00000000-0000-0000-0000-000000000000",
                    "type": "",
                    "sub_type": "",
                    "kind": "github",
                    "status": "",
                    "user_id": "00000000-0000-0000-0000-000000000000",
                    "created_at": "0001-01-01T00:00:00Z",
                    "updated_at": "0001-01-01T00:00:00Z",
                    "deleted_at": "0001-01-01T00:00:00Z"
                  },
                  "connection_id": "00000000-0000-0000-0000-000000000000",
                  "category": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": ""
                  },
                  "subCategory": "",
                  "metadata": null,
                  "model": {
                    "version": ""
                  },
                  "components_count": 0,
                  "relationships_count": 0,
                  "components": null,
                  "relationships": null
                },
                "patch": {
                  "patchStrategy": "replace",
                  "mutatorRef": [
                    [
                      "displayName"
                    ]
                  ]
                }
              }
            ]
          }
        }
      ],
      "subType": "inventory",
      "status": "approved",
      "type": "parent",
      "version": "v1.0.0"
    },
    {
      "id": "6d73d493-41d9-4d14-ac69-2e1672856971",
      "evaluationQuery": "",
      "kind": "edge",
      "metadata": {
        "description": "In Kubernetes, Secrets are a versatile resource that can be referenced by various other resources to provide configuration data to applications or other Kubnernetes resources.\\n\\nBy referencing ConfigMaps in these various contexts, you can centralize and manage configuration data more efficiently, allowing for easier updates, versioning, and maintenance of configurations in a Kubernetes environment.",
        "styles": {
          "primaryColor": "",
          "svgColor": "",
          "svgWhite": ""
        },
        "isAnnotation": false
      },
      "model": {
        "id": "e633cca6-b6e1-65bf-a440-0d58915e75dd",
        "schemaVersion": "models.meshery.io/v1beta1",
        "version": "v1.0.0",
        "name": "kubernetes",
        "displayName": "Kubernetes",
        "status": "enabled",
        "registrant": {
          "id": "00000000-0000-0000-0000-000000000000",
          "name": "",
          "credential_id": "00000000-0000-0000-0000-000000000000",
          "type": "",
          "sub_type": "",
          "kind": "",
          "status": "",
          "user_id": "00000000-0000-0000-0000-000000000000",
          "created_at": "0001-01-01T00:00:00Z",
          "updated_at": "0001-01-01T00:00:00Z",
          "deleted_at": "0001-01-01T00:00:00Z"
        },
        "connection_id": "f9a29d70-c287-426c-a90c-2a96590c8083",
        "category": {
          "id": "9ca27d0d-66ce-42a9-8c85-6236563f2ddb",
          "name": "Orchestration \u0026 Management"
        },
        "subCategory": "Scheduling \u0026 Orchestration",
        "metadata": {
          "isAnnotation": false,
          "primaryColor": "#326CE5",
          "secondaryColor": "#7aa1f0",
          "shape": "circle",
          "styleOverrides": "",
          "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/kubernetes-color.svg",
          "svgComplete": "",
          "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/kubernetes-white.svg"
        },
        "model": {
          "version": "v1.32.0-alpha.3"
        },
        "components_count": 0,
        "relationships_count": 0,
        "components": null,
        "relationships": null
      },
      "schemaVersion": "relationships.meshery.io/v1alpha3",
      "selectors": [
        {
          "allow": {
            "from": [
              {
                "id": "e9094d62-9fdd-4c67-9a48-a0f9f2606edf",
                "kind": "Secret",
                "match": {},
                "match_strategy_matrix": null,
                "model": {
                  "id": "00000000-0000-0000-0000-000000000000",
                  "schemaVersion": "",
                  "version": "",
                  "name": "kubernetes",
                  "displayName": "",
                  "status": "",
                  "registrant": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": "",
                    "credential_id": "00000000-0000-0000-0000-000000000000",
                    "type": "",
                    "sub_type": "",
                    "kind": "github",
                    "status": "",
                    "user_id": "00000000-0000-0000-0000-000000000000",
                    "created_at": "0001-01-01T00:00:00Z",
                    "updated_at": "0001-01-01T00:00:00Z",
                    "deleted_at": "0001-01-01T00:00:00Z"
                  },
                  "connection_id": "00000000-0000-0000-0000-000000000000",
                  "category": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": ""
                  },
                  "subCategory": "",
                  "metadata": null,
                  "model": {
                    "version": ""
                  },
                  "components_count": 0,
                  "relationships_count": 0,
                  "components": null,
                  "relationships": null
                },
                "patch": {
                  "patchStrategy": "replace",
                  "mutatorRef": [
                    [
                      "configuration",
                      "metadata",
                      "name"
                    ]
                  ]
                }
              }
            ],
            "to": [
              {
                "id": "62a77c06-e758-452b-bf5f-b9f1414a4b3b",
                "kind": "Deployment",
                "match": {},
                "match_strategy_matrix": null,
                "model": {
                  "id": "00000000-0000-0000-0000-000000000000",
                  "schemaVersion": "",
                  "version": "",
                  "name": "kubernetes",
                  "displayName": "",
                  "status": "",
                  "registrant": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": "",
                    "credential_id": "00000000-0000-0000-0000-000000000000",
                    "type": "",
                    "sub_type": "",
                    "kind": "github",
                    "status": "",
                    "user_id": "00000000-0000-0000-0000-000000000000",
                    "created_at": "0001-01-01T00:00:00Z",
                    "updated_at": "0001-01-01T00:00:00Z",
                    "deleted_at": "0001-01-01T00:00:00Z"
                  },
                  "connection_id": "00000000-0000-0000-0000-000000000000",
                  "category": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": ""
                  },
                  "subCategory": "",
                  "metadata": null,
                  "model": {
                    "version": ""
                  },
                  "components_count": 0,
                  "relationships_count": 0,
                  "components": null,
                  "relationships": null
                },
                "patch": {
                  "patchStrategy": "replace",
                  "mutatedRef": [
                    [
                      "configuration",
                      "spec",
                      "template",
                      "spec",
                      "containers",
                      "0",
                      "envFrom",
                      "0",
                      "secretRef",
                      "name"
                    ]
                  ]
                }
              }
            ]
          },
          "deny": {
            "from": null,
            "to": null
          }
        }
      ],
      "subType": "reference",
      "status": "approved",
      "type": "non-binding",
      "version": "v1.0.0"
    },
    {
      "id": "7cb8da2c-6b77-4295-9c25-6f00db0d3cb0",
      "evaluationQuery": "",
      "kind": "edge",
      "metadata": {
        "description": "A relationship that represents a set of permissions",
        "styles": {
          "primaryColor": "",
          "svgColor": "",
          "svgWhite": ""
        },
        "isAnnotation": false
      },
      "model": {
        "id": "e633cca6-b6e1-65bf-a440-0d58915e75dd",
        "schemaVersion": "models.meshery.io/v1beta1",
        "version": "v1.0.0",
        "name": "kubernetes",
        "displayName": "Kubernetes",
        "status": "enabled",
        "registrant": {
          "id": "00000000-0000-0000-0000-000000000000",
          "name": "",
          "credential_id": "00000000-0000-0000-0000-000000000000",
          "type": "",
          "sub_type": "",
          "kind": "",
          "status": "",
          "user_id": "00000000-0000-0000-0000-000000000000",
          "created_at": "0001-01-01T00:00:00Z",
          "updated_at": "0001-01-01T00:00:00Z",
          "deleted_at": "0001-01-01T00:00:00Z"
        },
        "connection_id": "f9a29d70-c287-426c-a90c-2a96590c8083",
        "category": {
          "id": "9ca27d0d-66ce-42a9-8c85-6236563f2ddb",
          "name": "Orchestration \u0026 Management"
        },
        "subCategory": "Scheduling \u0026 Orchestration",
        "metadata": {
          "isAnnotation": false,
          "primaryColor": "#326CE5",
          "secondaryColor": "#7aa1f0",
          "shape": "circle",
          "styleOverrides": "",
          "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/kubernetes-color.svg",
          "svgComplete": "",
          "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/kubernetes-white.svg"
        },
        "model": {
          "version": "v1.32.0-alpha.3"
        },
        "components_count": 0,
        "relationships_count": 0,
        "components": null,
        "relationships": null
      },
      "schemaVersion": "relationships.meshery.io/v1alpha3",
      "selectors": [
        {
          "allow": {
            "from": [
              {
                "id": "530b843c-3d51-4e6a-8ca2-7212c758dc77",
                "kind": "Role",
                "match": {
                  "from": [
                    {
                      "id": "530b843c-3d51-4e6a-8ca2-7212c758dc77",
                      "kind": "self",
                      "mutatorRef": [
                        [
                          "component",
                          "kind"
                        ],
                        [
                          "displayName"
                        ]
                      ]
                    }
                  ],
                  "to": [
                    {
                      "id": "fbb22c09-c289-436c-8c7c-09ecc3901b3d",
                      "kind": "RoleBinding",
                      "mutatedRef": [
                        [
                          "configuration",
                          "roleRef",
                          "kind"
                        ],
                        [
                          "configuration",
                          "roleRef",
                          "name"
                        ]
                      ]
                    }
                  ]
                },
                "match_strategy_matrix": null,
                "model": {
                  "id": "00000000-0000-0000-0000-000000000000",
                  "schemaVersion": "",
                  "version": "",
                  "name": "kubernetes",
                  "displayName": "",
                  "status": "",
                  "registrant": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": "",
                    "credential_id": "00000000-0000-0000-0000-000000000000",
                    "type": "",
                    "sub_type": "",
                    "kind": "github",
                    "status": "",
                    "user_id": "00000000-0000-0000-0000-000000000000",
                    "created_at": "0001-01-01T00:00:00Z",
                    "updated_at": "0001-01-01T00:00:00Z",
                    "deleted_at": "0001-01-01T00:00:00Z"
                  },
                  "connection_id": "00000000-0000-0000-0000-000000000000",
                  "category": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": ""
                  },
                  "subCategory": "",
                  "metadata": null,
                  "model": {
                    "version": ""
                  },
                  "components_count": 0,
                  "relationships_count": 0,
                  "components": null,
                  "relationships": null
                },
                "patch": null
              }
            ],
            "to": [
              {
                "id": "8020ae58-3287-429c-a6f0-4eaa7c9d182c",
                "kind": "ServiceAccount",
                "match": {
                  "from": [
                    {
                      "id": "fbb22c09-c289-436c-8c7c-09ecc3901b3d",
                      "kind": "RoleBinding",
                      "mutatedRef": [
                        [
                          "configuration",
                          "subjects",
                          "_",
                          "name"
                        ]
                      ]
                    }
                  ],
                  "to": [
                    {
                      "id": "8020ae58-3287-429c-a6f0-4eaa7c9d182c",
                      "kind": "self",
                      "mutatorRef": [
                        [
                          "displayName"
                        ]
                      ]
                    }
                  ]
                },
                "match_strategy_matrix": null,
                "model": {
                  "id": "00000000-0000-0000-0000-000000000000",
                  "schemaVersion": "",
                  "version": "",
                  "name": "kubernetes",
                  "displayName": "",
                  "status": "",
                  "registrant": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": "",
                    "credential_id": "00000000-0000-0000-0000-000000000000",
                    "type": "",
                    "sub_type": "",
                    "kind": "github",
                    "status": "",
                    "user_id": "00000000-0000-0000-0000-000000000000",
                    "created_at": "0001-01-01T00:00:00Z",
                    "updated_at": "0001-01-01T00:00:00Z",
                    "deleted_at": "0001-01-01T00:00:00Z"
                  },
                  "connection_id": "00000000-0000-0000-0000-000000000000",
                  "category": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": ""
                  },
                  "subCategory": "",
                  "metadata": null,
                  "model": {
                    "version": ""
                  },
                  "components_count": 0,
                  "relationships_count": 0,
                  "components": null,
                  "relationships": null
                },
                "patch": null
              }
            ]
          }
        }
      ],
      "subType": "permission",
      "status": "approved",
      "type": "binding",
      "version": "v1.0.0"
    },
    {
      "id": "7fd3c7d7-4e1b-4ee9-a4b5-4ebd07314140",
      "evaluationQuery": "",
      "kind": "edge",
      "metadata": {
        "description": "A relationship that represents a set of permissions",
        "styles": {
          "primaryColor": "",
          "svgColor": "",
          "svgWhite": ""
        },
        "isAnnotation": false
      },
      "model": {
        "id": "e633cca6-b6e1-65bf-a440-0d58915e75dd",
        "schemaVersion": "models.meshery.io/v1beta1",
        "version": "v1.0.0",
        "name": "kubernetes",
        "displayName": "Kubernetes",
        "status": "enabled",
        "registrant": {
          "id": "00000000-0000-0000-0000-000000000000",
          "name": "",
          "credential_id": "00000000-0000-0000-0000-000000000000",
          "type": "",
          "sub_type": "",
          "kind": "",
          "status": "",
          "user_id": "00000000-0000-0000-0000-000000000000",
          "created_at": "0001-01-01T00:00:00Z",
          "updated_at": "0001-01-01T00:00:00Z",
          "deleted_at": "0001-01-01T00:00:00Z"
        },
        "connection_id": "f9a29d70-c287-426c-a90c-2a96590c8083",
        "category": {
          "id": "9ca27d0d-66ce-42a9-8c85-6236563f2ddb",
          "name": "Orchestration \u0026 Management"
        },
        "subCategory": "Scheduling \u0026 Orchestration",
        "metadata": {
          "isAnnotation": false,
          "primaryColor": "#326CE5",
          "secondaryColor": "#7aa1f0",
          "shape": "circle",
          "styleOverrides": "",
          "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/kubernetes-color.svg",
          "svgComplete": "",
          "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/kubernetes-white.svg"
        },
        "model": {
          "version": "v1.32.0-alpha.3"
        },
        "components_count": 0,
        "relationships_count": 0,
        "components": null,
        "relationships": null
      },
      "schemaVersion": "relationships.meshery.io/v1alpha3",
      "selectors": [
        {
          "allow": {
            "from": [
              {
                "id": "b13a19c2-a7e4-4e27-a2bd-4f0dd5d47ee8",
                "kind": "ClusterRole",
                "match": {
                  "from": [
                    {
                      "id": "b13a19c2-a7e4-4e27-a2bd-4f0dd5d47ee8",
                      "kind": "self",
                      "mutatorRef": [
                        [
                          "component",
                          "kind"
                        ],
                        [
                          "displayName"
                        ]
                      ]
                    }
                  ],
                  "to": [
                    {
                      "id": "ad617d15-e484-4f96-bbf0-a584765924a7",
                      "kind": "ClusterRoleBinding",
                      "mutatedRef": [
                        [
                          "configuration",
                          "roleRef",
                          "kind"
                        ],
                        [
                          "configuration",
                          "roleRef",
                          "name"
                        ]
                      ]
                    }
                  ]
                },
                "match_strategy_matrix": null,
                "model": {
                  "id": "00000000-0000-0000-0000-000000000000",
                  "schemaVersion": "",
                  "version": "",
                  "name": "kubernetes",
                  "displayName": "",
                  "status": "",
                  "registrant": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": "",
                    "credential_id": "00000000-0000-0000-0000-000000000000",
                    "type": "",
                    "sub_type": "",
                    "kind": "github",
                    "status": "",
                    "user_id": "00000000-0000-0000-0000-000000000000",
                    "created_at": "0001-01-01T00:00:00Z",
                    "updated_at": "0001-01-01T00:00:00Z",
                    "deleted_at": "0001-01-01T00:00:00Z"
                  },
                  "connection_id": "00000000-0000-0000-0000-000000000000",
                  "category": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": ""
                  },
                  "subCategory": "",
                  "metadata": null,
                  "model": {
                    "version": ""
                  },
                  "components_count": 0,
                  "relationships_count": 0,
                  "components": null,
                  "relationships": null
                },
                "patch": null
              }
            ],
            "to": [
              {
                "id": "8020ae58-3287-429c-a6f0-4eaa7c9d182c",
                "kind": "ServiceAccount",
                "match": {
                  "from": [
                    {
                      "id": "ad617d15-e484-4f96-bbf0-a584765924a7",
                      "kind": "ClusterRoleBinding",
                      "mutatedRef": [
                        [
                          "configuration",
                          "subjects",
                          "_",
                          "name"
                        ]
                      ]
                    }
                  ],
                  "to": [
                    {
                      "id": "8020ae58-3287-429c-a6f0-4eaa7c9d182c",
                      "kind": "self",
                      "mutatorRef": [
                        [
                          "displayName"
                        ]
                      ]
                    }
                  ]
                },
                "match_strategy_matrix": null,
                "model": {
                  "id": "00000000-0000-0000-0000-000000000000",
                  "schemaVersion": "",
                  "version": "",
                  "name": "kubernetes",
                  "displayName": "",
                  "status": "",
                  "registrant": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": "",
                    "credential_id": "00000000-0000-0000-0000-000000000000",
                    "type": "",
                    "sub_type": "",
                    "kind": "github",
                    "status": "",
                    "user_id": "00000000-0000-0000-0000-000000000000",
                    "created_at": "0001-01-01T00:00:00Z",
                    "updated_at": "0001-01-01T00:00:00Z",
                    "deleted_at": "0001-01-01T00:00:00Z"
                  },
                  "connection_id": "00000000-0000-0000-0000-000000000000",
                  "category": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": ""
                  },
                  "subCategory": "",
                  "metadata": null,
                  "model": {
                    "version": ""
                  },
                  "components_count": 0,
                  "relationships_count": 0,
                  "components": null,
                  "relationships": null
                },
                "patch": null
              }
            ]
          }
        }
      ],
      "subType": "permission",
      "status": "approved",
      "type": "binding",
      "version": "v1.0.0"
    },
    {
      "id": "845dd835-1b89-4af2-bd93-9e5556944c72",
      "evaluationQuery": "",
      "kind": "edge",
      "metadata": {
        "description": "In Kubernetes, Secrets are a versatile resource that can be referenced by various other resources to provide configuration data to applications or other Kubnernetes resources.\\n\\nBy referencing ConfigMaps in these various contexts, you can centralize and manage configuration data more efficiently, allowing for easier updates, versioning, and maintenance of configurations in a Kubernetes environment.",
        "styles": {
          "primaryColor": "",
          "svgColor": "",
          "svgWhite": ""
        },
        "isAnnotation": false
      },
      "model": {
        "id": "e633cca6-b6e1-65bf-a440-0d58915e75dd",
        "schemaVersion": "models.meshery.io/v1beta1",
        "version": "v1.0.0",
        "name": "kubernetes",
        "displayName": "Kubernetes",
        "status": "enabled",
        "registrant": {
          "id": "00000000-0000-0000-0000-000000000000",
          "name": "",
          "credential_id": "00000000-0000-0000-0000-000000000000",
          "type": "",
          "sub_type": "",
          "kind": "",
          "status": "",
          "user_id": "00000000-0000-0000-0000-000000000000",
          "created_at": "0001-01-01T00:00:00Z",
          "updated_at": "0001-01-01T00:00:00Z",
          "deleted_at": "0001-01-01T00:00:00Z"
        },
        "connection_id": "f9a29d70-c287-426c-a90c-2a96590c8083",
        "category": {
          "id": "9ca27d0d-66ce-42a9-8c85-6236563f2ddb",
          "name": "Orchestration \u0026 Management"
        },
        "subCategory": "Scheduling \u0026 Orchestration",
        "metadata": {
          "isAnnotation": false,
          "primaryColor": "#326CE5",
          "secondaryColor": "#7aa1f0",
          "shape": "circle",
          "styleOverrides": "",
          "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/kubernetes-color.svg",
          "svgComplete": "",
          "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/kubernetes-white.svg"
        },
        "model": {
          "version": "v1.32.0-alpha.3"
        },
        "components_count": 0,
        "relationships_count": 0,
        "components": null,
        "relationships": null
      },
      "schemaVersion": "relationships.meshery.io/v1alpha3",
      "selectors": [
        {
          "allow": {
            "from": [
              {
                "id": "e9094d62-9fdd-4c67-9a48-a0f9f2606edf",
                "kind": "Secret",
                "match": {},
                "match_strategy_matrix": null,
                "model": {
                  "id": "00000000-0000-0000-0000-000000000000",
                  "schemaVersion": "",
                  "version": "",
                  "name": "kubernetes",
                  "displayName": "",
                  "status": "",
                  "registrant": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": "",
                    "credential_id": "00000000-0000-0000-0000-000000000000",
                    "type": "",
                    "sub_type": "",
                    "kind": "github",
                    "status": "",
                    "user_id": "00000000-0000-0000-0000-000000000000",
                    "created_at": "0001-01-01T00:00:00Z",
                    "updated_at": "0001-01-01T00:00:00Z",
                    "deleted_at": "0001-01-01T00:00:00Z"
                  },
                  "connection_id": "00000000-0000-0000-0000-000000000000",
                  "category": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": ""
                  },
                  "subCategory": "",
                  "metadata": null,
                  "model": {
                    "version": ""
                  },
                  "components_count": 0,
                  "relationships_count": 0,
                  "components": null,
                  "relationships": null
                },
                "patch": {
                  "patchStrategy": "replace",
                  "mutatorRef": [
                    [
                      "configuration",
                      "metadata",
                      "name"
                    ]
                  ]
                }
              }
            ],
            "to": [
              {
                "id": "99c24ba2-ce1f-4db4-8348-4695534463da",
                "kind": "Deployment",
                "match": {},
                "match_strategy_matrix": null,
                "model": {
                  "id": "00000000-0000-0000-0000-000000000000",
                  "schemaVersion": "",
                  "version": "",
                  "name": "kubernetes",
                  "displayName": "",
                  "status": "",
                  "registrant": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": "",
                    "credential_id": "00000000-0000-0000-0000-000000000000",
                    "type": "",
                    "sub_type": "",
                    "kind": "github",
                    "status": "",
                    "user_id": "00000000-0000-0000-0000-000000000000",
                    "created_at": "0001-01-01T00:00:00Z",
                    "updated_at": "0001-01-01T00:00:00Z",
                    "deleted_at": "0001-01-01T00:00:00Z"
                  },
                  "connection_id": "00000000-0000-0000-0000-000000000000",
                  "category": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": ""
                  },
                  "subCategory": "",
                  "metadata": null,
                  "model": {
                    "version": ""
                  },
                  "components_count": 0,
                  "relationships_count": 0,
                  "components": null,
                  "relationships": null
                },
                "patch": {
                  "patchStrategy": "replace",
                  "mutatedRef": [
                    [
                      "configuration",
                      "spec",
                      "template",
                      "spec",
                      "containers",
                      "0",
                      "envFrom",
                      "0",
                      "secretRef",
                      "name"
                    ]
                  ]
                }
              }
            ]
          },
          "deny": {
            "from": null,
            "to": null
          }
        }
      ],
      "subType": "reference",
      "status": "approved",
      "type": "non-binding",
      "version": "v1.0.0"
    },
    {
      "id": "846ffc46-d05d-46f6-b87a-c71794c044f7",
      "evaluationQuery": "",
      "kind": "hierarchical",
      "metadata": {
        "description": "A hierarchical inventory relationship in which the configuration of (parent) component is patched with the configuration of other (child) component. Eg: The configuration of the EnvoyFilter (parent) component is patched with the configuration as received from WASMFilter (child) component.",
        "styles": {
          "primaryColor": "",
          "svgColor": "",
          "svgWhite": ""
        },
        "isAnnotation": false
      },
      "model": {
        "id": "e633cca6-b6e1-65bf-a440-0d58915e75dd",
        "schemaVersion": "models.meshery.io/v1beta1",
        "version": "v1.0.0",
        "name": "kubernetes",
        "displayName": "Kubernetes",
        "status": "enabled",
        "registrant": {
          "id": "00000000-0000-0000-0000-000000000000",
          "name": "",
          "credential_id": "00000000-0000-0000-0000-000000000000",
          "type": "",
          "sub_type": "",
          "kind": "",
          "status": "",
          "user_id": "00000000-0000-0000-0000-000000000000",
          "created_at": "0001-01-01T00:00:00Z",
          "updated_at": "0001-01-01T00:00:00Z",
          "deleted_at": "0001-01-01T00:00:00Z"
        },
        "connection_id": "f9a29d70-c287-426c-a90c-2a96590c8083",
        "category": {
          "id": "9ca27d0d-66ce-42a9-8c85-6236563f2ddb",
          "name": "Orchestration \u0026 Management"
        },
        "subCategory": "Scheduling \u0026 Orchestration",
        "metadata": {
          "isAnnotation": false,
          "primaryColor": "#326CE5",
          "secondaryColor": "#7aa1f0",
          "shape": "circle",
          "styleOverrides": "",
          "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/kubernetes-color.svg",
          "svgComplete": "",
          "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/kubernetes-white.svg"
        },
        "model": {
          "version": "v1.32.0-alpha.3"
        },
        "components_count": 0,
        "relationships_count": 0,
        "components": null,
        "relationships": null
      },
      "schemaVersion": "relationships.meshery.io/v1alpha3",
      "selectors": [
        {
          "allow": {
            "from": [
              {
                "id": "13bc130b-bcfa-4856-b667-858feb365e74",
                "kind": "Container",
                "match": {},
                "match_strategy_matrix": null,
                "model": {
                  "id": "00000000-0000-0000-0000-000000000000",
                  "schemaVersion": "",
                  "version": "",
                  "name": "meshery-core",
                  "displayName": "",
                  "status": "",
                  "registrant": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": "",
                    "credential_id": "00000000-0000-0000-0000-000000000000",
                    "type": "",
                    "sub_type": "",
                    "kind": "github",
                    "status": "",
                    "user_id": "00000000-0000-0000-0000-000000000000",
                    "created_at": "0001-01-01T00:00:00Z",
                    "updated_at": "0001-01-01T00:00:00Z",
                    "deleted_at": "0001-01-01T00:00:00Z"
                  },
                  "connection_id": "00000000-0000-0000-0000-000000000000",
                  "category": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": ""
                  },
                  "subCategory": "",
                  "metadata": null,
                  "model": {
                    "version": ""
                  },
                  "components_count": 0,
                  "relationships_count": 0,
                  "components": null,
                  "relationships": null
                },
                "patch": {
                  "patchStrategy": "replace",
                  "mutatorRef": [
                    [
                      "configuration",
                      "spec",
                      "template",
                      "spec",
                      "containers",
                      "0"
                    ]
                  ],
                  "mutatedRef": [
                    [
                      "configuration",
                      "spec",
                      "template",
                      "spec",
                      "containers",
                      "0"
                    ]
                  ]
                }
              }
            ],
            "to": [
              {
                "id": "99c24ba2-ce1f-4db4-8348-4695534463da",
                "kind": "Deployment",
                "match": {},
                "match_strategy_matrix": null,
                "model": {
                  "id": "00000000-0000-0000-0000-000000000000",
                  "schemaVersion": "",
                  "version": "",
                  "name": "kubernetes",
                  "displayName": "",
                  "status": "",
                  "registrant": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": "",
                    "credential_id": "00000000-0000-0000-0000-000000000000",
                    "type": "",
                    "sub_type": "",
                    "kind": "github",
                    "status": "",
                    "user_id": "00000000-0000-0000-0000-000000000000",
                    "created_at": "0001-01-01T00:00:00Z",
                    "updated_at": "0001-01-01T00:00:00Z",
                    "deleted_at": "0001-01-01T00:00:00Z"
                  },
                  "connection_id": "00000000-0000-0000-0000-000000000000",
                  "category": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": ""
                  },
                  "subCategory": "",
                  "metadata": null,
                  "model": {
                    "version": ""
                  },
                  "components_count": 0,
                  "relationships_count": 0,
                  "components": null,
                  "relationships": null
                },
                "patch": {
                  "patchStrategy": "replace",
                  "mutatorRef": [
                    [
                      "configuration",
                      "spec",
                      "template",
                      "spec",
                      "containers",
                      "0"
                    ]
                  ],
                  "mutatedRef": [
                    [
                      "configuration",
                      "spec",
                      "template",
                      "spec",
                      "containers",
                      "0"
                    ]
                  ]
                }
              }
            ]
          },
          "deny": {
            "from": null,
            "to": null
          }
        }
      ],
      "subType": "alias",
      "status": "approved",
      "type": "parent",
      "version": "v1.0.0"
    },
    {
      "id": "8565751d-69f4-4daa-9540-b01a92392ed6",
      "evaluationQuery": "",
      "kind": "hierarchical",
      "metadata": {
        "description": "Namespace to namespaced components",
        "styles": {
          "primaryColor": "",
          "svgColor": "",
          "svgWhite": ""
        },
        "isAnnotation": false
      },
      "model": {
        "id": "e633cca6-b6e1-65bf-a440-0d58915e75dd",
        "schemaVersion": "models.meshery.io/v1beta1",
        "version": "v1.0.0",
        "name": "kubernetes",
        "displayName": "Kubernetes",
        "status": "enabled",
        "registrant": {
          "id": "00000000-0000-0000-0000-000000000000",
          "name": "",
          "credential_id": "00000000-0000-0000-0000-000000000000",
          "type": "",
          "sub_type": "",
          "kind": "",
          "status": "",
          "user_id": "00000000-0000-0000-0000-000000000000",
          "created_at": "0001-01-01T00:00:00Z",
          "updated_at": "0001-01-01T00:00:00Z",
          "deleted_at": "0001-01-01T00:00:00Z"
        },
        "connection_id": "f9a29d70-c287-426c-a90c-2a96590c8083",
        "category": {
          "id": "9ca27d0d-66ce-42a9-8c85-6236563f2ddb",
          "name": "Orchestration \u0026 Management"
        },
        "subCategory": "Scheduling \u0026 Orchestration",
        "metadata": {
          "isAnnotation": false,
          "primaryColor": "#326CE5",
          "secondaryColor": "#7aa1f0",
          "shape": "circle",
          "styleOverrides": "",
          "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/kubernetes-color.svg",
          "svgComplete": "",
          "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/kubernetes-white.svg"
        },
        "model": {
          "version": "v1.32.0-alpha.3"
        },
        "components_count": 0,
        "relationships_count": 0,
        "components": null,
        "relationships": null
      },
      "schemaVersion": "relationships.meshery.io/v1alpha3",
      "selectors": [
        {
          "allow": {
            "from": [
              {
                "id": "fbb22c09-c289-436c-8c7c-09ecc3901b3d",
                "kind": "*",
                "match": {},
                "match_strategy_matrix": null,
                "model": {
                  "id": "00000000-0000-0000-0000-000000000000",
                  "schemaVersion": "",
                  "version": "",
                  "name": "*",
                  "displayName": "",
                  "status": "",
                  "registrant": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": "",
                    "credential_id": "00000000-0000-0000-0000-000000000000",
                    "type": "",
                    "sub_type": "",
                    "kind": "",
                    "status": "",
                    "user_id": "00000000-0000-0000-0000-000000000000",
                    "created_at": "0001-01-01T00:00:00Z",
                    "updated_at": "0001-01-01T00:00:00Z",
                    "deleted_at": "0001-01-01T00:00:00Z"
                  },
                  "connection_id": "00000000-0000-0000-0000-000000000000",
                  "category": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": ""
                  },
                  "subCategory": "",
                  "metadata": null,
                  "model": {
                    "version": ""
                  },
                  "components_count": 0,
                  "relationships_count": 0,
                  "components": null,
                  "relationships": null
                },
                "patch": {
                  "patchStrategy": "replace",
                  "mutatedRef": [
                    [
                      "configuration",
                      "metadata",
                      "namespace"
                    ]
                  ]
                }
              }
            ],
            "to": [
              {
                "id": "9cc4d1ff-1ae8-4b4e-9108-bef31408d0da",
                "kind": "Namespace",
                "match": {},
                "match_strategy_matrix": null,
                "model": {
                  "id": "00000000-0000-0000-0000-000000000000",
                  "schemaVersion": "",
                  "version": "",
                  "name": "kubernetes",
                  "displayName": "",
                  "status": "",
                  "registrant": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": "",
                    "credential_id": "00000000-0000-0000-0000-000000000000",
                    "type": "",
                    "sub_type": "",
                    "kind": "github",
                    "status": "",
                    "user_id": "00000000-0000-0000-0000-000000000000",
                    "created_at": "0001-01-01T00:00:00Z",
                    "updated_at": "0001-01-01T00:00:00Z",
                    "deleted_at": "0001-01-01T00:00:00Z"
                  },
                  "connection_id": "00000000-0000-0000-0000-000000000000",
                  "category": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": ""
                  },
                  "subCategory": "",
                  "metadata": null,
                  "model": {
                    "version": ""
                  },
                  "components_count": 0,
                  "relationships_count": 0,
                  "components": null,
                  "relationships": null
                },
                "patch": {
                  "patchStrategy": "replace",
                  "mutatorRef": [
                    [
                      "displayName"
                    ]
                  ]
                }
              }
            ]
          }
        }
      ],
      "subType": "inventory",
      "status": "approved",
      "type": "parent",
      "version": "v1.0.0"
    },
    {
      "id": "869c76de-98d7-40f0-8b56-ba2cc201ca2d",
      "evaluationQuery": "",
      "kind": "edge",
      "metadata": {
        "description": "A relationship that represents a set of permissions",
        "styles": {
          "primaryColor": "",
          "svgColor": "",
          "svgWhite": ""
        },
        "isAnnotation": false
      },
      "model": {
        "id": "e633cca6-b6e1-65bf-a440-0d58915e75dd",
        "schemaVersion": "models.meshery.io/v1beta1",
        "version": "v1.0.0",
        "name": "kubernetes",
        "displayName": "Kubernetes",
        "status": "enabled",
        "registrant": {
          "id": "00000000-0000-0000-0000-000000000000",
          "name": "",
          "credential_id": "00000000-0000-0000-0000-000000000000",
          "type": "",
          "sub_type": "",
          "kind": "",
          "status": "",
          "user_id": "00000000-0000-0000-0000-000000000000",
          "created_at": "0001-01-01T00:00:00Z",
          "updated_at": "0001-01-01T00:00:00Z",
          "deleted_at": "0001-01-01T00:00:00Z"
        },
        "connection_id": "f9a29d70-c287-426c-a90c-2a96590c8083",
        "category": {
          "id": "9ca27d0d-66ce-42a9-8c85-6236563f2ddb",
          "name": "Orchestration \u0026 Management"
        },
        "subCategory": "Scheduling \u0026 Orchestration",
        "metadata": {
          "isAnnotation": false,
          "primaryColor": "#326CE5",
          "secondaryColor": "#7aa1f0",
          "shape": "circle",
          "styleOverrides": "",
          "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/kubernetes-color.svg",
          "svgComplete": "",
          "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/kubernetes-white.svg"
        },
        "model": {
          "version": "v1.32.0-alpha.3"
        },
        "components_count": 0,
        "relationships_count": 0,
        "components": null,
        "relationships": null
      },
      "schemaVersion": "relationships.meshery.io/v1alpha3",
      "selectors": [
        {
          "allow": {
            "from": [
              {
                "id": "a530b371-7582-4020-a5be-b3e312998690",
                "kind": "ClusterRole",
                "match": {
                  "from": [
                    {
                      "id": "a530b371-7582-4020-a5be-b3e312998690",
                      "kind": "self",
                      "mutatorRef": [
                        [
                          "component",
                          "kind"
                        ],
                        [
                          "displayName"
                        ]
                      ]
                    }
                  ],
                  "to": [
                    {
                      "id": "5b7b87e1-c8c3-4d5b-96d5-6518fb5cae92",
                      "kind": "ClusterRoleBinding",
                      "mutatedRef": [
                        [
                          "configuration",
                          "roleRef",
                          "kind"
                        ],
                        [
                          "configuration",
                          "roleRef",
                          "name"
                        ]
                      ]
                    }
                  ]
                },
                "match_strategy_matrix": null,
                "model": {
                  "id": "00000000-0000-0000-0000-000000000000",
                  "schemaVersion": "",
                  "version": "",
                  "name": "kubernetes",
                  "displayName": "",
                  "status": "",
                  "registrant": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": "",
                    "credential_id": "00000000-0000-0000-0000-000000000000",
                    "type": "",
                    "sub_type": "",
                    "kind": "github",
                    "status": "",
                    "user_id": "00000000-0000-0000-0000-000000000000",
                    "created_at": "0001-01-01T00:00:00Z",
                    "updated_at": "0001-01-01T00:00:00Z",
                    "deleted_at": "0001-01-01T00:00:00Z"
                  },
                  "connection_id": "00000000-0000-0000-0000-000000000000",
                  "category": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": ""
                  },
                  "subCategory": "",
                  "metadata": null,
                  "model": {
                    "version": ""
                  },
                  "components_count": 0,
                  "relationships_count": 0,
                  "components": null,
                  "relationships": null
                },
                "patch": null
              }
            ],
            "to": [
              {
                "id": "8020ae58-3287-429c-a6f0-4eaa7c9d182c",
                "kind": "ServiceAccount",
                "match": {
                  "from": [
                    {
                      "id": "5b7b87e1-c8c3-4d5b-96d5-6518fb5cae92",
                      "kind": "ClusterRoleBinding",
                      "mutatedRef": [
                        [
                          "configuration",
                          "subjects",
                          "_",
                          "name"
                        ]
                      ]
                    }
                  ],
                  "to": [
                    {
                      "id": "8020ae58-3287-429c-a6f0-4eaa7c9d182c",
                      "kind": "self",
                      "mutatorRef": [
                        [
                          "displayName"
                        ]
                      ]
                    }
                  ]
                },
                "match_strategy_matrix": null,
                "model": {
                  "id": "00000000-0000-0000-0000-000000000000",
                  "schemaVersion": "",
                  "version": "",
                  "name": "kubernetes",
                  "displayName": "",
                  "status": "",
                  "registrant": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": "",
                    "credential_id": "00000000-0000-0000-0000-000000000000",
                    "type": "",
                    "sub_type": "",
                    "kind": "github",
                    "status": "",
                    "user_id": "00000000-0000-0000-0000-000000000000",
                    "created_at": "0001-01-01T00:00:00Z",
                    "updated_at": "0001-01-01T00:00:00Z",
                    "deleted_at": "0001-01-01T00:00:00Z"
                  },
                  "connection_id": "00000000-0000-0000-0000-000000000000",
                  "category": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": ""
                  },
                  "subCategory": "",
                  "metadata": null,
                  "model": {
                    "version": ""
                  },
                  "components_count": 0,
                  "relationships_count": 0,
                  "components": null,
                  "relationships": null
                },
                "patch": null
              }
            ]
          }
        }
      ],
      "subType": "permission",
      "status": "deleted",
      "type": "binding",
      "version": "v1.0.0"
    },
    {
      "id": "8e44165d-5810-492b-ba36-11180fce2b16",
      "evaluationQuery": "",
      "kind": "edge",
      "metadata": {
        "description": "In Kubernetes, Secrets are a versatile resource that can be referenced by various other resources to provide configuration data to applications or other Kubnernetes resources.\\n\\nBy referencing ConfigMaps in these various contexts, you can centralize and manage configuration data more efficiently, allowing for easier updates, versioning, and maintenance of configurations in a Kubernetes environment.",
        "styles": {
          "primaryColor": "",
          "svgColor": "",
          "svgWhite": ""
        },
        "isAnnotation": false
      },
      "model": {
        "id": "e633cca6-b6e1-65bf-a440-0d58915e75dd",
        "schemaVersion": "models.meshery.io/v1beta1",
        "version": "v1.0.0",
        "name": "kubernetes",
        "displayName": "Kubernetes",
        "status": "enabled",
        "registrant": {
          "id": "00000000-0000-0000-0000-000000000000",
          "name": "",
          "credential_id": "00000000-0000-0000-0000-000000000000",
          "type": "",
          "sub_type": "",
          "kind": "",
          "status": "",
          "user_id": "00000000-0000-0000-0000-000000000000",
          "created_at": "0001-01-01T00:00:00Z",
          "updated_at": "0001-01-01T00:00:00Z",
          "deleted_at": "0001-01-01T00:00:00Z"
        },
        "connection_id": "f9a29d70-c287-426c-a90c-2a96590c8083",
        "category": {
          "id": "9ca27d0d-66ce-42a9-8c85-6236563f2ddb",
          "name": "Orchestration \u0026 Management"
        },
        "subCategory": "Scheduling \u0026 Orchestration",
        "metadata": {
          "isAnnotation": false,
          "primaryColor": "#326CE5",
          "secondaryColor": "#7aa1f0",
          "shape": "circle",
          "styleOverrides": "",
          "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/kubernetes-color.svg",
          "svgComplete": "",
          "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/kubernetes-white.svg"
        },
        "model": {
          "version": "v1.32.0-alpha.3"
        },
        "components_count": 0,
        "relationships_count": 0,
        "components": null,
        "relationships": null
      },
      "schemaVersion": "relationships.meshery.io/v1alpha3",
      "selectors": [
        {
          "allow": {
            "from": [
              {
                "id": "e9094d62-9fdd-4c67-9a48-a0f9f2606edf",
                "kind": "Secret",
                "match": {},
                "match_strategy_matrix": null,
                "model": {
                  "id": "00000000-0000-0000-0000-000000000000",
                  "schemaVersion": "",
                  "version": "",
                  "name": "kubernetes",
                  "displayName": "",
                  "status": "",
                  "registrant": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": "",
                    "credential_id": "00000000-0000-0000-0000-000000000000",
                    "type": "",
                    "sub_type": "",
                    "kind": "github",
                    "status": "",
                    "user_id": "00000000-0000-0000-0000-000000000000",
                    "created_at": "0001-01-01T00:00:00Z",
                    "updated_at": "0001-01-01T00:00:00Z",
                    "deleted_at": "0001-01-01T00:00:00Z"
                  },
                  "connection_id": "00000000-0000-0000-0000-000000000000",
                  "category": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": ""
                  },
                  "subCategory": "",
                  "metadata": null,
                  "model": {
                    "version": ""
                  },
                  "components_count": 0,
                  "relationships_count": 0,
                  "components": null,
                  "relationships": null
                },
                "patch": {
                  "patchStrategy": "replace",
                  "mutatorRef": [
                    [
                      "displayName"
                    ]
                  ]
                }
              }
            ],
            "to": [
              {
                "id": "99c24ba2-ce1f-4db4-8348-4695534463da",
                "kind": "Deployment",
                "match": {},
                "match_strategy_matrix": null,
                "model": {
                  "id": "00000000-0000-0000-0000-000000000000",
                  "schemaVersion": "",
                  "version": "",
                  "name": "kubernetes",
                  "displayName": "",
                  "status": "",
                  "registrant": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": "",
                    "credential_id": "00000000-0000-0000-0000-000000000000",
                    "type": "",
                    "sub_type": "",
                    "kind": "github",
                    "status": "",
                    "user_id": "00000000-0000-0000-0000-000000000000",
                    "created_at": "0001-01-01T00:00:00Z",
                    "updated_at": "0001-01-01T00:00:00Z",
                    "deleted_at": "0001-01-01T00:00:00Z"
                  },
                  "connection_id": "00000000-0000-0000-0000-000000000000",
                  "category": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": ""
                  },
                  "subCategory": "",
                  "metadata": null,
                  "model": {
                    "version": ""
                  },
                  "components_count": 0,
                  "relationships_count": 0,
                  "components": null,
                  "relationships": null
                },
                "patch": {
                  "patchStrategy": "replace",
                  "mutatedRef": [
                    [
                      "configuration",
                      "spec",
                      "template",
                      "spec",
                      "containers",
                      "0",
                      "envFrom",
                      "0",
                      "secretRef",
                      "name"
                    ]
                  ]
                }
              }
            ]
          },
          "deny": {
            "from": null,
            "to": null
          }
        }
      ],
      "subType": "reference",
      "status": "approved",
      "type": "non-binding",
      "version": "v1.0.0"
    },
    {
      "id": "8e8484e7-e3ec-420e-b321-6aeca8440c0a",
      "evaluationQuery": "",
      "kind": "hierarchical",
      "metadata": {
        "description": "Namespace to namespaced components",
        "styles": {
          "primaryColor": "",
          "svgColor": "",
          "svgWhite": ""
        },
        "isAnnotation": false
      },
      "model": {
        "id": "e633cca6-b6e1-65bf-a440-0d58915e75dd",
        "schemaVersion": "models.meshery.io/v1beta1",
        "version": "v1.0.0",
        "name": "kubernetes",
        "displayName": "Kubernetes",
        "status": "enabled",
        "registrant": {
          "id": "00000000-0000-0000-0000-000000000000",
          "name": "",
          "credential_id": "00000000-0000-0000-0000-000000000000",
          "type": "",
          "sub_type": "",
          "kind": "",
          "status": "",
          "user_id": "00000000-0000-0000-0000-000000000000",
          "created_at": "0001-01-01T00:00:00Z",
          "updated_at": "0001-01-01T00:00:00Z",
          "deleted_at": "0001-01-01T00:00:00Z"
        },
        "connection_id": "f9a29d70-c287-426c-a90c-2a96590c8083",
        "category": {
          "id": "9ca27d0d-66ce-42a9-8c85-6236563f2ddb",
          "name": "Orchestration \u0026 Management"
        },
        "subCategory": "Scheduling \u0026 Orchestration",
        "metadata": {
          "isAnnotation": false,
          "primaryColor": "#326CE5",
          "secondaryColor": "#7aa1f0",
          "shape": "circle",
          "styleOverrides": "",
          "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/kubernetes-color.svg",
          "svgComplete": "",
          "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/kubernetes-white.svg"
        },
        "model": {
          "version": "v1.32.0-alpha.3"
        },
        "components_count": 0,
        "relationships_count": 0,
        "components": null,
        "relationships": null
      },
      "schemaVersion": "relationships.meshery.io/v1alpha3",
      "selectors": [
        {
          "allow": {
            "from": [
              {
                "id": "62a77c06-e758-452b-bf5f-b9f1414a4b3b",
                "kind": "*",
                "match": {},
                "match_strategy_matrix": null,
                "model": {
                  "id": "00000000-0000-0000-0000-000000000000",
                  "schemaVersion": "",
                  "version": "",
                  "name": "*",
                  "displayName": "",
                  "status": "",
                  "registrant": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": "",
                    "credential_id": "00000000-0000-0000-0000-000000000000",
                    "type": "",
                    "sub_type": "",
                    "kind": "",
                    "status": "",
                    "user_id": "00000000-0000-0000-0000-000000000000",
                    "created_at": "0001-01-01T00:00:00Z",
                    "updated_at": "0001-01-01T00:00:00Z",
                    "deleted_at": "0001-01-01T00:00:00Z"
                  },
                  "connection_id": "00000000-0000-0000-0000-000000000000",
                  "category": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": ""
                  },
                  "subCategory": "",
                  "metadata": null,
                  "model": {
                    "version": ""
                  },
                  "components_count": 0,
                  "relationships_count": 0,
                  "components": null,
                  "relationships": null
                },
                "patch": {
                  "patchStrategy": "replace",
                  "mutatedRef": [
                    [
                      "configuration",
                      "metadata",
                      "namespace"
                    ]
                  ]
                }
              }
            ],
            "to": [
              {
                "id": "779771c4-bd19-4425-a27b-a75afd10b4b2",
                "kind": "Namespace",
                "match": {},
                "match_strategy_matrix": null,
                "model": {
                  "id": "00000000-0000-0000-0000-000000000000",
                  "schemaVersion": "",
                  "version": "",
                  "name": "kubernetes",
                  "displayName": "",
                  "status": "",
                  "registrant": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": "",
                    "credential_id": "00000000-0000-0000-0000-000000000000",
                    "type": "",
                    "sub_type": "",
                    "kind": "github",
                    "status": "",
                    "user_id": "00000000-0000-0000-0000-000000000000",
                    "created_at": "0001-01-01T00:00:00Z",
                    "updated_at": "0001-01-01T00:00:00Z",
                    "deleted_at": "0001-01-01T00:00:00Z"
                  },
                  "connection_id": "00000000-0000-0000-0000-000000000000",
                  "category": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": ""
                  },
                  "subCategory": "",
                  "metadata": null,
                  "model": {
                    "version": ""
                  },
                  "components_count": 0,
                  "relationships_count": 0,
                  "components": null,
                  "relationships": null
                },
                "patch": {
                  "patchStrategy": "replace",
                  "mutatorRef": [
                    [
                      "displayName"
                    ]
                  ]
                }
              }
            ]
          }
        }
      ],
      "subType": "inventory",
      "status": "approved",
      "type": "parent",
      "version": "v1.0.0"
    },
    {
      "id": "943f912d-cf2b-4052-b0d4-3b556b27fa78",
      "evaluationQuery": "",
      "kind": "edge",
      "metadata": {
        "description": "A relationship that represents a set of permissions",
        "styles": {
          "primaryColor": "",
          "svgColor": "",
          "svgWhite": ""
        },
        "isAnnotation": false
      },
      "model": {
        "id": "e633cca6-b6e1-65bf-a440-0d58915e75dd",
        "schemaVersion": "models.meshery.io/v1beta1",
        "version": "v1.0.0",
        "name": "kubernetes",
        "displayName": "Kubernetes",
        "status": "enabled",
        "registrant": {
          "id": "00000000-0000-0000-0000-000000000000",
          "name": "",
          "credential_id": "00000000-0000-0000-0000-000000000000",
          "type": "",
          "sub_type": "",
          "kind": "",
          "status": "",
          "user_id": "00000000-0000-0000-0000-000000000000",
          "created_at": "0001-01-01T00:00:00Z",
          "updated_at": "0001-01-01T00:00:00Z",
          "deleted_at": "0001-01-01T00:00:00Z"
        },
        "connection_id": "f9a29d70-c287-426c-a90c-2a96590c8083",
        "category": {
          "id": "9ca27d0d-66ce-42a9-8c85-6236563f2ddb",
          "name": "Orchestration \u0026 Management"
        },
        "subCategory": "Scheduling \u0026 Orchestration",
        "metadata": {
          "isAnnotation": false,
          "primaryColor": "#326CE5",
          "secondaryColor": "#7aa1f0",
          "shape": "circle",
          "styleOverrides": "",
          "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/kubernetes-color.svg",
          "svgComplete": "",
          "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/kubernetes-white.svg"
        },
        "model": {
          "version": "v1.32.0-alpha.3"
        },
        "components_count": 0,
        "relationships_count": 0,
        "components": null,
        "relationships": null
      },
      "schemaVersion": "relationships.meshery.io/v1alpha3",
      "selectors": [
        {
          "allow": {
            "from": [
              {
                "id": "879bbd9e-1b1a-4cfc-b63d-eb46ed9f6c5f",
                "kind": "Role",
                "match": {
                  "from": [
                    {
                      "id": "879bbd9e-1b1a-4cfc-b63d-eb46ed9f6c5f",
                      "kind": "self",
                      "mutatorRef": [
                        [
                          "component",
                          "kind"
                        ],
                        [
                          "displayName"
                        ]
                      ]
                    }
                  ],
                  "to": [
                    {
                      "id": "05574fe0-4101-4063-a438-86ce03cf2ca0",
                      "kind": "RoleBinding",
                      "mutatedRef": [
                        [
                          "configuration",
                          "roleRef",
                          "kind"
                        ],
                        [
                          "configuration",
                          "roleRef",
                          "name"
                        ]
                      ]
                    }
                  ]
                },
                "match_strategy_matrix": null,
                "model": {
                  "id": "00000000-0000-0000-0000-000000000000",
                  "schemaVersion": "",
                  "version": "",
                  "name": "kubernetes",
                  "displayName": "",
                  "status": "",
                  "registrant": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": "",
                    "credential_id": "00000000-0000-0000-0000-000000000000",
                    "type": "",
                    "sub_type": "",
                    "kind": "github",
                    "status": "",
                    "user_id": "00000000-0000-0000-0000-000000000000",
                    "created_at": "0001-01-01T00:00:00Z",
                    "updated_at": "0001-01-01T00:00:00Z",
                    "deleted_at": "0001-01-01T00:00:00Z"
                  },
                  "connection_id": "00000000-0000-0000-0000-000000000000",
                  "category": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": ""
                  },
                  "subCategory": "",
                  "metadata": null,
                  "model": {
                    "version": ""
                  },
                  "components_count": 0,
                  "relationships_count": 0,
                  "components": null,
                  "relationships": null
                },
                "patch": null
              }
            ],
            "to": [
              {
                "id": "1327b2fc-d03f-46c3-9772-f39a70707d95",
                "kind": "ServiceAccount",
                "match": {
                  "from": [
                    {
                      "id": "05574fe0-4101-4063-a438-86ce03cf2ca0",
                      "kind": "RoleBinding",
                      "mutatedRef": [
                        [
                          "configuration",
                          "subjects",
                          "_",
                          "name"
                        ]
                      ]
                    }
                  ],
                  "to": [
                    {
                      "id": "1327b2fc-d03f-46c3-9772-f39a70707d95",
                      "kind": "self",
                      "mutatorRef": [
                        [
                          "displayName"
                        ]
                      ]
                    }
                  ]
                },
                "match_strategy_matrix": null,
                "model": {
                  "id": "00000000-0000-0000-0000-000000000000",
                  "schemaVersion": "",
                  "version": "",
                  "name": "kubernetes",
                  "displayName": "",
                  "status": "",
                  "registrant": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": "",
                    "credential_id": "00000000-0000-0000-0000-000000000000",
                    "type": "",
                    "sub_type": "",
                    "kind": "github",
                    "status": "",
                    "user_id": "00000000-0000-0000-0000-000000000000",
                    "created_at": "0001-01-01T00:00:00Z",
                    "updated_at": "0001-01-01T00:00:00Z",
                    "deleted_at": "0001-01-01T00:00:00Z"
                  },
                  "connection_id": "00000000-0000-0000-0000-000000000000",
                  "category": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": ""
                  },
                  "subCategory": "",
                  "metadata": null,
                  "model": {
                    "version": ""
                  },
                  "components_count": 0,
                  "relationships_count": 0,
                  "components": null,
                  "relationships": null
                },
                "patch": null
              }
            ]
          }
        }
      ],
      "subType": "permission",
      "status": "approved",
      "type": "binding",
      "version": "v1.0.0"
    },
    {
      "id": "985df420-c5e4-473b-bc0b-dd5dca137d10",
      "evaluationQuery": "",
      "kind": "hierarchical",
      "metadata": {
        "description": "Namespace to namespaced components",
        "styles": {
          "primaryColor": "",
          "svgColor": "",
          "svgWhite": ""
        },
        "isAnnotation": false
      },
      "model": {
        "id": "e633cca6-b6e1-65bf-a440-0d58915e75dd",
        "schemaVersion": "models.meshery.io/v1beta1",
        "version": "v1.0.0",
        "name": "kubernetes",
        "displayName": "Kubernetes",
        "status": "enabled",
        "registrant": {
          "id": "00000000-0000-0000-0000-000000000000",
          "name": "",
          "credential_id": "00000000-0000-0000-0000-000000000000",
          "type": "",
          "sub_type": "",
          "kind": "",
          "status": "",
          "user_id": "00000000-0000-0000-0000-000000000000",
          "created_at": "0001-01-01T00:00:00Z",
          "updated_at": "0001-01-01T00:00:00Z",
          "deleted_at": "0001-01-01T00:00:00Z"
        },
        "connection_id": "f9a29d70-c287-426c-a90c-2a96590c8083",
        "category": {
          "id": "9ca27d0d-66ce-42a9-8c85-6236563f2ddb",
          "name": "Orchestration \u0026 Management"
        },
        "subCategory": "Scheduling \u0026 Orchestration",
        "metadata": {
          "isAnnotation": false,
          "primaryColor": "#326CE5",
          "secondaryColor": "#7aa1f0",
          "shape": "circle",
          "styleOverrides": "",
          "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/kubernetes-color.svg",
          "svgComplete": "",
          "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/kubernetes-white.svg"
        },
        "model": {
          "version": "v1.32.0-alpha.3"
        },
        "components_count": 0,
        "relationships_count": 0,
        "components": null,
        "relationships": null
      },
      "schemaVersion": "relationships.meshery.io/v1alpha3",
      "selectors": [
        {
          "allow": {
            "from": [
              {
                "id": "0d801979-0a3f-4702-80e6-00b512f4005c",
                "kind": "*",
                "match": {},
                "match_strategy_matrix": null,
                "model": {
                  "id": "00000000-0000-0000-0000-000000000000",
                  "schemaVersion": "",
                  "version": "",
                  "name": "*",
                  "displayName": "",
                  "status": "",
                  "registrant": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": "",
                    "credential_id": "00000000-0000-0000-0000-000000000000",
                    "type": "",
                    "sub_type": "",
                    "kind": "",
                    "status": "",
                    "user_id": "00000000-0000-0000-0000-000000000000",
                    "created_at": "0001-01-01T00:00:00Z",
                    "updated_at": "0001-01-01T00:00:00Z",
                    "deleted_at": "0001-01-01T00:00:00Z"
                  },
                  "connection_id": "00000000-0000-0000-0000-000000000000",
                  "category": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": ""
                  },
                  "subCategory": "",
                  "metadata": null,
                  "model": {
                    "version": ""
                  },
                  "components_count": 0,
                  "relationships_count": 0,
                  "components": null,
                  "relationships": null
                },
                "patch": {
                  "patchStrategy": "replace",
                  "mutatedRef": [
                    [
                      "configuration",
                      "metadata",
                      "namespace"
                    ]
                  ]
                }
              }
            ],
            "to": [
              {
                "id": "bdbf668e-ec96-48a3-9dac-47a5717756fc",
                "kind": "Namespace",
                "match": {},
                "match_strategy_matrix": null,
                "model": {
                  "id": "00000000-0000-0000-0000-000000000000",
                  "schemaVersion": "",
                  "version": "",
                  "name": "kubernetes",
                  "displayName": "",
                  "status": "",
                  "registrant": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": "",
                    "credential_id": "00000000-0000-0000-0000-000000000000",
                    "type": "",
                    "sub_type": "",
                    "kind": "github",
                    "status": "",
                    "user_id": "00000000-0000-0000-0000-000000000000",
                    "created_at": "0001-01-01T00:00:00Z",
                    "updated_at": "0001-01-01T00:00:00Z",
                    "deleted_at": "0001-01-01T00:00:00Z"
                  },
                  "connection_id": "00000000-0000-0000-0000-000000000000",
                  "category": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": ""
                  },
                  "subCategory": "",
                  "metadata": null,
                  "model": {
                    "version": ""
                  },
                  "components_count": 0,
                  "relationships_count": 0,
                  "components": null,
                  "relationships": null
                },
                "patch": {
                  "patchStrategy": "replace",
                  "mutatorRef": [
                    [
                      "displayName"
                    ]
                  ]
                }
              }
            ]
          }
        }
      ],
      "subType": "inventory",
      "status": "approved",
      "type": "parent",
      "version": "v1.0.0"
    },
    {
      "id": "9b4300c6-633a-4aaf-8aac-967c84b2dd0c",
      "evaluationQuery": "",
      "kind": "edge",
      "metadata": {
        "description": "A relationship that represents a set of permissions",
        "styles": {
          "primaryColor": "",
          "svgColor": "",
          "svgWhite": ""
        },
        "isAnnotation": false
      },
      "model": {
        "id": "e633cca6-b6e1-65bf-a440-0d58915e75dd",
        "schemaVersion": "models.meshery.io/v1beta1",
        "version": "v1.0.0",
        "name": "kubernetes",
        "displayName": "Kubernetes",
        "status": "enabled",
        "registrant": {
          "id": "00000000-0000-0000-0000-000000000000",
          "name": "",
          "credential_id": "00000000-0000-0000-0000-000000000000",
          "type": "",
          "sub_type": "",
          "kind": "",
          "status": "",
          "user_id": "00000000-0000-0000-0000-000000000000",
          "created_at": "0001-01-01T00:00:00Z",
          "updated_at": "0001-01-01T00:00:00Z",
          "deleted_at": "0001-01-01T00:00:00Z"
        },
        "connection_id": "f9a29d70-c287-426c-a90c-2a96590c8083",
        "category": {
          "id": "9ca27d0d-66ce-42a9-8c85-6236563f2ddb",
          "name": "Orchestration \u0026 Management"
        },
        "subCategory": "Scheduling \u0026 Orchestration",
        "metadata": {
          "isAnnotation": false,
          "primaryColor": "#326CE5",
          "secondaryColor": "#7aa1f0",
          "shape": "circle",
          "styleOverrides": "",
          "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/kubernetes-color.svg",
          "svgComplete": "",
          "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/kubernetes-white.svg"
        },
        "model": {
          "version": "v1.32.0-alpha.3"
        },
        "components_count": 0,
        "relationships_count": 0,
        "components": null,
        "relationships": null
      },
      "schemaVersion": "relationships.meshery.io/v1alpha3",
      "selectors": [
        {
          "allow": {
            "from": [
              {
                "id": "71622fd6-78a3-424f-ae49-7efef8fb9340",
                "kind": "ClusterRole",
                "match": {
                  "from": [
                    {
                      "id": "71622fd6-78a3-424f-ae49-7efef8fb9340",
                      "kind": "self",
                      "mutatorRef": [
                        [
                          "component",
                          "kind"
                        ],
                        [
                          "displayName"
                        ]
                      ]
                    }
                  ],
                  "to": [
                    {
                      "id": "693e165e-f7f9-4c8f-8fa2-11f47d75a926",
                      "kind": "ClusterRoleBinding",
                      "mutatedRef": [
                        [
                          "configuration",
                          "roleRef",
                          "kind"
                        ],
                        [
                          "configuration",
                          "roleRef",
                          "name"
                        ]
                      ]
                    }
                  ]
                },
                "match_strategy_matrix": null,
                "model": {
                  "id": "00000000-0000-0000-0000-000000000000",
                  "schemaVersion": "",
                  "version": "",
                  "name": "kubernetes",
                  "displayName": "",
                  "status": "",
                  "registrant": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": "",
                    "credential_id": "00000000-0000-0000-0000-000000000000",
                    "type": "",
                    "sub_type": "",
                    "kind": "github",
                    "status": "",
                    "user_id": "00000000-0000-0000-0000-000000000000",
                    "created_at": "0001-01-01T00:00:00Z",
                    "updated_at": "0001-01-01T00:00:00Z",
                    "deleted_at": "0001-01-01T00:00:00Z"
                  },
                  "connection_id": "00000000-0000-0000-0000-000000000000",
                  "category": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": ""
                  },
                  "subCategory": "",
                  "metadata": null,
                  "model": {
                    "version": ""
                  },
                  "components_count": 0,
                  "relationships_count": 0,
                  "components": null,
                  "relationships": null
                },
                "patch": null
              }
            ],
            "to": [
              {
                "id": "1327b2fc-d03f-46c3-9772-f39a70707d95",
                "kind": "ServiceAccount",
                "match": {
                  "from": [
                    {
                      "id": "693e165e-f7f9-4c8f-8fa2-11f47d75a926",
                      "kind": "ClusterRoleBinding",
                      "mutatedRef": [
                        [
                          "configuration",
                          "subjects",
                          "_",
                          "name"
                        ]
                      ]
                    }
                  ],
                  "to": [
                    {
                      "id": "1327b2fc-d03f-46c3-9772-f39a70707d95",
                      "kind": "self",
                      "mutatorRef": [
                        [
                          "displayName"
                        ]
                      ]
                    }
                  ]
                },
                "match_strategy_matrix": null,
                "model": {
                  "id": "00000000-0000-0000-0000-000000000000",
                  "schemaVersion": "",
                  "version": "",
                  "name": "kubernetes",
                  "displayName": "",
                  "status": "",
                  "registrant": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": "",
                    "credential_id": "00000000-0000-0000-0000-000000000000",
                    "type": "",
                    "sub_type": "",
                    "kind": "github",
                    "status": "",
                    "user_id": "00000000-0000-0000-0000-000000000000",
                    "created_at": "0001-01-01T00:00:00Z",
                    "updated_at": "0001-01-01T00:00:00Z",
                    "deleted_at": "0001-01-01T00:00:00Z"
                  },
                  "connection_id": "00000000-0000-0000-0000-000000000000",
                  "category": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": ""
                  },
                  "subCategory": "",
                  "metadata": null,
                  "model": {
                    "version": ""
                  },
                  "components_count": 0,
                  "relationships_count": 0,
                  "components": null,
                  "relationships": null
                },
                "patch": null
              }
            ]
          }
        }
      ],
      "subType": "permission",
      "status": "approved",
      "type": "binding",
      "version": "v1.0.0"
    },
    {
      "id": "a3bdc160-e42f-4393-85af-4d07bea08435",
      "evaluationQuery": "",
      "kind": "hierarchical",
      "metadata": {
        "description": "Namespace to namespaced components",
        "styles": {
          "primaryColor": "",
          "svgColor": "",
          "svgWhite": ""
        },
        "isAnnotation": false
      },
      "model": {
        "id": "e633cca6-b6e1-65bf-a440-0d58915e75dd",
        "schemaVersion": "models.meshery.io/v1beta1",
        "version": "v1.0.0",
        "name": "kubernetes",
        "displayName": "Kubernetes",
        "status": "enabled",
        "registrant": {
          "id": "00000000-0000-0000-0000-000000000000",
          "name": "",
          "credential_id": "00000000-0000-0000-0000-000000000000",
          "type": "",
          "sub_type": "",
          "kind": "",
          "status": "",
          "user_id": "00000000-0000-0000-0000-000000000000",
          "created_at": "0001-01-01T00:00:00Z",
          "updated_at": "0001-01-01T00:00:00Z",
          "deleted_at": "0001-01-01T00:00:00Z"
        },
        "connection_id": "f9a29d70-c287-426c-a90c-2a96590c8083",
        "category": {
          "id": "9ca27d0d-66ce-42a9-8c85-6236563f2ddb",
          "name": "Orchestration \u0026 Management"
        },
        "subCategory": "Scheduling \u0026 Orchestration",
        "metadata": {
          "isAnnotation": false,
          "primaryColor": "#326CE5",
          "secondaryColor": "#7aa1f0",
          "shape": "circle",
          "styleOverrides": "",
          "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/kubernetes-color.svg",
          "svgComplete": "",
          "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/kubernetes-white.svg"
        },
        "model": {
          "version": "v1.32.0-alpha.3"
        },
        "components_count": 0,
        "relationships_count": 0,
        "components": null,
        "relationships": null
      },
      "schemaVersion": "relationships.meshery.io/v1alpha3",
      "selectors": [
        {
          "allow": {
            "from": [
              {
                "id": "8d12e551-c0c4-4294-8bbb-2b6d35acb737",
                "kind": "*",
                "match": {},
                "match_strategy_matrix": null,
                "model": {
                  "id": "00000000-0000-0000-0000-000000000000",
                  "schemaVersion": "",
                  "version": "",
                  "name": "*",
                  "displayName": "",
                  "status": "",
                  "registrant": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": "",
                    "credential_id": "00000000-0000-0000-0000-000000000000",
                    "type": "",
                    "sub_type": "",
                    "kind": "",
                    "status": "",
                    "user_id": "00000000-0000-0000-0000-000000000000",
                    "created_at": "0001-01-01T00:00:00Z",
                    "updated_at": "0001-01-01T00:00:00Z",
                    "deleted_at": "0001-01-01T00:00:00Z"
                  },
                  "connection_id": "00000000-0000-0000-0000-000000000000",
                  "category": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": ""
                  },
                  "subCategory": "",
                  "metadata": null,
                  "model": {
                    "version": ""
                  },
                  "components_count": 0,
                  "relationships_count": 0,
                  "components": null,
                  "relationships": null
                },
                "patch": {
                  "patchStrategy": "replace",
                  "mutatedRef": [
                    [
                      "configuration",
                      "metadata",
                      "namespace"
                    ]
                  ]
                }
              }
            ],
            "to": [
              {
                "id": "bdbf668e-ec96-48a3-9dac-47a5717756fc",
                "kind": "Namespace",
                "match": {},
                "match_strategy_matrix": null,
                "model": {
                  "id": "00000000-0000-0000-0000-000000000000",
                  "schemaVersion": "",
                  "version": "",
                  "name": "kubernetes",
                  "displayName": "",
                  "status": "",
                  "registrant": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": "",
                    "credential_id": "00000000-0000-0000-0000-000000000000",
                    "type": "",
                    "sub_type": "",
                    "kind": "github",
                    "status": "",
                    "user_id": "00000000-0000-0000-0000-000000000000",
                    "created_at": "0001-01-01T00:00:00Z",
                    "updated_at": "0001-01-01T00:00:00Z",
                    "deleted_at": "0001-01-01T00:00:00Z"
                  },
                  "connection_id": "00000000-0000-0000-0000-000000000000",
                  "category": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": ""
                  },
                  "subCategory": "",
                  "metadata": null,
                  "model": {
                    "version": ""
                  },
                  "components_count": 0,
                  "relationships_count": 0,
                  "components": null,
                  "relationships": null
                },
                "patch": {
                  "patchStrategy": "replace",
                  "mutatorRef": [
                    [
                      "displayName"
                    ]
                  ]
                }
              }
            ]
          }
        }
      ],
      "subType": "inventory",
      "status": "approved",
      "type": "parent",
      "version": "v1.0.0"
    },
    {
      "id": "baf6dc80-fcc0-4ecd-b162-02e8949f4236",
      "evaluationQuery": "",
      "kind": "hierarchical",
      "metadata": {
        "description": "Namespace to namespaced components",
        "styles": {
          "primaryColor": "",
          "svgColor": "",
          "svgWhite": ""
        },
        "isAnnotation": false
      },
      "model": {
        "id": "e633cca6-b6e1-65bf-a440-0d58915e75dd",
        "schemaVersion": "models.meshery.io/v1beta1",
        "version": "v1.0.0",
        "name": "kubernetes",
        "displayName": "Kubernetes",
        "status": "enabled",
        "registrant": {
          "id": "00000000-0000-0000-0000-000000000000",
          "name": "",
          "credential_id": "00000000-0000-0000-0000-000000000000",
          "type": "",
          "sub_type": "",
          "kind": "",
          "status": "",
          "user_id": "00000000-0000-0000-0000-000000000000",
          "created_at": "0001-01-01T00:00:00Z",
          "updated_at": "0001-01-01T00:00:00Z",
          "deleted_at": "0001-01-01T00:00:00Z"
        },
        "connection_id": "f9a29d70-c287-426c-a90c-2a96590c8083",
        "category": {
          "id": "9ca27d0d-66ce-42a9-8c85-6236563f2ddb",
          "name": "Orchestration \u0026 Management"
        },
        "subCategory": "Scheduling \u0026 Orchestration",
        "metadata": {
          "isAnnotation": false,
          "primaryColor": "#326CE5",
          "secondaryColor": "#7aa1f0",
          "shape": "circle",
          "styleOverrides": "",
          "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/kubernetes-color.svg",
          "svgComplete": "",
          "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/kubernetes-white.svg"
        },
        "model": {
          "version": "v1.32.0-alpha.3"
        },
        "components_count": 0,
        "relationships_count": 0,
        "components": null,
        "relationships": null
      },
      "schemaVersion": "relationships.meshery.io/v1alpha3",
      "selectors": [
        {
          "allow": {
            "from": [
              {
                "id": "05574fe0-4101-4063-a438-86ce03cf2ca0",
                "kind": "*",
                "match": {},
                "match_strategy_matrix": null,
                "model": {
                  "id": "00000000-0000-0000-0000-000000000000",
                  "schemaVersion": "",
                  "version": "",
                  "name": "*",
                  "displayName": "",
                  "status": "",
                  "registrant": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": "",
                    "credential_id": "00000000-0000-0000-0000-000000000000",
                    "type": "",
                    "sub_type": "",
                    "kind": "",
                    "status": "",
                    "user_id": "00000000-0000-0000-0000-000000000000",
                    "created_at": "0001-01-01T00:00:00Z",
                    "updated_at": "0001-01-01T00:00:00Z",
                    "deleted_at": "0001-01-01T00:00:00Z"
                  },
                  "connection_id": "00000000-0000-0000-0000-000000000000",
                  "category": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": ""
                  },
                  "subCategory": "",
                  "metadata": null,
                  "model": {
                    "version": ""
                  },
                  "components_count": 0,
                  "relationships_count": 0,
                  "components": null,
                  "relationships": null
                },
                "patch": {
                  "patchStrategy": "replace",
                  "mutatedRef": [
                    [
                      "configuration",
                      "metadata",
                      "namespace"
                    ]
                  ]
                }
              }
            ],
            "to": [
              {
                "id": "bdbf668e-ec96-48a3-9dac-47a5717756fc",
                "kind": "Namespace",
                "match": {},
                "match_strategy_matrix": null,
                "model": {
                  "id": "00000000-0000-0000-0000-000000000000",
                  "schemaVersion": "",
                  "version": "",
                  "name": "kubernetes",
                  "displayName": "",
                  "status": "",
                  "registrant": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": "",
                    "credential_id": "00000000-0000-0000-0000-000000000000",
                    "type": "",
                    "sub_type": "",
                    "kind": "github",
                    "status": "",
                    "user_id": "00000000-0000-0000-0000-000000000000",
                    "created_at": "0001-01-01T00:00:00Z",
                    "updated_at": "0001-01-01T00:00:00Z",
                    "deleted_at": "0001-01-01T00:00:00Z"
                  },
                  "connection_id": "00000000-0000-0000-0000-000000000000",
                  "category": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": ""
                  },
                  "subCategory": "",
                  "metadata": null,
                  "model": {
                    "version": ""
                  },
                  "components_count": 0,
                  "relationships_count": 0,
                  "components": null,
                  "relationships": null
                },
                "patch": {
                  "patchStrategy": "replace",
                  "mutatorRef": [
                    [
                      "displayName"
                    ]
                  ]
                }
              }
            ]
          }
        }
      ],
      "subType": "inventory",
      "status": "approved",
      "type": "parent",
      "version": "v1.0.0"
    },
    {
      "id": "beb7d8f2-55d9-4e66-b16a-9ab92a7a98e6",
      "evaluationQuery": "",
      "kind": "hierarchical",
      "metadata": {
        "description": "A hierarchical inventory relationship in which the configuration of (parent) component is patched with the configuration of other (child) component. Eg: The configuration of the EnvoyFilter (parent) component is patched with the configuration as received from WASMFilter (child) component.",
        "styles": {
          "primaryColor": "",
          "svgColor": "",
          "svgWhite": ""
        },
        "isAnnotation": false
      },
      "model": {
        "id": "e633cca6-b6e1-65bf-a440-0d58915e75dd",
        "schemaVersion": "models.meshery.io/v1beta1",
        "version": "v1.0.0",
        "name": "kubernetes",
        "displayName": "Kubernetes",
        "status": "enabled",
        "registrant": {
          "id": "00000000-0000-0000-0000-000000000000",
          "name": "",
          "credential_id": "00000000-0000-0000-0000-000000000000",
          "type": "",
          "sub_type": "",
          "kind": "",
          "status": "",
          "user_id": "00000000-0000-0000-0000-000000000000",
          "created_at": "0001-01-01T00:00:00Z",
          "updated_at": "0001-01-01T00:00:00Z",
          "deleted_at": "0001-01-01T00:00:00Z"
        },
        "connection_id": "f9a29d70-c287-426c-a90c-2a96590c8083",
        "category": {
          "id": "9ca27d0d-66ce-42a9-8c85-6236563f2ddb",
          "name": "Orchestration \u0026 Management"
        },
        "subCategory": "Scheduling \u0026 Orchestration",
        "metadata": {
          "isAnnotation": false,
          "primaryColor": "#326CE5",
          "secondaryColor": "#7aa1f0",
          "shape": "circle",
          "styleOverrides": "",
          "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/kubernetes-color.svg",
          "svgComplete": "",
          "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/kubernetes-white.svg"
        },
        "model": {
          "version": "v1.32.0-alpha.3"
        },
        "components_count": 0,
        "relationships_count": 0,
        "components": null,
        "relationships": null
      },
      "schemaVersion": "relationships.meshery.io/v1alpha3",
      "selectors": [
        {
          "allow": {
            "from": [
              {
                "id": "d50218c9-c3bb-420a-9219-da63fa270a57",
                "kind": "Container",
                "match": {},
                "match_strategy_matrix": null,
                "model": {
                  "id": "00000000-0000-0000-0000-000000000000",
                  "schemaVersion": "",
                  "version": "",
                  "name": "meshery-core",
                  "displayName": "",
                  "status": "",
                  "registrant": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": "",
                    "credential_id": "00000000-0000-0000-0000-000000000000",
                    "type": "",
                    "sub_type": "",
                    "kind": "github",
                    "status": "",
                    "user_id": "00000000-0000-0000-0000-000000000000",
                    "created_at": "0001-01-01T00:00:00Z",
                    "updated_at": "0001-01-01T00:00:00Z",
                    "deleted_at": "0001-01-01T00:00:00Z"
                  },
                  "connection_id": "00000000-0000-0000-0000-000000000000",
                  "category": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": ""
                  },
                  "subCategory": "",
                  "metadata": null,
                  "model": {
                    "version": ""
                  },
                  "components_count": 0,
                  "relationships_count": 0,
                  "components": null,
                  "relationships": null
                },
                "patch": {
                  "patchStrategy": "replace",
                  "mutatorRef": [
                    [
                      "configuration",
                      "spec",
                      "template",
                      "spec",
                      "containers",
                      "0"
                    ]
                  ],
                  "mutatedRef": [
                    [
                      "configuration",
                      "spec",
                      "template",
                      "spec",
                      "containers",
                      "0"
                    ]
                  ]
                }
              }
            ],
            "to": [
              {
                "id": "8d12e551-c0c4-4294-8bbb-2b6d35acb737",
                "kind": "Deployment",
                "match": {},
                "match_strategy_matrix": null,
                "model": {
                  "id": "00000000-0000-0000-0000-000000000000",
                  "schemaVersion": "",
                  "version": "",
                  "name": "kubernetes",
                  "displayName": "",
                  "status": "",
                  "registrant": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": "",
                    "credential_id": "00000000-0000-0000-0000-000000000000",
                    "type": "",
                    "sub_type": "",
                    "kind": "github",
                    "status": "",
                    "user_id": "00000000-0000-0000-0000-000000000000",
                    "created_at": "0001-01-01T00:00:00Z",
                    "updated_at": "0001-01-01T00:00:00Z",
                    "deleted_at": "0001-01-01T00:00:00Z"
                  },
                  "connection_id": "00000000-0000-0000-0000-000000000000",
                  "category": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": ""
                  },
                  "subCategory": "",
                  "metadata": null,
                  "model": {
                    "version": ""
                  },
                  "components_count": 0,
                  "relationships_count": 0,
                  "components": null,
                  "relationships": null
                },
                "patch": {
                  "patchStrategy": "replace",
                  "mutatorRef": [
                    [
                      "configuration",
                      "spec",
                      "template",
                      "spec",
                      "containers",
                      "0"
                    ]
                  ],
                  "mutatedRef": [
                    [
                      "configuration",
                      "spec",
                      "template",
                      "spec",
                      "containers",
                      "0"
                    ]
                  ]
                }
              }
            ]
          },
          "deny": {
            "from": null,
            "to": null
          }
        }
      ],
      "subType": "alias",
      "status": "approved",
      "type": "parent",
      "version": "v1.0.0"
    },
    {
      "id": "cd6a6ac3-2672-44a7-aef6-8590d8ac1a1c",
      "evaluationQuery": "",
      "kind": "edge",
      "metadata": {
        "description": "A relationship that defines network edges between components",
        "styles": {
          "primaryColor": "",
          "svgColor": "",
          "svgWhite": ""
        },
        "isAnnotation": false
      },
      "model": {
        "id": "e633cca6-b6e1-65bf-a440-0d58915e75dd",
        "schemaVersion": "models.meshery.io/v1beta1",
        "version": "v1.0.0",
        "name": "kubernetes",
        "displayName": "Kubernetes",
        "status": "enabled",
        "registrant": {
          "id": "00000000-0000-0000-0000-000000000000",
          "name": "",
          "credential_id": "00000000-0000-0000-0000-000000000000",
          "type": "",
          "sub_type": "",
          "kind": "",
          "status": "",
          "user_id": "00000000-0000-0000-0000-000000000000",
          "created_at": "0001-01-01T00:00:00Z",
          "updated_at": "0001-01-01T00:00:00Z",
          "deleted_at": "0001-01-01T00:00:00Z"
        },
        "connection_id": "f9a29d70-c287-426c-a90c-2a96590c8083",
        "category": {
          "id": "9ca27d0d-66ce-42a9-8c85-6236563f2ddb",
          "name": "Orchestration \u0026 Management"
        },
        "subCategory": "Scheduling \u0026 Orchestration",
        "metadata": {
          "isAnnotation": false,
          "primaryColor": "#326CE5",
          "secondaryColor": "#7aa1f0",
          "shape": "circle",
          "styleOverrides": "",
          "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/kubernetes-color.svg",
          "svgComplete": "",
          "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/kubernetes-white.svg"
        },
        "model": {
          "version": "v1.32.0-alpha.3"
        },
        "components_count": 0,
        "relationships_count": 0,
        "components": null,
        "relationships": null
      },
      "schemaVersion": "relationships.meshery.io/v1alpha3",
      "selectors": [
        {
          "allow": {
            "from": [
              {
                "id": "0b92eea0-5acd-459f-9b59-085a8962af9c",
                "kind": "Service",
                "match": {},
                "match_strategy_matrix": [
                  [
                    "to_contains_from",
                    "not_null"
                  ],
                  [
                    "equal_as_strings",
                    "not_null"
                  ],
                  [
                    "equal"
                  ]
                ],
                "model": {
                  "id": "00000000-0000-0000-0000-000000000000",
                  "schemaVersion": "",
                  "version": "",
                  "name": "kubernetes",
                  "displayName": "",
                  "status": "",
                  "registrant": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": "",
                    "credential_id": "00000000-0000-0000-0000-000000000000",
                    "type": "",
                    "sub_type": "",
                    "kind": "github",
                    "status": "",
                    "user_id": "00000000-0000-0000-0000-000000000000",
                    "created_at": "0001-01-01T00:00:00Z",
                    "updated_at": "0001-01-01T00:00:00Z",
                    "deleted_at": "0001-01-01T00:00:00Z"
                  },
                  "connection_id": "00000000-0000-0000-0000-000000000000",
                  "category": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": ""
                  },
                  "subCategory": "",
                  "metadata": null,
                  "model": {
                    "version": ""
                  },
                  "components_count": 0,
                  "relationships_count": 0,
                  "components": null,
                  "relationships": null
                },
                "patch": {
                  "patchStrategy": "replace",
                  "mutatorRef": [
                    [
                      "configuration",
                      "spec",
                      "selector"
                    ],
                    [
                      "configuration",
                      "spec",
                      "ports",
                      "0",
                      "targetPort"
                    ],
                    [
                      "configuration",
                      "spec",
                      "ports",
                      "0",
                      "protocol"
                    ]
                  ]
                }
              }
            ],
            "to": [
              {
                "id": "99c24ba2-ce1f-4db4-8348-4695534463da",
                "kind": "Deployment",
                "match": {},
                "match_strategy_matrix": null,
                "model": {
                  "id": "00000000-0000-0000-0000-000000000000",
                  "schemaVersion": "",
                  "version": "",
                  "name": "kubernetes",
                  "displayName": "",
                  "status": "",
                  "registrant": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": "",
                    "credential_id": "00000000-0000-0000-0000-000000000000",
                    "type": "",
                    "sub_type": "",
                    "kind": "github",
                    "status": "",
                    "user_id": "00000000-0000-0000-0000-000000000000",
                    "created_at": "0001-01-01T00:00:00Z",
                    "updated_at": "0001-01-01T00:00:00Z",
                    "deleted_at": "0001-01-01T00:00:00Z"
                  },
                  "connection_id": "00000000-0000-0000-0000-000000000000",
                  "category": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": ""
                  },
                  "subCategory": "",
                  "metadata": null,
                  "model": {
                    "version": ""
                  },
                  "components_count": 0,
                  "relationships_count": 0,
                  "components": null,
                  "relationships": null
                },
                "patch": {
                  "patchStrategy": "replace",
                  "mutatedRef": [
                    [
                      "configuration",
                      "spec",
                      "selector",
                      "matchLabels"
                    ],
                    [
                      "configuration",
                      "spec",
                      "template",
                      "spec",
                      "containers",
                      "0",
                      "ports",
                      "0",
                      "containerPort"
                    ],
                    [
                      "configuration",
                      "spec",
                      "template",
                      "spec",
                      "containers",
                      "0",
                      "ports",
                      "0",
                      "protocol"
                    ]
                  ]
                }
              }
            ]
          },
          "deny": {
            "from": null,
            "to": null
          }
        }
      ],
      "subType": "network",
      "status": "approved",
      "type": "non-binding",
      "version": "v1.0.0"
    },
    {
      "id": "d19cbc4a-a75a-4bc3-b33f-933dd10740c1",
      "evaluationQuery": "",
      "kind": "hierarchical",
      "metadata": {
        "description": "Namespace to namespaced components",
        "styles": {
          "primaryColor": "",
          "svgColor": "",
          "svgWhite": ""
        },
        "isAnnotation": false
      },
      "model": {
        "id": "e633cca6-b6e1-65bf-a440-0d58915e75dd",
        "schemaVersion": "models.meshery.io/v1beta1",
        "version": "v1.0.0",
        "name": "kubernetes",
        "displayName": "Kubernetes",
        "status": "enabled",
        "registrant": {
          "id": "00000000-0000-0000-0000-000000000000",
          "name": "",
          "credential_id": "00000000-0000-0000-0000-000000000000",
          "type": "",
          "sub_type": "",
          "kind": "",
          "status": "",
          "user_id": "00000000-0000-0000-0000-000000000000",
          "created_at": "0001-01-01T00:00:00Z",
          "updated_at": "0001-01-01T00:00:00Z",
          "deleted_at": "0001-01-01T00:00:00Z"
        },
        "connection_id": "f9a29d70-c287-426c-a90c-2a96590c8083",
        "category": {
          "id": "9ca27d0d-66ce-42a9-8c85-6236563f2ddb",
          "name": "Orchestration \u0026 Management"
        },
        "subCategory": "Scheduling \u0026 Orchestration",
        "metadata": {
          "isAnnotation": false,
          "primaryColor": "#326CE5",
          "secondaryColor": "#7aa1f0",
          "shape": "circle",
          "styleOverrides": "",
          "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/kubernetes-color.svg",
          "svgComplete": "",
          "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/kubernetes-white.svg"
        },
        "model": {
          "version": "v1.32.0-alpha.3"
        },
        "components_count": 0,
        "relationships_count": 0,
        "components": null,
        "relationships": null
      },
      "schemaVersion": "relationships.meshery.io/v1alpha3",
      "selectors": [
        {
          "allow": {
            "from": [
              {
                "id": "0b92eea0-5acd-459f-9b59-085a8962af9c",
                "kind": "*",
                "match": {},
                "match_strategy_matrix": null,
                "model": {
                  "id": "00000000-0000-0000-0000-000000000000",
                  "schemaVersion": "",
                  "version": "",
                  "name": "*",
                  "displayName": "",
                  "status": "",
                  "registrant": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": "",
                    "credential_id": "00000000-0000-0000-0000-000000000000",
                    "type": "",
                    "sub_type": "",
                    "kind": "",
                    "status": "",
                    "user_id": "00000000-0000-0000-0000-000000000000",
                    "created_at": "0001-01-01T00:00:00Z",
                    "updated_at": "0001-01-01T00:00:00Z",
                    "deleted_at": "0001-01-01T00:00:00Z"
                  },
                  "connection_id": "00000000-0000-0000-0000-000000000000",
                  "category": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": ""
                  },
                  "subCategory": "",
                  "metadata": null,
                  "model": {
                    "version": ""
                  },
                  "components_count": 0,
                  "relationships_count": 0,
                  "components": null,
                  "relationships": null
                },
                "patch": {
                  "patchStrategy": "replace",
                  "mutatedRef": [
                    [
                      "configuration",
                      "metadata",
                      "namespace"
                    ]
                  ]
                }
              }
            ],
            "to": [
              {
                "id": "779771c4-bd19-4425-a27b-a75afd10b4b2",
                "kind": "Namespace",
                "match": {},
                "match_strategy_matrix": null,
                "model": {
                  "id": "00000000-0000-0000-0000-000000000000",
                  "schemaVersion": "",
                  "version": "",
                  "name": "kubernetes",
                  "displayName": "",
                  "status": "",
                  "registrant": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": "",
                    "credential_id": "00000000-0000-0000-0000-000000000000",
                    "type": "",
                    "sub_type": "",
                    "kind": "github",
                    "status": "",
                    "user_id": "00000000-0000-0000-0000-000000000000",
                    "created_at": "0001-01-01T00:00:00Z",
                    "updated_at": "0001-01-01T00:00:00Z",
                    "deleted_at": "0001-01-01T00:00:00Z"
                  },
                  "connection_id": "00000000-0000-0000-0000-000000000000",
                  "category": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": ""
                  },
                  "subCategory": "",
                  "metadata": null,
                  "model": {
                    "version": ""
                  },
                  "components_count": 0,
                  "relationships_count": 0,
                  "components": null,
                  "relationships": null
                },
                "patch": {
                  "patchStrategy": "replace",
                  "mutatorRef": [
                    [
                      "displayName"
                    ]
                  ]
                }
              }
            ]
          }
        }
      ],
      "subType": "inventory",
      "status": "approved",
      "type": "parent",
      "version": "v1.0.0"
    },
    {
      "id": "d54549f7-d324-48e4-9078-1191ac98f0b2",
      "evaluationQuery": "",
      "kind": "hierarchical",
      "metadata": {
        "description": "Namespace to namespaced components",
        "styles": {
          "primaryColor": "",
          "svgColor": "",
          "svgWhite": ""
        },
        "isAnnotation": false
      },
      "model": {
        "id": "e633cca6-b6e1-65bf-a440-0d58915e75dd",
        "schemaVersion": "models.meshery.io/v1beta1",
        "version": "v1.0.0",
        "name": "kubernetes",
        "displayName": "Kubernetes",
        "status": "enabled",
        "registrant": {
          "id": "00000000-0000-0000-0000-000000000000",
          "name": "",
          "credential_id": "00000000-0000-0000-0000-000000000000",
          "type": "",
          "sub_type": "",
          "kind": "",
          "status": "",
          "user_id": "00000000-0000-0000-0000-000000000000",
          "created_at": "0001-01-01T00:00:00Z",
          "updated_at": "0001-01-01T00:00:00Z",
          "deleted_at": "0001-01-01T00:00:00Z"
        },
        "connection_id": "f9a29d70-c287-426c-a90c-2a96590c8083",
        "category": {
          "id": "9ca27d0d-66ce-42a9-8c85-6236563f2ddb",
          "name": "Orchestration \u0026 Management"
        },
        "subCategory": "Scheduling \u0026 Orchestration",
        "metadata": {
          "isAnnotation": false,
          "primaryColor": "#326CE5",
          "secondaryColor": "#7aa1f0",
          "shape": "circle",
          "styleOverrides": "",
          "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/kubernetes-color.svg",
          "svgComplete": "",
          "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/kubernetes-white.svg"
        },
        "model": {
          "version": "v1.32.0-alpha.3"
        },
        "components_count": 0,
        "relationships_count": 0,
        "components": null,
        "relationships": null
      },
      "schemaVersion": "relationships.meshery.io/v1alpha3",
      "selectors": [
        {
          "allow": {
            "from": [
              {
                "id": "fd542ffe-7724-41d8-bc9e-bb522c81abad",
                "kind": "*",
                "match": {},
                "match_strategy_matrix": null,
                "model": {
                  "id": "00000000-0000-0000-0000-000000000000",
                  "schemaVersion": "",
                  "version": "",
                  "name": "*",
                  "displayName": "",
                  "status": "",
                  "registrant": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": "",
                    "credential_id": "00000000-0000-0000-0000-000000000000",
                    "type": "",
                    "sub_type": "",
                    "kind": "",
                    "status": "",
                    "user_id": "00000000-0000-0000-0000-000000000000",
                    "created_at": "0001-01-01T00:00:00Z",
                    "updated_at": "0001-01-01T00:00:00Z",
                    "deleted_at": "0001-01-01T00:00:00Z"
                  },
                  "connection_id": "00000000-0000-0000-0000-000000000000",
                  "category": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": ""
                  },
                  "subCategory": "",
                  "metadata": null,
                  "model": {
                    "version": ""
                  },
                  "components_count": 0,
                  "relationships_count": 0,
                  "components": null,
                  "relationships": null
                },
                "patch": {
                  "patchStrategy": "replace",
                  "mutatedRef": [
                    [
                      "configuration",
                      "metadata",
                      "namespace"
                    ]
                  ]
                }
              }
            ],
            "to": [
              {
                "id": "bdbf668e-ec96-48a3-9dac-47a5717756fc",
                "kind": "Namespace",
                "match": {},
                "match_strategy_matrix": null,
                "model": {
                  "id": "00000000-0000-0000-0000-000000000000",
                  "schemaVersion": "",
                  "version": "",
                  "name": "kubernetes",
                  "displayName": "",
                  "status": "",
                  "registrant": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": "",
                    "credential_id": "00000000-0000-0000-0000-000000000000",
                    "type": "",
                    "sub_type": "",
                    "kind": "github",
                    "status": "",
                    "user_id": "00000000-0000-0000-0000-000000000000",
                    "created_at": "0001-01-01T00:00:00Z",
                    "updated_at": "0001-01-01T00:00:00Z",
                    "deleted_at": "0001-01-01T00:00:00Z"
                  },
                  "connection_id": "00000000-0000-0000-0000-000000000000",
                  "category": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": ""
                  },
                  "subCategory": "",
                  "metadata": null,
                  "model": {
                    "version": ""
                  },
                  "components_count": 0,
                  "relationships_count": 0,
                  "components": null,
                  "relationships": null
                },
                "patch": {
                  "patchStrategy": "replace",
                  "mutatorRef": [
                    [
                      "displayName"
                    ]
                  ]
                }
              }
            ]
          }
        }
      ],
      "subType": "inventory",
      "status": "approved",
      "type": "parent",
      "version": "v1.0.0"
    },
    {
      "id": "d5f1432c-ef78-45d5-81c2-66b2316bfaed",
      "evaluationQuery": "",
      "kind": "hierarchical",
      "metadata": {
        "description": "Namespace to namespaced components",
        "styles": {
          "primaryColor": "",
          "svgColor": "",
          "svgWhite": ""
        },
        "isAnnotation": false
      },
      "model": {
        "id": "e633cca6-b6e1-65bf-a440-0d58915e75dd",
        "schemaVersion": "models.meshery.io/v1beta1",
        "version": "v1.0.0",
        "name": "kubernetes",
        "displayName": "Kubernetes",
        "status": "enabled",
        "registrant": {
          "id": "00000000-0000-0000-0000-000000000000",
          "name": "",
          "credential_id": "00000000-0000-0000-0000-000000000000",
          "type": "",
          "sub_type": "",
          "kind": "",
          "status": "",
          "user_id": "00000000-0000-0000-0000-000000000000",
          "created_at": "0001-01-01T00:00:00Z",
          "updated_at": "0001-01-01T00:00:00Z",
          "deleted_at": "0001-01-01T00:00:00Z"
        },
        "connection_id": "f9a29d70-c287-426c-a90c-2a96590c8083",
        "category": {
          "id": "9ca27d0d-66ce-42a9-8c85-6236563f2ddb",
          "name": "Orchestration \u0026 Management"
        },
        "subCategory": "Scheduling \u0026 Orchestration",
        "metadata": {
          "isAnnotation": false,
          "primaryColor": "#326CE5",
          "secondaryColor": "#7aa1f0",
          "shape": "circle",
          "styleOverrides": "",
          "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/kubernetes-color.svg",
          "svgComplete": "",
          "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/kubernetes-white.svg"
        },
        "model": {
          "version": "v1.32.0-alpha.3"
        },
        "components_count": 0,
        "relationships_count": 0,
        "components": null,
        "relationships": null
      },
      "schemaVersion": "relationships.meshery.io/v1alpha3",
      "selectors": [
        {
          "allow": {
            "from": [
              {
                "id": "ad59bd7c-5594-4269-ba27-07579c5370f9",
                "kind": "*",
                "match": {},
                "match_strategy_matrix": null,
                "model": {
                  "id": "00000000-0000-0000-0000-000000000000",
                  "schemaVersion": "",
                  "version": "",
                  "name": "*",
                  "displayName": "",
                  "status": "",
                  "registrant": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": "",
                    "credential_id": "00000000-0000-0000-0000-000000000000",
                    "type": "",
                    "sub_type": "",
                    "kind": "",
                    "status": "",
                    "user_id": "00000000-0000-0000-0000-000000000000",
                    "created_at": "0001-01-01T00:00:00Z",
                    "updated_at": "0001-01-01T00:00:00Z",
                    "deleted_at": "0001-01-01T00:00:00Z"
                  },
                  "connection_id": "00000000-0000-0000-0000-000000000000",
                  "category": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": ""
                  },
                  "subCategory": "",
                  "metadata": null,
                  "model": {
                    "version": ""
                  },
                  "components_count": 0,
                  "relationships_count": 0,
                  "components": null,
                  "relationships": null
                },
                "patch": {
                  "patchStrategy": "replace",
                  "mutatedRef": [
                    [
                      "configuration",
                      "metadata",
                      "namespace"
                    ]
                  ]
                }
              }
            ],
            "to": [
              {
                "id": "779771c4-bd19-4425-a27b-a75afd10b4b2",
                "kind": "Namespace",
                "match": {},
                "match_strategy_matrix": null,
                "model": {
                  "id": "00000000-0000-0000-0000-000000000000",
                  "schemaVersion": "",
                  "version": "",
                  "name": "kubernetes",
                  "displayName": "",
                  "status": "",
                  "registrant": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": "",
                    "credential_id": "00000000-0000-0000-0000-000000000000",
                    "type": "",
                    "sub_type": "",
                    "kind": "github",
                    "status": "",
                    "user_id": "00000000-0000-0000-0000-000000000000",
                    "created_at": "0001-01-01T00:00:00Z",
                    "updated_at": "0001-01-01T00:00:00Z",
                    "deleted_at": "0001-01-01T00:00:00Z"
                  },
                  "connection_id": "00000000-0000-0000-0000-000000000000",
                  "category": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": ""
                  },
                  "subCategory": "",
                  "metadata": null,
                  "model": {
                    "version": ""
                  },
                  "components_count": 0,
                  "relationships_count": 0,
                  "components": null,
                  "relationships": null
                },
                "patch": {
                  "patchStrategy": "replace",
                  "mutatorRef": [
                    [
                      "displayName"
                    ]
                  ]
                }
              }
            ]
          }
        }
      ],
      "subType": "inventory",
      "status": "approved",
      "type": "parent",
      "version": "v1.0.0"
    },
    {
      "id": "e004b583-6862-4fc6-989c-fcc8375d36cf",
      "evaluationQuery": "",
      "kind": "edge",
      "metadata": {
        "description": "A relationship that represents a set of permissions",
        "styles": {
          "primaryColor": "",
          "svgColor": "",
          "svgWhite": ""
        },
        "isAnnotation": false
      },
      "model": {
        "id": "e633cca6-b6e1-65bf-a440-0d58915e75dd",
        "schemaVersion": "models.meshery.io/v1beta1",
        "version": "v1.0.0",
        "name": "kubernetes",
        "displayName": "Kubernetes",
        "status": "enabled",
        "registrant": {
          "id": "00000000-0000-0000-0000-000000000000",
          "name": "",
          "credential_id": "00000000-0000-0000-0000-000000000000",
          "type": "",
          "sub_type": "",
          "kind": "",
          "status": "",
          "user_id": "00000000-0000-0000-0000-000000000000",
          "created_at": "0001-01-01T00:00:00Z",
          "updated_at": "0001-01-01T00:00:00Z",
          "deleted_at": "0001-01-01T00:00:00Z"
        },
        "connection_id": "f9a29d70-c287-426c-a90c-2a96590c8083",
        "category": {
          "id": "9ca27d0d-66ce-42a9-8c85-6236563f2ddb",
          "name": "Orchestration \u0026 Management"
        },
        "subCategory": "Scheduling \u0026 Orchestration",
        "metadata": {
          "isAnnotation": false,
          "primaryColor": "#326CE5",
          "secondaryColor": "#7aa1f0",
          "shape": "circle",
          "styleOverrides": "",
          "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/kubernetes-color.svg",
          "svgComplete": "",
          "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/kubernetes-white.svg"
        },
        "model": {
          "version": "v1.32.0-alpha.3"
        },
        "components_count": 0,
        "relationships_count": 0,
        "components": null,
        "relationships": null
      },
      "schemaVersion": "relationships.meshery.io/v1alpha3",
      "selectors": [
        {
          "allow": {
            "from": [
              {
                "id": "11e33510-06ef-4efe-b5fc-2d11cd1c437b",
                "kind": "ClusterRole",
                "match": {
                  "from": [
                    {
                      "id": "11e33510-06ef-4efe-b5fc-2d11cd1c437b",
                      "kind": "self",
                      "mutatorRef": [
                        [
                          "component",
                          "kind"
                        ],
                        [
                          "displayName"
                        ]
                      ]
                    }
                  ],
                  "to": [
                    {
                      "id": "71dbcb25-4cd1-4c81-9fe5-7998c925a2b9",
                      "kind": "ClusterRoleBinding",
                      "mutatedRef": [
                        [
                          "configuration",
                          "roleRef",
                          "kind"
                        ],
                        [
                          "configuration",
                          "roleRef",
                          "name"
                        ]
                      ]
                    }
                  ]
                },
                "match_strategy_matrix": null,
                "model": {
                  "id": "00000000-0000-0000-0000-000000000000",
                  "schemaVersion": "",
                  "version": "",
                  "name": "kubernetes",
                  "displayName": "",
                  "status": "",
                  "registrant": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": "",
                    "credential_id": "00000000-0000-0000-0000-000000000000",
                    "type": "",
                    "sub_type": "",
                    "kind": "github",
                    "status": "",
                    "user_id": "00000000-0000-0000-0000-000000000000",
                    "created_at": "0001-01-01T00:00:00Z",
                    "updated_at": "0001-01-01T00:00:00Z",
                    "deleted_at": "0001-01-01T00:00:00Z"
                  },
                  "connection_id": "00000000-0000-0000-0000-000000000000",
                  "category": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": ""
                  },
                  "subCategory": "",
                  "metadata": null,
                  "model": {
                    "version": ""
                  },
                  "components_count": 0,
                  "relationships_count": 0,
                  "components": null,
                  "relationships": null
                },
                "patch": null
              }
            ],
            "to": [
              {
                "id": "8020ae58-3287-429c-a6f0-4eaa7c9d182c",
                "kind": "ServiceAccount",
                "match": {
                  "from": [
                    {
                      "id": "71dbcb25-4cd1-4c81-9fe5-7998c925a2b9",
                      "kind": "ClusterRoleBinding",
                      "mutatedRef": [
                        [
                          "configuration",
                          "subjects",
                          "_",
                          "name"
                        ]
                      ]
                    }
                  ],
                  "to": [
                    {
                      "id": "8020ae58-3287-429c-a6f0-4eaa7c9d182c",
                      "kind": "self",
                      "mutatorRef": [
                        [
                          "displayName"
                        ]
                      ]
                    }
                  ]
                },
                "match_strategy_matrix": null,
                "model": {
                  "id": "00000000-0000-0000-0000-000000000000",
                  "schemaVersion": "",
                  "version": "",
                  "name": "kubernetes",
                  "displayName": "",
                  "status": "",
                  "registrant": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": "",
                    "credential_id": "00000000-0000-0000-0000-000000000000",
                    "type": "",
                    "sub_type": "",
                    "kind": "github",
                    "status": "",
                    "user_id": "00000000-0000-0000-0000-000000000000",
                    "created_at": "0001-01-01T00:00:00Z",
                    "updated_at": "0001-01-01T00:00:00Z",
                    "deleted_at": "0001-01-01T00:00:00Z"
                  },
                  "connection_id": "00000000-0000-0000-0000-000000000000",
                  "category": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": ""
                  },
                  "subCategory": "",
                  "metadata": null,
                  "model": {
                    "version": ""
                  },
                  "components_count": 0,
                  "relationships_count": 0,
                  "components": null,
                  "relationships": null
                },
                "patch": null
              }
            ]
          }
        }
      ],
      "subType": "permission",
      "status": "approved",
      "type": "binding",
      "version": "v1.0.0"
    },
    {
      "id": "e26a9d0f-0954-46c5-9321-31ca5c883409",
      "evaluationQuery": "",
      "kind": "edge",
      "metadata": {
        "description": "A relationship that represents a set of permissions",
        "styles": {
          "primaryColor": "",
          "svgColor": "",
          "svgWhite": ""
        },
        "isAnnotation": false
      },
      "model": {
        "id": "e633cca6-b6e1-65bf-a440-0d58915e75dd",
        "schemaVersion": "models.meshery.io/v1beta1",
        "version": "v1.0.0",
        "name": "kubernetes",
        "displayName": "Kubernetes",
        "status": "enabled",
        "registrant": {
          "id": "00000000-0000-0000-0000-000000000000",
          "name": "",
          "credential_id": "00000000-0000-0000-0000-000000000000",
          "type": "",
          "sub_type": "",
          "kind": "",
          "status": "",
          "user_id": "00000000-0000-0000-0000-000000000000",
          "created_at": "0001-01-01T00:00:00Z",
          "updated_at": "0001-01-01T00:00:00Z",
          "deleted_at": "0001-01-01T00:00:00Z"
        },
        "connection_id": "f9a29d70-c287-426c-a90c-2a96590c8083",
        "category": {
          "id": "9ca27d0d-66ce-42a9-8c85-6236563f2ddb",
          "name": "Orchestration \u0026 Management"
        },
        "subCategory": "Scheduling \u0026 Orchestration",
        "metadata": {
          "isAnnotation": false,
          "primaryColor": "#326CE5",
          "secondaryColor": "#7aa1f0",
          "shape": "circle",
          "styleOverrides": "",
          "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/kubernetes-color.svg",
          "svgComplete": "",
          "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/kubernetes-white.svg"
        },
        "model": {
          "version": "v1.32.0-alpha.3"
        },
        "components_count": 0,
        "relationships_count": 0,
        "components": null,
        "relationships": null
      },
      "schemaVersion": "relationships.meshery.io/v1alpha3",
      "selectors": [
        {
          "allow": {
            "from": [
              {
                "id": "64be2240-306f-4c19-8573-0c46a4ff4562",
                "kind": "ClusterRole",
                "match": {
                  "from": [
                    {
                      "id": "64be2240-306f-4c19-8573-0c46a4ff4562",
                      "kind": "self",
                      "mutatorRef": [
                        [
                          "component",
                          "kind"
                        ],
                        [
                          "displayName"
                        ]
                      ]
                    }
                  ],
                  "to": [
                    {
                      "id": "2738725d-0a9e-4c66-866d-612596efec1f",
                      "kind": "ClusterRoleBinding",
                      "mutatedRef": [
                        [
                          "configuration",
                          "roleRef",
                          "kind"
                        ],
                        [
                          "configuration",
                          "roleRef",
                          "name"
                        ]
                      ]
                    }
                  ]
                },
                "match_strategy_matrix": null,
                "model": {
                  "id": "00000000-0000-0000-0000-000000000000",
                  "schemaVersion": "",
                  "version": "",
                  "name": "kubernetes",
                  "displayName": "",
                  "status": "",
                  "registrant": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": "",
                    "credential_id": "00000000-0000-0000-0000-000000000000",
                    "type": "",
                    "sub_type": "",
                    "kind": "github",
                    "status": "",
                    "user_id": "00000000-0000-0000-0000-000000000000",
                    "created_at": "0001-01-01T00:00:00Z",
                    "updated_at": "0001-01-01T00:00:00Z",
                    "deleted_at": "0001-01-01T00:00:00Z"
                  },
                  "connection_id": "00000000-0000-0000-0000-000000000000",
                  "category": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": ""
                  },
                  "subCategory": "",
                  "metadata": null,
                  "model": {
                    "version": ""
                  },
                  "components_count": 0,
                  "relationships_count": 0,
                  "components": null,
                  "relationships": null
                },
                "patch": null
              }
            ],
            "to": [
              {
                "id": "1327b2fc-d03f-46c3-9772-f39a70707d95",
                "kind": "ServiceAccount",
                "match": {
                  "from": [
                    {
                      "id": "2738725d-0a9e-4c66-866d-612596efec1f",
                      "kind": "ClusterRoleBinding",
                      "mutatedRef": [
                        [
                          "configuration",
                          "subjects",
                          "_",
                          "name"
                        ]
                      ]
                    }
                  ],
                  "to": [
                    {
                      "id": "1327b2fc-d03f-46c3-9772-f39a70707d95",
                      "kind": "self",
                      "mutatorRef": [
                        [
                          "displayName"
                        ]
                      ]
                    }
                  ]
                },
                "match_strategy_matrix": null,
                "model": {
                  "id": "00000000-0000-0000-0000-000000000000",
                  "schemaVersion": "",
                  "version": "",
                  "name": "kubernetes",
                  "displayName": "",
                  "status": "",
                  "registrant": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": "",
                    "credential_id": "00000000-0000-0000-0000-000000000000",
                    "type": "",
                    "sub_type": "",
                    "kind": "github",
                    "status": "",
                    "user_id": "00000000-0000-0000-0000-000000000000",
                    "created_at": "0001-01-01T00:00:00Z",
                    "updated_at": "0001-01-01T00:00:00Z",
                    "deleted_at": "0001-01-01T00:00:00Z"
                  },
                  "connection_id": "00000000-0000-0000-0000-000000000000",
                  "category": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": ""
                  },
                  "subCategory": "",
                  "metadata": null,
                  "model": {
                    "version": ""
                  },
                  "components_count": 0,
                  "relationships_count": 0,
                  "components": null,
                  "relationships": null
                },
                "patch": null
              }
            ]
          }
        }
      ],
      "subType": "permission",
      "status": "approved",
      "type": "binding",
      "version": "v1.0.0"
    },
    {
      "id": "e299f812-0645-4c92-ae99-db7f1f3d09e6",
      "evaluationQuery": "",
      "kind": "hierarchical",
      "metadata": {
        "description": "Namespace to namespaced components",
        "styles": {
          "primaryColor": "",
          "svgColor": "",
          "svgWhite": ""
        },
        "isAnnotation": false
      },
      "model": {
        "id": "e633cca6-b6e1-65bf-a440-0d58915e75dd",
        "schemaVersion": "models.meshery.io/v1beta1",
        "version": "v1.0.0",
        "name": "kubernetes",
        "displayName": "Kubernetes",
        "status": "enabled",
        "registrant": {
          "id": "00000000-0000-0000-0000-000000000000",
          "name": "",
          "credential_id": "00000000-0000-0000-0000-000000000000",
          "type": "",
          "sub_type": "",
          "kind": "",
          "status": "",
          "user_id": "00000000-0000-0000-0000-000000000000",
          "created_at": "0001-01-01T00:00:00Z",
          "updated_at": "0001-01-01T00:00:00Z",
          "deleted_at": "0001-01-01T00:00:00Z"
        },
        "connection_id": "f9a29d70-c287-426c-a90c-2a96590c8083",
        "category": {
          "id": "9ca27d0d-66ce-42a9-8c85-6236563f2ddb",
          "name": "Orchestration \u0026 Management"
        },
        "subCategory": "Scheduling \u0026 Orchestration",
        "metadata": {
          "isAnnotation": false,
          "primaryColor": "#326CE5",
          "secondaryColor": "#7aa1f0",
          "shape": "circle",
          "styleOverrides": "",
          "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/kubernetes-color.svg",
          "svgComplete": "",
          "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/kubernetes-white.svg"
        },
        "model": {
          "version": "v1.32.0-alpha.3"
        },
        "components_count": 0,
        "relationships_count": 0,
        "components": null,
        "relationships": null
      },
      "schemaVersion": "relationships.meshery.io/v1alpha3",
      "selectors": [
        {
          "allow": {
            "from": [
              {
                "id": "ee7efd93-627d-4bdb-b0a6-d824ea1da962",
                "kind": "*",
                "match": {},
                "match_strategy_matrix": null,
                "model": {
                  "id": "00000000-0000-0000-0000-000000000000",
                  "schemaVersion": "",
                  "version": "",
                  "name": "*",
                  "displayName": "",
                  "status": "",
                  "registrant": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": "",
                    "credential_id": "00000000-0000-0000-0000-000000000000",
                    "type": "",
                    "sub_type": "",
                    "kind": "",
                    "status": "",
                    "user_id": "00000000-0000-0000-0000-000000000000",
                    "created_at": "0001-01-01T00:00:00Z",
                    "updated_at": "0001-01-01T00:00:00Z",
                    "deleted_at": "0001-01-01T00:00:00Z"
                  },
                  "connection_id": "00000000-0000-0000-0000-000000000000",
                  "category": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": ""
                  },
                  "subCategory": "",
                  "metadata": null,
                  "model": {
                    "version": ""
                  },
                  "components_count": 0,
                  "relationships_count": 0,
                  "components": null,
                  "relationships": null
                },
                "patch": {
                  "patchStrategy": "replace",
                  "mutatedRef": [
                    [
                      "configuration",
                      "metadata",
                      "namespace"
                    ]
                  ]
                }
              }
            ],
            "to": [
              {
                "id": "bdbf668e-ec96-48a3-9dac-47a5717756fc",
                "kind": "Namespace",
                "match": {},
                "match_strategy_matrix": null,
                "model": {
                  "id": "00000000-0000-0000-0000-000000000000",
                  "schemaVersion": "",
                  "version": "",
                  "name": "kubernetes",
                  "displayName": "",
                  "status": "",
                  "registrant": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": "",
                    "credential_id": "00000000-0000-0000-0000-000000000000",
                    "type": "",
                    "sub_type": "",
                    "kind": "github",
                    "status": "",
                    "user_id": "00000000-0000-0000-0000-000000000000",
                    "created_at": "0001-01-01T00:00:00Z",
                    "updated_at": "0001-01-01T00:00:00Z",
                    "deleted_at": "0001-01-01T00:00:00Z"
                  },
                  "connection_id": "00000000-0000-0000-0000-000000000000",
                  "category": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": ""
                  },
                  "subCategory": "",
                  "metadata": null,
                  "model": {
                    "version": ""
                  },
                  "components_count": 0,
                  "relationships_count": 0,
                  "components": null,
                  "relationships": null
                },
                "patch": {
                  "patchStrategy": "replace",
                  "mutatorRef": [
                    [
                      "displayName"
                    ]
                  ]
                }
              }
            ]
          }
        }
      ],
      "subType": "inventory",
      "status": "approved",
      "type": "parent",
      "version": "v1.0.0"
    },
    {
      "id": "ea8792af-e555-4849-85d7-99cf6fc87c2b",
      "evaluationQuery": "",
      "kind": "hierarchical",
      "metadata": {
        "description": "A hierarchical inventory relationship in which the configuration of (parent) component is patched with the configuration of other (child) component. Eg: The configuration of the EnvoyFilter (parent) component is patched with the configuration as received from WASMFilter (child) component.",
        "styles": {
          "primaryColor": "",
          "svgColor": "",
          "svgWhite": ""
        },
        "isAnnotation": false
      },
      "model": {
        "id": "e633cca6-b6e1-65bf-a440-0d58915e75dd",
        "schemaVersion": "models.meshery.io/v1beta1",
        "version": "v1.0.0",
        "name": "kubernetes",
        "displayName": "Kubernetes",
        "status": "enabled",
        "registrant": {
          "id": "00000000-0000-0000-0000-000000000000",
          "name": "",
          "credential_id": "00000000-0000-0000-0000-000000000000",
          "type": "",
          "sub_type": "",
          "kind": "",
          "status": "",
          "user_id": "00000000-0000-0000-0000-000000000000",
          "created_at": "0001-01-01T00:00:00Z",
          "updated_at": "0001-01-01T00:00:00Z",
          "deleted_at": "0001-01-01T00:00:00Z"
        },
        "connection_id": "f9a29d70-c287-426c-a90c-2a96590c8083",
        "category": {
          "id": "9ca27d0d-66ce-42a9-8c85-6236563f2ddb",
          "name": "Orchestration \u0026 Management"
        },
        "subCategory": "Scheduling \u0026 Orchestration",
        "metadata": {
          "isAnnotation": false,
          "primaryColor": "#326CE5",
          "secondaryColor": "#7aa1f0",
          "shape": "circle",
          "styleOverrides": "",
          "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/kubernetes-color.svg",
          "svgComplete": "",
          "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/kubernetes-white.svg"
        },
        "model": {
          "version": "v1.32.0-alpha.3"
        },
        "components_count": 0,
        "relationships_count": 0,
        "components": null,
        "relationships": null
      },
      "schemaVersion": "relationships.meshery.io/v1alpha3",
      "selectors": [
        {
          "allow": {
            "from": [
              {
                "id": "3720888b-7413-4b6a-aeba-3ca605a457d2",
                "kind": "Container",
                "match": {},
                "match_strategy_matrix": null,
                "model": {
                  "id": "00000000-0000-0000-0000-000000000000",
                  "schemaVersion": "",
                  "version": "",
                  "name": "meshery-core",
                  "displayName": "",
                  "status": "",
                  "registrant": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": "",
                    "credential_id": "00000000-0000-0000-0000-000000000000",
                    "type": "",
                    "sub_type": "",
                    "kind": "github",
                    "status": "",
                    "user_id": "00000000-0000-0000-0000-000000000000",
                    "created_at": "0001-01-01T00:00:00Z",
                    "updated_at": "0001-01-01T00:00:00Z",
                    "deleted_at": "0001-01-01T00:00:00Z"
                  },
                  "connection_id": "00000000-0000-0000-0000-000000000000",
                  "category": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": ""
                  },
                  "subCategory": "",
                  "metadata": null,
                  "model": {
                    "version": ""
                  },
                  "components_count": 0,
                  "relationships_count": 0,
                  "components": null,
                  "relationships": null
                },
                "patch": {
                  "patchStrategy": "replace",
                  "mutatorRef": [
                    [
                      "configuration",
                      "spec",
                      "template",
                      "spec",
                      "containers",
                      "0"
                    ]
                  ],
                  "mutatedRef": [
                    [
                      "configuration",
                      "spec",
                      "template",
                      "spec",
                      "containers",
                      "0"
                    ]
                  ]
                }
              }
            ],
            "to": [
              {
                "id": "ad59bd7c-5594-4269-ba27-07579c5370f9",
                "kind": "Deployment",
                "match": {},
                "match_strategy_matrix": null,
                "model": {
                  "id": "00000000-0000-0000-0000-000000000000",
                  "schemaVersion": "",
                  "version": "",
                  "name": "kubernetes",
                  "displayName": "",
                  "status": "",
                  "registrant": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": "",
                    "credential_id": "00000000-0000-0000-0000-000000000000",
                    "type": "",
                    "sub_type": "",
                    "kind": "github",
                    "status": "",
                    "user_id": "00000000-0000-0000-0000-000000000000",
                    "created_at": "0001-01-01T00:00:00Z",
                    "updated_at": "0001-01-01T00:00:00Z",
                    "deleted_at": "0001-01-01T00:00:00Z"
                  },
                  "connection_id": "00000000-0000-0000-0000-000000000000",
                  "category": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": ""
                  },
                  "subCategory": "",
                  "metadata": null,
                  "model": {
                    "version": ""
                  },
                  "components_count": 0,
                  "relationships_count": 0,
                  "components": null,
                  "relationships": null
                },
                "patch": {
                  "patchStrategy": "replace",
                  "mutatorRef": [
                    [
                      "configuration",
                      "spec",
                      "template",
                      "spec",
                      "containers",
                      "0"
                    ]
                  ],
                  "mutatedRef": [
                    [
                      "configuration",
                      "spec",
                      "template",
                      "spec",
                      "containers",
                      "0"
                    ]
                  ]
                }
              }
            ]
          },
          "deny": {
            "from": null,
            "to": null
          }
        }
      ],
      "subType": "alias",
      "status": "approved",
      "type": "parent",
      "version": "v1.0.0"
    },
    {
      "id": "edb2ec10-44d0-4e2a-9832-d4ef5dc1c3b2",
      "evaluationQuery": "",
      "kind": "hierarchical",
      "metadata": {
        "description": "Namespace to namespaced components",
        "styles": {
          "primaryColor": "",
          "svgColor": "",
          "svgWhite": ""
        },
        "isAnnotation": false
      },
      "model": {
        "id": "e633cca6-b6e1-65bf-a440-0d58915e75dd",
        "schemaVersion": "models.meshery.io/v1beta1",
        "version": "v1.0.0",
        "name": "kubernetes",
        "displayName": "Kubernetes",
        "status": "enabled",
        "registrant": {
          "id": "00000000-0000-0000-0000-000000000000",
          "name": "",
          "credential_id": "00000000-0000-0000-0000-000000000000",
          "type": "",
          "sub_type": "",
          "kind": "",
          "status": "",
          "user_id": "00000000-0000-0000-0000-000000000000",
          "created_at": "0001-01-01T00:00:00Z",
          "updated_at": "0001-01-01T00:00:00Z",
          "deleted_at": "0001-01-01T00:00:00Z"
        },
        "connection_id": "f9a29d70-c287-426c-a90c-2a96590c8083",
        "category": {
          "id": "9ca27d0d-66ce-42a9-8c85-6236563f2ddb",
          "name": "Orchestration \u0026 Management"
        },
        "subCategory": "Scheduling \u0026 Orchestration",
        "metadata": {
          "isAnnotation": false,
          "primaryColor": "#326CE5",
          "secondaryColor": "#7aa1f0",
          "shape": "circle",
          "styleOverrides": "",
          "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/kubernetes-color.svg",
          "svgComplete": "",
          "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/kubernetes-white.svg"
        },
        "model": {
          "version": "v1.32.0-alpha.3"
        },
        "components_count": 0,
        "relationships_count": 0,
        "components": null,
        "relationships": null
      },
      "schemaVersion": "relationships.meshery.io/v1alpha3",
      "selectors": [
        {
          "allow": {
            "from": [
              {
                "id": "1052a840-34c0-49d0-abbb-8cb047bb7db7",
                "kind": "*",
                "match": {},
                "match_strategy_matrix": null,
                "model": {
                  "id": "00000000-0000-0000-0000-000000000000",
                  "schemaVersion": "",
                  "version": "",
                  "name": "*",
                  "displayName": "",
                  "status": "",
                  "registrant": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": "",
                    "credential_id": "00000000-0000-0000-0000-000000000000",
                    "type": "",
                    "sub_type": "",
                    "kind": "",
                    "status": "",
                    "user_id": "00000000-0000-0000-0000-000000000000",
                    "created_at": "0001-01-01T00:00:00Z",
                    "updated_at": "0001-01-01T00:00:00Z",
                    "deleted_at": "0001-01-01T00:00:00Z"
                  },
                  "connection_id": "00000000-0000-0000-0000-000000000000",
                  "category": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": ""
                  },
                  "subCategory": "",
                  "metadata": null,
                  "model": {
                    "version": ""
                  },
                  "components_count": 0,
                  "relationships_count": 0,
                  "components": null,
                  "relationships": null
                },
                "patch": {
                  "patchStrategy": "replace",
                  "mutatedRef": [
                    [
                      "configuration",
                      "metadata",
                      "namespace"
                    ]
                  ]
                }
              }
            ],
            "to": [
              {
                "id": "779771c4-bd19-4425-a27b-a75afd10b4b2",
                "kind": "Namespace",
                "match": {},
                "match_strategy_matrix": null,
                "model": {
                  "id": "00000000-0000-0000-0000-000000000000",
                  "schemaVersion": "",
                  "version": "",
                  "name": "kubernetes",
                  "displayName": "",
                  "status": "",
                  "registrant": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": "",
                    "credential_id": "00000000-0000-0000-0000-000000000000",
                    "type": "",
                    "sub_type": "",
                    "kind": "github",
                    "status": "",
                    "user_id": "00000000-0000-0000-0000-000000000000",
                    "created_at": "0001-01-01T00:00:00Z",
                    "updated_at": "0001-01-01T00:00:00Z",
                    "deleted_at": "0001-01-01T00:00:00Z"
                  },
                  "connection_id": "00000000-0000-0000-0000-000000000000",
                  "category": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": ""
                  },
                  "subCategory": "",
                  "metadata": null,
                  "model": {
                    "version": ""
                  },
                  "components_count": 0,
                  "relationships_count": 0,
                  "components": null,
                  "relationships": null
                },
                "patch": {
                  "patchStrategy": "replace",
                  "mutatorRef": [
                    [
                      "displayName"
                    ]
                  ]
                }
              }
            ]
          }
        }
      ],
      "subType": "inventory",
      "status": "approved",
      "type": "parent",
      "version": "v1.0.0"
    },
    {
      "id": "f3954c75-73dc-4379-b9d6-6a48e852bc17",
      "evaluationQuery": "",
      "kind": "edge",
      "metadata": {
        "description": "A relationship that represents a set of permissions",
        "styles": {
          "primaryColor": "",
          "svgColor": "",
          "svgWhite": ""
        },
        "isAnnotation": false
      },
      "model": {
        "id": "e633cca6-b6e1-65bf-a440-0d58915e75dd",
        "schemaVersion": "models.meshery.io/v1beta1",
        "version": "v1.0.0",
        "name": "kubernetes",
        "displayName": "Kubernetes",
        "status": "enabled",
        "registrant": {
          "id": "00000000-0000-0000-0000-000000000000",
          "name": "",
          "credential_id": "00000000-0000-0000-0000-000000000000",
          "type": "",
          "sub_type": "",
          "kind": "",
          "status": "",
          "user_id": "00000000-0000-0000-0000-000000000000",
          "created_at": "0001-01-01T00:00:00Z",
          "updated_at": "0001-01-01T00:00:00Z",
          "deleted_at": "0001-01-01T00:00:00Z"
        },
        "connection_id": "f9a29d70-c287-426c-a90c-2a96590c8083",
        "category": {
          "id": "9ca27d0d-66ce-42a9-8c85-6236563f2ddb",
          "name": "Orchestration \u0026 Management"
        },
        "subCategory": "Scheduling \u0026 Orchestration",
        "metadata": {
          "isAnnotation": false,
          "primaryColor": "#326CE5",
          "secondaryColor": "#7aa1f0",
          "shape": "circle",
          "styleOverrides": "",
          "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/kubernetes-color.svg",
          "svgComplete": "",
          "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/kubernetes-white.svg"
        },
        "model": {
          "version": "v1.32.0-alpha.3"
        },
        "components_count": 0,
        "relationships_count": 0,
        "components": null,
        "relationships": null
      },
      "schemaVersion": "relationships.meshery.io/v1alpha3",
      "selectors": [
        {
          "allow": {
            "from": [
              {
                "id": "34742334-fb5a-4e8d-93e2-49671d3f12e6",
                "kind": "ClusterRole",
                "match": {
                  "from": [
                    {
                      "id": "34742334-fb5a-4e8d-93e2-49671d3f12e6",
                      "kind": "self",
                      "mutatorRef": [
                        [
                          "component",
                          "kind"
                        ],
                        [
                          "displayName"
                        ]
                      ]
                    }
                  ],
                  "to": [
                    {
                      "id": "59d787d1-aa20-43f5-9a0d-5e99ec2c9375",
                      "kind": "ClusterRoleBinding",
                      "mutatedRef": [
                        [
                          "configuration",
                          "roleRef",
                          "kind"
                        ],
                        [
                          "configuration",
                          "roleRef",
                          "name"
                        ]
                      ]
                    }
                  ]
                },
                "match_strategy_matrix": null,
                "model": {
                  "id": "00000000-0000-0000-0000-000000000000",
                  "schemaVersion": "",
                  "version": "",
                  "name": "kubernetes",
                  "displayName": "",
                  "status": "",
                  "registrant": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": "",
                    "credential_id": "00000000-0000-0000-0000-000000000000",
                    "type": "",
                    "sub_type": "",
                    "kind": "github",
                    "status": "",
                    "user_id": "00000000-0000-0000-0000-000000000000",
                    "created_at": "0001-01-01T00:00:00Z",
                    "updated_at": "0001-01-01T00:00:00Z",
                    "deleted_at": "0001-01-01T00:00:00Z"
                  },
                  "connection_id": "00000000-0000-0000-0000-000000000000",
                  "category": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": ""
                  },
                  "subCategory": "",
                  "metadata": null,
                  "model": {
                    "version": ""
                  },
                  "components_count": 0,
                  "relationships_count": 0,
                  "components": null,
                  "relationships": null
                },
                "patch": null
              }
            ],
            "to": [
              {
                "id": "8020ae58-3287-429c-a6f0-4eaa7c9d182c",
                "kind": "ServiceAccount",
                "match": {
                  "from": [
                    {
                      "id": "59d787d1-aa20-43f5-9a0d-5e99ec2c9375",
                      "kind": "ClusterRoleBinding",
                      "mutatedRef": [
                        [
                          "configuration",
                          "subjects",
                          "_",
                          "name"
                        ]
                      ]
                    }
                  ],
                  "to": [
                    {
                      "id": "8020ae58-3287-429c-a6f0-4eaa7c9d182c",
                      "kind": "self",
                      "mutatorRef": [
                        [
                          "displayName"
                        ]
                      ]
                    }
                  ]
                },
                "match_strategy_matrix": null,
                "model": {
                  "id": "00000000-0000-0000-0000-000000000000",
                  "schemaVersion": "",
                  "version": "",
                  "name": "kubernetes",
                  "displayName": "",
                  "status": "",
                  "registrant": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": "",
                    "credential_id": "00000000-0000-0000-0000-000000000000",
                    "type": "",
                    "sub_type": "",
                    "kind": "github",
                    "status": "",
                    "user_id": "00000000-0000-0000-0000-000000000000",
                    "created_at": "0001-01-01T00:00:00Z",
                    "updated_at": "0001-01-01T00:00:00Z",
                    "deleted_at": "0001-01-01T00:00:00Z"
                  },
                  "connection_id": "00000000-0000-0000-0000-000000000000",
                  "category": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": ""
                  },
                  "subCategory": "",
                  "metadata": null,
                  "model": {
                    "version": ""
                  },
                  "components_count": 0,
                  "relationships_count": 0,
                  "components": null,
                  "relationships": null
                },
                "patch": null
              }
            ]
          }
        }
      ],
      "subType": "permission",
      "status": "approved",
      "type": "binding",
      "version": "v1.0.0"
    }
  ]
}