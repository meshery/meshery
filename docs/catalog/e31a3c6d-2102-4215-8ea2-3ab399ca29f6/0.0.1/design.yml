name: Dapr with  Kubernetes events
version: 0.0.4
services:
  NodeGroupInventoryWallet:
    annotations: {}
    apiVersion: core.meshery.io/v1alpha1
    dependsOn:
    - events-nodeapp-jfoem
    id: null
    isAnnotation: null
    labels: {}
    model: meshery-core
    name: NodeGroupInventoryWallet
    namespace: ""
    settings: {}
    traits:
      meshmap:
        edges: []
        fieldRefData: {}
        id: 1f0440b5-04db-482d-9e43-49c1c3ab2351
        label: NodeGroupInventoryWallet
        meshmodel-data:
          category:
            metadata: null
            name: Orchestration & Management
          components: null
          description: ""
          displayName: Meshery Core
          hostID: 26e64aa8-2d86-57bd-92b3-2a73160d27b4
          id: 3e2db384-d3af-5fac-8af2-684fc3c29446
          metadata:
            isAnnotation: false
            subCategory: App Definition and Development
            svgColor: ui/public/static/img/meshmodels/meshery-core/color/meshery-core-color.svg
            svgComplete: ""
            svgWhite: ui/public/static/img/meshmodels/meshery-core/color/meshery-core-color.svg
          model:
            version: 0.7.1
          name: meshery-core
          registrant:
            hostname: artifacthub
          relationships: null
          schemaVersion: core.meshery.io/v1beta1
          status: enabled
          subCategory: App Definition and Development
          version: v1.0.0
        meshmodel-metadata:
          capabilities: |-
            {
              "designer": {
                "pass-events-to": "parent",
                "edit": {
                  "config": false,
                  "copy": false,
                  "delete": false,
                  "duplicate": false,
                  "reset-styles": false,
                  "resolve": false,
                  "lock": false,
                  "shape": {
                    "convert-shape": false
                  },
                  "style": false
                },
                "label": {
                  "edit": false,
                  "show": false,
                  "sync-with-config-property": "none"
                }
              }
            }
          defaultData: '{"label":""}'
          genealogy: parent
          hasInvalidSchema: true
          isAnnotation: true
          primaryColor: '#00B39F'
          secondaryColor: '#00D3A9'
          shape: round-rectangle
          shapePolygonPoints: ""
          status: enabled
          styleOverrides:
            background-image: none
            background-opacity: 0.1
            border-style: dashed
            border-width: 0
            data:
              label: ""
            height: 30px
            width: 30px
            z-index: 8
          styles: '{"height":"30px","width":"30px", "background-image":"none","border-width":0,"border-style":"dashed","background-opacity":0.1}'
          subCategory: ""
          svgColor: ui/public/static/img/meshmodels/meshery-core/color/anchornode-color.svg
          svgComplete: ""
          svgWhite: ui/public/static/img/meshmodels/meshery-core/white/anchornode-white.svg
        parent: 298162df-c5a5-4675-a245-71bdde4cd108
        position:
          posX: -90
          posY: 90
        whiteboardData: {}
    type: NodeGroupInventoryWallet
    version: 0.7.1
  events-nodeapp-dgxue:
    annotations: {}
    apiVersion: v1
    dependsOn: []
    id: null
    isAnnotation: null
    labels:
      app: node
    model: kubernetes
    name: events-nodeapp
    namespace: kube-events
    settings:
      spec:
        ports:
        - port: 80
          protocol: TCP
          target Port: 3000
        selector:
          app: node
        type: LoadBalancer
    traits:
      meshmap:
        edges:
        - data:
            id: e7d2462d-15d9-4834-8b8f-62bd72ea8b55
            metadata:
              port: 80
              protocol: TCP
            source: 00cb90dd-f328-459c-8ef4-a41c754f18e6
            subType: Network
            target: 298162df-c5a5-4675-a245-71bdde4cd108
          style:
            control-point-distances: null
            control-point-weights: "0.5"
            curve-style: bezier
            haystack-radius: "0"
            line-color: rgb(153,153,153)
            line-style: dotted
            opacity: "1"
            segment-distances: 20px
            segment-weights: "0.5"
            target-arrow-shape: vee
            taxi-direction: auto
            taxi-turn: 50%
            taxi-turn-min-distance: 10px
            width: 1.5px
        fieldRefData: {}
        id: 00cb90dd-f328-459c-8ef4-a41c754f18e6
        meshmodel-metadata:
          capabilities: ""
          defaultData: ""
          genealogy: ""
          isAnnotation: false
          isCustomResource: false
          isModelAnnotation: "FALSE"
          isNamespaced: true
          logoURL: https://github.com/cncf/artwork/blob/master/projects/kubernetes/icon/white/kubernetes-icon-white.svg
          model: kubernetes
          modelDisplayName: Kubernetes
          primaryColor: '#326CE5'
          secondaryColor: '#7aa1f0'
          shape: round-triangle
          shapePolygonPoints: ""
          status: enabled
          styleOverrides:
            background-position-y: 4.5
            height: 20
            padding: 12
            width: 20
            x: 10px
            "y": 12px
            z-index: 6
          styles: '{"height":20,"width":20,"padding":12,"background-position-y":4.5,"x":"10px","y":"12px"}'
          subCategory: ""
          svgColor: ui/public/static/img/meshmodels/kubernetes/color/service-color.svg
          svgComplete: ""
          svgWhite: ui/public/static/img/meshmodels/kubernetes/white/service-white.svg
        position:
          posX: -30
          posY: 50
        whiteboardData:
          style: {}
    type: Service
    version: ""
  events-nodeapp-jfoem:
    annotations: {}
    apiVersion: apps/v1
    dependsOn: []
    id: null
    isAnnotation: null
    labels:
      app: node
    model: kubernetes
    name: events-nodeapp
    namespace: kube-events
    settings:
      spec:
        replicas: 1
        selector:
          match Labels:
            app: node
        template:
          metadata:
            annotations:
              dapr.io/app-id: events-nodeapp
              dapr.io/app-port: "3000"
              dapr.io/enabled: "true"
            labels:
              app: node
          spec:
            containers:
            - image: DOCKER_REPO/k8s-events-node:edge
              image Pull Policy: Always
              name: node
              ports:
              - container Port: 3000
    traits:
      meshmap:
        edges:
        - data:
            id: e7d2462d-15d9-4834-8b8f-62bd72ea8b55
            metadata:
              port: 80
              protocol: TCP
            source: 00cb90dd-f328-459c-8ef4-a41c754f18e6
            subType: Network
            target: 298162df-c5a5-4675-a245-71bdde4cd108
          style:
            control-point-distances: null
            control-point-weights: "0.5"
            curve-style: bezier
            haystack-radius: "0"
            line-color: rgb(153,153,153)
            line-style: dotted
            opacity: "1"
            segment-distances: 20px
            segment-weights: "0.5"
            target-arrow-shape: vee
            taxi-direction: auto
            taxi-turn: 50%
            taxi-turn-min-distance: 10px
            width: 1.5px
        fieldRefData: {}
        id: 298162df-c5a5-4675-a245-71bdde4cd108
        meshmodel-metadata:
          capabilities: |2-
             {
              "designer": {
                "edit": {
                  "shape": {
                    "convert-shape": false
                  }
                }
              }
            }
          defaultData: ""
          genealogy: parent
          isAnnotation: false
          isCustomResource: false
          isModelAnnotation: "FALSE"
          isNamespaced: true
          logoURL: Created by Meshery Authors
          model: kubernetes
          modelDisplayName: Kubernetes
          primaryColor: '#326CE5'
          secondaryColor: '#7aa1f0'
          shape: round-pentagon
          shapePolygonPoints: ""
          status: enabled
          styleOverrides:
            background-opacity: 0.5
            border-width: 2
            z-index: 7
          styles: '{"border-width":2,"background-opacity":0.5}'
          subCategory: ""
          svgColor: ui/public/static/img/meshmodels/kubernetes/color/deployment-color.svg
          svgComplete: ui/public/static/img/meshmodels/kubernetes/complete/deployment-complete.svg
          svgWhite: ui/public/static/img/meshmodels/kubernetes/white/deployment-white.svg
        position:
          posX: -90
          posY: 90
        whiteboardData:
          style: {}
    type: Deployment
    version: ""
  events-reader:
    annotations: {}
    apiVersion: rbac.authorization.k8s.io/v1
    dependsOn: []
    id: null
    isAnnotation: null
    labels: {}
    model: kubernetes
    name: events-reader
    namespace: kube-events
    settings:
      rules:
      - api Groups:
        - ""
        resources:
        - events
        verbs:
        - get
        - watch
        - list
    traits:
      meshmap:
        edges: []
        fieldRefData: {}
        id: 310d2149-582d-41f0-b050-c80865e4d582
        meshmodel-metadata:
          capabilities: ""
          defaultData: ""
          genealogy: ""
          isAnnotation: false
          isCustomResource: false
          isModelAnnotation: "FALSE"
          isNamespaced: true
          logoURL: https://github.com/cncf/artwork/blob/master/projects/kubernetes/icon/white/kubernetes-icon-white.svg
          model: kubernetes
          modelDisplayName: Kubernetes
          primaryColor: '#326CE5'
          secondaryColor: '#7aa1f0'
          shape: round-rectangle
          shapePolygonPoints: ""
          status: enabled
          styleOverrides: '{"height":"22px", "width":"22px", "x":"8.5", "y":"7.5","z-index":4}'
          styles: '{"height":"22px", "width":"22px", "x":"8.5", "y":"7.5","z-index":4}'
          subCategory: ""
          svgColor: ui/public/static/img/meshmodels/kubernetes/color/role-color.svg
          svgComplete: ""
          svgWhite: ui/public/static/img/meshmodels/kubernetes/white/role-white.svg
        position:
          posX: 130
          posY: 10
        whiteboardData:
          style: {}
    type: Role
    version: ""
  kube-events:
    annotations: {}
    apiVersion: dapr.io/v1alpha1
    dependsOn: []
    id: null
    isAnnotation: null
    labels: {}
    model: dapr
    name: kube-events
    namespace: kube-events
    settings:
      auth:
        secret Store: secretstores.kubernetes
      scopes: []
      spec:
        metadata:
        - name: namespace
          value: kube-events
        - name: resyncPreiodInSec
          value: "5"
        type: bindings.kubernetes
        version: v1
    traits:
      meshmap:
        edges: []
        fieldRefData: {}
        id: 6723b521-3bc5-4595-b928-0195054a1b18
        meshmodel-metadata:
          capabilities: ""
          defaultData: ""
          genealogy: ""
          isAnnotation: false
          isModelAnnotation: "FALSE"
          isNamespaced: true
          logoURL: https://github.com/cncf/artwork/blob/master/examples/incubating.md#dapr-logos
          model: dapr
          modelDisplayName: Dapr
          primaryColor: '#0d2192'
          secondaryColor: '#5266D7'
          shape: circle
          shapePolygonPoints: ""
          status: enabled
          styleOverrides: ""
          styles: ""
          subCategory: ""
          svgColor: ui/public/static/img/meshmodels/dapr/color/component-color.svg
          svgComplete: ""
          svgWhite: ui/public/static/img/meshmodels/dapr/white/component-white.svg
        position:
          posX: 130
          posY: 70
        whiteboardData:
          style: {}
    type: Component
    version: ""
  read-events:
    annotations: {}
    apiVersion: rbac.authorization.k8s.io/v1
    dependsOn: []
    id: null
    isAnnotation: null
    labels: {}
    model: kubernetes
    name: read-events
    namespace: kube-events
    settings:
      role Ref:
        api Group: ""
        kind: Role
        name: events-reader
      subjects:
      - kind: ServiceAccount
        name: default
        namespace: kube-events
    traits:
      meshmap:
        edges: []
        fieldRefData: {}
        id: 94da22aa-8162-46b6-9916-6e97448f8ee7
        meshmodel-metadata:
          capabilities: ""
          defaultData: ""
          genealogy: ""
          isAnnotation: false
          isCustomResource: false
          isModelAnnotation: "FALSE"
          isNamespaced: true
          logoURL: https://github.com/cncf/artwork/blob/master/projects/kubernetes/icon/white/kubernetes-icon-white.svg
          model: kubernetes
          modelDisplayName: Kubernetes
          primaryColor: '#326CE5'
          secondaryColor: '#7aa1f0'
          shape: round-rectangle
          shapePolygonPoints: ""
          status: enabled
          styleOverrides:
            height: 25px
            width: 25px
            x: "7"
            "y": "7"
            z-index: 5
          styles: '{"height":"25px","width":"25px","x":"7", "y":"7","z-index":4}'
          subCategory: ""
          svgColor: ui/public/static/img/meshmodels/kubernetes/color/rolebinding-color.svg
          svgComplete: ""
          svgWhite: ui/public/static/img/meshmodels/kubernetes/white/rolebinding-white.svg
        position:
          posX: 190
          posY: 10
        whiteboardData:
          style: {}
    type: RoleBinding
    version: ""
