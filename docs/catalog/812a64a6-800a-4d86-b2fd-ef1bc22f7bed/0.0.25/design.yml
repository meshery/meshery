{
  "id": "812a64a6-800a-4d86-b2fd-ef1bc22f7bed",
  "name": "Vald(Helm)-v1.7.17.tgz",
  "schemaVersion": "designs.meshery.io/v1beta1",
  "version": "0.0.25",
  "metadata": {
    "resolvedAliases": {
      "b7119d13-2206-4900-91cc-8b769c7e03d8": {
        "alias_component_id": "b7119d13-2206-4900-91cc-8b769c7e03d8",
        "immediate_parent_id": "513aa7c4-e2c0-4524-9db9-4910ac4870a1",
        "immediate_ref_field_path": [
          "configuration",
          "spec",
          "template",
          "spec",
          "containers",
          "0"
        ],
        "relationship_id": "937a108e-03d9-41a9-9943-1ba0a6380c09",
        "resolved_parent_id": "513aa7c4-e2c0-4524-9db9-4910ac4870a1",
        "resolved_ref_field_path": [
          "configuration",
          "spec",
          "template",
          "spec",
          "containers",
          "0"
        ]
      },
      "bc4a4512-def0-40a4-9906-bfbdede1ed84": {
        "alias_component_id": "bc4a4512-def0-40a4-9906-bfbdede1ed84",
        "immediate_parent_id": "0f81fe0a-a93b-474d-93c8-eda2d17a8adc",
        "immediate_ref_field_path": [
          "configuration",
          "spec",
          "template",
          "spec",
          "containers",
          "0"
        ],
        "relationship_id": "b9df4d53-819c-464e-8ed3-79dc6327b7b5",
        "resolved_parent_id": "0f81fe0a-a93b-474d-93c8-eda2d17a8adc",
        "resolved_ref_field_path": [
          "configuration",
          "spec",
          "template",
          "spec",
          "containers",
          "0"
        ]
      },
      "dc15a432-4634-4452-bdd3-edb73ba64b73": {
        "alias_component_id": "dc15a432-4634-4452-bdd3-edb73ba64b73",
        "immediate_parent_id": "914d1fe8-d216-46dc-a077-32bc4efc958f",
        "immediate_ref_field_path": [
          "configuration",
          "spec",
          "template",
          "spec",
          "containers",
          "0"
        ],
        "relationship_id": "9a07dfd2-e9dc-4003-b03f-9dc73b5ec795",
        "resolved_parent_id": "914d1fe8-d216-46dc-a077-32bc4efc958f",
        "resolved_ref_field_path": [
          "configuration",
          "spec",
          "template",
          "spec",
          "containers",
          "0"
        ]
      }
    }
  },
  "components": [
    {
      "id": "033074ca-fe0e-4ffc-833e-1c05e3d90600",
      "schemaVersion": "components.meshery.io/v1beta1",
      "version": "v1.0.0",
      "displayName": "discoverer",
      "description": "",
      "format": "",
      "model": {
        "id": "b3f5bc0d-30f7-607d-6c73-784ddde6cad8",
        "schemaVersion": "models.meshery.io/v1beta1",
        "version": "v1.0.0",
        "name": "kubernetes",
        "displayName": "Kubernetes",
        "status": "enabled",
        "registrant": {
          "id": "5bc80e3c-5d43-9eb4-d16c-78a2769247a6",
          "name": "Github",
          "credential_id": "00000000-0000-0000-0000-000000000000",
          "type": "registry",
          "sub_type": "",
          "kind": "github",
          "status": "registered",
          "user_id": "00000000-0000-0000-0000-000000000000",
          "created_at": "2025-09-30T16:42:57.107248085Z",
          "updated_at": "2025-09-30T16:42:57.107248085Z",
          "deleted_at": "0001-01-01T00:00:00Z",
          "schemaVersion": ""
        },
        "connection_id": "5bc80e3c-5d43-9eb4-d16c-78a2769247a6",
        "category": {
          "id": "9ca27d0d-66ce-42a9-8c85-6236563f2ddb",
          "name": "Orchestration \u0026 Management"
        },
        "subCategory": "Scheduling \u0026 Orchestration",
        "metadata": {
          "isAnnotation": false,
          "primaryColor": "#326CE5",
          "secondaryColor": "#7aa1f0",
          "shape": "circle",
          "styleOverrides": "",
          "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/kubernetes-color.svg",
          "svgComplete": "",
          "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/kubernetes-white.svg"
        },
        "model": {
          "version": "v1.32.0-alpha.3"
        },
        "components_count": 0,
        "relationships_count": 0,
        "components": null,
        "relationships": null
      },
      "styles": {
        "height": 22,
        "position": {
          "x": 1022.24609375,
          "y": 753.7548828125
        },
        "primaryColor": "#326CE5",
        "secondaryColor": "#7aa1f0",
        "shape": "round-rectangle",
        "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/clusterrole-color.svg",
        "svgComplete": "",
        "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/clusterrole-white.svg",
        "width": 22,
        "x": 8.5,
        "y": 7.5
      },
      "capabilities": [],
      "status": "enabled",
      "metadata": {
        "configurationUISchema": "",
        "genealogy": "",
        "instanceDetails": null,
        "isAnnotation": false,
        "isNamespaced": false,
        "published": false,
        "source_uri": "git://github.com/kubernetes/kubernetes/master/api/openapi-spec/v3"
      },
      "configuration": {
        "metadata": {
          "labels": {
            "app.kubernetes.io/component": "discoverer",
            "app.kubernetes.io/instance": "vald",
            "app.kubernetes.io/managed-by": "Helm",
            "app.kubernetes.io/name": "vald",
            "app.kubernetes.io/version": "v1.7.17",
            "helm.sh/chart": "vald-v1.7.17"
          },
          "name": "discoverer"
        },
        "rules": [
          {
            "apiGroups": [
              "apps"
            ],
            "resources": [
              "deployments",
              "replicasets"
            ],
            "verbs": [
              "get",
              "list",
              "watch"
            ]
          },
          {
            "apiGroups": [
              ""
            ],
            "resources": [
              "nodes",
              "nodes/proxy",
              "services",
              "endpoints",
              "pods"
            ],
            "verbs": [
              "get",
              "list",
              "watch"
            ]
          },
          {
            "apiGroups": [
              ""
            ],
            "resources": [
              "events"
            ],
            "verbs": [
              "create"
            ]
          },
          {
            "nonResourceURLs": [
              "/metrics"
            ],
            "verbs": [
              "get"
            ]
          },
          {
            "apiGroups": [
              "metrics.k8s.io"
            ],
            "resources": [
              "nodes",
              "pods"
            ],
            "verbs": [
              "get",
              "list"
            ]
          },
          {
            "apiGroups": [
              "batch"
            ],
            "resources": [
              "jobs",
              "cronjobs"
            ],
            "verbs": [
              "get",
              "list",
              "watch",
              "create"
            ]
          },
          {
            "apiGroups": [
              "coordination.k8s.io"
            ],
            "resources": [
              "leases"
            ],
            "verbs": [
              "get",
              "update",
              "create"
            ]
          }
        ]
      },
      "component": {
        "version": "rbac.authorization.k8s.io/v1",
        "kind": "ClusterRole",
        "schema": ""
      }
    },
    {
      "id": "2784a3f0-6f62-4814-98d2-438396269ccd",
      "schemaVersion": "components.meshery.io/v1beta1",
      "version": "v1.0.0",
      "displayName": "discoverer",
      "description": "",
      "format": "",
      "model": {
        "id": "b3f5bc0d-30f7-607d-6c73-784ddde6cad8",
        "schemaVersion": "models.meshery.io/v1beta1",
        "version": "v1.0.0",
        "name": "kubernetes",
        "displayName": "Kubernetes",
        "status": "enabled",
        "registrant": {
          "id": "5bc80e3c-5d43-9eb4-d16c-78a2769247a6",
          "name": "Github",
          "credential_id": "00000000-0000-0000-0000-000000000000",
          "type": "registry",
          "sub_type": "",
          "kind": "github",
          "status": "registered",
          "user_id": "00000000-0000-0000-0000-000000000000",
          "created_at": "2025-09-30T16:42:57.107248085Z",
          "updated_at": "2025-09-30T16:42:57.107248085Z",
          "deleted_at": "0001-01-01T00:00:00Z",
          "schemaVersion": ""
        },
        "connection_id": "5bc80e3c-5d43-9eb4-d16c-78a2769247a6",
        "category": {
          "id": "9ca27d0d-66ce-42a9-8c85-6236563f2ddb",
          "name": "Orchestration \u0026 Management"
        },
        "subCategory": "Scheduling \u0026 Orchestration",
        "metadata": {
          "isAnnotation": false,
          "primaryColor": "#326CE5",
          "secondaryColor": "#7aa1f0",
          "shape": "circle",
          "styleOverrides": "",
          "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/kubernetes-color.svg",
          "svgComplete": "",
          "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/kubernetes-white.svg"
        },
        "model": {
          "version": "v1.32.0-alpha.3"
        },
        "components_count": 0,
        "relationships_count": 0,
        "components": null,
        "relationships": null
      },
      "styles": {
        "height": 25,
        "position": {
          "x": 965.24609375,
          "y": 556.7548828125
        },
        "primaryColor": "#326CE5",
        "secondaryColor": "#7aa1f0",
        "shape": "round-rectangle",
        "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/clusterrolebinding-color.svg",
        "svgComplete": "",
        "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/clusterrolebinding-white.svg",
        "width": 25,
        "x": 7,
        "y": 7
      },
      "capabilities": [],
      "status": "enabled",
      "metadata": {
        "configurationUISchema": "",
        "genealogy": "",
        "instanceDetails": null,
        "isAnnotation": false,
        "isNamespaced": false,
        "published": false,
        "source_uri": "git://github.com/kubernetes/kubernetes/master/api/openapi-spec/v3"
      },
      "configuration": {
        "metadata": {
          "labels": {
            "app.kubernetes.io/component": "discoverer",
            "app.kubernetes.io/instance": "vald",
            "app.kubernetes.io/managed-by": "Helm",
            "app.kubernetes.io/name": "vald",
            "app.kubernetes.io/version": "v1.7.17",
            "helm.sh/chart": "vald-v1.7.17"
          },
          "name": "discoverer"
        },
        "roleRef": {
          "apiGroup": "rbac.authorization.k8s.io",
          "kind": "ClusterRole",
          "name": "discoverer"
        },
        "subjects": [
          {
            "kind": "ServiceAccount",
            "name": "vald",
            "namespace": "default"
          }
        ]
      },
      "component": {
        "version": "rbac.authorization.k8s.io/v1",
        "kind": "ClusterRoleBinding",
        "schema": ""
      }
    },
    {
      "id": "d2523e1d-6044-4dd0-8b41-36ad38df6956",
      "schemaVersion": "components.meshery.io/v1beta1",
      "version": "v1.0.0",
      "displayName": "vald-agent-config",
      "description": "",
      "format": "",
      "model": {
        "id": "b3f5bc0d-30f7-607d-6c73-784ddde6cad8",
        "schemaVersion": "models.meshery.io/v1beta1",
        "version": "v1.0.0",
        "name": "kubernetes",
        "displayName": "Kubernetes",
        "status": "enabled",
        "registrant": {
          "id": "5bc80e3c-5d43-9eb4-d16c-78a2769247a6",
          "name": "Github",
          "credential_id": "00000000-0000-0000-0000-000000000000",
          "type": "registry",
          "sub_type": "",
          "kind": "github",
          "status": "registered",
          "user_id": "00000000-0000-0000-0000-000000000000",
          "created_at": "2025-09-30T16:42:57.107248085Z",
          "updated_at": "2025-09-30T16:42:57.107248085Z",
          "deleted_at": "0001-01-01T00:00:00Z",
          "schemaVersion": ""
        },
        "connection_id": "5bc80e3c-5d43-9eb4-d16c-78a2769247a6",
        "category": {
          "id": "9ca27d0d-66ce-42a9-8c85-6236563f2ddb",
          "name": "Orchestration \u0026 Management"
        },
        "subCategory": "Scheduling \u0026 Orchestration",
        "metadata": {
          "isAnnotation": false,
          "primaryColor": "#326CE5",
          "secondaryColor": "#7aa1f0",
          "shape": "circle",
          "styleOverrides": "",
          "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/kubernetes-color.svg",
          "svgComplete": "",
          "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/kubernetes-white.svg"
        },
        "model": {
          "version": "v1.32.0-alpha.3"
        },
        "components_count": 0,
        "relationships_count": 0,
        "components": null,
        "relationships": null
      },
      "styles": {
        "position": {
          "x": 1184.24609375,
          "y": 427.7548828124999
        },
        "primaryColor": "#326CE5",
        "secondaryColor": "#7aa1f0",
        "shape": "bottom-round-rectangle",
        "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/configmap-color.svg",
        "svgComplete": "",
        "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/configmap-white.svg"
      },
      "capabilities": [],
      "status": "enabled",
      "metadata": {
        "configurationUISchema": "",
        "genealogy": "",
        "instanceDetails": null,
        "isAnnotation": false,
        "isNamespaced": true,
        "published": false,
        "source_uri": "git://github.com/kubernetes/kubernetes/master/api/openapi-spec/v3"
      },
      "configuration": {
        "data": {
          "config.yaml": "---\nversion: v0.0.0\ntime_zone: UTC\nlogging:\n  format: raw\n  level: debug\n  logger: glg\nserver_config:\n  servers:\n    - name: grpc\n      host: 0.0.0.0\n      port: 8081\n      grpc:\n        bidirectional_stream_concurrency: 20\n        connection_timeout: \"\"\n        enable_admin: true\n        enable_channelz: true\n        enable_reflection: true\n        header_table_size: 0\n        initial_conn_window_size: 2097152\n        initial_window_size: 1048576\n        interceptors:\n        - RecoverInterceptor\n        keepalive:\n          max_conn_age: \"\"\n          max_conn_age_grace: \"\"\n          max_conn_idle: \"\"\n          min_time: 10m\n          permit_without_stream: false\n          time: 3h\n          timeout: 60s\n        max_concurrent_streams: 0\n        max_header_list_size: 0\n        max_receive_message_size: 0\n        max_send_message_size: 0\n        num_stream_workers: 0\n        read_buffer_size: 0\n        shared_write_buffer: false\n        wait_for_handlers: true\n        write_buffer_size: 0\n      mode: GRPC\n      network: tcp\n      probe_wait_time: 3s\n      restart: true\n      socket_option:\n        ip_recover_destination_addr: false\n        ip_transparent: false\n        reuse_addr: true\n        reuse_port: true\n        tcp_cork: false\n        tcp_defer_accept: false\n        tcp_fast_open: false\n        tcp_no_delay: false\n        tcp_quick_ack: false\n      socket_path: \"\"\n  health_check_servers:\n    - name: liveness\n      host: 0.0.0.0\n      port: 3000\n      http:\n        handler_timeout: \"\"\n        http2:\n          enabled: false\n          handler_limit: 0\n          max_concurrent_streams: 0\n          max_decoder_header_table_size: 4096\n          max_encoder_header_table_size: 4096\n          max_read_frame_size: 0\n          max_upload_buffer_per_connection: 0\n          max_upload_buffer_per_stream: 0\n          permit_prohibited_cipher_suites: true\n        idle_timeout: \"\"\n        read_header_timeout: \"\"\n        read_timeout: \"\"\n        shutdown_duration: 5s\n        write_timeout: \"\"\n      mode: REST\n      network: tcp\n      probe_wait_time: 3s\n      restart: true\n      socket_option:\n        ip_recover_destination_addr: false\n        ip_transparent: false\n        reuse_addr: true\n        reuse_port: true\n        tcp_cork: false\n        tcp_defer_accept: false\n        tcp_fast_open: true\n        tcp_no_delay: true\n        tcp_quick_ack: true\n      socket_path: \"\"\n    - name: readiness\n      host: 0.0.0.0\n      port: 3001\n      http:\n        handler_timeout: \"\"\n        http2:\n          enabled: false\n          handler_limit: 0\n          max_concurrent_streams: 0\n          max_decoder_header_table_size: 4096\n          max_encoder_header_table_size: 4096\n          max_read_frame_size: 0\n          max_upload_buffer_per_connection: 0\n          max_upload_buffer_per_stream: 0\n          permit_prohibited_cipher_suites: true\n        idle_timeout: \"\"\n        read_header_timeout: \"\"\n        read_timeout: \"\"\n        shutdown_duration: 0s\n        write_timeout: \"\"\n      mode: REST\n      network: tcp\n      probe_wait_time: 3s\n      restart: true\n      socket_option:\n        ip_recover_destination_addr: false\n        ip_transparent: false\n        reuse_addr: true\n        reuse_port: true\n        tcp_cork: false\n        tcp_defer_accept: false\n        tcp_fast_open: true\n        tcp_no_delay: true\n        tcp_quick_ack: true\n      socket_path: \"\"\n  metrics_servers:\n  startup_strategy:\n    - liveness\n    - grpc\n    - readiness\n  shutdown_strategy:\n    - readiness\n    - grpc\n    - liveness\n  full_shutdown_duration: 600s\n  tls:\n    ca: /path/to/ca\n    cert: /path/to/cert\n    client_auth: None\n    enabled: false\n    insecure_skip_verify: false\n    key: /path/to/key\n    server_name: \"\"\nobservability:\n  enabled: false\n  otlp:\n    collector_endpoint: \"\"\n    trace_batch_timeout: \"1s\"\n    trace_export_timeout: \"1m\"\n    trace_max_export_batch_size: 1024\n    trace_max_queue_size: 256\n    metrics_export_interval: \"1s\"\n    metrics_export_timeout: \"1m\"\n    attribute:\n      namespace: \"_MY_POD_NAMESPACE_\"\n      pod_name: \"_MY_POD_NAME_\"\n      node_name: \"_MY_NODE_NAME_\"\n      service_name: \"vald-agent\"\n  metrics:\n    enable_cgo: true\n    enable_goroutine: true\n    enable_memory: true\n    enable_version_info: true\n    version_info_labels:\n    - vald_version\n    - server_name\n    - git_commit\n    - build_time\n    - go_version\n    - go_os\n    - go_arch\n    - algorithm_info\n  trace:\n    enabled: false\nngt:\n  auto_create_index_pool_size: 16\n  auto_index_check_duration: 30m\n  auto_index_duration_limit: 24h\n  auto_index_length: 100\n  auto_save_index_duration: 35m\n  broken_index_history_limit: 0\n  bulk_insert_chunk_size: 10\n  creation_edge_size: 50\n  default_epsilon: 0.05\n  default_pool_size: 16\n  default_radius: -1\n  dimension: 4096\n  distance_type: l2\n  enable_copy_on_write: false\n  enable_export_index_info_to_k8s: false\n  enable_in_memory_mode: true\n  enable_proactive_gc: false\n  enable_statistics: false\n  error_buffer_limit: 10\n  export_index_info_duration: 1m\n  index_path: \"\"\n  initial_delay_max_duration: 3m\n  kvsdb:\n    concurrency: 6\n  load_index_timeout_factor: 1ms\n  max_load_index_timeout: 10m\n  min_load_index_timeout: 3m\n  namespace: _MY_POD_NAMESPACE_\n  object_type: float\n  pod_name: _MY_POD_NAME_\n  search_edge_size: 50\n  vqueue:\n    delete_buffer_pool_size: 5000\n    insert_buffer_pool_size: 10000\n"
        },
        "metadata": {
          "labels": {
            "app.kubernetes.io/component": "agent",
            "app.kubernetes.io/instance": "vald",
            "app.kubernetes.io/managed-by": "Helm",
            "app.kubernetes.io/name": "vald",
            "app.kubernetes.io/version": "v1.7.17",
            "helm.sh/chart": "vald-v1.7.17"
          },
          "name": "vald-agent-config"
        }
      },
      "component": {
        "version": "v1",
        "kind": "ConfigMap",
        "schema": ""
      }
    },
    {
      "id": "27c961a4-9391-45ad-941d-a939d1c73b6c",
      "schemaVersion": "components.meshery.io/v1beta1",
      "version": "v1.0.0",
      "displayName": "vald-discoverer-config",
      "description": "",
      "format": "",
      "model": {
        "id": "b3f5bc0d-30f7-607d-6c73-784ddde6cad8",
        "schemaVersion": "models.meshery.io/v1beta1",
        "version": "v1.0.0",
        "name": "kubernetes",
        "displayName": "Kubernetes",
        "status": "enabled",
        "registrant": {
          "id": "5bc80e3c-5d43-9eb4-d16c-78a2769247a6",
          "name": "Github",
          "credential_id": "00000000-0000-0000-0000-000000000000",
          "type": "registry",
          "sub_type": "",
          "kind": "github",
          "status": "registered",
          "user_id": "00000000-0000-0000-0000-000000000000",
          "created_at": "2025-09-30T16:42:57.107248085Z",
          "updated_at": "2025-09-30T16:42:57.107248085Z",
          "deleted_at": "0001-01-01T00:00:00Z",
          "schemaVersion": ""
        },
        "connection_id": "5bc80e3c-5d43-9eb4-d16c-78a2769247a6",
        "category": {
          "id": "9ca27d0d-66ce-42a9-8c85-6236563f2ddb",
          "name": "Orchestration \u0026 Management"
        },
        "subCategory": "Scheduling \u0026 Orchestration",
        "metadata": {
          "isAnnotation": false,
          "primaryColor": "#326CE5",
          "secondaryColor": "#7aa1f0",
          "shape": "circle",
          "styleOverrides": "",
          "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/kubernetes-color.svg",
          "svgComplete": "",
          "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/kubernetes-white.svg"
        },
        "model": {
          "version": "v1.32.0-alpha.3"
        },
        "components_count": 0,
        "relationships_count": 0,
        "components": null,
        "relationships": null
      },
      "styles": {
        "position": {
          "x": 748.24609375,
          "y": 755.7548828125
        },
        "primaryColor": "#326CE5",
        "secondaryColor": "#7aa1f0",
        "shape": "bottom-round-rectangle",
        "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/configmap-color.svg",
        "svgComplete": "",
        "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/configmap-white.svg"
      },
      "capabilities": [],
      "status": "enabled",
      "metadata": {
        "configurationUISchema": "",
        "genealogy": "",
        "instanceDetails": null,
        "isAnnotation": false,
        "isNamespaced": true,
        "published": false,
        "source_uri": "git://github.com/kubernetes/kubernetes/master/api/openapi-spec/v3"
      },
      "configuration": {
        "data": {
          "config.yaml": "---\nversion: v0.0.0\ntime_zone: UTC\nlogging:\n  format: raw\n  level: debug\n  logger: glg\nserver_config:\n  servers:\n    - name: grpc\n      host: 0.0.0.0\n      port: 8081\n      grpc:\n        bidirectional_stream_concurrency: 20\n        connection_timeout: \"\"\n        enable_admin: true\n        enable_channelz: true\n        enable_reflection: true\n        header_table_size: 0\n        initial_conn_window_size: 2097152\n        initial_window_size: 1048576\n        interceptors:\n        - RecoverInterceptor\n        keepalive:\n          max_conn_age: \"\"\n          max_conn_age_grace: \"\"\n          max_conn_idle: \"\"\n          min_time: 10m\n          permit_without_stream: false\n          time: 3h\n          timeout: 60s\n        max_concurrent_streams: 0\n        max_header_list_size: 0\n        max_receive_message_size: 0\n        max_send_message_size: 0\n        num_stream_workers: 0\n        read_buffer_size: 0\n        shared_write_buffer: false\n        wait_for_handlers: true\n        write_buffer_size: 0\n      mode: GRPC\n      network: tcp\n      probe_wait_time: 3s\n      restart: true\n      socket_option:\n        ip_recover_destination_addr: false\n        ip_transparent: false\n        reuse_addr: true\n        reuse_port: true\n        tcp_cork: false\n        tcp_defer_accept: false\n        tcp_fast_open: false\n        tcp_no_delay: false\n        tcp_quick_ack: false\n      socket_path: \"\"\n  health_check_servers:\n    - name: liveness\n      host: 0.0.0.0\n      port: 3000\n      http:\n        handler_timeout: \"\"\n        http2:\n          enabled: false\n          handler_limit: 0\n          max_concurrent_streams: 0\n          max_decoder_header_table_size: 4096\n          max_encoder_header_table_size: 4096\n          max_read_frame_size: 0\n          max_upload_buffer_per_connection: 0\n          max_upload_buffer_per_stream: 0\n          permit_prohibited_cipher_suites: true\n        idle_timeout: \"\"\n        read_header_timeout: \"\"\n        read_timeout: \"\"\n        shutdown_duration: 5s\n        write_timeout: \"\"\n      mode: REST\n      network: tcp\n      probe_wait_time: 3s\n      restart: true\n      socket_option:\n        ip_recover_destination_addr: false\n        ip_transparent: false\n        reuse_addr: true\n        reuse_port: true\n        tcp_cork: false\n        tcp_defer_accept: false\n        tcp_fast_open: true\n        tcp_no_delay: true\n        tcp_quick_ack: true\n      socket_path: \"\"\n    - name: readiness\n      host: 0.0.0.0\n      port: 3001\n      http:\n        handler_timeout: \"\"\n        http2:\n          enabled: false\n          handler_limit: 0\n          max_concurrent_streams: 0\n          max_decoder_header_table_size: 4096\n          max_encoder_header_table_size: 4096\n          max_read_frame_size: 0\n          max_upload_buffer_per_connection: 0\n          max_upload_buffer_per_stream: 0\n          permit_prohibited_cipher_suites: true\n        idle_timeout: \"\"\n        read_header_timeout: \"\"\n        read_timeout: \"\"\n        shutdown_duration: 0s\n        write_timeout: \"\"\n      mode: REST\n      network: tcp\n      probe_wait_time: 3s\n      restart: true\n      socket_option:\n        ip_recover_destination_addr: false\n        ip_transparent: false\n        reuse_addr: true\n        reuse_port: true\n        tcp_cork: false\n        tcp_defer_accept: false\n        tcp_fast_open: true\n        tcp_no_delay: true\n        tcp_quick_ack: true\n      socket_path: \"\"\n  metrics_servers:\n  startup_strategy:\n    - liveness\n    - grpc\n    - readiness\n  shutdown_strategy:\n    - readiness\n    - grpc\n    - liveness\n  full_shutdown_duration: 600s\n  tls:\n    ca: /path/to/ca\n    cert: /path/to/cert\n    client_auth: None\n    enabled: false\n    insecure_skip_verify: false\n    key: /path/to/key\n    server_name: \"\"\nobservability:\n  enabled: false\n  otlp:\n    collector_endpoint: \"\"\n    trace_batch_timeout: \"1s\"\n    trace_export_timeout: \"1m\"\n    trace_max_export_batch_size: 1024\n    trace_max_queue_size: 256\n    metrics_export_interval: \"1s\"\n    metrics_export_timeout: \"1m\"\n    attribute:\n      namespace: \"_MY_POD_NAMESPACE_\"\n      pod_name: \"_MY_POD_NAME_\"\n      node_name: \"_MY_NODE_NAME_\"\n      service_name: \"vald-discoverer\"\n  metrics:\n    enable_cgo: true\n    enable_goroutine: true\n    enable_memory: true\n    enable_version_info: true\n    version_info_labels:\n    - vald_version\n    - server_name\n    - git_commit\n    - build_time\n    - go_version\n    - go_os\n    - go_arch\n    - algorithm_info\n  trace:\n    enabled: false\ndiscoverer:\n  name: \"\"\n  namespace: \"_MY_POD_NAMESPACE_\"\n  discovery_duration: 3s\n  selectors:\n      pod:\n        labels:\n          app.kubernetes.io/component: agent\n          app.kubernetes.io/instance: vald\n        fields:\n          status.phase: Running\n      node:\n        labels: {}\n        fields: {}\n      pod_metrics:\n        labels: {}\n        fields:\n          containers.name: vald-agent\n      node_metrics:\n        labels: {}\n        fields: {}\n      service:\n        labels: {}\n        fields: {}\n  net:\n    dialer:\n      dual_stack_enabled: false\n      keepalive: 10m\n      timeout: 30s\n    dns:\n      cache_enabled: true\n      cache_expiration: 24h\n      refresh_duration: 5m\n    network: tcp\n    socket_option:\n      ip_recover_destination_addr: false\n      ip_transparent: false\n      reuse_addr: true\n      reuse_port: true\n      tcp_cork: false\n      tcp_defer_accept: false\n      tcp_fast_open: false\n      tcp_no_delay: false\n      tcp_quick_ack: false\n    tls:\n      ca: /path/to/ca\n      cert: /path/to/cert\n      client_auth: None\n      enabled: false\n      insecure_skip_verify: false\n      key: /path/to/key\n      server_name: \"\"\n"
        },
        "metadata": {
          "labels": {
            "app.kubernetes.io/component": "discoverer",
            "app.kubernetes.io/instance": "vald",
            "app.kubernetes.io/managed-by": "Helm",
            "app.kubernetes.io/name": "vald",
            "app.kubernetes.io/version": "v1.7.17",
            "helm.sh/chart": "vald-v1.7.17"
          },
          "name": "vald-discoverer-config"
        }
      },
      "component": {
        "version": "v1",
        "kind": "ConfigMap",
        "schema": ""
      }
    },
    {
      "id": "d6185103-dc46-4cfb-ab93-397da1bbb6e3",
      "schemaVersion": "components.meshery.io/v1beta1",
      "version": "v1.0.0",
      "displayName": "vald-lb-gateway-config",
      "description": "",
      "format": "",
      "model": {
        "id": "b3f5bc0d-30f7-607d-6c73-784ddde6cad8",
        "schemaVersion": "models.meshery.io/v1beta1",
        "version": "v1.0.0",
        "name": "kubernetes",
        "displayName": "Kubernetes",
        "status": "enabled",
        "registrant": {
          "id": "5bc80e3c-5d43-9eb4-d16c-78a2769247a6",
          "name": "Github",
          "credential_id": "00000000-0000-0000-0000-000000000000",
          "type": "registry",
          "sub_type": "",
          "kind": "github",
          "status": "registered",
          "user_id": "00000000-0000-0000-0000-000000000000",
          "created_at": "2025-09-30T16:42:57.107248085Z",
          "updated_at": "2025-09-30T16:42:57.107248085Z",
          "deleted_at": "0001-01-01T00:00:00Z",
          "schemaVersion": ""
        },
        "connection_id": "5bc80e3c-5d43-9eb4-d16c-78a2769247a6",
        "category": {
          "id": "9ca27d0d-66ce-42a9-8c85-6236563f2ddb",
          "name": "Orchestration \u0026 Management"
        },
        "subCategory": "Scheduling \u0026 Orchestration",
        "metadata": {
          "isAnnotation": false,
          "primaryColor": "#326CE5",
          "secondaryColor": "#7aa1f0",
          "shape": "circle",
          "styleOverrides": "",
          "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/kubernetes-color.svg",
          "svgComplete": "",
          "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/kubernetes-white.svg"
        },
        "model": {
          "version": "v1.32.0-alpha.3"
        },
        "components_count": 0,
        "relationships_count": 0,
        "components": null,
        "relationships": null
      },
      "styles": {
        "position": {
          "x": 840.24609375,
          "y": 755.7548828125
        },
        "primaryColor": "#326CE5",
        "secondaryColor": "#7aa1f0",
        "shape": "bottom-round-rectangle",
        "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/configmap-color.svg",
        "svgComplete": "",
        "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/configmap-white.svg"
      },
      "capabilities": [],
      "status": "enabled",
      "metadata": {
        "configurationUISchema": "",
        "genealogy": "",
        "instanceDetails": null,
        "isAnnotation": false,
        "isNamespaced": true,
        "published": false,
        "source_uri": "git://github.com/kubernetes/kubernetes/master/api/openapi-spec/v3"
      },
      "configuration": {
        "data": {
          "config.yaml": "---\nversion: v0.0.0\ntime_zone: UTC\nlogging:\n  format: raw\n  level: debug\n  logger: glg\nserver_config:\n  servers:\n    - name: grpc\n      host: 0.0.0.0\n      port: 8081\n      grpc:\n        bidirectional_stream_concurrency: 20\n        connection_timeout: \"\"\n        enable_admin: true\n        enable_channelz: true\n        enable_reflection: true\n        header_table_size: 0\n        initial_conn_window_size: 2097152\n        initial_window_size: 1048576\n        interceptors:\n        - RecoverInterceptor\n        keepalive:\n          max_conn_age: \"\"\n          max_conn_age_grace: \"\"\n          max_conn_idle: \"\"\n          min_time: 10m\n          permit_without_stream: false\n          time: 3h\n          timeout: 60s\n        max_concurrent_streams: 0\n        max_header_list_size: 0\n        max_receive_message_size: 0\n        max_send_message_size: 0\n        num_stream_workers: 0\n        read_buffer_size: 0\n        shared_write_buffer: false\n        wait_for_handlers: true\n        write_buffer_size: 0\n      mode: GRPC\n      network: tcp\n      probe_wait_time: 3s\n      restart: true\n      socket_option:\n        ip_recover_destination_addr: false\n        ip_transparent: false\n        reuse_addr: true\n        reuse_port: true\n        tcp_cork: false\n        tcp_defer_accept: false\n        tcp_fast_open: false\n        tcp_no_delay: false\n        tcp_quick_ack: false\n      socket_path: \"\"\n  health_check_servers:\n    - name: liveness\n      host: 0.0.0.0\n      port: 3000\n      http:\n        handler_timeout: \"\"\n        http2:\n          enabled: false\n          handler_limit: 0\n          max_concurrent_streams: 0\n          max_decoder_header_table_size: 4096\n          max_encoder_header_table_size: 4096\n          max_read_frame_size: 0\n          max_upload_buffer_per_connection: 0\n          max_upload_buffer_per_stream: 0\n          permit_prohibited_cipher_suites: true\n        idle_timeout: \"\"\n        read_header_timeout: \"\"\n        read_timeout: \"\"\n        shutdown_duration: 5s\n        write_timeout: \"\"\n      mode: REST\n      network: tcp\n      probe_wait_time: 3s\n      restart: true\n      socket_option:\n        ip_recover_destination_addr: false\n        ip_transparent: false\n        reuse_addr: true\n        reuse_port: true\n        tcp_cork: false\n        tcp_defer_accept: false\n        tcp_fast_open: true\n        tcp_no_delay: true\n        tcp_quick_ack: true\n      socket_path: \"\"\n    - name: readiness\n      host: 0.0.0.0\n      port: 3001\n      http:\n        handler_timeout: \"\"\n        http2:\n          enabled: false\n          handler_limit: 0\n          max_concurrent_streams: 0\n          max_decoder_header_table_size: 4096\n          max_encoder_header_table_size: 4096\n          max_read_frame_size: 0\n          max_upload_buffer_per_connection: 0\n          max_upload_buffer_per_stream: 0\n          permit_prohibited_cipher_suites: true\n        idle_timeout: \"\"\n        read_header_timeout: \"\"\n        read_timeout: \"\"\n        shutdown_duration: 0s\n        write_timeout: \"\"\n      mode: REST\n      network: tcp\n      probe_wait_time: 3s\n      restart: true\n      socket_option:\n        ip_recover_destination_addr: false\n        ip_transparent: false\n        reuse_addr: true\n        reuse_port: true\n        tcp_cork: false\n        tcp_defer_accept: false\n        tcp_fast_open: true\n        tcp_no_delay: true\n        tcp_quick_ack: true\n      socket_path: \"\"\n  metrics_servers:\n  startup_strategy:\n    - liveness\n    - grpc\n    - readiness\n  shutdown_strategy:\n    - readiness\n    - grpc\n    - liveness\n  full_shutdown_duration: 600s\n  tls:\n    ca: /path/to/ca\n    cert: /path/to/cert\n    client_auth: None\n    enabled: false\n    insecure_skip_verify: false\n    key: /path/to/key\n    server_name: \"\"\nobservability:\n  enabled: false\n  otlp:\n    collector_endpoint: \"\"\n    trace_batch_timeout: \"1s\"\n    trace_export_timeout: \"1m\"\n    trace_max_export_batch_size: 1024\n    trace_max_queue_size: 256\n    metrics_export_interval: \"1s\"\n    metrics_export_timeout: \"1m\"\n    attribute:\n      namespace: \"_MY_POD_NAMESPACE_\"\n      pod_name: \"_MY_POD_NAME_\"\n      node_name: \"_MY_NODE_NAME_\"\n      service_name: \"vald-lb-gateway\"\n  metrics:\n    enable_cgo: true\n    enable_goroutine: true\n    enable_memory: true\n    enable_version_info: true\n    version_info_labels:\n    - vald_version\n    - server_name\n    - git_commit\n    - build_time\n    - go_version\n    - go_os\n    - go_arch\n    - algorithm_info\n  trace:\n    enabled: false\ngateway:\n  agent_port: 8081\n  agent_name: \"vald-agent\"\n  agent_dns: vald-agent.default.svc.cluster.local\n  agent_namespace: \"_MY_POD_NAMESPACE_\"\n  node_name: \"\"\n  index_replica: 3\n  read_replica_replicas: 1\n  discoverer:\n    duration: 200ms\n    client:\n      addrs:\n        - vald-discoverer.default.svc.cluster.local:8081\n      health_check_duration: \"1s\"\n      connection_pool:\n        enable_dns_resolver: true\n        enable_rebalance: true\n        old_conn_close_duration: 2m\n        rebalance_duration: 30m\n        size: 3\n      backoff:\n        backoff_factor: 1.1\n        backoff_time_limit: 5s\n        enable_error_log: true\n        initial_duration: 5ms\n        jitter_limit: 100ms\n        maximum_duration: 5s\n        retry_count: 100\n      circuit_breaker:\n        closed_error_rate: 0.7\n        closed_refresh_timeout: 10s\n        half_open_error_rate: 0.5\n        min_samples: 1000\n        open_timeout: 1s\n      call_option:\n        content_subtype: \"\"\n        max_recv_msg_size: 0\n        max_retry_rpc_buffer_size: 0\n        max_send_msg_size: 0\n        wait_for_ready: true\n      dial_option:\n        authority: \"\"\n        backoff_base_delay: 1s\n        backoff_jitter: 0.2\n        backoff_max_delay: 120s\n        backoff_multiplier: 1.6\n        disable_retry: false\n        enable_backoff: false\n        idle_timeout: 1h\n        initial_connection_window_size: 2097152\n        initial_window_size: 1048576\n        insecure: true\n        interceptors: []\n        keepalive:\n          permit_without_stream: false\n          time: \"\"\n          timeout: 30s\n        max_call_attempts: 0\n        max_header_list_size: 0\n        max_msg_size: 0\n        min_connection_timeout: 20s\n        net:\n          dialer:\n            dual_stack_enabled: true\n            keepalive: \"\"\n            timeout: \"\"\n          dns:\n            cache_enabled: true\n            cache_expiration: 1h\n            refresh_duration: 30m\n          network: tcp\n          socket_option:\n            ip_recover_destination_addr: false\n            ip_transparent: false\n            reuse_addr: true\n            reuse_port: true\n            tcp_cork: false\n            tcp_defer_accept: false\n            tcp_fast_open: false\n            tcp_no_delay: false\n            tcp_quick_ack: false\n          tls:\n            ca: /path/to/ca\n            cert: /path/to/cert\n            client_auth: None\n            enabled: false\n            insecure_skip_verify: false\n            key: /path/to/key\n            server_name: \"\"\n        read_buffer_size: 0\n        shared_write_buffer: false\n        timeout: \"\"\n        user_agent: Vald-gRPC\n        write_buffer_size: 0\n      tls:\n        ca: /path/to/ca\n        cert: /path/to/cert\n        client_auth: None\n        enabled: false\n        insecure_skip_verify: false\n        key: /path/to/key\n        server_name: \"\"\n    agent_client_options:\n      addrs: []\n      health_check_duration: \"1s\"\n      connection_pool:\n        enable_dns_resolver: true\n        enable_rebalance: true\n        old_conn_close_duration: 2m\n        rebalance_duration: 30m\n        size: 3\n      backoff:\n        backoff_factor: 1.1\n        backoff_time_limit: 5s\n        enable_error_log: true\n        initial_duration: 5ms\n        jitter_limit: 100ms\n        maximum_duration: 5s\n        retry_count: 100\n      circuit_breaker:\n        closed_error_rate: 0.7\n        closed_refresh_timeout: 10s\n        half_open_error_rate: 0.5\n        min_samples: 1000\n        open_timeout: 1s\n      call_option:\n        content_subtype: \"\"\n        max_recv_msg_size: 0\n        max_retry_rpc_buffer_size: 0\n        max_send_msg_size: 0\n        wait_for_ready: true\n      dial_option:\n        authority: \"\"\n        backoff_base_delay: 1s\n        backoff_jitter: 0.2\n        backoff_max_delay: 120s\n        backoff_multiplier: 1.6\n        disable_retry: false\n        enable_backoff: false\n        idle_timeout: 1h\n        initial_connection_window_size: 2097152\n        initial_window_size: 1048576\n        insecure: true\n        interceptors: []\n        keepalive:\n          permit_without_stream: false\n          time: \"\"\n          timeout: 30s\n        max_call_attempts: 0\n        max_header_list_size: 0\n        max_msg_size: 0\n        min_connection_timeout: 20s\n        net:\n          dialer:\n            dual_stack_enabled: true\n            keepalive: \"\"\n            timeout: \"\"\n          dns:\n            cache_enabled: true\n            cache_expiration: 1h\n            refresh_duration: 30m\n          network: tcp\n          socket_option:\n            ip_recover_destination_addr: false\n            ip_transparent: false\n            reuse_addr: true\n            reuse_port: true\n            tcp_cork: false\n            tcp_defer_accept: false\n            tcp_fast_open: false\n            tcp_no_delay: false\n            tcp_quick_ack: false\n          tls:\n            ca: /path/to/ca\n            cert: /path/to/cert\n            client_auth: None\n            enabled: false\n            insecure_skip_verify: false\n            key: /path/to/key\n            server_name: \"\"\n        read_buffer_size: 0\n        shared_write_buffer: false\n        timeout: \"\"\n        user_agent: Vald-gRPC\n        write_buffer_size: 0\n      tls:\n        ca: /path/to/ca\n        cert: /path/to/cert\n        client_auth: None\n        enabled: false\n        insecure_skip_verify: false\n        key: /path/to/key\n        server_name: \"\"\n"
        },
        "metadata": {
          "labels": {
            "app.kubernetes.io/component": "gateway-lb",
            "app.kubernetes.io/instance": "vald",
            "app.kubernetes.io/managed-by": "Helm",
            "app.kubernetes.io/name": "vald",
            "app.kubernetes.io/version": "v1.7.17",
            "helm.sh/chart": "vald-v1.7.17"
          },
          "name": "vald-lb-gateway-config"
        }
      },
      "component": {
        "version": "v1",
        "kind": "ConfigMap",
        "schema": ""
      }
    },
    {
      "id": "1f9d2cd1-12c8-4be1-a153-f6dfcd864c0c",
      "schemaVersion": "components.meshery.io/v1beta1",
      "version": "v1.0.0",
      "displayName": "vald-manager-index-config",
      "description": "",
      "format": "",
      "model": {
        "id": "b3f5bc0d-30f7-607d-6c73-784ddde6cad8",
        "schemaVersion": "models.meshery.io/v1beta1",
        "version": "v1.0.0",
        "name": "kubernetes",
        "displayName": "Kubernetes",
        "status": "enabled",
        "registrant": {
          "id": "5bc80e3c-5d43-9eb4-d16c-78a2769247a6",
          "name": "Github",
          "credential_id": "00000000-0000-0000-0000-000000000000",
          "type": "registry",
          "sub_type": "",
          "kind": "github",
          "status": "registered",
          "user_id": "00000000-0000-0000-0000-000000000000",
          "created_at": "2025-09-30T16:42:57.107248085Z",
          "updated_at": "2025-09-30T16:42:57.107248085Z",
          "deleted_at": "0001-01-01T00:00:00Z",
          "schemaVersion": ""
        },
        "connection_id": "5bc80e3c-5d43-9eb4-d16c-78a2769247a6",
        "category": {
          "id": "9ca27d0d-66ce-42a9-8c85-6236563f2ddb",
          "name": "Orchestration \u0026 Management"
        },
        "subCategory": "Scheduling \u0026 Orchestration",
        "metadata": {
          "isAnnotation": false,
          "primaryColor": "#326CE5",
          "secondaryColor": "#7aa1f0",
          "shape": "circle",
          "styleOverrides": "",
          "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/kubernetes-color.svg",
          "svgComplete": "",
          "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/kubernetes-white.svg"
        },
        "model": {
          "version": "v1.32.0-alpha.3"
        },
        "components_count": 0,
        "relationships_count": 0,
        "components": null,
        "relationships": null
      },
      "styles": {
        "position": {
          "x": 932.24609375,
          "y": 755.7548828125
        },
        "primaryColor": "#326CE5",
        "secondaryColor": "#7aa1f0",
        "shape": "bottom-round-rectangle",
        "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/configmap-color.svg",
        "svgComplete": "",
        "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/configmap-white.svg"
      },
      "capabilities": [],
      "status": "enabled",
      "metadata": {
        "configurationUISchema": "",
        "genealogy": "",
        "instanceDetails": null,
        "isAnnotation": false,
        "isNamespaced": true,
        "published": false,
        "source_uri": "git://github.com/kubernetes/kubernetes/master/api/openapi-spec/v3"
      },
      "configuration": {
        "data": {
          "config.yaml": "---\nversion: v0.0.0\ntime_zone: UTC\nlogging:\n  format: raw\n  level: debug\n  logger: glg\nserver_config:\n  servers:\n    - name: grpc\n      host: 0.0.0.0\n      port: 8081\n      grpc:\n        bidirectional_stream_concurrency: 20\n        connection_timeout: \"\"\n        enable_admin: true\n        enable_channelz: true\n        enable_reflection: true\n        header_table_size: 0\n        initial_conn_window_size: 2097152\n        initial_window_size: 1048576\n        interceptors:\n        - RecoverInterceptor\n        keepalive:\n          max_conn_age: \"\"\n          max_conn_age_grace: \"\"\n          max_conn_idle: \"\"\n          min_time: 10m\n          permit_without_stream: false\n          time: 3h\n          timeout: 60s\n        max_concurrent_streams: 0\n        max_header_list_size: 0\n        max_receive_message_size: 0\n        max_send_message_size: 0\n        num_stream_workers: 0\n        read_buffer_size: 0\n        shared_write_buffer: false\n        wait_for_handlers: true\n        write_buffer_size: 0\n      mode: GRPC\n      network: tcp\n      probe_wait_time: 3s\n      restart: true\n      socket_option:\n        ip_recover_destination_addr: false\n        ip_transparent: false\n        reuse_addr: true\n        reuse_port: true\n        tcp_cork: false\n        tcp_defer_accept: false\n        tcp_fast_open: false\n        tcp_no_delay: false\n        tcp_quick_ack: false\n      socket_path: \"\"\n  health_check_servers:\n    - name: liveness\n      host: 0.0.0.0\n      port: 3000\n      http:\n        handler_timeout: \"\"\n        http2:\n          enabled: false\n          handler_limit: 0\n          max_concurrent_streams: 0\n          max_decoder_header_table_size: 4096\n          max_encoder_header_table_size: 4096\n          max_read_frame_size: 0\n          max_upload_buffer_per_connection: 0\n          max_upload_buffer_per_stream: 0\n          permit_prohibited_cipher_suites: true\n        idle_timeout: \"\"\n        read_header_timeout: \"\"\n        read_timeout: \"\"\n        shutdown_duration: 5s\n        write_timeout: \"\"\n      mode: REST\n      network: tcp\n      probe_wait_time: 3s\n      restart: true\n      socket_option:\n        ip_recover_destination_addr: false\n        ip_transparent: false\n        reuse_addr: true\n        reuse_port: true\n        tcp_cork: false\n        tcp_defer_accept: false\n        tcp_fast_open: true\n        tcp_no_delay: true\n        tcp_quick_ack: true\n      socket_path: \"\"\n    - name: readiness\n      host: 0.0.0.0\n      port: 3001\n      http:\n        handler_timeout: \"\"\n        http2:\n          enabled: false\n          handler_limit: 0\n          max_concurrent_streams: 0\n          max_decoder_header_table_size: 4096\n          max_encoder_header_table_size: 4096\n          max_read_frame_size: 0\n          max_upload_buffer_per_connection: 0\n          max_upload_buffer_per_stream: 0\n          permit_prohibited_cipher_suites: true\n        idle_timeout: \"\"\n        read_header_timeout: \"\"\n        read_timeout: \"\"\n        shutdown_duration: 0s\n        write_timeout: \"\"\n      mode: REST\n      network: tcp\n      probe_wait_time: 3s\n      restart: true\n      socket_option:\n        ip_recover_destination_addr: false\n        ip_transparent: false\n        reuse_addr: true\n        reuse_port: true\n        tcp_cork: false\n        tcp_defer_accept: false\n        tcp_fast_open: true\n        tcp_no_delay: true\n        tcp_quick_ack: true\n      socket_path: \"\"\n  metrics_servers:\n  startup_strategy:\n    - liveness\n    - grpc\n    - readiness\n  shutdown_strategy:\n    - readiness\n    - grpc\n    - liveness\n  full_shutdown_duration: 600s\n  tls:\n    ca: /path/to/ca\n    cert: /path/to/cert\n    client_auth: None\n    enabled: false\n    insecure_skip_verify: false\n    key: /path/to/key\n    server_name: \"\"\nobservability:\n  enabled: false\n  otlp:\n    collector_endpoint: \"\"\n    trace_batch_timeout: \"1s\"\n    trace_export_timeout: \"1m\"\n    trace_max_export_batch_size: 1024\n    trace_max_queue_size: 256\n    metrics_export_interval: \"1s\"\n    metrics_export_timeout: \"1m\"\n    attribute:\n      namespace: \"_MY_POD_NAMESPACE_\"\n      pod_name: \"_MY_POD_NAME_\"\n      node_name: \"_MY_NODE_NAME_\"\n      service_name: \"vald-manager-index\"\n  metrics:\n    enable_cgo: true\n    enable_goroutine: true\n    enable_memory: true\n    enable_version_info: true\n    version_info_labels:\n    - vald_version\n    - server_name\n    - git_commit\n    - build_time\n    - go_version\n    - go_os\n    - go_arch\n    - algorithm_info\n  trace:\n    enabled: false\nindexer:\n  agent_port: 8081\n  agent_name: \"vald-agent\"\n  agent_dns: vald-agent.default.svc.cluster.local\n  agent_namespace: \"_MY_POD_NAMESPACE_\"\n  node_name: \"\"\n  discoverer:\n    duration: 500ms\n    client:\n      addrs:\n        - vald-discoverer.default.svc.cluster.local:8081\n      health_check_duration: \"1s\"\n      connection_pool:\n        enable_dns_resolver: true\n        enable_rebalance: true\n        old_conn_close_duration: 2m\n        rebalance_duration: 30m\n        size: 3\n      backoff:\n        backoff_factor: 1.1\n        backoff_time_limit: 5s\n        enable_error_log: true\n        initial_duration: 5ms\n        jitter_limit: 100ms\n        maximum_duration: 5s\n        retry_count: 100\n      circuit_breaker:\n        closed_error_rate: 0.7\n        closed_refresh_timeout: 10s\n        half_open_error_rate: 0.5\n        min_samples: 1000\n        open_timeout: 1s\n      call_option:\n        content_subtype: \"\"\n        max_recv_msg_size: 0\n        max_retry_rpc_buffer_size: 0\n        max_send_msg_size: 0\n        wait_for_ready: true\n      dial_option:\n        authority: \"\"\n        backoff_base_delay: 1s\n        backoff_jitter: 0.2\n        backoff_max_delay: 120s\n        backoff_multiplier: 1.6\n        disable_retry: false\n        enable_backoff: false\n        idle_timeout: 1h\n        initial_connection_window_size: 2097152\n        initial_window_size: 1048576\n        insecure: true\n        interceptors: []\n        keepalive:\n          permit_without_stream: false\n          time: \"\"\n          timeout: 30s\n        max_call_attempts: 0\n        max_header_list_size: 0\n        max_msg_size: 0\n        min_connection_timeout: 20s\n        net:\n          dialer:\n            dual_stack_enabled: true\n            keepalive: \"\"\n            timeout: \"\"\n          dns:\n            cache_enabled: true\n            cache_expiration: 1h\n            refresh_duration: 30m\n          network: tcp\n          socket_option:\n            ip_recover_destination_addr: false\n            ip_transparent: false\n            reuse_addr: true\n            reuse_port: true\n            tcp_cork: false\n            tcp_defer_accept: false\n            tcp_fast_open: false\n            tcp_no_delay: false\n            tcp_quick_ack: false\n          tls:\n            ca: /path/to/ca\n            cert: /path/to/cert\n            client_auth: None\n            enabled: false\n            insecure_skip_verify: false\n            key: /path/to/key\n            server_name: \"\"\n        read_buffer_size: 0\n        shared_write_buffer: false\n        timeout: \"\"\n        user_agent: Vald-gRPC\n        write_buffer_size: 0\n      tls:\n        ca: /path/to/ca\n        cert: /path/to/cert\n        client_auth: None\n        enabled: false\n        insecure_skip_verify: false\n        key: /path/to/key\n        server_name: \"\"\n    agent_client_options:\n      addrs: []\n      health_check_duration: \"1s\"\n      connection_pool:\n        enable_dns_resolver: true\n        enable_rebalance: true\n        old_conn_close_duration: 2m\n        rebalance_duration: 30m\n        size: 3\n      backoff:\n        backoff_factor: 1.1\n        backoff_time_limit: 5s\n        enable_error_log: true\n        initial_duration: 5ms\n        jitter_limit: 100ms\n        maximum_duration: 5s\n        retry_count: 100\n      circuit_breaker:\n        closed_error_rate: 0.7\n        closed_refresh_timeout: 10s\n        half_open_error_rate: 0.5\n        min_samples: 1000\n        open_timeout: 1s\n      call_option:\n        content_subtype: \"\"\n        max_recv_msg_size: 0\n        max_retry_rpc_buffer_size: 0\n        max_send_msg_size: 0\n        wait_for_ready: true\n      dial_option:\n        write_buffer_size: 0\n        read_buffer_size: 0\n        initial_window_size: 1.048576e+06\n        initial_connection_window_size: 2.097152e+06\n        max_msg_size: 0\n        backoff_max_delay: \"120s\"\n        backoff_base_delay: \"1s\"\n        backoff_multiplier: 1.6\n        backoff_jitter: 0.2\n        min_connection_timeout: \"20s\"\n        enable_backoff: false\n        insecure: true\n        timeout: \"\"\n        interceptors: []\n        net:\n          dns:\n            cache_enabled: true\n            cache_expiration: 1h\n            refresh_duration: 30m\n          dialer:\n            timeout: \"\"\n            keepalive: \"15m\"\n            dual_stack_enabled: true\n          tls:\n            ca: /path/to/ca\n            cert: /path/to/cert\n            client_auth: None\n            enabled: false\n            insecure_skip_verify: false\n            key: /path/to/key\n            server_name: \"\"\n          socket_option:\n            ip_recover_destination_addr: false\n            ip_transparent: false\n            reuse_addr: true\n            reuse_port: true\n            tcp_cork: false\n            tcp_defer_accept: false\n            tcp_fast_open: false\n            tcp_no_delay: false\n            tcp_quick_ack: false\n        keepalive:\n          permit_without_stream: false\n          time: \"\"\n          timeout: 30s\n      tls:\n        ca: /path/to/ca\n        cert: /path/to/cert\n        client_auth: None\n        enabled: false\n        insecure_skip_verify: false\n        key: /path/to/key\n        server_name: \"\"\n  concurrency: 1\n  auto_index_duration_limit: 30m\n  auto_index_check_duration: 1m\n  auto_save_index_duration_limit: 3h\n  auto_save_index_wait_duration: 10m\n  auto_index_length: 100\n  creation_pool_size: 16\n"
        },
        "metadata": {
          "labels": {
            "app.kubernetes.io/component": "manager-index",
            "app.kubernetes.io/instance": "vald",
            "app.kubernetes.io/managed-by": "Helm",
            "app.kubernetes.io/name": "vald",
            "app.kubernetes.io/version": "v1.7.17",
            "helm.sh/chart": "vald-v1.7.17"
          },
          "name": "vald-manager-index-config"
        }
      },
      "component": {
        "version": "v1",
        "kind": "ConfigMap",
        "schema": ""
      }
    },
    {
      "id": "b7119d13-2206-4900-91cc-8b769c7e03d8",
      "schemaVersion": "components.meshery.io/v1beta1",
      "version": "v1.0.0",
      "displayName": "containers.0",
      "description": "",
      "format": "JSON",
      "model": {
        "id": "6b49e0cc-6d83-f917-b2bd-30b69792bb20",
        "schemaVersion": "models.meshery.io/v1beta1",
        "version": "v1.0.0",
        "name": "meshery-core",
        "displayName": "Meshery Core",
        "status": "enabled",
        "registrant": {
          "id": "13df38ce-edc0-8c01-ed9f-0414912a43fd",
          "name": "meshery",
          "type": "registry",
          "sub_type": "",
          "kind": "meshery",
          "status": "registered",
          "created_at": "2025-09-30T16:42:54.564710042Z",
          "updated_at": "2025-09-30T16:42:54.564710042Z",
          "deleted_at": null,
          "schemaVersion": ""
        },
        "connection_id": "13df38ce-edc0-8c01-ed9f-0414912a43fd",
        "category": {
          "id": "9ca27d0d-66ce-42a9-8c85-6236563f2ddb",
          "name": "Orchestration \u0026 Management"
        },
        "subCategory": "Application Definition \u0026 Image Build",
        "metadata": {
          "isAnnotation": false,
          "primaryColor": "#00B39F",
          "secondaryColor": "#00D3A9",
          "shape": "circle",
          "styleOverrides": "",
          "svgColor": "ui/public/static/img/meshmodels/meshery-core/color/meshery-core-color.svg",
          "svgComplete": "",
          "svgWhite": "ui/public/static/img/meshmodels/meshery-core/white/meshery-core-white.svg"
        },
        "model": {
          "version": "0.7.2"
        },
        "components_count": 0,
        "relationships_count": 0,
        "components": null,
        "relationships": null
      },
      "styles": {
        "primaryColor": "#326CE5",
        "secondaryColor": "#00D3A9",
        "shape": "circle",
        "svgColor": "ui/public/static/img/meshmodels/meshery-core/color/container-color.svg",
        "svgComplete": "",
        "svgWhite": "ui/public/static/img/meshmodels/meshery-core/white/container-white.svg"
      },
      "capabilities": [],
      "status": "enabled",
      "metadata": {
        "configurationUISchema": "",
        "genealogy": "",
        "hasInvalidSchema": true,
        "instanceDetails": null,
        "isAnnotation": true,
        "isNamespaced": false,
        "published": false
      },
      "configuration": {},
      "component": {
        "version": "core.meshery.io/v1alpha1",
        "kind": "Container",
        "schema": ""
      }
    },
    {
      "id": "bc4a4512-def0-40a4-9906-bfbdede1ed84",
      "schemaVersion": "components.meshery.io/v1beta1",
      "version": "v1.0.0",
      "displayName": "containers.0",
      "description": "",
      "format": "JSON",
      "model": {
        "id": "6b49e0cc-6d83-f917-b2bd-30b69792bb20",
        "schemaVersion": "models.meshery.io/v1beta1",
        "version": "v1.0.0",
        "name": "meshery-core",
        "displayName": "Meshery Core",
        "status": "enabled",
        "registrant": {
          "id": "13df38ce-edc0-8c01-ed9f-0414912a43fd",
          "name": "meshery",
          "type": "registry",
          "sub_type": "",
          "kind": "meshery",
          "status": "registered",
          "created_at": "2025-09-30T16:42:54.564710042Z",
          "updated_at": "2025-09-30T16:42:54.564710042Z",
          "deleted_at": null,
          "schemaVersion": ""
        },
        "connection_id": "13df38ce-edc0-8c01-ed9f-0414912a43fd",
        "category": {
          "id": "9ca27d0d-66ce-42a9-8c85-6236563f2ddb",
          "name": "Orchestration \u0026 Management"
        },
        "subCategory": "Application Definition \u0026 Image Build",
        "metadata": {
          "isAnnotation": false,
          "primaryColor": "#00B39F",
          "secondaryColor": "#00D3A9",
          "shape": "circle",
          "styleOverrides": "",
          "svgColor": "ui/public/static/img/meshmodels/meshery-core/color/meshery-core-color.svg",
          "svgComplete": "",
          "svgWhite": "ui/public/static/img/meshmodels/meshery-core/white/meshery-core-white.svg"
        },
        "model": {
          "version": "0.7.2"
        },
        "components_count": 0,
        "relationships_count": 0,
        "components": null,
        "relationships": null
      },
      "styles": {
        "position": {
          "x": 894.24609375,
          "y": 339.7548828124999
        },
        "primaryColor": "#326CE5",
        "secondaryColor": "#00D3A9",
        "shape": "circle",
        "svgColor": "ui/public/static/img/meshmodels/meshery-core/color/container-color.svg",
        "svgComplete": "",
        "svgWhite": "ui/public/static/img/meshmodels/meshery-core/white/container-white.svg"
      },
      "capabilities": [],
      "status": "enabled",
      "metadata": {
        "configurationUISchema": "",
        "genealogy": "",
        "hasInvalidSchema": true,
        "instanceDetails": null,
        "isAnnotation": true,
        "isNamespaced": false,
        "published": false
      },
      "configuration": {},
      "component": {
        "version": "core.meshery.io/v1alpha1",
        "kind": "Container",
        "schema": ""
      }
    },
    {
      "id": "dc15a432-4634-4452-bdd3-edb73ba64b73",
      "schemaVersion": "components.meshery.io/v1beta1",
      "version": "v1.0.0",
      "displayName": "containers.0",
      "description": "",
      "format": "JSON",
      "model": {
        "id": "6b49e0cc-6d83-f917-b2bd-30b69792bb20",
        "schemaVersion": "models.meshery.io/v1beta1",
        "version": "v1.0.0",
        "name": "meshery-core",
        "displayName": "Meshery Core",
        "status": "enabled",
        "registrant": {
          "id": "13df38ce-edc0-8c01-ed9f-0414912a43fd",
          "name": "meshery",
          "type": "registry",
          "sub_type": "",
          "kind": "meshery",
          "status": "registered",
          "created_at": "2025-09-30T16:42:54.564710042Z",
          "updated_at": "2025-09-30T16:42:54.564710042Z",
          "deleted_at": null,
          "schemaVersion": ""
        },
        "connection_id": "13df38ce-edc0-8c01-ed9f-0414912a43fd",
        "category": {
          "id": "9ca27d0d-66ce-42a9-8c85-6236563f2ddb",
          "name": "Orchestration \u0026 Management"
        },
        "subCategory": "Application Definition \u0026 Image Build",
        "metadata": {
          "isAnnotation": false,
          "primaryColor": "#00B39F",
          "secondaryColor": "#00D3A9",
          "shape": "circle",
          "styleOverrides": "",
          "svgColor": "ui/public/static/img/meshmodels/meshery-core/color/meshery-core-color.svg",
          "svgComplete": "",
          "svgWhite": "ui/public/static/img/meshmodels/meshery-core/white/meshery-core-white.svg"
        },
        "model": {
          "version": "0.7.2"
        },
        "components_count": 0,
        "relationships_count": 0,
        "components": null,
        "relationships": null
      },
      "styles": {
        "position": {
          "x": 766.24609375,
          "y": 467.7548828124999
        },
        "primaryColor": "#326CE5",
        "secondaryColor": "#00D3A9",
        "shape": "circle",
        "svgColor": "ui/public/static/img/meshmodels/meshery-core/color/container-color.svg",
        "svgComplete": "",
        "svgWhite": "ui/public/static/img/meshmodels/meshery-core/white/container-white.svg"
      },
      "capabilities": [],
      "status": "enabled",
      "metadata": {
        "configurationUISchema": "",
        "genealogy": "",
        "hasInvalidSchema": true,
        "instanceDetails": null,
        "isAnnotation": true,
        "isNamespaced": false,
        "published": false
      },
      "configuration": {},
      "component": {
        "version": "core.meshery.io/v1alpha1",
        "kind": "Container",
        "schema": ""
      }
    },
    {
      "id": "4b1e12ba-f675-4136-be90-78c589a6b395",
      "schemaVersion": "components.meshery.io/v1beta1",
      "version": "v1.0.0",
      "displayName": "valdmirrortargets.vald.vdaas.org",
      "description": "",
      "format": "",
      "model": {
        "id": "b3f5bc0d-30f7-607d-6c73-784ddde6cad8",
        "schemaVersion": "models.meshery.io/v1beta1",
        "version": "v1.0.0",
        "name": "kubernetes",
        "displayName": "Kubernetes",
        "status": "enabled",
        "registrant": {
          "id": "5bc80e3c-5d43-9eb4-d16c-78a2769247a6",
          "name": "Github",
          "credential_id": "00000000-0000-0000-0000-000000000000",
          "type": "registry",
          "sub_type": "",
          "kind": "github",
          "status": "registered",
          "user_id": "00000000-0000-0000-0000-000000000000",
          "created_at": "2025-09-30T16:42:57.107248085Z",
          "updated_at": "2025-09-30T16:42:57.107248085Z",
          "deleted_at": "0001-01-01T00:00:00Z",
          "schemaVersion": ""
        },
        "connection_id": "5bc80e3c-5d43-9eb4-d16c-78a2769247a6",
        "category": {
          "id": "9ca27d0d-66ce-42a9-8c85-6236563f2ddb",
          "name": "Orchestration \u0026 Management"
        },
        "subCategory": "Scheduling \u0026 Orchestration",
        "metadata": {
          "isAnnotation": false,
          "primaryColor": "#326CE5",
          "secondaryColor": "#7aa1f0",
          "shape": "circle",
          "styleOverrides": "",
          "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/kubernetes-color.svg",
          "svgComplete": "",
          "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/kubernetes-white.svg"
        },
        "model": {
          "version": "v1.32.0-alpha.3"
        },
        "components_count": 0,
        "relationships_count": 0,
        "components": null,
        "relationships": null
      },
      "styles": {
        "position": {
          "x": 1004.24609375,
          "y": 299.7548828124999
        },
        "primaryColor": "#326CE5",
        "secondaryColor": "#7aa1f0",
        "shape": "circle",
        "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/customresourcedefinition-color.svg",
        "svgComplete": "",
        "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/customresourcedefinition-white.svg"
      },
      "capabilities": [],
      "status": "enabled",
      "metadata": {
        "configurationUISchema": "",
        "genealogy": "",
        "instanceDetails": null,
        "isAnnotation": false,
        "isNamespaced": false,
        "published": false,
        "source_uri": "git://github.com/kubernetes/kubernetes/master/api/openapi-spec/v3"
      },
      "configuration": {
        "metadata": {
          "name": "valdmirrortargets.vald.vdaas.org"
        },
        "spec": {
          "group": "vald.vdaas.org",
          "names": {
            "kind": "ValdMirrorTarget",
            "listKind": "ValdMirrorTargetList",
            "plural": "valdmirrortargets",
            "shortNames": [
              "vmt",
              "vmts"
            ],
            "singular": "valdmirrortarget"
          },
          "scope": "Namespaced",
          "versions": [
            {
              "additionalPrinterColumns": [
                {
                  "jsonPath": ".spec.target.host",
                  "name": "Host",
                  "priority": 1,
                  "type": "string"
                },
                {
                  "jsonPath": ".spec.target.port",
                  "name": "Port",
                  "priority": 1,
                  "type": "integer"
                },
                {
                  "jsonPath": ".status.phase",
                  "name": "Status",
                  "type": "string"
                },
                {
                  "jsonPath": ".status.lastTransitionTime",
                  "name": "Last Transition Time",
                  "type": "string"
                },
                {
                  "jsonPath": ".metadata.creationTimestamp",
                  "name": "Age",
                  "type": "date"
                }
              ],
              "name": "v1",
              "schema": {
                "openAPIV3Schema": {
                  "description": "ValdMirrorTarget is the Schema for the valdmirrortargets API",
                  "properties": {
                    "apiVersion": {
                      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                      "type": "string"
                    },
                    "kind": {
                      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                      "type": "string"
                    },
                    "metadata": {
                      "type": "object"
                    },
                    "spec": {
                      "properties": {
                        "colocation": {
                          "type": "string"
                        },
                        "target": {
                          "properties": {
                            "host": {
                              "minLength": 1,
                              "type": "string"
                            },
                            "port": {
                              "maximum": 65535,
                              "minimum": 0,
                              "type": "integer"
                            }
                          },
                          "required": [
                            "host",
                            "port"
                          ],
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "status": {
                      "default": {},
                      "description": "ValdMirrorTargetStatus defines the observed state of ValdMirrorTarget",
                      "properties": {
                        "lastTransitionTime": {
                          "type": "string"
                        },
                        "phase": {
                          "default": "Pending",
                          "enum": [
                            "Pending",
                            "Connected",
                            "Disconnected",
                            "Unknown"
                          ],
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              },
              "served": true,
              "storage": true,
              "subresources": {
                "status": {}
              }
            }
          ]
        }
      },
      "component": {
        "version": "apiextensions.k8s.io/v1",
        "kind": "CustomResourceDefinition",
        "schema": ""
      }
    },
    {
      "id": "513aa7c4-e2c0-4524-9db9-4910ac4870a1",
      "schemaVersion": "components.meshery.io/v1beta1",
      "version": "v1.0.0",
      "displayName": "vald-discoverer",
      "description": "",
      "format": "",
      "model": {
        "id": "b3f5bc0d-30f7-607d-6c73-784ddde6cad8",
        "schemaVersion": "models.meshery.io/v1beta1",
        "version": "v1.0.0",
        "name": "kubernetes",
        "displayName": "Kubernetes",
        "status": "enabled",
        "registrant": {
          "id": "5bc80e3c-5d43-9eb4-d16c-78a2769247a6",
          "name": "Github",
          "credential_id": "00000000-0000-0000-0000-000000000000",
          "type": "registry",
          "sub_type": "",
          "kind": "github",
          "status": "registered",
          "user_id": "00000000-0000-0000-0000-000000000000",
          "created_at": "2025-09-30T16:42:57.107248085Z",
          "updated_at": "2025-09-30T16:42:57.107248085Z",
          "deleted_at": "0001-01-01T00:00:00Z",
          "schemaVersion": ""
        },
        "connection_id": "5bc80e3c-5d43-9eb4-d16c-78a2769247a6",
        "category": {
          "id": "9ca27d0d-66ce-42a9-8c85-6236563f2ddb",
          "name": "Orchestration \u0026 Management"
        },
        "subCategory": "Scheduling \u0026 Orchestration",
        "metadata": {
          "isAnnotation": false,
          "primaryColor": "#326CE5",
          "secondaryColor": "#7aa1f0",
          "shape": "circle",
          "styleOverrides": "",
          "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/kubernetes-color.svg",
          "svgComplete": "",
          "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/kubernetes-white.svg"
        },
        "model": {
          "version": "v1.32.0-alpha.3"
        },
        "components_count": 0,
        "relationships_count": 0,
        "components": null,
        "relationships": null
      },
      "styles": {
        "background-image": "none",
        "background-opacity": 0.5,
        "border-width": 2,
        "position": {
          "x": 754.2468186494532,
          "y": 307.2550598228315
        },
        "primaryColor": "#326CE5",
        "secondaryColor": "#7aa1f0",
        "shape": "round-rectangle",
        "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/deployment-color.svg",
        "svgComplete": "ui/public/static/img/meshmodels/kubernetes/complete/deployment-complete.svg",
        "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/deployment-white.svg"
      },
      "capabilities": [],
      "status": "enabled",
      "metadata": {
        "configurationUISchema": "",
        "genealogy": "parent",
        "instanceDetails": null,
        "isAnnotation": false,
        "isNamespaced": true,
        "published": false,
        "source_uri": "git://github.com/kubernetes/kubernetes/master/api/openapi-spec/v3"
      },
      "configuration": {
        "metadata": {
          "labels": {
            "app": "vald-discoverer",
            "app.kubernetes.io/component": "discoverer",
            "app.kubernetes.io/instance": "vald",
            "app.kubernetes.io/managed-by": "Helm",
            "app.kubernetes.io/name": "vald",
            "app.kubernetes.io/version": "v1.7.17",
            "helm.sh/chart": "vald-v1.7.17"
          },
          "name": "vald-discoverer",
          "namespace": "default"
        },
        "spec": {
          "progressDeadlineSeconds": 600,
          "replicas": 1,
          "revisionHistoryLimit": 2,
          "selector": {
            "matchLabels": {
              "app": "vald-discoverer"
            }
          },
          "strategy": {
            "rollingUpdate": {
              "maxSurge": "25%",
              "maxUnavailable": "25%"
            },
            "type": "RollingUpdate"
          },
          "template": {
            "metadata": {
              "annotations": {
                "checksum/configmap": "892f90c107d461321b73cc676a146d071683b393837f68861b13edcf89175d5d"
              },
              "creationTimestamp": "2025-10-21T17:12:00.000Z",
              "labels": {
                "app": "vald-discoverer",
                "app.kubernetes.io/component": "discoverer",
                "app.kubernetes.io/instance": "vald",
                "app.kubernetes.io/name": "vald"
              }
            },
            "spec": {
              "affinity": {
                "nodeAffinity": {
                  "preferredDuringSchedulingIgnoredDuringExecution": []
                },
                "podAffinity": {
                  "preferredDuringSchedulingIgnoredDuringExecution": [],
                  "requiredDuringSchedulingIgnoredDuringExecution": []
                },
                "podAntiAffinity": {
                  "preferredDuringSchedulingIgnoredDuringExecution": [
                    {
                      "podAffinityTerm": {
                        "labelSelector": {
                          "matchExpressions": [
                            {
                              "key": "app",
                              "operator": "In",
                              "values": [
                                "vald-discoverer"
                              ]
                            }
                          ]
                        },
                        "topologyKey": "kubernetes.io/hostname"
                      },
                      "weight": 100
                    }
                  ],
                  "requiredDuringSchedulingIgnoredDuringExecution": []
                }
              },
              "containers": [
                {
                  "env": [
                    {
                      "name": "MY_NODE_NAME",
                      "valueFrom": {
                        "fieldRef": {
                          "fieldPath": "spec.nodeName"
                        }
                      }
                    },
                    {
                      "name": "MY_POD_NAME",
                      "valueFrom": {
                        "fieldRef": {
                          "fieldPath": "metadata.name"
                        }
                      }
                    },
                    {
                      "name": "MY_POD_NAMESPACE",
                      "valueFrom": {
                        "fieldRef": {
                          "fieldPath": "metadata.namespace"
                        }
                      }
                    }
                  ],
                  "image": "vdaas/vald-discoverer-k8s:v1.7.17",
                  "imagePullPolicy": "Always",
                  "livenessProbe": {
                    "failureThreshold": 2,
                    "httpGet": {
                      "path": "/liveness",
                      "port": "liveness",
                      "scheme": "HTTP"
                    },
                    "initialDelaySeconds": 5,
                    "periodSeconds": 3,
                    "successThreshold": 1,
                    "timeoutSeconds": 2
                  },
                  "name": "vald-discoverer",
                  "ports": [
                    {
                      "containerPort": 3000,
                      "name": "liveness",
                      "protocol": "TCP"
                    },
                    {
                      "containerPort": 3001,
                      "name": "readiness",
                      "protocol": "TCP"
                    },
                    {
                      "containerPort": 8081,
                      "name": "grpc",
                      "protocol": "TCP"
                    }
                  ],
                  "readinessProbe": {
                    "failureThreshold": 2,
                    "httpGet": {
                      "path": "/readiness",
                      "port": "readiness",
                      "scheme": "HTTP"
                    },
                    "initialDelaySeconds": 10,
                    "periodSeconds": 3,
                    "successThreshold": 1,
                    "timeoutSeconds": 2
                  },
                  "resources": {
                    "limits": {
                      "cpu": "600m",
                      "memory": "200Mi"
                    },
                    "requests": {
                      "cpu": "200m",
                      "memory": "65Mi"
                    }
                  },
                  "securityContext": {
                    "allowPrivilegeEscalation": false,
                    "capabilities": {
                      "drop": [
                        "ALL"
                      ]
                    },
                    "privileged": false,
                    "readOnlyRootFilesystem": true,
                    "runAsGroup": 65532,
                    "runAsNonRoot": true,
                    "runAsUser": 65532
                  },
                  "startupProbe": {
                    "failureThreshold": 30,
                    "httpGet": {
                      "path": "/liveness",
                      "port": "liveness",
                      "scheme": "HTTP"
                    },
                    "initialDelaySeconds": 5,
                    "periodSeconds": 5,
                    "successThreshold": 1,
                    "timeoutSeconds": 2
                  },
                  "terminationMessagePath": "/dev/termination-log",
                  "terminationMessagePolicy": "File",
                  "volumeMounts": [
                    {
                      "mountPath": "/etc/server/",
                      "name": "vald-discoverer-config"
                    }
                  ]
                }
              ],
              "dnsPolicy": "ClusterFirst",
              "priorityClassName": "default-vald-discoverer-priority",
              "restartPolicy": "Always",
              "schedulerName": "default-scheduler",
              "securityContext": {
                "fsGroup": 65532,
                "fsGroupChangePolicy": "OnRootMismatch",
                "runAsGroup": 65532,
                "runAsNonRoot": true,
                "runAsUser": 65532
              },
              "serviceAccountName": "vald",
              "terminationGracePeriodSeconds": 30,
              "volumes": [
                {
                  "configMap": {
                    "defaultMode": 420,
                    "name": "vald-discoverer-config"
                  },
                  "name": "vald-discoverer-config"
                }
              ]
            }
          }
        }
      },
      "component": {
        "version": "apps/v1",
        "kind": "Deployment",
        "schema": ""
      }
    },
    {
      "id": "0f81fe0a-a93b-474d-93c8-eda2d17a8adc",
      "schemaVersion": "components.meshery.io/v1beta1",
      "version": "v1.0.0",
      "displayName": "vald-lb-gateway",
      "description": "",
      "format": "",
      "model": {
        "id": "b3f5bc0d-30f7-607d-6c73-784ddde6cad8",
        "schemaVersion": "models.meshery.io/v1beta1",
        "version": "v1.0.0",
        "name": "kubernetes",
        "displayName": "Kubernetes",
        "status": "enabled",
        "registrant": {
          "id": "5bc80e3c-5d43-9eb4-d16c-78a2769247a6",
          "name": "Github",
          "credential_id": "00000000-0000-0000-0000-000000000000",
          "type": "registry",
          "sub_type": "",
          "kind": "github",
          "status": "registered",
          "user_id": "00000000-0000-0000-0000-000000000000",
          "created_at": "2025-09-30T16:42:57.107248085Z",
          "updated_at": "2025-09-30T16:42:57.107248085Z",
          "deleted_at": "0001-01-01T00:00:00Z",
          "schemaVersion": ""
        },
        "connection_id": "5bc80e3c-5d43-9eb4-d16c-78a2769247a6",
        "category": {
          "id": "9ca27d0d-66ce-42a9-8c85-6236563f2ddb",
          "name": "Orchestration \u0026 Management"
        },
        "subCategory": "Scheduling \u0026 Orchestration",
        "metadata": {
          "isAnnotation": false,
          "primaryColor": "#326CE5",
          "secondaryColor": "#7aa1f0",
          "shape": "circle",
          "styleOverrides": "",
          "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/kubernetes-color.svg",
          "svgComplete": "",
          "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/kubernetes-white.svg"
        },
        "model": {
          "version": "v1.32.0-alpha.3"
        },
        "components_count": 0,
        "relationships_count": 0,
        "components": null,
        "relationships": null
      },
      "styles": {
        "background-image": "none",
        "background-opacity": 0.5,
        "border-width": 2,
        "position": {
          "x": 882.2468186494532,
          "y": 307.2550598228315
        },
        "primaryColor": "#326CE5",
        "secondaryColor": "#7aa1f0",
        "shape": "round-rectangle",
        "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/deployment-color.svg",
        "svgComplete": "ui/public/static/img/meshmodels/kubernetes/complete/deployment-complete.svg",
        "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/deployment-white.svg"
      },
      "capabilities": [],
      "status": "enabled",
      "metadata": {
        "configurationUISchema": "",
        "genealogy": "parent",
        "instanceDetails": null,
        "isAnnotation": false,
        "isNamespaced": true,
        "published": false,
        "source_uri": "git://github.com/kubernetes/kubernetes/master/api/openapi-spec/v3"
      },
      "configuration": {
        "metadata": {
          "labels": {
            "app": "vald-lb-gateway",
            "app.kubernetes.io/component": "gateway-lb",
            "app.kubernetes.io/instance": "vald",
            "app.kubernetes.io/managed-by": "Helm",
            "app.kubernetes.io/name": "vald",
            "app.kubernetes.io/version": "v1.7.17",
            "helm.sh/chart": "vald-v1.7.17"
          },
          "name": "vald-lb-gateway",
          "namespace": "default"
        },
        "spec": {
          "progressDeadlineSeconds": 600,
          "revisionHistoryLimit": 2,
          "selector": {
            "matchLabels": {
              "app": "vald-lb-gateway"
            }
          },
          "strategy": {
            "rollingUpdate": {
              "maxSurge": "25%",
              "maxUnavailable": "25%"
            },
            "type": "RollingUpdate"
          },
          "template": {
            "metadata": {
              "annotations": {
                "checksum/configmap": "b42a6d5aa16d6b1ae5f0d71f967496dd5ed3e6148d423c1a464c45a098044238"
              },
              "creationTimestamp": "2025-10-02T17:12:00.000Z",
              "labels": {
                "app": "vald-lb-gateway",
                "app.kubernetes.io/component": "gateway-lb",
                "app.kubernetes.io/instance": "vald",
                "app.kubernetes.io/name": "vald"
              }
            },
            "spec": {
              "affinity": {
                "nodeAffinity": {
                  "preferredDuringSchedulingIgnoredDuringExecution": []
                },
                "podAffinity": {
                  "preferredDuringSchedulingIgnoredDuringExecution": [],
                  "requiredDuringSchedulingIgnoredDuringExecution": []
                },
                "podAntiAffinity": {
                  "preferredDuringSchedulingIgnoredDuringExecution": [
                    {
                      "podAffinityTerm": {
                        "labelSelector": {
                          "matchExpressions": [
                            {
                              "key": "app",
                              "operator": "In",
                              "values": [
                                "vald-lb-gateway"
                              ]
                            }
                          ]
                        },
                        "topologyKey": "kubernetes.io/hostname"
                      },
                      "weight": 100
                    }
                  ],
                  "requiredDuringSchedulingIgnoredDuringExecution": []
                }
              },
              "containers": [
                {
                  "env": [
                    {
                      "name": "MY_NODE_NAME",
                      "valueFrom": {
                        "fieldRef": {
                          "fieldPath": "spec.nodeName"
                        }
                      }
                    },
                    {
                      "name": "MY_POD_NAME",
                      "valueFrom": {
                        "fieldRef": {
                          "fieldPath": "metadata.name"
                        }
                      }
                    },
                    {
                      "name": "MY_POD_NAMESPACE",
                      "valueFrom": {
                        "fieldRef": {
                          "fieldPath": "metadata.namespace"
                        }
                      }
                    }
                  ],
                  "image": "vdaas/vald-lb-gateway:v1.7.17",
                  "imagePullPolicy": "Always",
                  "livenessProbe": {
                    "failureThreshold": 2,
                    "httpGet": {
                      "path": "/liveness",
                      "port": "liveness",
                      "scheme": "HTTP"
                    },
                    "initialDelaySeconds": 5,
                    "periodSeconds": 3,
                    "successThreshold": 1,
                    "timeoutSeconds": 2
                  },
                  "name": "vald-lb-gateway",
                  "ports": [
                    {
                      "containerPort": 3000,
                      "name": "liveness",
                      "protocol": "TCP"
                    },
                    {
                      "containerPort": 3001,
                      "name": "readiness",
                      "protocol": "TCP"
                    },
                    {
                      "containerPort": 8081,
                      "name": "grpc",
                      "protocol": "TCP"
                    }
                  ],
                  "readinessProbe": {
                    "failureThreshold": 2,
                    "httpGet": {
                      "path": "/readiness",
                      "port": "readiness",
                      "scheme": "HTTP"
                    },
                    "initialDelaySeconds": 10,
                    "periodSeconds": 3,
                    "successThreshold": 1,
                    "timeoutSeconds": 2
                  },
                  "resources": {
                    "limits": {
                      "cpu": "2000m",
                      "memory": "700Mi"
                    },
                    "requests": {
                      "cpu": "200m",
                      "memory": "150Mi"
                    }
                  },
                  "securityContext": {
                    "allowPrivilegeEscalation": false,
                    "capabilities": {
                      "drop": [
                        "ALL"
                      ]
                    },
                    "privileged": false,
                    "readOnlyRootFilesystem": true,
                    "runAsGroup": 65532,
                    "runAsNonRoot": true,
                    "runAsUser": 65532
                  },
                  "startupProbe": {
                    "failureThreshold": 30,
                    "httpGet": {
                      "path": "/liveness",
                      "port": "liveness",
                      "scheme": "HTTP"
                    },
                    "initialDelaySeconds": 5,
                    "periodSeconds": 5,
                    "successThreshold": 1,
                    "timeoutSeconds": 2
                  },
                  "terminationMessagePath": "/dev/termination-log",
                  "terminationMessagePolicy": "File",
                  "volumeMounts": [
                    {
                      "mountPath": "/etc/server/",
                      "name": "vald-lb-gateway-config"
                    }
                  ]
                }
              ],
              "dnsPolicy": "ClusterFirst",
              "initContainers": [
                {
                  "command": [
                    "/bin/sh",
                    "-e",
                    "-c",
                    "until [ \"$(wget --server-response --spider --quiet http://vald-discoverer.default.svc.cluster.local:3001/readiness 2\u003e\u00261 | awk 'NR==1{print $2}')\" == \"200\" ]; do\n  echo \"waiting for discoverer to be ready...\"\n  sleep 2;\ndone\n"
                  ],
                  "image": "busybox:stable",
                  "imagePullPolicy": "Always",
                  "name": "wait-for-discoverer"
                },
                {
                  "command": [
                    "/bin/sh",
                    "-e",
                    "-c",
                    "until [ \"$(wget --server-response --spider --quiet http://vald-agent.default.svc.cluster.local:3001/readiness 2\u003e\u00261 | awk 'NR==1{print $2}')\" == \"200\" ]; do\n  echo \"waiting for agent to be ready...\"\n  sleep 2;\ndone\n"
                  ],
                  "image": "busybox:stable",
                  "imagePullPolicy": "Always",
                  "name": "wait-for-agent"
                }
              ],
              "priorityClassName": "default-vald-lb-gateway-priority",
              "restartPolicy": "Always",
              "schedulerName": "default-scheduler",
              "securityContext": {
                "fsGroup": 65532,
                "fsGroupChangePolicy": "OnRootMismatch",
                "runAsGroup": 65532,
                "runAsNonRoot": true,
                "runAsUser": 65532
              },
              "terminationGracePeriodSeconds": 30,
              "volumes": [
                {
                  "configMap": {
                    "defaultMode": 420,
                    "name": "vald-lb-gateway-config"
                  },
                  "name": "vald-lb-gateway-config"
                }
              ]
            }
          }
        }
      },
      "component": {
        "version": "apps/v1",
        "kind": "Deployment",
        "schema": ""
      }
    },
    {
      "id": "914d1fe8-d216-46dc-a077-32bc4efc958f",
      "schemaVersion": "components.meshery.io/v1beta1",
      "version": "v1.0.0",
      "displayName": "vald-manager-index",
      "description": "",
      "format": "",
      "model": {
        "id": "b3f5bc0d-30f7-607d-6c73-784ddde6cad8",
        "schemaVersion": "models.meshery.io/v1beta1",
        "version": "v1.0.0",
        "name": "kubernetes",
        "displayName": "Kubernetes",
        "status": "enabled",
        "registrant": {
          "id": "5bc80e3c-5d43-9eb4-d16c-78a2769247a6",
          "name": "Github",
          "credential_id": "00000000-0000-0000-0000-000000000000",
          "type": "registry",
          "sub_type": "",
          "kind": "github",
          "status": "registered",
          "user_id": "00000000-0000-0000-0000-000000000000",
          "created_at": "2025-09-30T16:42:57.107248085Z",
          "updated_at": "2025-09-30T16:42:57.107248085Z",
          "deleted_at": "0001-01-01T00:00:00Z",
          "schemaVersion": ""
        },
        "connection_id": "5bc80e3c-5d43-9eb4-d16c-78a2769247a6",
        "category": {
          "id": "9ca27d0d-66ce-42a9-8c85-6236563f2ddb",
          "name": "Orchestration \u0026 Management"
        },
        "subCategory": "Scheduling \u0026 Orchestration",
        "metadata": {
          "isAnnotation": false,
          "primaryColor": "#326CE5",
          "secondaryColor": "#7aa1f0",
          "shape": "circle",
          "styleOverrides": "",
          "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/kubernetes-color.svg",
          "svgComplete": "",
          "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/kubernetes-white.svg"
        },
        "model": {
          "version": "v1.32.0-alpha.3"
        },
        "components_count": 0,
        "relationships_count": 0,
        "components": null,
        "relationships": null
      },
      "styles": {
        "background-image": "none",
        "background-opacity": 0.5,
        "border-width": 2,
        "position": {
          "x": 754.2468186494532,
          "y": 435.2550598228315
        },
        "primaryColor": "#326CE5",
        "secondaryColor": "#7aa1f0",
        "shape": "round-rectangle",
        "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/deployment-color.svg",
        "svgComplete": "ui/public/static/img/meshmodels/kubernetes/complete/deployment-complete.svg",
        "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/deployment-white.svg"
      },
      "capabilities": [],
      "status": "enabled",
      "metadata": {
        "configurationUISchema": "",
        "genealogy": "parent",
        "instanceDetails": null,
        "isAnnotation": false,
        "isNamespaced": true,
        "published": false,
        "source_uri": "git://github.com/kubernetes/kubernetes/master/api/openapi-spec/v3"
      },
      "configuration": {
        "metadata": {
          "labels": {
            "app": "vald-manager-index",
            "app.kubernetes.io/component": "manager-index",
            "app.kubernetes.io/instance": "vald",
            "app.kubernetes.io/managed-by": "Helm",
            "app.kubernetes.io/name": "vald",
            "app.kubernetes.io/version": "v1.7.17",
            "helm.sh/chart": "vald-v1.7.17"
          },
          "name": "vald-manager-index",
          "namespace": "default"
        },
        "spec": {
          "progressDeadlineSeconds": 600,
          "replicas": 1,
          "revisionHistoryLimit": 2,
          "selector": {
            "matchLabels": {
              "app": "vald-manager-index"
            }
          },
          "strategy": {
            "rollingUpdate": {
              "maxSurge": "25%",
              "maxUnavailable": "25%"
            },
            "type": "RollingUpdate"
          },
          "template": {
            "metadata": {
              "annotations": {
                "checksum/configmap": "bd5f4b22499713315f77e442033fdba50c15f5e9e62378131c20459fc33b458a"
              },
              "creationTimestamp": "2025-10-02T17:12:00.000Z",
              "labels": {
                "app": "vald-manager-index",
                "app.kubernetes.io/component": "manager-index",
                "app.kubernetes.io/instance": "vald",
                "app.kubernetes.io/name": "vald"
              }
            },
            "spec": {
              "affinity": {
                "nodeAffinity": {
                  "preferredDuringSchedulingIgnoredDuringExecution": []
                },
                "podAffinity": {
                  "preferredDuringSchedulingIgnoredDuringExecution": [],
                  "requiredDuringSchedulingIgnoredDuringExecution": []
                },
                "podAntiAffinity": {
                  "preferredDuringSchedulingIgnoredDuringExecution": [],
                  "requiredDuringSchedulingIgnoredDuringExecution": []
                }
              },
              "containers": [
                {
                  "env": [
                    {
                      "name": "MY_NODE_NAME",
                      "valueFrom": {
                        "fieldRef": {
                          "fieldPath": "spec.nodeName"
                        }
                      }
                    },
                    {
                      "name": "MY_POD_NAME",
                      "valueFrom": {
                        "fieldRef": {
                          "fieldPath": "metadata.name"
                        }
                      }
                    },
                    {
                      "name": "MY_POD_NAMESPACE",
                      "valueFrom": {
                        "fieldRef": {
                          "fieldPath": "metadata.namespace"
                        }
                      }
                    }
                  ],
                  "image": "vdaas/vald-manager-index:v1.7.17",
                  "imagePullPolicy": "Always",
                  "livenessProbe": {
                    "failureThreshold": 2,
                    "httpGet": {
                      "path": "/liveness",
                      "port": "liveness",
                      "scheme": "HTTP"
                    },
                    "initialDelaySeconds": 5,
                    "periodSeconds": 3,
                    "successThreshold": 1,
                    "timeoutSeconds": 2
                  },
                  "name": "vald-manager-index",
                  "ports": [
                    {
                      "containerPort": 3000,
                      "name": "liveness",
                      "protocol": "TCP"
                    },
                    {
                      "containerPort": 3001,
                      "name": "readiness",
                      "protocol": "TCP"
                    },
                    {
                      "containerPort": 8081,
                      "name": "grpc",
                      "protocol": "TCP"
                    }
                  ],
                  "readinessProbe": {
                    "failureThreshold": 2,
                    "httpGet": {
                      "path": "/readiness",
                      "port": "readiness",
                      "scheme": "HTTP"
                    },
                    "initialDelaySeconds": 10,
                    "periodSeconds": 3,
                    "successThreshold": 1,
                    "timeoutSeconds": 2
                  },
                  "resources": {
                    "limits": {
                      "cpu": "1000m",
                      "memory": "500Mi"
                    },
                    "requests": {
                      "cpu": "200m",
                      "memory": "80Mi"
                    }
                  },
                  "securityContext": {
                    "allowPrivilegeEscalation": false,
                    "capabilities": {
                      "drop": [
                        "ALL"
                      ]
                    },
                    "privileged": false,
                    "readOnlyRootFilesystem": true,
                    "runAsGroup": 65532,
                    "runAsNonRoot": true,
                    "runAsUser": 65532
                  },
                  "startupProbe": {
                    "failureThreshold": 30,
                    "httpGet": {
                      "path": "/liveness",
                      "port": "liveness",
                      "scheme": "HTTP"
                    },
                    "initialDelaySeconds": 5,
                    "periodSeconds": 5,
                    "successThreshold": 1,
                    "timeoutSeconds": 2
                  },
                  "terminationMessagePath": "/dev/termination-log",
                  "terminationMessagePolicy": "File",
                  "volumeMounts": [
                    {
                      "mountPath": "/etc/server/",
                      "name": "vald-manager-index-config"
                    }
                  ]
                }
              ],
              "dnsPolicy": "ClusterFirst",
              "initContainers": [
                {
                  "command": [
                    "/bin/sh",
                    "-e",
                    "-c",
                    "until [ \"$(wget --server-response --spider --quiet http://vald-agent.default.svc.cluster.local:3001/readiness 2\u003e\u00261 | awk 'NR==1{print $2}')\" == \"200\" ]; do\n  echo \"waiting for agent to be ready...\"\n  sleep 2;\ndone\n"
                  ],
                  "image": "busybox:stable",
                  "imagePullPolicy": "Always",
                  "name": "wait-for-agent"
                },
                {
                  "command": [
                    "/bin/sh",
                    "-e",
                    "-c",
                    "until [ \"$(wget --server-response --spider --quiet http://vald-discoverer.default.svc.cluster.local:3001/readiness 2\u003e\u00261 | awk 'NR==1{print $2}')\" == \"200\" ]; do\n  echo \"waiting for discoverer to be ready...\"\n  sleep 2;\ndone\n"
                  ],
                  "image": "busybox:stable",
                  "imagePullPolicy": "Always",
                  "name": "wait-for-discoverer"
                }
              ],
              "priorityClassName": "default-vald-manager-index-priority",
              "restartPolicy": "Always",
              "schedulerName": "default-scheduler",
              "securityContext": {
                "fsGroup": 65532,
                "fsGroupChangePolicy": "OnRootMismatch",
                "runAsGroup": 65532,
                "runAsNonRoot": true,
                "runAsUser": 65532
              },
              "terminationGracePeriodSeconds": 30,
              "volumes": [
                {
                  "configMap": {
                    "defaultMode": 420,
                    "name": "vald-manager-index-config"
                  },
                  "name": "vald-manager-index-config"
                }
              ]
            }
          }
        }
      },
      "component": {
        "version": "apps/v1",
        "kind": "Deployment",
        "schema": ""
      }
    },
    {
      "id": "de77373e-833a-4124-8145-371f91fbdc7d",
      "schemaVersion": "components.meshery.io/v1beta1",
      "version": "v1.0.0",
      "displayName": "default",
      "description": "",
      "format": "JSON",
      "model": {
        "id": "b3f5bc0d-30f7-607d-6c73-784ddde6cad8",
        "schemaVersion": "models.meshery.io/v1beta1",
        "version": "v1.0.0",
        "name": "kubernetes",
        "displayName": "Kubernetes",
        "status": "enabled",
        "registrant": {
          "id": "5bc80e3c-5d43-9eb4-d16c-78a2769247a6",
          "name": "Github",
          "credential_id": "00000000-0000-0000-0000-000000000000",
          "type": "registry",
          "sub_type": "",
          "kind": "github",
          "status": "registered",
          "user_id": "00000000-0000-0000-0000-000000000000",
          "created_at": "2025-09-30T16:42:57.107248085Z",
          "updated_at": "2025-09-30T16:42:57.107248085Z",
          "deleted_at": "0001-01-01T00:00:00Z",
          "schemaVersion": ""
        },
        "connection_id": "5bc80e3c-5d43-9eb4-d16c-78a2769247a6",
        "category": {
          "id": "9ca27d0d-66ce-42a9-8c85-6236563f2ddb",
          "name": "Orchestration \u0026 Management"
        },
        "subCategory": "Scheduling \u0026 Orchestration",
        "metadata": {
          "isAnnotation": false,
          "primaryColor": "#326CE5",
          "secondaryColor": "#7aa1f0",
          "shape": "circle",
          "styleOverrides": "",
          "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/kubernetes-color.svg",
          "svgComplete": "",
          "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/kubernetes-white.svg"
        },
        "model": {
          "version": "v1.32.0-alpha.3"
        },
        "components_count": 0,
        "relationships_count": 0,
        "components": null,
        "relationships": null
      },
      "styles": {
        "background-image": "none",
        "background-opacity": 0.5,
        "border-style": "dashed",
        "border-width": 2,
        "position": {
          "x": 916.7468186494532,
          "y": 513.5050598228315
        },
        "primaryColor": "#326CE5",
        "secondaryColor": "#7aa1f0",
        "shape": "rectangle",
        "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/namespace-color.svg",
        "svgComplete": "ui/public/static/img/meshmodels/kubernetes/complete/namespace-complete.svg",
        "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/namespace-white.svg"
      },
      "capabilities": [],
      "status": "enabled",
      "metadata": {
        "configurationUISchema": "",
        "genealogy": "parent",
        "instanceDetails": null,
        "isAnnotation": false,
        "isNamespaced": false,
        "published": false,
        "source_uri": "git://github.com/kubernetes/kubernetes/master/api/openapi-spec/v3"
      },
      "configuration": {},
      "component": {
        "version": "v1",
        "kind": "Namespace",
        "schema": ""
      }
    },
    {
      "id": "b0fbe53b-e961-4d07-a5f7-496956b293bd",
      "schemaVersion": "components.meshery.io/v1beta1",
      "version": "v1.0.0",
      "displayName": "vald-agent",
      "description": "",
      "format": "",
      "model": {
        "id": "b3f5bc0d-30f7-607d-6c73-784ddde6cad8",
        "schemaVersion": "models.meshery.io/v1beta1",
        "version": "v1.0.0",
        "name": "kubernetes",
        "displayName": "Kubernetes",
        "status": "enabled",
        "registrant": {
          "id": "5bc80e3c-5d43-9eb4-d16c-78a2769247a6",
          "name": "Github",
          "credential_id": "00000000-0000-0000-0000-000000000000",
          "type": "registry",
          "sub_type": "",
          "kind": "github",
          "status": "registered",
          "user_id": "00000000-0000-0000-0000-000000000000",
          "created_at": "2025-09-30T16:42:57.107248085Z",
          "updated_at": "2025-09-30T16:42:57.107248085Z",
          "deleted_at": "0001-01-01T00:00:00Z",
          "schemaVersion": ""
        },
        "connection_id": "5bc80e3c-5d43-9eb4-d16c-78a2769247a6",
        "category": {
          "id": "9ca27d0d-66ce-42a9-8c85-6236563f2ddb",
          "name": "Orchestration \u0026 Management"
        },
        "subCategory": "Scheduling \u0026 Orchestration",
        "metadata": {
          "isAnnotation": false,
          "primaryColor": "#326CE5",
          "secondaryColor": "#7aa1f0",
          "shape": "circle",
          "styleOverrides": "",
          "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/kubernetes-color.svg",
          "svgComplete": "",
          "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/kubernetes-white.svg"
        },
        "model": {
          "version": "v1.32.0-alpha.3"
        },
        "components_count": 0,
        "relationships_count": 0,
        "components": null,
        "relationships": null
      },
      "styles": {
        "position": {
          "x": 932.24609375,
          "y": 663.7548828125
        },
        "primaryColor": "#326CE5",
        "secondaryColor": "#7aa1f0",
        "shape": "concave-hexagon",
        "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/poddisruptionbudget-color.svg",
        "svgComplete": "",
        "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/poddisruptionbudget-white.svg"
      },
      "capabilities": [],
      "status": "enabled",
      "metadata": {
        "configurationUISchema": "",
        "genealogy": "",
        "instanceDetails": null,
        "isAnnotation": false,
        "isNamespaced": true,
        "published": false,
        "source_uri": "git://github.com/kubernetes/kubernetes/master/api/openapi-spec/v3"
      },
      "configuration": {
        "metadata": {
          "labels": {
            "app.kubernetes.io/component": "agent",
            "app.kubernetes.io/instance": "vald",
            "app.kubernetes.io/managed-by": "Helm",
            "app.kubernetes.io/name": "vald",
            "app.kubernetes.io/version": "v1.7.17",
            "helm.sh/chart": "vald-v1.7.17"
          },
          "name": "vald-agent"
        },
        "spec": {
          "maxUnavailable": 1,
          "selector": {
            "matchLabels": {
              "app": "vald-agent"
            }
          },
          "unhealthyPodEvictionPolicy": "IfHealthyBudget"
        }
      },
      "component": {
        "version": "policy/v1",
        "kind": "PodDisruptionBudget",
        "schema": ""
      }
    },
    {
      "id": "9f6a9120-7191-4a66-9500-00adbb3b81c1",
      "schemaVersion": "components.meshery.io/v1beta1",
      "version": "v1.0.0",
      "displayName": "vald-discoverer",
      "description": "",
      "format": "",
      "model": {
        "id": "b3f5bc0d-30f7-607d-6c73-784ddde6cad8",
        "schemaVersion": "models.meshery.io/v1beta1",
        "version": "v1.0.0",
        "name": "kubernetes",
        "displayName": "Kubernetes",
        "status": "enabled",
        "registrant": {
          "id": "5bc80e3c-5d43-9eb4-d16c-78a2769247a6",
          "name": "Github",
          "credential_id": "00000000-0000-0000-0000-000000000000",
          "type": "registry",
          "sub_type": "",
          "kind": "github",
          "status": "registered",
          "user_id": "00000000-0000-0000-0000-000000000000",
          "created_at": "2025-09-30T16:42:57.107248085Z",
          "updated_at": "2025-09-30T16:42:57.107248085Z",
          "deleted_at": "0001-01-01T00:00:00Z",
          "schemaVersion": ""
        },
        "connection_id": "5bc80e3c-5d43-9eb4-d16c-78a2769247a6",
        "category": {
          "id": "9ca27d0d-66ce-42a9-8c85-6236563f2ddb",
          "name": "Orchestration \u0026 Management"
        },
        "subCategory": "Scheduling \u0026 Orchestration",
        "metadata": {
          "isAnnotation": false,
          "primaryColor": "#326CE5",
          "secondaryColor": "#7aa1f0",
          "shape": "circle",
          "styleOverrides": "",
          "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/kubernetes-color.svg",
          "svgComplete": "",
          "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/kubernetes-white.svg"
        },
        "model": {
          "version": "v1.32.0-alpha.3"
        },
        "components_count": 0,
        "relationships_count": 0,
        "components": null,
        "relationships": null
      },
      "styles": {
        "position": {
          "x": 1024.24609375,
          "y": 663.7548828125
        },
        "primaryColor": "#326CE5",
        "secondaryColor": "#7aa1f0",
        "shape": "concave-hexagon",
        "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/poddisruptionbudget-color.svg",
        "svgComplete": "",
        "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/poddisruptionbudget-white.svg"
      },
      "capabilities": [],
      "status": "enabled",
      "metadata": {
        "configurationUISchema": "",
        "genealogy": "",
        "instanceDetails": null,
        "isAnnotation": false,
        "isNamespaced": true,
        "published": false,
        "source_uri": "git://github.com/kubernetes/kubernetes/master/api/openapi-spec/v3"
      },
      "configuration": {
        "metadata": {
          "labels": {
            "app.kubernetes.io/component": "discoverer",
            "app.kubernetes.io/instance": "vald",
            "app.kubernetes.io/managed-by": "Helm",
            "app.kubernetes.io/name": "vald",
            "app.kubernetes.io/version": "v1.7.17",
            "helm.sh/chart": "vald-v1.7.17"
          },
          "name": "vald-discoverer"
        },
        "spec": {
          "maxUnavailable": "50%",
          "selector": {
            "matchLabels": {
              "app": "vald-discoverer"
            }
          },
          "unhealthyPodEvictionPolicy": "AlwaysAllow"
        }
      },
      "component": {
        "version": "policy/v1",
        "kind": "PodDisruptionBudget",
        "schema": ""
      }
    },
    {
      "id": "2f697e28-9c0b-430d-9e7b-ea3c5cd20704",
      "schemaVersion": "components.meshery.io/v1beta1",
      "version": "v1.0.0",
      "displayName": "vald-lb-gateway",
      "description": "",
      "format": "",
      "model": {
        "id": "b3f5bc0d-30f7-607d-6c73-784ddde6cad8",
        "schemaVersion": "models.meshery.io/v1beta1",
        "version": "v1.0.0",
        "name": "kubernetes",
        "displayName": "Kubernetes",
        "status": "enabled",
        "registrant": {
          "id": "5bc80e3c-5d43-9eb4-d16c-78a2769247a6",
          "name": "Github",
          "credential_id": "00000000-0000-0000-0000-000000000000",
          "type": "registry",
          "sub_type": "",
          "kind": "github",
          "status": "registered",
          "user_id": "00000000-0000-0000-0000-000000000000",
          "created_at": "2025-09-30T16:42:57.107248085Z",
          "updated_at": "2025-09-30T16:42:57.107248085Z",
          "deleted_at": "0001-01-01T00:00:00Z",
          "schemaVersion": ""
        },
        "connection_id": "5bc80e3c-5d43-9eb4-d16c-78a2769247a6",
        "category": {
          "id": "9ca27d0d-66ce-42a9-8c85-6236563f2ddb",
          "name": "Orchestration \u0026 Management"
        },
        "subCategory": "Scheduling \u0026 Orchestration",
        "metadata": {
          "isAnnotation": false,
          "primaryColor": "#326CE5",
          "secondaryColor": "#7aa1f0",
          "shape": "circle",
          "styleOverrides": "",
          "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/kubernetes-color.svg",
          "svgComplete": "",
          "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/kubernetes-white.svg"
        },
        "model": {
          "version": "v1.32.0-alpha.3"
        },
        "components_count": 0,
        "relationships_count": 0,
        "components": null,
        "relationships": null
      },
      "styles": {
        "position": {
          "x": 1096.24609375,
          "y": 299.7548828124999
        },
        "primaryColor": "#326CE5",
        "secondaryColor": "#7aa1f0",
        "shape": "concave-hexagon",
        "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/poddisruptionbudget-color.svg",
        "svgComplete": "",
        "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/poddisruptionbudget-white.svg"
      },
      "capabilities": [],
      "status": "enabled",
      "metadata": {
        "configurationUISchema": "",
        "genealogy": "",
        "instanceDetails": null,
        "isAnnotation": false,
        "isNamespaced": true,
        "published": false,
        "source_uri": "git://github.com/kubernetes/kubernetes/master/api/openapi-spec/v3"
      },
      "configuration": {
        "metadata": {
          "labels": {
            "app.kubernetes.io/component": "gateway-lb",
            "app.kubernetes.io/instance": "vald",
            "app.kubernetes.io/managed-by": "Helm",
            "app.kubernetes.io/name": "vald",
            "app.kubernetes.io/version": "v1.7.17",
            "helm.sh/chart": "vald-v1.7.17"
          },
          "name": "vald-lb-gateway"
        },
        "spec": {
          "maxUnavailable": "50%",
          "selector": {
            "matchLabels": {
              "app": "vald-lb-gateway"
            }
          },
          "unhealthyPodEvictionPolicy": "AlwaysAllow"
        }
      },
      "component": {
        "version": "policy/v1",
        "kind": "PodDisruptionBudget",
        "schema": ""
      }
    },
    {
      "id": "a4872e22-5fb6-411e-8ed6-659a8ff0f3bb",
      "schemaVersion": "components.meshery.io/v1beta1",
      "version": "v1.0.0",
      "displayName": "vald-manager-index",
      "description": "",
      "format": "",
      "model": {
        "id": "b3f5bc0d-30f7-607d-6c73-784ddde6cad8",
        "schemaVersion": "models.meshery.io/v1beta1",
        "version": "v1.0.0",
        "name": "kubernetes",
        "displayName": "Kubernetes",
        "status": "enabled",
        "registrant": {
          "id": "5bc80e3c-5d43-9eb4-d16c-78a2769247a6",
          "name": "Github",
          "credential_id": "00000000-0000-0000-0000-000000000000",
          "type": "registry",
          "sub_type": "",
          "kind": "github",
          "status": "registered",
          "user_id": "00000000-0000-0000-0000-000000000000",
          "created_at": "2025-09-30T16:42:57.107248085Z",
          "updated_at": "2025-09-30T16:42:57.107248085Z",
          "deleted_at": "0001-01-01T00:00:00Z",
          "schemaVersion": ""
        },
        "connection_id": "5bc80e3c-5d43-9eb4-d16c-78a2769247a6",
        "category": {
          "id": "9ca27d0d-66ce-42a9-8c85-6236563f2ddb",
          "name": "Orchestration \u0026 Management"
        },
        "subCategory": "Scheduling \u0026 Orchestration",
        "metadata": {
          "isAnnotation": false,
          "primaryColor": "#326CE5",
          "secondaryColor": "#7aa1f0",
          "shape": "circle",
          "styleOverrides": "",
          "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/kubernetes-color.svg",
          "svgComplete": "",
          "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/kubernetes-white.svg"
        },
        "model": {
          "version": "v1.32.0-alpha.3"
        },
        "components_count": 0,
        "relationships_count": 0,
        "components": null,
        "relationships": null
      },
      "styles": {
        "position": {
          "x": 1116.24609375,
          "y": 663.7548828125
        },
        "primaryColor": "#326CE5",
        "secondaryColor": "#7aa1f0",
        "shape": "concave-hexagon",
        "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/poddisruptionbudget-color.svg",
        "svgComplete": "",
        "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/poddisruptionbudget-white.svg"
      },
      "capabilities": [],
      "status": "enabled",
      "metadata": {
        "configurationUISchema": "",
        "genealogy": "",
        "instanceDetails": null,
        "isAnnotation": false,
        "isNamespaced": true,
        "published": false,
        "source_uri": "git://github.com/kubernetes/kubernetes/master/api/openapi-spec/v3"
      },
      "configuration": {
        "metadata": {
          "labels": {
            "app.kubernetes.io/component": "manager-index",
            "app.kubernetes.io/instance": "vald",
            "app.kubernetes.io/managed-by": "Helm",
            "app.kubernetes.io/name": "vald",
            "app.kubernetes.io/version": "v1.7.17",
            "helm.sh/chart": "vald-v1.7.17"
          },
          "name": "vald-manager-index"
        },
        "spec": {
          "maxUnavailable": "50%",
          "selector": {
            "matchLabels": {
              "app": "vald-manager-index"
            }
          },
          "unhealthyPodEvictionPolicy": "AlwaysAllow"
        }
      },
      "component": {
        "version": "policy/v1",
        "kind": "PodDisruptionBudget",
        "schema": ""
      }
    },
    {
      "id": "3e9aecde-9653-4c3e-8ec3-2f907fd0ef11",
      "schemaVersion": "components.meshery.io/v1beta1",
      "version": "v1.0.0",
      "displayName": "default-vald-agent-priority",
      "description": "",
      "format": "",
      "model": {
        "id": "b3f5bc0d-30f7-607d-6c73-784ddde6cad8",
        "schemaVersion": "models.meshery.io/v1beta1",
        "version": "v1.0.0",
        "name": "kubernetes",
        "displayName": "Kubernetes",
        "status": "enabled",
        "registrant": {
          "id": "5bc80e3c-5d43-9eb4-d16c-78a2769247a6",
          "name": "Github",
          "credential_id": "00000000-0000-0000-0000-000000000000",
          "type": "registry",
          "sub_type": "",
          "kind": "github",
          "status": "registered",
          "user_id": "00000000-0000-0000-0000-000000000000",
          "created_at": "2025-09-30T16:42:57.107248085Z",
          "updated_at": "2025-09-30T16:42:57.107248085Z",
          "deleted_at": "0001-01-01T00:00:00Z",
          "schemaVersion": ""
        },
        "connection_id": "5bc80e3c-5d43-9eb4-d16c-78a2769247a6",
        "category": {
          "id": "9ca27d0d-66ce-42a9-8c85-6236563f2ddb",
          "name": "Orchestration \u0026 Management"
        },
        "subCategory": "Scheduling \u0026 Orchestration",
        "metadata": {
          "isAnnotation": false,
          "primaryColor": "#326CE5",
          "secondaryColor": "#7aa1f0",
          "shape": "circle",
          "styleOverrides": "",
          "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/kubernetes-color.svg",
          "svgComplete": "",
          "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/kubernetes-white.svg"
        },
        "model": {
          "version": "v1.32.0-alpha.3"
        },
        "components_count": 0,
        "relationships_count": 0,
        "components": null,
        "relationships": null
      },
      "styles": {
        "position": {
          "x": 1058.24609375,
          "y": 555.7548828125
        },
        "primaryColor": "#326CE5",
        "secondaryColor": "#7aa1f0",
        "shape": "right-rhomboid",
        "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/priorityclass-color.svg",
        "svgComplete": "",
        "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/priorityclass-white.svg"
      },
      "capabilities": [],
      "status": "enabled",
      "metadata": {
        "configurationUISchema": "",
        "genealogy": "",
        "instanceDetails": null,
        "isAnnotation": false,
        "isNamespaced": false,
        "published": false,
        "source_uri": "git://github.com/kubernetes/kubernetes/master/api/openapi-spec/v3"
      },
      "configuration": {
        "description": "A priority class for Vald agent.",
        "globalDefault": false,
        "metadata": {
          "labels": {
            "app.kubernetes.io/component": "agent",
            "app.kubernetes.io/instance": "vald",
            "app.kubernetes.io/managed-by": "Helm",
            "app.kubernetes.io/name": "vald",
            "app.kubernetes.io/version": "v1.7.17",
            "helm.sh/chart": "vald-v1.7.17"
          },
          "name": "default-vald-agent-priority"
        },
        "preemptionPolicy": "Never",
        "value": 1000000000
      },
      "component": {
        "version": "scheduling.k8s.io/v1",
        "kind": "PriorityClass",
        "schema": ""
      }
    },
    {
      "id": "8aaf4f90-859c-4f4e-9cc3-98e5a752ae86",
      "schemaVersion": "components.meshery.io/v1beta1",
      "version": "v1.0.0",
      "displayName": "default-vald-discoverer-priority",
      "description": "",
      "format": "",
      "model": {
        "id": "b3f5bc0d-30f7-607d-6c73-784ddde6cad8",
        "schemaVersion": "models.meshery.io/v1beta1",
        "version": "v1.0.0",
        "name": "kubernetes",
        "displayName": "Kubernetes",
        "status": "enabled",
        "registrant": {
          "id": "5bc80e3c-5d43-9eb4-d16c-78a2769247a6",
          "name": "Github",
          "credential_id": "00000000-0000-0000-0000-000000000000",
          "type": "registry",
          "sub_type": "",
          "kind": "github",
          "status": "registered",
          "user_id": "00000000-0000-0000-0000-000000000000",
          "created_at": "2025-09-30T16:42:57.107248085Z",
          "updated_at": "2025-09-30T16:42:57.107248085Z",
          "deleted_at": "0001-01-01T00:00:00Z",
          "schemaVersion": ""
        },
        "connection_id": "5bc80e3c-5d43-9eb4-d16c-78a2769247a6",
        "category": {
          "id": "9ca27d0d-66ce-42a9-8c85-6236563f2ddb",
          "name": "Orchestration \u0026 Management"
        },
        "subCategory": "Scheduling \u0026 Orchestration",
        "metadata": {
          "isAnnotation": false,
          "primaryColor": "#326CE5",
          "secondaryColor": "#7aa1f0",
          "shape": "circle",
          "styleOverrides": "",
          "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/kubernetes-color.svg",
          "svgComplete": "",
          "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/kubernetes-white.svg"
        },
        "model": {
          "version": "v1.32.0-alpha.3"
        },
        "components_count": 0,
        "relationships_count": 0,
        "components": null,
        "relationships": null
      },
      "styles": {
        "position": {
          "x": 1092.24609375,
          "y": 427.7548828124999
        },
        "primaryColor": "#326CE5",
        "secondaryColor": "#7aa1f0",
        "shape": "right-rhomboid",
        "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/priorityclass-color.svg",
        "svgComplete": "",
        "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/priorityclass-white.svg"
      },
      "capabilities": [],
      "status": "enabled",
      "metadata": {
        "configurationUISchema": "",
        "genealogy": "",
        "instanceDetails": null,
        "isAnnotation": false,
        "isNamespaced": false,
        "published": false,
        "source_uri": "git://github.com/kubernetes/kubernetes/master/api/openapi-spec/v3"
      },
      "configuration": {
        "description": "A priority class for Vald discoverer.",
        "globalDefault": false,
        "metadata": {
          "labels": {
            "app.kubernetes.io/component": "discoverer",
            "app.kubernetes.io/instance": "vald",
            "app.kubernetes.io/managed-by": "Helm",
            "app.kubernetes.io/name": "vald",
            "app.kubernetes.io/version": "v1.7.17",
            "helm.sh/chart": "vald-v1.7.17"
          },
          "name": "default-vald-discoverer-priority"
        },
        "value": 1000000
      },
      "component": {
        "version": "scheduling.k8s.io/v1",
        "kind": "PriorityClass",
        "schema": ""
      }
    },
    {
      "id": "23447dae-d22a-490b-b261-409c2f356e60",
      "schemaVersion": "components.meshery.io/v1beta1",
      "version": "v1.0.0",
      "displayName": "default-vald-manager-index-priority",
      "description": "",
      "format": "",
      "model": {
        "id": "b3f5bc0d-30f7-607d-6c73-784ddde6cad8",
        "schemaVersion": "models.meshery.io/v1beta1",
        "version": "v1.0.0",
        "name": "kubernetes",
        "displayName": "Kubernetes",
        "status": "enabled",
        "registrant": {
          "id": "5bc80e3c-5d43-9eb4-d16c-78a2769247a6",
          "name": "Github",
          "credential_id": "00000000-0000-0000-0000-000000000000",
          "type": "registry",
          "sub_type": "",
          "kind": "github",
          "status": "registered",
          "user_id": "00000000-0000-0000-0000-000000000000",
          "created_at": "2025-09-30T16:42:57.107248085Z",
          "updated_at": "2025-09-30T16:42:57.107248085Z",
          "deleted_at": "0001-01-01T00:00:00Z",
          "schemaVersion": ""
        },
        "connection_id": "5bc80e3c-5d43-9eb4-d16c-78a2769247a6",
        "category": {
          "id": "9ca27d0d-66ce-42a9-8c85-6236563f2ddb",
          "name": "Orchestration \u0026 Management"
        },
        "subCategory": "Scheduling \u0026 Orchestration",
        "metadata": {
          "isAnnotation": false,
          "primaryColor": "#326CE5",
          "secondaryColor": "#7aa1f0",
          "shape": "circle",
          "styleOverrides": "",
          "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/kubernetes-color.svg",
          "svgComplete": "",
          "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/kubernetes-white.svg"
        },
        "model": {
          "version": "v1.32.0-alpha.3"
        },
        "components_count": 0,
        "relationships_count": 0,
        "components": null,
        "relationships": null
      },
      "styles": {
        "position": {
          "x": 840.24609375,
          "y": 663.7548828125
        },
        "primaryColor": "#326CE5",
        "secondaryColor": "#7aa1f0",
        "shape": "right-rhomboid",
        "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/priorityclass-color.svg",
        "svgComplete": "",
        "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/priorityclass-white.svg"
      },
      "capabilities": [],
      "status": "enabled",
      "metadata": {
        "configurationUISchema": "",
        "genealogy": "",
        "instanceDetails": null,
        "isAnnotation": false,
        "isNamespaced": false,
        "published": false,
        "source_uri": "git://github.com/kubernetes/kubernetes/master/api/openapi-spec/v3"
      },
      "configuration": {
        "description": "A priority class for Vald index manager.",
        "globalDefault": false,
        "metadata": {
          "labels": {
            "app.kubernetes.io/component": "manager-index",
            "app.kubernetes.io/instance": "vald",
            "app.kubernetes.io/managed-by": "Helm",
            "app.kubernetes.io/name": "vald",
            "app.kubernetes.io/version": "v1.7.17",
            "helm.sh/chart": "vald-v1.7.17"
          },
          "name": "default-vald-manager-index-priority"
        },
        "value": 1000000
      },
      "component": {
        "version": "scheduling.k8s.io/v1",
        "kind": "PriorityClass",
        "schema": ""
      }
    },
    {
      "id": "aed26cd8-f998-4bf4-bad7-3956b9986d3f",
      "schemaVersion": "components.meshery.io/v1beta1",
      "version": "v1.0.0",
      "displayName": "default-vald-lb-gateway-priority",
      "description": "",
      "format": "",
      "model": {
        "id": "b3f5bc0d-30f7-607d-6c73-784ddde6cad8",
        "schemaVersion": "models.meshery.io/v1beta1",
        "version": "v1.0.0",
        "name": "kubernetes",
        "displayName": "Kubernetes",
        "status": "enabled",
        "registrant": {
          "id": "5bc80e3c-5d43-9eb4-d16c-78a2769247a6",
          "name": "Github",
          "credential_id": "00000000-0000-0000-0000-000000000000",
          "type": "registry",
          "sub_type": "",
          "kind": "github",
          "status": "registered",
          "user_id": "00000000-0000-0000-0000-000000000000",
          "created_at": "2025-09-30T16:42:57.107248085Z",
          "updated_at": "2025-09-30T16:42:57.107248085Z",
          "deleted_at": "0001-01-01T00:00:00Z",
          "schemaVersion": ""
        },
        "connection_id": "5bc80e3c-5d43-9eb4-d16c-78a2769247a6",
        "category": {
          "id": "9ca27d0d-66ce-42a9-8c85-6236563f2ddb",
          "name": "Orchestration \u0026 Management"
        },
        "subCategory": "Scheduling \u0026 Orchestration",
        "metadata": {
          "isAnnotation": false,
          "primaryColor": "#326CE5",
          "secondaryColor": "#7aa1f0",
          "shape": "circle",
          "styleOverrides": "",
          "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/kubernetes-color.svg",
          "svgComplete": "",
          "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/kubernetes-white.svg"
        },
        "model": {
          "version": "v1.32.0-alpha.3"
        },
        "components_count": 0,
        "relationships_count": 0,
        "components": null,
        "relationships": null
      },
      "styles": {
        "position": {
          "x": 748.24609375,
          "y": 663.7548828125
        },
        "primaryColor": "#326CE5",
        "secondaryColor": "#7aa1f0",
        "shape": "right-rhomboid",
        "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/priorityclass-color.svg",
        "svgComplete": "",
        "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/priorityclass-white.svg"
      },
      "capabilities": [],
      "status": "enabled",
      "metadata": {
        "configurationUISchema": "",
        "genealogy": "",
        "instanceDetails": null,
        "isAnnotation": false,
        "isNamespaced": false,
        "published": false,
        "source_uri": "git://github.com/kubernetes/kubernetes/master/api/openapi-spec/v3"
      },
      "configuration": {
        "description": "A priority class for Vald lb gateway.",
        "globalDefault": false,
        "metadata": {
          "labels": {
            "app.kubernetes.io/component": "gateway-lb",
            "app.kubernetes.io/instance": "vald",
            "app.kubernetes.io/managed-by": "Helm",
            "app.kubernetes.io/name": "vald",
            "app.kubernetes.io/version": "v1.7.17",
            "helm.sh/chart": "vald-v1.7.17"
          },
          "name": "default-vald-lb-gateway-priority"
        },
        "value": 1000000
      },
      "component": {
        "version": "scheduling.k8s.io/v1",
        "kind": "PriorityClass",
        "schema": ""
      }
    },
    {
      "id": "1e5a9a96-94c1-4b61-9a77-b7064b7c4c17",
      "schemaVersion": "components.meshery.io/v1beta1",
      "version": "v1.0.0",
      "displayName": "vald-agent",
      "description": "",
      "format": "",
      "model": {
        "id": "b3f5bc0d-30f7-607d-6c73-784ddde6cad8",
        "schemaVersion": "models.meshery.io/v1beta1",
        "version": "v1.0.0",
        "name": "kubernetes",
        "displayName": "Kubernetes",
        "status": "enabled",
        "registrant": {
          "id": "5bc80e3c-5d43-9eb4-d16c-78a2769247a6",
          "name": "Github",
          "credential_id": "00000000-0000-0000-0000-000000000000",
          "type": "registry",
          "sub_type": "",
          "kind": "github",
          "status": "registered",
          "user_id": "00000000-0000-0000-0000-000000000000",
          "created_at": "2025-09-30T16:42:57.107248085Z",
          "updated_at": "2025-09-30T16:42:57.107248085Z",
          "deleted_at": "0001-01-01T00:00:00Z",
          "schemaVersion": ""
        },
        "connection_id": "5bc80e3c-5d43-9eb4-d16c-78a2769247a6",
        "category": {
          "id": "9ca27d0d-66ce-42a9-8c85-6236563f2ddb",
          "name": "Orchestration \u0026 Management"
        },
        "subCategory": "Scheduling \u0026 Orchestration",
        "metadata": {
          "isAnnotation": false,
          "primaryColor": "#326CE5",
          "secondaryColor": "#7aa1f0",
          "shape": "circle",
          "styleOverrides": "",
          "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/kubernetes-color.svg",
          "svgComplete": "",
          "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/kubernetes-white.svg"
        },
        "model": {
          "version": "v1.32.0-alpha.3"
        },
        "components_count": 0,
        "relationships_count": 0,
        "components": null,
        "relationships": null
      },
      "styles": {
        "background-position-y": "4.5",
        "height": 20,
        "padding": 12,
        "position": {
          "x": 884.24609375,
          "y": 435.7548828124999
        },
        "primaryColor": "#326CE5",
        "secondaryColor": "#7aa1f0",
        "shape": "round-triangle",
        "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/service-color.svg",
        "svgComplete": "",
        "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/service-white.svg",
        "width": 20
      },
      "capabilities": [],
      "status": "enabled",
      "metadata": {
        "configurationUISchema": "",
        "genealogy": "",
        "instanceDetails": null,
        "isAnnotation": false,
        "isNamespaced": true,
        "published": false,
        "source_uri": "git://github.com/kubernetes/kubernetes/master/api/openapi-spec/v3"
      },
      "configuration": {
        "metadata": {
          "labels": {
            "app.kubernetes.io/component": "agent",
            "app.kubernetes.io/instance": "vald",
            "app.kubernetes.io/managed-by": "Helm",
            "app.kubernetes.io/name": "vald",
            "app.kubernetes.io/version": "v1.7.17",
            "helm.sh/chart": "vald-v1.7.17"
          },
          "name": "vald-agent"
        },
        "spec": {
          "clusterIP": "None",
          "ports": [
            {
              "name": "grpc",
              "port": 8081,
              "protocol": "TCP",
              "targetPort": 8081
            },
            {
              "name": "readiness",
              "port": 3001,
              "protocol": "TCP",
              "targetPort": 3001
            }
          ],
          "selector": {
            "app.kubernetes.io/component": "agent",
            "app.kubernetes.io/name": "vald"
          },
          "type": "ClusterIP"
        }
      },
      "component": {
        "version": "v1",
        "kind": "Service",
        "schema": ""
      }
    },
    {
      "id": "2e455f39-70b3-4a6c-be31-549c9080bd5e",
      "schemaVersion": "components.meshery.io/v1beta1",
      "version": "v1.0.0",
      "displayName": "vald-discoverer",
      "description": "",
      "format": "",
      "model": {
        "id": "b3f5bc0d-30f7-607d-6c73-784ddde6cad8",
        "schemaVersion": "models.meshery.io/v1beta1",
        "version": "v1.0.0",
        "name": "kubernetes",
        "displayName": "Kubernetes",
        "status": "enabled",
        "registrant": {
          "id": "5bc80e3c-5d43-9eb4-d16c-78a2769247a6",
          "name": "Github",
          "credential_id": "00000000-0000-0000-0000-000000000000",
          "type": "registry",
          "sub_type": "",
          "kind": "github",
          "status": "registered",
          "user_id": "00000000-0000-0000-0000-000000000000",
          "created_at": "2025-09-30T16:42:57.107248085Z",
          "updated_at": "2025-09-30T16:42:57.107248085Z",
          "deleted_at": "0001-01-01T00:00:00Z",
          "schemaVersion": ""
        },
        "connection_id": "5bc80e3c-5d43-9eb4-d16c-78a2769247a6",
        "category": {
          "id": "9ca27d0d-66ce-42a9-8c85-6236563f2ddb",
          "name": "Orchestration \u0026 Management"
        },
        "subCategory": "Scheduling \u0026 Orchestration",
        "metadata": {
          "isAnnotation": false,
          "primaryColor": "#326CE5",
          "secondaryColor": "#7aa1f0",
          "shape": "circle",
          "styleOverrides": "",
          "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/kubernetes-color.svg",
          "svgComplete": "",
          "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/kubernetes-white.svg"
        },
        "model": {
          "version": "v1.32.0-alpha.3"
        },
        "components_count": 0,
        "relationships_count": 0,
        "components": null,
        "relationships": null
      },
      "styles": {
        "background-position-y": "4.5",
        "height": 20,
        "padding": 12,
        "position": {
          "x": 992.24609375,
          "y": 435.7548828124999
        },
        "primaryColor": "#326CE5",
        "secondaryColor": "#7aa1f0",
        "shape": "round-triangle",
        "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/service-color.svg",
        "svgComplete": "",
        "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/service-white.svg",
        "width": 20
      },
      "capabilities": [],
      "status": "enabled",
      "metadata": {
        "configurationUISchema": "",
        "genealogy": "",
        "instanceDetails": null,
        "isAnnotation": false,
        "isNamespaced": true,
        "published": false,
        "source_uri": "git://github.com/kubernetes/kubernetes/master/api/openapi-spec/v3"
      },
      "configuration": {
        "metadata": {
          "labels": {
            "app.kubernetes.io/component": "discoverer",
            "app.kubernetes.io/instance": "vald",
            "app.kubernetes.io/managed-by": "Helm",
            "app.kubernetes.io/name": "vald",
            "app.kubernetes.io/version": "v1.7.17",
            "helm.sh/chart": "vald-v1.7.17"
          },
          "name": "vald-discoverer"
        },
        "spec": {
          "clusterIP": "None",
          "ports": [
            {
              "name": "grpc",
              "port": 8081,
              "protocol": "TCP",
              "targetPort": 8081
            },
            {
              "name": "readiness",
              "port": 3001,
              "protocol": "TCP",
              "targetPort": 3001
            }
          ],
          "selector": {
            "app.kubernetes.io/component": "discoverer",
            "app.kubernetes.io/name": "vald"
          },
          "type": "ClusterIP"
        }
      },
      "component": {
        "version": "v1",
        "kind": "Service",
        "schema": ""
      }
    },
    {
      "id": "84c3dde3-5d6c-46e5-b5ec-b75dc147ed6e",
      "schemaVersion": "components.meshery.io/v1beta1",
      "version": "v1.0.0",
      "displayName": "vald-lb-gateway",
      "description": "",
      "format": "",
      "model": {
        "id": "b3f5bc0d-30f7-607d-6c73-784ddde6cad8",
        "schemaVersion": "models.meshery.io/v1beta1",
        "version": "v1.0.0",
        "name": "kubernetes",
        "displayName": "Kubernetes",
        "status": "enabled",
        "registrant": {
          "id": "5bc80e3c-5d43-9eb4-d16c-78a2769247a6",
          "name": "Github",
          "credential_id": "00000000-0000-0000-0000-000000000000",
          "type": "registry",
          "sub_type": "",
          "kind": "github",
          "status": "registered",
          "user_id": "00000000-0000-0000-0000-000000000000",
          "created_at": "2025-09-30T16:42:57.107248085Z",
          "updated_at": "2025-09-30T16:42:57.107248085Z",
          "deleted_at": "0001-01-01T00:00:00Z",
          "schemaVersion": ""
        },
        "connection_id": "5bc80e3c-5d43-9eb4-d16c-78a2769247a6",
        "category": {
          "id": "9ca27d0d-66ce-42a9-8c85-6236563f2ddb",
          "name": "Orchestration \u0026 Management"
        },
        "subCategory": "Scheduling \u0026 Orchestration",
        "metadata": {
          "isAnnotation": false,
          "primaryColor": "#326CE5",
          "secondaryColor": "#7aa1f0",
          "shape": "circle",
          "styleOverrides": "",
          "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/kubernetes-color.svg",
          "svgComplete": "",
          "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/kubernetes-white.svg"
        },
        "model": {
          "version": "v1.32.0-alpha.3"
        },
        "components_count": 0,
        "relationships_count": 0,
        "components": null,
        "relationships": null
      },
      "styles": {
        "background-position-y": "4.5",
        "height": 20,
        "padding": 12,
        "position": {
          "x": 756.24609375,
          "y": 563.7548828125
        },
        "primaryColor": "#326CE5",
        "secondaryColor": "#7aa1f0",
        "shape": "round-triangle",
        "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/service-color.svg",
        "svgComplete": "",
        "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/service-white.svg",
        "width": 20
      },
      "capabilities": [],
      "status": "enabled",
      "metadata": {
        "configurationUISchema": "",
        "genealogy": "",
        "instanceDetails": null,
        "isAnnotation": false,
        "isNamespaced": true,
        "published": false,
        "source_uri": "git://github.com/kubernetes/kubernetes/master/api/openapi-spec/v3"
      },
      "configuration": {
        "metadata": {
          "labels": {
            "app.kubernetes.io/component": "gateway-lb",
            "app.kubernetes.io/instance": "vald",
            "app.kubernetes.io/managed-by": "Helm",
            "app.kubernetes.io/name": "vald",
            "app.kubernetes.io/version": "v1.7.17",
            "helm.sh/chart": "vald-v1.7.17"
          },
          "name": "vald-lb-gateway"
        },
        "spec": {
          "clusterIP": "None",
          "ports": [
            {
              "name": "grpc",
              "port": 8081,
              "protocol": "TCP",
              "targetPort": 8081
            },
            {
              "name": "readiness",
              "port": 3001,
              "protocol": "TCP",
              "targetPort": 3001
            }
          ],
          "selector": {
            "app.kubernetes.io/component": "gateway-lb",
            "app.kubernetes.io/name": "vald"
          },
          "type": "ClusterIP"
        }
      },
      "component": {
        "version": "v1",
        "kind": "Service",
        "schema": ""
      }
    },
    {
      "id": "0ee3b298-2bb9-4366-8164-4f68f30e702f",
      "schemaVersion": "components.meshery.io/v1beta1",
      "version": "v1.0.0",
      "displayName": "vald-manager-index",
      "description": "",
      "format": "",
      "model": {
        "id": "b3f5bc0d-30f7-607d-6c73-784ddde6cad8",
        "schemaVersion": "models.meshery.io/v1beta1",
        "version": "v1.0.0",
        "name": "kubernetes",
        "displayName": "Kubernetes",
        "status": "enabled",
        "registrant": {
          "id": "5bc80e3c-5d43-9eb4-d16c-78a2769247a6",
          "name": "Github",
          "credential_id": "00000000-0000-0000-0000-000000000000",
          "type": "registry",
          "sub_type": "",
          "kind": "github",
          "status": "registered",
          "user_id": "00000000-0000-0000-0000-000000000000",
          "created_at": "2025-09-30T16:42:57.107248085Z",
          "updated_at": "2025-09-30T16:42:57.107248085Z",
          "deleted_at": "0001-01-01T00:00:00Z",
          "schemaVersion": ""
        },
        "connection_id": "5bc80e3c-5d43-9eb4-d16c-78a2769247a6",
        "category": {
          "id": "9ca27d0d-66ce-42a9-8c85-6236563f2ddb",
          "name": "Orchestration \u0026 Management"
        },
        "subCategory": "Scheduling \u0026 Orchestration",
        "metadata": {
          "isAnnotation": false,
          "primaryColor": "#326CE5",
          "secondaryColor": "#7aa1f0",
          "shape": "circle",
          "styleOverrides": "",
          "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/kubernetes-color.svg",
          "svgComplete": "",
          "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/kubernetes-white.svg"
        },
        "model": {
          "version": "v1.32.0-alpha.3"
        },
        "components_count": 0,
        "relationships_count": 0,
        "components": null,
        "relationships": null
      },
      "styles": {
        "background-position-y": "4.5",
        "height": 20,
        "padding": 12,
        "position": {
          "x": 864.24609375,
          "y": 563.7548828125
        },
        "primaryColor": "#326CE5",
        "secondaryColor": "#7aa1f0",
        "shape": "round-triangle",
        "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/service-color.svg",
        "svgComplete": "",
        "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/service-white.svg",
        "width": 20
      },
      "capabilities": [],
      "status": "enabled",
      "metadata": {
        "configurationUISchema": "",
        "genealogy": "",
        "instanceDetails": null,
        "isAnnotation": false,
        "isNamespaced": true,
        "published": false,
        "source_uri": "git://github.com/kubernetes/kubernetes/master/api/openapi-spec/v3"
      },
      "configuration": {
        "metadata": {
          "labels": {
            "app.kubernetes.io/component": "manager-index",
            "app.kubernetes.io/instance": "vald",
            "app.kubernetes.io/managed-by": "Helm",
            "app.kubernetes.io/name": "vald",
            "app.kubernetes.io/version": "v1.7.17",
            "helm.sh/chart": "vald-v1.7.17"
          },
          "name": "vald-manager-index"
        },
        "spec": {
          "clusterIP": "None",
          "ports": [
            {
              "name": "grpc",
              "port": 8081,
              "protocol": "TCP",
              "targetPort": 8081
            },
            {
              "name": "readiness",
              "port": 3001,
              "protocol": "TCP",
              "targetPort": 3001
            }
          ],
          "selector": {
            "app.kubernetes.io/component": "manager-index",
            "app.kubernetes.io/name": "vald"
          },
          "type": "ClusterIP"
        }
      },
      "component": {
        "version": "v1",
        "kind": "Service",
        "schema": ""
      }
    },
    {
      "id": "13a5a57a-4c58-409f-9087-f3d6506980b5",
      "schemaVersion": "components.meshery.io/v1beta1",
      "version": "v1.0.0",
      "displayName": "vald",
      "description": "",
      "format": "",
      "model": {
        "id": "b3f5bc0d-30f7-607d-6c73-784ddde6cad8",
        "schemaVersion": "models.meshery.io/v1beta1",
        "version": "v1.0.0",
        "name": "kubernetes",
        "displayName": "Kubernetes",
        "status": "enabled",
        "registrant": {
          "id": "5bc80e3c-5d43-9eb4-d16c-78a2769247a6",
          "name": "Github",
          "credential_id": "00000000-0000-0000-0000-000000000000",
          "type": "registry",
          "sub_type": "",
          "kind": "github",
          "status": "registered",
          "user_id": "00000000-0000-0000-0000-000000000000",
          "created_at": "2025-09-30T16:42:57.107248085Z",
          "updated_at": "2025-09-30T16:42:57.107248085Z",
          "deleted_at": "0001-01-01T00:00:00Z",
          "schemaVersion": ""
        },
        "connection_id": "5bc80e3c-5d43-9eb4-d16c-78a2769247a6",
        "category": {
          "id": "9ca27d0d-66ce-42a9-8c85-6236563f2ddb",
          "name": "Orchestration \u0026 Management"
        },
        "subCategory": "Scheduling \u0026 Orchestration",
        "metadata": {
          "isAnnotation": false,
          "primaryColor": "#326CE5",
          "secondaryColor": "#7aa1f0",
          "shape": "circle",
          "styleOverrides": "",
          "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/kubernetes-color.svg",
          "svgComplete": "",
          "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/kubernetes-white.svg"
        },
        "model": {
          "version": "v1.32.0-alpha.3"
        },
        "components_count": 0,
        "relationships_count": 0,
        "components": null,
        "relationships": null
      },
      "styles": {
        "position": {
          "x": 1150.24609375,
          "y": 555.7548828125
        },
        "primaryColor": "#326CE5",
        "secondaryColor": "#7aa1f0",
        "shape": "bottom-round-rectangle",
        "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/serviceaccount-color.svg",
        "svgComplete": "",
        "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/serviceaccount-white.svg"
      },
      "capabilities": [],
      "status": "enabled",
      "metadata": {
        "configurationUISchema": "",
        "genealogy": "",
        "instanceDetails": null,
        "isAnnotation": false,
        "isNamespaced": true,
        "published": false,
        "source_uri": "git://github.com/kubernetes/kubernetes/master/api/openapi-spec/v3"
      },
      "configuration": {
        "metadata": {
          "labels": {
            "app.kubernetes.io/component": "discoverer",
            "app.kubernetes.io/instance": "vald",
            "app.kubernetes.io/managed-by": "Helm",
            "app.kubernetes.io/name": "vald",
            "app.kubernetes.io/version": "v1.7.17",
            "helm.sh/chart": "vald-v1.7.17"
          },
          "name": "vald"
        }
      },
      "component": {
        "version": "v1",
        "kind": "ServiceAccount",
        "schema": ""
      }
    },
    {
      "id": "2b960697-8a02-4548-bb57-862af1e7b0ed",
      "schemaVersion": "components.meshery.io/v1beta1",
      "version": "v1.0.0",
      "displayName": "vald-agent",
      "description": "",
      "format": "",
      "model": {
        "id": "b3f5bc0d-30f7-607d-6c73-784ddde6cad8",
        "schemaVersion": "models.meshery.io/v1beta1",
        "version": "v1.0.0",
        "name": "kubernetes",
        "displayName": "Kubernetes",
        "status": "enabled",
        "registrant": {
          "id": "5bc80e3c-5d43-9eb4-d16c-78a2769247a6",
          "name": "Github",
          "credential_id": "00000000-0000-0000-0000-000000000000",
          "type": "registry",
          "sub_type": "",
          "kind": "github",
          "status": "registered",
          "user_id": "00000000-0000-0000-0000-000000000000",
          "created_at": "2025-09-30T16:42:57.107248085Z",
          "updated_at": "2025-09-30T16:42:57.107248085Z",
          "deleted_at": "0001-01-01T00:00:00Z",
          "schemaVersion": ""
        },
        "connection_id": "5bc80e3c-5d43-9eb4-d16c-78a2769247a6",
        "category": {
          "id": "9ca27d0d-66ce-42a9-8c85-6236563f2ddb",
          "name": "Orchestration \u0026 Management"
        },
        "subCategory": "Scheduling \u0026 Orchestration",
        "metadata": {
          "isAnnotation": false,
          "primaryColor": "#326CE5",
          "secondaryColor": "#7aa1f0",
          "shape": "circle",
          "styleOverrides": "",
          "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/kubernetes-color.svg",
          "svgComplete": "",
          "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/kubernetes-white.svg"
        },
        "model": {
          "version": "v1.32.0-alpha.3"
        },
        "components_count": 0,
        "relationships_count": 0,
        "components": null,
        "relationships": null
      },
      "styles": {
        "background-opacity": 0.2,
        "height": 15,
        "position": {
          "x": 1093.2468186494532,
          "y": 707.2550598228315
        },
        "primaryColor": "#326CE5",
        "secondaryColor": "#7aa1f0",
        "shape": "round-rectangle",
        "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/statefulset-color.svg",
        "svgComplete": "ui/public/static/img/meshmodels/kubernetes/complete/statefulset-complete.svg",
        "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/statefulset-white.svg",
        "width": 15,
        "x": 12,
        "y": 20
      },
      "capabilities": [],
      "status": "enabled",
      "metadata": {
        "configurationUISchema": "",
        "genealogy": "parent",
        "instanceDetails": null,
        "isAnnotation": false,
        "isNamespaced": true,
        "published": false,
        "source_uri": "git://github.com/kubernetes/kubernetes/master/api/openapi-spec/v3"
      },
      "configuration": {
        "metadata": {
          "labels": {
            "app": "vald-agent",
            "app.kubernetes.io/component": "agent",
            "app.kubernetes.io/instance": "vald",
            "app.kubernetes.io/managed-by": "Helm",
            "app.kubernetes.io/name": "vald",
            "app.kubernetes.io/version": "v1.7.17",
            "helm.sh/chart": "vald-v1.7.17"
          },
          "name": "vald-agent",
          "namespace": "default"
        },
        "spec": {
          "podManagementPolicy": "OrderedReady",
          "replicas": 20,
          "revisionHistoryLimit": 2,
          "selector": {
            "matchLabels": {
              "app": "vald-agent"
            }
          },
          "serviceName": "vald-agent",
          "template": {
            "metadata": {
              "creationTimestamp": "2025-10-02T17:12:00.000Z",
              "labels": {
                "app": "vald-agent",
                "app.kubernetes.io/component": "agent",
                "app.kubernetes.io/instance": "vald",
                "app.kubernetes.io/name": "vald"
              }
            },
            "spec": {
              "affinity": {
                "nodeAffinity": {
                  "preferredDuringSchedulingIgnoredDuringExecution": []
                },
                "podAffinity": {
                  "preferredDuringSchedulingIgnoredDuringExecution": [],
                  "requiredDuringSchedulingIgnoredDuringExecution": []
                },
                "podAntiAffinity": {
                  "preferredDuringSchedulingIgnoredDuringExecution": [
                    {
                      "podAffinityTerm": {
                        "labelSelector": {
                          "matchExpressions": [
                            {
                              "key": "app",
                              "operator": "In",
                              "values": [
                                "vald-agent"
                              ]
                            }
                          ]
                        },
                        "topologyKey": "kubernetes.io/hostname"
                      },
                      "weight": 100
                    }
                  ],
                  "requiredDuringSchedulingIgnoredDuringExecution": []
                }
              },
              "containers": [
                {
                  "env": [
                    {
                      "name": "MY_NODE_NAME",
                      "valueFrom": {
                        "fieldRef": {
                          "fieldPath": "spec.nodeName"
                        }
                      }
                    },
                    {
                      "name": "MY_POD_NAME",
                      "valueFrom": {
                        "fieldRef": {
                          "fieldPath": "metadata.name"
                        }
                      }
                    },
                    {
                      "name": "MY_POD_NAMESPACE",
                      "valueFrom": {
                        "fieldRef": {
                          "fieldPath": "metadata.namespace"
                        }
                      }
                    }
                  ],
                  "image": "vdaas/vald-agent-ngt:v1.7.17",
                  "imagePullPolicy": "Always",
                  "livenessProbe": {
                    "failureThreshold": 2,
                    "httpGet": {
                      "path": "/liveness",
                      "port": "liveness",
                      "scheme": "HTTP"
                    },
                    "initialDelaySeconds": 5,
                    "periodSeconds": 3,
                    "successThreshold": 1,
                    "timeoutSeconds": 2
                  },
                  "name": "vald-agent",
                  "ports": [
                    {
                      "containerPort": 3000,
                      "name": "liveness",
                      "protocol": "TCP"
                    },
                    {
                      "containerPort": 3001,
                      "name": "readiness",
                      "protocol": "TCP"
                    },
                    {
                      "containerPort": 8081,
                      "name": "grpc",
                      "protocol": "TCP"
                    }
                  ],
                  "readinessProbe": {
                    "failureThreshold": 2,
                    "httpGet": {
                      "path": "/readiness",
                      "port": "readiness",
                      "scheme": "HTTP"
                    },
                    "initialDelaySeconds": 10,
                    "periodSeconds": 3,
                    "successThreshold": 1,
                    "timeoutSeconds": 2
                  },
                  "resources": {
                    "requests": {
                      "cpu": "300m",
                      "memory": "4Gi"
                    }
                  },
                  "securityContext": {
                    "allowPrivilegeEscalation": false,
                    "capabilities": {
                      "drop": [
                        "ALL"
                      ]
                    },
                    "privileged": false,
                    "readOnlyRootFilesystem": false,
                    "runAsGroup": 65532,
                    "runAsNonRoot": true,
                    "runAsUser": 65532
                  },
                  "startupProbe": {
                    "failureThreshold": 200,
                    "httpGet": {
                      "path": "/liveness",
                      "port": "liveness",
                      "scheme": "HTTP"
                    },
                    "initialDelaySeconds": 5,
                    "periodSeconds": 5,
                    "successThreshold": 1,
                    "timeoutSeconds": 2
                  },
                  "terminationMessagePath": "/dev/termination-log",
                  "terminationMessagePolicy": "File",
                  "volumeMounts": [
                    {
                      "mountPath": "/etc/server/",
                      "name": "vald-agent-config"
                    }
                  ]
                }
              ],
              "dnsPolicy": "ClusterFirst",
              "priorityClassName": "default-vald-agent-priority",
              "restartPolicy": "Always",
              "schedulerName": "default-scheduler",
              "securityContext": {
                "fsGroup": 65532,
                "fsGroupChangePolicy": "OnRootMismatch",
                "runAsGroup": 65532,
                "runAsNonRoot": true,
                "runAsUser": 65532
              },
              "terminationGracePeriodSeconds": 120,
              "volumes": [
                {
                  "configMap": {
                    "defaultMode": 420,
                    "name": "vald-agent-config"
                  },
                  "name": "vald-agent-config"
                }
              ]
            }
          },
          "updateStrategy": {
            "rollingUpdate": {
              "partition": 0
            },
            "type": "RollingUpdate"
          }
        }
      },
      "component": {
        "version": "apps/v1",
        "kind": "StatefulSet",
        "schema": ""
      }
    },
    {
      "id": "de0dbc83-4c23-410c-b258-0415e283acc7",
      "schemaVersion": "components.meshery.io/v1beta1",
      "version": "v1.0.0",
      "displayName": "",
      "description": "",
      "format": "JSON",
      "model": {
        "id": "6b49e0cc-6d83-f917-b2bd-30b69792bb20",
        "schemaVersion": "models.meshery.io/v1beta1",
        "version": "v1.0.0",
        "name": "meshery-core",
        "displayName": "Meshery Core",
        "status": "enabled",
        "registrant": {
          "id": "13df38ce-edc0-8c01-ed9f-0414912a43fd",
          "name": "meshery",
          "type": "registry",
          "sub_type": "",
          "kind": "meshery",
          "status": "registered",
          "created_at": "2025-09-30T16:42:54.564710042Z",
          "updated_at": "2025-09-30T16:42:54.564710042Z",
          "deleted_at": null,
          "schemaVersion": ""
        },
        "connection_id": "13df38ce-edc0-8c01-ed9f-0414912a43fd",
        "category": {
          "id": "9ca27d0d-66ce-42a9-8c85-6236563f2ddb",
          "name": "Orchestration \u0026 Management"
        },
        "subCategory": "Application Definition \u0026 Image Build",
        "metadata": {
          "isAnnotation": false,
          "primaryColor": "#00B39F",
          "secondaryColor": "#00D3A9",
          "shape": "circle",
          "styleOverrides": "",
          "svgColor": "ui/public/static/img/meshmodels/meshery-core/color/meshery-core-color.svg",
          "svgComplete": "",
          "svgWhite": "ui/public/static/img/meshmodels/meshery-core/white/meshery-core-white.svg"
        },
        "model": {
          "version": "0.7.2"
        },
        "components_count": 0,
        "relationships_count": 0,
        "components": null,
        "relationships": null
      },
      "styles": {
        "background-image": "none",
        "background-opacity": 0,
        "body-text": "OTLP (gRPC)",
        "body-text-color": "rgb(255,255,255)",
        "body-text-font-family": "Qanelas Soft",
        "body-text-font-size": 6,
        "body-text-font-weight": "400",
        "body-text-horizontal-align": "center",
        "body-text-text-decoration": "none",
        "body-text-vertical-align": "center",
        "border-color": "rgb(255,255,255)",
        "border-style": "dashed",
        "border-width": 1,
        "data": {
          "label": ""
        },
        "height": 6.9539943,
        "opacity": 1,
        "padding": 6,
        "position": {
          "x": 222.68763098902164,
          "y": -71.61241152320507
        },
        "primaryColor": "rgb(235,192,23)",
        "secondaryColor": "#FFDE00",
        "shape": "rectangle",
        "svgColor": "ui/public/static/img/meshmodels/meshery-core/color/textbox-color.svg",
        "svgComplete": "",
        "svgWhite": "ui/public/static/img/meshmodels/meshery-core/white/textbox-white.svg",
        "width": 44.115322,
        "z-index": 4
      },
      "capabilities": [],
      "status": "enabled",
      "metadata": {
        "configurationUISchema": "",
        "genealogy": "",
        "hasInvalidSchema": true,
        "instanceDetails": null,
        "isAnnotation": true,
        "isNamespaced": false,
        "published": false
      },
      "configuration": {},
      "component": {
        "version": "core.meshery.io/v1alpha1",
        "kind": "TextBox",
        "schema": ""
      }
    }
  ],
  "preferences": {
    "layers": {
      "relationships": {
        "hierarchical-sibling-matchlabels": false
      }
    }
  },
  "relationships": [
    {
      "id": "3c97b1f1-2255-424c-9e9e-33e8d9983c1e",
      "evaluationQuery": "",
      "kind": "hierarchical",
      "metadata": {
        "description": "Namespace to namespaced components",
        "styles": {
          "primaryColor": "",
          "svgColor": "",
          "svgWhite": ""
        },
        "isAnnotation": false
      },
      "model": {
        "id": "b3f5bc0d-30f7-607d-6c73-784ddde6cad8",
        "schemaVersion": "models.meshery.io/v1beta1",
        "version": "v1.0.0",
        "name": "kubernetes",
        "displayName": "Kubernetes",
        "status": "enabled",
        "registrant": {
          "id": "00000000-0000-0000-0000-000000000000",
          "name": "",
          "type": "",
          "sub_type": "",
          "kind": "",
          "status": "",
          "created_at": "0001-01-01T00:00:00Z",
          "updated_at": "0001-01-01T00:00:00Z",
          "deleted_at": null,
          "schemaVersion": ""
        },
        "connection_id": "5bc80e3c-5d43-9eb4-d16c-78a2769247a6",
        "category": {
          "id": "9ca27d0d-66ce-42a9-8c85-6236563f2ddb",
          "name": "Orchestration \u0026 Management"
        },
        "subCategory": "Scheduling \u0026 Orchestration",
        "metadata": {
          "isAnnotation": false,
          "primaryColor": "#326CE5",
          "secondaryColor": "#7aa1f0",
          "shape": "circle",
          "styleOverrides": "",
          "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/kubernetes-color.svg",
          "svgComplete": "",
          "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/kubernetes-white.svg"
        },
        "model": {
          "version": "v1.32.0-alpha.3"
        },
        "components_count": 0,
        "relationships_count": 0,
        "components": null,
        "relationships": null
      },
      "schemaVersion": "relationships.meshery.io/v1alpha3",
      "selectors": [
        {
          "allow": {
            "from": [
              {
                "id": "914d1fe8-d216-46dc-a077-32bc4efc958f",
                "kind": "*",
                "match": {},
                "match_strategy_matrix": null,
                "model": {
                  "id": "00000000-0000-0000-0000-000000000000",
                  "schemaVersion": "",
                  "version": "",
                  "name": "*",
                  "displayName": "",
                  "status": "",
                  "registrant": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": "",
                    "type": "",
                    "sub_type": "",
                    "kind": "",
                    "status": "",
                    "created_at": "0001-01-01T00:00:00Z",
                    "updated_at": "0001-01-01T00:00:00Z",
                    "deleted_at": null,
                    "schemaVersion": ""
                  },
                  "connection_id": "00000000-0000-0000-0000-000000000000",
                  "category": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": ""
                  },
                  "subCategory": "",
                  "metadata": null,
                  "model": {
                    "version": ""
                  },
                  "components_count": 0,
                  "relationships_count": 0,
                  "components": null,
                  "relationships": null
                },
                "patch": {
                  "patchStrategy": "replace",
                  "mutatedRef": [
                    [
                      "configuration",
                      "metadata",
                      "namespace"
                    ]
                  ]
                }
              }
            ],
            "to": [
              {
                "id": "de77373e-833a-4124-8145-371f91fbdc7d",
                "kind": "Namespace",
                "match": {},
                "match_strategy_matrix": null,
                "model": {
                  "id": "00000000-0000-0000-0000-000000000000",
                  "schemaVersion": "",
                  "version": "",
                  "name": "kubernetes",
                  "displayName": "",
                  "status": "",
                  "registrant": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": "",
                    "type": "",
                    "sub_type": "",
                    "kind": "github",
                    "status": "",
                    "created_at": "0001-01-01T00:00:00Z",
                    "updated_at": "0001-01-01T00:00:00Z",
                    "deleted_at": null,
                    "schemaVersion": ""
                  },
                  "connection_id": "00000000-0000-0000-0000-000000000000",
                  "category": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": ""
                  },
                  "subCategory": "",
                  "metadata": null,
                  "model": {
                    "version": ""
                  },
                  "components_count": 0,
                  "relationships_count": 0,
                  "components": null,
                  "relationships": null
                },
                "patch": {
                  "patchStrategy": "replace",
                  "mutatorRef": [
                    [
                      "displayName"
                    ]
                  ]
                }
              }
            ]
          }
        }
      ],
      "subType": "inventory",
      "status": "approved",
      "type": "parent",
      "version": "v1.0.0"
    },
    {
      "id": "4064fbb8-9645-4362-a447-7fd52c4e55b0",
      "evaluationQuery": "",
      "kind": "hierarchical",
      "metadata": {
        "description": "Namespace to namespaced components",
        "styles": {
          "primaryColor": "",
          "svgColor": "",
          "svgWhite": ""
        },
        "isAnnotation": false
      },
      "model": {
        "id": "b3f5bc0d-30f7-607d-6c73-784ddde6cad8",
        "schemaVersion": "models.meshery.io/v1beta1",
        "version": "v1.0.0",
        "name": "kubernetes",
        "displayName": "Kubernetes",
        "status": "enabled",
        "registrant": {
          "id": "00000000-0000-0000-0000-000000000000",
          "name": "",
          "type": "",
          "sub_type": "",
          "kind": "",
          "status": "",
          "created_at": "0001-01-01T00:00:00Z",
          "updated_at": "0001-01-01T00:00:00Z",
          "deleted_at": null,
          "schemaVersion": ""
        },
        "connection_id": "5bc80e3c-5d43-9eb4-d16c-78a2769247a6",
        "category": {
          "id": "9ca27d0d-66ce-42a9-8c85-6236563f2ddb",
          "name": "Orchestration \u0026 Management"
        },
        "subCategory": "Scheduling \u0026 Orchestration",
        "metadata": {
          "isAnnotation": false,
          "primaryColor": "#326CE5",
          "secondaryColor": "#7aa1f0",
          "shape": "circle",
          "styleOverrides": "",
          "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/kubernetes-color.svg",
          "svgComplete": "",
          "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/kubernetes-white.svg"
        },
        "model": {
          "version": "v1.32.0-alpha.3"
        },
        "components_count": 0,
        "relationships_count": 0,
        "components": null,
        "relationships": null
      },
      "schemaVersion": "relationships.meshery.io/v1alpha3",
      "selectors": [
        {
          "allow": {
            "from": [
              {
                "id": "513aa7c4-e2c0-4524-9db9-4910ac4870a1",
                "kind": "*",
                "match": {},
                "match_strategy_matrix": null,
                "model": {
                  "id": "00000000-0000-0000-0000-000000000000",
                  "schemaVersion": "",
                  "version": "",
                  "name": "*",
                  "displayName": "",
                  "status": "",
                  "registrant": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": "",
                    "type": "",
                    "sub_type": "",
                    "kind": "",
                    "status": "",
                    "created_at": "0001-01-01T00:00:00Z",
                    "updated_at": "0001-01-01T00:00:00Z",
                    "deleted_at": null,
                    "schemaVersion": ""
                  },
                  "connection_id": "00000000-0000-0000-0000-000000000000",
                  "category": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": ""
                  },
                  "subCategory": "",
                  "metadata": null,
                  "model": {
                    "version": ""
                  },
                  "components_count": 0,
                  "relationships_count": 0,
                  "components": null,
                  "relationships": null
                },
                "patch": {
                  "patchStrategy": "replace",
                  "mutatedRef": [
                    [
                      "configuration",
                      "metadata",
                      "namespace"
                    ]
                  ]
                }
              }
            ],
            "to": [
              {
                "id": "de77373e-833a-4124-8145-371f91fbdc7d",
                "kind": "Namespace",
                "match": {},
                "match_strategy_matrix": null,
                "model": {
                  "id": "00000000-0000-0000-0000-000000000000",
                  "schemaVersion": "",
                  "version": "",
                  "name": "kubernetes",
                  "displayName": "",
                  "status": "",
                  "registrant": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": "",
                    "type": "",
                    "sub_type": "",
                    "kind": "github",
                    "status": "",
                    "created_at": "0001-01-01T00:00:00Z",
                    "updated_at": "0001-01-01T00:00:00Z",
                    "deleted_at": null,
                    "schemaVersion": ""
                  },
                  "connection_id": "00000000-0000-0000-0000-000000000000",
                  "category": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": ""
                  },
                  "subCategory": "",
                  "metadata": null,
                  "model": {
                    "version": ""
                  },
                  "components_count": 0,
                  "relationships_count": 0,
                  "components": null,
                  "relationships": null
                },
                "patch": {
                  "patchStrategy": "replace",
                  "mutatorRef": [
                    [
                      "displayName"
                    ]
                  ]
                }
              }
            ]
          }
        }
      ],
      "subType": "inventory",
      "status": "approved",
      "type": "parent",
      "version": "v1.0.0"
    },
    {
      "id": "40cbf2ff-76bf-4f17-b00a-c61272a07f10",
      "evaluationQuery": "",
      "kind": "hierarchical",
      "metadata": {
        "description": "Namespace to namespaced components",
        "styles": {
          "primaryColor": "",
          "svgColor": "",
          "svgWhite": ""
        },
        "isAnnotation": false
      },
      "model": {
        "id": "b3f5bc0d-30f7-607d-6c73-784ddde6cad8",
        "schemaVersion": "models.meshery.io/v1beta1",
        "version": "v1.0.0",
        "name": "kubernetes",
        "displayName": "Kubernetes",
        "status": "enabled",
        "registrant": {
          "id": "00000000-0000-0000-0000-000000000000",
          "name": "",
          "type": "",
          "sub_type": "",
          "kind": "",
          "status": "",
          "created_at": "0001-01-01T00:00:00Z",
          "updated_at": "0001-01-01T00:00:00Z",
          "deleted_at": null,
          "schemaVersion": ""
        },
        "connection_id": "5bc80e3c-5d43-9eb4-d16c-78a2769247a6",
        "category": {
          "id": "9ca27d0d-66ce-42a9-8c85-6236563f2ddb",
          "name": "Orchestration \u0026 Management"
        },
        "subCategory": "Scheduling \u0026 Orchestration",
        "metadata": {
          "isAnnotation": false,
          "primaryColor": "#326CE5",
          "secondaryColor": "#7aa1f0",
          "shape": "circle",
          "styleOverrides": "",
          "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/kubernetes-color.svg",
          "svgComplete": "",
          "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/kubernetes-white.svg"
        },
        "model": {
          "version": "v1.32.0-alpha.3"
        },
        "components_count": 0,
        "relationships_count": 0,
        "components": null,
        "relationships": null
      },
      "schemaVersion": "relationships.meshery.io/v1alpha3",
      "selectors": [
        {
          "allow": {
            "from": [
              {
                "id": "513aa7c4-e2c0-4524-9db9-4910ac4870a1",
                "kind": "*",
                "match": {},
                "match_strategy_matrix": null,
                "model": {
                  "id": "00000000-0000-0000-0000-000000000000",
                  "schemaVersion": "",
                  "version": "",
                  "name": "*",
                  "displayName": "",
                  "status": "",
                  "registrant": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": "",
                    "type": "",
                    "sub_type": "",
                    "kind": "",
                    "status": "",
                    "created_at": "0001-01-01T00:00:00Z",
                    "updated_at": "0001-01-01T00:00:00Z",
                    "deleted_at": null,
                    "schemaVersion": ""
                  },
                  "connection_id": "00000000-0000-0000-0000-000000000000",
                  "category": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": ""
                  },
                  "subCategory": "",
                  "metadata": null,
                  "model": {
                    "version": ""
                  },
                  "components_count": 0,
                  "relationships_count": 0,
                  "components": null,
                  "relationships": null
                },
                "patch": {
                  "patchStrategy": "replace",
                  "mutatedRef": [
                    [
                      "configuration",
                      "metadata",
                      "namespace"
                    ]
                  ]
                }
              }
            ],
            "to": [
              {
                "id": "de77373e-833a-4124-8145-371f91fbdc7d",
                "kind": "Namespace",
                "match": {},
                "match_strategy_matrix": null,
                "model": {
                  "id": "00000000-0000-0000-0000-000000000000",
                  "schemaVersion": "",
                  "version": "",
                  "name": "kubernetes",
                  "displayName": "",
                  "status": "",
                  "registrant": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": "",
                    "type": "",
                    "sub_type": "",
                    "kind": "github",
                    "status": "",
                    "created_at": "0001-01-01T00:00:00Z",
                    "updated_at": "0001-01-01T00:00:00Z",
                    "deleted_at": null,
                    "schemaVersion": ""
                  },
                  "connection_id": "00000000-0000-0000-0000-000000000000",
                  "category": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": ""
                  },
                  "subCategory": "",
                  "metadata": null,
                  "model": {
                    "version": ""
                  },
                  "components_count": 0,
                  "relationships_count": 0,
                  "components": null,
                  "relationships": null
                },
                "patch": {
                  "patchStrategy": "replace",
                  "mutatorRef": [
                    [
                      "displayName"
                    ]
                  ]
                }
              }
            ]
          }
        }
      ],
      "subType": "inventory",
      "status": "approved",
      "type": "parent",
      "version": "v1.0.0"
    },
    {
      "id": "434a7724-1ab6-4301-ac47-e8ff450df82d",
      "evaluationQuery": "",
      "kind": "hierarchical",
      "metadata": {
        "description": "Namespace to namespaced components",
        "styles": {
          "primaryColor": "",
          "svgColor": "",
          "svgWhite": ""
        },
        "isAnnotation": false
      },
      "model": {
        "id": "b3f5bc0d-30f7-607d-6c73-784ddde6cad8",
        "schemaVersion": "models.meshery.io/v1beta1",
        "version": "v1.0.0",
        "name": "kubernetes",
        "displayName": "Kubernetes",
        "status": "enabled",
        "registrant": {
          "id": "00000000-0000-0000-0000-000000000000",
          "name": "",
          "type": "",
          "sub_type": "",
          "kind": "",
          "status": "",
          "created_at": "0001-01-01T00:00:00Z",
          "updated_at": "0001-01-01T00:00:00Z",
          "deleted_at": null,
          "schemaVersion": ""
        },
        "connection_id": "5bc80e3c-5d43-9eb4-d16c-78a2769247a6",
        "category": {
          "id": "9ca27d0d-66ce-42a9-8c85-6236563f2ddb",
          "name": "Orchestration \u0026 Management"
        },
        "subCategory": "Scheduling \u0026 Orchestration",
        "metadata": {
          "isAnnotation": false,
          "primaryColor": "#326CE5",
          "secondaryColor": "#7aa1f0",
          "shape": "circle",
          "styleOverrides": "",
          "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/kubernetes-color.svg",
          "svgComplete": "",
          "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/kubernetes-white.svg"
        },
        "model": {
          "version": "v1.32.0-alpha.3"
        },
        "components_count": 0,
        "relationships_count": 0,
        "components": null,
        "relationships": null
      },
      "schemaVersion": "relationships.meshery.io/v1alpha3",
      "selectors": [
        {
          "allow": {
            "from": [
              {
                "id": "914d1fe8-d216-46dc-a077-32bc4efc958f",
                "kind": "*",
                "match": {},
                "match_strategy_matrix": null,
                "model": {
                  "id": "00000000-0000-0000-0000-000000000000",
                  "schemaVersion": "",
                  "version": "",
                  "name": "*",
                  "displayName": "",
                  "status": "",
                  "registrant": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": "",
                    "type": "",
                    "sub_type": "",
                    "kind": "",
                    "status": "",
                    "created_at": "0001-01-01T00:00:00Z",
                    "updated_at": "0001-01-01T00:00:00Z",
                    "deleted_at": null,
                    "schemaVersion": ""
                  },
                  "connection_id": "00000000-0000-0000-0000-000000000000",
                  "category": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": ""
                  },
                  "subCategory": "",
                  "metadata": null,
                  "model": {
                    "version": ""
                  },
                  "components_count": 0,
                  "relationships_count": 0,
                  "components": null,
                  "relationships": null
                },
                "patch": {
                  "patchStrategy": "replace",
                  "mutatedRef": [
                    [
                      "configuration",
                      "metadata",
                      "namespace"
                    ]
                  ]
                }
              }
            ],
            "to": [
              {
                "id": "de77373e-833a-4124-8145-371f91fbdc7d",
                "kind": "Namespace",
                "match": {},
                "match_strategy_matrix": null,
                "model": {
                  "id": "00000000-0000-0000-0000-000000000000",
                  "schemaVersion": "",
                  "version": "",
                  "name": "kubernetes",
                  "displayName": "",
                  "status": "",
                  "registrant": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": "",
                    "type": "",
                    "sub_type": "",
                    "kind": "github",
                    "status": "",
                    "created_at": "0001-01-01T00:00:00Z",
                    "updated_at": "0001-01-01T00:00:00Z",
                    "deleted_at": null,
                    "schemaVersion": ""
                  },
                  "connection_id": "00000000-0000-0000-0000-000000000000",
                  "category": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": ""
                  },
                  "subCategory": "",
                  "metadata": null,
                  "model": {
                    "version": ""
                  },
                  "components_count": 0,
                  "relationships_count": 0,
                  "components": null,
                  "relationships": null
                },
                "patch": {
                  "patchStrategy": "replace",
                  "mutatorRef": [
                    [
                      "displayName"
                    ]
                  ]
                }
              }
            ]
          }
        }
      ],
      "subType": "inventory",
      "status": "approved",
      "type": "parent",
      "version": "v1.0.0"
    },
    {
      "id": "590c32a4-86b2-427a-8bf3-93b29307436a",
      "evaluationQuery": "",
      "kind": "hierarchical",
      "metadata": {
        "description": "Namespace to namespaced components",
        "styles": {
          "primaryColor": "",
          "svgColor": "",
          "svgWhite": ""
        },
        "isAnnotation": false
      },
      "model": {
        "id": "b3f5bc0d-30f7-607d-6c73-784ddde6cad8",
        "schemaVersion": "models.meshery.io/v1beta1",
        "version": "v1.0.0",
        "name": "kubernetes",
        "displayName": "Kubernetes",
        "status": "enabled",
        "registrant": {
          "id": "00000000-0000-0000-0000-000000000000",
          "name": "",
          "type": "",
          "sub_type": "",
          "kind": "",
          "status": "",
          "created_at": "0001-01-01T00:00:00Z",
          "updated_at": "0001-01-01T00:00:00Z",
          "deleted_at": null,
          "schemaVersion": ""
        },
        "connection_id": "5bc80e3c-5d43-9eb4-d16c-78a2769247a6",
        "category": {
          "id": "9ca27d0d-66ce-42a9-8c85-6236563f2ddb",
          "name": "Orchestration \u0026 Management"
        },
        "subCategory": "Scheduling \u0026 Orchestration",
        "metadata": {
          "isAnnotation": false,
          "primaryColor": "#326CE5",
          "secondaryColor": "#7aa1f0",
          "shape": "circle",
          "styleOverrides": "",
          "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/kubernetes-color.svg",
          "svgComplete": "",
          "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/kubernetes-white.svg"
        },
        "model": {
          "version": "v1.32.0-alpha.3"
        },
        "components_count": 0,
        "relationships_count": 0,
        "components": null,
        "relationships": null
      },
      "schemaVersion": "relationships.meshery.io/v1alpha3",
      "selectors": [
        {
          "allow": {
            "from": [
              {
                "id": "2b960697-8a02-4548-bb57-862af1e7b0ed",
                "kind": "*",
                "match": {},
                "match_strategy_matrix": null,
                "model": {
                  "id": "00000000-0000-0000-0000-000000000000",
                  "schemaVersion": "",
                  "version": "",
                  "name": "*",
                  "displayName": "",
                  "status": "",
                  "registrant": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": "",
                    "type": "",
                    "sub_type": "",
                    "kind": "",
                    "status": "",
                    "created_at": "0001-01-01T00:00:00Z",
                    "updated_at": "0001-01-01T00:00:00Z",
                    "deleted_at": null,
                    "schemaVersion": ""
                  },
                  "connection_id": "00000000-0000-0000-0000-000000000000",
                  "category": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": ""
                  },
                  "subCategory": "",
                  "metadata": null,
                  "model": {
                    "version": ""
                  },
                  "components_count": 0,
                  "relationships_count": 0,
                  "components": null,
                  "relationships": null
                },
                "patch": {
                  "patchStrategy": "replace",
                  "mutatedRef": [
                    [
                      "configuration",
                      "metadata",
                      "namespace"
                    ]
                  ]
                }
              }
            ],
            "to": [
              {
                "id": "de77373e-833a-4124-8145-371f91fbdc7d",
                "kind": "Namespace",
                "match": {},
                "match_strategy_matrix": null,
                "model": {
                  "id": "00000000-0000-0000-0000-000000000000",
                  "schemaVersion": "",
                  "version": "",
                  "name": "kubernetes",
                  "displayName": "",
                  "status": "",
                  "registrant": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": "",
                    "type": "",
                    "sub_type": "",
                    "kind": "github",
                    "status": "",
                    "created_at": "0001-01-01T00:00:00Z",
                    "updated_at": "0001-01-01T00:00:00Z",
                    "deleted_at": null,
                    "schemaVersion": ""
                  },
                  "connection_id": "00000000-0000-0000-0000-000000000000",
                  "category": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": ""
                  },
                  "subCategory": "",
                  "metadata": null,
                  "model": {
                    "version": ""
                  },
                  "components_count": 0,
                  "relationships_count": 0,
                  "components": null,
                  "relationships": null
                },
                "patch": {
                  "patchStrategy": "replace",
                  "mutatorRef": [
                    [
                      "displayName"
                    ]
                  ]
                }
              }
            ]
          }
        }
      ],
      "subType": "inventory",
      "status": "approved",
      "type": "parent",
      "version": "v1.0.0"
    },
    {
      "id": "84c17766-8d91-4016-8949-43bad7e4e261",
      "evaluationQuery": "",
      "kind": "hierarchical",
      "metadata": {
        "description": "Namespace to namespaced components",
        "styles": {
          "primaryColor": "",
          "svgColor": "",
          "svgWhite": ""
        },
        "isAnnotation": false
      },
      "model": {
        "id": "b3f5bc0d-30f7-607d-6c73-784ddde6cad8",
        "schemaVersion": "models.meshery.io/v1beta1",
        "version": "v1.0.0",
        "name": "kubernetes",
        "displayName": "Kubernetes",
        "status": "enabled",
        "registrant": {
          "id": "00000000-0000-0000-0000-000000000000",
          "name": "",
          "type": "",
          "sub_type": "",
          "kind": "",
          "status": "",
          "created_at": "0001-01-01T00:00:00Z",
          "updated_at": "0001-01-01T00:00:00Z",
          "deleted_at": null,
          "schemaVersion": ""
        },
        "connection_id": "5bc80e3c-5d43-9eb4-d16c-78a2769247a6",
        "category": {
          "id": "9ca27d0d-66ce-42a9-8c85-6236563f2ddb",
          "name": "Orchestration \u0026 Management"
        },
        "subCategory": "Scheduling \u0026 Orchestration",
        "metadata": {
          "isAnnotation": false,
          "primaryColor": "#326CE5",
          "secondaryColor": "#7aa1f0",
          "shape": "circle",
          "styleOverrides": "",
          "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/kubernetes-color.svg",
          "svgComplete": "",
          "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/kubernetes-white.svg"
        },
        "model": {
          "version": "v1.32.0-alpha.3"
        },
        "components_count": 0,
        "relationships_count": 0,
        "components": null,
        "relationships": null
      },
      "schemaVersion": "relationships.meshery.io/v1alpha3",
      "selectors": [
        {
          "allow": {
            "from": [
              {
                "id": "0f81fe0a-a93b-474d-93c8-eda2d17a8adc",
                "kind": "*",
                "match": {},
                "match_strategy_matrix": null,
                "model": {
                  "id": "00000000-0000-0000-0000-000000000000",
                  "schemaVersion": "",
                  "version": "",
                  "name": "*",
                  "displayName": "",
                  "status": "",
                  "registrant": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": "",
                    "type": "",
                    "sub_type": "",
                    "kind": "",
                    "status": "",
                    "created_at": "0001-01-01T00:00:00Z",
                    "updated_at": "0001-01-01T00:00:00Z",
                    "deleted_at": null,
                    "schemaVersion": ""
                  },
                  "connection_id": "00000000-0000-0000-0000-000000000000",
                  "category": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": ""
                  },
                  "subCategory": "",
                  "metadata": null,
                  "model": {
                    "version": ""
                  },
                  "components_count": 0,
                  "relationships_count": 0,
                  "components": null,
                  "relationships": null
                },
                "patch": {
                  "patchStrategy": "replace",
                  "mutatedRef": [
                    [
                      "configuration",
                      "metadata",
                      "namespace"
                    ]
                  ]
                }
              }
            ],
            "to": [
              {
                "id": "de77373e-833a-4124-8145-371f91fbdc7d",
                "kind": "Namespace",
                "match": {},
                "match_strategy_matrix": null,
                "model": {
                  "id": "00000000-0000-0000-0000-000000000000",
                  "schemaVersion": "",
                  "version": "",
                  "name": "kubernetes",
                  "displayName": "",
                  "status": "",
                  "registrant": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": "",
                    "type": "",
                    "sub_type": "",
                    "kind": "github",
                    "status": "",
                    "created_at": "0001-01-01T00:00:00Z",
                    "updated_at": "0001-01-01T00:00:00Z",
                    "deleted_at": null,
                    "schemaVersion": ""
                  },
                  "connection_id": "00000000-0000-0000-0000-000000000000",
                  "category": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": ""
                  },
                  "subCategory": "",
                  "metadata": null,
                  "model": {
                    "version": ""
                  },
                  "components_count": 0,
                  "relationships_count": 0,
                  "components": null,
                  "relationships": null
                },
                "patch": {
                  "patchStrategy": "replace",
                  "mutatorRef": [
                    [
                      "displayName"
                    ]
                  ]
                }
              }
            ]
          }
        }
      ],
      "subType": "inventory",
      "status": "approved",
      "type": "parent",
      "version": "v1.0.0"
    },
    {
      "id": "937a108e-03d9-41a9-9943-1ba0a6380c09",
      "evaluationQuery": "",
      "kind": "hierarchical",
      "metadata": {
        "description": "A hierarchical inventory relationship in which the configuration of (parent) component is patched with the configuration of other (child) component. Eg: The configuration of the EnvoyFilter (parent) component is patched with the configuration as received from WASMFilter (child) component.",
        "styles": {
          "primaryColor": "",
          "svgColor": "",
          "svgWhite": ""
        },
        "isAnnotation": false
      },
      "model": {
        "id": "b3f5bc0d-30f7-607d-6c73-784ddde6cad8",
        "schemaVersion": "models.meshery.io/v1beta1",
        "version": "v1.0.0",
        "name": "kubernetes",
        "displayName": "Kubernetes",
        "status": "enabled",
        "registrant": {
          "id": "00000000-0000-0000-0000-000000000000",
          "name": "",
          "type": "",
          "sub_type": "",
          "kind": "",
          "status": "",
          "created_at": "0001-01-01T00:00:00Z",
          "updated_at": "0001-01-01T00:00:00Z",
          "deleted_at": null,
          "schemaVersion": ""
        },
        "connection_id": "5bc80e3c-5d43-9eb4-d16c-78a2769247a6",
        "category": {
          "id": "9ca27d0d-66ce-42a9-8c85-6236563f2ddb",
          "name": "Orchestration \u0026 Management"
        },
        "subCategory": "Scheduling \u0026 Orchestration",
        "metadata": {
          "isAnnotation": false,
          "primaryColor": "#326CE5",
          "secondaryColor": "#7aa1f0",
          "shape": "circle",
          "styleOverrides": "",
          "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/kubernetes-color.svg",
          "svgComplete": "",
          "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/kubernetes-white.svg"
        },
        "model": {
          "version": "v1.32.0-alpha.3"
        },
        "components_count": 0,
        "relationships_count": 0,
        "components": null,
        "relationships": null
      },
      "schemaVersion": "relationships.meshery.io/v1alpha3",
      "selectors": [
        {
          "allow": {
            "from": [
              {
                "id": "b7119d13-2206-4900-91cc-8b769c7e03d8",
                "kind": "Container",
                "match": {},
                "match_strategy_matrix": null,
                "model": {
                  "id": "00000000-0000-0000-0000-000000000000",
                  "schemaVersion": "",
                  "version": "",
                  "name": "meshery-core",
                  "displayName": "",
                  "status": "",
                  "registrant": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": "",
                    "type": "",
                    "sub_type": "",
                    "kind": "github",
                    "status": "",
                    "created_at": "0001-01-01T00:00:00Z",
                    "updated_at": "0001-01-01T00:00:00Z",
                    "deleted_at": null,
                    "schemaVersion": ""
                  },
                  "connection_id": "00000000-0000-0000-0000-000000000000",
                  "category": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": ""
                  },
                  "subCategory": "",
                  "metadata": null,
                  "model": {
                    "version": ""
                  },
                  "components_count": 0,
                  "relationships_count": 0,
                  "components": null,
                  "relationships": null
                },
                "patch": {
                  "patchStrategy": "replace",
                  "mutatorRef": [
                    [
                      "configuration",
                      "spec",
                      "template",
                      "spec",
                      "containers",
                      "0"
                    ]
                  ],
                  "mutatedRef": [
                    [
                      "configuration",
                      "spec",
                      "template",
                      "spec",
                      "containers",
                      "0"
                    ]
                  ]
                }
              }
            ],
            "to": [
              {
                "id": "513aa7c4-e2c0-4524-9db9-4910ac4870a1",
                "kind": "Deployment",
                "match": {},
                "match_strategy_matrix": null,
                "model": {
                  "id": "00000000-0000-0000-0000-000000000000",
                  "schemaVersion": "",
                  "version": "",
                  "name": "kubernetes",
                  "displayName": "",
                  "status": "",
                  "registrant": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": "",
                    "type": "",
                    "sub_type": "",
                    "kind": "github",
                    "status": "",
                    "created_at": "0001-01-01T00:00:00Z",
                    "updated_at": "0001-01-01T00:00:00Z",
                    "deleted_at": null,
                    "schemaVersion": ""
                  },
                  "connection_id": "00000000-0000-0000-0000-000000000000",
                  "category": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": ""
                  },
                  "subCategory": "",
                  "metadata": null,
                  "model": {
                    "version": ""
                  },
                  "components_count": 0,
                  "relationships_count": 0,
                  "components": null,
                  "relationships": null
                },
                "patch": {
                  "patchStrategy": "replace",
                  "mutatorRef": [
                    [
                      "configuration",
                      "spec",
                      "template",
                      "spec",
                      "containers",
                      "0"
                    ]
                  ],
                  "mutatedRef": [
                    [
                      "configuration",
                      "spec",
                      "template",
                      "spec",
                      "containers",
                      "0"
                    ]
                  ]
                }
              }
            ]
          },
          "deny": {
            "from": null,
            "to": null
          }
        }
      ],
      "subType": "alias",
      "status": "approved",
      "type": "parent",
      "version": "v1.0.0"
    },
    {
      "id": "9a07dfd2-e9dc-4003-b03f-9dc73b5ec795",
      "evaluationQuery": "",
      "kind": "hierarchical",
      "metadata": {
        "description": "A hierarchical inventory relationship in which the configuration of (parent) component is patched with the configuration of other (child) component. Eg: The configuration of the EnvoyFilter (parent) component is patched with the configuration as received from WASMFilter (child) component.",
        "styles": {
          "primaryColor": "",
          "svgColor": "",
          "svgWhite": ""
        },
        "isAnnotation": false
      },
      "model": {
        "id": "b3f5bc0d-30f7-607d-6c73-784ddde6cad8",
        "schemaVersion": "models.meshery.io/v1beta1",
        "version": "v1.0.0",
        "name": "kubernetes",
        "displayName": "Kubernetes",
        "status": "enabled",
        "registrant": {
          "id": "00000000-0000-0000-0000-000000000000",
          "name": "",
          "type": "",
          "sub_type": "",
          "kind": "",
          "status": "",
          "created_at": "0001-01-01T00:00:00Z",
          "updated_at": "0001-01-01T00:00:00Z",
          "deleted_at": null,
          "schemaVersion": ""
        },
        "connection_id": "5bc80e3c-5d43-9eb4-d16c-78a2769247a6",
        "category": {
          "id": "9ca27d0d-66ce-42a9-8c85-6236563f2ddb",
          "name": "Orchestration \u0026 Management"
        },
        "subCategory": "Scheduling \u0026 Orchestration",
        "metadata": {
          "isAnnotation": false,
          "primaryColor": "#326CE5",
          "secondaryColor": "#7aa1f0",
          "shape": "circle",
          "styleOverrides": "",
          "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/kubernetes-color.svg",
          "svgComplete": "",
          "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/kubernetes-white.svg"
        },
        "model": {
          "version": "v1.32.0-alpha.3"
        },
        "components_count": 0,
        "relationships_count": 0,
        "components": null,
        "relationships": null
      },
      "schemaVersion": "relationships.meshery.io/v1alpha3",
      "selectors": [
        {
          "allow": {
            "from": [
              {
                "id": "dc15a432-4634-4452-bdd3-edb73ba64b73",
                "kind": "Container",
                "match": {},
                "match_strategy_matrix": null,
                "model": {
                  "id": "00000000-0000-0000-0000-000000000000",
                  "schemaVersion": "",
                  "version": "",
                  "name": "meshery-core",
                  "displayName": "",
                  "status": "",
                  "registrant": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": "",
                    "type": "",
                    "sub_type": "",
                    "kind": "github",
                    "status": "",
                    "created_at": "0001-01-01T00:00:00Z",
                    "updated_at": "0001-01-01T00:00:00Z",
                    "deleted_at": null,
                    "schemaVersion": ""
                  },
                  "connection_id": "00000000-0000-0000-0000-000000000000",
                  "category": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": ""
                  },
                  "subCategory": "",
                  "metadata": null,
                  "model": {
                    "version": ""
                  },
                  "components_count": 0,
                  "relationships_count": 0,
                  "components": null,
                  "relationships": null
                },
                "patch": {
                  "patchStrategy": "replace",
                  "mutatorRef": [
                    [
                      "configuration",
                      "spec",
                      "template",
                      "spec",
                      "containers",
                      "0"
                    ]
                  ],
                  "mutatedRef": [
                    [
                      "configuration",
                      "spec",
                      "template",
                      "spec",
                      "containers",
                      "0"
                    ]
                  ]
                }
              }
            ],
            "to": [
              {
                "id": "914d1fe8-d216-46dc-a077-32bc4efc958f",
                "kind": "Deployment",
                "match": {},
                "match_strategy_matrix": null,
                "model": {
                  "id": "00000000-0000-0000-0000-000000000000",
                  "schemaVersion": "",
                  "version": "",
                  "name": "kubernetes",
                  "displayName": "",
                  "status": "",
                  "registrant": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": "",
                    "type": "",
                    "sub_type": "",
                    "kind": "github",
                    "status": "",
                    "created_at": "0001-01-01T00:00:00Z",
                    "updated_at": "0001-01-01T00:00:00Z",
                    "deleted_at": null,
                    "schemaVersion": ""
                  },
                  "connection_id": "00000000-0000-0000-0000-000000000000",
                  "category": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": ""
                  },
                  "subCategory": "",
                  "metadata": null,
                  "model": {
                    "version": ""
                  },
                  "components_count": 0,
                  "relationships_count": 0,
                  "components": null,
                  "relationships": null
                },
                "patch": {
                  "patchStrategy": "replace",
                  "mutatorRef": [
                    [
                      "configuration",
                      "spec",
                      "template",
                      "spec",
                      "containers",
                      "0"
                    ]
                  ],
                  "mutatedRef": [
                    [
                      "configuration",
                      "spec",
                      "template",
                      "spec",
                      "containers",
                      "0"
                    ]
                  ]
                }
              }
            ]
          },
          "deny": {
            "from": null,
            "to": null
          }
        }
      ],
      "subType": "alias",
      "status": "approved",
      "type": "parent",
      "version": "v1.0.0"
    },
    {
      "id": "b9df4d53-819c-464e-8ed3-79dc6327b7b5",
      "evaluationQuery": "",
      "kind": "hierarchical",
      "metadata": {
        "description": "A hierarchical inventory relationship in which the configuration of (parent) component is patched with the configuration of other (child) component. Eg: The configuration of the EnvoyFilter (parent) component is patched with the configuration as received from WASMFilter (child) component.",
        "styles": {
          "primaryColor": "",
          "svgColor": "",
          "svgWhite": ""
        },
        "isAnnotation": false
      },
      "model": {
        "id": "b3f5bc0d-30f7-607d-6c73-784ddde6cad8",
        "schemaVersion": "models.meshery.io/v1beta1",
        "version": "v1.0.0",
        "name": "kubernetes",
        "displayName": "Kubernetes",
        "status": "enabled",
        "registrant": {
          "id": "00000000-0000-0000-0000-000000000000",
          "name": "",
          "type": "",
          "sub_type": "",
          "kind": "",
          "status": "",
          "created_at": "0001-01-01T00:00:00Z",
          "updated_at": "0001-01-01T00:00:00Z",
          "deleted_at": null,
          "schemaVersion": ""
        },
        "connection_id": "5bc80e3c-5d43-9eb4-d16c-78a2769247a6",
        "category": {
          "id": "9ca27d0d-66ce-42a9-8c85-6236563f2ddb",
          "name": "Orchestration \u0026 Management"
        },
        "subCategory": "Scheduling \u0026 Orchestration",
        "metadata": {
          "isAnnotation": false,
          "primaryColor": "#326CE5",
          "secondaryColor": "#7aa1f0",
          "shape": "circle",
          "styleOverrides": "",
          "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/kubernetes-color.svg",
          "svgComplete": "",
          "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/kubernetes-white.svg"
        },
        "model": {
          "version": "v1.32.0-alpha.3"
        },
        "components_count": 0,
        "relationships_count": 0,
        "components": null,
        "relationships": null
      },
      "schemaVersion": "relationships.meshery.io/v1alpha3",
      "selectors": [
        {
          "allow": {
            "from": [
              {
                "id": "bc4a4512-def0-40a4-9906-bfbdede1ed84",
                "kind": "Container",
                "match": {},
                "match_strategy_matrix": null,
                "model": {
                  "id": "00000000-0000-0000-0000-000000000000",
                  "schemaVersion": "",
                  "version": "",
                  "name": "meshery-core",
                  "displayName": "",
                  "status": "",
                  "registrant": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": "",
                    "type": "",
                    "sub_type": "",
                    "kind": "github",
                    "status": "",
                    "created_at": "0001-01-01T00:00:00Z",
                    "updated_at": "0001-01-01T00:00:00Z",
                    "deleted_at": null,
                    "schemaVersion": ""
                  },
                  "connection_id": "00000000-0000-0000-0000-000000000000",
                  "category": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": ""
                  },
                  "subCategory": "",
                  "metadata": null,
                  "model": {
                    "version": ""
                  },
                  "components_count": 0,
                  "relationships_count": 0,
                  "components": null,
                  "relationships": null
                },
                "patch": {
                  "patchStrategy": "replace",
                  "mutatorRef": [
                    [
                      "configuration",
                      "spec",
                      "template",
                      "spec",
                      "containers",
                      "0"
                    ]
                  ],
                  "mutatedRef": [
                    [
                      "configuration",
                      "spec",
                      "template",
                      "spec",
                      "containers",
                      "0"
                    ]
                  ]
                }
              }
            ],
            "to": [
              {
                "id": "0f81fe0a-a93b-474d-93c8-eda2d17a8adc",
                "kind": "Deployment",
                "match": {},
                "match_strategy_matrix": null,
                "model": {
                  "id": "00000000-0000-0000-0000-000000000000",
                  "schemaVersion": "",
                  "version": "",
                  "name": "kubernetes",
                  "displayName": "",
                  "status": "",
                  "registrant": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": "",
                    "type": "",
                    "sub_type": "",
                    "kind": "github",
                    "status": "",
                    "created_at": "0001-01-01T00:00:00Z",
                    "updated_at": "0001-01-01T00:00:00Z",
                    "deleted_at": null,
                    "schemaVersion": ""
                  },
                  "connection_id": "00000000-0000-0000-0000-000000000000",
                  "category": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": ""
                  },
                  "subCategory": "",
                  "metadata": null,
                  "model": {
                    "version": ""
                  },
                  "components_count": 0,
                  "relationships_count": 0,
                  "components": null,
                  "relationships": null
                },
                "patch": {
                  "patchStrategy": "replace",
                  "mutatorRef": [
                    [
                      "configuration",
                      "spec",
                      "template",
                      "spec",
                      "containers",
                      "0"
                    ]
                  ],
                  "mutatedRef": [
                    [
                      "configuration",
                      "spec",
                      "template",
                      "spec",
                      "containers",
                      "0"
                    ]
                  ]
                }
              }
            ]
          },
          "deny": {
            "from": null,
            "to": null
          }
        }
      ],
      "subType": "alias",
      "status": "approved",
      "type": "parent",
      "version": "v1.0.0"
    },
    {
      "id": "c7fda8d4-949d-4da0-b095-84f39f01d46c",
      "evaluationQuery": "",
      "kind": "edge",
      "metadata": {
        "description": "A relationship that represents a set of permissions",
        "styles": {
          "primaryColor": "",
          "svgColor": "",
          "svgWhite": ""
        },
        "isAnnotation": false
      },
      "model": {
        "id": "b3f5bc0d-30f7-607d-6c73-784ddde6cad8",
        "schemaVersion": "models.meshery.io/v1beta1",
        "version": "v1.0.0",
        "name": "kubernetes",
        "displayName": "Kubernetes",
        "status": "enabled",
        "registrant": {
          "id": "00000000-0000-0000-0000-000000000000",
          "name": "",
          "type": "",
          "sub_type": "",
          "kind": "",
          "status": "",
          "created_at": "0001-01-01T00:00:00Z",
          "updated_at": "0001-01-01T00:00:00Z",
          "deleted_at": null,
          "schemaVersion": ""
        },
        "connection_id": "5bc80e3c-5d43-9eb4-d16c-78a2769247a6",
        "category": {
          "id": "9ca27d0d-66ce-42a9-8c85-6236563f2ddb",
          "name": "Orchestration \u0026 Management"
        },
        "subCategory": "Scheduling \u0026 Orchestration",
        "metadata": {
          "isAnnotation": false,
          "primaryColor": "#326CE5",
          "secondaryColor": "#7aa1f0",
          "shape": "circle",
          "styleOverrides": "",
          "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/kubernetes-color.svg",
          "svgComplete": "",
          "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/kubernetes-white.svg"
        },
        "model": {
          "version": "v1.32.0-alpha.3"
        },
        "components_count": 0,
        "relationships_count": 0,
        "components": null,
        "relationships": null
      },
      "schemaVersion": "relationships.meshery.io/v1alpha3",
      "selectors": [
        {
          "allow": {
            "from": [
              {
                "id": "033074ca-fe0e-4ffc-833e-1c05e3d90600",
                "kind": "ClusterRole",
                "match": {
                  "from": [
                    {
                      "id": "033074ca-fe0e-4ffc-833e-1c05e3d90600",
                      "kind": "self",
                      "mutatorRef": [
                        [
                          "component",
                          "kind"
                        ],
                        [
                          "displayName"
                        ]
                      ]
                    }
                  ],
                  "to": [
                    {
                      "id": "2784a3f0-6f62-4814-98d2-438396269ccd",
                      "kind": "ClusterRoleBinding",
                      "mutatedRef": [
                        [
                          "configuration",
                          "roleRef",
                          "kind"
                        ],
                        [
                          "configuration",
                          "roleRef",
                          "name"
                        ]
                      ]
                    }
                  ]
                },
                "match_strategy_matrix": null,
                "model": {
                  "id": "00000000-0000-0000-0000-000000000000",
                  "schemaVersion": "",
                  "version": "",
                  "name": "kubernetes",
                  "displayName": "",
                  "status": "",
                  "registrant": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": "",
                    "credential_id": "00000000-0000-0000-0000-000000000000",
                    "type": "",
                    "sub_type": "",
                    "kind": "github",
                    "status": "",
                    "user_id": "00000000-0000-0000-0000-000000000000",
                    "created_at": "0001-01-01T00:00:00Z",
                    "updated_at": "0001-01-01T00:00:00Z",
                    "deleted_at": "0001-01-01T00:00:00Z",
                    "schemaVersion": ""
                  },
                  "connection_id": "00000000-0000-0000-0000-000000000000",
                  "category": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": ""
                  },
                  "subCategory": "",
                  "metadata": null,
                  "model": {
                    "version": ""
                  },
                  "components_count": 0,
                  "relationships_count": 0,
                  "components": null,
                  "relationships": null
                },
                "patch": null
              }
            ],
            "to": [
              {
                "id": "13a5a57a-4c58-409f-9087-f3d6506980b5",
                "kind": "ServiceAccount",
                "match": {
                  "from": [
                    {
                      "id": "2784a3f0-6f62-4814-98d2-438396269ccd",
                      "kind": "ClusterRoleBinding",
                      "mutatedRef": [
                        [
                          "configuration",
                          "subjects",
                          "_",
                          "name"
                        ]
                      ]
                    }
                  ],
                  "to": [
                    {
                      "id": "13a5a57a-4c58-409f-9087-f3d6506980b5",
                      "kind": "self",
                      "mutatorRef": [
                        [
                          "displayName"
                        ]
                      ]
                    }
                  ]
                },
                "match_strategy_matrix": null,
                "model": {
                  "id": "00000000-0000-0000-0000-000000000000",
                  "schemaVersion": "",
                  "version": "",
                  "name": "kubernetes",
                  "displayName": "",
                  "status": "",
                  "registrant": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": "",
                    "credential_id": "00000000-0000-0000-0000-000000000000",
                    "type": "",
                    "sub_type": "",
                    "kind": "github",
                    "status": "",
                    "user_id": "00000000-0000-0000-0000-000000000000",
                    "created_at": "0001-01-01T00:00:00Z",
                    "updated_at": "0001-01-01T00:00:00Z",
                    "deleted_at": "0001-01-01T00:00:00Z",
                    "schemaVersion": ""
                  },
                  "connection_id": "00000000-0000-0000-0000-000000000000",
                  "category": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": ""
                  },
                  "subCategory": "",
                  "metadata": null,
                  "model": {
                    "version": ""
                  },
                  "components_count": 0,
                  "relationships_count": 0,
                  "components": null,
                  "relationships": null
                },
                "patch": null
              }
            ]
          }
        }
      ],
      "subType": "permission",
      "status": "approved",
      "type": "binding",
      "version": "v1.0.0"
    },
    {
      "id": "cf810be6-d057-4345-a494-8807238b600d",
      "evaluationQuery": "",
      "kind": "hierarchical",
      "metadata": {
        "description": "Namespace to namespaced components",
        "styles": {
          "primaryColor": "",
          "svgColor": "",
          "svgWhite": ""
        },
        "isAnnotation": false
      },
      "model": {
        "id": "b3f5bc0d-30f7-607d-6c73-784ddde6cad8",
        "schemaVersion": "models.meshery.io/v1beta1",
        "version": "v1.0.0",
        "name": "kubernetes",
        "displayName": "Kubernetes",
        "status": "enabled",
        "registrant": {
          "id": "00000000-0000-0000-0000-000000000000",
          "name": "",
          "type": "",
          "sub_type": "",
          "kind": "",
          "status": "",
          "created_at": "0001-01-01T00:00:00Z",
          "updated_at": "0001-01-01T00:00:00Z",
          "deleted_at": null,
          "schemaVersion": ""
        },
        "connection_id": "5bc80e3c-5d43-9eb4-d16c-78a2769247a6",
        "category": {
          "id": "9ca27d0d-66ce-42a9-8c85-6236563f2ddb",
          "name": "Orchestration \u0026 Management"
        },
        "subCategory": "Scheduling \u0026 Orchestration",
        "metadata": {
          "isAnnotation": false,
          "primaryColor": "#326CE5",
          "secondaryColor": "#7aa1f0",
          "shape": "circle",
          "styleOverrides": "",
          "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/kubernetes-color.svg",
          "svgComplete": "",
          "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/kubernetes-white.svg"
        },
        "model": {
          "version": "v1.32.0-alpha.3"
        },
        "components_count": 0,
        "relationships_count": 0,
        "components": null,
        "relationships": null
      },
      "schemaVersion": "relationships.meshery.io/v1alpha3",
      "selectors": [
        {
          "allow": {
            "from": [
              {
                "id": "2b960697-8a02-4548-bb57-862af1e7b0ed",
                "kind": "*",
                "match": {},
                "match_strategy_matrix": null,
                "model": {
                  "id": "00000000-0000-0000-0000-000000000000",
                  "schemaVersion": "",
                  "version": "",
                  "name": "*",
                  "displayName": "",
                  "status": "",
                  "registrant": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": "",
                    "type": "",
                    "sub_type": "",
                    "kind": "",
                    "status": "",
                    "created_at": "0001-01-01T00:00:00Z",
                    "updated_at": "0001-01-01T00:00:00Z",
                    "deleted_at": null,
                    "schemaVersion": ""
                  },
                  "connection_id": "00000000-0000-0000-0000-000000000000",
                  "category": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": ""
                  },
                  "subCategory": "",
                  "metadata": null,
                  "model": {
                    "version": ""
                  },
                  "components_count": 0,
                  "relationships_count": 0,
                  "components": null,
                  "relationships": null
                },
                "patch": {
                  "patchStrategy": "replace",
                  "mutatedRef": [
                    [
                      "configuration",
                      "metadata",
                      "namespace"
                    ]
                  ]
                }
              }
            ],
            "to": [
              {
                "id": "de77373e-833a-4124-8145-371f91fbdc7d",
                "kind": "Namespace",
                "match": {},
                "match_strategy_matrix": null,
                "model": {
                  "id": "00000000-0000-0000-0000-000000000000",
                  "schemaVersion": "",
                  "version": "",
                  "name": "kubernetes",
                  "displayName": "",
                  "status": "",
                  "registrant": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": "",
                    "type": "",
                    "sub_type": "",
                    "kind": "github",
                    "status": "",
                    "created_at": "0001-01-01T00:00:00Z",
                    "updated_at": "0001-01-01T00:00:00Z",
                    "deleted_at": null,
                    "schemaVersion": ""
                  },
                  "connection_id": "00000000-0000-0000-0000-000000000000",
                  "category": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": ""
                  },
                  "subCategory": "",
                  "metadata": null,
                  "model": {
                    "version": ""
                  },
                  "components_count": 0,
                  "relationships_count": 0,
                  "components": null,
                  "relationships": null
                },
                "patch": {
                  "patchStrategy": "replace",
                  "mutatorRef": [
                    [
                      "displayName"
                    ]
                  ]
                }
              }
            ]
          }
        }
      ],
      "subType": "inventory",
      "status": "approved",
      "type": "parent",
      "version": "v1.0.0"
    },
    {
      "id": "e3a4ff12-eb6c-4e17-b8c2-1228f0431f14",
      "evaluationQuery": "",
      "kind": "edge",
      "metadata": {
        "description": "A relationship that represents a set of permissions",
        "styles": {
          "primaryColor": "",
          "svgColor": "",
          "svgWhite": ""
        },
        "isAnnotation": false
      },
      "model": {
        "id": "b3f5bc0d-30f7-607d-6c73-784ddde6cad8",
        "schemaVersion": "models.meshery.io/v1beta1",
        "version": "v1.0.0",
        "name": "kubernetes",
        "displayName": "Kubernetes",
        "status": "enabled",
        "registrant": {
          "id": "00000000-0000-0000-0000-000000000000",
          "name": "",
          "type": "",
          "sub_type": "",
          "kind": "",
          "status": "",
          "created_at": "0001-01-01T00:00:00Z",
          "updated_at": "0001-01-01T00:00:00Z",
          "deleted_at": null,
          "schemaVersion": ""
        },
        "connection_id": "5bc80e3c-5d43-9eb4-d16c-78a2769247a6",
        "category": {
          "id": "9ca27d0d-66ce-42a9-8c85-6236563f2ddb",
          "name": "Orchestration \u0026 Management"
        },
        "subCategory": "Scheduling \u0026 Orchestration",
        "metadata": {
          "isAnnotation": false,
          "primaryColor": "#326CE5",
          "secondaryColor": "#7aa1f0",
          "shape": "circle",
          "styleOverrides": "",
          "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/kubernetes-color.svg",
          "svgComplete": "",
          "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/kubernetes-white.svg"
        },
        "model": {
          "version": "v1.32.0-alpha.3"
        },
        "components_count": 0,
        "relationships_count": 0,
        "components": null,
        "relationships": null
      },
      "schemaVersion": "relationships.meshery.io/v1alpha3",
      "selectors": [
        {
          "allow": {
            "from": [
              {
                "id": "033074ca-fe0e-4ffc-833e-1c05e3d90600",
                "kind": "ClusterRole",
                "match": {
                  "from": [
                    {
                      "id": "033074ca-fe0e-4ffc-833e-1c05e3d90600",
                      "kind": "self",
                      "mutatorRef": [
                        [
                          "component",
                          "kind"
                        ],
                        [
                          "displayName"
                        ]
                      ]
                    }
                  ],
                  "to": [
                    {
                      "id": "2784a3f0-6f62-4814-98d2-438396269ccd",
                      "kind": "ClusterRoleBinding",
                      "mutatedRef": [
                        [
                          "configuration",
                          "roleRef",
                          "kind"
                        ],
                        [
                          "configuration",
                          "roleRef",
                          "name"
                        ]
                      ]
                    }
                  ]
                },
                "match_strategy_matrix": null,
                "model": {
                  "id": "00000000-0000-0000-0000-000000000000",
                  "schemaVersion": "",
                  "version": "",
                  "name": "kubernetes",
                  "displayName": "",
                  "status": "",
                  "registrant": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": "",
                    "credential_id": "00000000-0000-0000-0000-000000000000",
                    "type": "",
                    "sub_type": "",
                    "kind": "github",
                    "status": "",
                    "user_id": "00000000-0000-0000-0000-000000000000",
                    "created_at": "0001-01-01T00:00:00Z",
                    "updated_at": "0001-01-01T00:00:00Z",
                    "deleted_at": "0001-01-01T00:00:00Z",
                    "schemaVersion": ""
                  },
                  "connection_id": "00000000-0000-0000-0000-000000000000",
                  "category": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": ""
                  },
                  "subCategory": "",
                  "metadata": null,
                  "model": {
                    "version": ""
                  },
                  "components_count": 0,
                  "relationships_count": 0,
                  "components": null,
                  "relationships": null
                },
                "patch": null
              }
            ],
            "to": [
              {
                "id": "13a5a57a-4c58-409f-9087-f3d6506980b5",
                "kind": "ServiceAccount",
                "match": {
                  "from": [
                    {
                      "id": "2784a3f0-6f62-4814-98d2-438396269ccd",
                      "kind": "ClusterRoleBinding",
                      "mutatedRef": [
                        [
                          "configuration",
                          "subjects",
                          "_",
                          "name"
                        ]
                      ]
                    }
                  ],
                  "to": [
                    {
                      "id": "13a5a57a-4c58-409f-9087-f3d6506980b5",
                      "kind": "self",
                      "mutatorRef": [
                        [
                          "displayName"
                        ]
                      ]
                    }
                  ]
                },
                "match_strategy_matrix": null,
                "model": {
                  "id": "00000000-0000-0000-0000-000000000000",
                  "schemaVersion": "",
                  "version": "",
                  "name": "kubernetes",
                  "displayName": "",
                  "status": "",
                  "registrant": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": "",
                    "credential_id": "00000000-0000-0000-0000-000000000000",
                    "type": "",
                    "sub_type": "",
                    "kind": "github",
                    "status": "",
                    "user_id": "00000000-0000-0000-0000-000000000000",
                    "created_at": "0001-01-01T00:00:00Z",
                    "updated_at": "0001-01-01T00:00:00Z",
                    "deleted_at": "0001-01-01T00:00:00Z",
                    "schemaVersion": ""
                  },
                  "connection_id": "00000000-0000-0000-0000-000000000000",
                  "category": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": ""
                  },
                  "subCategory": "",
                  "metadata": null,
                  "model": {
                    "version": ""
                  },
                  "components_count": 0,
                  "relationships_count": 0,
                  "components": null,
                  "relationships": null
                },
                "patch": null
              }
            ]
          }
        }
      ],
      "subType": "permission",
      "status": "approved",
      "type": "binding",
      "version": "v1.0.0"
    },
    {
      "id": "f4e34e1e-1fd3-43e4-baf1-0c81e9ad4a2a",
      "evaluationQuery": "",
      "kind": "hierarchical",
      "metadata": {
        "description": "Namespace to namespaced components",
        "styles": {
          "primaryColor": "",
          "svgColor": "",
          "svgWhite": ""
        },
        "isAnnotation": false
      },
      "model": {
        "id": "b3f5bc0d-30f7-607d-6c73-784ddde6cad8",
        "schemaVersion": "models.meshery.io/v1beta1",
        "version": "v1.0.0",
        "name": "kubernetes",
        "displayName": "Kubernetes",
        "status": "enabled",
        "registrant": {
          "id": "00000000-0000-0000-0000-000000000000",
          "name": "",
          "type": "",
          "sub_type": "",
          "kind": "",
          "status": "",
          "created_at": "0001-01-01T00:00:00Z",
          "updated_at": "0001-01-01T00:00:00Z",
          "deleted_at": null,
          "schemaVersion": ""
        },
        "connection_id": "5bc80e3c-5d43-9eb4-d16c-78a2769247a6",
        "category": {
          "id": "9ca27d0d-66ce-42a9-8c85-6236563f2ddb",
          "name": "Orchestration \u0026 Management"
        },
        "subCategory": "Scheduling \u0026 Orchestration",
        "metadata": {
          "isAnnotation": false,
          "primaryColor": "#326CE5",
          "secondaryColor": "#7aa1f0",
          "shape": "circle",
          "styleOverrides": "",
          "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/kubernetes-color.svg",
          "svgComplete": "",
          "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/kubernetes-white.svg"
        },
        "model": {
          "version": "v1.32.0-alpha.3"
        },
        "components_count": 0,
        "relationships_count": 0,
        "components": null,
        "relationships": null
      },
      "schemaVersion": "relationships.meshery.io/v1alpha3",
      "selectors": [
        {
          "allow": {
            "from": [
              {
                "id": "0f81fe0a-a93b-474d-93c8-eda2d17a8adc",
                "kind": "*",
                "match": {},
                "match_strategy_matrix": null,
                "model": {
                  "id": "00000000-0000-0000-0000-000000000000",
                  "schemaVersion": "",
                  "version": "",
                  "name": "*",
                  "displayName": "",
                  "status": "",
                  "registrant": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": "",
                    "type": "",
                    "sub_type": "",
                    "kind": "",
                    "status": "",
                    "created_at": "0001-01-01T00:00:00Z",
                    "updated_at": "0001-01-01T00:00:00Z",
                    "deleted_at": null,
                    "schemaVersion": ""
                  },
                  "connection_id": "00000000-0000-0000-0000-000000000000",
                  "category": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": ""
                  },
                  "subCategory": "",
                  "metadata": null,
                  "model": {
                    "version": ""
                  },
                  "components_count": 0,
                  "relationships_count": 0,
                  "components": null,
                  "relationships": null
                },
                "patch": {
                  "patchStrategy": "replace",
                  "mutatedRef": [
                    [
                      "configuration",
                      "metadata",
                      "namespace"
                    ]
                  ]
                }
              }
            ],
            "to": [
              {
                "id": "de77373e-833a-4124-8145-371f91fbdc7d",
                "kind": "Namespace",
                "match": {},
                "match_strategy_matrix": null,
                "model": {
                  "id": "00000000-0000-0000-0000-000000000000",
                  "schemaVersion": "",
                  "version": "",
                  "name": "kubernetes",
                  "displayName": "",
                  "status": "",
                  "registrant": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": "",
                    "type": "",
                    "sub_type": "",
                    "kind": "github",
                    "status": "",
                    "created_at": "0001-01-01T00:00:00Z",
                    "updated_at": "0001-01-01T00:00:00Z",
                    "deleted_at": null,
                    "schemaVersion": ""
                  },
                  "connection_id": "00000000-0000-0000-0000-000000000000",
                  "category": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": ""
                  },
                  "subCategory": "",
                  "metadata": null,
                  "model": {
                    "version": ""
                  },
                  "components_count": 0,
                  "relationships_count": 0,
                  "components": null,
                  "relationships": null
                },
                "patch": {
                  "patchStrategy": "replace",
                  "mutatorRef": [
                    [
                      "displayName"
                    ]
                  ]
                }
              }
            ]
          }
        }
      ],
      "subType": "inventory",
      "status": "approved",
      "type": "parent",
      "version": "v1.0.0"
    }
  ]
}