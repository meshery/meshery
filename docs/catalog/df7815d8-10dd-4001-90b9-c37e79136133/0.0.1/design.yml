{
  "id": "00000000-0000-0000-0000-000000000000",
  "name": "airflow-25.0.2.tgz",
  "schemaVersion": "designs.meshery.io/v1beta1",
  "version": "0.0.1",
  "components": [
    {
      "id": "7922bd77-4046-4b5c-b310-ac7c74619e45",
      "schemaVersion": "components.meshery.io/v1beta1",
      "version": "v1.0.0",
      "displayName": "airflow-postgresql",
      "description": "",
      "format": "",
      "model": {
        "id": "b3f5bc0d-30f7-607d-6c73-784ddde6cad8",
        "schemaVersion": "models.meshery.io/v1beta1",
        "version": "v1.0.0",
        "name": "kubernetes",
        "displayName": "Kubernetes",
        "status": "enabled",
        "registrant": {
          "id": "5bc80e3c-5d43-9eb4-d16c-78a2769247a6",
          "name": "Github",
          "credential_id": "00000000-0000-0000-0000-000000000000",
          "type": "registry",
          "sub_type": "",
          "kind": "github",
          "status": "registered",
          "user_id": "00000000-0000-0000-0000-000000000000",
          "created_at": "2025-09-17T17:32:17.981302672Z",
          "updated_at": "2025-09-17T17:32:17.981302672Z",
          "deleted_at": "0001-01-01T00:00:00Z",
          "schemaVersion": ""
        },
        "connection_id": "5bc80e3c-5d43-9eb4-d16c-78a2769247a6",
        "category": {
          "id": "9ca27d0d-66ce-42a9-8c85-6236563f2ddb",
          "name": "Orchestration \u0026 Management"
        },
        "subCategory": "Scheduling \u0026 Orchestration",
        "metadata": {
          "isAnnotation": false,
          "primaryColor": "#326CE5",
          "secondaryColor": "#7aa1f0",
          "shape": "circle",
          "styleOverrides": "",
          "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/kubernetes-color.svg",
          "svgComplete": "",
          "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/kubernetes-white.svg"
        },
        "model": {
          "version": "v1.32.0-alpha.3"
        },
        "components_count": 0,
        "relationships_count": 0,
        "components": null,
        "relationships": null
      },
      "styles": {
        "primaryColor": "#326CE5",
        "secondaryColor": "#7aa1f0",
        "shape": "circle",
        "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/networkpolicy-color.svg",
        "svgComplete": "",
        "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/networkpolicy-white.svg"
      },
      "capabilities": [],
      "status": "enabled",
      "metadata": {
        "configurationUISchema": "",
        "genealogy": "",
        "instanceDetails": null,
        "isAnnotation": false,
        "isNamespaced": false,
        "published": false,
        "source_uri": "git://github.com/kubernetes/kubernetes/master/api/openapi-spec/v3"
      },
      "configuration": {
        "metadata": {
          "labels": {
            "app.kubernetes.io/component": "primary",
            "app.kubernetes.io/instance": "airflow",
            "app.kubernetes.io/managed-by": "Helm",
            "app.kubernetes.io/name": "postgresql",
            "app.kubernetes.io/version": "17.6.0",
            "helm.sh/chart": "postgresql-16.7.26"
          },
          "name": "airflow-postgresql",
          "namespace": "default"
        },
        "spec": {
          "egress": [
            {}
          ],
          "ingress": [
            {
              "ports": [
                {
                  "port": 5432
                }
              ]
            }
          ],
          "podSelector": {
            "matchLabels": {
              "app.kubernetes.io/component": "primary",
              "app.kubernetes.io/instance": "airflow",
              "app.kubernetes.io/name": "postgresql"
            }
          },
          "policyTypes": [
            "Ingress",
            "Egress"
          ]
        }
      },
      "component": {
        "version": "networking.k8s.io/v1",
        "kind": "NetworkPolicy",
        "schema": ""
      }
    },
    {
      "id": "445c7814-f432-418c-ac32-947341de9a62",
      "schemaVersion": "components.meshery.io/v1beta1",
      "version": "v1.0.0",
      "displayName": "airflow-redis",
      "description": "",
      "format": "",
      "model": {
        "id": "b3f5bc0d-30f7-607d-6c73-784ddde6cad8",
        "schemaVersion": "models.meshery.io/v1beta1",
        "version": "v1.0.0",
        "name": "kubernetes",
        "displayName": "Kubernetes",
        "status": "enabled",
        "registrant": {
          "id": "5bc80e3c-5d43-9eb4-d16c-78a2769247a6",
          "name": "Github",
          "credential_id": "00000000-0000-0000-0000-000000000000",
          "type": "registry",
          "sub_type": "",
          "kind": "github",
          "status": "registered",
          "user_id": "00000000-0000-0000-0000-000000000000",
          "created_at": "2025-09-17T17:32:17.981302672Z",
          "updated_at": "2025-09-17T17:32:17.981302672Z",
          "deleted_at": "0001-01-01T00:00:00Z",
          "schemaVersion": ""
        },
        "connection_id": "5bc80e3c-5d43-9eb4-d16c-78a2769247a6",
        "category": {
          "id": "9ca27d0d-66ce-42a9-8c85-6236563f2ddb",
          "name": "Orchestration \u0026 Management"
        },
        "subCategory": "Scheduling \u0026 Orchestration",
        "metadata": {
          "isAnnotation": false,
          "primaryColor": "#326CE5",
          "secondaryColor": "#7aa1f0",
          "shape": "circle",
          "styleOverrides": "",
          "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/kubernetes-color.svg",
          "svgComplete": "",
          "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/kubernetes-white.svg"
        },
        "model": {
          "version": "v1.32.0-alpha.3"
        },
        "components_count": 0,
        "relationships_count": 0,
        "components": null,
        "relationships": null
      },
      "styles": {
        "primaryColor": "#326CE5",
        "secondaryColor": "#7aa1f0",
        "shape": "circle",
        "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/networkpolicy-color.svg",
        "svgComplete": "",
        "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/networkpolicy-white.svg"
      },
      "capabilities": [],
      "status": "enabled",
      "metadata": {
        "configurationUISchema": "",
        "genealogy": "",
        "instanceDetails": null,
        "isAnnotation": false,
        "isNamespaced": false,
        "published": false,
        "source_uri": "git://github.com/kubernetes/kubernetes/master/api/openapi-spec/v3"
      },
      "configuration": {
        "metadata": {
          "labels": {
            "app.kubernetes.io/instance": "airflow",
            "app.kubernetes.io/managed-by": "Helm",
            "app.kubernetes.io/name": "redis",
            "app.kubernetes.io/version": "8.2.1",
            "helm.sh/chart": "redis-22.0.4"
          },
          "name": "airflow-redis",
          "namespace": "default"
        },
        "spec": {
          "egress": [
            {}
          ],
          "ingress": [
            {
              "ports": [
                {
                  "port": 6379
                }
              ]
            }
          ],
          "podSelector": {
            "matchLabels": {
              "app.kubernetes.io/instance": "airflow",
              "app.kubernetes.io/name": "redis"
            }
          },
          "policyTypes": [
            "Ingress",
            "Egress"
          ]
        }
      },
      "component": {
        "version": "networking.k8s.io/v1",
        "kind": "NetworkPolicy",
        "schema": ""
      }
    },
    {
      "id": "76b80576-f37d-4358-ab54-436befbe5d10",
      "schemaVersion": "components.meshery.io/v1beta1",
      "version": "v1.0.0",
      "displayName": "airflow-dag-processor",
      "description": "",
      "format": "",
      "model": {
        "id": "b3f5bc0d-30f7-607d-6c73-784ddde6cad8",
        "schemaVersion": "models.meshery.io/v1beta1",
        "version": "v1.0.0",
        "name": "kubernetes",
        "displayName": "Kubernetes",
        "status": "enabled",
        "registrant": {
          "id": "5bc80e3c-5d43-9eb4-d16c-78a2769247a6",
          "name": "Github",
          "credential_id": "00000000-0000-0000-0000-000000000000",
          "type": "registry",
          "sub_type": "",
          "kind": "github",
          "status": "registered",
          "user_id": "00000000-0000-0000-0000-000000000000",
          "created_at": "2025-09-17T17:32:17.981302672Z",
          "updated_at": "2025-09-17T17:32:17.981302672Z",
          "deleted_at": "0001-01-01T00:00:00Z",
          "schemaVersion": ""
        },
        "connection_id": "5bc80e3c-5d43-9eb4-d16c-78a2769247a6",
        "category": {
          "id": "9ca27d0d-66ce-42a9-8c85-6236563f2ddb",
          "name": "Orchestration \u0026 Management"
        },
        "subCategory": "Scheduling \u0026 Orchestration",
        "metadata": {
          "isAnnotation": false,
          "primaryColor": "#326CE5",
          "secondaryColor": "#7aa1f0",
          "shape": "circle",
          "styleOverrides": "",
          "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/kubernetes-color.svg",
          "svgComplete": "",
          "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/kubernetes-white.svg"
        },
        "model": {
          "version": "v1.32.0-alpha.3"
        },
        "components_count": 0,
        "relationships_count": 0,
        "components": null,
        "relationships": null
      },
      "styles": {
        "primaryColor": "#326CE5",
        "secondaryColor": "#7aa1f0",
        "shape": "circle",
        "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/networkpolicy-color.svg",
        "svgComplete": "",
        "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/networkpolicy-white.svg"
      },
      "capabilities": [],
      "status": "enabled",
      "metadata": {
        "configurationUISchema": "",
        "genealogy": "",
        "instanceDetails": null,
        "isAnnotation": false,
        "isNamespaced": false,
        "published": false,
        "source_uri": "git://github.com/kubernetes/kubernetes/master/api/openapi-spec/v3"
      },
      "configuration": {
        "metadata": {
          "labels": {
            "app.kubernetes.io/component": "dag-processor",
            "app.kubernetes.io/instance": "airflow",
            "app.kubernetes.io/managed-by": "Helm",
            "app.kubernetes.io/name": "airflow",
            "app.kubernetes.io/version": "3.0.5",
            "helm.sh/chart": "airflow-25.0.2"
          },
          "name": "airflow-dag-processor",
          "namespace": "default"
        },
        "spec": {
          "egress": [
            {}
          ],
          "ingress": [
            {
              "ports": [
                {
                  "port": 8080
                },
                {
                  "port": 8793
                }
              ]
            }
          ],
          "podSelector": {
            "matchLabels": {
              "app.kubernetes.io/component": "dag-processor",
              "app.kubernetes.io/instance": "airflow",
              "app.kubernetes.io/name": "airflow"
            }
          },
          "policyTypes": [
            "Ingress",
            "Egress"
          ]
        }
      },
      "component": {
        "version": "networking.k8s.io/v1",
        "kind": "NetworkPolicy",
        "schema": ""
      }
    },
    {
      "id": "73901f92-820d-46e2-b3f8-685aabd81ad5",
      "schemaVersion": "components.meshery.io/v1beta1",
      "version": "v1.0.0",
      "displayName": "airflow-scheduler",
      "description": "",
      "format": "",
      "model": {
        "id": "b3f5bc0d-30f7-607d-6c73-784ddde6cad8",
        "schemaVersion": "models.meshery.io/v1beta1",
        "version": "v1.0.0",
        "name": "kubernetes",
        "displayName": "Kubernetes",
        "status": "enabled",
        "registrant": {
          "id": "5bc80e3c-5d43-9eb4-d16c-78a2769247a6",
          "name": "Github",
          "credential_id": "00000000-0000-0000-0000-000000000000",
          "type": "registry",
          "sub_type": "",
          "kind": "github",
          "status": "registered",
          "user_id": "00000000-0000-0000-0000-000000000000",
          "created_at": "2025-09-17T17:32:17.981302672Z",
          "updated_at": "2025-09-17T17:32:17.981302672Z",
          "deleted_at": "0001-01-01T00:00:00Z",
          "schemaVersion": ""
        },
        "connection_id": "5bc80e3c-5d43-9eb4-d16c-78a2769247a6",
        "category": {
          "id": "9ca27d0d-66ce-42a9-8c85-6236563f2ddb",
          "name": "Orchestration \u0026 Management"
        },
        "subCategory": "Scheduling \u0026 Orchestration",
        "metadata": {
          "isAnnotation": false,
          "primaryColor": "#326CE5",
          "secondaryColor": "#7aa1f0",
          "shape": "circle",
          "styleOverrides": "",
          "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/kubernetes-color.svg",
          "svgComplete": "",
          "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/kubernetes-white.svg"
        },
        "model": {
          "version": "v1.32.0-alpha.3"
        },
        "components_count": 0,
        "relationships_count": 0,
        "components": null,
        "relationships": null
      },
      "styles": {
        "primaryColor": "#326CE5",
        "secondaryColor": "#7aa1f0",
        "shape": "circle",
        "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/networkpolicy-color.svg",
        "svgComplete": "",
        "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/networkpolicy-white.svg"
      },
      "capabilities": [],
      "status": "enabled",
      "metadata": {
        "configurationUISchema": "",
        "genealogy": "",
        "instanceDetails": null,
        "isAnnotation": false,
        "isNamespaced": false,
        "published": false,
        "source_uri": "git://github.com/kubernetes/kubernetes/master/api/openapi-spec/v3"
      },
      "configuration": {
        "metadata": {
          "labels": {
            "app.kubernetes.io/component": "scheduler",
            "app.kubernetes.io/instance": "airflow",
            "app.kubernetes.io/managed-by": "Helm",
            "app.kubernetes.io/name": "airflow",
            "app.kubernetes.io/version": "3.0.5",
            "helm.sh/chart": "airflow-25.0.2"
          },
          "name": "airflow-scheduler",
          "namespace": "default"
        },
        "spec": {
          "egress": [
            {}
          ],
          "ingress": [
            {
              "ports": [
                {
                  "port": 8080
                },
                {
                  "port": 8793
                }
              ]
            }
          ],
          "podSelector": {
            "matchLabels": {
              "app.kubernetes.io/component": "scheduler",
              "app.kubernetes.io/instance": "airflow",
              "app.kubernetes.io/name": "airflow"
            }
          },
          "policyTypes": [
            "Ingress",
            "Egress"
          ]
        }
      },
      "component": {
        "version": "networking.k8s.io/v1",
        "kind": "NetworkPolicy",
        "schema": ""
      }
    },
    {
      "id": "34f36303-2a20-4cc7-8a3c-6295eb39ccd7",
      "schemaVersion": "components.meshery.io/v1beta1",
      "version": "v1.0.0",
      "displayName": "airflow-triggerer",
      "description": "",
      "format": "",
      "model": {
        "id": "b3f5bc0d-30f7-607d-6c73-784ddde6cad8",
        "schemaVersion": "models.meshery.io/v1beta1",
        "version": "v1.0.0",
        "name": "kubernetes",
        "displayName": "Kubernetes",
        "status": "enabled",
        "registrant": {
          "id": "5bc80e3c-5d43-9eb4-d16c-78a2769247a6",
          "name": "Github",
          "credential_id": "00000000-0000-0000-0000-000000000000",
          "type": "registry",
          "sub_type": "",
          "kind": "github",
          "status": "registered",
          "user_id": "00000000-0000-0000-0000-000000000000",
          "created_at": "2025-09-17T17:32:17.981302672Z",
          "updated_at": "2025-09-17T17:32:17.981302672Z",
          "deleted_at": "0001-01-01T00:00:00Z",
          "schemaVersion": ""
        },
        "connection_id": "5bc80e3c-5d43-9eb4-d16c-78a2769247a6",
        "category": {
          "id": "9ca27d0d-66ce-42a9-8c85-6236563f2ddb",
          "name": "Orchestration \u0026 Management"
        },
        "subCategory": "Scheduling \u0026 Orchestration",
        "metadata": {
          "isAnnotation": false,
          "primaryColor": "#326CE5",
          "secondaryColor": "#7aa1f0",
          "shape": "circle",
          "styleOverrides": "",
          "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/kubernetes-color.svg",
          "svgComplete": "",
          "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/kubernetes-white.svg"
        },
        "model": {
          "version": "v1.32.0-alpha.3"
        },
        "components_count": 0,
        "relationships_count": 0,
        "components": null,
        "relationships": null
      },
      "styles": {
        "primaryColor": "#326CE5",
        "secondaryColor": "#7aa1f0",
        "shape": "circle",
        "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/networkpolicy-color.svg",
        "svgComplete": "",
        "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/networkpolicy-white.svg"
      },
      "capabilities": [],
      "status": "enabled",
      "metadata": {
        "configurationUISchema": "",
        "genealogy": "",
        "instanceDetails": null,
        "isAnnotation": false,
        "isNamespaced": false,
        "published": false,
        "source_uri": "git://github.com/kubernetes/kubernetes/master/api/openapi-spec/v3"
      },
      "configuration": {
        "metadata": {
          "labels": {
            "app.kubernetes.io/component": "triggerer",
            "app.kubernetes.io/instance": "airflow",
            "app.kubernetes.io/managed-by": "Helm",
            "app.kubernetes.io/name": "airflow",
            "app.kubernetes.io/version": "3.0.5",
            "helm.sh/chart": "airflow-25.0.2"
          },
          "name": "airflow-triggerer",
          "namespace": "default"
        },
        "spec": {
          "egress": [
            {}
          ],
          "ingress": [
            {
              "ports": [
                {
                  "port": 8794
                }
              ]
            }
          ],
          "podSelector": {
            "matchLabels": {
              "app.kubernetes.io/component": "triggerer",
              "app.kubernetes.io/instance": "airflow",
              "app.kubernetes.io/name": "airflow"
            }
          },
          "policyTypes": [
            "Ingress",
            "Egress"
          ]
        }
      },
      "component": {
        "version": "networking.k8s.io/v1",
        "kind": "NetworkPolicy",
        "schema": ""
      }
    },
    {
      "id": "7ccc387c-6f54-484a-a094-16a0324a7258",
      "schemaVersion": "components.meshery.io/v1beta1",
      "version": "v1.0.0",
      "displayName": "airflow-web",
      "description": "",
      "format": "",
      "model": {
        "id": "b3f5bc0d-30f7-607d-6c73-784ddde6cad8",
        "schemaVersion": "models.meshery.io/v1beta1",
        "version": "v1.0.0",
        "name": "kubernetes",
        "displayName": "Kubernetes",
        "status": "enabled",
        "registrant": {
          "id": "5bc80e3c-5d43-9eb4-d16c-78a2769247a6",
          "name": "Github",
          "credential_id": "00000000-0000-0000-0000-000000000000",
          "type": "registry",
          "sub_type": "",
          "kind": "github",
          "status": "registered",
          "user_id": "00000000-0000-0000-0000-000000000000",
          "created_at": "2025-09-17T17:32:17.981302672Z",
          "updated_at": "2025-09-17T17:32:17.981302672Z",
          "deleted_at": "0001-01-01T00:00:00Z",
          "schemaVersion": ""
        },
        "connection_id": "5bc80e3c-5d43-9eb4-d16c-78a2769247a6",
        "category": {
          "id": "9ca27d0d-66ce-42a9-8c85-6236563f2ddb",
          "name": "Orchestration \u0026 Management"
        },
        "subCategory": "Scheduling \u0026 Orchestration",
        "metadata": {
          "isAnnotation": false,
          "primaryColor": "#326CE5",
          "secondaryColor": "#7aa1f0",
          "shape": "circle",
          "styleOverrides": "",
          "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/kubernetes-color.svg",
          "svgComplete": "",
          "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/kubernetes-white.svg"
        },
        "model": {
          "version": "v1.32.0-alpha.3"
        },
        "components_count": 0,
        "relationships_count": 0,
        "components": null,
        "relationships": null
      },
      "styles": {
        "primaryColor": "#326CE5",
        "secondaryColor": "#7aa1f0",
        "shape": "circle",
        "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/networkpolicy-color.svg",
        "svgComplete": "",
        "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/networkpolicy-white.svg"
      },
      "capabilities": [],
      "status": "enabled",
      "metadata": {
        "configurationUISchema": "",
        "genealogy": "",
        "instanceDetails": null,
        "isAnnotation": false,
        "isNamespaced": false,
        "published": false,
        "source_uri": "git://github.com/kubernetes/kubernetes/master/api/openapi-spec/v3"
      },
      "configuration": {
        "metadata": {
          "labels": {
            "app.kubernetes.io/component": "web",
            "app.kubernetes.io/instance": "airflow",
            "app.kubernetes.io/managed-by": "Helm",
            "app.kubernetes.io/name": "airflow",
            "app.kubernetes.io/version": "3.0.5",
            "helm.sh/chart": "airflow-25.0.2"
          },
          "name": "airflow-web",
          "namespace": "default"
        },
        "spec": {
          "egress": [
            {}
          ],
          "ingress": [
            {
              "ports": [
                {
                  "port": 8080
                },
                {
                  "port": 8080
                }
              ]
            }
          ],
          "podSelector": {
            "matchLabels": {
              "app.kubernetes.io/component": "web",
              "app.kubernetes.io/instance": "airflow",
              "app.kubernetes.io/name": "airflow"
            }
          },
          "policyTypes": [
            "Ingress",
            "Egress"
          ]
        }
      },
      "component": {
        "version": "networking.k8s.io/v1",
        "kind": "NetworkPolicy",
        "schema": ""
      }
    },
    {
      "id": "162e15bf-b077-4ccc-8172-6baf3ae5bd4c",
      "schemaVersion": "components.meshery.io/v1beta1",
      "version": "v1.0.0",
      "displayName": "airflow-worker",
      "description": "",
      "format": "",
      "model": {
        "id": "b3f5bc0d-30f7-607d-6c73-784ddde6cad8",
        "schemaVersion": "models.meshery.io/v1beta1",
        "version": "v1.0.0",
        "name": "kubernetes",
        "displayName": "Kubernetes",
        "status": "enabled",
        "registrant": {
          "id": "5bc80e3c-5d43-9eb4-d16c-78a2769247a6",
          "name": "Github",
          "credential_id": "00000000-0000-0000-0000-000000000000",
          "type": "registry",
          "sub_type": "",
          "kind": "github",
          "status": "registered",
          "user_id": "00000000-0000-0000-0000-000000000000",
          "created_at": "2025-09-17T17:32:17.981302672Z",
          "updated_at": "2025-09-17T17:32:17.981302672Z",
          "deleted_at": "0001-01-01T00:00:00Z",
          "schemaVersion": ""
        },
        "connection_id": "5bc80e3c-5d43-9eb4-d16c-78a2769247a6",
        "category": {
          "id": "9ca27d0d-66ce-42a9-8c85-6236563f2ddb",
          "name": "Orchestration \u0026 Management"
        },
        "subCategory": "Scheduling \u0026 Orchestration",
        "metadata": {
          "isAnnotation": false,
          "primaryColor": "#326CE5",
          "secondaryColor": "#7aa1f0",
          "shape": "circle",
          "styleOverrides": "",
          "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/kubernetes-color.svg",
          "svgComplete": "",
          "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/kubernetes-white.svg"
        },
        "model": {
          "version": "v1.32.0-alpha.3"
        },
        "components_count": 0,
        "relationships_count": 0,
        "components": null,
        "relationships": null
      },
      "styles": {
        "primaryColor": "#326CE5",
        "secondaryColor": "#7aa1f0",
        "shape": "circle",
        "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/networkpolicy-color.svg",
        "svgComplete": "",
        "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/networkpolicy-white.svg"
      },
      "capabilities": [],
      "status": "enabled",
      "metadata": {
        "configurationUISchema": "",
        "genealogy": "",
        "instanceDetails": null,
        "isAnnotation": false,
        "isNamespaced": false,
        "published": false,
        "source_uri": "git://github.com/kubernetes/kubernetes/master/api/openapi-spec/v3"
      },
      "configuration": {
        "metadata": {
          "labels": {
            "app.kubernetes.io/component": "worker",
            "app.kubernetes.io/instance": "airflow",
            "app.kubernetes.io/managed-by": "Helm",
            "app.kubernetes.io/name": "airflow",
            "app.kubernetes.io/version": "3.0.5",
            "helm.sh/chart": "airflow-25.0.2"
          },
          "name": "airflow-worker",
          "namespace": "default"
        },
        "spec": {
          "egress": [
            {}
          ],
          "ingress": [
            {
              "ports": [
                {
                  "port": 8080
                },
                {
                  "port": 8793
                }
              ]
            }
          ],
          "podSelector": {
            "matchLabels": {
              "app.kubernetes.io/component": "worker",
              "app.kubernetes.io/instance": "airflow",
              "app.kubernetes.io/name": "airflow"
            }
          },
          "policyTypes": [
            "Ingress",
            "Egress"
          ]
        }
      },
      "component": {
        "version": "networking.k8s.io/v1",
        "kind": "NetworkPolicy",
        "schema": ""
      }
    },
    {
      "id": "9ad64532-dc0e-42e2-b804-889746f1301f",
      "schemaVersion": "components.meshery.io/v1beta1",
      "version": "v1.0.0",
      "displayName": "airflow-postgresql",
      "description": "",
      "format": "",
      "model": {
        "id": "b3f5bc0d-30f7-607d-6c73-784ddde6cad8",
        "schemaVersion": "models.meshery.io/v1beta1",
        "version": "v1.0.0",
        "name": "kubernetes",
        "displayName": "Kubernetes",
        "status": "enabled",
        "registrant": {
          "id": "5bc80e3c-5d43-9eb4-d16c-78a2769247a6",
          "name": "Github",
          "credential_id": "00000000-0000-0000-0000-000000000000",
          "type": "registry",
          "sub_type": "",
          "kind": "github",
          "status": "registered",
          "user_id": "00000000-0000-0000-0000-000000000000",
          "created_at": "2025-09-17T17:32:17.981302672Z",
          "updated_at": "2025-09-17T17:32:17.981302672Z",
          "deleted_at": "0001-01-01T00:00:00Z",
          "schemaVersion": ""
        },
        "connection_id": "5bc80e3c-5d43-9eb4-d16c-78a2769247a6",
        "category": {
          "id": "9ca27d0d-66ce-42a9-8c85-6236563f2ddb",
          "name": "Orchestration \u0026 Management"
        },
        "subCategory": "Scheduling \u0026 Orchestration",
        "metadata": {
          "isAnnotation": false,
          "primaryColor": "#326CE5",
          "secondaryColor": "#7aa1f0",
          "shape": "circle",
          "styleOverrides": "",
          "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/kubernetes-color.svg",
          "svgComplete": "",
          "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/kubernetes-white.svg"
        },
        "model": {
          "version": "v1.32.0-alpha.3"
        },
        "components_count": 0,
        "relationships_count": 0,
        "components": null,
        "relationships": null
      },
      "styles": {
        "primaryColor": "#326CE5",
        "secondaryColor": "#7aa1f0",
        "shape": "concave-hexagon",
        "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/poddisruptionbudget-color.svg",
        "svgComplete": "",
        "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/poddisruptionbudget-white.svg"
      },
      "capabilities": [],
      "status": "enabled",
      "metadata": {
        "configurationUISchema": "",
        "genealogy": "",
        "instanceDetails": null,
        "isAnnotation": false,
        "isNamespaced": true,
        "published": false,
        "source_uri": "git://github.com/kubernetes/kubernetes/master/api/openapi-spec/v3"
      },
      "configuration": {
        "metadata": {
          "labels": {
            "app.kubernetes.io/component": "primary",
            "app.kubernetes.io/instance": "airflow",
            "app.kubernetes.io/managed-by": "Helm",
            "app.kubernetes.io/name": "postgresql",
            "app.kubernetes.io/version": "17.6.0",
            "helm.sh/chart": "postgresql-16.7.26"
          },
          "name": "airflow-postgresql",
          "namespace": "default"
        },
        "spec": {
          "maxUnavailable": 1,
          "selector": {
            "matchLabels": {
              "app.kubernetes.io/component": "primary",
              "app.kubernetes.io/instance": "airflow",
              "app.kubernetes.io/name": "postgresql"
            }
          }
        }
      },
      "component": {
        "version": "policy/v1",
        "kind": "PodDisruptionBudget",
        "schema": ""
      }
    },
    {
      "id": "aa6f62dc-ad04-4ed5-bf52-0569bd69a66f",
      "schemaVersion": "components.meshery.io/v1beta1",
      "version": "v1.0.0",
      "displayName": "airflow-redis-master",
      "description": "",
      "format": "",
      "model": {
        "id": "b3f5bc0d-30f7-607d-6c73-784ddde6cad8",
        "schemaVersion": "models.meshery.io/v1beta1",
        "version": "v1.0.0",
        "name": "kubernetes",
        "displayName": "Kubernetes",
        "status": "enabled",
        "registrant": {
          "id": "5bc80e3c-5d43-9eb4-d16c-78a2769247a6",
          "name": "Github",
          "credential_id": "00000000-0000-0000-0000-000000000000",
          "type": "registry",
          "sub_type": "",
          "kind": "github",
          "status": "registered",
          "user_id": "00000000-0000-0000-0000-000000000000",
          "created_at": "2025-09-17T17:32:17.981302672Z",
          "updated_at": "2025-09-17T17:32:17.981302672Z",
          "deleted_at": "0001-01-01T00:00:00Z",
          "schemaVersion": ""
        },
        "connection_id": "5bc80e3c-5d43-9eb4-d16c-78a2769247a6",
        "category": {
          "id": "9ca27d0d-66ce-42a9-8c85-6236563f2ddb",
          "name": "Orchestration \u0026 Management"
        },
        "subCategory": "Scheduling \u0026 Orchestration",
        "metadata": {
          "isAnnotation": false,
          "primaryColor": "#326CE5",
          "secondaryColor": "#7aa1f0",
          "shape": "circle",
          "styleOverrides": "",
          "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/kubernetes-color.svg",
          "svgComplete": "",
          "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/kubernetes-white.svg"
        },
        "model": {
          "version": "v1.32.0-alpha.3"
        },
        "components_count": 0,
        "relationships_count": 0,
        "components": null,
        "relationships": null
      },
      "styles": {
        "primaryColor": "#326CE5",
        "secondaryColor": "#7aa1f0",
        "shape": "concave-hexagon",
        "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/poddisruptionbudget-color.svg",
        "svgComplete": "",
        "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/poddisruptionbudget-white.svg"
      },
      "capabilities": [],
      "status": "enabled",
      "metadata": {
        "configurationUISchema": "",
        "genealogy": "",
        "instanceDetails": null,
        "isAnnotation": false,
        "isNamespaced": true,
        "published": false,
        "source_uri": "git://github.com/kubernetes/kubernetes/master/api/openapi-spec/v3"
      },
      "configuration": {
        "metadata": {
          "labels": {
            "app.kubernetes.io/component": "master",
            "app.kubernetes.io/instance": "airflow",
            "app.kubernetes.io/managed-by": "Helm",
            "app.kubernetes.io/name": "redis",
            "app.kubernetes.io/version": "8.2.1",
            "helm.sh/chart": "redis-22.0.4"
          },
          "name": "airflow-redis-master",
          "namespace": "default"
        },
        "spec": {
          "maxUnavailable": 1,
          "selector": {
            "matchLabels": {
              "app.kubernetes.io/component": "master",
              "app.kubernetes.io/instance": "airflow",
              "app.kubernetes.io/name": "redis"
            }
          }
        }
      },
      "component": {
        "version": "policy/v1",
        "kind": "PodDisruptionBudget",
        "schema": ""
      }
    },
    {
      "id": "05b6e7d1-88bd-4866-a836-9d165975c345",
      "schemaVersion": "components.meshery.io/v1beta1",
      "version": "v1.0.0",
      "displayName": "airflow-dag-processor",
      "description": "",
      "format": "",
      "model": {
        "id": "b3f5bc0d-30f7-607d-6c73-784ddde6cad8",
        "schemaVersion": "models.meshery.io/v1beta1",
        "version": "v1.0.0",
        "name": "kubernetes",
        "displayName": "Kubernetes",
        "status": "enabled",
        "registrant": {
          "id": "5bc80e3c-5d43-9eb4-d16c-78a2769247a6",
          "name": "Github",
          "credential_id": "00000000-0000-0000-0000-000000000000",
          "type": "registry",
          "sub_type": "",
          "kind": "github",
          "status": "registered",
          "user_id": "00000000-0000-0000-0000-000000000000",
          "created_at": "2025-09-17T17:32:17.981302672Z",
          "updated_at": "2025-09-17T17:32:17.981302672Z",
          "deleted_at": "0001-01-01T00:00:00Z",
          "schemaVersion": ""
        },
        "connection_id": "5bc80e3c-5d43-9eb4-d16c-78a2769247a6",
        "category": {
          "id": "9ca27d0d-66ce-42a9-8c85-6236563f2ddb",
          "name": "Orchestration \u0026 Management"
        },
        "subCategory": "Scheduling \u0026 Orchestration",
        "metadata": {
          "isAnnotation": false,
          "primaryColor": "#326CE5",
          "secondaryColor": "#7aa1f0",
          "shape": "circle",
          "styleOverrides": "",
          "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/kubernetes-color.svg",
          "svgComplete": "",
          "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/kubernetes-white.svg"
        },
        "model": {
          "version": "v1.32.0-alpha.3"
        },
        "components_count": 0,
        "relationships_count": 0,
        "components": null,
        "relationships": null
      },
      "styles": {
        "primaryColor": "#326CE5",
        "secondaryColor": "#7aa1f0",
        "shape": "concave-hexagon",
        "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/poddisruptionbudget-color.svg",
        "svgComplete": "",
        "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/poddisruptionbudget-white.svg"
      },
      "capabilities": [],
      "status": "enabled",
      "metadata": {
        "configurationUISchema": "",
        "genealogy": "",
        "instanceDetails": null,
        "isAnnotation": false,
        "isNamespaced": true,
        "published": false,
        "source_uri": "git://github.com/kubernetes/kubernetes/master/api/openapi-spec/v3"
      },
      "configuration": {
        "metadata": {
          "labels": {
            "app.kubernetes.io/component": "dag-processor",
            "app.kubernetes.io/instance": "airflow",
            "app.kubernetes.io/managed-by": "Helm",
            "app.kubernetes.io/name": "airflow",
            "app.kubernetes.io/version": "3.0.5",
            "helm.sh/chart": "airflow-25.0.2"
          },
          "name": "airflow-dag-processor",
          "namespace": "default"
        },
        "spec": {
          "maxUnavailable": 1,
          "selector": {
            "matchLabels": {
              "app.kubernetes.io/component": "dag-processor",
              "app.kubernetes.io/instance": "airflow",
              "app.kubernetes.io/name": "airflow"
            }
          }
        }
      },
      "component": {
        "version": "policy/v1",
        "kind": "PodDisruptionBudget",
        "schema": ""
      }
    },
    {
      "id": "ee9b9375-be4b-439c-bd0a-172115f95f99",
      "schemaVersion": "components.meshery.io/v1beta1",
      "version": "v1.0.0",
      "displayName": "airflow-scheduler",
      "description": "",
      "format": "",
      "model": {
        "id": "b3f5bc0d-30f7-607d-6c73-784ddde6cad8",
        "schemaVersion": "models.meshery.io/v1beta1",
        "version": "v1.0.0",
        "name": "kubernetes",
        "displayName": "Kubernetes",
        "status": "enabled",
        "registrant": {
          "id": "5bc80e3c-5d43-9eb4-d16c-78a2769247a6",
          "name": "Github",
          "credential_id": "00000000-0000-0000-0000-000000000000",
          "type": "registry",
          "sub_type": "",
          "kind": "github",
          "status": "registered",
          "user_id": "00000000-0000-0000-0000-000000000000",
          "created_at": "2025-09-17T17:32:17.981302672Z",
          "updated_at": "2025-09-17T17:32:17.981302672Z",
          "deleted_at": "0001-01-01T00:00:00Z",
          "schemaVersion": ""
        },
        "connection_id": "5bc80e3c-5d43-9eb4-d16c-78a2769247a6",
        "category": {
          "id": "9ca27d0d-66ce-42a9-8c85-6236563f2ddb",
          "name": "Orchestration \u0026 Management"
        },
        "subCategory": "Scheduling \u0026 Orchestration",
        "metadata": {
          "isAnnotation": false,
          "primaryColor": "#326CE5",
          "secondaryColor": "#7aa1f0",
          "shape": "circle",
          "styleOverrides": "",
          "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/kubernetes-color.svg",
          "svgComplete": "",
          "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/kubernetes-white.svg"
        },
        "model": {
          "version": "v1.32.0-alpha.3"
        },
        "components_count": 0,
        "relationships_count": 0,
        "components": null,
        "relationships": null
      },
      "styles": {
        "primaryColor": "#326CE5",
        "secondaryColor": "#7aa1f0",
        "shape": "concave-hexagon",
        "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/poddisruptionbudget-color.svg",
        "svgComplete": "",
        "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/poddisruptionbudget-white.svg"
      },
      "capabilities": [],
      "status": "enabled",
      "metadata": {
        "configurationUISchema": "",
        "genealogy": "",
        "instanceDetails": null,
        "isAnnotation": false,
        "isNamespaced": true,
        "published": false,
        "source_uri": "git://github.com/kubernetes/kubernetes/master/api/openapi-spec/v3"
      },
      "configuration": {
        "metadata": {
          "labels": {
            "app.kubernetes.io/component": "scheduler",
            "app.kubernetes.io/instance": "airflow",
            "app.kubernetes.io/managed-by": "Helm",
            "app.kubernetes.io/name": "airflow",
            "app.kubernetes.io/version": "3.0.5",
            "helm.sh/chart": "airflow-25.0.2"
          },
          "name": "airflow-scheduler",
          "namespace": "default"
        },
        "spec": {
          "maxUnavailable": 1,
          "selector": {
            "matchLabels": {
              "app.kubernetes.io/component": "scheduler",
              "app.kubernetes.io/instance": "airflow",
              "app.kubernetes.io/name": "airflow"
            }
          }
        }
      },
      "component": {
        "version": "policy/v1",
        "kind": "PodDisruptionBudget",
        "schema": ""
      }
    },
    {
      "id": "de0fb5f6-4e11-4447-b301-d150a7a4da49",
      "schemaVersion": "components.meshery.io/v1beta1",
      "version": "v1.0.0",
      "displayName": "airflow-triggerer",
      "description": "",
      "format": "",
      "model": {
        "id": "b3f5bc0d-30f7-607d-6c73-784ddde6cad8",
        "schemaVersion": "models.meshery.io/v1beta1",
        "version": "v1.0.0",
        "name": "kubernetes",
        "displayName": "Kubernetes",
        "status": "enabled",
        "registrant": {
          "id": "5bc80e3c-5d43-9eb4-d16c-78a2769247a6",
          "name": "Github",
          "credential_id": "00000000-0000-0000-0000-000000000000",
          "type": "registry",
          "sub_type": "",
          "kind": "github",
          "status": "registered",
          "user_id": "00000000-0000-0000-0000-000000000000",
          "created_at": "2025-09-17T17:32:17.981302672Z",
          "updated_at": "2025-09-17T17:32:17.981302672Z",
          "deleted_at": "0001-01-01T00:00:00Z",
          "schemaVersion": ""
        },
        "connection_id": "5bc80e3c-5d43-9eb4-d16c-78a2769247a6",
        "category": {
          "id": "9ca27d0d-66ce-42a9-8c85-6236563f2ddb",
          "name": "Orchestration \u0026 Management"
        },
        "subCategory": "Scheduling \u0026 Orchestration",
        "metadata": {
          "isAnnotation": false,
          "primaryColor": "#326CE5",
          "secondaryColor": "#7aa1f0",
          "shape": "circle",
          "styleOverrides": "",
          "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/kubernetes-color.svg",
          "svgComplete": "",
          "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/kubernetes-white.svg"
        },
        "model": {
          "version": "v1.32.0-alpha.3"
        },
        "components_count": 0,
        "relationships_count": 0,
        "components": null,
        "relationships": null
      },
      "styles": {
        "primaryColor": "#326CE5",
        "secondaryColor": "#7aa1f0",
        "shape": "concave-hexagon",
        "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/poddisruptionbudget-color.svg",
        "svgComplete": "",
        "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/poddisruptionbudget-white.svg"
      },
      "capabilities": [],
      "status": "enabled",
      "metadata": {
        "configurationUISchema": "",
        "genealogy": "",
        "instanceDetails": null,
        "isAnnotation": false,
        "isNamespaced": true,
        "published": false,
        "source_uri": "git://github.com/kubernetes/kubernetes/master/api/openapi-spec/v3"
      },
      "configuration": {
        "metadata": {
          "labels": {
            "app.kubernetes.io/component": "triggerer",
            "app.kubernetes.io/instance": "airflow",
            "app.kubernetes.io/managed-by": "Helm",
            "app.kubernetes.io/name": "airflow",
            "app.kubernetes.io/version": "3.0.5",
            "helm.sh/chart": "airflow-25.0.2"
          },
          "name": "airflow-triggerer",
          "namespace": "default"
        },
        "spec": {
          "maxUnavailable": 1,
          "selector": {
            "matchLabels": {
              "app.kubernetes.io/component": "triggerer",
              "app.kubernetes.io/instance": "airflow",
              "app.kubernetes.io/name": "airflow"
            }
          }
        }
      },
      "component": {
        "version": "policy/v1",
        "kind": "PodDisruptionBudget",
        "schema": ""
      }
    },
    {
      "id": "5b062f8b-5c13-41b2-a43c-8ca90bdff49f",
      "schemaVersion": "components.meshery.io/v1beta1",
      "version": "v1.0.0",
      "displayName": "airflow-web",
      "description": "",
      "format": "",
      "model": {
        "id": "b3f5bc0d-30f7-607d-6c73-784ddde6cad8",
        "schemaVersion": "models.meshery.io/v1beta1",
        "version": "v1.0.0",
        "name": "kubernetes",
        "displayName": "Kubernetes",
        "status": "enabled",
        "registrant": {
          "id": "5bc80e3c-5d43-9eb4-d16c-78a2769247a6",
          "name": "Github",
          "credential_id": "00000000-0000-0000-0000-000000000000",
          "type": "registry",
          "sub_type": "",
          "kind": "github",
          "status": "registered",
          "user_id": "00000000-0000-0000-0000-000000000000",
          "created_at": "2025-09-17T17:32:17.981302672Z",
          "updated_at": "2025-09-17T17:32:17.981302672Z",
          "deleted_at": "0001-01-01T00:00:00Z",
          "schemaVersion": ""
        },
        "connection_id": "5bc80e3c-5d43-9eb4-d16c-78a2769247a6",
        "category": {
          "id": "9ca27d0d-66ce-42a9-8c85-6236563f2ddb",
          "name": "Orchestration \u0026 Management"
        },
        "subCategory": "Scheduling \u0026 Orchestration",
        "metadata": {
          "isAnnotation": false,
          "primaryColor": "#326CE5",
          "secondaryColor": "#7aa1f0",
          "shape": "circle",
          "styleOverrides": "",
          "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/kubernetes-color.svg",
          "svgComplete": "",
          "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/kubernetes-white.svg"
        },
        "model": {
          "version": "v1.32.0-alpha.3"
        },
        "components_count": 0,
        "relationships_count": 0,
        "components": null,
        "relationships": null
      },
      "styles": {
        "primaryColor": "#326CE5",
        "secondaryColor": "#7aa1f0",
        "shape": "concave-hexagon",
        "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/poddisruptionbudget-color.svg",
        "svgComplete": "",
        "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/poddisruptionbudget-white.svg"
      },
      "capabilities": [],
      "status": "enabled",
      "metadata": {
        "configurationUISchema": "",
        "genealogy": "",
        "instanceDetails": null,
        "isAnnotation": false,
        "isNamespaced": true,
        "published": false,
        "source_uri": "git://github.com/kubernetes/kubernetes/master/api/openapi-spec/v3"
      },
      "configuration": {
        "metadata": {
          "labels": {
            "app.kubernetes.io/component": "web",
            "app.kubernetes.io/instance": "airflow",
            "app.kubernetes.io/managed-by": "Helm",
            "app.kubernetes.io/name": "airflow",
            "app.kubernetes.io/version": "3.0.5",
            "helm.sh/chart": "airflow-25.0.2"
          },
          "name": "airflow-web",
          "namespace": "default"
        },
        "spec": {
          "maxUnavailable": 1,
          "selector": {
            "matchLabels": {
              "app.kubernetes.io/component": "web",
              "app.kubernetes.io/instance": "airflow",
              "app.kubernetes.io/name": "airflow"
            }
          }
        }
      },
      "component": {
        "version": "policy/v1",
        "kind": "PodDisruptionBudget",
        "schema": ""
      }
    },
    {
      "id": "7c47e4ed-bcab-4abb-84f9-dff16e42a02b",
      "schemaVersion": "components.meshery.io/v1beta1",
      "version": "v1.0.0",
      "displayName": "airflow-worker",
      "description": "",
      "format": "",
      "model": {
        "id": "b3f5bc0d-30f7-607d-6c73-784ddde6cad8",
        "schemaVersion": "models.meshery.io/v1beta1",
        "version": "v1.0.0",
        "name": "kubernetes",
        "displayName": "Kubernetes",
        "status": "enabled",
        "registrant": {
          "id": "5bc80e3c-5d43-9eb4-d16c-78a2769247a6",
          "name": "Github",
          "credential_id": "00000000-0000-0000-0000-000000000000",
          "type": "registry",
          "sub_type": "",
          "kind": "github",
          "status": "registered",
          "user_id": "00000000-0000-0000-0000-000000000000",
          "created_at": "2025-09-17T17:32:17.981302672Z",
          "updated_at": "2025-09-17T17:32:17.981302672Z",
          "deleted_at": "0001-01-01T00:00:00Z",
          "schemaVersion": ""
        },
        "connection_id": "5bc80e3c-5d43-9eb4-d16c-78a2769247a6",
        "category": {
          "id": "9ca27d0d-66ce-42a9-8c85-6236563f2ddb",
          "name": "Orchestration \u0026 Management"
        },
        "subCategory": "Scheduling \u0026 Orchestration",
        "metadata": {
          "isAnnotation": false,
          "primaryColor": "#326CE5",
          "secondaryColor": "#7aa1f0",
          "shape": "circle",
          "styleOverrides": "",
          "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/kubernetes-color.svg",
          "svgComplete": "",
          "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/kubernetes-white.svg"
        },
        "model": {
          "version": "v1.32.0-alpha.3"
        },
        "components_count": 0,
        "relationships_count": 0,
        "components": null,
        "relationships": null
      },
      "styles": {
        "primaryColor": "#326CE5",
        "secondaryColor": "#7aa1f0",
        "shape": "concave-hexagon",
        "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/poddisruptionbudget-color.svg",
        "svgComplete": "",
        "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/poddisruptionbudget-white.svg"
      },
      "capabilities": [],
      "status": "enabled",
      "metadata": {
        "configurationUISchema": "",
        "genealogy": "",
        "instanceDetails": null,
        "isAnnotation": false,
        "isNamespaced": true,
        "published": false,
        "source_uri": "git://github.com/kubernetes/kubernetes/master/api/openapi-spec/v3"
      },
      "configuration": {
        "metadata": {
          "labels": {
            "app.kubernetes.io/component": "worker",
            "app.kubernetes.io/instance": "airflow",
            "app.kubernetes.io/managed-by": "Helm",
            "app.kubernetes.io/name": "airflow",
            "app.kubernetes.io/version": "3.0.5",
            "helm.sh/chart": "airflow-25.0.2"
          },
          "name": "airflow-worker",
          "namespace": "default"
        },
        "spec": {
          "maxUnavailable": 1,
          "selector": {
            "matchLabels": {
              "app.kubernetes.io/component": "worker",
              "app.kubernetes.io/instance": "airflow",
              "app.kubernetes.io/name": "airflow"
            }
          }
        }
      },
      "component": {
        "version": "policy/v1",
        "kind": "PodDisruptionBudget",
        "schema": ""
      }
    },
    {
      "id": "358e3566-9116-4e17-86a1-f2916fa86354",
      "schemaVersion": "components.meshery.io/v1beta1",
      "version": "v1.0.0",
      "displayName": "airflow-postgresql",
      "description": "",
      "format": "",
      "model": {
        "id": "b3f5bc0d-30f7-607d-6c73-784ddde6cad8",
        "schemaVersion": "models.meshery.io/v1beta1",
        "version": "v1.0.0",
        "name": "kubernetes",
        "displayName": "Kubernetes",
        "status": "enabled",
        "registrant": {
          "id": "5bc80e3c-5d43-9eb4-d16c-78a2769247a6",
          "name": "Github",
          "credential_id": "00000000-0000-0000-0000-000000000000",
          "type": "registry",
          "sub_type": "",
          "kind": "github",
          "status": "registered",
          "user_id": "00000000-0000-0000-0000-000000000000",
          "created_at": "2025-09-17T17:32:17.981302672Z",
          "updated_at": "2025-09-17T17:32:17.981302672Z",
          "deleted_at": "0001-01-01T00:00:00Z",
          "schemaVersion": ""
        },
        "connection_id": "5bc80e3c-5d43-9eb4-d16c-78a2769247a6",
        "category": {
          "id": "9ca27d0d-66ce-42a9-8c85-6236563f2ddb",
          "name": "Orchestration \u0026 Management"
        },
        "subCategory": "Scheduling \u0026 Orchestration",
        "metadata": {
          "isAnnotation": false,
          "primaryColor": "#326CE5",
          "secondaryColor": "#7aa1f0",
          "shape": "circle",
          "styleOverrides": "",
          "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/kubernetes-color.svg",
          "svgComplete": "",
          "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/kubernetes-white.svg"
        },
        "model": {
          "version": "v1.32.0-alpha.3"
        },
        "components_count": 0,
        "relationships_count": 0,
        "components": null,
        "relationships": null
      },
      "styles": {
        "primaryColor": "#326CE5",
        "secondaryColor": "#7aa1f0",
        "shape": "bottom-round-rectangle",
        "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/serviceaccount-color.svg",
        "svgComplete": "",
        "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/serviceaccount-white.svg"
      },
      "capabilities": [],
      "status": "enabled",
      "metadata": {
        "configurationUISchema": "",
        "genealogy": "",
        "instanceDetails": null,
        "isAnnotation": false,
        "isNamespaced": true,
        "published": false,
        "source_uri": "git://github.com/kubernetes/kubernetes/master/api/openapi-spec/v3"
      },
      "configuration": {
        "automountServiceAccountToken": false,
        "metadata": {
          "labels": {
            "app.kubernetes.io/instance": "airflow",
            "app.kubernetes.io/managed-by": "Helm",
            "app.kubernetes.io/name": "postgresql",
            "app.kubernetes.io/version": "17.6.0",
            "helm.sh/chart": "postgresql-16.7.26"
          },
          "name": "airflow-postgresql",
          "namespace": "default"
        }
      },
      "component": {
        "version": "v1",
        "kind": "ServiceAccount",
        "schema": ""
      }
    },
    {
      "id": "af4d4c58-a78c-43bb-9387-e01b9d61a11f",
      "schemaVersion": "components.meshery.io/v1beta1",
      "version": "v1.0.0",
      "displayName": "airflow-redis-master",
      "description": "",
      "format": "",
      "model": {
        "id": "b3f5bc0d-30f7-607d-6c73-784ddde6cad8",
        "schemaVersion": "models.meshery.io/v1beta1",
        "version": "v1.0.0",
        "name": "kubernetes",
        "displayName": "Kubernetes",
        "status": "enabled",
        "registrant": {
          "id": "5bc80e3c-5d43-9eb4-d16c-78a2769247a6",
          "name": "Github",
          "credential_id": "00000000-0000-0000-0000-000000000000",
          "type": "registry",
          "sub_type": "",
          "kind": "github",
          "status": "registered",
          "user_id": "00000000-0000-0000-0000-000000000000",
          "created_at": "2025-09-17T17:32:17.981302672Z",
          "updated_at": "2025-09-17T17:32:17.981302672Z",
          "deleted_at": "0001-01-01T00:00:00Z",
          "schemaVersion": ""
        },
        "connection_id": "5bc80e3c-5d43-9eb4-d16c-78a2769247a6",
        "category": {
          "id": "9ca27d0d-66ce-42a9-8c85-6236563f2ddb",
          "name": "Orchestration \u0026 Management"
        },
        "subCategory": "Scheduling \u0026 Orchestration",
        "metadata": {
          "isAnnotation": false,
          "primaryColor": "#326CE5",
          "secondaryColor": "#7aa1f0",
          "shape": "circle",
          "styleOverrides": "",
          "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/kubernetes-color.svg",
          "svgComplete": "",
          "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/kubernetes-white.svg"
        },
        "model": {
          "version": "v1.32.0-alpha.3"
        },
        "components_count": 0,
        "relationships_count": 0,
        "components": null,
        "relationships": null
      },
      "styles": {
        "primaryColor": "#326CE5",
        "secondaryColor": "#7aa1f0",
        "shape": "bottom-round-rectangle",
        "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/serviceaccount-color.svg",
        "svgComplete": "",
        "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/serviceaccount-white.svg"
      },
      "capabilities": [],
      "status": "enabled",
      "metadata": {
        "configurationUISchema": "",
        "genealogy": "",
        "instanceDetails": null,
        "isAnnotation": false,
        "isNamespaced": true,
        "published": false,
        "source_uri": "git://github.com/kubernetes/kubernetes/master/api/openapi-spec/v3"
      },
      "configuration": {
        "automountServiceAccountToken": false,
        "metadata": {
          "labels": {
            "app.kubernetes.io/instance": "airflow",
            "app.kubernetes.io/managed-by": "Helm",
            "app.kubernetes.io/name": "redis",
            "app.kubernetes.io/version": "8.2.1",
            "helm.sh/chart": "redis-22.0.4"
          },
          "name": "airflow-redis-master",
          "namespace": "default"
        }
      },
      "component": {
        "version": "v1",
        "kind": "ServiceAccount",
        "schema": ""
      }
    },
    {
      "id": "adef3921-1532-4cec-8110-36b62bc3907e",
      "schemaVersion": "components.meshery.io/v1beta1",
      "version": "v1.0.0",
      "displayName": "airflow",
      "description": "",
      "format": "",
      "model": {
        "id": "b3f5bc0d-30f7-607d-6c73-784ddde6cad8",
        "schemaVersion": "models.meshery.io/v1beta1",
        "version": "v1.0.0",
        "name": "kubernetes",
        "displayName": "Kubernetes",
        "status": "enabled",
        "registrant": {
          "id": "5bc80e3c-5d43-9eb4-d16c-78a2769247a6",
          "name": "Github",
          "credential_id": "00000000-0000-0000-0000-000000000000",
          "type": "registry",
          "sub_type": "",
          "kind": "github",
          "status": "registered",
          "user_id": "00000000-0000-0000-0000-000000000000",
          "created_at": "2025-09-17T17:32:17.981302672Z",
          "updated_at": "2025-09-17T17:32:17.981302672Z",
          "deleted_at": "0001-01-01T00:00:00Z",
          "schemaVersion": ""
        },
        "connection_id": "5bc80e3c-5d43-9eb4-d16c-78a2769247a6",
        "category": {
          "id": "9ca27d0d-66ce-42a9-8c85-6236563f2ddb",
          "name": "Orchestration \u0026 Management"
        },
        "subCategory": "Scheduling \u0026 Orchestration",
        "metadata": {
          "isAnnotation": false,
          "primaryColor": "#326CE5",
          "secondaryColor": "#7aa1f0",
          "shape": "circle",
          "styleOverrides": "",
          "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/kubernetes-color.svg",
          "svgComplete": "",
          "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/kubernetes-white.svg"
        },
        "model": {
          "version": "v1.32.0-alpha.3"
        },
        "components_count": 0,
        "relationships_count": 0,
        "components": null,
        "relationships": null
      },
      "styles": {
        "primaryColor": "#326CE5",
        "secondaryColor": "#7aa1f0",
        "shape": "bottom-round-rectangle",
        "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/serviceaccount-color.svg",
        "svgComplete": "",
        "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/serviceaccount-white.svg"
      },
      "capabilities": [],
      "status": "enabled",
      "metadata": {
        "configurationUISchema": "",
        "genealogy": "",
        "instanceDetails": null,
        "isAnnotation": false,
        "isNamespaced": true,
        "published": false,
        "source_uri": "git://github.com/kubernetes/kubernetes/master/api/openapi-spec/v3"
      },
      "configuration": {
        "automountServiceAccountToken": false,
        "metadata": {
          "labels": {
            "app.kubernetes.io/instance": "airflow",
            "app.kubernetes.io/managed-by": "Helm",
            "app.kubernetes.io/name": "airflow",
            "app.kubernetes.io/version": "3.0.5",
            "helm.sh/chart": "airflow-25.0.2"
          },
          "name": "airflow",
          "namespace": "default"
        }
      },
      "component": {
        "version": "v1",
        "kind": "ServiceAccount",
        "schema": ""
      }
    },
    {
      "id": "54a5e66b-e1f6-4fe5-aaa1-c907ef2d2c8a",
      "schemaVersion": "components.meshery.io/v1beta1",
      "version": "v1.0.0",
      "displayName": "airflow-postgresql",
      "description": "",
      "format": "",
      "model": {
        "id": "b3f5bc0d-30f7-607d-6c73-784ddde6cad8",
        "schemaVersion": "models.meshery.io/v1beta1",
        "version": "v1.0.0",
        "name": "kubernetes",
        "displayName": "Kubernetes",
        "status": "enabled",
        "registrant": {
          "id": "5bc80e3c-5d43-9eb4-d16c-78a2769247a6",
          "name": "Github",
          "credential_id": "00000000-0000-0000-0000-000000000000",
          "type": "registry",
          "sub_type": "",
          "kind": "github",
          "status": "registered",
          "user_id": "00000000-0000-0000-0000-000000000000",
          "created_at": "2025-09-17T17:32:17.981302672Z",
          "updated_at": "2025-09-17T17:32:17.981302672Z",
          "deleted_at": "0001-01-01T00:00:00Z",
          "schemaVersion": ""
        },
        "connection_id": "5bc80e3c-5d43-9eb4-d16c-78a2769247a6",
        "category": {
          "id": "9ca27d0d-66ce-42a9-8c85-6236563f2ddb",
          "name": "Orchestration \u0026 Management"
        },
        "subCategory": "Scheduling \u0026 Orchestration",
        "metadata": {
          "isAnnotation": false,
          "primaryColor": "#326CE5",
          "secondaryColor": "#7aa1f0",
          "shape": "circle",
          "styleOverrides": "",
          "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/kubernetes-color.svg",
          "svgComplete": "",
          "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/kubernetes-white.svg"
        },
        "model": {
          "version": "v1.32.0-alpha.3"
        },
        "components_count": 0,
        "relationships_count": 0,
        "components": null,
        "relationships": null
      },
      "styles": {
        "background-clip": "node",
        "background-image-containment": "over",
        "background-opacity": 0,
        "height": 32,
        "padding": 1,
        "primaryColor": "#326CE5",
        "secondaryColor": "#7aa1f0",
        "shape": "shield",
        "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/secret-color.svg",
        "svgComplete": "ui/public/static/img/meshmodels/kubernetes/complete/secret-complete.svg",
        "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/secret-white.svg",
        "width": 32
      },
      "capabilities": [],
      "status": "enabled",
      "metadata": {
        "configurationUISchema": "",
        "genealogy": "",
        "instanceDetails": null,
        "isAnnotation": false,
        "isNamespaced": true,
        "published": false,
        "source_uri": "git://github.com/kubernetes/kubernetes/master/api/openapi-spec/v3"
      },
      "configuration": {
        "data": {
          "password": "N1FERUdFUmNLWQ==",
          "postgres-password": "QmFGRXdRczRFbQ=="
        },
        "metadata": {
          "labels": {
            "app.kubernetes.io/instance": "airflow",
            "app.kubernetes.io/managed-by": "Helm",
            "app.kubernetes.io/name": "postgresql",
            "app.kubernetes.io/version": "17.6.0",
            "helm.sh/chart": "postgresql-16.7.26"
          },
          "name": "airflow-postgresql",
          "namespace": "default"
        },
        "type": "Opaque"
      },
      "component": {
        "version": "v1",
        "kind": "Secret",
        "schema": ""
      }
    },
    {
      "id": "3fb3512f-5f9e-48fe-93ac-d959c25b33ba",
      "schemaVersion": "components.meshery.io/v1beta1",
      "version": "v1.0.0",
      "displayName": "airflow-redis",
      "description": "",
      "format": "",
      "model": {
        "id": "b3f5bc0d-30f7-607d-6c73-784ddde6cad8",
        "schemaVersion": "models.meshery.io/v1beta1",
        "version": "v1.0.0",
        "name": "kubernetes",
        "displayName": "Kubernetes",
        "status": "enabled",
        "registrant": {
          "id": "5bc80e3c-5d43-9eb4-d16c-78a2769247a6",
          "name": "Github",
          "credential_id": "00000000-0000-0000-0000-000000000000",
          "type": "registry",
          "sub_type": "",
          "kind": "github",
          "status": "registered",
          "user_id": "00000000-0000-0000-0000-000000000000",
          "created_at": "2025-09-17T17:32:17.981302672Z",
          "updated_at": "2025-09-17T17:32:17.981302672Z",
          "deleted_at": "0001-01-01T00:00:00Z",
          "schemaVersion": ""
        },
        "connection_id": "5bc80e3c-5d43-9eb4-d16c-78a2769247a6",
        "category": {
          "id": "9ca27d0d-66ce-42a9-8c85-6236563f2ddb",
          "name": "Orchestration \u0026 Management"
        },
        "subCategory": "Scheduling \u0026 Orchestration",
        "metadata": {
          "isAnnotation": false,
          "primaryColor": "#326CE5",
          "secondaryColor": "#7aa1f0",
          "shape": "circle",
          "styleOverrides": "",
          "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/kubernetes-color.svg",
          "svgComplete": "",
          "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/kubernetes-white.svg"
        },
        "model": {
          "version": "v1.32.0-alpha.3"
        },
        "components_count": 0,
        "relationships_count": 0,
        "components": null,
        "relationships": null
      },
      "styles": {
        "background-clip": "node",
        "background-image-containment": "over",
        "background-opacity": 0,
        "height": 32,
        "padding": 1,
        "primaryColor": "#326CE5",
        "secondaryColor": "#7aa1f0",
        "shape": "shield",
        "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/secret-color.svg",
        "svgComplete": "ui/public/static/img/meshmodels/kubernetes/complete/secret-complete.svg",
        "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/secret-white.svg",
        "width": 32
      },
      "capabilities": [],
      "status": "enabled",
      "metadata": {
        "configurationUISchema": "",
        "genealogy": "",
        "instanceDetails": null,
        "isAnnotation": false,
        "isNamespaced": true,
        "published": false,
        "source_uri": "git://github.com/kubernetes/kubernetes/master/api/openapi-spec/v3"
      },
      "configuration": {
        "data": {
          "redis-password": "WHdtTEFKWjRRNA=="
        },
        "metadata": {
          "labels": {
            "app.kubernetes.io/instance": "airflow",
            "app.kubernetes.io/managed-by": "Helm",
            "app.kubernetes.io/name": "redis",
            "app.kubernetes.io/version": "8.2.1",
            "helm.sh/chart": "redis-22.0.4"
          },
          "name": "airflow-redis",
          "namespace": "default"
        },
        "type": "Opaque"
      },
      "component": {
        "version": "v1",
        "kind": "Secret",
        "schema": ""
      }
    },
    {
      "id": "89bc3671-c30b-4602-9d2a-ab5551071d67",
      "schemaVersion": "components.meshery.io/v1beta1",
      "version": "v1.0.0",
      "displayName": "airflow",
      "description": "",
      "format": "",
      "model": {
        "id": "b3f5bc0d-30f7-607d-6c73-784ddde6cad8",
        "schemaVersion": "models.meshery.io/v1beta1",
        "version": "v1.0.0",
        "name": "kubernetes",
        "displayName": "Kubernetes",
        "status": "enabled",
        "registrant": {
          "id": "5bc80e3c-5d43-9eb4-d16c-78a2769247a6",
          "name": "Github",
          "credential_id": "00000000-0000-0000-0000-000000000000",
          "type": "registry",
          "sub_type": "",
          "kind": "github",
          "status": "registered",
          "user_id": "00000000-0000-0000-0000-000000000000",
          "created_at": "2025-09-17T17:32:17.981302672Z",
          "updated_at": "2025-09-17T17:32:17.981302672Z",
          "deleted_at": "0001-01-01T00:00:00Z",
          "schemaVersion": ""
        },
        "connection_id": "5bc80e3c-5d43-9eb4-d16c-78a2769247a6",
        "category": {
          "id": "9ca27d0d-66ce-42a9-8c85-6236563f2ddb",
          "name": "Orchestration \u0026 Management"
        },
        "subCategory": "Scheduling \u0026 Orchestration",
        "metadata": {
          "isAnnotation": false,
          "primaryColor": "#326CE5",
          "secondaryColor": "#7aa1f0",
          "shape": "circle",
          "styleOverrides": "",
          "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/kubernetes-color.svg",
          "svgComplete": "",
          "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/kubernetes-white.svg"
        },
        "model": {
          "version": "v1.32.0-alpha.3"
        },
        "components_count": 0,
        "relationships_count": 0,
        "components": null,
        "relationships": null
      },
      "styles": {
        "background-clip": "node",
        "background-image-containment": "over",
        "background-opacity": 0,
        "height": 32,
        "padding": 1,
        "primaryColor": "#326CE5",
        "secondaryColor": "#7aa1f0",
        "shape": "shield",
        "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/secret-color.svg",
        "svgComplete": "ui/public/static/img/meshmodels/kubernetes/complete/secret-complete.svg",
        "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/secret-white.svg",
        "width": 32
      },
      "capabilities": [],
      "status": "enabled",
      "metadata": {
        "configurationUISchema": "",
        "genealogy": "",
        "instanceDetails": null,
        "isAnnotation": false,
        "isNamespaced": true,
        "published": false,
        "source_uri": "git://github.com/kubernetes/kubernetes/master/api/openapi-spec/v3"
      },
      "configuration": {
        "data": {
          "airflow-fernet-key": "V1ZJd01XVlZkbU5DYTNsR1lrdHBaMDh3TUd4TVVuUkJSVlZKZFhOM1FVZz0=",
          "airflow-jwt-secret-key": "VGpsSWQzQjZhSGgxWlRCd2RWZExaV2xYU21kT1REZG5jSEJFTlRaclZrOD0=",
          "airflow-password": "SFJKZzdXaFkwMA==",
          "airflow-secret-key": "YjJkelZUTnhTblpPWTJjMU5EazBjVEpaVjI1cE5FOHpNMGhCZFZWNFkwND0="
        },
        "metadata": {
          "labels": {
            "app.kubernetes.io/instance": "airflow",
            "app.kubernetes.io/managed-by": "Helm",
            "app.kubernetes.io/name": "airflow",
            "app.kubernetes.io/version": "3.0.5",
            "helm.sh/chart": "airflow-25.0.2"
          },
          "name": "airflow",
          "namespace": "default"
        },
        "type": "Opaque"
      },
      "component": {
        "version": "v1",
        "kind": "Secret",
        "schema": ""
      }
    },
    {
      "id": "623286c6-d22b-44f8-b68a-8fed2c89aeb3",
      "schemaVersion": "components.meshery.io/v1beta1",
      "version": "v1.0.0",
      "displayName": "airflow-redis-configuration",
      "description": "",
      "format": "",
      "model": {
        "id": "b3f5bc0d-30f7-607d-6c73-784ddde6cad8",
        "schemaVersion": "models.meshery.io/v1beta1",
        "version": "v1.0.0",
        "name": "kubernetes",
        "displayName": "Kubernetes",
        "status": "enabled",
        "registrant": {
          "id": "5bc80e3c-5d43-9eb4-d16c-78a2769247a6",
          "name": "Github",
          "credential_id": "00000000-0000-0000-0000-000000000000",
          "type": "registry",
          "sub_type": "",
          "kind": "github",
          "status": "registered",
          "user_id": "00000000-0000-0000-0000-000000000000",
          "created_at": "2025-09-17T17:32:17.981302672Z",
          "updated_at": "2025-09-17T17:32:17.981302672Z",
          "deleted_at": "0001-01-01T00:00:00Z",
          "schemaVersion": ""
        },
        "connection_id": "5bc80e3c-5d43-9eb4-d16c-78a2769247a6",
        "category": {
          "id": "9ca27d0d-66ce-42a9-8c85-6236563f2ddb",
          "name": "Orchestration \u0026 Management"
        },
        "subCategory": "Scheduling \u0026 Orchestration",
        "metadata": {
          "isAnnotation": false,
          "primaryColor": "#326CE5",
          "secondaryColor": "#7aa1f0",
          "shape": "circle",
          "styleOverrides": "",
          "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/kubernetes-color.svg",
          "svgComplete": "",
          "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/kubernetes-white.svg"
        },
        "model": {
          "version": "v1.32.0-alpha.3"
        },
        "components_count": 0,
        "relationships_count": 0,
        "components": null,
        "relationships": null
      },
      "styles": {
        "primaryColor": "#326CE5",
        "secondaryColor": "#7aa1f0",
        "shape": "bottom-round-rectangle",
        "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/configmap-color.svg",
        "svgComplete": "",
        "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/configmap-white.svg"
      },
      "capabilities": [],
      "status": "enabled",
      "metadata": {
        "configurationUISchema": "",
        "genealogy": "",
        "instanceDetails": null,
        "isAnnotation": false,
        "isNamespaced": true,
        "published": false,
        "source_uri": "git://github.com/kubernetes/kubernetes/master/api/openapi-spec/v3"
      },
      "configuration": {
        "data": {
          "master.conf": "dir /data\n# User-supplied master configuration:\nrename-command FLUSHDB \"\"\nrename-command FLUSHALL \"\"\n# End of master configuration",
          "redis.conf": "# User-supplied common configuration:\n# Enable AOF https://redis.io/topics/persistence#append-only-file\nappendonly yes\n# Disable RDB persistence, AOF persistence already enabled.\nsave \"\"\n# End of common configuration",
          "replica.conf": "dir /data\n# User-supplied replica configuration:\nrename-command FLUSHDB \"\"\nrename-command FLUSHALL \"\"\n# End of replica configuration",
          "users.acl": ""
        },
        "metadata": {
          "labels": {
            "app.kubernetes.io/instance": "airflow",
            "app.kubernetes.io/managed-by": "Helm",
            "app.kubernetes.io/name": "redis",
            "app.kubernetes.io/version": "8.2.1",
            "helm.sh/chart": "redis-22.0.4"
          },
          "name": "airflow-redis-configuration",
          "namespace": "default"
        }
      },
      "component": {
        "version": "v1",
        "kind": "ConfigMap",
        "schema": ""
      }
    },
    {
      "id": "2fe4e730-976c-45e5-aed9-3c2408706543",
      "schemaVersion": "components.meshery.io/v1beta1",
      "version": "v1.0.0",
      "displayName": "airflow-redis-health",
      "description": "",
      "format": "",
      "model": {
        "id": "b3f5bc0d-30f7-607d-6c73-784ddde6cad8",
        "schemaVersion": "models.meshery.io/v1beta1",
        "version": "v1.0.0",
        "name": "kubernetes",
        "displayName": "Kubernetes",
        "status": "enabled",
        "registrant": {
          "id": "5bc80e3c-5d43-9eb4-d16c-78a2769247a6",
          "name": "Github",
          "credential_id": "00000000-0000-0000-0000-000000000000",
          "type": "registry",
          "sub_type": "",
          "kind": "github",
          "status": "registered",
          "user_id": "00000000-0000-0000-0000-000000000000",
          "created_at": "2025-09-17T17:32:17.981302672Z",
          "updated_at": "2025-09-17T17:32:17.981302672Z",
          "deleted_at": "0001-01-01T00:00:00Z",
          "schemaVersion": ""
        },
        "connection_id": "5bc80e3c-5d43-9eb4-d16c-78a2769247a6",
        "category": {
          "id": "9ca27d0d-66ce-42a9-8c85-6236563f2ddb",
          "name": "Orchestration \u0026 Management"
        },
        "subCategory": "Scheduling \u0026 Orchestration",
        "metadata": {
          "isAnnotation": false,
          "primaryColor": "#326CE5",
          "secondaryColor": "#7aa1f0",
          "shape": "circle",
          "styleOverrides": "",
          "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/kubernetes-color.svg",
          "svgComplete": "",
          "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/kubernetes-white.svg"
        },
        "model": {
          "version": "v1.32.0-alpha.3"
        },
        "components_count": 0,
        "relationships_count": 0,
        "components": null,
        "relationships": null
      },
      "styles": {
        "primaryColor": "#326CE5",
        "secondaryColor": "#7aa1f0",
        "shape": "bottom-round-rectangle",
        "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/configmap-color.svg",
        "svgComplete": "",
        "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/configmap-white.svg"
      },
      "capabilities": [],
      "status": "enabled",
      "metadata": {
        "configurationUISchema": "",
        "genealogy": "",
        "instanceDetails": null,
        "isAnnotation": false,
        "isNamespaced": true,
        "published": false,
        "source_uri": "git://github.com/kubernetes/kubernetes/master/api/openapi-spec/v3"
      },
      "configuration": {
        "data": {
          "ping_liveness_local.sh": "#!/bin/bash\n\n[[ -f $REDIS_PASSWORD_FILE ]] \u0026\u0026 export REDIS_PASSWORD=\"$(\u003c \"${REDIS_PASSWORD_FILE}\")\"\n[[ -n \"$REDIS_PASSWORD\" ]] \u0026\u0026 export REDISCLI_AUTH=\"$REDIS_PASSWORD\"\nresponse=$(\n  timeout -s 15 $1 \\\n  redis-cli \\\n    -h localhost \\\n    -p $REDIS_PORT \\\n    ping\n)\nif [ \"$?\" -eq \"124\" ]; then\n  echo \"Timed out\"\n  exit 1\nfi\nresponseFirstWord=$(echo $response | head -n1 | awk '{print $1;}')\nif [ \"$response\" != \"PONG\" ] \u0026\u0026 [ \"$responseFirstWord\" != \"LOADING\" ] \u0026\u0026 [ \"$responseFirstWord\" != \"MASTERDOWN\" ]; then\n  echo \"$response\"\n  exit 1\nfi",
          "ping_liveness_local_and_master.sh": "script_dir=\"$(dirname \"$0\")\"\nexit_status=0\n\"$script_dir/ping_liveness_local.sh\" $1 || exit_status=$?\n\"$script_dir/ping_liveness_master.sh\" $1 || exit_status=$?\nexit $exit_status",
          "ping_liveness_master.sh": "#!/bin/bash\n\n[[ -f $REDIS_MASTER_PASSWORD_FILE ]] \u0026\u0026 export REDIS_MASTER_PASSWORD=\"$(\u003c \"${REDIS_MASTER_PASSWORD_FILE}\")\"\n[[ -n \"$REDIS_MASTER_PASSWORD\" ]] \u0026\u0026 export REDISCLI_AUTH=\"$REDIS_MASTER_PASSWORD\"\nresponse=$(\n  timeout -s 15 $1 \\\n  redis-cli \\\n    -h $REDIS_MASTER_HOST \\\n    -p $REDIS_MASTER_PORT_NUMBER \\\n    ping\n)\nif [ \"$?\" -eq \"124\" ]; then\n  echo \"Timed out\"\n  exit 1\nfi\nresponseFirstWord=$(echo $response | head -n1 | awk '{print $1;}')\nif [ \"$response\" != \"PONG\" ] \u0026\u0026 [ \"$responseFirstWord\" != \"LOADING\" ]; then\n  echo \"$response\"\n  exit 1\nfi",
          "ping_readiness_local.sh": "#!/bin/bash\n\n[[ -f $REDIS_PASSWORD_FILE ]] \u0026\u0026 export REDIS_PASSWORD=\"$(\u003c \"${REDIS_PASSWORD_FILE}\")\"\n[[ -n \"$REDIS_PASSWORD\" ]] \u0026\u0026 export REDISCLI_AUTH=\"$REDIS_PASSWORD\"\nresponse=$(\n  timeout -s 15 $1 \\\n  redis-cli \\\n    -h localhost \\\n    -p $REDIS_PORT \\\n    ping\n)\nif [ \"$?\" -eq \"124\" ]; then\n  echo \"Timed out\"\n  exit 1\nfi\nif [ \"$response\" != \"PONG\" ]; then\n  echo \"$response\"\n  exit 1\nfi",
          "ping_readiness_local_and_master.sh": "script_dir=\"$(dirname \"$0\")\"\nexit_status=0\n\"$script_dir/ping_readiness_local.sh\" $1 || exit_status=$?\n\"$script_dir/ping_readiness_master.sh\" $1 || exit_status=$?\nexit $exit_status",
          "ping_readiness_master.sh": "#!/bin/bash\n\n[[ -f $REDIS_MASTER_PASSWORD_FILE ]] \u0026\u0026 export REDIS_MASTER_PASSWORD=\"$(\u003c \"${REDIS_MASTER_PASSWORD_FILE}\")\"\n[[ -n \"$REDIS_MASTER_PASSWORD\" ]] \u0026\u0026 export REDISCLI_AUTH=\"$REDIS_MASTER_PASSWORD\"\nresponse=$(\n  timeout -s 15 $1 \\\n  redis-cli \\\n    -h $REDIS_MASTER_HOST \\\n    -p $REDIS_MASTER_PORT_NUMBER \\\n    ping\n)\nif [ \"$?\" -eq \"124\" ]; then\n  echo \"Timed out\"\n  exit 1\nfi\nif [ \"$response\" != \"PONG\" ]; then\n  echo \"$response\"\n  exit 1\nfi"
        },
        "metadata": {
          "labels": {
            "app.kubernetes.io/instance": "airflow",
            "app.kubernetes.io/managed-by": "Helm",
            "app.kubernetes.io/name": "redis",
            "app.kubernetes.io/version": "8.2.1",
            "helm.sh/chart": "redis-22.0.4"
          },
          "name": "airflow-redis-health",
          "namespace": "default"
        }
      },
      "component": {
        "version": "v1",
        "kind": "ConfigMap",
        "schema": ""
      }
    },
    {
      "id": "1b47cf70-71c8-461d-8908-00980e3fdd2b",
      "schemaVersion": "components.meshery.io/v1beta1",
      "version": "v1.0.0",
      "displayName": "airflow-redis-scripts",
      "description": "",
      "format": "",
      "model": {
        "id": "b3f5bc0d-30f7-607d-6c73-784ddde6cad8",
        "schemaVersion": "models.meshery.io/v1beta1",
        "version": "v1.0.0",
        "name": "kubernetes",
        "displayName": "Kubernetes",
        "status": "enabled",
        "registrant": {
          "id": "5bc80e3c-5d43-9eb4-d16c-78a2769247a6",
          "name": "Github",
          "credential_id": "00000000-0000-0000-0000-000000000000",
          "type": "registry",
          "sub_type": "",
          "kind": "github",
          "status": "registered",
          "user_id": "00000000-0000-0000-0000-000000000000",
          "created_at": "2025-09-17T17:32:17.981302672Z",
          "updated_at": "2025-09-17T17:32:17.981302672Z",
          "deleted_at": "0001-01-01T00:00:00Z",
          "schemaVersion": ""
        },
        "connection_id": "5bc80e3c-5d43-9eb4-d16c-78a2769247a6",
        "category": {
          "id": "9ca27d0d-66ce-42a9-8c85-6236563f2ddb",
          "name": "Orchestration \u0026 Management"
        },
        "subCategory": "Scheduling \u0026 Orchestration",
        "metadata": {
          "isAnnotation": false,
          "primaryColor": "#326CE5",
          "secondaryColor": "#7aa1f0",
          "shape": "circle",
          "styleOverrides": "",
          "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/kubernetes-color.svg",
          "svgComplete": "",
          "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/kubernetes-white.svg"
        },
        "model": {
          "version": "v1.32.0-alpha.3"
        },
        "components_count": 0,
        "relationships_count": 0,
        "components": null,
        "relationships": null
      },
      "styles": {
        "primaryColor": "#326CE5",
        "secondaryColor": "#7aa1f0",
        "shape": "bottom-round-rectangle",
        "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/configmap-color.svg",
        "svgComplete": "",
        "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/configmap-white.svg"
      },
      "capabilities": [],
      "status": "enabled",
      "metadata": {
        "configurationUISchema": "",
        "genealogy": "",
        "instanceDetails": null,
        "isAnnotation": false,
        "isNamespaced": true,
        "published": false,
        "source_uri": "git://github.com/kubernetes/kubernetes/master/api/openapi-spec/v3"
      },
      "configuration": {
        "data": {
          "start-master.sh": "#!/bin/bash\n\n[[ -f $REDIS_PASSWORD_FILE ]] \u0026\u0026 export REDIS_PASSWORD=\"$(\u003c \"${REDIS_PASSWORD_FILE}\")\"\nif [[ -f /opt/bitnami/redis/mounted-etc/master.conf ]];then\n    cp /opt/bitnami/redis/mounted-etc/master.conf /opt/bitnami/redis/etc/master.conf\nfi\nif [[ -f /opt/bitnami/redis/mounted-etc/redis.conf ]];then\n    cp /opt/bitnami/redis/mounted-etc/redis.conf /opt/bitnami/redis/etc/redis.conf\nfi\nif [[ -f /opt/bitnami/redis/mounted-etc/users.acl ]];then\n    cp /opt/bitnami/redis/mounted-etc/users.acl /opt/bitnami/redis/etc/users.acl\nfi\nARGS=(\"--port\" \"${REDIS_PORT}\")\nARGS+=(\"--requirepass\" \"${REDIS_PASSWORD}\")\nARGS+=(\"--masterauth\" \"${REDIS_PASSWORD}\")\nARGS+=(\"--include\" \"/opt/bitnami/redis/etc/redis.conf\")\nARGS+=(\"--include\" \"/opt/bitnami/redis/etc/master.conf\")\nexec redis-server \"${ARGS[@]}\"\n"
        },
        "metadata": {
          "labels": {
            "app.kubernetes.io/instance": "airflow",
            "app.kubernetes.io/managed-by": "Helm",
            "app.kubernetes.io/name": "redis",
            "app.kubernetes.io/version": "8.2.1",
            "helm.sh/chart": "redis-22.0.4"
          },
          "name": "airflow-redis-scripts",
          "namespace": "default"
        }
      },
      "component": {
        "version": "v1",
        "kind": "ConfigMap",
        "schema": ""
      }
    },
    {
      "id": "789b0de0-7c5e-4f37-a7ea-7cf680149c77",
      "schemaVersion": "components.meshery.io/v1beta1",
      "version": "v1.0.0",
      "displayName": "airflow",
      "description": "",
      "format": "",
      "model": {
        "id": "b3f5bc0d-30f7-607d-6c73-784ddde6cad8",
        "schemaVersion": "models.meshery.io/v1beta1",
        "version": "v1.0.0",
        "name": "kubernetes",
        "displayName": "Kubernetes",
        "status": "enabled",
        "registrant": {
          "id": "5bc80e3c-5d43-9eb4-d16c-78a2769247a6",
          "name": "Github",
          "credential_id": "00000000-0000-0000-0000-000000000000",
          "type": "registry",
          "sub_type": "",
          "kind": "github",
          "status": "registered",
          "user_id": "00000000-0000-0000-0000-000000000000",
          "created_at": "2025-09-17T17:32:17.981302672Z",
          "updated_at": "2025-09-17T17:32:17.981302672Z",
          "deleted_at": "0001-01-01T00:00:00Z",
          "schemaVersion": ""
        },
        "connection_id": "5bc80e3c-5d43-9eb4-d16c-78a2769247a6",
        "category": {
          "id": "9ca27d0d-66ce-42a9-8c85-6236563f2ddb",
          "name": "Orchestration \u0026 Management"
        },
        "subCategory": "Scheduling \u0026 Orchestration",
        "metadata": {
          "isAnnotation": false,
          "primaryColor": "#326CE5",
          "secondaryColor": "#7aa1f0",
          "shape": "circle",
          "styleOverrides": "",
          "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/kubernetes-color.svg",
          "svgComplete": "",
          "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/kubernetes-white.svg"
        },
        "model": {
          "version": "v1.32.0-alpha.3"
        },
        "components_count": 0,
        "relationships_count": 0,
        "components": null,
        "relationships": null
      },
      "styles": {
        "primaryColor": "#326CE5",
        "secondaryColor": "#7aa1f0",
        "shape": "bottom-round-rectangle",
        "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/configmap-color.svg",
        "svgComplete": "",
        "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/configmap-white.svg"
      },
      "capabilities": [],
      "status": "enabled",
      "metadata": {
        "configurationUISchema": "",
        "genealogy": "",
        "instanceDetails": null,
        "isAnnotation": false,
        "isNamespaced": true,
        "published": false,
        "source_uri": "git://github.com/kubernetes/kubernetes/master/api/openapi-spec/v3"
      },
      "configuration": {
        "data": {
          "airflow.cfg": "[api]\nbase_url = http://127.0.0.1:8080\nport = 8080\n[core]\nexecution_api_server_url = http://airflow-web:8080/execution/\nexecutor = CeleryExecutor\nload_examples = False\n[logging]\ncolored_console_log = False\n[metrics]\nstatsd_host = airflow-statsd-metrics\nstatsd_on = False\nstatsd_port = 9125\nstatsd_prefix = airflow\n[scheduler]\nstandalone_dag_processor = True\n[triggerer]\ncapacity = 1000\n[webserver]\nbase_url = http://127.0.0.1:8080\nenable_proxy_fix = False"
        },
        "metadata": {
          "labels": {
            "app.kubernetes.io/instance": "airflow",
            "app.kubernetes.io/managed-by": "Helm",
            "app.kubernetes.io/name": "airflow",
            "app.kubernetes.io/version": "3.0.5",
            "helm.sh/chart": "airflow-25.0.2"
          },
          "name": "airflow",
          "namespace": "default"
        }
      },
      "component": {
        "version": "v1",
        "kind": "ConfigMap",
        "schema": ""
      }
    },
    {
      "id": "128c5bd7-5e72-4f1c-89f0-8466318268c6",
      "schemaVersion": "components.meshery.io/v1beta1",
      "version": "v1.0.0",
      "displayName": "airflow-statsd-metrics",
      "description": "",
      "format": "",
      "model": {
        "id": "b3f5bc0d-30f7-607d-6c73-784ddde6cad8",
        "schemaVersion": "models.meshery.io/v1beta1",
        "version": "v1.0.0",
        "name": "kubernetes",
        "displayName": "Kubernetes",
        "status": "enabled",
        "registrant": {
          "id": "5bc80e3c-5d43-9eb4-d16c-78a2769247a6",
          "name": "Github",
          "credential_id": "00000000-0000-0000-0000-000000000000",
          "type": "registry",
          "sub_type": "",
          "kind": "github",
          "status": "registered",
          "user_id": "00000000-0000-0000-0000-000000000000",
          "created_at": "2025-09-17T17:32:17.981302672Z",
          "updated_at": "2025-09-17T17:32:17.981302672Z",
          "deleted_at": "0001-01-01T00:00:00Z",
          "schemaVersion": ""
        },
        "connection_id": "5bc80e3c-5d43-9eb4-d16c-78a2769247a6",
        "category": {
          "id": "9ca27d0d-66ce-42a9-8c85-6236563f2ddb",
          "name": "Orchestration \u0026 Management"
        },
        "subCategory": "Scheduling \u0026 Orchestration",
        "metadata": {
          "isAnnotation": false,
          "primaryColor": "#326CE5",
          "secondaryColor": "#7aa1f0",
          "shape": "circle",
          "styleOverrides": "",
          "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/kubernetes-color.svg",
          "svgComplete": "",
          "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/kubernetes-white.svg"
        },
        "model": {
          "version": "v1.32.0-alpha.3"
        },
        "components_count": 0,
        "relationships_count": 0,
        "components": null,
        "relationships": null
      },
      "styles": {
        "primaryColor": "#326CE5",
        "secondaryColor": "#7aa1f0",
        "shape": "bottom-round-rectangle",
        "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/configmap-color.svg",
        "svgComplete": "",
        "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/configmap-white.svg"
      },
      "capabilities": [],
      "status": "enabled",
      "metadata": {
        "configurationUISchema": "",
        "genealogy": "",
        "instanceDetails": null,
        "isAnnotation": false,
        "isNamespaced": true,
        "published": false,
        "source_uri": "git://github.com/kubernetes/kubernetes/master/api/openapi-spec/v3"
      },
      "configuration": {
        "data": {
          "mappings.yml": "mappings:\n  - match: airflow.dagrun.dependency-check.*.*\n    name: \"airflow_dagrun_dependency_check\"\n    labels:\n      dag_id: \"$1\"\n\n  - match: airflow.operator_successes_(.*)\n    match_type: regex\n    name: \"airflow_operator_successes\"\n    labels:\n      operator: \"$1\"\n\n  - match: airflow.operator_failures_(.*)\n    match_type: regex\n    name: \"airflow_operator_failures\"\n    labels:\n      operator: \"$1\"\n\n  - match: airflow.scheduler_heartbeat\n    match_type: regex\n    name: \"airflow_scheduler_heartbeat\"\n    labels:\n      type: counter\n\n  - match: airflow.dag_processor_heartbeat\n    match_type: regex\n    name: \"airflow_dag_processor_heartbeat\"\n    labels:\n      type: counter\n\n  - match: airflow.dag.*.*.duration\n    name: \"airflow_task_duration\"\n    labels:\n      dag_id: \"$1\"\n      task_id: \"$2\"\n\n  - match: airflow.dagrun.duration.success.*\n    name: \"airflow_dagrun_duration\"\n    labels:\n      dag_id: \"$1\"\n\n  - match: airflow.dagrun.duration.failed.*\n    name: \"airflow_dagrun_failed\"\n    labels:\n      dag_id: \"$1\"\n\n  - match: airflow.dagrun.schedule_delay.*\n    name: \"airflow_dagrun_schedule_delay\"\n    labels:\n      dag_id: \"$1\"\n\n  - match: airflow.dag_processing.last_runtime.*\n    name: \"airflow_dag_processing_last_runtime\"\n    labels:\n      dag_file: \"$1\"\n\n  - match: airflow.dag_processing.last_run.seconds_ago.*\n    name: \"airflow_dag_processing_last_run_seconds_ago\"\n    labels:\n      dag_file: \"$1\"\n\n  - match: airflow.pool.open_slots.*\n    name: \"airflow_pool_open_slots\"\n    labels:\n      pool: \"$1\"\n\n  - match: airflow.pool.used_slots.*\n    name: \"airflow_pool_used_slots\"\n    labels:\n      pool: \"$1\"\n\n  - match: airflow.pool.starving_tasks.*\n    name: \"airflow_pool_starving_tasks\"\n    labels:\n      pool: \"$1\"\n\n  - match: airflow.executor.open_slots.*\n    name: \"airflow_executor_open_slots\"\n    labels:\n      executor: \"$1\"\n\n  - match: airflow.executor.queued_tasks.*\n    name: \"airflow_executor_queued_tasks\"\n    labels:\n      executor: \"$1\"\n\n  - match: airflow.executor.running_tasks.*\n    name: \"airflow_executor_running_tasks\"\n    labels:\n      executor: \"$1\""
        },
        "metadata": {
          "labels": {
            "app.kubernetes.io/component": "metrics",
            "app.kubernetes.io/instance": "airflow",
            "app.kubernetes.io/managed-by": "Helm",
            "app.kubernetes.io/name": "airflow",
            "app.kubernetes.io/version": "3.0.5",
            "helm.sh/chart": "airflow-25.0.2"
          },
          "name": "airflow-statsd-metrics",
          "namespace": "default"
        }
      },
      "component": {
        "version": "v1",
        "kind": "ConfigMap",
        "schema": ""
      }
    },
    {
      "id": "7ed72b80-7a14-4770-8b0e-faccf0df23b1",
      "schemaVersion": "components.meshery.io/v1beta1",
      "version": "v1.0.0",
      "displayName": "airflow-web",
      "description": "",
      "format": "",
      "model": {
        "id": "b3f5bc0d-30f7-607d-6c73-784ddde6cad8",
        "schemaVersion": "models.meshery.io/v1beta1",
        "version": "v1.0.0",
        "name": "kubernetes",
        "displayName": "Kubernetes",
        "status": "enabled",
        "registrant": {
          "id": "5bc80e3c-5d43-9eb4-d16c-78a2769247a6",
          "name": "Github",
          "credential_id": "00000000-0000-0000-0000-000000000000",
          "type": "registry",
          "sub_type": "",
          "kind": "github",
          "status": "registered",
          "user_id": "00000000-0000-0000-0000-000000000000",
          "created_at": "2025-09-17T17:32:17.981302672Z",
          "updated_at": "2025-09-17T17:32:17.981302672Z",
          "deleted_at": "0001-01-01T00:00:00Z",
          "schemaVersion": ""
        },
        "connection_id": "5bc80e3c-5d43-9eb4-d16c-78a2769247a6",
        "category": {
          "id": "9ca27d0d-66ce-42a9-8c85-6236563f2ddb",
          "name": "Orchestration \u0026 Management"
        },
        "subCategory": "Scheduling \u0026 Orchestration",
        "metadata": {
          "isAnnotation": false,
          "primaryColor": "#326CE5",
          "secondaryColor": "#7aa1f0",
          "shape": "circle",
          "styleOverrides": "",
          "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/kubernetes-color.svg",
          "svgComplete": "",
          "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/kubernetes-white.svg"
        },
        "model": {
          "version": "v1.32.0-alpha.3"
        },
        "components_count": 0,
        "relationships_count": 0,
        "components": null,
        "relationships": null
      },
      "styles": {
        "primaryColor": "#326CE5",
        "secondaryColor": "#7aa1f0",
        "shape": "bottom-round-rectangle",
        "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/configmap-color.svg",
        "svgComplete": "",
        "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/configmap-white.svg"
      },
      "capabilities": [],
      "status": "enabled",
      "metadata": {
        "configurationUISchema": "",
        "genealogy": "",
        "instanceDetails": null,
        "isAnnotation": false,
        "isNamespaced": true,
        "published": false,
        "source_uri": "git://github.com/kubernetes/kubernetes/master/api/openapi-spec/v3"
      },
      "configuration": {
        "data": {
          "webserver_config.py": "\"\"\"Configuration for the Airflow webserver\"\"\"\n\nfrom __future__ import annotations\n\nimport os\nfrom flask_appbuilder.const import AUTH_DB\n\nAUTH_TYPE = AUTH_DB\n\nbasedir = os.path.abspath(os.path.dirname(__file__))\n\n# Flask-WTF flag for CSRF\nWTF_CSRF_ENABLED = True\nWTF_CSRF_TIME_LIMIT = None\n# Ensure passwords are hashed using the PBKDF2 method\n# https://github.com/apache/airflow/issues/51833\nFAB_PASSWORD_HASH_METHOD = \"pbkdf2:sha256\""
        },
        "metadata": {
          "labels": {
            "app.kubernetes.io/component": "web",
            "app.kubernetes.io/instance": "airflow",
            "app.kubernetes.io/managed-by": "Helm",
            "app.kubernetes.io/name": "airflow",
            "app.kubernetes.io/version": "3.0.5",
            "helm.sh/chart": "airflow-25.0.2"
          },
          "name": "airflow-web",
          "namespace": "default"
        }
      },
      "component": {
        "version": "v1",
        "kind": "ConfigMap",
        "schema": ""
      }
    },
    {
      "id": "726f2380-aaa9-4add-b1d9-c3a30a52ccdf",
      "schemaVersion": "components.meshery.io/v1beta1",
      "version": "v1.0.0",
      "displayName": "airflow-postgresql-hl",
      "description": "",
      "format": "",
      "model": {
        "id": "b3f5bc0d-30f7-607d-6c73-784ddde6cad8",
        "schemaVersion": "models.meshery.io/v1beta1",
        "version": "v1.0.0",
        "name": "kubernetes",
        "displayName": "Kubernetes",
        "status": "enabled",
        "registrant": {
          "id": "5bc80e3c-5d43-9eb4-d16c-78a2769247a6",
          "name": "Github",
          "credential_id": "00000000-0000-0000-0000-000000000000",
          "type": "registry",
          "sub_type": "",
          "kind": "github",
          "status": "registered",
          "user_id": "00000000-0000-0000-0000-000000000000",
          "created_at": "2025-09-17T17:32:17.981302672Z",
          "updated_at": "2025-09-17T17:32:17.981302672Z",
          "deleted_at": "0001-01-01T00:00:00Z",
          "schemaVersion": ""
        },
        "connection_id": "5bc80e3c-5d43-9eb4-d16c-78a2769247a6",
        "category": {
          "id": "9ca27d0d-66ce-42a9-8c85-6236563f2ddb",
          "name": "Orchestration \u0026 Management"
        },
        "subCategory": "Scheduling \u0026 Orchestration",
        "metadata": {
          "isAnnotation": false,
          "primaryColor": "#326CE5",
          "secondaryColor": "#7aa1f0",
          "shape": "circle",
          "styleOverrides": "",
          "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/kubernetes-color.svg",
          "svgComplete": "",
          "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/kubernetes-white.svg"
        },
        "model": {
          "version": "v1.32.0-alpha.3"
        },
        "components_count": 0,
        "relationships_count": 0,
        "components": null,
        "relationships": null
      },
      "styles": {
        "background-position-y": "4.5",
        "height": 20,
        "padding": 12,
        "primaryColor": "#326CE5",
        "secondaryColor": "#7aa1f0",
        "shape": "round-triangle",
        "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/service-color.svg",
        "svgComplete": "",
        "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/service-white.svg",
        "width": 20
      },
      "capabilities": [],
      "status": "enabled",
      "metadata": {
        "configurationUISchema": "",
        "genealogy": "",
        "instanceDetails": null,
        "isAnnotation": false,
        "isNamespaced": true,
        "published": false,
        "source_uri": "git://github.com/kubernetes/kubernetes/master/api/openapi-spec/v3"
      },
      "configuration": {
        "metadata": {
          "annotations": null,
          "labels": {
            "app.kubernetes.io/component": "primary",
            "app.kubernetes.io/instance": "airflow",
            "app.kubernetes.io/managed-by": "Helm",
            "app.kubernetes.io/name": "postgresql",
            "app.kubernetes.io/version": "17.6.0",
            "helm.sh/chart": "postgresql-16.7.26"
          },
          "name": "airflow-postgresql-hl",
          "namespace": "default"
        },
        "spec": {
          "clusterIP": "None",
          "ports": [
            {
              "name": "tcp-postgresql",
              "port": 5432,
              "targetPort": "tcp-postgresql"
            }
          ],
          "publishNotReadyAddresses": true,
          "selector": {
            "app.kubernetes.io/component": "primary",
            "app.kubernetes.io/instance": "airflow",
            "app.kubernetes.io/name": "postgresql"
          },
          "type": "ClusterIP"
        }
      },
      "component": {
        "version": "v1",
        "kind": "Service",
        "schema": ""
      }
    },
    {
      "id": "be045b70-1c69-4250-8182-79db92779ea4",
      "schemaVersion": "components.meshery.io/v1beta1",
      "version": "v1.0.0",
      "displayName": "airflow-postgresql",
      "description": "",
      "format": "",
      "model": {
        "id": "b3f5bc0d-30f7-607d-6c73-784ddde6cad8",
        "schemaVersion": "models.meshery.io/v1beta1",
        "version": "v1.0.0",
        "name": "kubernetes",
        "displayName": "Kubernetes",
        "status": "enabled",
        "registrant": {
          "id": "5bc80e3c-5d43-9eb4-d16c-78a2769247a6",
          "name": "Github",
          "credential_id": "00000000-0000-0000-0000-000000000000",
          "type": "registry",
          "sub_type": "",
          "kind": "github",
          "status": "registered",
          "user_id": "00000000-0000-0000-0000-000000000000",
          "created_at": "2025-09-17T17:32:17.981302672Z",
          "updated_at": "2025-09-17T17:32:17.981302672Z",
          "deleted_at": "0001-01-01T00:00:00Z",
          "schemaVersion": ""
        },
        "connection_id": "5bc80e3c-5d43-9eb4-d16c-78a2769247a6",
        "category": {
          "id": "9ca27d0d-66ce-42a9-8c85-6236563f2ddb",
          "name": "Orchestration \u0026 Management"
        },
        "subCategory": "Scheduling \u0026 Orchestration",
        "metadata": {
          "isAnnotation": false,
          "primaryColor": "#326CE5",
          "secondaryColor": "#7aa1f0",
          "shape": "circle",
          "styleOverrides": "",
          "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/kubernetes-color.svg",
          "svgComplete": "",
          "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/kubernetes-white.svg"
        },
        "model": {
          "version": "v1.32.0-alpha.3"
        },
        "components_count": 0,
        "relationships_count": 0,
        "components": null,
        "relationships": null
      },
      "styles": {
        "background-position-y": "4.5",
        "height": 20,
        "padding": 12,
        "primaryColor": "#326CE5",
        "secondaryColor": "#7aa1f0",
        "shape": "round-triangle",
        "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/service-color.svg",
        "svgComplete": "",
        "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/service-white.svg",
        "width": 20
      },
      "capabilities": [],
      "status": "enabled",
      "metadata": {
        "configurationUISchema": "",
        "genealogy": "",
        "instanceDetails": null,
        "isAnnotation": false,
        "isNamespaced": true,
        "published": false,
        "source_uri": "git://github.com/kubernetes/kubernetes/master/api/openapi-spec/v3"
      },
      "configuration": {
        "metadata": {
          "labels": {
            "app.kubernetes.io/component": "primary",
            "app.kubernetes.io/instance": "airflow",
            "app.kubernetes.io/managed-by": "Helm",
            "app.kubernetes.io/name": "postgresql",
            "app.kubernetes.io/version": "17.6.0",
            "helm.sh/chart": "postgresql-16.7.26"
          },
          "name": "airflow-postgresql",
          "namespace": "default"
        },
        "spec": {
          "ports": [
            {
              "name": "tcp-postgresql",
              "nodePort": null,
              "port": 5432,
              "targetPort": "tcp-postgresql"
            }
          ],
          "selector": {
            "app.kubernetes.io/component": "primary",
            "app.kubernetes.io/instance": "airflow",
            "app.kubernetes.io/name": "postgresql"
          },
          "sessionAffinity": "None",
          "type": "ClusterIP"
        }
      },
      "component": {
        "version": "v1",
        "kind": "Service",
        "schema": ""
      }
    },
    {
      "id": "c1ec9511-4bf3-45f1-9467-d492837ca55c",
      "schemaVersion": "components.meshery.io/v1beta1",
      "version": "v1.0.0",
      "displayName": "airflow-redis-headless",
      "description": "",
      "format": "",
      "model": {
        "id": "b3f5bc0d-30f7-607d-6c73-784ddde6cad8",
        "schemaVersion": "models.meshery.io/v1beta1",
        "version": "v1.0.0",
        "name": "kubernetes",
        "displayName": "Kubernetes",
        "status": "enabled",
        "registrant": {
          "id": "5bc80e3c-5d43-9eb4-d16c-78a2769247a6",
          "name": "Github",
          "credential_id": "00000000-0000-0000-0000-000000000000",
          "type": "registry",
          "sub_type": "",
          "kind": "github",
          "status": "registered",
          "user_id": "00000000-0000-0000-0000-000000000000",
          "created_at": "2025-09-17T17:32:17.981302672Z",
          "updated_at": "2025-09-17T17:32:17.981302672Z",
          "deleted_at": "0001-01-01T00:00:00Z",
          "schemaVersion": ""
        },
        "connection_id": "5bc80e3c-5d43-9eb4-d16c-78a2769247a6",
        "category": {
          "id": "9ca27d0d-66ce-42a9-8c85-6236563f2ddb",
          "name": "Orchestration \u0026 Management"
        },
        "subCategory": "Scheduling \u0026 Orchestration",
        "metadata": {
          "isAnnotation": false,
          "primaryColor": "#326CE5",
          "secondaryColor": "#7aa1f0",
          "shape": "circle",
          "styleOverrides": "",
          "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/kubernetes-color.svg",
          "svgComplete": "",
          "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/kubernetes-white.svg"
        },
        "model": {
          "version": "v1.32.0-alpha.3"
        },
        "components_count": 0,
        "relationships_count": 0,
        "components": null,
        "relationships": null
      },
      "styles": {
        "background-position-y": "4.5",
        "height": 20,
        "padding": 12,
        "primaryColor": "#326CE5",
        "secondaryColor": "#7aa1f0",
        "shape": "round-triangle",
        "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/service-color.svg",
        "svgComplete": "",
        "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/service-white.svg",
        "width": 20
      },
      "capabilities": [],
      "status": "enabled",
      "metadata": {
        "configurationUISchema": "",
        "genealogy": "",
        "instanceDetails": null,
        "isAnnotation": false,
        "isNamespaced": true,
        "published": false,
        "source_uri": "git://github.com/kubernetes/kubernetes/master/api/openapi-spec/v3"
      },
      "configuration": {
        "metadata": {
          "labels": {
            "app.kubernetes.io/instance": "airflow",
            "app.kubernetes.io/managed-by": "Helm",
            "app.kubernetes.io/name": "redis",
            "app.kubernetes.io/version": "8.2.1",
            "helm.sh/chart": "redis-22.0.4"
          },
          "name": "airflow-redis-headless",
          "namespace": "default"
        },
        "spec": {
          "clusterIP": "None",
          "ports": [
            {
              "name": "tcp-redis",
              "port": 6379,
              "targetPort": "redis"
            }
          ],
          "selector": {
            "app.kubernetes.io/instance": "airflow",
            "app.kubernetes.io/name": "redis"
          },
          "type": "ClusterIP"
        }
      },
      "component": {
        "version": "v1",
        "kind": "Service",
        "schema": ""
      }
    },
    {
      "id": "91e6660b-e612-4749-91b2-d658a0424645",
      "schemaVersion": "components.meshery.io/v1beta1",
      "version": "v1.0.0",
      "displayName": "airflow-redis-master",
      "description": "",
      "format": "",
      "model": {
        "id": "b3f5bc0d-30f7-607d-6c73-784ddde6cad8",
        "schemaVersion": "models.meshery.io/v1beta1",
        "version": "v1.0.0",
        "name": "kubernetes",
        "displayName": "Kubernetes",
        "status": "enabled",
        "registrant": {
          "id": "5bc80e3c-5d43-9eb4-d16c-78a2769247a6",
          "name": "Github",
          "credential_id": "00000000-0000-0000-0000-000000000000",
          "type": "registry",
          "sub_type": "",
          "kind": "github",
          "status": "registered",
          "user_id": "00000000-0000-0000-0000-000000000000",
          "created_at": "2025-09-17T17:32:17.981302672Z",
          "updated_at": "2025-09-17T17:32:17.981302672Z",
          "deleted_at": "0001-01-01T00:00:00Z",
          "schemaVersion": ""
        },
        "connection_id": "5bc80e3c-5d43-9eb4-d16c-78a2769247a6",
        "category": {
          "id": "9ca27d0d-66ce-42a9-8c85-6236563f2ddb",
          "name": "Orchestration \u0026 Management"
        },
        "subCategory": "Scheduling \u0026 Orchestration",
        "metadata": {
          "isAnnotation": false,
          "primaryColor": "#326CE5",
          "secondaryColor": "#7aa1f0",
          "shape": "circle",
          "styleOverrides": "",
          "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/kubernetes-color.svg",
          "svgComplete": "",
          "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/kubernetes-white.svg"
        },
        "model": {
          "version": "v1.32.0-alpha.3"
        },
        "components_count": 0,
        "relationships_count": 0,
        "components": null,
        "relationships": null
      },
      "styles": {
        "background-position-y": "4.5",
        "height": 20,
        "padding": 12,
        "primaryColor": "#326CE5",
        "secondaryColor": "#7aa1f0",
        "shape": "round-triangle",
        "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/service-color.svg",
        "svgComplete": "",
        "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/service-white.svg",
        "width": 20
      },
      "capabilities": [],
      "status": "enabled",
      "metadata": {
        "configurationUISchema": "",
        "genealogy": "",
        "instanceDetails": null,
        "isAnnotation": false,
        "isNamespaced": true,
        "published": false,
        "source_uri": "git://github.com/kubernetes/kubernetes/master/api/openapi-spec/v3"
      },
      "configuration": {
        "metadata": {
          "labels": {
            "app.kubernetes.io/component": "master",
            "app.kubernetes.io/instance": "airflow",
            "app.kubernetes.io/managed-by": "Helm",
            "app.kubernetes.io/name": "redis",
            "app.kubernetes.io/version": "8.2.1",
            "helm.sh/chart": "redis-22.0.4"
          },
          "name": "airflow-redis-master",
          "namespace": "default"
        },
        "spec": {
          "internalTrafficPolicy": "Cluster",
          "ports": [
            {
              "name": "tcp-redis",
              "nodePort": null,
              "port": 6379,
              "targetPort": "redis"
            }
          ],
          "selector": {
            "app.kubernetes.io/component": "master",
            "app.kubernetes.io/instance": "airflow",
            "app.kubernetes.io/name": "redis"
          },
          "sessionAffinity": "None",
          "type": "ClusterIP"
        }
      },
      "component": {
        "version": "v1",
        "kind": "Service",
        "schema": ""
      }
    },
    {
      "id": "42058846-9f2e-41b6-9cbb-d66776cda637",
      "schemaVersion": "components.meshery.io/v1beta1",
      "version": "v1.0.0",
      "displayName": "airflow-triggerer",
      "description": "",
      "format": "",
      "model": {
        "id": "b3f5bc0d-30f7-607d-6c73-784ddde6cad8",
        "schemaVersion": "models.meshery.io/v1beta1",
        "version": "v1.0.0",
        "name": "kubernetes",
        "displayName": "Kubernetes",
        "status": "enabled",
        "registrant": {
          "id": "5bc80e3c-5d43-9eb4-d16c-78a2769247a6",
          "name": "Github",
          "credential_id": "00000000-0000-0000-0000-000000000000",
          "type": "registry",
          "sub_type": "",
          "kind": "github",
          "status": "registered",
          "user_id": "00000000-0000-0000-0000-000000000000",
          "created_at": "2025-09-17T17:32:17.981302672Z",
          "updated_at": "2025-09-17T17:32:17.981302672Z",
          "deleted_at": "0001-01-01T00:00:00Z",
          "schemaVersion": ""
        },
        "connection_id": "5bc80e3c-5d43-9eb4-d16c-78a2769247a6",
        "category": {
          "id": "9ca27d0d-66ce-42a9-8c85-6236563f2ddb",
          "name": "Orchestration \u0026 Management"
        },
        "subCategory": "Scheduling \u0026 Orchestration",
        "metadata": {
          "isAnnotation": false,
          "primaryColor": "#326CE5",
          "secondaryColor": "#7aa1f0",
          "shape": "circle",
          "styleOverrides": "",
          "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/kubernetes-color.svg",
          "svgComplete": "",
          "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/kubernetes-white.svg"
        },
        "model": {
          "version": "v1.32.0-alpha.3"
        },
        "components_count": 0,
        "relationships_count": 0,
        "components": null,
        "relationships": null
      },
      "styles": {
        "background-position-y": "4.5",
        "height": 20,
        "padding": 12,
        "primaryColor": "#326CE5",
        "secondaryColor": "#7aa1f0",
        "shape": "round-triangle",
        "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/service-color.svg",
        "svgComplete": "",
        "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/service-white.svg",
        "width": 20
      },
      "capabilities": [],
      "status": "enabled",
      "metadata": {
        "configurationUISchema": "",
        "genealogy": "",
        "instanceDetails": null,
        "isAnnotation": false,
        "isNamespaced": true,
        "published": false,
        "source_uri": "git://github.com/kubernetes/kubernetes/master/api/openapi-spec/v3"
      },
      "configuration": {
        "metadata": {
          "labels": {
            "app.kubernetes.io/component": "triggerer",
            "app.kubernetes.io/instance": "airflow",
            "app.kubernetes.io/managed-by": "Helm",
            "app.kubernetes.io/name": "airflow",
            "app.kubernetes.io/version": "3.0.5",
            "helm.sh/chart": "airflow-25.0.2"
          },
          "name": "airflow-triggerer",
          "namespace": "default"
        },
        "spec": {
          "ports": [
            {
              "name": "logs",
              "nodePort": null,
              "port": 8794,
              "protocol": "TCP",
              "targetPort": "logs"
            }
          ],
          "selector": {
            "app.kubernetes.io/component": "triggerer",
            "app.kubernetes.io/instance": "airflow",
            "app.kubernetes.io/name": "airflow"
          },
          "sessionAffinity": "None",
          "type": "ClusterIP"
        }
      },
      "component": {
        "version": "v1",
        "kind": "Service",
        "schema": ""
      }
    },
    {
      "id": "fd41bb4d-3dd6-4b46-8f6a-384fa16a9ede",
      "schemaVersion": "components.meshery.io/v1beta1",
      "version": "v1.0.0",
      "displayName": "airflow-web",
      "description": "",
      "format": "",
      "model": {
        "id": "b3f5bc0d-30f7-607d-6c73-784ddde6cad8",
        "schemaVersion": "models.meshery.io/v1beta1",
        "version": "v1.0.0",
        "name": "kubernetes",
        "displayName": "Kubernetes",
        "status": "enabled",
        "registrant": {
          "id": "5bc80e3c-5d43-9eb4-d16c-78a2769247a6",
          "name": "Github",
          "credential_id": "00000000-0000-0000-0000-000000000000",
          "type": "registry",
          "sub_type": "",
          "kind": "github",
          "status": "registered",
          "user_id": "00000000-0000-0000-0000-000000000000",
          "created_at": "2025-09-17T17:32:17.981302672Z",
          "updated_at": "2025-09-17T17:32:17.981302672Z",
          "deleted_at": "0001-01-01T00:00:00Z",
          "schemaVersion": ""
        },
        "connection_id": "5bc80e3c-5d43-9eb4-d16c-78a2769247a6",
        "category": {
          "id": "9ca27d0d-66ce-42a9-8c85-6236563f2ddb",
          "name": "Orchestration \u0026 Management"
        },
        "subCategory": "Scheduling \u0026 Orchestration",
        "metadata": {
          "isAnnotation": false,
          "primaryColor": "#326CE5",
          "secondaryColor": "#7aa1f0",
          "shape": "circle",
          "styleOverrides": "",
          "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/kubernetes-color.svg",
          "svgComplete": "",
          "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/kubernetes-white.svg"
        },
        "model": {
          "version": "v1.32.0-alpha.3"
        },
        "components_count": 0,
        "relationships_count": 0,
        "components": null,
        "relationships": null
      },
      "styles": {
        "background-position-y": "4.5",
        "height": 20,
        "padding": 12,
        "primaryColor": "#326CE5",
        "secondaryColor": "#7aa1f0",
        "shape": "round-triangle",
        "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/service-color.svg",
        "svgComplete": "",
        "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/service-white.svg",
        "width": 20
      },
      "capabilities": [],
      "status": "enabled",
      "metadata": {
        "configurationUISchema": "",
        "genealogy": "",
        "instanceDetails": null,
        "isAnnotation": false,
        "isNamespaced": true,
        "published": false,
        "source_uri": "git://github.com/kubernetes/kubernetes/master/api/openapi-spec/v3"
      },
      "configuration": {
        "metadata": {
          "labels": {
            "app.kubernetes.io/component": "web",
            "app.kubernetes.io/instance": "airflow",
            "app.kubernetes.io/managed-by": "Helm",
            "app.kubernetes.io/name": "airflow",
            "app.kubernetes.io/version": "3.0.5",
            "helm.sh/chart": "airflow-25.0.2"
          },
          "name": "airflow-web",
          "namespace": "default"
        },
        "spec": {
          "ports": [
            {
              "name": "http",
              "nodePort": null,
              "port": 8080,
              "protocol": "TCP",
              "targetPort": "http"
            }
          ],
          "selector": {
            "app.kubernetes.io/component": "web",
            "app.kubernetes.io/instance": "airflow",
            "app.kubernetes.io/name": "airflow"
          },
          "sessionAffinity": "None",
          "type": "ClusterIP"
        }
      },
      "component": {
        "version": "v1",
        "kind": "Service",
        "schema": ""
      }
    },
    {
      "id": "deee1f68-ccba-43a9-8c2f-bf1013288cca",
      "schemaVersion": "components.meshery.io/v1beta1",
      "version": "v1.0.0",
      "displayName": "airflow-worker-hl",
      "description": "",
      "format": "",
      "model": {
        "id": "b3f5bc0d-30f7-607d-6c73-784ddde6cad8",
        "schemaVersion": "models.meshery.io/v1beta1",
        "version": "v1.0.0",
        "name": "kubernetes",
        "displayName": "Kubernetes",
        "status": "enabled",
        "registrant": {
          "id": "5bc80e3c-5d43-9eb4-d16c-78a2769247a6",
          "name": "Github",
          "credential_id": "00000000-0000-0000-0000-000000000000",
          "type": "registry",
          "sub_type": "",
          "kind": "github",
          "status": "registered",
          "user_id": "00000000-0000-0000-0000-000000000000",
          "created_at": "2025-09-17T17:32:17.981302672Z",
          "updated_at": "2025-09-17T17:32:17.981302672Z",
          "deleted_at": "0001-01-01T00:00:00Z",
          "schemaVersion": ""
        },
        "connection_id": "5bc80e3c-5d43-9eb4-d16c-78a2769247a6",
        "category": {
          "id": "9ca27d0d-66ce-42a9-8c85-6236563f2ddb",
          "name": "Orchestration \u0026 Management"
        },
        "subCategory": "Scheduling \u0026 Orchestration",
        "metadata": {
          "isAnnotation": false,
          "primaryColor": "#326CE5",
          "secondaryColor": "#7aa1f0",
          "shape": "circle",
          "styleOverrides": "",
          "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/kubernetes-color.svg",
          "svgComplete": "",
          "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/kubernetes-white.svg"
        },
        "model": {
          "version": "v1.32.0-alpha.3"
        },
        "components_count": 0,
        "relationships_count": 0,
        "components": null,
        "relationships": null
      },
      "styles": {
        "background-position-y": "4.5",
        "height": 20,
        "padding": 12,
        "primaryColor": "#326CE5",
        "secondaryColor": "#7aa1f0",
        "shape": "round-triangle",
        "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/service-color.svg",
        "svgComplete": "",
        "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/service-white.svg",
        "width": 20
      },
      "capabilities": [],
      "status": "enabled",
      "metadata": {
        "configurationUISchema": "",
        "genealogy": "",
        "instanceDetails": null,
        "isAnnotation": false,
        "isNamespaced": true,
        "published": false,
        "source_uri": "git://github.com/kubernetes/kubernetes/master/api/openapi-spec/v3"
      },
      "configuration": {
        "metadata": {
          "labels": {
            "app.kubernetes.io/component": "worker",
            "app.kubernetes.io/instance": "airflow",
            "app.kubernetes.io/managed-by": "Helm",
            "app.kubernetes.io/name": "airflow",
            "app.kubernetes.io/version": "3.0.5",
            "helm.sh/chart": "airflow-25.0.2"
          },
          "name": "airflow-worker-hl",
          "namespace": "default"
        },
        "spec": {
          "clusterIP": "None",
          "ports": [
            {
              "name": "worker",
              "port": 8793,
              "targetPort": "worker"
            }
          ],
          "selector": {
            "app.kubernetes.io/component": "worker",
            "app.kubernetes.io/instance": "airflow",
            "app.kubernetes.io/name": "airflow"
          },
          "type": "ClusterIP"
        }
      },
      "component": {
        "version": "v1",
        "kind": "Service",
        "schema": ""
      }
    },
    {
      "id": "994ee35f-db1e-4d01-87e1-4974f5df48ad",
      "schemaVersion": "components.meshery.io/v1beta1",
      "version": "v1.0.0",
      "displayName": "airflow-dag-processor",
      "description": "",
      "format": "",
      "model": {
        "id": "b3f5bc0d-30f7-607d-6c73-784ddde6cad8",
        "schemaVersion": "models.meshery.io/v1beta1",
        "version": "v1.0.0",
        "name": "kubernetes",
        "displayName": "Kubernetes",
        "status": "enabled",
        "registrant": {
          "id": "5bc80e3c-5d43-9eb4-d16c-78a2769247a6",
          "name": "Github",
          "credential_id": "00000000-0000-0000-0000-000000000000",
          "type": "registry",
          "sub_type": "",
          "kind": "github",
          "status": "registered",
          "user_id": "00000000-0000-0000-0000-000000000000",
          "created_at": "2025-09-17T17:32:17.981302672Z",
          "updated_at": "2025-09-17T17:32:17.981302672Z",
          "deleted_at": "0001-01-01T00:00:00Z",
          "schemaVersion": ""
        },
        "connection_id": "5bc80e3c-5d43-9eb4-d16c-78a2769247a6",
        "category": {
          "id": "9ca27d0d-66ce-42a9-8c85-6236563f2ddb",
          "name": "Orchestration \u0026 Management"
        },
        "subCategory": "Scheduling \u0026 Orchestration",
        "metadata": {
          "isAnnotation": false,
          "primaryColor": "#326CE5",
          "secondaryColor": "#7aa1f0",
          "shape": "circle",
          "styleOverrides": "",
          "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/kubernetes-color.svg",
          "svgComplete": "",
          "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/kubernetes-white.svg"
        },
        "model": {
          "version": "v1.32.0-alpha.3"
        },
        "components_count": 0,
        "relationships_count": 0,
        "components": null,
        "relationships": null
      },
      "styles": {
        "background-image": "none",
        "background-opacity": 0.5,
        "border-width": 2,
        "primaryColor": "#326CE5",
        "secondaryColor": "#7aa1f0",
        "shape": "round-rectangle",
        "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/deployment-color.svg",
        "svgComplete": "ui/public/static/img/meshmodels/kubernetes/complete/deployment-complete.svg",
        "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/deployment-white.svg"
      },
      "capabilities": [],
      "status": "enabled",
      "metadata": {
        "configurationUISchema": "",
        "genealogy": "parent",
        "instanceDetails": null,
        "isAnnotation": false,
        "isNamespaced": true,
        "published": false,
        "source_uri": "git://github.com/kubernetes/kubernetes/master/api/openapi-spec/v3"
      },
      "configuration": {
        "metadata": {
          "labels": {
            "app.kubernetes.io/component": "dag-processor",
            "app.kubernetes.io/instance": "airflow",
            "app.kubernetes.io/managed-by": "Helm",
            "app.kubernetes.io/name": "airflow",
            "app.kubernetes.io/version": "3.0.5",
            "helm.sh/chart": "airflow-25.0.2"
          },
          "name": "airflow-dag-processor",
          "namespace": "default"
        },
        "spec": {
          "replicas": 1,
          "selector": {
            "matchLabels": {
              "app.kubernetes.io/component": "dag-processor",
              "app.kubernetes.io/instance": "airflow",
              "app.kubernetes.io/name": "airflow"
            }
          },
          "strategy": {
            "rollingUpdate": {},
            "type": "RollingUpdate"
          },
          "template": {
            "metadata": {
              "annotations": {
                "checksum/configmap": "e72b2b3a9039fec4ff7ee6dde04b2bfd1e24a38615c29d808d89fb22a99c85bd"
              },
              "labels": {
                "app.kubernetes.io/component": "dag-processor",
                "app.kubernetes.io/instance": "airflow",
                "app.kubernetes.io/managed-by": "Helm",
                "app.kubernetes.io/name": "airflow",
                "app.kubernetes.io/version": "3.0.5",
                "helm.sh/chart": "airflow-25.0.2"
              }
            },
            "spec": {
              "affinity": {
                "nodeAffinity": null,
                "podAffinity": null,
                "podAntiAffinity": {
                  "preferredDuringSchedulingIgnoredDuringExecution": [
                    {
                      "podAffinityTerm": {
                        "labelSelector": {
                          "matchLabels": {
                            "app.kubernetes.io/component": "dag-processor",
                            "app.kubernetes.io/instance": "airflow",
                            "app.kubernetes.io/name": "airflow"
                          }
                        },
                        "topologyKey": "kubernetes.io/hostname"
                      },
                      "weight": 1
                    }
                  ]
                }
              },
              "automountServiceAccountToken": false,
              "containers": [
                {
                  "env": [
                    {
                      "name": "BITNAMI_DEBUG",
                      "value": "false"
                    },
                    {
                      "name": "AIRFLOW__CORE__FERNET_KEY_CMD",
                      "value": "cat /opt/bitnami/airflow/secrets/airflow-fernet-key"
                    },
                    {
                      "name": "AIRFLOW__API__SECRET_KEY_CMD",
                      "value": "cat /opt/bitnami/airflow/secrets/airflow-secret-key"
                    },
                    {
                      "name": "AIRFLOW__API_AUTH__JWT_SECRET_CMD",
                      "value": "cat /opt/bitnami/airflow/secrets/airflow-jwt-secret-key"
                    },
                    {
                      "name": "AIRFLOW_COMPONENT_TYPE",
                      "value": "dag-processor"
                    },
                    {
                      "name": "AIRFLOW_EXECUTOR",
                      "value": "CeleryExecutor"
                    },
                    {
                      "name": "REDIS_HOST",
                      "value": "airflow-redis-master"
                    },
                    {
                      "name": "REDIS_PORT_NUMBER",
                      "value": "6379"
                    },
                    {
                      "name": "PYTHONPYCACHEPREFIX",
                      "value": "/opt/bitnami/airflow/venv/tmp"
                    }
                  ],
                  "image": "docker.io/bitnami/airflow:3.0.5-debian-12-r0",
                  "imagePullPolicy": "IfNotPresent",
                  "livenessProbe": {
                    "exec": {
                      "command": [
                        "pgrep",
                        "-f",
                        "airflow dag-processor"
                      ]
                    },
                    "failureThreshold": 6,
                    "initialDelaySeconds": 180,
                    "periodSeconds": 20,
                    "successThreshold": 1,
                    "timeoutSeconds": 15
                  },
                  "name": "airflow-dag-processor",
                  "readinessProbe": {
                    "exec": {
                      "command": [
                        "/bin/bash",
                        "-ec",
                        "export CONNECTION_CHECK_MAX_COUNT=0\ntimeout 14 airflow jobs check --job-type DagProcessorJob --local --limit 0 2\u003e/dev/null\n"
                      ]
                    },
                    "failureThreshold": 6,
                    "initialDelaySeconds": 30,
                    "periodSeconds": 10,
                    "successThreshold": 1,
                    "timeoutSeconds": 15
                  },
                  "resources": {
                    "limits": {
                      "cpu": "750m",
                      "ephemeral-storage": "2Gi",
                      "memory": "768Mi"
                    },
                    "requests": {
                      "cpu": "500m",
                      "ephemeral-storage": "50Mi",
                      "memory": "512Mi"
                    }
                  },
                  "securityContext": {
                    "allowPrivilegeEscalation": false,
                    "capabilities": {
                      "drop": [
                        "ALL"
                      ]
                    },
                    "privileged": false,
                    "readOnlyRootFilesystem": true,
                    "runAsGroup": 1001,
                    "runAsNonRoot": true,
                    "runAsUser": 1001,
                    "seLinuxOptions": {},
                    "seccompProfile": {
                      "type": "RuntimeDefault"
                    }
                  },
                  "volumeMounts": [
                    {
                      "mountPath": "/tmp",
                      "name": "empty-dir",
                      "subPath": "tmp-dir"
                    },
                    {
                      "mountPath": "/opt/bitnami/airflow/nss-wrapper",
                      "name": "empty-dir",
                      "subPath": "app-nss-wrapper-dir"
                    },
                    {
                      "mountPath": "/opt/bitnami/airflow/logs",
                      "name": "empty-dir",
                      "subPath": "app-logs-dir"
                    },
                    {
                      "mountPath": "/opt/bitnami/airflow/tmp",
                      "name": "empty-dir",
                      "subPath": "app-tmp-dir"
                    },
                    {
                      "mountPath": "/opt/bitnami/airflow/airflow.db",
                      "name": "empty-dir",
                      "subPath": "app-base-dir/airflow.db"
                    },
                    {
                      "mountPath": "/opt/bitnami/airflow/airflow.cfg",
                      "name": "empty-dir",
                      "subPath": "app-base-dir/airflow.cfg"
                    },
                    {
                      "mountPath": "/opt/bitnami/airflow/config/airflow_local_settings.py",
                      "name": "empty-dir",
                      "subPath": "app-conf-dir/airflow_local_settings.py"
                    },
                    {
                      "mountPath": "/opt/bitnami/airflow/venv",
                      "name": "empty-dir",
                      "subPath": "venv-base-dir"
                    },
                    {
                      "mountPath": "/opt/bitnami/airflow/secrets",
                      "name": "airflow-secrets"
                    }
                  ]
                }
              ],
              "initContainers": [
                {
                  "args": [
                    "-ec",
                    ". /opt/bitnami/scripts/libairflow.sh\n\nmkdir -p /emptydir/app-base-dir /emptydir/app-conf-dir\n\n# Copy the configuration files to the writable directory\ncp /opt/bitnami/airflow/airflow.cfg /emptydir/app-base-dir/airflow.cfg\n\n# Apply changes affecting credentials\nexport AIRFLOW_CONF_FILE=\"/emptydir/app-base-dir/airflow.cfg\"\nexport AIRFLOW_DATABASE_PASSWORD=\"$(\u003c $AIRFLOW_DATABASE_PASSWORD_FILE)\"\ndb_user=\"$(airflow_encode_url \"$AIRFLOW_DATABASE_USERNAME\")\"\ndb_password=\"$(airflow_encode_url \"$AIRFLOW_DATABASE_PASSWORD\")\"\nairflow_conf_set \"database\" \"sql_alchemy_conn\" \"postgresql+psycopg2://${db_user}:${db_password}@${AIRFLOW_DATABASE_HOST}:${AIRFLOW_DATABASE_PORT_NUMBER}/${AIRFLOW_DATABASE_NAME}\"\nexport REDIS_PASSWORD=\"$(\u003c $REDIS_PASSWORD_FILE)\"\nredis_credentials=\":$(airflow_encode_url \"$REDIS_PASSWORD\")\"\n[[ -n \"$REDIS_USER\" ]] \u0026\u0026 redis_credentials=\"$(airflow_encode_url \"$REDIS_USER\")$redis_credentials\"\nairflow_conf_set \"celery\" \"result_backend\" \"db+postgresql://${db_user}:${db_password}@${AIRFLOW_DATABASE_HOST}:${AIRFLOW_DATABASE_PORT_NUMBER}/${AIRFLOW_DATABASE_NAME}\"\nairflow_conf_set \"celery\" \"broker_url\" \"redis://${redis_credentials}@${REDIS_HOST}:${REDIS_PORT_NUMBER}/${REDIS_DATABASE}\"\n# Configure authentication backend\nairflow_conf_set \"core\" \"auth_manager\" \"airflow.providers.fab.auth_manager.fab_auth_manager.FabAuthManager\"\ninfo \"Airflow configuration ready\"\n\nif [[ -f \"/opt/bitnami/airflow/config/airflow_local_settings.py\" ]]; then\n    cp /opt/bitnami/airflow/config/airflow_local_settings.py /emptydir/app-conf-dir/airflow_local_settings.py\nelse\n    touch /emptydir/app-conf-dir/airflow_local_settings.py\nfi\n\n# HACK: When testing the db connection it creates an empty airflow.db file at the\n# application root\ntouch /emptydir/app-base-dir/airflow.db\n"
                  ],
                  "command": [
                    "/bin/bash"
                  ],
                  "env": [
                    {
                      "name": "BITNAMI_DEBUG",
                      "value": "false"
                    },
                    {
                      "name": "AIRFLOW_DATABASE_NAME",
                      "value": "bitnami_airflow"
                    },
                    {
                      "name": "AIRFLOW_DATABASE_USERNAME",
                      "value": "bn_airflow"
                    },
                    {
                      "name": "AIRFLOW_DATABASE_PASSWORD_FILE",
                      "value": "/opt/bitnami/airflow/secrets/password"
                    },
                    {
                      "name": "AIRFLOW_DATABASE_HOST",
                      "value": "airflow-postgresql"
                    },
                    {
                      "name": "AIRFLOW_DATABASE_PORT_NUMBER",
                      "value": "5432"
                    },
                    {
                      "name": "REDIS_HOST",
                      "value": "airflow-redis-master"
                    },
                    {
                      "name": "REDIS_PORT_NUMBER",
                      "value": "6379"
                    },
                    {
                      "name": "REDIS_PASSWORD_FILE",
                      "value": "/opt/bitnami/airflow/secrets/redis-password"
                    }
                  ],
                  "image": "docker.io/bitnami/airflow:3.0.5-debian-12-r0",
                  "imagePullPolicy": "IfNotPresent",
                  "name": "prepare-config",
                  "resources": {
                    "limits": {
                      "cpu": "150m",
                      "ephemeral-storage": "2Gi",
                      "memory": "192Mi"
                    },
                    "requests": {
                      "cpu": "100m",
                      "ephemeral-storage": "50Mi",
                      "memory": "128Mi"
                    }
                  },
                  "securityContext": {
                    "allowPrivilegeEscalation": false,
                    "capabilities": {
                      "add": [],
                      "drop": [
                        "ALL"
                      ]
                    },
                    "privileged": false,
                    "readOnlyRootFilesystem": true,
                    "runAsGroup": 1001,
                    "runAsNonRoot": true,
                    "runAsUser": 1001,
                    "seLinuxOptions": {},
                    "seccompProfile": {
                      "type": "RuntimeDefault"
                    }
                  },
                  "volumeMounts": [
                    {
                      "mountPath": "/emptydir",
                      "name": "empty-dir"
                    },
                    {
                      "mountPath": "/opt/bitnami/airflow/airflow.cfg",
                      "name": "configuration",
                      "subPath": "airflow.cfg"
                    },
                    {
                      "mountPath": "/opt/bitnami/airflow/config/airflow_local_settings.py",
                      "name": "configuration",
                      "subPath": "airflow_local_settings.py"
                    },
                    {
                      "mountPath": "/opt/bitnami/airflow/secrets",
                      "name": "airflow-secrets"
                    }
                  ]
                },
                {
                  "args": [
                    "-ec",
                    ". /opt/bitnami/scripts/libairflow.sh\n\n# Copy the configuration files to the writable directory\ncp -r --preserve=mode /opt/bitnami/airflow/venv /emptydir/venv-base-dir\n\ninfo \"Copy operation completed\"\n"
                  ],
                  "command": [
                    "/bin/bash"
                  ],
                  "env": [
                    {
                      "name": "BITNAMI_DEBUG",
                      "value": "false"
                    }
                  ],
                  "image": "docker.io/bitnami/airflow:3.0.5-debian-12-r0",
                  "imagePullPolicy": "IfNotPresent",
                  "name": "prepare-venv",
                  "resources": {
                    "limits": {
                      "cpu": "150m",
                      "ephemeral-storage": "2Gi",
                      "memory": "192Mi"
                    },
                    "requests": {
                      "cpu": "100m",
                      "ephemeral-storage": "50Mi",
                      "memory": "128Mi"
                    }
                  },
                  "securityContext": {
                    "allowPrivilegeEscalation": false,
                    "capabilities": {
                      "add": [],
                      "drop": [
                        "ALL"
                      ]
                    },
                    "privileged": false,
                    "readOnlyRootFilesystem": true,
                    "runAsGroup": 1001,
                    "runAsNonRoot": true,
                    "runAsUser": 1001,
                    "seLinuxOptions": {},
                    "seccompProfile": {
                      "type": "RuntimeDefault"
                    }
                  },
                  "volumeMounts": [
                    {
                      "mountPath": "/emptydir",
                      "name": "empty-dir"
                    }
                  ]
                },
                {
                  "args": [
                    "-ec",
                    ". /opt/bitnami/scripts/airflow-env.sh\n. /opt/bitnami/scripts/libairflow.sh\n\ninfo \"Trying to connect to the database server\"\nairflow_wait_for_db_connection\ninfo \"Waiting for db migrations to be completed\"\nairflow_wait_for_db_migrations\ninfo \"Waiting for the admin user to exist\"\nairflow_wait_for_admin_user\n"
                  ],
                  "command": [
                    "/bin/bash"
                  ],
                  "env": [
                    {
                      "name": "BITNAMI_DEBUG",
                      "value": "false"
                    }
                  ],
                  "image": "docker.io/bitnami/airflow:3.0.5-debian-12-r0",
                  "imagePullPolicy": "IfNotPresent",
                  "name": "wait-for-db-migrations",
                  "resources": {
                    "limits": {
                      "cpu": "375m",
                      "ephemeral-storage": "2Gi",
                      "memory": "384Mi"
                    },
                    "requests": {
                      "cpu": "250m",
                      "ephemeral-storage": "50Mi",
                      "memory": "256Mi"
                    }
                  },
                  "securityContext": {
                    "allowPrivilegeEscalation": false,
                    "capabilities": {
                      "add": [],
                      "drop": [
                        "ALL"
                      ]
                    },
                    "privileged": false,
                    "readOnlyRootFilesystem": true,
                    "runAsGroup": 1001,
                    "runAsNonRoot": true,
                    "runAsUser": 1001,
                    "seLinuxOptions": {},
                    "seccompProfile": {
                      "type": "RuntimeDefault"
                    }
                  },
                  "volumeMounts": [
                    {
                      "mountPath": "/tmp",
                      "name": "empty-dir",
                      "subPath": "tmp-dir"
                    },
                    {
                      "mountPath": "/opt/bitnami/airflow/logs",
                      "name": "empty-dir",
                      "subPath": "app-logs-dir"
                    },
                    {
                      "mountPath": "/opt/bitnami/airflow/tmp",
                      "name": "empty-dir",
                      "subPath": "app-tmp-dir"
                    },
                    {
                      "mountPath": "/opt/bitnami/airflow/airflow.db",
                      "name": "empty-dir",
                      "subPath": "app-base-dir/airflow.db"
                    },
                    {
                      "mountPath": "/opt/bitnami/airflow/airflow.cfg",
                      "name": "empty-dir",
                      "subPath": "app-base-dir/airflow.cfg"
                    }
                  ]
                }
              ],
              "securityContext": {
                "fsGroup": 1001,
                "fsGroupChangePolicy": "Always",
                "supplementalGroups": [],
                "sysctls": []
              },
              "serviceAccountName": "airflow",
              "volumes": [
                {
                  "emptyDir": {},
                  "name": "empty-dir"
                },
                {
                  "configMap": {
                    "name": "airflow",
                    "optional": true
                  },
                  "name": "configuration"
                },
                {
                  "name": "airflow-secrets",
                  "projected": {
                    "sources": [
                      {
                        "secret": {
                          "name": "airflow"
                        }
                      },
                      {
                        "secret": {
                          "name": "airflow-postgresql"
                        }
                      },
                      {
                        "secret": {
                          "name": "airflow-redis"
                        }
                      }
                    ]
                  }
                }
              ]
            }
          }
        }
      },
      "component": {
        "version": "apps/v1",
        "kind": "Deployment",
        "schema": ""
      }
    },
    {
      "id": "e5987013-0b74-43e9-b75e-3794c8f05346",
      "schemaVersion": "components.meshery.io/v1beta1",
      "version": "v1.0.0",
      "displayName": "airflow-scheduler",
      "description": "",
      "format": "",
      "model": {
        "id": "b3f5bc0d-30f7-607d-6c73-784ddde6cad8",
        "schemaVersion": "models.meshery.io/v1beta1",
        "version": "v1.0.0",
        "name": "kubernetes",
        "displayName": "Kubernetes",
        "status": "enabled",
        "registrant": {
          "id": "5bc80e3c-5d43-9eb4-d16c-78a2769247a6",
          "name": "Github",
          "credential_id": "00000000-0000-0000-0000-000000000000",
          "type": "registry",
          "sub_type": "",
          "kind": "github",
          "status": "registered",
          "user_id": "00000000-0000-0000-0000-000000000000",
          "created_at": "2025-09-17T17:32:17.981302672Z",
          "updated_at": "2025-09-17T17:32:17.981302672Z",
          "deleted_at": "0001-01-01T00:00:00Z",
          "schemaVersion": ""
        },
        "connection_id": "5bc80e3c-5d43-9eb4-d16c-78a2769247a6",
        "category": {
          "id": "9ca27d0d-66ce-42a9-8c85-6236563f2ddb",
          "name": "Orchestration \u0026 Management"
        },
        "subCategory": "Scheduling \u0026 Orchestration",
        "metadata": {
          "isAnnotation": false,
          "primaryColor": "#326CE5",
          "secondaryColor": "#7aa1f0",
          "shape": "circle",
          "styleOverrides": "",
          "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/kubernetes-color.svg",
          "svgComplete": "",
          "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/kubernetes-white.svg"
        },
        "model": {
          "version": "v1.32.0-alpha.3"
        },
        "components_count": 0,
        "relationships_count": 0,
        "components": null,
        "relationships": null
      },
      "styles": {
        "background-image": "none",
        "background-opacity": 0.5,
        "border-width": 2,
        "primaryColor": "#326CE5",
        "secondaryColor": "#7aa1f0",
        "shape": "round-rectangle",
        "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/deployment-color.svg",
        "svgComplete": "ui/public/static/img/meshmodels/kubernetes/complete/deployment-complete.svg",
        "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/deployment-white.svg"
      },
      "capabilities": [],
      "status": "enabled",
      "metadata": {
        "configurationUISchema": "",
        "genealogy": "parent",
        "instanceDetails": null,
        "isAnnotation": false,
        "isNamespaced": true,
        "published": false,
        "source_uri": "git://github.com/kubernetes/kubernetes/master/api/openapi-spec/v3"
      },
      "configuration": {
        "metadata": {
          "labels": {
            "app.kubernetes.io/component": "scheduler",
            "app.kubernetes.io/instance": "airflow",
            "app.kubernetes.io/managed-by": "Helm",
            "app.kubernetes.io/name": "airflow",
            "app.kubernetes.io/version": "3.0.5",
            "helm.sh/chart": "airflow-25.0.2"
          },
          "name": "airflow-scheduler",
          "namespace": "default"
        },
        "spec": {
          "replicas": 1,
          "selector": {
            "matchLabels": {
              "app.kubernetes.io/component": "scheduler",
              "app.kubernetes.io/instance": "airflow",
              "app.kubernetes.io/name": "airflow"
            }
          },
          "strategy": {
            "rollingUpdate": {},
            "type": "RollingUpdate"
          },
          "template": {
            "metadata": {
              "annotations": {
                "checksum/configmap": "e72b2b3a9039fec4ff7ee6dde04b2bfd1e24a38615c29d808d89fb22a99c85bd"
              },
              "labels": {
                "app.kubernetes.io/component": "scheduler",
                "app.kubernetes.io/instance": "airflow",
                "app.kubernetes.io/managed-by": "Helm",
                "app.kubernetes.io/name": "airflow",
                "app.kubernetes.io/version": "3.0.5",
                "helm.sh/chart": "airflow-25.0.2"
              }
            },
            "spec": {
              "affinity": {
                "nodeAffinity": null,
                "podAffinity": null,
                "podAntiAffinity": {
                  "preferredDuringSchedulingIgnoredDuringExecution": [
                    {
                      "podAffinityTerm": {
                        "labelSelector": {
                          "matchLabels": {
                            "app.kubernetes.io/component": "scheduler",
                            "app.kubernetes.io/instance": "airflow",
                            "app.kubernetes.io/name": "airflow"
                          }
                        },
                        "topologyKey": "kubernetes.io/hostname"
                      },
                      "weight": 1
                    }
                  ]
                }
              },
              "automountServiceAccountToken": false,
              "containers": [
                {
                  "env": [
                    {
                      "name": "BITNAMI_DEBUG",
                      "value": "false"
                    },
                    {
                      "name": "AIRFLOW__CORE__FERNET_KEY_CMD",
                      "value": "cat /opt/bitnami/airflow/secrets/airflow-fernet-key"
                    },
                    {
                      "name": "AIRFLOW__API__SECRET_KEY_CMD",
                      "value": "cat /opt/bitnami/airflow/secrets/airflow-secret-key"
                    },
                    {
                      "name": "AIRFLOW__API_AUTH__JWT_SECRET_CMD",
                      "value": "cat /opt/bitnami/airflow/secrets/airflow-jwt-secret-key"
                    },
                    {
                      "name": "AIRFLOW_COMPONENT_TYPE",
                      "value": "scheduler"
                    },
                    {
                      "name": "AIRFLOW_EXECUTOR",
                      "value": "CeleryExecutor"
                    },
                    {
                      "name": "PYTHONPYCACHEPREFIX",
                      "value": "/opt/bitnami/airflow/venv/tmp"
                    },
                    {
                      "name": "REDIS_HOST",
                      "value": "airflow-redis-master"
                    },
                    {
                      "name": "REDIS_PORT_NUMBER",
                      "value": "6379"
                    }
                  ],
                  "image": "docker.io/bitnami/airflow:3.0.5-debian-12-r0",
                  "imagePullPolicy": "IfNotPresent",
                  "livenessProbe": {
                    "exec": {
                      "command": [
                        "pgrep",
                        "-f",
                        "airflow scheduler"
                      ]
                    },
                    "failureThreshold": 6,
                    "initialDelaySeconds": 180,
                    "periodSeconds": 20,
                    "successThreshold": 1,
                    "timeoutSeconds": 15
                  },
                  "name": "airflow-scheduler",
                  "readinessProbe": {
                    "exec": {
                      "command": [
                        "/bin/bash",
                        "-ec",
                        "export CONNECTION_CHECK_MAX_COUNT=0\ntimeout 14 airflow jobs check --job-type SchedulerJob --local --limit 0 2\u003e/dev/null\n"
                      ]
                    },
                    "failureThreshold": 6,
                    "initialDelaySeconds": 30,
                    "periodSeconds": 10,
                    "successThreshold": 1,
                    "timeoutSeconds": 15
                  },
                  "resources": {
                    "limits": {
                      "cpu": "750m",
                      "ephemeral-storage": "2Gi",
                      "memory": "768Mi"
                    },
                    "requests": {
                      "cpu": "500m",
                      "ephemeral-storage": "50Mi",
                      "memory": "512Mi"
                    }
                  },
                  "securityContext": {
                    "allowPrivilegeEscalation": false,
                    "capabilities": {
                      "drop": [
                        "ALL"
                      ]
                    },
                    "privileged": false,
                    "readOnlyRootFilesystem": true,
                    "runAsGroup": 1001,
                    "runAsNonRoot": true,
                    "runAsUser": 1001,
                    "seLinuxOptions": {},
                    "seccompProfile": {
                      "type": "RuntimeDefault"
                    }
                  },
                  "volumeMounts": [
                    {
                      "mountPath": "/tmp",
                      "name": "empty-dir",
                      "subPath": "tmp-dir"
                    },
                    {
                      "mountPath": "/opt/bitnami/airflow/nss-wrapper",
                      "name": "empty-dir",
                      "subPath": "app-nss-wrapper-dir"
                    },
                    {
                      "mountPath": "/opt/bitnami/airflow/logs",
                      "name": "empty-dir",
                      "subPath": "app-logs-dir"
                    },
                    {
                      "mountPath": "/opt/bitnami/airflow/tmp",
                      "name": "empty-dir",
                      "subPath": "app-tmp-dir"
                    },
                    {
                      "mountPath": "/opt/bitnami/airflow/airflow.db",
                      "name": "empty-dir",
                      "subPath": "app-base-dir/airflow.db"
                    },
                    {
                      "mountPath": "/opt/bitnami/airflow/airflow.cfg",
                      "name": "empty-dir",
                      "subPath": "app-base-dir/airflow.cfg"
                    },
                    {
                      "mountPath": "/opt/bitnami/airflow/config/airflow_local_settings.py",
                      "name": "empty-dir",
                      "subPath": "app-conf-dir/airflow_local_settings.py"
                    },
                    {
                      "mountPath": "/opt/bitnami/airflow/venv",
                      "name": "empty-dir",
                      "subPath": "venv-base-dir"
                    },
                    {
                      "mountPath": "/opt/bitnami/airflow/secrets",
                      "name": "airflow-secrets"
                    }
                  ]
                }
              ],
              "initContainers": [
                {
                  "args": [
                    "-ec",
                    ". /opt/bitnami/scripts/libairflow.sh\n\nmkdir -p /emptydir/app-base-dir /emptydir/app-conf-dir\n\n# Copy the configuration files to the writable directory\ncp /opt/bitnami/airflow/airflow.cfg /emptydir/app-base-dir/airflow.cfg\n\n# Apply changes affecting credentials\nexport AIRFLOW_CONF_FILE=\"/emptydir/app-base-dir/airflow.cfg\"\nexport AIRFLOW_DATABASE_PASSWORD=\"$(\u003c $AIRFLOW_DATABASE_PASSWORD_FILE)\"\ndb_user=\"$(airflow_encode_url \"$AIRFLOW_DATABASE_USERNAME\")\"\ndb_password=\"$(airflow_encode_url \"$AIRFLOW_DATABASE_PASSWORD\")\"\nairflow_conf_set \"database\" \"sql_alchemy_conn\" \"postgresql+psycopg2://${db_user}:${db_password}@${AIRFLOW_DATABASE_HOST}:${AIRFLOW_DATABASE_PORT_NUMBER}/${AIRFLOW_DATABASE_NAME}\"\nexport REDIS_PASSWORD=\"$(\u003c $REDIS_PASSWORD_FILE)\"\nredis_credentials=\":$(airflow_encode_url \"$REDIS_PASSWORD\")\"\n[[ -n \"$REDIS_USER\" ]] \u0026\u0026 redis_credentials=\"$(airflow_encode_url \"$REDIS_USER\")$redis_credentials\"\nairflow_conf_set \"celery\" \"result_backend\" \"db+postgresql://${db_user}:${db_password}@${AIRFLOW_DATABASE_HOST}:${AIRFLOW_DATABASE_PORT_NUMBER}/${AIRFLOW_DATABASE_NAME}\"\nairflow_conf_set \"celery\" \"broker_url\" \"redis://${redis_credentials}@${REDIS_HOST}:${REDIS_PORT_NUMBER}/${REDIS_DATABASE}\"\n# Configure authentication backend\nairflow_conf_set \"core\" \"auth_manager\" \"airflow.providers.fab.auth_manager.fab_auth_manager.FabAuthManager\"\ninfo \"Airflow configuration ready\"\n\nif [[ -f \"/opt/bitnami/airflow/config/airflow_local_settings.py\" ]]; then\n    cp /opt/bitnami/airflow/config/airflow_local_settings.py /emptydir/app-conf-dir/airflow_local_settings.py\nelse\n    touch /emptydir/app-conf-dir/airflow_local_settings.py\nfi\n\n# HACK: When testing the db connection it creates an empty airflow.db file at the\n# application root\ntouch /emptydir/app-base-dir/airflow.db\n"
                  ],
                  "command": [
                    "/bin/bash"
                  ],
                  "env": [
                    {
                      "name": "BITNAMI_DEBUG",
                      "value": "false"
                    },
                    {
                      "name": "AIRFLOW_DATABASE_NAME",
                      "value": "bitnami_airflow"
                    },
                    {
                      "name": "AIRFLOW_DATABASE_USERNAME",
                      "value": "bn_airflow"
                    },
                    {
                      "name": "AIRFLOW_DATABASE_PASSWORD_FILE",
                      "value": "/opt/bitnami/airflow/secrets/password"
                    },
                    {
                      "name": "AIRFLOW_DATABASE_HOST",
                      "value": "airflow-postgresql"
                    },
                    {
                      "name": "AIRFLOW_DATABASE_PORT_NUMBER",
                      "value": "5432"
                    },
                    {
                      "name": "REDIS_HOST",
                      "value": "airflow-redis-master"
                    },
                    {
                      "name": "REDIS_PORT_NUMBER",
                      "value": "6379"
                    },
                    {
                      "name": "REDIS_PASSWORD_FILE",
                      "value": "/opt/bitnami/airflow/secrets/redis-password"
                    }
                  ],
                  "image": "docker.io/bitnami/airflow:3.0.5-debian-12-r0",
                  "imagePullPolicy": "IfNotPresent",
                  "name": "prepare-config",
                  "resources": {
                    "limits": {
                      "cpu": "150m",
                      "ephemeral-storage": "2Gi",
                      "memory": "192Mi"
                    },
                    "requests": {
                      "cpu": "100m",
                      "ephemeral-storage": "50Mi",
                      "memory": "128Mi"
                    }
                  },
                  "securityContext": {
                    "allowPrivilegeEscalation": false,
                    "capabilities": {
                      "add": [],
                      "drop": [
                        "ALL"
                      ]
                    },
                    "privileged": false,
                    "readOnlyRootFilesystem": true,
                    "runAsGroup": 1001,
                    "runAsNonRoot": true,
                    "runAsUser": 1001,
                    "seLinuxOptions": {},
                    "seccompProfile": {
                      "type": "RuntimeDefault"
                    }
                  },
                  "volumeMounts": [
                    {
                      "mountPath": "/emptydir",
                      "name": "empty-dir"
                    },
                    {
                      "mountPath": "/opt/bitnami/airflow/airflow.cfg",
                      "name": "configuration",
                      "subPath": "airflow.cfg"
                    },
                    {
                      "mountPath": "/opt/bitnami/airflow/config/airflow_local_settings.py",
                      "name": "configuration",
                      "subPath": "airflow_local_settings.py"
                    },
                    {
                      "mountPath": "/opt/bitnami/airflow/secrets",
                      "name": "airflow-secrets"
                    }
                  ]
                },
                {
                  "args": [
                    "-ec",
                    ". /opt/bitnami/scripts/libairflow.sh\n\n# Copy the configuration files to the writable directory\ncp -r --preserve=mode /opt/bitnami/airflow/venv /emptydir/venv-base-dir\n\ninfo \"Copy operation completed\"\n"
                  ],
                  "command": [
                    "/bin/bash"
                  ],
                  "env": [
                    {
                      "name": "BITNAMI_DEBUG",
                      "value": "false"
                    }
                  ],
                  "image": "docker.io/bitnami/airflow:3.0.5-debian-12-r0",
                  "imagePullPolicy": "IfNotPresent",
                  "name": "prepare-venv",
                  "resources": {
                    "limits": {
                      "cpu": "150m",
                      "ephemeral-storage": "2Gi",
                      "memory": "192Mi"
                    },
                    "requests": {
                      "cpu": "100m",
                      "ephemeral-storage": "50Mi",
                      "memory": "128Mi"
                    }
                  },
                  "securityContext": {
                    "allowPrivilegeEscalation": false,
                    "capabilities": {
                      "add": [],
                      "drop": [
                        "ALL"
                      ]
                    },
                    "privileged": false,
                    "readOnlyRootFilesystem": true,
                    "runAsGroup": 1001,
                    "runAsNonRoot": true,
                    "runAsUser": 1001,
                    "seLinuxOptions": {},
                    "seccompProfile": {
                      "type": "RuntimeDefault"
                    }
                  },
                  "volumeMounts": [
                    {
                      "mountPath": "/emptydir",
                      "name": "empty-dir"
                    }
                  ]
                },
                {
                  "args": [
                    "-ec",
                    ". /opt/bitnami/scripts/airflow-env.sh\n. /opt/bitnami/scripts/libairflow.sh\n\ninfo \"Trying to connect to the database server\"\nairflow_wait_for_db_connection\ninfo \"Waiting for db migrations to be completed\"\nairflow_wait_for_db_migrations\ninfo \"Waiting for the admin user to exist\"\nairflow_wait_for_admin_user\n"
                  ],
                  "command": [
                    "/bin/bash"
                  ],
                  "env": [
                    {
                      "name": "BITNAMI_DEBUG",
                      "value": "false"
                    }
                  ],
                  "image": "docker.io/bitnami/airflow:3.0.5-debian-12-r0",
                  "imagePullPolicy": "IfNotPresent",
                  "name": "wait-for-db-migrations",
                  "resources": {
                    "limits": {
                      "cpu": "375m",
                      "ephemeral-storage": "2Gi",
                      "memory": "384Mi"
                    },
                    "requests": {
                      "cpu": "250m",
                      "ephemeral-storage": "50Mi",
                      "memory": "256Mi"
                    }
                  },
                  "securityContext": {
                    "allowPrivilegeEscalation": false,
                    "capabilities": {
                      "add": [],
                      "drop": [
                        "ALL"
                      ]
                    },
                    "privileged": false,
                    "readOnlyRootFilesystem": true,
                    "runAsGroup": 1001,
                    "runAsNonRoot": true,
                    "runAsUser": 1001,
                    "seLinuxOptions": {},
                    "seccompProfile": {
                      "type": "RuntimeDefault"
                    }
                  },
                  "volumeMounts": [
                    {
                      "mountPath": "/tmp",
                      "name": "empty-dir",
                      "subPath": "tmp-dir"
                    },
                    {
                      "mountPath": "/opt/bitnami/airflow/logs",
                      "name": "empty-dir",
                      "subPath": "app-logs-dir"
                    },
                    {
                      "mountPath": "/opt/bitnami/airflow/tmp",
                      "name": "empty-dir",
                      "subPath": "app-tmp-dir"
                    },
                    {
                      "mountPath": "/opt/bitnami/airflow/airflow.db",
                      "name": "empty-dir",
                      "subPath": "app-base-dir/airflow.db"
                    },
                    {
                      "mountPath": "/opt/bitnami/airflow/airflow.cfg",
                      "name": "empty-dir",
                      "subPath": "app-base-dir/airflow.cfg"
                    }
                  ]
                }
              ],
              "securityContext": {
                "fsGroup": 1001,
                "fsGroupChangePolicy": "Always",
                "supplementalGroups": [],
                "sysctls": []
              },
              "serviceAccountName": "airflow",
              "volumes": [
                {
                  "emptyDir": {},
                  "name": "empty-dir"
                },
                {
                  "configMap": {
                    "name": "airflow",
                    "optional": true
                  },
                  "name": "configuration"
                },
                {
                  "name": "airflow-secrets",
                  "projected": {
                    "sources": [
                      {
                        "secret": {
                          "name": "airflow"
                        }
                      },
                      {
                        "secret": {
                          "name": "airflow-postgresql"
                        }
                      },
                      {
                        "secret": {
                          "name": "airflow-redis"
                        }
                      }
                    ]
                  }
                }
              ]
            }
          }
        }
      },
      "component": {
        "version": "apps/v1",
        "kind": "Deployment",
        "schema": ""
      }
    },
    {
      "id": "3e95ceed-a972-453f-873c-beec401cab29",
      "schemaVersion": "components.meshery.io/v1beta1",
      "version": "v1.0.0",
      "displayName": "airflow-web",
      "description": "",
      "format": "",
      "model": {
        "id": "b3f5bc0d-30f7-607d-6c73-784ddde6cad8",
        "schemaVersion": "models.meshery.io/v1beta1",
        "version": "v1.0.0",
        "name": "kubernetes",
        "displayName": "Kubernetes",
        "status": "enabled",
        "registrant": {
          "id": "5bc80e3c-5d43-9eb4-d16c-78a2769247a6",
          "name": "Github",
          "credential_id": "00000000-0000-0000-0000-000000000000",
          "type": "registry",
          "sub_type": "",
          "kind": "github",
          "status": "registered",
          "user_id": "00000000-0000-0000-0000-000000000000",
          "created_at": "2025-09-17T17:32:17.981302672Z",
          "updated_at": "2025-09-17T17:32:17.981302672Z",
          "deleted_at": "0001-01-01T00:00:00Z",
          "schemaVersion": ""
        },
        "connection_id": "5bc80e3c-5d43-9eb4-d16c-78a2769247a6",
        "category": {
          "id": "9ca27d0d-66ce-42a9-8c85-6236563f2ddb",
          "name": "Orchestration \u0026 Management"
        },
        "subCategory": "Scheduling \u0026 Orchestration",
        "metadata": {
          "isAnnotation": false,
          "primaryColor": "#326CE5",
          "secondaryColor": "#7aa1f0",
          "shape": "circle",
          "styleOverrides": "",
          "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/kubernetes-color.svg",
          "svgComplete": "",
          "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/kubernetes-white.svg"
        },
        "model": {
          "version": "v1.32.0-alpha.3"
        },
        "components_count": 0,
        "relationships_count": 0,
        "components": null,
        "relationships": null
      },
      "styles": {
        "background-image": "none",
        "background-opacity": 0.5,
        "border-width": 2,
        "primaryColor": "#326CE5",
        "secondaryColor": "#7aa1f0",
        "shape": "round-rectangle",
        "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/deployment-color.svg",
        "svgComplete": "ui/public/static/img/meshmodels/kubernetes/complete/deployment-complete.svg",
        "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/deployment-white.svg"
      },
      "capabilities": [],
      "status": "enabled",
      "metadata": {
        "configurationUISchema": "",
        "genealogy": "parent",
        "instanceDetails": null,
        "isAnnotation": false,
        "isNamespaced": true,
        "published": false,
        "source_uri": "git://github.com/kubernetes/kubernetes/master/api/openapi-spec/v3"
      },
      "configuration": {
        "metadata": {
          "labels": {
            "app.kubernetes.io/component": "web",
            "app.kubernetes.io/instance": "airflow",
            "app.kubernetes.io/managed-by": "Helm",
            "app.kubernetes.io/name": "airflow",
            "app.kubernetes.io/version": "3.0.5",
            "helm.sh/chart": "airflow-25.0.2"
          },
          "name": "airflow-web",
          "namespace": "default"
        },
        "spec": {
          "replicas": 1,
          "selector": {
            "matchLabels": {
              "app.kubernetes.io/component": "web",
              "app.kubernetes.io/instance": "airflow",
              "app.kubernetes.io/name": "airflow"
            }
          },
          "strategy": {
            "rollingUpdate": {},
            "type": "RollingUpdate"
          },
          "template": {
            "metadata": {
              "annotations": {
                "checksum/configmap": "e72b2b3a9039fec4ff7ee6dde04b2bfd1e24a38615c29d808d89fb22a99c85bd",
                "checksum/webserver-configmap": "8186f2a1ba228117047439cae78c6522fe09557491e6993dc4779da0d7c11f1a"
              },
              "labels": {
                "app.kubernetes.io/component": "web",
                "app.kubernetes.io/instance": "airflow",
                "app.kubernetes.io/managed-by": "Helm",
                "app.kubernetes.io/name": "airflow",
                "app.kubernetes.io/version": "3.0.5",
                "helm.sh/chart": "airflow-25.0.2"
              }
            },
            "spec": {
              "affinity": {
                "nodeAffinity": null,
                "podAffinity": null,
                "podAntiAffinity": {
                  "preferredDuringSchedulingIgnoredDuringExecution": [
                    {
                      "podAffinityTerm": {
                        "labelSelector": {
                          "matchLabels": {
                            "app.kubernetes.io/component": "web",
                            "app.kubernetes.io/instance": "airflow",
                            "app.kubernetes.io/name": "airflow"
                          }
                        },
                        "topologyKey": "kubernetes.io/hostname"
                      },
                      "weight": 1
                    }
                  ]
                }
              },
              "automountServiceAccountToken": false,
              "containers": [
                {
                  "env": [
                    {
                      "name": "BITNAMI_DEBUG",
                      "value": "false"
                    },
                    {
                      "name": "AIRFLOW__CORE__FERNET_KEY_CMD",
                      "value": "cat /opt/bitnami/airflow/secrets/airflow-fernet-key"
                    },
                    {
                      "name": "AIRFLOW__API__SECRET_KEY_CMD",
                      "value": "cat /opt/bitnami/airflow/secrets/airflow-secret-key"
                    },
                    {
                      "name": "AIRFLOW__API_AUTH__JWT_SECRET_CMD",
                      "value": "cat /opt/bitnami/airflow/secrets/airflow-jwt-secret-key"
                    },
                    {
                      "name": "AIRFLOW_SKIP_DB_SETUP",
                      "value": "yes"
                    },
                    {
                      "name": "PYTHONPYCACHEPREFIX",
                      "value": "/opt/bitnami/airflow/venv/tmp"
                    }
                  ],
                  "image": "docker.io/bitnami/airflow:3.0.5-debian-12-r0",
                  "imagePullPolicy": "IfNotPresent",
                  "livenessProbe": {
                    "exec": {
                      "command": [
                        "pgrep",
                        "-f",
                        "airflow"
                      ]
                    },
                    "failureThreshold": 6,
                    "initialDelaySeconds": 180,
                    "periodSeconds": 20,
                    "successThreshold": 1,
                    "timeoutSeconds": 5
                  },
                  "name": "airflow-web",
                  "ports": [
                    {
                      "containerPort": 8080,
                      "name": "http"
                    }
                  ],
                  "readinessProbe": {
                    "failureThreshold": 6,
                    "httpGet": {
                      "path": "/api/v2/monitor/health",
                      "port": "http",
                      "scheme": "HTTP"
                    },
                    "initialDelaySeconds": 30,
                    "periodSeconds": 10,
                    "successThreshold": 1,
                    "timeoutSeconds": 5
                  },
                  "resources": {
                    "limits": {
                      "cpu": "750m",
                      "ephemeral-storage": "2Gi",
                      "memory": "1536Mi"
                    },
                    "requests": {
                      "cpu": "500m",
                      "ephemeral-storage": "50Mi",
                      "memory": "1024Mi"
                    }
                  },
                  "securityContext": {
                    "allowPrivilegeEscalation": false,
                    "capabilities": {
                      "drop": [
                        "ALL"
                      ]
                    },
                    "privileged": false,
                    "readOnlyRootFilesystem": true,
                    "runAsGroup": 1001,
                    "runAsNonRoot": true,
                    "runAsUser": 1001,
                    "seLinuxOptions": {},
                    "seccompProfile": {
                      "type": "RuntimeDefault"
                    }
                  },
                  "volumeMounts": [
                    {
                      "mountPath": "/tmp",
                      "name": "empty-dir",
                      "subPath": "tmp-dir"
                    },
                    {
                      "mountPath": "/opt/bitnami/airflow/nss-wrapper",
                      "name": "empty-dir",
                      "subPath": "app-nss-wrapper-dir"
                    },
                    {
                      "mountPath": "/opt/bitnami/airflow/logs",
                      "name": "empty-dir",
                      "subPath": "app-logs-dir"
                    },
                    {
                      "mountPath": "/opt/bitnami/airflow/tmp",
                      "name": "empty-dir",
                      "subPath": "app-tmp-dir"
                    },
                    {
                      "mountPath": "/opt/bitnami/airflow/airflow.db",
                      "name": "empty-dir",
                      "subPath": "app-base-dir/airflow.db"
                    },
                    {
                      "mountPath": "/opt/bitnami/airflow/airflow.cfg",
                      "name": "empty-dir",
                      "subPath": "app-base-dir/airflow.cfg"
                    },
                    {
                      "mountPath": "/opt/bitnami/airflow/config/airflow_local_settings.py",
                      "name": "empty-dir",
                      "subPath": "app-conf-dir/airflow_local_settings.py"
                    },
                    {
                      "mountPath": "/opt/bitnami/airflow/webserver_config.py",
                      "name": "empty-dir",
                      "subPath": "app-base-dir/webserver_config.py"
                    },
                    {
                      "mountPath": "/opt/bitnami/airflow/venv",
                      "name": "empty-dir",
                      "subPath": "venv-base-dir"
                    },
                    {
                      "mountPath": "/opt/bitnami/airflow/secrets",
                      "name": "airflow-secrets"
                    }
                  ]
                }
              ],
              "initContainers": [
                {
                  "args": [
                    "-ec",
                    ". /opt/bitnami/scripts/libairflow.sh\n\nmkdir -p /emptydir/app-base-dir /emptydir/app-conf-dir\n\n# Copy the configuration files to the writable directory\ncp /opt/bitnami/airflow/airflow.cfg /emptydir/app-base-dir/airflow.cfg\n\n# Apply changes affecting credentials\nexport AIRFLOW_CONF_FILE=\"/emptydir/app-base-dir/airflow.cfg\"\nexport AIRFLOW_DATABASE_PASSWORD=\"$(\u003c $AIRFLOW_DATABASE_PASSWORD_FILE)\"\ndb_user=\"$(airflow_encode_url \"$AIRFLOW_DATABASE_USERNAME\")\"\ndb_password=\"$(airflow_encode_url \"$AIRFLOW_DATABASE_PASSWORD\")\"\nairflow_conf_set \"database\" \"sql_alchemy_conn\" \"postgresql+psycopg2://${db_user}:${db_password}@${AIRFLOW_DATABASE_HOST}:${AIRFLOW_DATABASE_PORT_NUMBER}/${AIRFLOW_DATABASE_NAME}\"\nexport REDIS_PASSWORD=\"$(\u003c $REDIS_PASSWORD_FILE)\"\nredis_credentials=\":$(airflow_encode_url \"$REDIS_PASSWORD\")\"\n[[ -n \"$REDIS_USER\" ]] \u0026\u0026 redis_credentials=\"$(airflow_encode_url \"$REDIS_USER\")$redis_credentials\"\nairflow_conf_set \"celery\" \"result_backend\" \"db+postgresql://${db_user}:${db_password}@${AIRFLOW_DATABASE_HOST}:${AIRFLOW_DATABASE_PORT_NUMBER}/${AIRFLOW_DATABASE_NAME}\"\nairflow_conf_set \"celery\" \"broker_url\" \"redis://${redis_credentials}@${REDIS_HOST}:${REDIS_PORT_NUMBER}/${REDIS_DATABASE}\"\n# Configure authentication backend\nairflow_conf_set \"core\" \"auth_manager\" \"airflow.providers.fab.auth_manager.fab_auth_manager.FabAuthManager\"\ninfo \"Airflow configuration ready\"\n\nif [[ -f \"/opt/bitnami/airflow/config/airflow_local_settings.py\" ]]; then\n    cp /opt/bitnami/airflow/config/airflow_local_settings.py /emptydir/app-conf-dir/airflow_local_settings.py\nelse\n    touch /emptydir/app-conf-dir/airflow_local_settings.py\nfi\n\n# HACK: When testing the db connection it creates an empty airflow.db file at the\n# application root\ntouch /emptydir/app-base-dir/airflow.db\n"
                  ],
                  "command": [
                    "/bin/bash"
                  ],
                  "env": [
                    {
                      "name": "BITNAMI_DEBUG",
                      "value": "false"
                    },
                    {
                      "name": "AIRFLOW_DATABASE_NAME",
                      "value": "bitnami_airflow"
                    },
                    {
                      "name": "AIRFLOW_DATABASE_USERNAME",
                      "value": "bn_airflow"
                    },
                    {
                      "name": "AIRFLOW_DATABASE_PASSWORD_FILE",
                      "value": "/opt/bitnami/airflow/secrets/password"
                    },
                    {
                      "name": "AIRFLOW_DATABASE_HOST",
                      "value": "airflow-postgresql"
                    },
                    {
                      "name": "AIRFLOW_DATABASE_PORT_NUMBER",
                      "value": "5432"
                    },
                    {
                      "name": "REDIS_HOST",
                      "value": "airflow-redis-master"
                    },
                    {
                      "name": "REDIS_PORT_NUMBER",
                      "value": "6379"
                    },
                    {
                      "name": "REDIS_PASSWORD_FILE",
                      "value": "/opt/bitnami/airflow/secrets/redis-password"
                    }
                  ],
                  "image": "docker.io/bitnami/airflow:3.0.5-debian-12-r0",
                  "imagePullPolicy": "IfNotPresent",
                  "name": "prepare-config",
                  "resources": {
                    "limits": {
                      "cpu": "150m",
                      "ephemeral-storage": "2Gi",
                      "memory": "192Mi"
                    },
                    "requests": {
                      "cpu": "100m",
                      "ephemeral-storage": "50Mi",
                      "memory": "128Mi"
                    }
                  },
                  "securityContext": {
                    "allowPrivilegeEscalation": false,
                    "capabilities": {
                      "add": [],
                      "drop": [
                        "ALL"
                      ]
                    },
                    "privileged": false,
                    "readOnlyRootFilesystem": true,
                    "runAsGroup": 1001,
                    "runAsNonRoot": true,
                    "runAsUser": 1001,
                    "seLinuxOptions": {},
                    "seccompProfile": {
                      "type": "RuntimeDefault"
                    }
                  },
                  "volumeMounts": [
                    {
                      "mountPath": "/emptydir",
                      "name": "empty-dir"
                    },
                    {
                      "mountPath": "/opt/bitnami/airflow/airflow.cfg",
                      "name": "configuration",
                      "subPath": "airflow.cfg"
                    },
                    {
                      "mountPath": "/opt/bitnami/airflow/config/airflow_local_settings.py",
                      "name": "configuration",
                      "subPath": "airflow_local_settings.py"
                    },
                    {
                      "mountPath": "/opt/bitnami/airflow/secrets",
                      "name": "airflow-secrets"
                    }
                  ]
                },
                {
                  "args": [
                    "-ec",
                    ". /opt/bitnami/scripts/libairflow.sh\n\n# Copy the configuration files to the writable directory\ncp /opt/bitnami/airflow/webserver_config.py /emptydir/app-base-dir/webserver_config.py\ninfo \"Airflow webserver configuration ready\"\n"
                  ],
                  "command": [
                    "/bin/bash"
                  ],
                  "env": [
                    {
                      "name": "BITNAMI_DEBUG",
                      "value": "false"
                    }
                  ],
                  "image": "docker.io/bitnami/airflow:3.0.5-debian-12-r0",
                  "imagePullPolicy": "IfNotPresent",
                  "name": "prepare-web-config",
                  "resources": {
                    "limits": {
                      "cpu": "150m",
                      "ephemeral-storage": "2Gi",
                      "memory": "192Mi"
                    },
                    "requests": {
                      "cpu": "100m",
                      "ephemeral-storage": "50Mi",
                      "memory": "128Mi"
                    }
                  },
                  "securityContext": {
                    "allowPrivilegeEscalation": false,
                    "capabilities": {
                      "add": [],
                      "drop": [
                        "ALL"
                      ]
                    },
                    "privileged": false,
                    "readOnlyRootFilesystem": true,
                    "runAsGroup": 1001,
                    "runAsNonRoot": true,
                    "runAsUser": 1001,
                    "seLinuxOptions": {},
                    "seccompProfile": {
                      "type": "RuntimeDefault"
                    }
                  },
                  "volumeMounts": [
                    {
                      "mountPath": "/emptydir",
                      "name": "empty-dir"
                    },
                    {
                      "mountPath": "/opt/bitnami/airflow/webserver_config.py",
                      "name": "webserver-configuration",
                      "subPath": "webserver_config.py"
                    },
                    {
                      "mountPath": "/opt/bitnami/airflow/secrets",
                      "name": "airflow-secrets"
                    }
                  ]
                },
                {
                  "args": [
                    "-ec",
                    ". /opt/bitnami/scripts/libairflow.sh\n\n# Copy the configuration files to the writable directory\ncp -r --preserve=mode /opt/bitnami/airflow/venv /emptydir/venv-base-dir\n\ninfo \"Copy operation completed\"\n"
                  ],
                  "command": [
                    "/bin/bash"
                  ],
                  "env": [
                    {
                      "name": "BITNAMI_DEBUG",
                      "value": "false"
                    }
                  ],
                  "image": "docker.io/bitnami/airflow:3.0.5-debian-12-r0",
                  "imagePullPolicy": "IfNotPresent",
                  "name": "prepare-venv",
                  "resources": {
                    "limits": {
                      "cpu": "150m",
                      "ephemeral-storage": "2Gi",
                      "memory": "192Mi"
                    },
                    "requests": {
                      "cpu": "100m",
                      "ephemeral-storage": "50Mi",
                      "memory": "128Mi"
                    }
                  },
                  "securityContext": {
                    "allowPrivilegeEscalation": false,
                    "capabilities": {
                      "add": [],
                      "drop": [
                        "ALL"
                      ]
                    },
                    "privileged": false,
                    "readOnlyRootFilesystem": true,
                    "runAsGroup": 1001,
                    "runAsNonRoot": true,
                    "runAsUser": 1001,
                    "seLinuxOptions": {},
                    "seccompProfile": {
                      "type": "RuntimeDefault"
                    }
                  },
                  "volumeMounts": [
                    {
                      "mountPath": "/emptydir",
                      "name": "empty-dir"
                    }
                  ]
                },
                {
                  "args": [
                    "-ec",
                    ". /opt/bitnami/scripts/airflow-env.sh\n. /opt/bitnami/scripts/libairflow.sh\n\ninfo \"Trying to connect to the database server\"\nairflow_wait_for_db_connection\ninfo \"Waiting for db migrations to be completed\"\nairflow_wait_for_db_migrations\ninfo \"Waiting for the admin user to exist\"\nairflow_wait_for_admin_user\n"
                  ],
                  "command": [
                    "/bin/bash"
                  ],
                  "env": [
                    {
                      "name": "BITNAMI_DEBUG",
                      "value": "false"
                    }
                  ],
                  "image": "docker.io/bitnami/airflow:3.0.5-debian-12-r0",
                  "imagePullPolicy": "IfNotPresent",
                  "name": "wait-for-db-migrations",
                  "resources": {
                    "limits": {
                      "cpu": "375m",
                      "ephemeral-storage": "2Gi",
                      "memory": "384Mi"
                    },
                    "requests": {
                      "cpu": "250m",
                      "ephemeral-storage": "50Mi",
                      "memory": "256Mi"
                    }
                  },
                  "securityContext": {
                    "allowPrivilegeEscalation": false,
                    "capabilities": {
                      "add": [],
                      "drop": [
                        "ALL"
                      ]
                    },
                    "privileged": false,
                    "readOnlyRootFilesystem": true,
                    "runAsGroup": 1001,
                    "runAsNonRoot": true,
                    "runAsUser": 1001,
                    "seLinuxOptions": {},
                    "seccompProfile": {
                      "type": "RuntimeDefault"
                    }
                  },
                  "volumeMounts": [
                    {
                      "mountPath": "/tmp",
                      "name": "empty-dir",
                      "subPath": "tmp-dir"
                    },
                    {
                      "mountPath": "/opt/bitnami/airflow/logs",
                      "name": "empty-dir",
                      "subPath": "app-logs-dir"
                    },
                    {
                      "mountPath": "/opt/bitnami/airflow/tmp",
                      "name": "empty-dir",
                      "subPath": "app-tmp-dir"
                    },
                    {
                      "mountPath": "/opt/bitnami/airflow/airflow.db",
                      "name": "empty-dir",
                      "subPath": "app-base-dir/airflow.db"
                    },
                    {
                      "mountPath": "/opt/bitnami/airflow/airflow.cfg",
                      "name": "empty-dir",
                      "subPath": "app-base-dir/airflow.cfg"
                    }
                  ]
                }
              ],
              "securityContext": {
                "fsGroup": 1001,
                "fsGroupChangePolicy": "Always",
                "supplementalGroups": [],
                "sysctls": []
              },
              "serviceAccountName": "airflow",
              "volumes": [
                {
                  "emptyDir": {},
                  "name": "empty-dir"
                },
                {
                  "configMap": {
                    "name": "airflow",
                    "optional": true
                  },
                  "name": "configuration"
                },
                {
                  "configMap": {
                    "name": "airflow-web"
                  },
                  "name": "webserver-configuration"
                },
                {
                  "name": "airflow-secrets",
                  "projected": {
                    "sources": [
                      {
                        "secret": {
                          "name": "airflow"
                        }
                      },
                      {
                        "secret": {
                          "name": "airflow-postgresql"
                        }
                      },
                      {
                        "secret": {
                          "name": "airflow-redis"
                        }
                      }
                    ]
                  }
                }
              ]
            }
          }
        }
      },
      "component": {
        "version": "apps/v1",
        "kind": "Deployment",
        "schema": ""
      }
    },
    {
      "id": "3699a643-73c0-43e7-b050-1c9dfb633434",
      "schemaVersion": "components.meshery.io/v1beta1",
      "version": "v1.0.0",
      "displayName": "airflow-postgresql",
      "description": "",
      "format": "",
      "model": {
        "id": "b3f5bc0d-30f7-607d-6c73-784ddde6cad8",
        "schemaVersion": "models.meshery.io/v1beta1",
        "version": "v1.0.0",
        "name": "kubernetes",
        "displayName": "Kubernetes",
        "status": "enabled",
        "registrant": {
          "id": "5bc80e3c-5d43-9eb4-d16c-78a2769247a6",
          "name": "Github",
          "credential_id": "00000000-0000-0000-0000-000000000000",
          "type": "registry",
          "sub_type": "",
          "kind": "github",
          "status": "registered",
          "user_id": "00000000-0000-0000-0000-000000000000",
          "created_at": "2025-09-17T17:32:17.981302672Z",
          "updated_at": "2025-09-17T17:32:17.981302672Z",
          "deleted_at": "0001-01-01T00:00:00Z",
          "schemaVersion": ""
        },
        "connection_id": "5bc80e3c-5d43-9eb4-d16c-78a2769247a6",
        "category": {
          "id": "9ca27d0d-66ce-42a9-8c85-6236563f2ddb",
          "name": "Orchestration \u0026 Management"
        },
        "subCategory": "Scheduling \u0026 Orchestration",
        "metadata": {
          "isAnnotation": false,
          "primaryColor": "#326CE5",
          "secondaryColor": "#7aa1f0",
          "shape": "circle",
          "styleOverrides": "",
          "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/kubernetes-color.svg",
          "svgComplete": "",
          "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/kubernetes-white.svg"
        },
        "model": {
          "version": "v1.32.0-alpha.3"
        },
        "components_count": 0,
        "relationships_count": 0,
        "components": null,
        "relationships": null
      },
      "styles": {
        "background-opacity": 0.2,
        "height": 15,
        "primaryColor": "#326CE5",
        "secondaryColor": "#7aa1f0",
        "shape": "round-rectangle",
        "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/statefulset-color.svg",
        "svgComplete": "ui/public/static/img/meshmodels/kubernetes/complete/statefulset-complete.svg",
        "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/statefulset-white.svg",
        "width": 15,
        "x": 12,
        "y": 20
      },
      "capabilities": [],
      "status": "enabled",
      "metadata": {
        "configurationUISchema": "",
        "genealogy": "parent",
        "instanceDetails": null,
        "isAnnotation": false,
        "isNamespaced": true,
        "published": false,
        "source_uri": "git://github.com/kubernetes/kubernetes/master/api/openapi-spec/v3"
      },
      "configuration": {
        "metadata": {
          "labels": {
            "app.kubernetes.io/component": "primary",
            "app.kubernetes.io/instance": "airflow",
            "app.kubernetes.io/managed-by": "Helm",
            "app.kubernetes.io/name": "postgresql",
            "app.kubernetes.io/version": "17.6.0",
            "helm.sh/chart": "postgresql-16.7.26"
          },
          "name": "airflow-postgresql",
          "namespace": "default"
        },
        "spec": {
          "replicas": 1,
          "selector": {
            "matchLabels": {
              "app.kubernetes.io/component": "primary",
              "app.kubernetes.io/instance": "airflow",
              "app.kubernetes.io/name": "postgresql"
            }
          },
          "serviceName": "airflow-postgresql-hl",
          "template": {
            "metadata": {
              "labels": {
                "app.kubernetes.io/component": "primary",
                "app.kubernetes.io/instance": "airflow",
                "app.kubernetes.io/managed-by": "Helm",
                "app.kubernetes.io/name": "postgresql",
                "app.kubernetes.io/version": "17.6.0",
                "helm.sh/chart": "postgresql-16.7.26"
              },
              "name": "airflow-postgresql"
            },
            "spec": {
              "affinity": {
                "nodeAffinity": null,
                "podAffinity": null,
                "podAntiAffinity": {
                  "preferredDuringSchedulingIgnoredDuringExecution": [
                    {
                      "podAffinityTerm": {
                        "labelSelector": {
                          "matchLabels": {
                            "app.kubernetes.io/component": "primary",
                            "app.kubernetes.io/instance": "airflow",
                            "app.kubernetes.io/name": "postgresql"
                          }
                        },
                        "topologyKey": "kubernetes.io/hostname"
                      },
                      "weight": 1
                    }
                  ]
                }
              },
              "automountServiceAccountToken": false,
              "containers": [
                {
                  "env": [
                    {
                      "name": "BITNAMI_DEBUG",
                      "value": "false"
                    },
                    {
                      "name": "POSTGRESQL_PORT_NUMBER",
                      "value": "5432"
                    },
                    {
                      "name": "POSTGRESQL_VOLUME_DIR",
                      "value": "/bitnami/postgresql"
                    },
                    {
                      "name": "PGDATA",
                      "value": "/bitnami/postgresql/data"
                    },
                    {
                      "name": "POSTGRES_USER",
                      "value": "bn_airflow"
                    },
                    {
                      "name": "POSTGRES_PASSWORD_FILE",
                      "value": "/opt/bitnami/postgresql/secrets/password"
                    },
                    {
                      "name": "POSTGRES_POSTGRES_PASSWORD_FILE",
                      "value": "/opt/bitnami/postgresql/secrets/postgres-password"
                    },
                    {
                      "name": "POSTGRES_DATABASE",
                      "value": "bitnami_airflow"
                    },
                    {
                      "name": "POSTGRESQL_ENABLE_LDAP",
                      "value": "no"
                    },
                    {
                      "name": "POSTGRESQL_ENABLE_TLS",
                      "value": "no"
                    },
                    {
                      "name": "POSTGRESQL_LOG_HOSTNAME",
                      "value": "false"
                    },
                    {
                      "name": "POSTGRESQL_LOG_CONNECTIONS",
                      "value": "false"
                    },
                    {
                      "name": "POSTGRESQL_LOG_DISCONNECTIONS",
                      "value": "false"
                    },
                    {
                      "name": "POSTGRESQL_PGAUDIT_LOG_CATALOG",
                      "value": "off"
                    },
                    {
                      "name": "POSTGRESQL_CLIENT_MIN_MESSAGES",
                      "value": "error"
                    },
                    {
                      "name": "POSTGRESQL_SHARED_PRELOAD_LIBRARIES",
                      "value": "pgaudit"
                    }
                  ],
                  "image": "docker.io/bitnami/postgresql:17.6.0-debian-12-r0",
                  "imagePullPolicy": "IfNotPresent",
                  "livenessProbe": {
                    "exec": {
                      "command": [
                        "/bin/sh",
                        "-c",
                        "exec pg_isready -U \"bn_airflow\" -d \"dbname=bitnami_airflow\" -h 127.0.0.1 -p 5432"
                      ]
                    },
                    "failureThreshold": 6,
                    "initialDelaySeconds": 30,
                    "periodSeconds": 10,
                    "successThreshold": 1,
                    "timeoutSeconds": 5
                  },
                  "name": "postgresql",
                  "ports": [
                    {
                      "containerPort": 5432,
                      "name": "tcp-postgresql"
                    }
                  ],
                  "readinessProbe": {
                    "exec": {
                      "command": [
                        "/bin/sh",
                        "-c",
                        "-e",
                        "exec pg_isready -U \"bn_airflow\" -d \"dbname=bitnami_airflow\" -h 127.0.0.1 -p 5432\n[ -f /opt/bitnami/postgresql/tmp/.initialized ] || [ -f /bitnami/postgresql/.initialized ]\n"
                      ]
                    },
                    "failureThreshold": 6,
                    "initialDelaySeconds": 5,
                    "periodSeconds": 10,
                    "successThreshold": 1,
                    "timeoutSeconds": 5
                  },
                  "resources": {
                    "limits": {
                      "cpu": "150m",
                      "ephemeral-storage": "2Gi",
                      "memory": "192Mi"
                    },
                    "requests": {
                      "cpu": "100m",
                      "ephemeral-storage": "50Mi",
                      "memory": "128Mi"
                    }
                  },
                  "securityContext": {
                    "allowPrivilegeEscalation": false,
                    "capabilities": {
                      "drop": [
                        "ALL"
                      ]
                    },
                    "privileged": false,
                    "readOnlyRootFilesystem": true,
                    "runAsGroup": 1001,
                    "runAsNonRoot": true,
                    "runAsUser": 1001,
                    "seLinuxOptions": {},
                    "seccompProfile": {
                      "type": "RuntimeDefault"
                    }
                  },
                  "volumeMounts": [
                    {
                      "mountPath": "/tmp",
                      "name": "empty-dir",
                      "subPath": "tmp-dir"
                    },
                    {
                      "mountPath": "/opt/bitnami/postgresql/conf",
                      "name": "empty-dir",
                      "subPath": "app-conf-dir"
                    },
                    {
                      "mountPath": "/opt/bitnami/postgresql/tmp",
                      "name": "empty-dir",
                      "subPath": "app-tmp-dir"
                    },
                    {
                      "mountPath": "/opt/bitnami/postgresql/secrets/",
                      "name": "postgresql-password"
                    },
                    {
                      "mountPath": "/dev/shm",
                      "name": "dshm"
                    },
                    {
                      "mountPath": "/bitnami/postgresql",
                      "name": "data"
                    }
                  ]
                }
              ],
              "hostIPC": false,
              "hostNetwork": false,
              "securityContext": {
                "fsGroup": 1001,
                "fsGroupChangePolicy": "Always",
                "supplementalGroups": [],
                "sysctls": []
              },
              "serviceAccountName": "airflow-postgresql",
              "volumes": [
                {
                  "emptyDir": {},
                  "name": "empty-dir"
                },
                {
                  "name": "postgresql-password",
                  "secret": {
                    "secretName": "airflow-postgresql"
                  }
                },
                {
                  "emptyDir": {
                    "medium": "Memory"
                  },
                  "name": "dshm"
                }
              ]
            }
          },
          "updateStrategy": {
            "rollingUpdate": {},
            "type": "RollingUpdate"
          },
          "volumeClaimTemplates": [
            {
              "apiVersion": "v1",
              "kind": "PersistentVolumeClaim",
              "metadata": {
                "name": "data"
              },
              "spec": {
                "accessModes": [
                  "ReadWriteOnce"
                ],
                "resources": {
                  "requests": {
                    "storage": "8Gi"
                  }
                }
              }
            }
          ]
        }
      },
      "component": {
        "version": "apps/v1",
        "kind": "StatefulSet",
        "schema": ""
      }
    },
    {
      "id": "7ac8d99d-8eee-4d38-8dfb-5ec95d344609",
      "schemaVersion": "components.meshery.io/v1beta1",
      "version": "v1.0.0",
      "displayName": "airflow-redis-master",
      "description": "",
      "format": "",
      "model": {
        "id": "b3f5bc0d-30f7-607d-6c73-784ddde6cad8",
        "schemaVersion": "models.meshery.io/v1beta1",
        "version": "v1.0.0",
        "name": "kubernetes",
        "displayName": "Kubernetes",
        "status": "enabled",
        "registrant": {
          "id": "5bc80e3c-5d43-9eb4-d16c-78a2769247a6",
          "name": "Github",
          "credential_id": "00000000-0000-0000-0000-000000000000",
          "type": "registry",
          "sub_type": "",
          "kind": "github",
          "status": "registered",
          "user_id": "00000000-0000-0000-0000-000000000000",
          "created_at": "2025-09-17T17:32:17.981302672Z",
          "updated_at": "2025-09-17T17:32:17.981302672Z",
          "deleted_at": "0001-01-01T00:00:00Z",
          "schemaVersion": ""
        },
        "connection_id": "5bc80e3c-5d43-9eb4-d16c-78a2769247a6",
        "category": {
          "id": "9ca27d0d-66ce-42a9-8c85-6236563f2ddb",
          "name": "Orchestration \u0026 Management"
        },
        "subCategory": "Scheduling \u0026 Orchestration",
        "metadata": {
          "isAnnotation": false,
          "primaryColor": "#326CE5",
          "secondaryColor": "#7aa1f0",
          "shape": "circle",
          "styleOverrides": "",
          "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/kubernetes-color.svg",
          "svgComplete": "",
          "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/kubernetes-white.svg"
        },
        "model": {
          "version": "v1.32.0-alpha.3"
        },
        "components_count": 0,
        "relationships_count": 0,
        "components": null,
        "relationships": null
      },
      "styles": {
        "background-opacity": 0.2,
        "height": 15,
        "primaryColor": "#326CE5",
        "secondaryColor": "#7aa1f0",
        "shape": "round-rectangle",
        "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/statefulset-color.svg",
        "svgComplete": "ui/public/static/img/meshmodels/kubernetes/complete/statefulset-complete.svg",
        "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/statefulset-white.svg",
        "width": 15,
        "x": 12,
        "y": 20
      },
      "capabilities": [],
      "status": "enabled",
      "metadata": {
        "configurationUISchema": "",
        "genealogy": "parent",
        "instanceDetails": null,
        "isAnnotation": false,
        "isNamespaced": true,
        "published": false,
        "source_uri": "git://github.com/kubernetes/kubernetes/master/api/openapi-spec/v3"
      },
      "configuration": {
        "metadata": {
          "labels": {
            "app.kubernetes.io/component": "master",
            "app.kubernetes.io/instance": "airflow",
            "app.kubernetes.io/managed-by": "Helm",
            "app.kubernetes.io/name": "redis",
            "app.kubernetes.io/version": "8.2.1",
            "helm.sh/chart": "redis-22.0.4"
          },
          "name": "airflow-redis-master",
          "namespace": "default"
        },
        "spec": {
          "replicas": 1,
          "revisionHistoryLimit": 10,
          "selector": {
            "matchLabels": {
              "app.kubernetes.io/component": "master",
              "app.kubernetes.io/instance": "airflow",
              "app.kubernetes.io/name": "redis"
            }
          },
          "serviceName": "airflow-redis-headless",
          "template": {
            "metadata": {
              "annotations": {
                "checksum/configmap": "2a9ab4a5432825504d910f022638674ce88eaefe9f9f595ad8bc107377d104fb",
                "checksum/health": "aff24913d801436ea469d8d374b2ddb3ec4c43ee7ab24663d5f8ff1a1b6991a9",
                "checksum/scripts": "0717e77fd3bb941f602860e9be4f2ed87b481cddeadf37be463f8512ecde0c3e",
                "checksum/secret": "40117be56aa4929c1528065d99b3f20cff81b973d4cab6caf22a1f599c95bc8e"
              },
              "labels": {
                "app.kubernetes.io/component": "master",
                "app.kubernetes.io/instance": "airflow",
                "app.kubernetes.io/managed-by": "Helm",
                "app.kubernetes.io/name": "redis",
                "app.kubernetes.io/version": "8.2.1",
                "helm.sh/chart": "redis-22.0.4"
              }
            },
            "spec": {
              "affinity": {
                "nodeAffinity": null,
                "podAffinity": null,
                "podAntiAffinity": {
                  "preferredDuringSchedulingIgnoredDuringExecution": [
                    {
                      "podAffinityTerm": {
                        "labelSelector": {
                          "matchLabels": {
                            "app.kubernetes.io/component": "master",
                            "app.kubernetes.io/instance": "airflow",
                            "app.kubernetes.io/name": "redis"
                          }
                        },
                        "topologyKey": "kubernetes.io/hostname"
                      },
                      "weight": 1
                    }
                  ]
                }
              },
              "automountServiceAccountToken": false,
              "containers": [
                {
                  "args": [
                    "-ec",
                    "/opt/bitnami/scripts/start-scripts/start-master.sh"
                  ],
                  "command": [
                    "/bin/bash"
                  ],
                  "env": [
                    {
                      "name": "BITNAMI_DEBUG",
                      "value": "false"
                    },
                    {
                      "name": "REDIS_REPLICATION_MODE",
                      "value": "master"
                    },
                    {
                      "name": "ALLOW_EMPTY_PASSWORD",
                      "value": "no"
                    },
                    {
                      "name": "REDIS_PASSWORD_FILE",
                      "value": "/opt/bitnami/redis/secrets/redis-password"
                    },
                    {
                      "name": "REDIS_TLS_ENABLED",
                      "value": "no"
                    },
                    {
                      "name": "REDIS_PORT",
                      "value": "6379"
                    }
                  ],
                  "image": "docker.io/bitnami/redis:8.2.1-debian-12-r0",
                  "imagePullPolicy": "IfNotPresent",
                  "livenessProbe": {
                    "exec": {
                      "command": [
                        "/bin/bash",
                        "-ec",
                        "/health/ping_liveness_local.sh 5"
                      ]
                    },
                    "failureThreshold": 5,
                    "initialDelaySeconds": 20,
                    "periodSeconds": 5,
                    "successThreshold": 1,
                    "timeoutSeconds": 6
                  },
                  "name": "redis",
                  "ports": [
                    {
                      "containerPort": 6379,
                      "name": "redis"
                    }
                  ],
                  "readinessProbe": {
                    "exec": {
                      "command": [
                        "/bin/bash",
                        "-ec",
                        "/health/ping_readiness_local.sh 1"
                      ]
                    },
                    "failureThreshold": 5,
                    "initialDelaySeconds": 20,
                    "periodSeconds": 5,
                    "successThreshold": 1,
                    "timeoutSeconds": 2
                  },
                  "resources": {
                    "limits": {
                      "cpu": "150m",
                      "ephemeral-storage": "2Gi",
                      "memory": "192Mi"
                    },
                    "requests": {
                      "cpu": "100m",
                      "ephemeral-storage": "50Mi",
                      "memory": "128Mi"
                    }
                  },
                  "securityContext": {
                    "allowPrivilegeEscalation": false,
                    "capabilities": {
                      "drop": [
                        "ALL"
                      ]
                    },
                    "readOnlyRootFilesystem": true,
                    "runAsGroup": 1001,
                    "runAsNonRoot": true,
                    "runAsUser": 1001,
                    "seLinuxOptions": {},
                    "seccompProfile": {
                      "type": "RuntimeDefault"
                    }
                  },
                  "volumeMounts": [
                    {
                      "mountPath": "/opt/bitnami/scripts/start-scripts",
                      "name": "start-scripts"
                    },
                    {
                      "mountPath": "/health",
                      "name": "health"
                    },
                    {
                      "mountPath": "/opt/bitnami/redis/secrets/",
                      "name": "redis-password"
                    },
                    {
                      "mountPath": "/data",
                      "name": "redis-data"
                    },
                    {
                      "mountPath": "/opt/bitnami/redis/mounted-etc",
                      "name": "config"
                    },
                    {
                      "mountPath": "/opt/bitnami/redis/etc/",
                      "name": "empty-dir",
                      "subPath": "app-conf-dir"
                    },
                    {
                      "mountPath": "/tmp",
                      "name": "empty-dir",
                      "subPath": "tmp-dir"
                    }
                  ]
                }
              ],
              "enableServiceLinks": true,
              "securityContext": {
                "fsGroup": 1001,
                "fsGroupChangePolicy": "Always",
                "supplementalGroups": [],
                "sysctls": []
              },
              "serviceAccountName": "airflow-redis-master",
              "terminationGracePeriodSeconds": 30,
              "volumes": [
                {
                  "configMap": {
                    "defaultMode": 493,
                    "name": "airflow-redis-scripts"
                  },
                  "name": "start-scripts"
                },
                {
                  "configMap": {
                    "defaultMode": 493,
                    "name": "airflow-redis-health"
                  },
                  "name": "health"
                },
                {
                  "name": "redis-password",
                  "secret": {
                    "items": [
                      {
                        "key": "redis-password",
                        "path": "redis-password"
                      }
                    ],
                    "secretName": "airflow-redis"
                  }
                },
                {
                  "configMap": {
                    "name": "airflow-redis-configuration"
                  },
                  "name": "config"
                },
                {
                  "emptyDir": {},
                  "name": "empty-dir"
                }
              ]
            }
          },
          "updateStrategy": {
            "type": "RollingUpdate"
          },
          "volumeClaimTemplates": [
            {
              "apiVersion": "v1",
              "kind": "PersistentVolumeClaim",
              "metadata": {
                "labels": {
                  "app.kubernetes.io/component": "master",
                  "app.kubernetes.io/instance": "airflow",
                  "app.kubernetes.io/name": "redis"
                },
                "name": "redis-data"
              },
              "spec": {
                "accessModes": [
                  "ReadWriteOnce"
                ],
                "resources": {
                  "requests": {
                    "storage": "8Gi"
                  }
                }
              }
            }
          ]
        }
      },
      "component": {
        "version": "apps/v1",
        "kind": "StatefulSet",
        "schema": ""
      }
    },
    {
      "id": "17b172a9-b6ae-48cb-97e3-4669ececcadc",
      "schemaVersion": "components.meshery.io/v1beta1",
      "version": "v1.0.0",
      "displayName": "airflow-triggerer",
      "description": "",
      "format": "",
      "model": {
        "id": "b3f5bc0d-30f7-607d-6c73-784ddde6cad8",
        "schemaVersion": "models.meshery.io/v1beta1",
        "version": "v1.0.0",
        "name": "kubernetes",
        "displayName": "Kubernetes",
        "status": "enabled",
        "registrant": {
          "id": "5bc80e3c-5d43-9eb4-d16c-78a2769247a6",
          "name": "Github",
          "credential_id": "00000000-0000-0000-0000-000000000000",
          "type": "registry",
          "sub_type": "",
          "kind": "github",
          "status": "registered",
          "user_id": "00000000-0000-0000-0000-000000000000",
          "created_at": "2025-09-17T17:32:17.981302672Z",
          "updated_at": "2025-09-17T17:32:17.981302672Z",
          "deleted_at": "0001-01-01T00:00:00Z",
          "schemaVersion": ""
        },
        "connection_id": "5bc80e3c-5d43-9eb4-d16c-78a2769247a6",
        "category": {
          "id": "9ca27d0d-66ce-42a9-8c85-6236563f2ddb",
          "name": "Orchestration \u0026 Management"
        },
        "subCategory": "Scheduling \u0026 Orchestration",
        "metadata": {
          "isAnnotation": false,
          "primaryColor": "#326CE5",
          "secondaryColor": "#7aa1f0",
          "shape": "circle",
          "styleOverrides": "",
          "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/kubernetes-color.svg",
          "svgComplete": "",
          "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/kubernetes-white.svg"
        },
        "model": {
          "version": "v1.32.0-alpha.3"
        },
        "components_count": 0,
        "relationships_count": 0,
        "components": null,
        "relationships": null
      },
      "styles": {
        "background-opacity": 0.2,
        "height": 15,
        "primaryColor": "#326CE5",
        "secondaryColor": "#7aa1f0",
        "shape": "round-rectangle",
        "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/statefulset-color.svg",
        "svgComplete": "ui/public/static/img/meshmodels/kubernetes/complete/statefulset-complete.svg",
        "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/statefulset-white.svg",
        "width": 15,
        "x": 12,
        "y": 20
      },
      "capabilities": [],
      "status": "enabled",
      "metadata": {
        "configurationUISchema": "",
        "genealogy": "parent",
        "instanceDetails": null,
        "isAnnotation": false,
        "isNamespaced": true,
        "published": false,
        "source_uri": "git://github.com/kubernetes/kubernetes/master/api/openapi-spec/v3"
      },
      "configuration": {
        "metadata": {
          "labels": {
            "app.kubernetes.io/component": "triggerer",
            "app.kubernetes.io/instance": "airflow",
            "app.kubernetes.io/managed-by": "Helm",
            "app.kubernetes.io/name": "airflow",
            "app.kubernetes.io/version": "3.0.5",
            "helm.sh/chart": "airflow-25.0.2"
          },
          "name": "airflow-triggerer",
          "namespace": "default"
        },
        "spec": {
          "podManagementPolicy": "OrderedReady",
          "replicas": 1,
          "selector": {
            "matchLabels": {
              "app.kubernetes.io/component": "triggerer",
              "app.kubernetes.io/instance": "airflow",
              "app.kubernetes.io/name": "airflow"
            }
          },
          "serviceName": "airflow-triggerer",
          "template": {
            "metadata": {
              "annotations": {
                "checksum/configmap": "e72b2b3a9039fec4ff7ee6dde04b2bfd1e24a38615c29d808d89fb22a99c85bd"
              },
              "labels": {
                "app.kubernetes.io/component": "triggerer",
                "app.kubernetes.io/instance": "airflow",
                "app.kubernetes.io/managed-by": "Helm",
                "app.kubernetes.io/name": "airflow",
                "app.kubernetes.io/version": "3.0.5",
                "helm.sh/chart": "airflow-25.0.2"
              }
            },
            "spec": {
              "affinity": {
                "nodeAffinity": null,
                "podAffinity": null,
                "podAntiAffinity": {
                  "preferredDuringSchedulingIgnoredDuringExecution": [
                    {
                      "podAffinityTerm": {
                        "labelSelector": {
                          "matchLabels": {
                            "app.kubernetes.io/component": "triggerer",
                            "app.kubernetes.io/instance": "airflow",
                            "app.kubernetes.io/name": "airflow"
                          }
                        },
                        "topologyKey": "kubernetes.io/hostname"
                      },
                      "weight": 1
                    }
                  ]
                }
              },
              "automountServiceAccountToken": false,
              "containers": [
                {
                  "env": [
                    {
                      "name": "BITNAMI_DEBUG",
                      "value": "false"
                    },
                    {
                      "name": "AIRFLOW__CORE__FERNET_KEY_CMD",
                      "value": "cat /opt/bitnami/airflow/secrets/airflow-fernet-key"
                    },
                    {
                      "name": "AIRFLOW__API__SECRET_KEY_CMD",
                      "value": "cat /opt/bitnami/airflow/secrets/airflow-secret-key"
                    },
                    {
                      "name": "AIRFLOW__API_AUTH__JWT_SECRET_CMD",
                      "value": "cat /opt/bitnami/airflow/secrets/airflow-jwt-secret-key"
                    },
                    {
                      "name": "AIRFLOW_COMPONENT_TYPE",
                      "value": "triggerer"
                    },
                    {
                      "name": "AIRFLOW_EXECUTOR",
                      "value": "CeleryExecutor"
                    },
                    {
                      "name": "PYTHONPYCACHEPREFIX",
                      "value": "/opt/bitnami/airflow/venv/tmp"
                    },
                    {
                      "name": "REDIS_HOST",
                      "value": "airflow-redis-master"
                    },
                    {
                      "name": "REDIS_PORT_NUMBER",
                      "value": "6379"
                    }
                  ],
                  "image": "docker.io/bitnami/airflow:3.0.5-debian-12-r0",
                  "imagePullPolicy": "IfNotPresent",
                  "livenessProbe": {
                    "exec": {
                      "command": [
                        "pgrep",
                        "-f",
                        "airflow triggerer"
                      ]
                    },
                    "failureThreshold": 6,
                    "initialDelaySeconds": 180,
                    "periodSeconds": 20,
                    "successThreshold": 1,
                    "timeoutSeconds": 15
                  },
                  "name": "airflow-triggerer",
                  "ports": [
                    {
                      "containerPort": 8794,
                      "name": "logs"
                    }
                  ],
                  "readinessProbe": {
                    "exec": {
                      "command": [
                        "/bin/bash",
                        "-ec",
                        "export CONNECTION_CHECK_MAX_COUNT=0\ntimeout 14 airflow jobs check --job-type TriggererJob --local --limit 0 2\u003e/dev/null\n"
                      ]
                    },
                    "failureThreshold": 6,
                    "initialDelaySeconds": 30,
                    "periodSeconds": 10,
                    "successThreshold": 1,
                    "timeoutSeconds": 15
                  },
                  "resources": {
                    "limits": {
                      "cpu": "750m",
                      "ephemeral-storage": "2Gi",
                      "memory": "768Mi"
                    },
                    "requests": {
                      "cpu": "500m",
                      "ephemeral-storage": "50Mi",
                      "memory": "512Mi"
                    }
                  },
                  "securityContext": {
                    "allowPrivilegeEscalation": false,
                    "capabilities": {
                      "drop": [
                        "ALL"
                      ]
                    },
                    "privileged": false,
                    "readOnlyRootFilesystem": true,
                    "runAsGroup": 1001,
                    "runAsNonRoot": true,
                    "runAsUser": 1001,
                    "seLinuxOptions": {},
                    "seccompProfile": {
                      "type": "RuntimeDefault"
                    }
                  },
                  "volumeMounts": [
                    {
                      "mountPath": "/tmp",
                      "name": "empty-dir",
                      "subPath": "tmp-dir"
                    },
                    {
                      "mountPath": "/opt/bitnami/airflow/nss-wrapper",
                      "name": "empty-dir",
                      "subPath": "app-nss-wrapper-dir"
                    },
                    {
                      "mountPath": "/opt/bitnami/airflow/tmp",
                      "name": "empty-dir",
                      "subPath": "app-tmp-dir"
                    },
                    {
                      "mountPath": "/opt/bitnami/airflow/airflow.db",
                      "name": "empty-dir",
                      "subPath": "app-base-dir/airflow.db"
                    },
                    {
                      "mountPath": "/opt/bitnami/airflow/airflow.cfg",
                      "name": "empty-dir",
                      "subPath": "app-base-dir/airflow.cfg"
                    },
                    {
                      "mountPath": "/opt/bitnami/airflow/config/airflow_local_settings.py",
                      "name": "empty-dir",
                      "subPath": "app-conf-dir/airflow_local_settings.py"
                    },
                    {
                      "mountPath": "/opt/bitnami/airflow/venv",
                      "name": "empty-dir",
                      "subPath": "venv-base-dir"
                    },
                    {
                      "mountPath": "/opt/bitnami/airflow/secrets",
                      "name": "airflow-secrets"
                    },
                    {
                      "mountPath": "/opt/bitnami/airflow/logs",
                      "name": "logs"
                    }
                  ]
                }
              ],
              "initContainers": [
                {
                  "args": [
                    "-ec",
                    ". /opt/bitnami/scripts/libairflow.sh\n\nmkdir -p /emptydir/app-base-dir /emptydir/app-conf-dir\n\n# Copy the configuration files to the writable directory\ncp /opt/bitnami/airflow/airflow.cfg /emptydir/app-base-dir/airflow.cfg\n\n# Apply changes affecting credentials\nexport AIRFLOW_CONF_FILE=\"/emptydir/app-base-dir/airflow.cfg\"\nexport AIRFLOW_DATABASE_PASSWORD=\"$(\u003c $AIRFLOW_DATABASE_PASSWORD_FILE)\"\ndb_user=\"$(airflow_encode_url \"$AIRFLOW_DATABASE_USERNAME\")\"\ndb_password=\"$(airflow_encode_url \"$AIRFLOW_DATABASE_PASSWORD\")\"\nairflow_conf_set \"database\" \"sql_alchemy_conn\" \"postgresql+psycopg2://${db_user}:${db_password}@${AIRFLOW_DATABASE_HOST}:${AIRFLOW_DATABASE_PORT_NUMBER}/${AIRFLOW_DATABASE_NAME}\"\nexport REDIS_PASSWORD=\"$(\u003c $REDIS_PASSWORD_FILE)\"\nredis_credentials=\":$(airflow_encode_url \"$REDIS_PASSWORD\")\"\n[[ -n \"$REDIS_USER\" ]] \u0026\u0026 redis_credentials=\"$(airflow_encode_url \"$REDIS_USER\")$redis_credentials\"\nairflow_conf_set \"celery\" \"result_backend\" \"db+postgresql://${db_user}:${db_password}@${AIRFLOW_DATABASE_HOST}:${AIRFLOW_DATABASE_PORT_NUMBER}/${AIRFLOW_DATABASE_NAME}\"\nairflow_conf_set \"celery\" \"broker_url\" \"redis://${redis_credentials}@${REDIS_HOST}:${REDIS_PORT_NUMBER}/${REDIS_DATABASE}\"\n# Configure authentication backend\nairflow_conf_set \"core\" \"auth_manager\" \"airflow.providers.fab.auth_manager.fab_auth_manager.FabAuthManager\"\ninfo \"Airflow configuration ready\"\n\nif [[ -f \"/opt/bitnami/airflow/config/airflow_local_settings.py\" ]]; then\n    cp /opt/bitnami/airflow/config/airflow_local_settings.py /emptydir/app-conf-dir/airflow_local_settings.py\nelse\n    touch /emptydir/app-conf-dir/airflow_local_settings.py\nfi\n\n# HACK: When testing the db connection it creates an empty airflow.db file at the\n# application root\ntouch /emptydir/app-base-dir/airflow.db\n"
                  ],
                  "command": [
                    "/bin/bash"
                  ],
                  "env": [
                    {
                      "name": "BITNAMI_DEBUG",
                      "value": "false"
                    },
                    {
                      "name": "AIRFLOW_DATABASE_NAME",
                      "value": "bitnami_airflow"
                    },
                    {
                      "name": "AIRFLOW_DATABASE_USERNAME",
                      "value": "bn_airflow"
                    },
                    {
                      "name": "AIRFLOW_DATABASE_PASSWORD_FILE",
                      "value": "/opt/bitnami/airflow/secrets/password"
                    },
                    {
                      "name": "AIRFLOW_DATABASE_HOST",
                      "value": "airflow-postgresql"
                    },
                    {
                      "name": "AIRFLOW_DATABASE_PORT_NUMBER",
                      "value": "5432"
                    },
                    {
                      "name": "REDIS_HOST",
                      "value": "airflow-redis-master"
                    },
                    {
                      "name": "REDIS_PORT_NUMBER",
                      "value": "6379"
                    },
                    {
                      "name": "REDIS_PASSWORD_FILE",
                      "value": "/opt/bitnami/airflow/secrets/redis-password"
                    }
                  ],
                  "image": "docker.io/bitnami/airflow:3.0.5-debian-12-r0",
                  "imagePullPolicy": "IfNotPresent",
                  "name": "prepare-config",
                  "resources": {
                    "limits": {
                      "cpu": "150m",
                      "ephemeral-storage": "2Gi",
                      "memory": "192Mi"
                    },
                    "requests": {
                      "cpu": "100m",
                      "ephemeral-storage": "50Mi",
                      "memory": "128Mi"
                    }
                  },
                  "securityContext": {
                    "allowPrivilegeEscalation": false,
                    "capabilities": {
                      "add": [],
                      "drop": [
                        "ALL"
                      ]
                    },
                    "privileged": false,
                    "readOnlyRootFilesystem": true,
                    "runAsGroup": 1001,
                    "runAsNonRoot": true,
                    "runAsUser": 1001,
                    "seLinuxOptions": {},
                    "seccompProfile": {
                      "type": "RuntimeDefault"
                    }
                  },
                  "volumeMounts": [
                    {
                      "mountPath": "/emptydir",
                      "name": "empty-dir"
                    },
                    {
                      "mountPath": "/opt/bitnami/airflow/airflow.cfg",
                      "name": "configuration",
                      "subPath": "airflow.cfg"
                    },
                    {
                      "mountPath": "/opt/bitnami/airflow/config/airflow_local_settings.py",
                      "name": "configuration",
                      "subPath": "airflow_local_settings.py"
                    },
                    {
                      "mountPath": "/opt/bitnami/airflow/secrets",
                      "name": "airflow-secrets"
                    }
                  ]
                },
                {
                  "args": [
                    "-ec",
                    ". /opt/bitnami/scripts/libairflow.sh\n\n# Copy the configuration files to the writable directory\ncp -r --preserve=mode /opt/bitnami/airflow/venv /emptydir/venv-base-dir\n\ninfo \"Copy operation completed\"\n"
                  ],
                  "command": [
                    "/bin/bash"
                  ],
                  "env": [
                    {
                      "name": "BITNAMI_DEBUG",
                      "value": "false"
                    }
                  ],
                  "image": "docker.io/bitnami/airflow:3.0.5-debian-12-r0",
                  "imagePullPolicy": "IfNotPresent",
                  "name": "prepare-venv",
                  "resources": {
                    "limits": {
                      "cpu": "150m",
                      "ephemeral-storage": "2Gi",
                      "memory": "192Mi"
                    },
                    "requests": {
                      "cpu": "100m",
                      "ephemeral-storage": "50Mi",
                      "memory": "128Mi"
                    }
                  },
                  "securityContext": {
                    "allowPrivilegeEscalation": false,
                    "capabilities": {
                      "add": [],
                      "drop": [
                        "ALL"
                      ]
                    },
                    "privileged": false,
                    "readOnlyRootFilesystem": true,
                    "runAsGroup": 1001,
                    "runAsNonRoot": true,
                    "runAsUser": 1001,
                    "seLinuxOptions": {},
                    "seccompProfile": {
                      "type": "RuntimeDefault"
                    }
                  },
                  "volumeMounts": [
                    {
                      "mountPath": "/emptydir",
                      "name": "empty-dir"
                    }
                  ]
                },
                {
                  "args": [
                    "-ec",
                    ". /opt/bitnami/scripts/airflow-env.sh\n. /opt/bitnami/scripts/libairflow.sh\n\ninfo \"Trying to connect to the database server\"\nairflow_wait_for_db_connection\ninfo \"Waiting for db migrations to be completed\"\nairflow_wait_for_db_migrations\ninfo \"Waiting for the admin user to exist\"\nairflow_wait_for_admin_user\n"
                  ],
                  "command": [
                    "/bin/bash"
                  ],
                  "env": [
                    {
                      "name": "BITNAMI_DEBUG",
                      "value": "false"
                    }
                  ],
                  "image": "docker.io/bitnami/airflow:3.0.5-debian-12-r0",
                  "imagePullPolicy": "IfNotPresent",
                  "name": "wait-for-db-migrations",
                  "resources": {
                    "limits": {
                      "cpu": "375m",
                      "ephemeral-storage": "2Gi",
                      "memory": "384Mi"
                    },
                    "requests": {
                      "cpu": "250m",
                      "ephemeral-storage": "50Mi",
                      "memory": "256Mi"
                    }
                  },
                  "securityContext": {
                    "allowPrivilegeEscalation": false,
                    "capabilities": {
                      "add": [],
                      "drop": [
                        "ALL"
                      ]
                    },
                    "privileged": false,
                    "readOnlyRootFilesystem": true,
                    "runAsGroup": 1001,
                    "runAsNonRoot": true,
                    "runAsUser": 1001,
                    "seLinuxOptions": {},
                    "seccompProfile": {
                      "type": "RuntimeDefault"
                    }
                  },
                  "volumeMounts": [
                    {
                      "mountPath": "/tmp",
                      "name": "empty-dir",
                      "subPath": "tmp-dir"
                    },
                    {
                      "mountPath": "/opt/bitnami/airflow/logs",
                      "name": "empty-dir",
                      "subPath": "app-logs-dir"
                    },
                    {
                      "mountPath": "/opt/bitnami/airflow/tmp",
                      "name": "empty-dir",
                      "subPath": "app-tmp-dir"
                    },
                    {
                      "mountPath": "/opt/bitnami/airflow/airflow.db",
                      "name": "empty-dir",
                      "subPath": "app-base-dir/airflow.db"
                    },
                    {
                      "mountPath": "/opt/bitnami/airflow/airflow.cfg",
                      "name": "empty-dir",
                      "subPath": "app-base-dir/airflow.cfg"
                    }
                  ]
                }
              ],
              "securityContext": {
                "fsGroup": 1001,
                "fsGroupChangePolicy": "Always",
                "supplementalGroups": [],
                "sysctls": []
              },
              "serviceAccountName": "airflow",
              "volumes": [
                {
                  "emptyDir": {},
                  "name": "empty-dir"
                },
                {
                  "configMap": {
                    "name": "airflow",
                    "optional": true
                  },
                  "name": "configuration"
                },
                {
                  "name": "airflow-secrets",
                  "projected": {
                    "sources": [
                      {
                        "secret": {
                          "name": "airflow"
                        }
                      },
                      {
                        "secret": {
                          "name": "airflow-postgresql"
                        }
                      },
                      {
                        "secret": {
                          "name": "airflow-redis"
                        }
                      }
                    ]
                  }
                }
              ]
            }
          },
          "updateStrategy": {
            "rollingUpdate": {},
            "type": "RollingUpdate"
          },
          "volumeClaimTemplates": [
            {
              "metadata": {
                "name": "logs"
              },
              "spec": {
                "accessModes": [
                  "ReadWriteOnce"
                ],
                "resources": {
                  "requests": {
                    "storage": "8Gi"
                  }
                }
              }
            }
          ]
        }
      },
      "component": {
        "version": "apps/v1",
        "kind": "StatefulSet",
        "schema": ""
      }
    },
    {
      "id": "c35c6c89-0534-4caf-992b-eaeb963b71ed",
      "schemaVersion": "components.meshery.io/v1beta1",
      "version": "v1.0.0",
      "displayName": "airflow-worker",
      "description": "",
      "format": "",
      "model": {
        "id": "b3f5bc0d-30f7-607d-6c73-784ddde6cad8",
        "schemaVersion": "models.meshery.io/v1beta1",
        "version": "v1.0.0",
        "name": "kubernetes",
        "displayName": "Kubernetes",
        "status": "enabled",
        "registrant": {
          "id": "5bc80e3c-5d43-9eb4-d16c-78a2769247a6",
          "name": "Github",
          "credential_id": "00000000-0000-0000-0000-000000000000",
          "type": "registry",
          "sub_type": "",
          "kind": "github",
          "status": "registered",
          "user_id": "00000000-0000-0000-0000-000000000000",
          "created_at": "2025-09-17T17:32:17.981302672Z",
          "updated_at": "2025-09-17T17:32:17.981302672Z",
          "deleted_at": "0001-01-01T00:00:00Z",
          "schemaVersion": ""
        },
        "connection_id": "5bc80e3c-5d43-9eb4-d16c-78a2769247a6",
        "category": {
          "id": "9ca27d0d-66ce-42a9-8c85-6236563f2ddb",
          "name": "Orchestration \u0026 Management"
        },
        "subCategory": "Scheduling \u0026 Orchestration",
        "metadata": {
          "isAnnotation": false,
          "primaryColor": "#326CE5",
          "secondaryColor": "#7aa1f0",
          "shape": "circle",
          "styleOverrides": "",
          "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/kubernetes-color.svg",
          "svgComplete": "",
          "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/kubernetes-white.svg"
        },
        "model": {
          "version": "v1.32.0-alpha.3"
        },
        "components_count": 0,
        "relationships_count": 0,
        "components": null,
        "relationships": null
      },
      "styles": {
        "background-opacity": 0.2,
        "height": 15,
        "primaryColor": "#326CE5",
        "secondaryColor": "#7aa1f0",
        "shape": "round-rectangle",
        "svgColor": "ui/public/static/img/meshmodels/kubernetes/color/statefulset-color.svg",
        "svgComplete": "ui/public/static/img/meshmodels/kubernetes/complete/statefulset-complete.svg",
        "svgWhite": "ui/public/static/img/meshmodels/kubernetes/white/statefulset-white.svg",
        "width": 15,
        "x": 12,
        "y": 20
      },
      "capabilities": [],
      "status": "enabled",
      "metadata": {
        "configurationUISchema": "",
        "genealogy": "parent",
        "instanceDetails": null,
        "isAnnotation": false,
        "isNamespaced": true,
        "published": false,
        "source_uri": "git://github.com/kubernetes/kubernetes/master/api/openapi-spec/v3"
      },
      "configuration": {
        "metadata": {
          "labels": {
            "app.kubernetes.io/component": "worker",
            "app.kubernetes.io/instance": "airflow",
            "app.kubernetes.io/managed-by": "Helm",
            "app.kubernetes.io/name": "airflow",
            "app.kubernetes.io/version": "3.0.5",
            "helm.sh/chart": "airflow-25.0.2"
          },
          "name": "airflow-worker",
          "namespace": "default"
        },
        "spec": {
          "podManagementPolicy": "OrderedReady",
          "replicas": 1,
          "selector": {
            "matchLabels": {
              "app.kubernetes.io/component": "worker",
              "app.kubernetes.io/instance": "airflow",
              "app.kubernetes.io/name": "airflow"
            }
          },
          "serviceName": "airflow-worker-hl",
          "template": {
            "metadata": {
              "annotations": {
                "checksum/configmap": "e72b2b3a9039fec4ff7ee6dde04b2bfd1e24a38615c29d808d89fb22a99c85bd",
                "checksum/webserver-configmap": "8186f2a1ba228117047439cae78c6522fe09557491e6993dc4779da0d7c11f1a"
              },
              "labels": {
                "app.kubernetes.io/component": "worker",
                "app.kubernetes.io/instance": "airflow",
                "app.kubernetes.io/managed-by": "Helm",
                "app.kubernetes.io/name": "airflow",
                "app.kubernetes.io/version": "3.0.5",
                "helm.sh/chart": "airflow-25.0.2"
              }
            },
            "spec": {
              "affinity": {
                "nodeAffinity": null,
                "podAffinity": null,
                "podAntiAffinity": {
                  "preferredDuringSchedulingIgnoredDuringExecution": [
                    {
                      "podAffinityTerm": {
                        "labelSelector": {
                          "matchLabels": {
                            "app.kubernetes.io/component": "worker",
                            "app.kubernetes.io/instance": "airflow",
                            "app.kubernetes.io/name": "airflow"
                          }
                        },
                        "topologyKey": "kubernetes.io/hostname"
                      },
                      "weight": 1
                    }
                  ]
                }
              },
              "automountServiceAccountToken": false,
              "containers": [
                {
                  "env": [
                    {
                      "name": "BITNAMI_DEBUG",
                      "value": "false"
                    },
                    {
                      "name": "AIRFLOW__CORE__FERNET_KEY_CMD",
                      "value": "cat /opt/bitnami/airflow/secrets/airflow-fernet-key"
                    },
                    {
                      "name": "AIRFLOW__API__SECRET_KEY_CMD",
                      "value": "cat /opt/bitnami/airflow/secrets/airflow-secret-key"
                    },
                    {
                      "name": "AIRFLOW__API_AUTH__JWT_SECRET_CMD",
                      "value": "cat /opt/bitnami/airflow/secrets/airflow-jwt-secret-key"
                    },
                    {
                      "name": "AIRFLOW_COMPONENT_TYPE",
                      "value": "worker"
                    },
                    {
                      "name": "AIRFLOW_EXECUTOR",
                      "value": "CeleryExecutor"
                    },
                    {
                      "name": "PYTHONPYCACHEPREFIX",
                      "value": "/opt/bitnami/airflow/venv/tmp"
                    },
                    {
                      "name": "REDIS_HOST",
                      "value": "airflow-redis-master"
                    },
                    {
                      "name": "REDIS_PORT_NUMBER",
                      "value": "6379"
                    }
                  ],
                  "image": "docker.io/bitnami/airflow:3.0.5-debian-12-r0",
                  "imagePullPolicy": "IfNotPresent",
                  "livenessProbe": {
                    "failureThreshold": 6,
                    "initialDelaySeconds": 180,
                    "periodSeconds": 20,
                    "successThreshold": 1,
                    "tcpSocket": {
                      "port": "worker"
                    },
                    "timeoutSeconds": 5
                  },
                  "name": "airflow-worker",
                  "ports": [
                    {
                      "containerPort": 8793,
                      "name": "worker"
                    }
                  ],
                  "readinessProbe": {
                    "exec": {
                      "command": [
                        "sh",
                        "-c",
                        ". /opt/bitnami/airflow/venv/bin/activate \u0026\u0026 \\\nCONNECTION_CHECK_MAX_COUNT=0 python -m celery --app airflow.providers.celery.executors.celery_executor.app inspect ping -d celery@$(hostname)\n"
                      ]
                    },
                    "failureThreshold": 6,
                    "initialDelaySeconds": 30,
                    "periodSeconds": 10,
                    "successThreshold": 1,
                    "timeoutSeconds": 5
                  },
                  "resources": {
                    "limits": {
                      "cpu": "1.5",
                      "ephemeral-storage": "2Gi",
                      "memory": "3072Mi"
                    },
                    "requests": {
                      "cpu": "1.0",
                      "ephemeral-storage": "50Mi",
                      "memory": "2048Mi"
                    }
                  },
                  "securityContext": {
                    "allowPrivilegeEscalation": false,
                    "capabilities": {
                      "drop": [
                        "ALL"
                      ]
                    },
                    "privileged": false,
                    "readOnlyRootFilesystem": true,
                    "runAsGroup": 1001,
                    "runAsNonRoot": true,
                    "runAsUser": 1001,
                    "seLinuxOptions": {},
                    "seccompProfile": {
                      "type": "RuntimeDefault"
                    }
                  },
                  "volumeMounts": [
                    {
                      "mountPath": "/tmp",
                      "name": "empty-dir",
                      "subPath": "tmp-dir"
                    },
                    {
                      "mountPath": "/opt/bitnami/airflow/nss-wrapper",
                      "name": "empty-dir",
                      "subPath": "app-nss-wrapper-dir"
                    },
                    {
                      "mountPath": "/opt/bitnami/airflow/logs",
                      "name": "empty-dir",
                      "subPath": "app-logs-dir"
                    },
                    {
                      "mountPath": "/opt/bitnami/airflow/tmp",
                      "name": "empty-dir",
                      "subPath": "app-tmp-dir"
                    },
                    {
                      "mountPath": "/opt/bitnami/airflow/airflow.db",
                      "name": "empty-dir",
                      "subPath": "app-base-dir/airflow.db"
                    },
                    {
                      "mountPath": "/opt/bitnami/airflow/airflow.cfg",
                      "name": "empty-dir",
                      "subPath": "app-base-dir/airflow.cfg"
                    },
                    {
                      "mountPath": "/opt/bitnami/airflow/config/airflow_local_settings.py",
                      "name": "empty-dir",
                      "subPath": "app-conf-dir/airflow_local_settings.py"
                    },
                    {
                      "mountPath": "/opt/bitnami/airflow/webserver_config.py",
                      "name": "empty-dir",
                      "subPath": "app-base-dir/webserver_config.py"
                    },
                    {
                      "mountPath": "/opt/bitnami/airflow/venv",
                      "name": "empty-dir",
                      "subPath": "venv-base-dir"
                    },
                    {
                      "mountPath": "/opt/bitnami/airflow/secrets",
                      "name": "airflow-secrets"
                    }
                  ]
                }
              ],
              "initContainers": [
                {
                  "args": [
                    "-ec",
                    ". /opt/bitnami/scripts/libairflow.sh\n\nmkdir -p /emptydir/app-base-dir /emptydir/app-conf-dir\n\n# Copy the configuration files to the writable directory\ncp /opt/bitnami/airflow/airflow.cfg /emptydir/app-base-dir/airflow.cfg\n\n# Apply changes affecting credentials\nexport AIRFLOW_CONF_FILE=\"/emptydir/app-base-dir/airflow.cfg\"\nexport AIRFLOW_DATABASE_PASSWORD=\"$(\u003c $AIRFLOW_DATABASE_PASSWORD_FILE)\"\ndb_user=\"$(airflow_encode_url \"$AIRFLOW_DATABASE_USERNAME\")\"\ndb_password=\"$(airflow_encode_url \"$AIRFLOW_DATABASE_PASSWORD\")\"\nairflow_conf_set \"database\" \"sql_alchemy_conn\" \"postgresql+psycopg2://${db_user}:${db_password}@${AIRFLOW_DATABASE_HOST}:${AIRFLOW_DATABASE_PORT_NUMBER}/${AIRFLOW_DATABASE_NAME}\"\nexport REDIS_PASSWORD=\"$(\u003c $REDIS_PASSWORD_FILE)\"\nredis_credentials=\":$(airflow_encode_url \"$REDIS_PASSWORD\")\"\n[[ -n \"$REDIS_USER\" ]] \u0026\u0026 redis_credentials=\"$(airflow_encode_url \"$REDIS_USER\")$redis_credentials\"\nairflow_conf_set \"celery\" \"result_backend\" \"db+postgresql://${db_user}:${db_password}@${AIRFLOW_DATABASE_HOST}:${AIRFLOW_DATABASE_PORT_NUMBER}/${AIRFLOW_DATABASE_NAME}\"\nairflow_conf_set \"celery\" \"broker_url\" \"redis://${redis_credentials}@${REDIS_HOST}:${REDIS_PORT_NUMBER}/${REDIS_DATABASE}\"\n# Configure authentication backend\nairflow_conf_set \"core\" \"auth_manager\" \"airflow.providers.fab.auth_manager.fab_auth_manager.FabAuthManager\"\ninfo \"Airflow configuration ready\"\n\nif [[ -f \"/opt/bitnami/airflow/config/airflow_local_settings.py\" ]]; then\n    cp /opt/bitnami/airflow/config/airflow_local_settings.py /emptydir/app-conf-dir/airflow_local_settings.py\nelse\n    touch /emptydir/app-conf-dir/airflow_local_settings.py\nfi\n\n# HACK: When testing the db connection it creates an empty airflow.db file at the\n# application root\ntouch /emptydir/app-base-dir/airflow.db\n"
                  ],
                  "command": [
                    "/bin/bash"
                  ],
                  "env": [
                    {
                      "name": "BITNAMI_DEBUG",
                      "value": "false"
                    },
                    {
                      "name": "AIRFLOW_DATABASE_NAME",
                      "value": "bitnami_airflow"
                    },
                    {
                      "name": "AIRFLOW_DATABASE_USERNAME",
                      "value": "bn_airflow"
                    },
                    {
                      "name": "AIRFLOW_DATABASE_PASSWORD_FILE",
                      "value": "/opt/bitnami/airflow/secrets/password"
                    },
                    {
                      "name": "AIRFLOW_DATABASE_HOST",
                      "value": "airflow-postgresql"
                    },
                    {
                      "name": "AIRFLOW_DATABASE_PORT_NUMBER",
                      "value": "5432"
                    },
                    {
                      "name": "REDIS_HOST",
                      "value": "airflow-redis-master"
                    },
                    {
                      "name": "REDIS_PORT_NUMBER",
                      "value": "6379"
                    },
                    {
                      "name": "REDIS_PASSWORD_FILE",
                      "value": "/opt/bitnami/airflow/secrets/redis-password"
                    }
                  ],
                  "image": "docker.io/bitnami/airflow:3.0.5-debian-12-r0",
                  "imagePullPolicy": "IfNotPresent",
                  "name": "prepare-config",
                  "resources": {
                    "limits": {
                      "cpu": "150m",
                      "ephemeral-storage": "2Gi",
                      "memory": "192Mi"
                    },
                    "requests": {
                      "cpu": "100m",
                      "ephemeral-storage": "50Mi",
                      "memory": "128Mi"
                    }
                  },
                  "securityContext": {
                    "allowPrivilegeEscalation": false,
                    "capabilities": {
                      "add": [],
                      "drop": [
                        "ALL"
                      ]
                    },
                    "privileged": false,
                    "readOnlyRootFilesystem": true,
                    "runAsGroup": 1001,
                    "runAsNonRoot": true,
                    "runAsUser": 1001,
                    "seLinuxOptions": {},
                    "seccompProfile": {
                      "type": "RuntimeDefault"
                    }
                  },
                  "volumeMounts": [
                    {
                      "mountPath": "/emptydir",
                      "name": "empty-dir"
                    },
                    {
                      "mountPath": "/opt/bitnami/airflow/airflow.cfg",
                      "name": "configuration",
                      "subPath": "airflow.cfg"
                    },
                    {
                      "mountPath": "/opt/bitnami/airflow/config/airflow_local_settings.py",
                      "name": "configuration",
                      "subPath": "airflow_local_settings.py"
                    },
                    {
                      "mountPath": "/opt/bitnami/airflow/secrets",
                      "name": "airflow-secrets"
                    }
                  ]
                },
                {
                  "args": [
                    "-ec",
                    ". /opt/bitnami/scripts/libairflow.sh\n\n# Copy the configuration files to the writable directory\ncp /opt/bitnami/airflow/webserver_config.py /emptydir/app-base-dir/webserver_config.py\ninfo \"Airflow webserver configuration ready\"\n"
                  ],
                  "command": [
                    "/bin/bash"
                  ],
                  "env": [
                    {
                      "name": "BITNAMI_DEBUG",
                      "value": "false"
                    }
                  ],
                  "image": "docker.io/bitnami/airflow:3.0.5-debian-12-r0",
                  "imagePullPolicy": "IfNotPresent",
                  "name": "prepare-web-config",
                  "resources": {
                    "limits": {
                      "cpu": "150m",
                      "ephemeral-storage": "2Gi",
                      "memory": "192Mi"
                    },
                    "requests": {
                      "cpu": "100m",
                      "ephemeral-storage": "50Mi",
                      "memory": "128Mi"
                    }
                  },
                  "securityContext": {
                    "allowPrivilegeEscalation": false,
                    "capabilities": {
                      "add": [],
                      "drop": [
                        "ALL"
                      ]
                    },
                    "privileged": false,
                    "readOnlyRootFilesystem": true,
                    "runAsGroup": 1001,
                    "runAsNonRoot": true,
                    "runAsUser": 1001,
                    "seLinuxOptions": {},
                    "seccompProfile": {
                      "type": "RuntimeDefault"
                    }
                  },
                  "volumeMounts": [
                    {
                      "mountPath": "/emptydir",
                      "name": "empty-dir"
                    },
                    {
                      "mountPath": "/opt/bitnami/airflow/webserver_config.py",
                      "name": "webserver-configuration",
                      "subPath": "webserver_config.py"
                    },
                    {
                      "mountPath": "/opt/bitnami/airflow/secrets",
                      "name": "airflow-secrets"
                    }
                  ]
                },
                {
                  "args": [
                    "-ec",
                    ". /opt/bitnami/scripts/libairflow.sh\n\n# Copy the configuration files to the writable directory\ncp -r --preserve=mode /opt/bitnami/airflow/venv /emptydir/venv-base-dir\n\ninfo \"Copy operation completed\"\n"
                  ],
                  "command": [
                    "/bin/bash"
                  ],
                  "env": [
                    {
                      "name": "BITNAMI_DEBUG",
                      "value": "false"
                    }
                  ],
                  "image": "docker.io/bitnami/airflow:3.0.5-debian-12-r0",
                  "imagePullPolicy": "IfNotPresent",
                  "name": "prepare-venv",
                  "resources": {
                    "limits": {
                      "cpu": "150m",
                      "ephemeral-storage": "2Gi",
                      "memory": "192Mi"
                    },
                    "requests": {
                      "cpu": "100m",
                      "ephemeral-storage": "50Mi",
                      "memory": "128Mi"
                    }
                  },
                  "securityContext": {
                    "allowPrivilegeEscalation": false,
                    "capabilities": {
                      "add": [],
                      "drop": [
                        "ALL"
                      ]
                    },
                    "privileged": false,
                    "readOnlyRootFilesystem": true,
                    "runAsGroup": 1001,
                    "runAsNonRoot": true,
                    "runAsUser": 1001,
                    "seLinuxOptions": {},
                    "seccompProfile": {
                      "type": "RuntimeDefault"
                    }
                  },
                  "volumeMounts": [
                    {
                      "mountPath": "/emptydir",
                      "name": "empty-dir"
                    }
                  ]
                },
                {
                  "args": [
                    "-ec",
                    ". /opt/bitnami/scripts/airflow-env.sh\n. /opt/bitnami/scripts/libairflow.sh\n\ninfo \"Trying to connect to the database server\"\nairflow_wait_for_db_connection\ninfo \"Waiting for db migrations to be completed\"\nairflow_wait_for_db_migrations\ninfo \"Waiting for the admin user to exist\"\nairflow_wait_for_admin_user\n"
                  ],
                  "command": [
                    "/bin/bash"
                  ],
                  "env": [
                    {
                      "name": "BITNAMI_DEBUG",
                      "value": "false"
                    }
                  ],
                  "image": "docker.io/bitnami/airflow:3.0.5-debian-12-r0",
                  "imagePullPolicy": "IfNotPresent",
                  "name": "wait-for-db-migrations",
                  "resources": {
                    "limits": {
                      "cpu": "375m",
                      "ephemeral-storage": "2Gi",
                      "memory": "384Mi"
                    },
                    "requests": {
                      "cpu": "250m",
                      "ephemeral-storage": "50Mi",
                      "memory": "256Mi"
                    }
                  },
                  "securityContext": {
                    "allowPrivilegeEscalation": false,
                    "capabilities": {
                      "add": [],
                      "drop": [
                        "ALL"
                      ]
                    },
                    "privileged": false,
                    "readOnlyRootFilesystem": true,
                    "runAsGroup": 1001,
                    "runAsNonRoot": true,
                    "runAsUser": 1001,
                    "seLinuxOptions": {},
                    "seccompProfile": {
                      "type": "RuntimeDefault"
                    }
                  },
                  "volumeMounts": [
                    {
                      "mountPath": "/tmp",
                      "name": "empty-dir",
                      "subPath": "tmp-dir"
                    },
                    {
                      "mountPath": "/opt/bitnami/airflow/logs",
                      "name": "empty-dir",
                      "subPath": "app-logs-dir"
                    },
                    {
                      "mountPath": "/opt/bitnami/airflow/tmp",
                      "name": "empty-dir",
                      "subPath": "app-tmp-dir"
                    },
                    {
                      "mountPath": "/opt/bitnami/airflow/airflow.db",
                      "name": "empty-dir",
                      "subPath": "app-base-dir/airflow.db"
                    },
                    {
                      "mountPath": "/opt/bitnami/airflow/airflow.cfg",
                      "name": "empty-dir",
                      "subPath": "app-base-dir/airflow.cfg"
                    }
                  ]
                }
              ],
              "securityContext": {
                "fsGroup": 1001,
                "fsGroupChangePolicy": "Always",
                "supplementalGroups": [],
                "sysctls": []
              },
              "serviceAccountName": "airflow",
              "volumes": [
                {
                  "emptyDir": {},
                  "name": "empty-dir"
                },
                {
                  "configMap": {
                    "name": "airflow",
                    "optional": true
                  },
                  "name": "configuration"
                },
                {
                  "configMap": {
                    "name": "airflow-web"
                  },
                  "name": "webserver-configuration"
                },
                {
                  "name": "airflow-secrets",
                  "projected": {
                    "sources": [
                      {
                        "secret": {
                          "name": "airflow"
                        }
                      },
                      {
                        "secret": {
                          "name": "airflow-postgresql"
                        }
                      },
                      {
                        "secret": {
                          "name": "airflow-redis"
                        }
                      }
                    ]
                  }
                }
              ]
            }
          },
          "updateStrategy": {
            "rollingUpdate": {},
            "type": "RollingUpdate"
          }
        }
      },
      "component": {
        "version": "apps/v1",
        "kind": "StatefulSet",
        "schema": ""
      }
    }
  ],
  "relationships": null
}