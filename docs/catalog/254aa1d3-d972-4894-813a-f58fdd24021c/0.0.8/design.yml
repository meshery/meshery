name: 'Hashicorp Vault '
version: 0.0.8
services:
  sidecar-injector:
    annotations: {}
    apiVersion: ""
    dependsOn:
    - vault-agent-injector-gwetu
    id: null
    isAnnotation: null
    labels: {}
    model: meshery-core
    name: sidecar-injector
    namespace: ""
    settings: {}
    traits:
      meshmap:
        edges: []
        elementType: FIELD_REF_NODE
        fieldRefData:
          elementType: FIELD_REF_NODE
          fieldPath: spec.template.spec.containers[0]
          jsonSchemaPath: properties.spec.allOf[0].properties.template.allOf[0].properties.spec.allOf[0].properties.containers.items.allOf[0]
        id: 22d4d8f0-e0bc-4791-bc41-62445a9f8f05
        label: spec.template.spec.containers[0]
        meshmodel-data:
          category:
            metadata: null
            name: Orchestration & Management
          components: null
          description: ""
          displayName: Meshery Core
          hostID: 26e64aa8-2d86-57bd-92b3-2a73160d27b4
          id: 71af0d59-f11b-5151-924a-f9f805edb3df
          metadata:
            isAnnotation: false
            subCategory: App Definition and Development
            svgColor: ui/public/static/img/meshmodels/meshery-core/color/meshery-core-color.svg
            svgComplete: ""
            svgWhite: ui/public/static/img/meshmodels/meshery-core/color/meshery-core-color.svg
          model:
            version: 0.7.2
          name: meshery-core
          registrant:
            hostname: artifacthub
          relationships: null
          schemaVersion: models.meshery.io/v1beta1
          status: enabled
          subCategory: App Definition and Development
          version: v1.0.0
        meshmodel-metadata:
          capabilities: |-
            {
              "designer": {
                "capabilities": {
                  "config": true,
                  "label": false,
                  "policy": false,
                  "relationships": true,
                  "json-schema": false,
                  "permissions": false,
                  "workflow": false,
                  "gitops": false,
                  "history": false
                },
                "supportsCompoundDragAndDrop": false,
                "edit": {
                  "config": true,
                  "copy": false,
                  "delete": true,
                  "duplicate": false,
                  "reset-styles": false,
                  "resolve": false,
                  "lock": false,
                  "shape": {
                    "convert-shape": true
                  },
                  "style": true
                },
                "label": {
                  "edit": false,
                  "show": true,
                  "sync-with-config-property": "name"
                }
              }
            }
          defaultData: ""
          genealogy: ""
          hasInvalidSchema: true
          isAnnotation: true
          primaryColor: '#326CE5'
          secondaryColor: '#00D3A9'
          shape: circle
          shapePolygonPoints: ""
          status: enabled
          styleOverrides:
            z-index: 14
          styles: ""
          subCategory: ""
          svgColor: ui/public/static/img/meshmodels/meshery-core/color/container-color.svg
          svgComplete: ""
          svgWhite: ui/public/static/img/meshmodels/meshery-core/white/container-white.svg
        parent: e66c779d-a534-4a06-91f8-eaaf43883af0
        position:
          posX: -95
          posY: -108.5
        whiteboardData: {}
    type: Container
    version: ""
  vault-agent-injector-binding:
    annotations: {}
    apiVersion: rbac.authorization.k8s.io/v1
    dependsOn: []
    id: null
    isAnnotation: null
    labels:
      app.kubernetes.io/instance: vault
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: vault-agent-injector
    model: kubernetes
    name: vault-agent-injector-binding
    namespace: ""
    settings:
      role Ref:
        api Group: rbac.authorization.k8s.io
        kind: ClusterRole
        name: vault-agent-injector-clusterrole
      subjects:
      - kind: ServiceAccount
        name: vault-agent-injector
        namespace: default
    traits:
      meshmap:
        edges: []
        fieldRefData: {}
        id: aebe235e-2f11-4ea3-9e7e-ea50b26a5966
        meshmodel-metadata:
          capabilities: ""
          defaultData: ""
          genealogy: ""
          isAnnotation: false
          isCustomResource: false
          isModelAnnotation: "FALSE"
          isNamespaced: false
          logoURL: Created by Meshery Authors
          model: kubernetes
          modelDisplayName: Kubernetes
          primaryColor: '#326CE5'
          secondaryColor: '#7aa1f0'
          shape: round-rectangle
          shapePolygonPoints: ""
          status: enabled
          styleOverrides:
            height: 25px
            width: 25px
            x: "7"
            "y": "7"
            z-index: 10
          styles: '{"height":"25px","width":"25px","x":"7", "y":"7"}'
          subCategory: ""
          svgColor: ui/public/static/img/meshmodels/kubernetes/color/clusterrolebinding-color.svg
          svgComplete: ""
          svgWhite: ui/public/static/img/meshmodels/kubernetes/white/clusterrolebinding-white.svg
        position:
          posX: -42.15858269361849
          posY: -51.299313610887026
        whiteboardData:
          style:
            height: 10.5
            width: 10.5
            z-index: 1000
    type: ClusterRoleBinding
    version: ""
  vault-agent-injector-cfg:
    annotations: {}
    apiVersion: admissionregistration.k8s.io/v1
    dependsOn: []
    id: null
    isAnnotation: null
    labels:
      app.kubernetes.io/instance: vault
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: vault-agent-injector
    model: kubernetes
    name: vault-agent-injector-cfg
    namespace: ""
    settings:
      webhooks:
      - admission Review Versions:
        - v1
        - v1beta1
        client Config:
          CA Bundle: ""
          service:
            name: vault-agent-injector-svc
            namespace: default
            path: /mutate
        failure Policy: Ignore
        match Policy: Exact
        name: vault.hashicorp.com
        object Selector:
          match Expressions:
          - key: app.kubernetes.io/name
            operator: NotIn
            values:
            - vault-agent-injector
        rules:
        - api Groups:
          - ""
          api Versions:
          - v1
          operations:
          - CREATE
          resources:
          - pods
          scope: Namespaced
        side Effects: None
        timeout Seconds: 30
    traits:
      meshmap:
        edges: []
        fieldRefData: {}
        id: a0f85a20-3750-4779-99e7-8a69f237341e
        meshmodel-metadata:
          capabilities: ""
          defaultData: ""
          genealogy: ""
          isAnnotation: false
          isCustomResource: false
          isNamespaced: false
          logoURL: https://github.com/cncf/artwork/blob/master/projects/kubernetes/icon/white/kubernetes-icon-white.svg
          model: kubernetes
          modelDisplayName: Kubernetes
          primaryColor: '#326CE5'
          secondaryColor: '#7aa1f0'
          shape: round-hexagon
          shapePolygonPoints: ""
          status: enabled
          styleOverrides:
            z-index: 6
          styles: ""
          subCategory: ""
          svgColor: ui/public/static/img/meshmodels/kubernetes/color/mutatingwebhookconfiguration-color.svg
          svgComplete: ""
          svgWhite: ui/public/static/img/meshmodels/kubernetes/white/mutatingwebhookconfiguration-white.svg
        position:
          posX: 4
          posY: 51.5
        whiteboardData:
          style: {}
    type: MutatingWebhookConfiguration
    version: ""
  vault-agent-injector-clusterrole:
    annotations: {}
    apiVersion: rbac.authorization.k8s.io/v1
    dependsOn: []
    id: null
    isAnnotation: null
    labels:
      app.kubernetes.io/instance: vault
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: vault-agent-injector
    model: kubernetes
    name: vault-agent-injector-clusterrole
    namespace: ""
    settings:
      rules:
      - api Groups:
        - admissionregistration.k8s.io
        resources:
        - mutatingwebhookconfigurations
        verbs:
        - get
        - list
        - watch
        - patch
    traits:
      meshmap:
        edges:
        - data:
            id: 7dac31fa-669b-4897-b09b-a1c46b114782
            metadata:
              binded_by: aebe235e-2f11-4ea3-9e7e-ea50b26a5966
            source: 96e1ab0f-61a8-4ded-a551-77c9d268c031
            subType: Permission
            target: 25ab4fc8-d910-49ca-89a7-cb5580b462be
          style:
            control-point-distances: null
            control-point-weights: "0.5"
            curve-style: bezier
            haystack-radius: "0"
            line-color: rgb(153,153,153)
            line-style: dotted
            opacity: "1"
            segment-distances: 20px
            segment-weights: "0.5"
            target-arrow-shape: vee
            taxi-direction: auto
            taxi-turn: 50%
            taxi-turn-min-distance: 10px
            width: 1.5px
        fieldRefData: {}
        id: 96e1ab0f-61a8-4ded-a551-77c9d268c031
        meshmodel-metadata:
          capabilities: ""
          defaultData: ""
          genealogy: ""
          isAnnotation: false
          isCustomResource: false
          isModelAnnotation: "FALSE"
          isNamespaced: false
          logoURL: Created by Meshery Authors
          model: kubernetes
          modelDisplayName: Kubernetes
          primaryColor: '#326CE5'
          secondaryColor: '#7aa1f0'
          shape: round-rectangle
          shapePolygonPoints: ""
          status: enabled
          styleOverrides:
            height: 22px
            width: 22px
            x: "8.5"
            "y": "7.5"
            z-index: 9
          styles: '{"height":"22px", "width":"22px", "x":"8.5", "y":"7.5"}'
          subCategory: ""
          svgColor: ui/public/static/img/meshmodels/kubernetes/color/clusterrole-color.svg
          svgComplete: ""
          svgWhite: ui/public/static/img/meshmodels/kubernetes/white/clusterrole-white.svg
        position:
          posX: -176.60475827344877
          posY: 12.036854738785417
        whiteboardData:
          style: {}
    type: ClusterRole
    version: ""
  vault-agent-injector-gwetu:
    annotations: {}
    apiVersion: apps/v1
    dependsOn: []
    id: null
    isAnnotation: null
    labels:
      app.kubernetes.io/instance: vault
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: vault-agent-injector
      component: webhook
    model: kubernetes
    name: vault-agent-injector
    namespace: default
    settings:
      spec:
        replicas: 1
        selector:
          match Labels:
            app.kubernetes.io/instance: vault
            app.kubernetes.io/name: vault-agent-injector
            component: webhook
        template:
          metadata:
            labels:
              app.kubernetes.io/instance: vault
              app.kubernetes.io/name: vault-agent-injector
              component: webhook
          spec:
            affinity:
              pod Anti Affinity:
                required During Scheduling Ignored During Execution:
                - label Selector:
                    match Labels:
                      app.kubernetes.io/instance: vault
                      app.kubernetes.io/name: vault-agent-injector
                      component: webhook
                  topology Key: kubernetes.io/hostname
            containers:
            - args:
              - agent-inject
              - 2>&1
              command: []
              env:
              - name: AGENT_INJECT_LISTEN
                value: :8080
              - name: AGENT_INJECT_LOG_LEVEL
                value: info
              - name: AGENT_INJECT_VAULT_ADDR
                value: http://vault.default.svc:8200
              - name: AGENT_INJECT_VAULT_AUTH_PATH
                value: auth/kubernetes
              - name: AGENT_INJECT_VAULT_IMAGE
                value: hashicorp/vault:1.17.2
              - name: AGENT_INJECT_TLS_AUTO
                value: vault-agent-injector-cfg
              - name: AGENT_INJECT_TLS_AUTO_HOSTS
                value: vault-agent-injector-svc,vault-agent-injector-svc.default,vault-agent-injector-svc.default.svc
              - name: AGENT_INJECT_LOG_FORMAT
                value: standard
              - name: AGENT_INJECT_REVOKE_ON_SHUTDOWN
                value: "false"
              - name: AGENT_INJECT_CPU_REQUEST
                value: 250m
              - name: AGENT_INJECT_CPU_LIMIT
                value: 500m
              - name: AGENT_INJECT_MEM_REQUEST
                value: 64Mi
              - name: AGENT_INJECT_MEM_LIMIT
                value: 128Mi
              - name: AGENT_INJECT_DEFAULT_TEMPLATE
                value: map
              - name: AGENT_INJECT_TEMPLATE_CONFIG_EXIT_ON_RETRY_FAILURE
                value: "true"
              - name: POD_NAME
                value From:
                  field Ref:
                    field Path: metadata.name
              env From: []
              image: hashicorp/vault-k8s:1.4.2
              image Pull Policy: IfNotPresent
              liveness Probe:
                failure Threshold: 2
                http Get:
                  path: /health/ready
                  port: 8080
                  scheme: HTTPS
                initial Delay Seconds: 5
                period Seconds: 2
                success Threshold: 1
                timeout Seconds: 5
              name: sidecar-injector
              ports: []
              readiness Probe:
                failure Threshold: 2
                http Get:
                  path: /health/ready
                  port: 8080
                  scheme: HTTPS
                initial Delay Seconds: 5
                period Seconds: 2
                success Threshold: 1
                timeout Seconds: 5
              security Context:
                allow Privilege Escalation: false
                capabilities:
                  drop:
                  - ALL
              startup Probe:
                failure Threshold: 12
                http Get:
                  path: /health/ready
                  port: 8080
                  scheme: HTTPS
                initial Delay Seconds: 5
                period Seconds: 5
                success Threshold: 1
                timeout Seconds: 5
              volume Devices: []
              volume Mounts: []
            host Network: false
            security Context:
              fs Group: 1000
              run As Group: 1000
              run As Non Root: true
              run As User: 100
            service Account Name: vault-agent-injector
    traits:
      meshmap:
        edges: []
        fieldRefData: {}
        id: e66c779d-a534-4a06-91f8-eaaf43883af0
        meshmodel-metadata:
          capabilities: |-
            {
              "fieldRefs": [
                {
                  "fieldPath": "spec.template.spec.containers",
                  "jsonSchemaPath": "properties.spec.allOf[0].properties.template.allOf[0].properties.spec.allOf[0].properties.containers.items.allOf[0]",
                  "component": {
                    "kind": "Container",
                    "model": "meshery-core"
                  },
                  "renderChildren": true
                },
                {
                  "fieldPath": "spec.template.spec.init Containers",
                  "jsonSchemaPath": "properties.spec.allOf[0].properties.template.allOf[0].properties.spec.allOf[0].properties.init Containers.items.allOf[0]",
                  "component": {
                    "kind": "Container",
                    "model": "meshery-core"
                  },
                  "renderChildren": true
                }
              ],
              "designer": {
                "edit": {
                  "shape": {
                    "convert-shape": false
                  }
                }
              }
            }
          defaultData: ""
          genealogy: parent
          isAnnotation: false
          isCustomResource: false
          isModelAnnotation: "FALSE"
          isNamespaced: true
          logoURL: Created by Meshery Authors
          model: kubernetes
          modelDisplayName: Kubernetes
          primaryColor: '#326CE5'
          secondaryColor: '#7aa1f0'
          shape: round-rectangle
          shapePolygonPoints: ""
          status: enabled
          styleOverrides:
            background-opacity: 0.5
            border-width: 2
            z-index: 8
          styles: '{"border-width":2,"background-opacity":0.5}'
          subCategory: ""
          svgColor: ui/public/static/img/meshmodels/kubernetes/color/deployment-color.svg
          svgComplete: ui/public/static/img/meshmodels/kubernetes/complete/deployment-complete.svg
          svgWhite: ui/public/static/img/meshmodels/kubernetes/white/deployment-white.svg
        position:
          posX: -95
          posY: -99.5
        whiteboardData:
          style: {}
    type: Deployment
    version: ""
  vault-agent-injector-lysst:
    annotations: {}
    apiVersion: v1
    dependsOn: []
    id: null
    isAnnotation: null
    labels:
      app.kubernetes.io/instance: vault
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: vault-agent-injector
    model: kubernetes
    name: vault-agent-injector
    namespace: default
    settings: {}
    traits:
      meshmap:
        edges:
        - data:
            id: 7dac31fa-669b-4897-b09b-a1c46b114782
            metadata:
              binded_by: aebe235e-2f11-4ea3-9e7e-ea50b26a5966
            source: 96e1ab0f-61a8-4ded-a551-77c9d268c031
            subType: Permission
            target: 25ab4fc8-d910-49ca-89a7-cb5580b462be
          style:
            control-point-distances: null
            control-point-weights: "0.5"
            curve-style: bezier
            haystack-radius: "0"
            line-color: rgb(153,153,153)
            line-style: dotted
            opacity: "1"
            segment-distances: 20px
            segment-weights: "0.5"
            target-arrow-shape: vee
            taxi-direction: auto
            taxi-turn: 50%
            taxi-turn-min-distance: 10px
            width: 1.5px
        fieldRefData: {}
        id: 25ab4fc8-d910-49ca-89a7-cb5580b462be
        meshmodel-metadata:
          capabilities: ""
          defaultData: ""
          genealogy: ""
          isAnnotation: false
          isCustomResource: false
          isModelAnnotation: "FALSE"
          isNamespaced: true
          logoURL: https://github.com/cncf/artwork/blob/master/projects/kubernetes/icon/white/kubernetes-icon-white.svg
          model: kubernetes
          modelDisplayName: Kubernetes
          primaryColor: '#326CE5'
          secondaryColor: '#7aa1f0'
          shape: bottom-round-rectangle
          shapePolygonPoints: ""
          status: enabled
          styleOverrides:
            z-index: 7
          styles: ""
          subCategory: ""
          svgColor: ui/public/static/img/meshmodels/kubernetes/color/serviceaccount-color.svg
          svgComplete: ""
          svgWhite: ui/public/static/img/meshmodels/kubernetes/white/serviceaccount-white.svg
        position:
          posX: 92
          posY: -114.5
        whiteboardData:
          style: {}
    type: ServiceAccount
    version: ""
  vault-agent-injector-svc:
    annotations: {}
    apiVersion: v1
    dependsOn: []
    id: null
    isAnnotation: null
    labels:
      app.kubernetes.io/instance: vault
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: vault-agent-injector
    model: kubernetes
    name: vault-agent-injector-svc
    namespace: default
    settings:
      spec:
        ports:
        - name: https
          port: 443
          target Port: 8080
        selector:
          app.kubernetes.io/instance: vault
          app.kubernetes.io/name: vault-agent-injector
          component: webhook
    traits:
      meshmap:
        edges: []
        fieldRefData: {}
        id: 29079539-ed26-4549-8aa7-be0c0bce1366
        meshmodel-metadata:
          capabilities: ""
          defaultData: ""
          genealogy: ""
          isAnnotation: false
          isCustomResource: false
          isModelAnnotation: "FALSE"
          isNamespaced: true
          logoURL: https://github.com/cncf/artwork/blob/master/projects/kubernetes/icon/white/kubernetes-icon-white.svg
          model: kubernetes
          modelDisplayName: Kubernetes
          primaryColor: '#326CE5'
          secondaryColor: '#7aa1f0'
          shape: round-triangle
          shapePolygonPoints: ""
          status: enabled
          styleOverrides: '{"height":20,"width":20,"padding":12,"background-position-y":4.5,"x":"10px","y":"12px"}'
          styles: '{"height":20,"width":20,"padding":12,"background-position-y":4.5,"x":"10px","y":"12px"}'
          subCategory: ""
          svgColor: ui/public/static/img/meshmodels/kubernetes/color/service-color.svg
          svgComplete: ""
          svgWhite: ui/public/static/img/meshmodels/kubernetes/white/service-white.svg
        position:
          posX: -2
          posY: -108.5
        whiteboardData:
          style: {}
    type: Service
    version: ""
  vault-config:
    annotations: {}
    apiVersion: v1
    dependsOn: []
    id: null
    isAnnotation: null
    labels:
      app.kubernetes.io/instance: vault
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: vault
      helm.sh/chart: vault-0.28.1
    model: kubernetes
    name: vault-config
    namespace: default
    settings:
      data:
        extraconfig-from-values.hcl: |2-

          disable_mlock = true
          ui = true

          listener "tcp" {
            tls_disable = 1
            address = "[::]:8200"
            cluster_address = "[::]:8201"
            # Enable unauthenticated metrics access (necessary for Prometheus Operator)
            #telemetry {
            #  unauthenticated_metrics_access = "true"
            #}
          }
          storage "file" {
            path = "/vault/data"
          }

          # Example configuration for using auto-unseal, using Google Cloud KMS. The
          # GKMS keys must already exist, and the cluster must have a service account
          # that is authorized to access GCP KMS.
          #seal "gcpckms" {
          #   project     = "vault-helm-dev"
          #   region      = "global"
          #   key_ring    = "vault-helm-unseal-kr"
          #   crypto_key  = "vault-helm-unseal-key"
          #}

          # Example configuration for enabling Prometheus metrics in your config.
          #telemetry {
          #  prometheus_retention_time = "30s"
          #  disable_hostname = true
          #}
    traits:
      meshmap:
        edges: []
        fieldRefData: {}
        id: 5025e7b4-4762-4edb-83d6-e38a93816941
        meshmodel-metadata:
          capabilities: ""
          defaultData: ""
          genealogy: ""
          isAnnotation: false
          isCustomResource: false
          isModelAnnotation: "FALSE"
          isNamespaced: true
          logoURL: https://github.com/cncf/artwork/blob/master/projects/kubernetes/icon/white/kubernetes-icon-white.svg
          model: kubernetes
          modelDisplayName: Kubernetes
          primaryColor: '#326CE5'
          secondaryColor: '#7aa1f0'
          shape: bottom-round-rectangle
          shapePolygonPoints: ""
          status: enabled
          styleOverrides:
            z-index: 11
          styles: ""
          subCategory: ""
          svgColor: ui/public/static/img/meshmodels/kubernetes/color/configmap-color.svg
          svgComplete: ""
          svgWhite: ui/public/static/img/meshmodels/kubernetes/white/configmap-white.svg
        position:
          posX: -108
          posY: 126.5
        whiteboardData:
          style: {}
    type: ConfigMap
    version: ""
  vault-gilwk:
    annotations: {}
    apiVersion: v1
    dependsOn: []
    id: null
    isAnnotation: null
    labels:
      app.kubernetes.io/instance: vault
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: vault
      helm.sh/chart: vault-0.28.1
    model: kubernetes
    name: vault
    namespace: default
    settings: {}
    traits:
      meshmap:
        edges: []
        fieldRefData: {}
        id: 7848e07d-93fc-435e-99f5-32bcdee313d1
        meshmodel-metadata:
          capabilities: ""
          defaultData: ""
          genealogy: ""
          isAnnotation: false
          isCustomResource: false
          isModelAnnotation: "FALSE"
          isNamespaced: true
          logoURL: https://github.com/cncf/artwork/blob/master/projects/kubernetes/icon/white/kubernetes-icon-white.svg
          model: kubernetes
          modelDisplayName: Kubernetes
          primaryColor: '#326CE5'
          secondaryColor: '#7aa1f0'
          shape: bottom-round-rectangle
          shapePolygonPoints: ""
          status: enabled
          styleOverrides:
            z-index: 3
          styles: ""
          subCategory: ""
          svgColor: ui/public/static/img/meshmodels/kubernetes/color/serviceaccount-color.svg
          svgComplete: ""
          svgWhite: ui/public/static/img/meshmodels/kubernetes/white/serviceaccount-white.svg
        position:
          posX: -54
          posY: 126.5
        whiteboardData:
          style: {}
    type: ServiceAccount
    version: ""
  vault-internal:
    annotations: {}
    apiVersion: v1
    dependsOn: []
    id: null
    isAnnotation: null
    labels:
      app.kubernetes.io/instance: vault
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: vault
      helm.sh/chart: vault-0.28.1
      vault-internal: "true"
    model: kubernetes
    name: vault-internal
    namespace: default
    settings:
      spec:
        cluster IP: None
        ports:
        - name: http
          port: 8200
          target Port: 8200
        - name: https-internal
          port: 8201
          target Port: 8201
        publish Not Ready Addresses: true
        selector:
          app.kubernetes.io/instance: vault
          app.kubernetes.io/name: vault
          component: server
    traits:
      meshmap:
        edges: []
        fieldRefData: {}
        id: 9587d30e-acb0-4a84-accc-b0709b12789b
        meshmodel-metadata:
          capabilities: ""
          defaultData: ""
          genealogy: ""
          isAnnotation: false
          isCustomResource: false
          isModelAnnotation: "FALSE"
          isNamespaced: true
          logoURL: https://github.com/cncf/artwork/blob/master/projects/kubernetes/icon/white/kubernetes-icon-white.svg
          model: kubernetes
          modelDisplayName: Kubernetes
          primaryColor: '#326CE5'
          secondaryColor: '#7aa1f0'
          shape: round-triangle
          shapePolygonPoints: ""
          status: enabled
          styleOverrides:
            background-position-y: 4.5
            height: 20
            padding: 12
            width: 20
            x: 10px
            "y": 12px
            z-index: 13
          styles: '{"height":20,"width":20,"padding":12,"background-position-y":4.5,"x":"10px","y":"12px"}'
          subCategory: ""
          svgColor: ui/public/static/img/meshmodels/kubernetes/color/service-color.svg
          svgComplete: ""
          svgWhite: ui/public/static/img/meshmodels/kubernetes/white/service-white.svg
        position:
          posX: 83
          posY: -17.5
        whiteboardData:
          style: {}
    type: Service
    version: ""
  vault-lgbpy:
    annotations: {}
    apiVersion: v1
    dependsOn: []
    id: null
    isAnnotation: null
    labels:
      app.kubernetes.io/instance: vault
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: vault
      helm.sh/chart: vault-0.28.1
    model: kubernetes
    name: vault
    namespace: default
    settings:
      spec:
        ports:
        - name: http
          port: 8200
          target Port: 8200
        - name: https-internal
          port: 8201
          target Port: 8201
        publish Not Ready Addresses: true
        selector:
          app.kubernetes.io/instance: vault
          app.kubernetes.io/name: vault
          component: server
    traits:
      meshmap:
        edges: []
        fieldRefData: {}
        id: 74c3eaa5-b923-40b0-99d8-b773b0cb53f0
        meshmodel-metadata:
          capabilities: ""
          defaultData: ""
          genealogy: ""
          isAnnotation: false
          isCustomResource: false
          isModelAnnotation: "FALSE"
          isNamespaced: true
          logoURL: https://github.com/cncf/artwork/blob/master/projects/kubernetes/icon/white/kubernetes-icon-white.svg
          model: kubernetes
          modelDisplayName: Kubernetes
          primaryColor: '#326CE5'
          secondaryColor: '#7aa1f0'
          shape: round-triangle
          shapePolygonPoints: ""
          status: enabled
          styleOverrides:
            background-position-y: 4.5
            height: 20
            padding: 12
            width: 20
            x: 10px
            "y": 12px
            z-index: 5
          styles: '{"height":20,"width":20,"padding":12,"background-position-y":4.5,"x":"10px","y":"12px"}'
          subCategory: ""
          svgColor: ui/public/static/img/meshmodels/kubernetes/color/service-color.svg
          svgComplete: ""
          svgWhite: ui/public/static/img/meshmodels/kubernetes/white/service-white.svg
        position:
          posX: 80
          posY: 57.5
        whiteboardData:
          style: {}
    type: Service
    version: ""
  vault-server-binding:
    annotations: {}
    apiVersion: rbac.authorization.k8s.io/v1
    dependsOn: []
    id: null
    isAnnotation: null
    labels:
      app.kubernetes.io/instance: vault
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: vault
      helm.sh/chart: vault-0.28.1
    model: kubernetes
    name: vault-server-binding
    namespace: ""
    settings:
      role Ref:
        api Group: rbac.authorization.k8s.io
        kind: ClusterRole
        name: system:auth-delegator
      subjects:
      - kind: ServiceAccount
        name: vault
        namespace: default
    traits:
      meshmap:
        edges: []
        fieldRefData: {}
        id: 77bfa6c7-1efa-44a5-a98f-6e4091c2dbbf
        meshmodel-metadata:
          capabilities: ""
          defaultData: ""
          genealogy: ""
          isAnnotation: false
          isCustomResource: false
          isModelAnnotation: "FALSE"
          isNamespaced: false
          logoURL: Created by Meshery Authors
          model: kubernetes
          modelDisplayName: Kubernetes
          primaryColor: '#326CE5'
          secondaryColor: '#7aa1f0'
          shape: round-rectangle
          shapePolygonPoints: ""
          status: enabled
          styleOverrides:
            height: 25px
            width: 25px
            x: "7"
            "y": "7"
            z-index: 12
          styles: '{"height":"25px","width":"25px","x":"7", "y":"7"}'
          subCategory: ""
          svgColor: ui/public/static/img/meshmodels/kubernetes/color/clusterrolebinding-color.svg
          svgComplete: ""
          svgWhite: ui/public/static/img/meshmodels/kubernetes/white/clusterrolebinding-white.svg
        position:
          posX: 3
          posY: -21
        whiteboardData:
          style: {}
    type: ClusterRoleBinding
    version: ""
  vault-wptgk:
    annotations: {}
    apiVersion: apps/v1
    dependsOn: []
    id: null
    isAnnotation: null
    labels:
      app.kubernetes.io/instance: vault
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: vault
    model: kubernetes
    name: vault
    namespace: default
    settings:
      spec:
        pod Management Policy: Parallel
        replicas: 1
        selector:
          match Labels:
            app.kubernetes.io/instance: vault
            app.kubernetes.io/name: vault
            component: server
        service Name: vault-internal
        template:
          metadata:
            annotations: null
            labels:
              app.kubernetes.io/instance: vault
              app.kubernetes.io/name: vault
              component: server
              helm.sh/chart: vault-0.28.1
          spec:
            affinity:
              pod Anti Affinity:
                required During Scheduling Ignored During Execution:
                - label Selector:
                    match Labels:
                      app.kubernetes.io/instance: vault
                      app.kubernetes.io/name: vault
                      component: server
                  topology Key: kubernetes.io/hostname
            containers:
            - args:
              - "cp /vault/config/extraconfig-from-values.hcl /tmp/storageconfig.hcl;\n[
                -n \"${HOST_IP}\" ] && sed -Ei \"s|HOST_IP|${HOST_IP?}|g\" /tmp/storageconfig.hcl;\n[
                -n \"${POD_IP}\" ] && sed -Ei \"s|POD_IP|${POD_IP?}|g\" /tmp/storageconfig.hcl;\n[
                -n \"${HOSTNAME}\" ] && sed -Ei \"s|HOSTNAME|${HOSTNAME?}|g\" /tmp/storageconfig.hcl;\n[
                -n \"${API_ADDR}\" ] && sed -Ei \"s|API_ADDR|${API_ADDR?}|g\" /tmp/storageconfig.hcl;\n[
                -n \"${TRANSIT_ADDR}\" ] && sed -Ei \"s|TRANSIT_ADDR|${TRANSIT_ADDR?}|g\"
                /tmp/storageconfig.hcl;\n[ -n \"${RAFT_ADDR}\" ] && sed -Ei \"s|RAFT_ADDR|${RAFT_ADDR?}|g\"
                /tmp/storageconfig.hcl;\n/usr/local/bin/docker-entrypoint.sh vault
                server -config=/tmp/storageconfig.hcl \n"
              command:
              - /bin/sh
              - -ec
              env:
              - name: HOST_IP
                value From:
                  field Ref:
                    field Path: status.hostIP
              - name: POD_IP
                value From:
                  field Ref:
                    field Path: status.podIP
              - name: VAULT_K8S_POD_NAME
                value From:
                  field Ref:
                    field Path: metadata.name
              - name: VAULT_K8S_NAMESPACE
                value From:
                  field Ref:
                    field Path: metadata.namespace
              - name: VAULT_ADDR
                value: http://127.0.0.1:8200
              - name: VAULT_API_ADDR
                value: http://$(POD_IP):8200
              - name: SKIP_CHOWN
                value: "true"
              - name: SKIP_SETCAP
                value: "true"
              - name: HOSTNAME
                value From:
                  field Ref:
                    field Path: metadata.name
              - name: VAULT_CLUSTER_ADDR
                value: https://$(HOSTNAME).vault-internal:8201
              - name: HOME
                value: /home/vault
              image: hashicorp/vault:1.17.2
              image Pull Policy: IfNotPresent
              lifecycle:
                pre Stop:
                  exec:
                    command:
                    - /bin/sh
                    - -c
                    - sleep 5 && kill -SIGTERM $(pidof vault)
              name: vault
              ports:
              - container Port: 8200
                name: http
              - container Port: 8201
                name: https-internal
              - container Port: 8202
                name: http-rep
              readiness Probe:
                exec:
                  command:
                  - /bin/sh
                  - -ec
                  - vault status -tls-skip-verify
                failure Threshold: 2
                initial Delay Seconds: 5
                period Seconds: 5
                success Threshold: 1
                timeout Seconds: 3
              security Context:
                allow Privilege Escalation: false
              volume Mounts:
              - mount Path: /vault/data
                name: data
              - mount Path: /vault/config
                name: config
              - mount Path: /home/vault
                name: home
            host Network: false
            security Context:
              fs Group: 1000
              run As Group: 1000
              run As Non Root: true
              run As User: 100
            service Account Name: vault
            termination Grace Period Seconds: 10
            volumes:
            - config Map:
                name: vault-config
              name: config
            - empty Dir: {}
              name: home
        update Strategy:
          type: OnDelete
        volume Claim Templates:
        - metadata:
            name: data
          spec:
            access Modes:
            - ReadWriteOnce
            resources:
              requests:
                storage: 10Gi
    traits:
      meshmap:
        edges: []
        fieldRefData: {}
        id: fe75d493-362f-4a83-afac-e8e5369b6953
        meshmodel-metadata:
          capabilities: |2-
             {
              "designer": {
                "edit": {
                  "shape": {
                    "convert-shape": false
                  }
                }
              }
            }
          defaultData: ""
          genealogy: parent
          isAnnotation: false
          isCustomResource: false
          isModelAnnotation: "FALSE"
          isNamespaced: true
          logoURL: https://github.com/cncf/artwork/blob/master/projects/kubernetes/icon/white/kubernetes-icon-white.svg
          model: kubernetes
          modelDisplayName: Kubernetes
          primaryColor: '#326CE5'
          secondaryColor: '#7aa1f0'
          shape: cylinder
          shapePolygonPoints: ""
          status: enabled
          styleOverrides:
            background-opacity: "0.2"
            height: "15"
            width: "15"
            x: "12"
            "y": "20"
            z-index: 4
          styles: '{"height":"15","width":"15","x":"12","y":"20","background-opacity":"0.2"}'
          subCategory: ""
          svgColor: ui/public/static/img/meshmodels/kubernetes/color/statefulset-color.svg
          svgComplete: ui/public/static/img/meshmodels/kubernetes/complete/statefulset-complete.svg
          svgWhite: ui/public/static/img/meshmodels/kubernetes/white/statefulset-white.svg
        position:
          posX: -12.5
          posY: 124
        whiteboardData:
          style: {}
    type: StatefulSet
    version: ""
