consumes:
    - application/json
    - multipart/form-data
produces:
    - application/json
schemes:
    - http
swagger: "2.0"
info:
    description: |-
        the purpose of this application is to provide an application
        that is using plain go code to define an API

        This should demonstrate all the possible comment annotations
        that are available to turn go code into a fully compliant swagger 2.0 spec
    title: Meshery API.
    license:
        name: Apache-2.0
        url: http://www.apache.org/licenses/LICENSE-2.0.txt
    version: 0.4.27
basePath: /
paths:
    /api/pattern/catalog/publish:
        post:
            operationId: idPublishCatalogPatternHandler
            responses:
                "202":
                    description: ""
            description: Publishes pattern to Meshery Catalog by setting visibility to published and setting catalog data
            tags:
                - PatternsAPI
            summary: Handle Publish for a Meshery Pattern
    /api/pattern/{sourcetype}:
        post:
            tags:
                - PatternsAPI
            summary: Handle POST request for Pattern Files
            operationId: idPostPatternFileRequest
            responses:
                "200":
                    description: Returns a single meshery pattern
            description: Creates a new Pattern with source-content
        put:
            description: Updates the pattern with the given payload
            tags:
                - PatternsAPI
            summary: Handle PUT request for Meshery Pattern with the given payload
            operationId: idUpdateMesheryPattern
            responses:
                "200":
                    description: Returns a single meshery pattern
    /api/system/meshsync/resources:
        get:
            description: |-
                ```?apiVersion={apiVersion}``` If apiVersion is unspecified then all models are returned

                ```?search={componentname}``` If search is non empty then a greedy search is performed

                ```?order={field}``` orders on the passed field

                ```?sort={[asc/desc]}``` Default behavior is asc

                ```?page={page-number}``` Default page number is 1

                ```?pagesize={pagesize}``` Default pagesize is 25. To return all results: ```pagesize=all```

                ```?annotation={annotaion}``` annotation is a boolean value. If true then annotations are returned

                ```?labels={labels}``` labels is a boolean value. If true then labels are returned

                ```?spec={spec}``` spec is a boolean value. If true then spec is returned

                ```?status={status}``` status is a boolean value. If true then status is returned

                ```?clusterId={[clusterId]}``` clusterId is array of string values. Required.
            tags:
                - GetMeshSyncResources
            summary: Handle GET request for meshsync discovered resources
            operationId: idGetMeshSyncResources
            responses:
                "200":
                    description: Returns MeshSync resources
    /api/application/deploy:
        post:
            description: Deploy an attached application file with the request
            tags:
                - ApplicationsAPI
            summary: Handle POST request for Application File Deploy
            operationId: idPostDeployApplicationFile
            parameters:
                - name: Upload Yaml/Yml File
                  in: formData
                  type: file
                  x-go-name: FormFile
            responses:
                "200":
                    description: Returns the response of the application files
        delete:
            description: Delete a deployed application file with the request
            tags:
                - ApplicationsAPI
            summary: Handle DELETE request for Application File Deploy
            operationId: idDeleteApplicationFile
            responses:
                "200":
                    description: ""
    /api/environments/{environmentID}/connections:
        get:
            description: |-
                ```?order={field}``` orders on the passed field

                ```?page={page-number}``` Default page number is 0

                ```?pagesize={pagesize}``` Default pagesize is 20

                ```?search={environments_name}``` If search is non empty then a greedy search is performed

                ```?filter={{"assigned": true/false, "deleted_at": true/false}}``` defaults to assigned: false, deleted_at: false

                Returns all connections of environment
            tags:
                - EnvironmentAPI
            summary: Handle GET for all Connections of Environment
            operationId: idGetConnectionsOfEnvironmentHandler
            responses:
                "200":
                    description: Returns all connections
    /api/meshmodels/models/{model}:
        get:
            description: |-
                # Returns a list of registered models across all categories

                ```?version={version}``` If version is unspecified then all models are returned

                ```?order={field}``` orders on the passed field

                ```?search={[true/false]}``` If search is true then a greedy search is performed

                ```?sort={[asc/desc]}``` Default behavior is asc

                ```?page={page-number}``` Default page number is 1

                ```?pagesize={pagesize}``` Default pagesize is 25. To return all results: ```pagesize=all```
            tags:
                - GetMeshmodelModelsByName
            summary: Handle GET request for getting all meshmodel models. The component type/model name should be lowercase like "kubernetes", "istio"
            operationId: idGetMeshmodelModelsByName
            responses:
                "200":
                    description: Return meshmodel models with the count of duplicates
    /api/system/database/reset:
        delete:
            operationId: ResetSystemDatabase
            responses:
                "200":
                    description: ""
                "500":
                    description: ""
            description: |-
                This endpoint resets the system database to its initial state by performing the following steps:
                Creates an archive of the current database contents.
                Drops all existing tables in the database.
                Applies auto migration to recreate the necessary tables.
            summary: Reset the system database to its initial state.
    /api/pattern/deploy:
        post:
            summary: Handle POST request for Pattern Deploy
            operationId: idPostDeployPattern
            parameters:
                - type: file
                  x-go-name: FormFile
                  name: Upload Yaml/Yml File
                  in: formData
            responses:
                "200":
                    description: ""
            description: Deploy an attached pattern with the request
            tags:
                - PatternsAPI
        delete:
            responses:
                "200":
                    description: ""
            description: Delete a deployed pattern with the request
            tags:
                - PatternsAPI
            summary: Handle DELETE request for Pattern Deploy
            operationId: idDeleteDeployPattern
    /api/providers:
        get:
            responses:
                "200":
                    description: Returns a list of available providers
                    schema:
                        type: object
                        additionalProperties: false
            description: Returns the available list of providers
            tags:
                - ProvidersAPI
            summary: Handle GET request for list of providers
            operationId: idGetProvidersList
    /api/system/version:
        get:
            responses:
                "200":
                    description: Returns Meshery version
            description: Returns the running Meshery version
            tags:
                - SystemAPI
            summary: Handle GET request for system/server version
            operationId: idGetSystemVersion
    /api/user/logout:
        get:
            tags:
                - UserAPI
            summary: Handlers GET request for User logout
            operationId: idGetUserLogout
            responses:
                "200":
                    description: ""
            description: Redirects user for auth or issues session
    /api/workspaces/{id}/designs/{designID}:
        post:
            description: Adds a meshery design to a workspace
            tags:
                - WorkspacesAPI
            summary: Handle POST request for adding a meshery design to a workspace
            operationId: idAddMesheryDesignToWorkspace
            responses:
                "201":
                    description: Returns workspace designs mapping
        delete:
            tags:
                - WorkspacesAPI
            summary: Handle DELETE request for removing a meshery design from a workspace
            operationId: idRemoveMesheryDesignFromWorkspace
            responses:
                "201":
                    description: Returns workspace designs mapping
            description: Removes a meshery design from a workspace
    /api/environments/{environmentID}/connections/{connectionID}:
        post:
            description: Returns Environment connection mapping info
            tags:
                - EnvironmentAPI
            summary: Handle POST to add Connection in Environment by ID
            operationId: idAddConnectionToEnvironmentHandler
            responses:
                "200":
                    description: Returns environment
        delete:
            operationId: idRemoveConnectionFromEnvironmentHandler
            responses:
                "201":
                    description: ""
            description: Removes connection from environment
            tags:
                - EnvironmentAPI
            summary: Handle DELETE to remove Connection from Environment by ID
    /api/events/status:
        put:
            operationId: idGetEventStreamer
            responses:
                "200":
                    description: Returns event
            description: Bulk update status for the events associated with the ids.
            summary: Handle PUT request to update event status in bulk.
    /api/filter/catalog/publish:
        post:
            summary: Handle Publish for a Meshery Filter
            operationId: idPublishCatalogFilterHandler
            responses:
                "202":
                    description: ""
            description: Publishes filter to Meshery Catalog by setting visibility to published and setting catalog data
            tags:
                - FiltersAPI
    /api/system/kubernetes/register:
        post:
            description: Used to register Kubernetes components to Meshery from a kubeconfig file
            tags:
                - SystemAPI
            summary: Handle registration request for Kubernetes components
            operationId: idPostK8SRegistration
            responses:
                "202":
                    description: ""
                "400":
                    description: ""
                "500":
                    description: ""
    /api/telemetry/metrics/grafana/scan:
        get:
            operationId: idGetGrafana
            responses:
                "200":
                    schema:
                        type: object
                        additionalProperties: false
                    description: Returns a map for v1 services
            description: Fetches and returns Grafana
            tags:
                - GrafanaAPI
            summary: Handle GET request for Grafana
    /provider:
        get:
            description: Servers providers UI
            tags:
                - ProvidersAPI
            summary: Handle GET request to provider UI
            operationId: idProvider
            responses:
                "200":
                    description: ""
    /api/application/types:
        get:
            operationId: typeGetMesheryApplication
            responses:
                "200":
                    description: Returns Meshery application types
                    schema:
                        type: array
                        items: {}
            description: Get application file types
            tags:
                - ApplicationsAPI
            summary: Handle GET request for Meshery Application types
    /api/application/{sourcetype}:
        post:
            description: Updates the design for the provided application
            tags:
                - ApplicationsAPI
            summary: Handle POST request for Application Files
            operationId: idPutApplicationFileRequest
            responses:
                "200":
                    description: Fetches a single Meshery Application
    /api/provider/capabilities:
        get:
            description: Returns the capabilities.json for the provider
            tags:
                - ProvidersAPI
            summary: Handle GET requests for Provider
            operationId: idGetProviderCapabilities
            responses:
                "200":
                    description: ""
    /api/schema/resource/{resourceName}:
        get:
            summary: Handles the request to retrieve and merge resource JSON schema and UI schema.
            operationId: HandleResourceSchemas
            responses: {}
    /api/system/kubernetes/contexts:
        get:
            description: |-
                # Contexts can be further filtered through query parameter

                ```?order={field}``` orders on the passed field

                ```?page={page-number}``` Default page number is 0

                ```?pagesize={pagesize}``` Default pagesize is 10

                ```?search={contextname}``` If search is non empty then a greedy search is performed
            tags:
                - GetAllContexts
            summary: Handle GET request for all kubernetes contexts.
            operationId: idGetAllContexts
            responses:
                "200":
                    description: Returns K8s contexts
        post:
            summary: Handle POST requests for Kubernetes Context list
            operationId: idPostK8SContexts
            responses:
                "200":
                    description: Returns kubernetes context list
            description: Returns the context list for a given k8s config
            tags:
                - SystemAPI
    /api/user/performance/profiles/{id}:
        get:
            responses:
                "200":
                    description: Returns a single performance profile
            description: Returns single performance profile with the given id
            tags:
                - PerformanceAPI
            summary: Handle GET requests for performance results of a profile
            operationId: idGetSinglePerformanceProfile
            parameters:
                - type: string
                  format: uuid
                  x-go-name: ID
                  description: id for a specific
                  name: id
                  in: path
                  required: true
        delete:
            tags:
                - PerformanceAPI
            summary: Handle Delete requests for performance profiles
            operationId: idDeletePerformanceProfile
            parameters:
                - description: id for a specific
                  name: id
                  in: path
                  required: true
                  type: string
                  format: uuid
                  x-go-name: ID
            responses:
                "200":
                    description: ""
            description: Deletes a performance profile with the given id
    /api/application:
        get:
            description: |-
                Fetches the list of all applications saved by the current user

                ```?updated_after=<timestamp>``` timestamp should be of the format "YYYY-MM-DD HH:MM:SS"

                ```?order={field}``` orders on the passed field

                ```?search=<application name>``` A string matching is done on the specified application name

                ```?page={page-number}``` Default page number is 0

                ```?pagesize={pagesize}``` Default pagesize is 10
            tags:
                - ApplicationsAPI
            summary: Handle GET request for Application Files
            operationId: idGetMesheryApplications
            responses:
                "200":
                    description: Returns all meshery applications
    /api/content/design/share:
        post:
            description: Used to share designs with others
            tags:
                - ShareContent
            summary: Handle POST request for Sharing content
            operationId: idPostShareContent
            responses:
                "200":
                    description: ""
                "403":
                    description: ""
                "500":
                    description: ""
    /api/events/status/{id}:
        put:
            description: Updates event status for the event associated with the id.
            summary: Handle PUT request to update event status.
            operationId: idGetEventStreamer
            responses:
                "200":
                    description: Returns event
    /api/meshmodels/models/{model}/components:
        get:
            responses:
                "200":
                    description: Return meshmoddel components with the count of duplicates
            description: |-
                Example: ```/api/meshmodels/models/kubernetes/components```
                Components can be further filtered through query parameter

                ```?version={version}```

                ```?trim={[true]}``` When trim is set to true, the underlying schemas are not returned for entities

                ```?apiVersion={apiVersion}``` If apiVersion is unspecified then all models are returned

                ```?search={componentname}``` If search is non empty then a greedy search is performed

                ```?order={field}``` orders on the passed field

                ```?sort={[asc/desc]}``` Default behavior is asc

                ```?page={page-number}``` Default page number is 1

                ```?pagesize={pagesize}``` Default pagesize is 25. To return all results: ```pagesize=all```

                ```?annotations={["true"/"false"/]}``` If "true" components having "isAnnotation" property as true are "only" returned, If false all components except "annotations" are returned. Any other value of the query parameter results in both annoations as well as non-annotation components being returned.
            tags:
                - GetMeshmodelComponentByModel
            summary: Handle GET request for getting meshmodel components of a specific model. The component type/model name should be lowercase like "kubernetes", "istio"
            operationId: idGetMeshmodelComponentByModel
    /api/telemetry/metrics/ping/{connectionID}:
        get:
            description: Used to ping prometheus
            tags:
                - PrometheusAPI
            summary: Handle GET request for Prometheus Ping
            operationId: idGetPrometheusPing
            responses:
                "200":
                    description: ""
    /api/user/login:
        get:
            operationId: idGetUserLogin
            responses:
                "200":
                    description: ""
            description: Redirects user for auth or issues session
            tags:
                - UserAPI
            summary: Handlers GET request for User login
    /api/environments:
        get:
            description: |-
                # Environments can be further filtered through query parameters

                ```?order={field}``` orders on the passed field

                ```?page={page-number}``` Default page number is 0

                ```?pagesize={pagesize}``` Default pagesize is 20

                ```?search={environments_name}``` If search is non empty then a greedy search is performed

                ```?orgID={orgid}``` orgID is used to retrieve environments belonging to a particular org *required*

                ```?filter={condition}```
            tags:
                - EnvironmentsAPI
            summary: Handles GET for all Environments
            operationId: idGetEnvironments
            responses:
                "200":
                    description: Returns all environements
        post:
            description: Creates a new environment
            tags:
                - PostEnvironment
            summary: Handle POST request for creating a new environment
            operationId: idSaveEnvironment
            responses:
                "201":
                    description: ""
    /api/filter/catalog/unpublish:
        delete:
            operationId: idUnPublishCatalogFilterHandler
            responses:
                "200":
                    description: ""
            description: Unpublishes filter from Meshery Catalog by setting visibility to private and removing catalog data from website
            tags:
                - FiltersAPI
            summary: Handle UnPublish for a Meshery Filter
    /api/meshmodels/models:
        get:
            description: |-
                # Returns a list of registered models across all categories

                ```?version={version}``` If version is unspecified then all models are returned

                ```?order={field}``` orders on the passed field

                ```?search={modelname}``` If search is non empty then a greedy search is performed

                ```?sort={[asc/desc]}``` Default behavior is asc

                ```?page={page-number}``` Default page number is 1

                ```?pagesize={pagesize}``` Default pagesize is 25. To return all results: ```pagesize=all```
            tags:
                - GetMeshmodelModels
            summary: Handle GET request for getting all meshmodel models
            operationId: idGetMeshmodelModels
            responses:
                "200":
                    description: Return meshmodel models with the count of duplicates
    /api/pattern/catalog:
        get:
            description: |-
                # Patterns can be further filtered through query parameter

                ```?order={field}``` orders on the passed field

                ```?page={page-number}``` Default page number is 0

                ```?pagesize={pagesize}``` Default pagesize is 10.

                ```?search={patternname}``` If search is non empty then a greedy search is performed
            tags:
                - PatternsAPI
            summary: Handle GET request for catalog patterns
            operationId: idGetCatalogMesheryPatternsHandler
            responses:
                "200":
                    description: Returns all meshery patterns
    /api/system/adapter/operation:
        post:
            summary: Handle POST requests for Adapter Operations
            operationId: idPostAdapterOperation
            parameters:
                - x-go-name: Adapter
                  name: adapter
                  in: query
                  type: string
                - in: query
                  type: string
                  x-go-name: Query
                  name: query
                - type: string
                  x-go-name: CustomBody
                  name: customBody
                  in: query
                - name: namespace
                  in: query
                  type: string
                  x-go-name: Namespace
                - type: string
                  x-go-name: Delete
                  name: deleteOp
                  in: query
            responses:
                "200":
                    description: ""
            description: Used to send operations to the adapters
            tags:
                - SystemAPI
    /api/user/prefs:
        get:
            summary: Handle GET Requests for User Load Test Preferences
            operationId: idGetUserTestPrefs
            responses:
                "200":
                    description: Returns User Load Test Preferencee
            description: Returns User Load Test Preferences
            tags:
                - UserAPI
        post:
            description: Updates User Load Test Preferences
            tags:
                - UserAPI
            summary: Handle POST Requests for User Load Test Preferences
            operationId: idPostUserTestPrefs
            responses:
                "200":
                    description: Returns User Load Test Preferencee
    /api/workspaces/{id}/designs:
        get:
            description: |-
                ```?order={field}``` orders on the passed field

                ```?page={page-number}``` Default page number is 0

                ```?pagesize={pagesize}``` Default pagesize is 20

                ```?search={name}``` If search is non empty then a greedy search is performed

                ```?filter={{"assigned": true/false, "deleted_at": true/false}}``` defaults to assigned: false, deleted_at: false
            tags:
                - WorkspacesAPI
            summary: Handles GET for all Meshery Designs in a Workspace
            operationId: idGetWorkspaceMesheryDesigns
            responses:
                "200":
                    description: Returns all meshery patterns
    /api/filter:
        get:
            description: |-
                # Returns the list of all the filters saved by the current user

                ```?order={field}``` orders on the passed field

                ```?search=<filter name>``` A string matching is done on the specified filter name

                ```?page={page-number}``` Default page number is 0

                ```?pagesize={pagesize}``` Default pagesize is 10

                ```?visibility={[visibility]}``` Default visibility is public + private; Mulitple visibility filters can be passed as an array
                Eg: ```?visibility=["public", "published"]``` will return public and published filters
            tags:
                - FiltersAPI
            summary: Handle GET request for filters
            operationId: idGetFilterFiles
            responses:
                "200":
                    description: Returns all meshery filters
        post:
            description: Used to save/update a Meshery Filter
            tags:
                - FiltersAPI
            summary: Handle POST requests for Meshery Filters
            operationId: idPostFilterFile
            responses:
                "200":
                    description: Returns a single meshery filter
    /api/filter/file/{id}:
        get:
            description: Returns the Meshery Filter file saved by the current user with the given id
            tags:
                - FiltersAPI
            summary: Handle GET request for filter file with given id
            operationId: idGetFilterFile
            responses:
                "200":
                    description: Returns a single meshery filter
    /api/identity/users:
        get:
            description: |-
                # Users can be further filtered through query parameters

                ```?order={field}``` orders on the passed field

                ```?page={page-number}``` Default page number is 0

                ```?pagesize={pagesize}``` Default pagesize is 20

                ```?search={username|email|first_name|last_name}``` If search is non empty then a greedy search is performed

                ```?filter={condition}```
            tags:
                - UserAPI
            summary: Handles GET for all Users
            operationId: idGetAllUsersHandler
            parameters:
                - x-go-name: Page
                  name: page
                  in: query
                  type: integer
                  format: int64
                - type: integer
                  format: int64
                  x-go-name: PageSize
                  name: pageSize
                  in: query
                - x-go-name: Search
                  name: search
                  in: query
                  type: string
                - description: 'in: order'
                  name: order
                  in: query
                  type: string
                  x-go-name: Order
                - in: query
                  type: string
                  x-go-name: Filter
                  description: 'in: filter'
                  name: filter
            responses:
                "200":
                    description: Returns all users info
    /api/meshmodels/categories/{category}/components/{name}:
        get:
            responses:
                "200":
                    description: Return meshmoddel components with the count of duplicates
            description: |-
                Example: ```/api/meshmodels/categories/Orchestration``` and Management/components/Namespace
                Components can be further filtered through query parameter

                ```?model={model}``` If model is unspecified then all models are returned

                ```?version={version}``` If version is unspecified then all model versions are returned

                ```?apiVersion={apiVersion}``` If apiVersion is unspecified then all components are returned

                ```?order={field}``` orders on the passed field

                ```?search={[true/false]}``` If search is true then a greedy search is performed

                ```?sort={[asc/desc]}``` Default behavior is asc

                ```?page={page-number}``` Default page number is 1

                ```?pagesize={pagesize}``` Default pagesize is 25. To return all results: ```pagesize=all```

                ```?annotations={["true"/"false"/]}``` If "true" components having "isAnnotation" property as true are "only" returned, If false all components except "annotations" are returned. Any other value of the query parameter results in both annoations as well as non-annotation components being returned.
            tags:
                - GetMeshmodelComponentsByNameByCategory
            summary: Handle GET request for getting meshmodel components of a specific type category.
            operationId: idGetMeshmodelComponentsByNameByCategory
    /api/meshmodels/components:
        get:
            responses:
                "200":
                    description: Return meshmoddel components with the count of duplicates
            description: |-
                # Components can be further filtered through query parameter

                ```?version={version}```

                ```?apiVersion={apiVersion}``` If apiVersion is unspecified then all models are returned

                ```?order={field}``` orders on the passed field

                ```?search={componentname}``` If search is non empty then a greedy search is performed

                ```?trim={[true]}``` When trim is set to true, the underlying schemas are not returned for entities

                ```?sort={[asc/desc]}``` Default behavior is asc

                ```?page={page-number}``` Default page number is 1

                ```?pagesize={pagesize}``` Default pagesize is 25. To return all results: ```pagesize=all```

                ```?annotations={["true"/"false"/]}``` If "true" components having "isAnnotation" property as true are "only" returned, If false all components except "annotations" are returned. Any other value of the query parameter results in both annoations as well as non-annotation components being returned.
            tags:
                - GetAllMeshmodelComponents
            summary: Handle GET request for getting meshmodel components across all models and categories
            operationId: idGetAllMeshmodelComponents
    /api/user/performance/profiles/results:
        get:
            responses:
                "200":
                    description: Returns all performance results
            description: |-
                # Results can be further filtered through query parameter

                ```?order={field}``` orders on the passed field

                ```?page={page-number}``` Default page number is 0

                ```?pagesize={pagesize}``` Default pagesize is 10

                ```?search={}``` If search is non empty then a greedy search is performed

                ```?from={date}``` Date must be in yyyy-mm-dd format

                ```?to={date}``` Date must be in yyyy-mm-dd format
            tags:
                - PerformanceAPI
            summary: Handles GET requests for performance results
            operationId: idGetAllPerformanceResults
    /api/events/bulk:
        delete:
            description: Bulk delete events associated with the ids.
            summary: Handle DELETE request to delete events in bulk.
            operationId: idGetEventStreamer
            responses:
                "200":
                    description: ""
    /api/events/{id}:
        delete:
            description: Deletes event associated with the id.
            summary: Handle DELETE request for events.
            operationId: idGetEventStreamer
            responses:
                "200":
                    description: ""
    /api/meshmodels/categories/{category}:
        get:
            responses:
                "200":
                    description: Returns meshmodel categories
            description: |-
                ```?order={field}``` orders on the passed field

                ```?sort={[asc/desc]}``` Default behavior is asc

                ```?page={page-number}``` Default page number is 1

                ```?pagesize={pagesize}``` Default pagesize is 25. To return all results: ```pagesize=all```

                ```?search={[true/false]}``` If search is true then a greedy search is performed
            tags:
                - GetMeshmodelCategoriesByName
            summary: Handle GET request for getting all meshmodel categories of a given name
            operationId: idGetMeshmodelCategoriesByName
    /api/filter/deploy:
        post:
            description: Deploy an attached filter file with the request
            tags:
                - FilterAPI
            summary: Handle POST request for Filter File Deploy
            operationId: idPostDeployFilterFile
            responses:
                "200":
                    description: Returns the response of the Filter files
        delete:
            description: Delete a deployed filter file with the request
            tags:
                - FilterAPI
            summary: Handle DELETE request for Filter File Deploy
            operationId: idDeleteFilterFile
            responses:
                "200":
                    description: ""
    /api/perf/profile:
        get:
            parameters:
                - name: Query
                  in: query
                - name: Body
                  in: body
                  schema: {}
            responses:
                "200":
                    description: ""
            description: Runs the load test with the given parameters
            tags:
                - PerfAPI
            summary: Handle GET request to run a test
            operationId: idRunPerfTest
    /api/user/schedules:
        get:
            description: |-
                # Returns the list of all the schedules saved by the current user

                ```?order={field}``` orders on the passed field

                ```?page={page-number}``` Default page number is 0

                ```?pagesize={pagesize}``` Default pagesize is 10
            tags:
                - SchedulesAPI
            summary: Handle GET request for Schedules
            operationId: idGetSchedules
            responses:
                "200":
                    description: Returns List of saved schedules
        post:
            responses:
                "200":
                    description: Returns a single schedules
            description: Save schedule using the current provider's persistence mechanism
            tags:
                - SchedulesAPI
            summary: Handle POST request for Schedules
            operationId: idPostSchedules
    /api/pattern/types:
        get:
            description: Get pattern file types
            tags:
                - PatternsAPI
            summary: Handle GET request for Meshery Pattern types
            operationId: typeGetMesheryPatternTypesHandler
            responses:
                "200":
                    description: Returns Meshery application types
                    schema:
                        type: array
                        items: {}
    /api/user/profile/{id}:
        get:
            description: Returns User info
            tags:
                - UserAPI
            summary: Handle GET for User info by ID
            operationId: idGetUserByIDHandler
            responses:
                "200":
                    description: Returns user info
    /api/workspaces:
        get:
            tags:
                - WorkspacesAPI
            summary: Handles GET for all Workspaces
            operationId: idGetWorkspaces
            responses:
                "200":
                    description: Returns workspaces
            description: |-
                ```?order={field}``` orders on the passed field

                ```?page={page-number}``` Default page number is 0

                ```?pagesize={pagesize}``` Default pagesize is 20

                ```?search={name}``` If search is non empty then a greedy search is performed

                ```?orgID={orgid}``` orgID is used to retrieve workspaces belonging to a particular org *required*

                ```?filter={condition}```
        post:
            description: Creates a new workspace
            tags:
                - PostWorkspace
            summary: Handle POST request for creating a new workspace
            operationId: idSaveWorkspace
            responses:
                "201":
                    description: Returns workspace
    /api/meshmodels/categories/{category}/models/{model}/components:
        get:
            operationId: idGetMeshmodelComponentByModelByCategory
            responses:
                "200":
                    description: Return meshmoddel components with the count of duplicates
            description: |-
                Example: ```/api/meshmodels/categories/Orchestration``` and Management/models/kubernetes/components
                Components can be further filtered through query parameter

                ```?version={version}```

                ```?trim={[true]}``` When trim is set to true, the underlying schemas are not returned for entities

                ```?apiVersion={apiVersion}``` If apiVersion is unspecified then all models are returned

                ```?order={field}``` orders on the passed field

                ```?search={componentname}``` If search is non empty then a greedy search is performed

                ```?sort={[asc/desc]}``` Default behavior is asc

                ```?page={page-number}``` Default page number is 1

                ```?pagesize={pagesize}``` Default pagesize is 25. To return all results: ```pagesize=all```

                ```?annotations={["true"/"false"/]}``` If "true" components having "isAnnotation" property as true are "only" returned, If false all components except "annotations" are returned. Any other value of the query parameter results in both annoations as well as non-annotation components being returned.
            tags:
                - GetMeshmodelComponentByModelByCategory
            summary: Handle GET request for getting meshmodel components of a specific model and category. The component type/model name should be lowercase like "kubernetes", "istio"
    /api/meshmodels/categories/{category}/models/{model}/components/{name}:
        get:
            summary: Handle GET request for getting meshmodel components of a specific type by model and category.
            operationId: idGetMeshmodelComponentsByNameByModelByCategory
            responses:
                "200":
                    description: Return meshmoddel components with the count of duplicates
            description: |-
                Example: ```/api/meshmodels/categories/Orchestration``` and Management/models/kubernetes/components/Namespace
                Components can be further filtered through query parameter

                ```?version={version}``` If version is unspecified then all model versions are returned

                ```?apiVersion={apiVersion}``` If apiVersion is unspecified then all components are returned

                ```?order={field}``` orders on the passed field

                ```?search={[true/false]}``` If search is true then a greedy search is performed

                ```?sort={[asc/desc]}``` Default behavior is asc

                ```?page={page-number}``` Default page number is 1

                ```?pagesize={pagesize}``` Default pagesize is 25. To return all results: ```pagesize=all```

                ```?annotations={["true"/"false"/]}``` If "true" components having "isAnnotation" property as true are "only" returned, If false all components except "annotations" are returned. Any other value of the query parameter results in both annoations as well as non-annotation components being returned.
            tags:
                - GetMeshmodelComponentsByNameByModelByCategory
    /api/meshmodels/models/{model}/policies/{name}:
        get:
            description: |-
                Example: ```/api/meshmodels/models/kubernetes/policies/{name}```

                ```?order={field}``` orders on the passed field

                ```?sort={[asc/desc]}``` Default behavior is asc

                ```?search={[true/false]}``` If search is true then a greedy search is performed

                ```?page={page-number}``` Default page number is 1

                ```?pagesize={pagesize}``` Default pagesize is 25. To return all results: ```pagesize=all```
            tags:
                - GetMeshmodelPoliciesByName
            summary: Handle GET request for getting meshmodel policies of a specific model by name.
            operationId: idGetMeshmodelPoliciesByName
            responses:
                "200":
                    description: Returns meshmodel policies
    /api/pattern/catalog/unpublish:
        delete:
            description: Unpublishes pattern from Meshery Catalog by setting visibility to private and removing catalog data from website
            tags:
                - PatternsAPI
            summary: Handle Publish for a Meshery Pattern
            operationId: idUnPublishCatalogPatternHandler
            responses:
                "200":
                    description: ""
    /api/system/kubernetes/ping?connection_id={id}:
        get:
            operationId: idGetKubernetesPing
            responses:
                "200":
                    description: ""
            description: Fetches server version to simulate ping
            tags:
                - SystemAPI
            summary: Handle GET request for Kubernetes ping
    /api/workspaces/{id}:
        get:
            tags:
                - WorkspacesAPI
            summary: Handle GET for Workspace info by ID
            operationId: idGetWorkspacesByIdHandler
            responses:
                "200":
                    description: Returns workspace
            description: |-
                ```?orgID={orgid}``` orgID is used to retrieve workspaces belonging to a particular org

                Returns Workspace info
        put:
            description: Updates a workspace
            tags:
                - PostWorkspace
            summary: Handle PUT request for updating a workspace
            operationId: idUpdateWorkspaceHandler
            responses:
                "200":
                    description: Returns workspace
        delete:
            summary: Handle DELETE for Workspace based on ID
            operationId: idDeleteWorkspaceHandler
            responses:
                "201":
                    description: Returns workspace
            description: Deletes a workspace
            tags:
                - WorkspaceAPI
    /api/meshmodels/models/{model}/policies/:
        get:
            description: |-
                Example: ```/api/meshmodels/models/kubernetes/policies```

                ```?order={field}``` orders on the passed field

                ```?sort={[asc/desc]}``` Default behavior is asc

                ```?search={[true/false]}``` If search is true then a greedy search is performed

                ```?page={page-number}``` Default page number is 1

                ```?pagesize={pagesize}``` Default pagesize is 25. To return all results: ```pagesize=all```
            tags:
                - GetMeshmodelPolicies
            summary: Handle GET request for getting meshmodel policies of a specific model by name.
            operationId: idGetMeshmodelPolicies
            responses:
                "200":
                    description: Returns meshmodel policies
    /api/meshmodels/registrants:
        get:
            description: |-
                # Returns a list of registrants and summary count of its models, components, and relationships

                ```?page={pagenumber}``` Default page number is 1

                ```?order={field}``` orders on the passed field

                ```?search={Hostname}``` Gets host by the name

                ```?sort={[asc/desc]}``` Default behavior is asc

                ```?pagesize={pagesize}``` Default pagesize is 25. To return all results: ```pagesize=all```
            summary: Handle GET request for getting all meshmodel registrants
            operationId: GetMeshmodelRegistrants
            responses:
                "200":
                    description: Returns meshmodel registrants
    /api/telemetry/metrics/boards/{connectionID}:
        post:
            parameters:
                - name: Body
                  in: body
                  required: true
                  schema:
                    type: array
                    items: {}
            responses:
                "200":
                    description: ""
            description: Used to persist selected board and panels
            tags:
                - PrometheusAPI
            summary: Handle POST request for Prometheus board
            operationId: idPostPrometheusBoard
    /api/patterns:
        delete:
            description: DeleteMultiMesheryPatternsHandler deletes patterns with the given ids
            tags:
                - PatternsAPI
            summary: Handle Delete for multiple Meshery Patterns
            operationId: idDeleteMesheryPattern
            parameters:
                - name: id
                  in: path
                  required: true
                  type: string
                  format: uuid
                  x-go-name: ID
                  description: id for a specific
            responses:
                "200":
                    description: ""
    /api/provider/extension:
        get:
            tags:
                - ProvidersAPI
            summary: Handle GET request for React Components
            operationId: idReactComponents
            responses:
                "200":
                    description: ""
            description: handles the requests to serve react components from the provider package
    /api/system/adapters:
        get:
            description: Fetches and returns all the adapters and ping adapters
            tags:
                - SystemAPI
            summary: Handle GET request for adapters
            operationId: idGetSystemAdapters
            parameters:
                - type: string
                  x-go-name: Adapter
                  name: adapter
                  in: query
            responses:
                "200":
                    description: Return all the adapters
                    schema:
                        type: array
                        items: {}
    /api/system/sync:
        get:
            operationId: idSystemSync
            responses:
                "200":
                    description: Returns User Load Test Preferencee
            description: Used to send session data to the UI for initial sync
            tags:
                - SystemAPI
            summary: Handle GET request for config sync
    /api/application/{id}:
        delete:
            parameters:
                - in: path
                  required: true
                  type: string
                  format: uuid
                  x-go-name: ID
                  description: id for a specific
                  name: id
            responses:
                "200":
                    description: ""
            description: 'Deletes a meshery application file with ID: id'
            tags:
                - ApplicationsAPI
            summary: Handle Delete for a Meshery Application File
            operationId: idDeleteMesheryApplicationFile
    /api/filter/catalog:
        get:
            description: |-
                # Filters can be further filtered through query parameter

                ```?order={field}``` orders on the passed field

                ```?page={page-number}``` Default page number is 0

                ```?pagesize={pagesize}``` Default pagesize is 10.

                ```?search={filtername}``` If search is non empty then a greedy search is performed
            tags:
                - FiltersAPI
            summary: Handle GET request for catalog filters
            operationId: idGetCatalogMesheryFiltersHandler
            responses:
                "200":
                    description: Returns all meshery filters
    /api/pattern:
        get:
            responses:
                "200":
                    description: Returns all meshery patterns
            description: |-
                Returns the list of all the patterns saved by the current user
                This will return all the patterns with their details

                ```?order={field}``` orders on the passed field

                ```?search=<design name>``` A string matching is done on the specified design name

                ```?page={page-number}``` Default page number is 1

                ```?pagesize={pagesize}``` Default pagesize is 10

                ```?visibility={[visibility]}``` Default visibility is public + private; Mulitple visibility filters can be passed as an array
                Eg: ```?visibility=["public", "published"]``` will return public and published designs
            tags:
                - PatternsAPI
            summary: Handle GET request for patterns
            operationId: idGetPatternFiles
        post:
            operationId: idPostPatternFile
            responses:
                "200":
                    description: Returns a single meshery pattern
            description: Edit/update a meshery pattern
            tags:
                - PatternsAPI
            summary: Handle POST requests for patterns
    /api/integrations/connections:
        get:
            operationId: idGetConnections
            responses:
                "200":
                    description: Returns all connections
            description: |-
                ```?order={field}``` orders on the passed field

                ```?search={}``` If search is non empty then a greedy search is performed

                ```?page={page-number}``` Default page number is 0

                ```?pagesize={pagesize}``` Default pagesize is 10

                ```?filter={filter}``` Filter connections with type or sub_type, eg /api/integrations/connections?filter=type%20platform or /api/integrations/connections?filter=sub_type%20management

                ```?status={status}``` Status takes array as param to filter connections based on status, eg /api/integrations/connections?status=["connected", "deleted"]

                ```?kind={kind}``` Kind takes array as param to filter connections based on kind, eg /api/integrations/connections?kind=["meshery", "kubernetes"]
            tags:
                - GetConnections
            summary: Handle GET request for getting all connections
        post:
            responses:
                "201":
                    description: ""
            description: Creates a new connection
            tags:
                - PostConnection
            summary: Handle POST request for creating a new connection
            operationId: idPostConnection
    /api/meshmodels/components/{name}:
        get:
            description: |-
                Example: ```/api/meshmodels/components/Namespace```
                Components can be further filtered through query parameter

                ```?model={model}``` If model is unspecified then all models are returned

                ```?version={version}``` If version is unspecified then all model versions are returned

                ```?apiVersion={apiVersion}``` If apiVersion is unspecified then all components are returned

                ```?order={field}``` orders on the passed field

                ```?sort={[asc/desc]}``` Default behavior is asc

                ```?trim={[true]}``` When trim is set to true, the underlying schemas are not returned for entities

                ```?search={[true/false]}``` If search is true then a greedy search is performed

                ```?page={page-number}``` Default page number is 1

                ```?pagesize={pagesize}``` Default pagesize is 25. To return all results: ```pagesize=all```

                ```?annotations={["true"/"false"/]}``` If "true" components having "isAnnotation" property as true are "only" returned, If false all components except "annotations" are returned. Any other value of the query parameter results in both annoations as well as non-annotation components being returned.
            tags:
                - GetAllMeshmodelComponentsByName
            summary: Handle GET request for getting meshmodel components of a specific type by name across all models and categories
            operationId: idGetAllMeshmodelComponentsByName
            responses:
                "200":
                    description: Return meshmoddel components with the count of duplicates
    /api/meshmodels/models/{model}/relationships/{name}:
        get:
            description: |-
                Example: ```/api/meshmodels/models/kubernetes/relationships/Edge```

                # Relationships can be further filtered through query parameter

                ```?version={version}```

                ```?order={field}``` orders on the passed field

                ```?sort={[asc/desc]}``` Default behavior is asc

                ```?search={[true/false]}``` If search is true then a greedy search is performed

                ```?page={page-number}``` Default page number is 1

                ```?pagesize={pagesize}``` Default pagesize is 25. To return all results: ```pagesize=all```
            tags:
                - GetMeshmodelRelationshipByName
            summary: Handle GET request for getting meshmodel relationships of a specific model by name.
            operationId: idGetMeshmodelRelationshipByName
            responses:
                "200":
                    description: Returns meshmodel relationships
    /api/meshmodels/relationships:
        get:
            description: |-
                # Relationships can be further filtered through query parameter

                ```?version={version}```

                ```?order={field}``` orders on the passed field

                ```?sort={[asc/desc]}``` Default behavior is asc

                ```?page={page-number}``` Default page number is 1

                ```?pagesize={pagesize}``` Default pagesize is 25. To return all results: ```pagesize=all```
            tags:
                - GetAllMeshmodelRelationships
            summary: Handle GET request for getting all meshmodel relationships
            operationId: idGetAllMeshmodelRelationships
            responses:
                "200":
                    description: Returns meshmodel relationships
    /api/user/performance/profiles:
        get:
            description: |-
                Returns the list of all the performance profiles saved by the current user

                ```?order={field}``` orders on the passed field

                ```?page={page-number}``` Default page number is 0

                ```?pagesize={pagesize}``` Default pagesize is 10

                ```?search={profilename}``` If search is non empty then a greedy search is performed
            tags:
                - PerformanceAPI
            summary: Handle GET requests for performance profiles
            operationId: idGetPerformanceProfiles
            responses:
                "200":
                    description: Returns all the performance profiles
        post:
            operationId: idSavePerformanceProfile
            parameters:
                - schema: {}
                  name: Body
                  in: body
            responses:
                "200":
                    description: Returns a single performance profile
            description: Save performance profile using the current provider's persistence mechanism
            tags:
                - PerformanceAPI
            summary: Handle POST requests for saving performance profile
    /api/perf/profile/result/{id}:
        get:
            description: Returns an individual result from provider
            tags:
                - PerfAPI
            summary: Handles GET requests for perf result
            operationId: idGetSinglePerfResult
            responses:
                "200":
                    description: Returns Single test result
    /api/provider:
        get:
            description: Update the choice of provider in system
            tags:
                - ProvidersAPI
            summary: Handle GET request for the choice of provider
            operationId: idChoiceProvider
            parameters:
                - type: string
                  x-go-name: Provider
                  name: provider
                  in: query
            responses:
                "200":
                    description: ""
    /api/system/meshsync/grafana:
        get:
            description: Fetches Prometheus and Grafana
            tags:
                - SystemAPI
            summary: Handle GET request for mesh-sync grafana
            operationId: idMeshSyncGrafana
            responses:
                "200":
                    description: Returns a map for v1 services
                    schema:
                        type: object
                        additionalProperties: false
    /api/telemetry/metrics/grafana/boards/{connectionID}:
        get:
            operationId: idGetGrafanaBoards
            parameters:
                - type: string
                  x-go-name: DashboardSearch
                  name: dashboardSearch
                  in: query
            responses:
                "200":
                    description: Returns Grafana boards and panels
                    schema:
                        items: {}
                        type: array
            description: Used for fetching Grafana boards and panels
            tags:
                - GrafanaAPI
            summary: Handle GET request for Grafana boards
        post:
            tags:
                - GrafanaAPI
            summary: Handle POST request for Grafana boards
            operationId: idPostGrafanaBoards
            responses:
                "200":
                    description: ""
            description: Used for persist Grafana boards and panel selections
    /api/system/meshsync/prometheus:
        get:
            description: Fetches Prometheus
            tags:
                - SystemAPI
            summary: Handle GET request for fetching prometheus
            operationId: idMeshSyncPrometheus
            responses:
                "200":
                    schema:
                        type: object
                        additionalProperties: false
                    description: Returns a map for v1 services
    /api/user/prefs/perf:
        post:
            description: Used for persisting load test preferences
            tags:
                - UserAPI
            summary: Handle POST request for load test preferences
            operationId: idPostLoadPreferences
            parameters:
                - name: Body
                  in: body
                  schema: {}
            responses:
                "200":
                    description: ""
        delete:
            description: Used for deleting load test preferences
            tags:
                - UserAPI
            summary: Handle DELETE request for load test preferences
            operationId: idDeleteLoadPreferences
            parameters:
                - x-go-name: UUID
                  name: uuid
                  in: query
                  type: string
                  format: uuid
            responses:
                "200":
                    description: ""
        get:
            description: Used for fetching load test preferences
            tags:
                - UserAPI
            summary: Handle GET request for load test preferences
            operationId: idGetLoadPreferences
            parameters:
                - x-go-name: UUID
                  name: uuid
                  in: query
                  type: string
                  format: uuid
            responses:
                "200":
                    description: ""
                    schema:
                        type: object
                        additionalProperties: false
    /api/user/schedules/{id}:
        get:
            description: Fetches and returns the schedule with the given id
            tags:
                - SchedulesAPI
            summary: Handle GET request for Schedules
            operationId: idGetSingleSchedule
            parameters:
                - description: id for a specific
                  name: id
                  in: path
                  required: true
                  type: string
                  format: uuid
                  x-go-name: ID
            responses:
                "200":
                    description: Returns a single schedules
        delete:
            responses:
                "200":
                    description: Returns List of saved schedules
            description: Deletes a schedule with the given id
            tags:
                - SchedulesAPI
            summary: Handle DELETE request for Schedules
            operationId: idDeleteSchedules
            parameters:
                - required: true
                  type: string
                  format: uuid
                  x-go-name: ID
                  description: id for a specific
                  name: id
                  in: path
    /api/v2/events:
        get:
            tags:
                - EventsAPI
            summary: Handle GET request for events.
            operationId: idGetEventStreamer
            responses:
                "200":
                    description: Returns all events
            description: |-
                ```search={description}``` If search is non empty then a search is performed on event description
                ```?category=[eventcategory] Returns event belonging to provided categories ```
                ```?action=[eventaction] Returns events belonging to provided actions ```
                ```?status={[read/unread]}``` Return events filtered on event status Default is unread````
                ```?severity=[eventseverity] Returns events belonging to provided severities ```
                ```?sort={field} order the records based on passed field, defaults to updated_at```
                ```?order={[asc/desc]}``` Default behavior is desc
                ```?page={page-number}``` Default page number is 1
                ```?pagesize={pagesize}``` Default pagesize is 25. To return all results: ```pagesize=all```
    /api/integrations/connections/{connectionId}:
        put:
            tags:
                - PutConnectionById
            summary: Handle PUT request for updating an existing connection by connection ID
            operationId: idPutConnectionById
            responses:
                "200":
                    description: Returns a single connection
            description: Updates existing connection using ID
        delete:
            summary: Handle DELETE request for deleting an existing connection by connection ID
            operationId: idDeleteConnection
            responses:
                "200":
                    description: ""
            description: Deletes existing connection
            tags:
                - DeleteConnection
    /api/telemetry/metrics/query/{connectionID}:
        get:
            description: Used to prometheus queries
            tags:
                - PrometheusAPI
            summary: Handle GET request for Prometheus Query
            operationId: idGetPrometheusQuery
            responses:
                "200":
                    description: ""
    /api/telemetry/metrics/static-board:
        get:
            tags:
                - PrometheusAPI
            summary: Handle GET request for Prometheus static board
            operationId: idGetPrometheusStaticBoard
            responses:
                "200":
                    description: Returns Prometheus static board
                    schema:
                        type: object
                        additionalProperties: false
            description: Used to fetch the static board
    /api/meshmodels/models/{model}/relationships:
        get:
            description: |-
                Example: ```/api/meshmodel/model/kubernetes/relationship```

                # Relationships can be further filtered through query parameter

                ```?version={version}```

                ```?order={field}``` orders on the passed field

                ```?sort={[asc/desc]}``` Default behavior is asc

                ```?page={page-number}``` Default page number is 1

                ```?pagesize={pagesize}``` Default pagesize is 25. To return all results: ```pagesize=all```
            tags:
                - GetAllMeshmodelRelationships
            summary: Handle GET request for getting meshmodel relationships of a specific model
            operationId: idGetAllMeshmodelRelationshipsByModel
            responses:
                "200":
                    description: Returns meshmodel relationships
    /api/pattern/{id}:
        get:
            tags:
                - PatternsAPI
            summary: Handle GET for a Meshery Pattern
            operationId: idGetMesheryPattern
            parameters:
                - description: id for a specific
                  name: id
                  in: path
                  required: true
                  type: string
                  format: uuid
                  x-go-name: ID
            responses:
                "200":
                    description: Returns a single meshery pattern
            description: Fetches the pattern with the given id
        delete:
            summary: Handle Delete for multiple Meshery Patterns
            operationId: idDeleteMesheryPattern
            parameters:
                - type: string
                  format: uuid
                  x-go-name: ID
                  description: id for a specific
                  name: id
                  in: path
                  required: true
            responses:
                "200":
                    description: ""
            description: DeleteMultiMesheryPatternsHandler deletes patterns with the given ids
            tags:
                - PatternsAPI
    /api/perf/profile/result:
        get:
            summary: Handles GET requests for perf results
            operationId: idGetAllPerfResults
            responses:
                "200":
                    description: Returns all performance results
            description: |-
                # Results can be further filtered through query parameter

                ```?order={field}``` orders on the passed field

                ```?page={page-number}``` Default page number is 0

                ```?pagesize={pagesize}``` Default pagesize is 10

                ```?search={}``` If search is non empty then a greedy search is performed

                ```?from={date}``` Date must be in yyyy-mm-dd format

                ```?to={date}``` Date must be in yyyy-mm-dd format
            tags:
                - PerfAPI
    /api/smi/results:
        get:
            description: |-
                # Results can be further filtered through query parameter

                ```?order={field}``` orders on the passed field

                ```?page={page-number}``` Default page number is 0

                ```?pagesize={pagesize}``` Default pagesize is 10

                ```?search={status|mesh_version|mesh_name|date|id}``` If search is non empty then a greedy search is performed
            tags:
                - Smi
            summary: Handle GET request for the results of all the smi conformance tests
            operationId: idFetchSmiResults
            responses:
                "200":
                    description: Returns SMI results
    /api/system/database:
        get:
            tags:
                - GetSystemDatabase
            summary: Handle GET request for getting summary about the system database.
            operationId: idGetSystemDatabase
            responses:
                "200":
                    description: Returns database summary
            description: |-
                # Tables can be further filtered through query parameter

                ```?order={field}``` orders on the passed field

                ```?sort={[asc/desc]}``` Default behavior is asc

                ```?page={page-number}``` Default page number is 1

                ```?pagesize={pagesize}``` Default pagesize is 10. To return all results: ```pagesize=all```

                ```?search={tablename}``` If search is non empty then a greedy search is performed
    /api/telemetry/metrics/grafana/query/{connectionID}:
        get:
            summary: Handle GET request for Grafana queries
            operationId: idGetGrafanaQuery
            responses:
                "200":
                    description: ""
            description: Used for handling Grafana queries
            tags:
                - GrafanaAPI
    /api/user/token:
        get:
            summary: Handle GET request for tokens
            operationId: idGetTokenProvider
            description: |-
                Returns token from the actual provider in a file
                response:
                200:
            tags:
                - UserAPI
        post:
            tags:
                - UserAPI
            summary: Handle POST request for tokens
            operationId: idPostTokenProvider
            description: |-
                Receives token from the actual provider
                response:
                200:
    /api/events/types:
        get:
            responses:
                "200":
                    description: ""
            tags:
                - EventsAPI
            summary: Handle GET request for available event categories and actions.
            operationId: idGetEventStreamer
    /api/pattern/clone/{id}:
        post:
            responses:
                "200":
                    description: ""
            description: 'Creates a local copy of a published pattern with id: id'
            tags:
                - PatternsAPI
            summary: Handle Clone for a Meshery Pattern
            operationId: idCloneMesheryPattern
    /api/user/performance/profiles/{id}/run:
        get:
            responses:
                "200":
                    description: ""
            description: Runs the load test with the given parameters
            tags:
                - PerformanceAPI
            summary: Handle GET request to run a performance test
            operationId: idRunPerformanceTest
            parameters:
                - name: Body
                  in: query
    /api/filter/clone/{id}:
        post:
            description: 'Creates a local copy of a published filter with id: id'
            tags:
                - FiltersAPI
            summary: Handle Clone for a Meshery Filter
            operationId: idCloneMesheryFilter
            responses:
                "200":
                    description: ""
    /api/meshmodel/validate:
        post:
            responses:
                "200":
                    description: ""
            description: Validate the given value with the given schema
            tags:
                - MeshmodelValidate
            summary: Handle POST request for validate
            operationId: idPostMeshModelValidate
    /api/system/adapters/available:
        get:
            description: Fetches and returns all the adapters available for deployment
            tags:
                - SystemAPI
            summary: Handle GET request for available adapters
            operationId: idGetAvailableAdapters
            responses:
                "200":
                    description: Return all the adapters
                    schema:
                        type: array
                        items: {}
    /api/system/kubernetes:
        post:
            description: Used to add kubernetes config to System
            tags:
                - SystemAPI
            summary: Handle POST request for Kubernetes Config
            operationId: idPostK8SConfig
            responses:
                "200":
                    description: Returns saved kubernetes config
        delete:
            tags:
                - SystemAPI
            summary: Handle DELETE request for Kubernetes Config
            operationId: idDeleteK8SConfig
            responses:
                "200":
                    description: ""
            description: Used to delete kubernetes config to System
    /api/workspaces/{id}/environments:
        get:
            description: |-
                ```?order={field}``` orders on the passed field

                ```?page={page-number}``` Default page number is 0

                ```?pagesize={pagesize}``` Default pagesize is 20

                ```?search={name}``` If search is non empty then a greedy search is performed

                ```?orgID={orgid}``` orgID is used to retrieve workspaces belonging to a particular org *required*

                ```?filter={{"assigned": true/false, "deleted_at": true/false}}``` defaults to assigned: false, deleted_at: false
            tags:
                - WorkspacesAPI
            summary: Handles GET for all Environments in a Workspace
            operationId: idGetWorkspaceEnvironments
            responses:
                "200":
                    description: Returns all environements
    /api/application/download/{id}/{sourcetype}:
        get:
            summary: Handle GET request for Meshery Application with of source content
            operationId: typeGetApplication
            parameters:
                - type: file
                  x-go-name: FormFile
                  name: Upload Yaml/Yml File
                  in: formData
            responses: {}
            description: Get the application source-content
            tags:
                - ApplicationsAPI
    /api/content/filter/share:
        post:
            responses:
                "403":
                    description: ""
                "500":
                    description: ""
                "200":
                    description: ""
            description: Used to share filters with others
            tags:
                - ShareContent
            summary: Handle POST request for Sharing content
            operationId: idPostShareContent
    /api/events:
        get:
            responses:
                "200":
                    description: ""
            description: |-
                Listens for events across all of Meshery's components like adapters and server, streaming them to the UI via Server Side Events
                This API call never terminates and establishes a persistent keep-alive connection over which `EventsResponse`s are pushed.
            tags:
                - EventsAPI
            summary: Handle GET request for events.
            operationId: idGetEventStreamer
    /api/integrations/connections/{connectionKind}:
        get:
            description: |-
                ```?order={field}``` orders on the passed field

                ```?search={}``` If search is non empty then a greedy search is performed

                ```?page={page-number}``` Default page number is 0

                ```?pagesize={pagesize}``` Default pagesize is 10
            tags:
                - GetConnectionsByKind
            summary: Handle GET request for getting all connections for a given kind.
            operationId: idGetConnectionsByKind
            responses:
                "200":
                    headers:
                        page_size:
                            format: int64
                            type: integer
                        total_count:
                            type: integer
                            format: int64
                        connections:
                            items: {}
                            type: array
                        page:
                            type: integer
                            format: int64
                    description: ""
        put:
            description: Updates existing connection
            tags:
                - PutConnection
            summary: Handle PUT request for updating an existing connection
            operationId: idPutConnection
            responses:
                "200":
                    description: ""
    /api/meshmodel/generate:
        post:
            tags:
                - MeshmodelComponentGenerate
            summary: Handle POST request for component generation
            operationId: idPostMeshModelComponentGenerate
            responses:
                "200":
                    description: ""
            description: Generates Meshery Components for the given payload
    /api/meshmodels/categories:
        get:
            description: |-
                ```?order={field}``` orders on the passed field

                ```?sort={[asc/desc]}``` Default behavior is asc

                ```?search={categoryName}``` If search is non empty then a greedy search is performed

                ```?page={page-number}``` Default page number is 1

                ```?pagesize={pagesize}``` Default pagesize is 25. To return all results: ```pagesize=all```
            tags:
                - GetMeshmodelCategories
            summary: Handle GET request for getting all meshmodel categories
            operationId: idGetMeshmodelCategories
            responses:
                "200":
                    description: Returns meshmodel categories
    /api/environments/{id}:
        get:
            responses:
                "200":
                    description: Returns environment
            description: |-
                ```?orgID={orgid}``` orgID is used to retrieve environments belonging to a particular org

                Returns Environment info
            tags:
                - EnvironmentAPI
            summary: Handle GET for Environment info by ID
            operationId: idGetEnvironmentByIDHandler
        put:
            responses:
                "200":
                    description: Returns environment
            description: Updates a environment
            tags:
                - PostEnvironment
            summary: Handle PUT request for updating a environment
            operationId: idUpdateEnvironmentHandler
        delete:
            description: Handle DELETE for Environment based on ID
            tags:
                - EnvironmentAPI
            operationId: idDeleteEnvironmentHandler
            responses:
                "201":
                    description: ""
    /api/meshmodel/components/register:
        post:
            description: Validate the given value with the given schema
            tags:
                - MeshmodelValidate
            summary: Handle POST request for registering meshmodel components.
            operationId: idPostMeshModelValidate
            responses:
                "200":
                    description: ""
    /api/meshmodels/categories/{category}/components:
        get:
            operationId: idGetMeshmodelComponentByCategory
            responses:
                "200":
                    description: Return meshmoddel components with the count of duplicates
            description: |-
                # Components can be further filtered through query parameter

                ```?version={version}```

                ```?trim={[true]}``` When trim is set to true, the underlying schemas are not returned for entities

                ```?apiVersion={apiVersion}``` If apiVersion is unspecified then all models are returned

                ```?order={field}``` orders on the passed field

                ```?search={componentname}``` If search is non empty then a greedy search is performed

                ```?sort={[asc/desc]}``` Default behavior is asc

                ```?page={page-number}``` Default page number is 1

                ```?pagesize={pagesize}``` Default pagesize is 25. To return all results: ```pagesize=all```

                ```?annotations={["true"/"false"/]}``` If "true" components having "isAnnotation" property as true are "only" returned, If false all components except "annotations" are returned. Any other value of the query parameter results in both annoations as well as non-annotation components being returned.
            tags:
                - GetMeshmodelComponentByCategory
            summary: Handle GET request for getting meshmodel components of a specific model and category.
    /api/meshmodels/categories/{category}/models/{model}:
        get:
            description: |-
                ```?version={version}``` If version is unspecified then all models are returned

                ```?order={field}``` orders on the passed field

                ```?search={[true/false]}``` If search is true then a greedy search is performed

                ```?sort={[asc/desc]}``` Default behavior is asc

                ```?page={page-number}``` Default page number is 1

                ```?pagesize={pagesize}``` Default pagesize is 25. To return all results: ```pagesize=all```
            tags:
                - GetMeshmodelModelsByCategoriesByModel
            summary: Handle GET request for getting all meshmodel models for a given category. The component type/model name should be lowercase like "kubernetes", "istio"
            operationId: idGetMeshmodelModelsByCategoriesByModel
            responses:
                "200":
                    description: Return meshmodel models with the count of duplicates
    /api/system/meshsync/resources/kinds:
        get:
            summary: Handle GET request for meshsync discovered resources kinds
            operationId: idGetMeshSyncResourcesKinds
            responses:
                "200":
                    description: Returns MeshSync Resources Kinds
            description: |-
                ```?clusterId={[clusterId]}``` clusterId is array of string values. Required.

                ```?page = {page-number}``` Default page number is 1

                ```?pagesize = {pagesize}``` Default pagesize is 25. To return all results: ```pagesize=all```

                ```?search = {componentname}``` If search is non empty then a greedy search is performed

                ```?order = {field}``` orders on the passed field
            tags:
                - GetMeshSyncResourcesKinds
    /api/identity/orgs:
        get:
            tags:
                - OrganizationsAPI
            summary: Handles GET for all Organizations
            operationId: idGetOrganizations
            responses:
                "200":
                    description: Returns all orgs
            description: |-
                ```?order={field}``` orders on the passed field

                ```?page={page-number}``` Default page number is 0

                ```?pagesize={pagesize}``` Default pagesize is 20

                ```?search={environments_name}``` If search is non empty then a greedy search is performed

                ```?filter={condition}```
    /api/meshmodels/models/{model}/components/{name}:
        get:
            description: |-
                Example: ```/api/meshmodels/models/kubernetes/components/Namespace```
                Components can be further filtered through query parameter

                ```?version={version}``` If version is unspecified then all model versions are returned

                ```?apiVersion={apiVersion}``` If apiVersion is unspecified then all components are returned

                ```?order={field}``` orders on the passed field

                ```?sort={[asc/desc]}``` Default behavior is asc

                ```?search={[true/false]}``` If search is true then a greedy search is performed

                ```?page={page-number}``` Default page number is 1

                ```?pagesize={pagesize}``` Default pagesize is 25. To return all results: ```pagesize=all```

                ```?annotations={["true"/"false"/]}``` If "true" components having "isAnnotation" property as true are "only" returned, If false all components except "annotations" are returned. Any other value of the query parameter results in both annoations as well as non-annotation components being returned. returned.
            tags:
                - GetMeshmodelComponentsByNameByModel
            summary: Handle GET request for getting meshmodel components of a specific  model.
            operationId: idGetMeshmodelComponentsByNameByModel
            responses:
                "200":
                    description: Return meshmoddel components with the count of duplicates
    /api/telemetry/metrics/config:
        get:
            responses:
                "200":
                    description: Returns prometheus configuration
            description: Used for fetching Prometheus configuration
            tags:
                - PrometheusAPI
            summary: Handle GET for Prometheus configuration
            operationId: idGetPrometheusConfig
        post:
            description: Used for persisting Prometheus configuration
            tags:
                - PrometheusAPI
            summary: Handle POST for Prometheus configuration
            operationId: idPostPrometheusConfig
            parameters:
                - name: prometheusURL
                  in: body
                  schema:
                    type: string
                  x-go-name: PrometheusURL
            responses:
                "200":
                    description: ""
        delete:
            description: Used for deleting Prometheus configuration
            tags:
                - PrometheusAPI
            summary: Handle DELETE for Prometheus configuration
            operationId: idDeletePrometheusConfig
            responses:
                "200":
                    description: ""
    /api/telemetry/metrics/grafana/config:
        get:
            description: Used for fetching Grafana configuration
            tags:
                - GrafanaAPI
            summary: Handle GET request for Grafana configuration
            operationId: idGetGrafanaConfig
            responses:
                "200":
                    description: Returns Grafana configs
        post:
            summary: Handle POST request for Grafana configuration
            operationId: idPostGrafanaConfig
            parameters:
                - required: true
                  schema: {}
                  name: Body
                  in: body
            responses:
                "200":
                    description: ""
            description: Used for persisting Grafana configuration
            tags:
                - GrafanaAPI
        delete:
            description: Used for Delete Grafana configuration
            tags:
                - GrafanaAPI
            summary: Handle DELETE request for Grafana configuration
            operationId: idDeleteGrafanaConfig
            responses:
                "200":
                    description: ""
    /api/telemetry/metrics/grafana/ping/{connectionID}:
        get:
            description: Used to initiate a Grafana ping
            tags:
                - GrafanaAPI
            summary: Handle GET request for Grafana ping
            operationId: idGetGrafanaPing
            responses:
                "200":
                    description: ""
    /api/user/performance/profiles/{id}/results:
        get:
            operationId: idGETProfileResults
            parameters:
                - name: id
                  in: path
                  required: true
                  type: string
                  format: uuid
                  x-go-name: ID
                  description: id for a specific
            responses:
                "200":
                    description: Returns all performance results
            description: |-
                Fetches pages of results from provider for the given id

                ```?order={field}``` orders on the passed field

                ```?page={page-number}``` Default page number is 0

                ```?pagesize={pagesize}``` Default pagesize is 10

                ```?search={result_name|mesh|url}``` If search is non empty then a greedy search is performed
            tags:
                - PerformanceAPI
            summary: Handle GET request for results of a profile
    /api/filter/{id}:
        get:
            tags:
                - FiltersAPI
            summary: Handle GET request for a Meshery Filter
            operationId: idGetMesheryFilter
            parameters:
                - name: id
                  in: path
                  required: true
                  type: string
                  format: uuid
                  x-go-name: ID
                  description: id for a specific
            responses:
                "200":
                    description: Returns a single meshery filter
            description: Fetches the Meshery Filter with the given id
        delete:
            description: 'Deletes a meshery filter with ID: id'
            tags:
                - FiltersAPI
            summary: Handle Delete for a Meshery Filter
            operationId: idDeleteMesheryFilter
            parameters:
                - name: id
                  in: path
                  required: true
                  type: string
                  format: uuid
                  x-go-name: ID
                  description: id for a specific
            responses:
                "200":
                    description: ""
    /api/meshmodels/categories/{category}/models:
        get:
            responses:
                "200":
                    description: Return meshmodel models with the count of duplicates
            description: |-
                ```?version={version}``` If version is unspecified then all models are returned

                ```?order={field}``` orders on the passed field

                ```?search={modelname}``` If search is non empty then a greedy search is performed

                ```?sort={[asc/desc]}``` Default behavior is asc

                ```?page={page-number}``` Default page number is 1

                ```?pagesize={pagesize}``` Default pagesize is 25. To return all results: ```pagesize=all```
                ```?annotations={["true"/"false"/]}``` When this query parameter is "true", only models with the "isAnnotation" property set to true are returned. When  this query parameter is "false", all models except those considered to be annotation models are returned. Any other value of the query parameter results in both annoations as well as non-annotation models being returned.
            tags:
                - GetMeshmodelModelsByCategories
            summary: Handle GET request for getting all meshmodel models for a given category. The component type/model name should be lowercase like "kubernetes", "istio"
            operationId: idGetMeshmodelModelsByCategories
    /api/meshmodels/relationships/evaluate:
        post:
            description: Handle POST request for evaluating relationships in the provided design file by running a set of provided evaluation queries on the design file
            tags:
                - EvaluateRelationshipPolicy
            operationId: relationshipPolicyEvalPayloadWrapper
            responses: {}
    /api/pattern/download/{id}:
        get:
            description: Fetches the pattern with the given id
            tags:
                - PatternsAPI
            summary: Handle GET for a Meshery Pattern
            operationId: idGetMesheryPattern
            parameters:
                - type: string
                  format: uuid
                  x-go-name: ID
                  description: id for a specific
                  name: id
                  in: path
                  required: true
            responses:
                "200":
                    description: Returns a single meshery pattern
    /api/telemetry/metrics/board_import:
        post:
            description: Used for importing Grafana board for Prometheus
            tags:
                - PrometheusAPI
            summary: Handle POST request for Prometheus board import
            operationId: idPostPrometheusBoardImport
            responses:
                "200":
                    description: Response for prometheus board import
    /api/integrations/connections/status:
        get:
            description: Get all connections status
            tags:
                - GetConnectionsStatus
            summary: Handle GET request for getting all connections status
            operationId: idGetConnectionsStatus
            responses:
                "200":
                    description: Returns all connections Status
    /api/pattern/download/{id}/{sourcetype}:
        get:
            tags:
                - PatternsAPI
            summary: Handle GET request for Meshery Patterns with of source content
            operationId: typeGetPatternSourceContent
            responses:
                "200":
                    description: Returns Design Source Content
                    schema:
                        items:
                            type: integer
                            format: uint8
                        type: array
            description: Get the pattern source-content
    /api/system/adapter/manage:
        post:
            tags:
                - SystemAPI
            summary: Handle POST requests to persist adapter config
            operationId: idPostAdapterConfig
            parameters:
                - x-go-name: MeshLocationURL
                  name: meshLocationURL
                  in: body
                  schema:
                    type: string
            responses:
                "200":
                    description: Returns all the meshery adapters
                    schema:
                        type: array
                        items: {}
            description: Used to persist adapter config
        delete:
            description: Used to delete adapter configuration
            tags:
                - SystemAPI
            summary: Handle DELETE requests to delete adapter config
            operationId: idDeleteAdapterConfig
            parameters:
                - type: string
                  x-go-name: Adapter
                  name: adapter
                  in: query
            responses:
                "200":
                    description: ""
    /api/workspaces/{id}/environments/{environmentID}:
        post:
            description: Adds an environment to a workspace
            tags:
                - WorkspacesAPI
            summary: Handle POST request for adding an environment to a workspace
            operationId: idAddEnvironmentToWorkspace
            responses:
                "201":
                    description: Returns workspace environments mapping
        delete:
            tags:
                - WorkspacesAPI
            summary: Handle DELETE request for removing an environment from a workspace
            operationId: idRemoveEnvironmentFromWorkspace
            responses:
                "201":
                    description: Returns workspace environments mapping
            description: Removes an environment from a workspace
definitions:
    AuthenticateOKBody:
        description: AuthenticateOKBody authenticate o k body
        x-go-package: github.com/docker/docker/api/types/registry
    ContainerUpdateOKBody:
        description: ContainerUpdateOKBody OK response to ContainerUpdate operation
        x-go-package: github.com/docker/docker/api/types/container
    ErrorResponse:
        title: ErrorResponse Represents an error.
        x-go-package: github.com/docker/docker/api/types
    ServiceUpdateResponse:
        description: ServiceUpdateResponse service update response
        x-go-package: github.com/docker/docker/api/types
    CreateResponse:
        description: OK response to ContainerCreate operation
        title: CreateResponse ContainerCreateResponse
        x-go-package: github.com/docker/docker/api/types/container
    PluginConfig:
        x-go-package: github.com/docker/docker/api/types
        title: PluginConfig The config of a plugin.
    Port:
        description: Port An open port on a container
        x-go-package: github.com/docker/docker/api/types
    HistoryResponseItem:
        description: HistoryResponseItem individual image layer information in response to ImageHistory operation
        x-go-package: github.com/docker/docker/api/types/image
    IdResponse:
        description: IDResponse Response to an API call that returns just an Id
        x-go-name: IDResponse
        x-go-package: github.com/docker/docker/api/types
    PluginConfigArgs:
        description: PluginConfigArgs plugin config args
        x-go-package: github.com/docker/docker/api/types
    PluginSettings:
        title: PluginSettings Settings that can be modified by users.
        x-go-package: github.com/docker/docker/api/types
    PluginMount:
        description: PluginMount plugin mount
        x-go-package: github.com/docker/docker/api/types
    UsageData:
        description: |-
            UsageData Usage details about the volume. This information is used by the
            `GET /system/df` endpoint, and omitted in other endpoints.
        x-go-package: github.com/docker/docker/api/types/volume
    WaitResponse:
        description: OK response to ContainerWait operation
        title: WaitResponse ContainerWaitResponse
        x-go-package: github.com/docker/docker/api/types/container
    WaitExitError:
        description: WaitExitError container waiting error, if any
        x-go-package: github.com/docker/docker/api/types/container
    GraphDriverData:
        description: |-
            GraphDriverData Information about the storage driver used to store the container's and
            image's filesystem.
        x-go-package: github.com/docker/docker/api/types
    ImageDeleteResponseItem:
        description: ImageDeleteResponseItem image delete response item
        x-go-package: github.com/docker/docker/api/types
    ImageSummary:
        description: ImageSummary image summary
        x-go-package: github.com/docker/docker/api/types
    PluginConfigInterface:
        description: PluginConfigInterface The interface between Docker and the plugin
        x-go-package: github.com/docker/docker/api/types
    PluginConfigUser:
        description: PluginConfigUser plugin config user
        x-go-package: github.com/docker/docker/api/types
    PluginDevice:
        x-go-package: github.com/docker/docker/api/types
        description: PluginDevice plugin device
    Volume:
        description: Volume volume
        x-go-package: github.com/docker/docker/api/types/volume
    ContainerChangeResponseItem:
        description: ContainerChangeResponseItem change item in response to ContainerChanges operation
        x-go-package: github.com/docker/docker/api/types/container
    Plugin:
        description: Plugin A plugin for the Engine API
        x-go-package: github.com/docker/docker/api/types
    PluginConfigNetwork:
        description: PluginConfigNetwork plugin config network
        x-go-package: github.com/docker/docker/api/types
    PluginConfigRootfs:
        description: PluginConfigRootfs plugin config rootfs
        x-go-package: github.com/docker/docker/api/types
    PluginEnv:
        description: PluginEnv plugin env
        x-go-package: github.com/docker/docker/api/types
    PluginInterfaceType:
        description: PluginInterfaceType plugin interface type
        x-go-package: github.com/docker/docker/api/types
    CreateOptions:
        title: CreateOptions VolumeConfig
        x-go-package: github.com/docker/docker/api/types/volume
        description: Volume configuration
    ListResponse:
        title: ListResponse VolumeListResponse
        x-go-package: github.com/docker/docker/api/types/volume
        description: Volume list response
    PluginConfigLinux:
        description: PluginConfigLinux plugin config linux
        x-go-package: github.com/docker/docker/api/types
    ContainerTopOKBody:
        x-go-package: github.com/docker/docker/api/types/container
        description: ContainerTopOKBody OK response to ContainerTop operation
responses:
    workspacesResponseWrapper:
        description: Returns workspaces
    k8sContextsRespWrapper:
        description: Returns kubernetes context list
    performanceProfilesResponseWrapper:
        description: Returns all the performance profiles
    prometheusBoardImportRespWrapper:
        description: Response for prometheus board import
    userInfo:
        description: Returns user info
    k8sConfigRespWrapper:
        description: Returns saved kubernetes config
    listProvidersRespWrapper:
        description: Returns a list of available providers
        schema:
            type: object
            additionalProperties: false
    singleScheduleResponseWrapper:
        description: Returns a single schedules
    smiResultsResponseWrapper:
        description: Returns SMI results
    environmentResponseWrapper:
        description: Returns environment
    eventResponseWrapper:
        description: Returns event
    meshmodelCategoriesResponseWrapper:
        description: Returns meshmodel categories
    perfTestPrefsRespWrapper:
        description: Returns Perf test preference
    perfSingleResultRespWrapper:
        description: Returns Single test result
    performanceProfileResponseWrapper:
        description: Returns a single performance profile
    ConnectionPage:
        description: ""
        headers:
            page_size:
                type: integer
                format: int64
            total_count:
                type: integer
                format: int64
            connections:
                type: array
                items: {}
            page:
                type: integer
                format: int64
    keys:
        description: Returns users Keys
        headers:
            Body: {}
    meshmodelModelsDuplicateResponseWrapper:
        description: Return meshmodel models with the count of duplicates
    meshmodelModelsResponseWrapper:
        description: Returns meshmodel models
    ConnectionStatus:
        description: ""
        schema: {}
    mesheryApplicationResponseWrapper:
        description: Fetches a single Meshery Application
    mesheryApplicationTypesResponseWrapper:
        description: Returns Meshery application types
        schema:
            type: array
            items: {}
    meshmodelComponentsDuplicateResponseWrapper:
        description: Return meshmoddel components with the count of duplicates
    systemK8sContextsResponseWrapper:
        description: Returns K8s contexts
    workspaceResponseWrapper:
        description: Returns workspace
    environmentsResponseWrapper:
        description: Returns all environements
    mesheryFiltersResponseWrapper:
        description: Returns all meshery filters
    meshmodelRegistrantsResponseWrapper:
        description: Returns meshmodel registrants
    meshsyncResourcesResponseWrapper:
        description: Returns MeshSync resources
    EventsResponse:
        description: ""
        headers:
            total_count:
                type: integer
                format: int64
            count_by_severity_level:
                type: array
                items: {}
            events:
                type: array
                items: {}
            page:
                type: integer
                format: int64
            page_size:
                type: integer
                format: int64
    mesheryPatternSourceContentResponseWrapper:
        description: Returns Design Source Content
        schema:
            type: array
            items:
                format: uint8
                type: integer
    userLoadTestPrefsRespWrapper:
        description: Returns User Load Test Preferencee
    grafanaBoardsResponseWrapper:
        description: Returns Grafana boards and panels
        schema:
            type: array
            items: {}
    mesheryPatternsResponseWrapper:
        description: Returns all meshery patterns
    performanceResultsResponseWrapper:
        description: Returns all performance results
    RelationshipDefinition:
        description: |-
            https://docs.google.com/drawings/d/1_qzQ_YxvCWPYrOBcdqGMlMwfbsZx96SBuIkbn8TfKhU/edit?pli=1
            see RELATIONSHIPDEFINITIONS table in the diagram
        schema:
            type: object
            additionalProperties: false
        headers:
            selectors: {}
            apiVersion:
                type: string
            displayhostname:
                type: string
            evaluationQuery:
                type: string
            metadata: {}
            model: {}
            hostID: {}
            hostname:
                type: string
            kind:
                type: string
            subType:
                type: string
    mesheryConnectionsStatusPage:
        description: Returns all connections Status
    meshmodelPoliciesResponseWrapper:
        description: Returns meshmodel policies
    users:
        description: Returns all users info
    v1ServicesMapResponseWrapper:
        description: Returns a map for v1 services
        schema:
            type: object
            additionalProperties: false
    Model:
        description: ""
        schema:
            type: object
            additionalProperties: false
        headers:
            components:
                type: array
                items: {}
            displayhostname:
                type: string
            metadata: {}
            name:
                type: string
            relationships:
                type: array
                items: {}
            version:
                type: string
            category: {}
            displayName:
                type: string
            hostID: {}
            hostname:
                type: string
    mesheryApplicationsResponseWrapper:
        description: Returns all meshery applications
    mesheryFilterResponseWrapper:
        description: Returns a single meshery filter
    mesheryVersionRespWrapper:
        description: Returns Meshery version
    eventsResponseWrapper:
        description: Returns all events
    prometheusStaticBoardRespWrapper:
        description: Returns Prometheus static board
        schema:
            type: object
            additionalProperties: false
    Category:
        description: ""
        schema:
            type: object
            additionalProperties: false
        headers:
            metadata: {}
            name:
                type: string
    loadTestPreferencesWrapper:
        description: ""
        schema:
            type: object
            additionalProperties: false
    mesheryPatternResponseWrapper:
        description: Returns a single meshery pattern
    meshmodelComponentsResponseWrapper:
        description: Return meshmodel components
    FilterFilesResponseWrapper:
        description: Returns the response of the Filter files
    prometheusConfigResponseWrapper:
        description: Returns prometheus configuration
    schedulesResponseWrapper:
        description: Returns List of saved schedules
    workspaceEnvironmentsMappingResponseWrapper:
        description: Returns workspace environments mapping
    ComponentDefinition:
        description: ""
        schema:
            type: object
            additionalProperties: false
        headers:
            hostID: {}
            hostname:
                type: string
            kind:
                type: string
            metadata: {}
            model: {}
            displayName:
                type: string
            displayhostname:
                type: string
            schema:
                type: string
            apiVersion:
                type: string
            format: {}
    ConnectionsStatusPage:
        description: ""
        headers:
            connections_status:
                type: array
                items: {}
    mesheryConnectionResponseWrapper:
        description: Returns a single connection
    systemAdaptersRespWrapper:
        schema:
            type: array
            items: {}
        description: Return all the adapters
    orgsResponseWrapper:
        description: Returns all orgs
    systemDatabaseResponseWrapper:
        description: Returns database summary
    Connection:
        description: ""
        schema:
            type: object
            additionalProperties: false
        headers:
            deleted_at: {}
            id: {}
            metadata: {}
            name:
                type: string
            type:
                type: string
            updated_at:
                type: string
                format: date-time
            credential_id: {}
            environments:
                type: array
                items: {}
            kind:
                type: string
            status: {}
            sub_type:
                type: string
            user_id: {}
            created_at:
                type: string
                format: date-time
    applicationFilesResponseWrapper:
        description: Returns the response of the application files
    meshsyncResourcesKindsResponseWrapper:
        description: Returns MeshSync Resources Kinds
    noContentWrapper:
        description: ""
    workspaceDesignsMappingResponseWrapper:
        description: Returns workspace designs mapping
    grafanaConfigResponseWrapper:
        description: Returns Grafana configs
    mesheryAdaptersRespWrapper:
        description: Returns all the meshery adapters
        schema:
            type: array
            items: {}
    mesheryConnectionsResponseWrapper:
        description: Returns all connections
    meshmodelRelationshipsResponseWrapper:
        description: Returns meshmodel relationships
securityDefinitions:
    token:
        type: apiKey
        name: token
        in: cookie
security:
    - token:
        - '[]'
