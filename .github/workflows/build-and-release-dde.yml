name: Docker Extension for Meshery
on:
  workflow_call:
  # push:
  #   tags:
  #     - "v*"
  workflow_dispatch:
    inputs:
      release-ver:
        description: "Stable Release Version"
        required: true
        default: "v"
      stripped-release-ver:
        description: "Stripped Stable Release Version"
        required: true
        default: ""
      release-channel:
        description: "Release Channel"
        required: true
        default: "edge"

env:
  GIT_VERSION: ${{github.event.inputs.release-ver}}
  GIT_STRIPPED_VERSION: ${{github.event.inputs.stripped-release-ver}}
  RELEASE_CHANNEL: ${{github.event.inputs.release-channel}}
  GIT_TAG: ${{ github.event.release.tag_name }}

permissions:
  contents: read

jobs:
  print-inputs:
    runs-on: ubuntu-22.04
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@5c7944e73c4c2a096b17a9cb74d65b6c2bbafbde # v2.9.1
        with:
          egress-policy: audit

      - run: |
          echo "Dispatched GIT_VERSION: ${{github.event.inputs.release-ver}}"
          echo " Dispatched GIT_STRIPPED_VERSION: ${{github.event.inputs.stripped-release-ver}}"
          echo "Env RELEASE_CHANNEL: ${{env.RELEASE_CHANNEL}}"
          echo "Env GIT_VERSION: ${{env.GIT_VERSION}}"
          echo "Env GIT_STRIPPED_VERSION: ${{env.GIT_STRIPPED_VERSION}}"
          echo "Env GIT_TAG: ${{ github.event.release.tag_name }}"

  docker-extension:
    runs-on: ubuntu-22.04
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@5c7944e73c4c2a096b17a9cb74d65b6c2bbafbde # v2.9.1
        with:
          egress-policy: audit

      - name: Checkout 🛎️ repo
        uses: actions/checkout@61b9e3751b92087fd0b06925ba6dd6314e06f089 # master
      - name: Identify Release Values
        if: "${{ github.event.inputs.release-ver}} != 'v' }}"
        run: |
          # GIT_TAG=`git symbolic-ref HEAD`
          if [[ ${GITHUB_REF} = refs/tags* ]]
          then
            echo RELEASE_CHANNEL=stable >> $GITHUB_ENV
          else
            echo RELEASE_CHANNEL=edge >> $GITHUB_ENV
          fi
          LATEST_VERSION=$(git ls-remote --sort='v:refname' --tags | tail -1 | cut -f2 | sed 's/refs\/tags\///g') >> $GITHUB_ENV
          GIT_VERSION=$(git ls-remote --sort='v:refname' --tags | tail -1 | cut -f2 | sed 's/refs\/tags\///g') >> $GITHUB_ENV
          GIT_STRIPPED_VERSION=$(git ls-remote --sort='v:refname' --tags | tail -1 | cut -f2 | sed 's/refs\/tags\///g' | cut -c2-)
          echo "Release channel determined to be $RELEASE_CHANNEL"
          echo "GIT_LATEST=$LATEST_VERSION" >> $GITHUB_ENV
          echo "GIT_VERSION=$GIT_VERSION" >> $GITHUB_ENV
          echo "GIT_STRIPPED_VERSION=$GIT_STRIPPED_VERSION" >> $GITHUB_ENV
        shell: bash

      - name: Set up QEMU
        uses: docker/setup-qemu-action@49b3bc8e6bdd4a60e6116a5414239cba5943d3cf # v3.2.0
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@988b5a0280414f521da01fcc63a27aeeb4b104db # v3.6.1
      - name: Docker Meta
        id: meta
        uses: docker/metadata-action@b2391d37b4157fa4aa2e118d643f417910ff3242 # v3.8.0
        with:
          images: meshery/docker-extension-meshery
          flavor: |
            latest=true
          tags: |
            type=raw,value=${{env.RELEASE_CHANNEL}}-{{sha}}
            type=semver,pattern={{version}},value=${{env.GIT_STRIPPED_VERSION}}
            type=raw,value=${{env.RELEASE_CHANNEL}}-{{tag}},enable=${{ startsWith(github.ref, 'refs/tags/v') }}
            type=raw,value=${{env.RELEASE_CHANNEL}}-latest
            type=raw,value=${{env.RELEASE_CHANNEL}}-${{env.GIT_VERSION}},enable=${{ startsWith(github.ref, 'refs/tags/v') }}
      - name: Login to DockerHub
        uses: docker/login-action@465a07811f14bebb1938fbed4728c6a1ff8901fc # v2.2.0
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build and Push
        uses: docker/build-push-action@ac9327eae2b366085ac7f6a2d02df8aa8ead720a # v2.10.0
        with:
          context: "{{defaultContext}}:install/docker-extension"
          push: true
          build-args: |
            GIT_STRIPPED_VERSION=${{env.GIT_STRIPPED_VERSION}}
            GIT_VERSION=${{env.GIT_VERSION}}
            RELEASE_CHANNEL=${{env.RELEASE_CHANNEL}}
          tags: ${{ steps.meta.outputs.tags }}
          platforms: linux/amd64,linux/arm64

      # -
      #   name: Docker Hub Description
      #   uses: peter-evans/dockerhub-description@v3
      #   with:
      #     username: ${{ secrets.DOCKER_USERNAME }}
      #     password: ${{ secrets.DOCKER_PASSWORD }}
      #     repository: meshery/meshery-docker-extension
      #     readme-filepath: /install/docker-extension/README.md

