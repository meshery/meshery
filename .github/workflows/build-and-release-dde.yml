name: Docker Extension for Meshery
on:
  workflow_call:
  workflow_dispatch:
    inputs:
      release-ver:
        description: "Stable Release Version"
        required: true
        default: "v"
      stripped-release-ver:
        description: "Stripped Stable Release Version"
        required: true
        default: ""
      release-channel:
        description: "Release Channel"
        required: true
        default: "edge"

env:
  GIT_VERSION: ${{ github.event.inputs.release-ver }}
  GIT_STRIPPED_VERSION: ${{ github.event.inputs.stripped-release-ver }}
  RELEASE_CHANNEL: ${{ github.event.inputs.release-channel }}
  GIT_TAG: ${{ github.event.release.tag_name }}

jobs:
  print-inputs:
    runs-on: ubuntu-24.04
    steps:
      - run: |
          echo "Dispatched GIT_VERSION: ${{ github.event.inputs.release-ver }}"
          echo "Dispatched GIT_STRIPPED_VERSION: ${{ github.event.inputs.stripped-release-ver }}"
          echo "Env RELEASE_CHANNEL: ${{ env.RELEASE_CHANNEL }}"
          echo "Env GIT_VERSION: ${{ env.GIT_VERSION }}"
          echo "Env GIT_STRIPPED_VERSION: ${{ env.GIT_STRIPPED_VERSION }}"
          echo "Env GIT_TAG: ${{ github.event.release.tag_name }}"

  docker-extension:
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout 🛎️ repo
        uses: actions/checkout@v4
      - name: Identify Release Values
        if: ${{ github.event.inputs.release-ver != 'v' }}
        run: |
          if [[ "${GITHUB_REF}" == refs/tags/* ]]; then
            echo "RELEASE_CHANNEL=stable" >> $GITHUB_ENV
          else
            echo "RELEASE_CHANNEL=edge" >> $GITHUB_ENV
          fi

          LATEST_VERSION=$(git ls-remote --sort='v:refname' --tags | tail -1 | cut -f2 | sed 's/refs\/tags\///g')
          GIT_VERSION=$LATEST_VERSION
          GIT_STRIPPED_VERSION=$(echo "$LATEST_VERSION" | cut -c2-)

          echo "GIT_LATEST=$LATEST_VERSION" >> $GITHUB_ENV
          echo "GIT_VERSION=$GIT_VERSION" >> $GITHUB_ENV
          echo "GIT_STRIPPED_VERSION=$GIT_STRIPPED_VERSION" >> $GITHUB_ENV
          echo "Release channel determined to be $RELEASE_CHANNEL"

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Docker Meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: meshery/docker-extension-meshery
          flavor: |
            latest=true
          tags: |
            type=raw,value=${{ env.RELEASE_CHANNEL }}-${{ github.sha }}
            type=semver,pattern={{version}},value=${{ env.GIT_STRIPPED_VERSION }}
            type=raw,value=${{ env.RELEASE_CHANNEL }}-${{ github.ref_name }},enable=${{ startsWith(github.ref, 'refs/tags/v') }}
            type=raw,value=${{ env.RELEASE_CHANNEL }}-latest
            type=raw,value=${{ env.RELEASE_CHANNEL }}-${{ env.GIT_VERSION }},enable=${{ startsWith(github.ref, 'refs/tags/v') }}
      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build and Push
        uses: docker/build-push-action@v6
        with:
          context: ./install/docker-extension
          push: true
          build-args: |
            GIT_STRIPPED_VERSION=${{ env.GIT_STRIPPED_VERSION }}
            GIT_VERSION=${{ env.GIT_VERSION }}
            RELEASE_CHANNEL=${{ env.RELEASE_CHANNEL }}
          tags: ${{ steps.meta.outputs.tags }}
          platforms: linux/amd64,linux/arm64

      # -
      #   name: Docker Hub Description
      #   uses: peter-evans/dockerhub-description@v3
      #   with:
      #     username: ${{ secrets.DOCKER_USERNAME }}
      #     password: ${{ secrets.DOCKER_PASSWORD }}
      #     repository: meshery/meshery-docker-extension
      #     readme-filepath: /install/docker-extension/README.md
