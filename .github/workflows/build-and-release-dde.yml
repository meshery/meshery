name: Docker Extension for Meshery
on:
  push:
    tags:
      - 'v*'  
    branches:
      - 'master'
    paths-ignore:
      - 'docs/**'
      #- '.github/**'
  workflow_dispatch:
    inputs:
      release-ver:
          description: 'Stable Release Version'     
          required: true
          default: 'v0.6.0-rc-'
      stripped-release-ver:
          description: 'Stripped Stable Release Version'     
          required: true
          default: '0.6.0-rc-'
      release-channel:
          description: 'Release Channel'     
          required: true
          default: 'edge'

env:
  GIT_VERSION: ${{github.event.inputs.release-ver}}
  GIT_STRIPPED_VERSION: ${{github.event.inputs.stripped-release-ver}}
  RELEASE_CHANNEL: ${{github.event.inputs.release-channel}}

jobs:
  docker-extension:
    runs-on: ubuntu-latest
    steps:
      - 
        name: Checkout repo
        uses: actions/checkout@v3
      # - 
      #   name: Identify Release Values
      #   run: |
      #     GIT_REF=`git symbolic-ref HEAD`
      #     if [[ $GIT_REF = refs/tags* ]]
      #     then
      #     RELEASE_CHANNEL="stable"
      #     # export RELEASE_CHANNEL="stable"
      #     else
      #     RELEASE_CHANNEL="edge" 
      #     # export RELEASE_CHANNEL="edge"
      #     fi
      #     echo "Release channel determined to be $RELEASE_CHANNEL"
      #     echo LATEST_VERSION=$(git describe --tags `git rev-list --tags --max-count=1` --always)
      #     echo GIT_VERSION=$(git describe --tags `git rev-list --tags --max-count=1` --always)
      #     echo GIT_STRIPPED_VERSION=$(git describe --tags `git rev-list --tags --max-count=1` --always | cut -c 2-)
      #   shell: bash
      # -
      #   name: Determine Stable Release Channel
      #   run: |
      #     if [[ ${{ github.ref }} = refs/tags* ]]
      #         echo "RELEASE_CHANNEL=stable" >> $GITHUB_ENV
      #         echo "Release channel determined to be $RELEASE_CHANNEL"
      # -
      #   name: Determine Edge Release Channel
      #   run: |
      #     if [[ ${{ github.ref }} != refs/tags* ]]
      #       echo "RELEASE_CHANNEL=edge" >> $GITHUB_ENV 
      #       GIT_VERSION=$(git describe --tags `git rev-list --tags --max-count=1` --always)
      #       echo $GIT_VERSION >> $GITHUB_ENV
      #       GIT_STRIPPED_VERSION=`echo $GIT_VERSION | cut -c 2-`
      #       echo $GIT_STRIPPED_VERSION >> $GITHUB_ENV
      #       echo "Release channel determined to be $RELEASE_CHANNEL"

      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Docker Meta
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: meshery/docker-extension-meshery
          flavor: |
            latest=false
          tags: |
            type=raw,value=${{github.event.inputs.release-channel}}-{{sha}}
            type=semver,pattern={{version}},value=${{github.event.inputs.release-ver}}
            type=raw,pattern={{version}},value=${{github.event.inputs.release-channel}}-${{github.event.inputs.release-ver}},enable=${{ startsWith(github.ref, 'refs/tags/v') }}
            type=raw,value={{tag}},enable=${{github.event.inputs.release-channel}}-${{ startsWith(github.ref, 'refs/tags/v') }}
            type=raw,value=${{github.event.inputs.release-channel}}-latest
            type=semver,pattern={{version}},value=-v${{github.event.inputs.stripped-release-ver}},enable=${{ startsWith(github.ref, 'refs/tags/v') }}
          
      -
        name: Login to DockerHub
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - 
        name: Build and Push 
        uses: docker/build-push-action@v2
        with:
          context: "{{defaultContext}}:install/docker-extension"
          push: true
          build-args: |
            GIT_STRIPPED_VERSION=${{env.GIT_STRIPPED_VERSION}}
            GIT_VERSION=${{env.GIT_VERSION}}
          tags: ${{ steps.meta.outputs.tags }}     
          platforms: linux/amd64,linux/arm64

      # - 
      #   name: Docker Hub Description
      #   uses: peter-evans/dockerhub-description@v3
      #   with:
      #     username: ${{ secrets.DOCKER_USERNAME }}
      #     password: ${{ secrets.DOCKER_PASSWORD }}
      #     repository: meshery/meshery-docker-extension  
      #     readme-filepath: /install/docker-extension/README.md 
