name: Golang Unit and Integration Tests
on:
  push:
    branches:
      - "master"
    paths:
      - "**.go"
  pull_request:
    branches:
      - "master"
    paths:
      - "**.go"
  workflow_dispatch:
    inputs:
      logLevel:
        description: "Log level"
        required: true
        default: "warning"

permissions:
  contents: read

jobs:
  golangci:
    permissions:
      contents: read  # for actions/checkout to fetch code
      pull-requests: read  # for golangci/golangci-lint-action to fetch pull requests
    strategy:
      matrix:
        go: [1.21]
        os: [ubuntu-22.04]
    name: golangci-lint
    if: github.repository == 'meshery/meshery'
    runs-on: ${{ matrix.os }}
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@5c7944e73c4c2a096b17a9cb74d65b6c2bbafbde # v2.9.1
        with:
          egress-policy: audit

      - uses: actions/setup-go@0a12ed9d6a96ab950c8f026ed9f722fe0da7ef32 # v5.0.2
        with:
          go-version: ${{ matrix.go }}
      - uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
      - name: golangci-lint
        uses: golangci/golangci-lint-action@aaa42aa0628b4ae2578232a66b541047968fac86 # v6.1.0
        with:
          version: v1.59
          args: --config=.golangci.yml --timeout=10m
  unit-tests:
    name: Unit tests
    runs-on: ubuntu-22.04
    needs: golangci
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@5c7944e73c4c2a096b17a9cb74d65b6c2bbafbde # v2.9.1
        with:
          egress-policy: audit

      - uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
        with:
          fetch-depth: 2
      - name: Install lynx for xdg-open support
        run: sudo apt-get install lynx
      - name: Setup Go
        uses: actions/setup-go@0a12ed9d6a96ab950c8f026ed9f722fe0da7ef32 # v5.0.2
        with:
          go-version: "1.21"
      - name: Run coverage
        run: go test --short ./... -race -coverprofile=coverage.txt -covermode=atomic
      - name: Upload coverage to Codecov
        if: github.repository == 'meshery/meshery'
        uses: codecov/codecov-action@84508663e988701840491b86de86b666e8a86bed # v4.3.0
        with:
          files: ./coverage.txt
          flags: unittests
  integration-tests:
    name: Integration tests
    runs-on: ubuntu-22.04
    needs: golangci
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@5c7944e73c4c2a096b17a9cb74d65b6c2bbafbde # v2.9.1
        with:
          egress-policy: audit

      - uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
        with:
          fetch-depth: 2
      - name: Install lynx for xdg-open support
        run: sudo apt-get install lynx
      - name: Setup Go
        uses: actions/setup-go@0a12ed9d6a96ab950c8f026ed9f722fe0da7ef32 # v5.0.2
        with:
          go-version: "1.21"
      - name: Install Docker Compose
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@988b5a0280414f521da01fcc63a27aeeb4b104db # v3.6.1 
      - name: Create k8s Kind Cluster
        uses: helm/kind-action@99576bfa6ddf9a8e612d83b513da5a75875caced # v1.9.0
        with:
          cluster_name: "kind-cluster"
      - name: Run coverage
        run: |
          cd mesheryctl;
          make; 
          ./mesheryctl system start -p docker;
          ./mesheryctl system update -y;
          ./mesheryctl system status -y;
          ./mesheryctl system restart -y;
          ./mesheryctl system check --preflight;  
          ./mesheryctl system stop -y;
          echo "Running Mesheryctl with Docker completed."
        
          ./mesheryctl system start -p kubernetes;
          ./mesheryctl system update -y;
          ./mesheryctl system status -y;
          ./mesheryctl system restart -y;
          ./mesheryctl system check --preflight;
          ./mesheryctl system stop -y;
          echo "Running Mesheryctl with Kubernetes completed."
          
      - name: Upload coverage to Codecov
        if: github.repository == 'meshery/meshery'
        uses: codecov/codecov-action@ab904c41d6ece82784817410c45d8b8c02684457 # v3.1.6
        with:
          files: ./coverage.txt
          flags: gointegrationtests     
