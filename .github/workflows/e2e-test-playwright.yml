name: Run E2E Test on Meshery

on:
  workflow_run:
    workflows: ["Meshery UI and Server"]
    types:
      - completed

jobs:
  tests-ui-e2e:
    name: UI end-to-end tests
    if: github.repository == 'meshery/meshery'
    runs-on: ubuntu-22.04
    permissions:
      issues: write
      pull-requests: write
    steps:
      - name: Check out code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Check out meshery-istio code
        uses: actions/checkout@v4
        with:
          repository: layer5io/meshery-istio
          path: ./meshery-istio
      - name: Check out meshery-consul code
        uses: actions/checkout@v4
        with:
          repository: layer5io/meshery-consul
          path: ./meshery-consul
      - name: Create k8s Kind Cluster
        uses: helm/kind-action@v1.8.0
        with:
          cluster_name: "kind-cluster"
      - name: Setup Go
        uses: actions/setup-go@master
        with:
          go-version: "1.21"
      - name: Run meshery-istio
        run: |
          mkdir -p /home/runner/.meshery/bin
          cd ./meshery-istio
          go run main.go &
          sleep 60
      - name: Run meshery-consul
        run: |
          mkdir -p /home/runner/.meshery/bin
          cd ./meshery-consul
          go run main.go &
          sleep 60
      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version: 18
      - name: Restore node modules cache
        id: node-cache
        uses: actions/cache@v4
        with:
          path: |
            ~/cache
            ~/.cache
            /home/runner/.cache
            !~/cache/exclude
            **/node_modules
            /home/runner/.cache/Cypress
            ~/.npm
            ${{ github.workspace }}/.next/cache
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-${{ hashFiles('**.[jt]s', '**.[jt]sx') }}
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-
      - name: Download meshery-ui artifacts
        uses: actions/download-artifact@v4
        with:
          name: meshery-ui
          path: /home/runner/work/meshery/meshery/ui/out
      - name: Download provider-ui artifacts
        uses: actions/download-artifact@v4
        with:
          name: provider-ui
          path: /home/runner/work/meshery/meshery/provider-ui/out
      - name: Run Meshery UI and Server
        env:
          PROVIDER_BASE_URLS: http://localhost:9876
          PORT: 9081
          ADAPTER_URLS: "localhost:10000 localhost:10001 localhost:10002 localhost:10003 localhost:10004 localhost:10009 localhost:10007"
        run: |
          make server &
          sleep 60
      - name: Run Playwright End-to-End Tests
        env:
          MESHERY_SERVER_URL: "http://localhost:9081"
          REMOTE_PROVIDER_URL: "https://meshery.layer5.io"
          REMOTE_PROVIDER_USER_EMAIL: ${{ secrets.REMOTE_PROVIDER_USER_EMAIL }}
          REMOTE_PROVIDER_USER_PASSWORD: ${{ secrets.REMOTE_PROVIDER_USER_PASS }}
          PROVIDER_TOKEN: ${{ secrets.PROVIDER_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GH_ACCESS_TOKEN }}
        run: |
          make test-setup-ui
          make test-ui
      - uses: daun/playwright-report-summary@v3
        if: always()
        with:
          github-token: ${{ secrets.GH_ACCESS_TOKEN }}
          report-file: ui/results.json
          comment-title: "Meshery E2E Test with Playwright"

