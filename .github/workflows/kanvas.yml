name: Meshery Snapshot Service
on: # rebuild any PRs and main branch changes
  pull_request_target:
    types: [opened, synchronize, reopened]
  
  workflow_call:
    inputs:
      fileName: 
        description: Relative file path from the root directory
        required: true
        type: string
    outputs:
      resource_url:
        description: "The URL of the generated resource."
        value: ${{ jobs.KanvasScreenshot.outputs.resource_url }}
permissions: 
  actions: read
  contents: write
  security-events: write
  statuses: write
  pull-requests: write
  id-token: write

jobs:
  KanvasScreenshot:
    runs-on: ubuntu-24.04
    outputs:
      resource_url: ${{ steps.test_result.outputs.resource_url }}
    steps:
      - name: Set PR number # To comment the final status on the Pull-request opened in any repository
        run: |
          export pull_number=$(jq --raw-output .pull_request.number "$GITHUB_EVENT_PATH")
          echo "PULL_NO=$pull_number" >> $GITHUB_ENV
      - uses: actions/checkout@v4
      - uses: actions/checkout@v4 #this step would go away
        with:
          path: action
          repository: layer5labs/kanvas-snapshot
      - id: test_result
        uses: layer5labs/Kanvas-Snapshot@v0.2.41
        continue-on-error: true # Continue workflow even if snapshot fails
        with:
          githubToken: ${{ secrets.GITHUB_TOKEN }} # github's personal access token example: "ghp_...."
          mesheryToken: ${{ secrets.MESHERY_TOKEN }} # Meshery Cloud Authentication token, signin to meshery-cloud to get one, example: ey.....
          prNumber: ${{ env.PULL_NO }} # auto-filled from the above step
          application_type: Kubernetes Manifest # your application type, could be any of three: "Kubernetes Manifest", "Docker Compose", "Helm Chart"
          filePath: ${{ inputs.fileName == '' && 'install/deployment_yamls/k8s' || inputs.fileName }} # relative file-path from the root directory in the github-runner env, you might require to checkout the repository as described in step 2

      - name: Handle Snapshot Failure
        if: failure() && steps.test_result.outcome == 'failure'
        run: |
          echo "⚠️ Kanvas Snapshot failed due to known issue with Cypress test"
          echo "This is a known issue in the kanvas-snapshot action (issue #155)"
          echo "The failure is related to missing DOM elements in the Kanvas interface"
          echo "This does not affect the core functionality of the PR"
          echo "Snapshot generation will be skipped for this PR"
