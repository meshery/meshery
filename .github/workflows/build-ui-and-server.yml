name: Meshery UI and Server
on:
  pull_request_target:
    types: [opened, synchronize, reopened]
    branches:
      - "master"
    paths-ignore:
      - "docs/**"
      - "mesheryctl/**"
      - "*.md"
      - "*.github/**"
  workflow_dispatch:
    inputs:
      logLevel:
        description: "Log level"
        required: true
        default: "warning"

jobs:
  build-backend:
    name: Backend build
    if: github.repository == 'meshery/meshery'
    runs-on: ubuntu-22.04
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@5c7944e73c4c2a096b17a9cb74d65b6c2bbafbde # v2.9.1
        with:
          egress-policy: audit

      - name: Check out code
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
        with:
          fetch-depth: 1
      - name: Setup Go
        uses: actions/setup-go@d0c5defdf364f1d1fb07530c000084836192af9c # master
        with:
          go-version: "1.21"
      - name: Build Meshery Server
        env:
          PROVIDER_BASE_URLS: http://localhost:9876
          PORT: 9081
          ADAPTER_URLS: "localhost:10000 localhost:10001 localhost:10002 localhost:10003 localhost:10004 localhost:10009 localhost:10007 localhost:10013"
        run: |
          make build-server
  ui-build:
    name: UI build
    if: github.repository == 'meshery/meshery'
    runs-on: ubuntu-22.04
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@5c7944e73c4c2a096b17a9cb74d65b6c2bbafbde # v2.9.1
        with:
          egress-policy: audit

      - name: Check out code
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
        with:
          fetch-depth: 1
      - uses: actions/setup-node@1e60f620b9541d16bece96c5465dc8ee9832be0b # v4.0.3
        with:
          node-version: 18
      - name: Cache node modules
        id: node-cache
        uses: actions/cache@0c45773b623bea8c8e75f6c82b208c3cf94ea4f9 # v4.0.2
        with:
          path: |
            ~/cache
            ~/.cache
            /home/runner/.cache
            !~/cache/exclude
            **/node_modules
            /home/runner/.cache/Cypress
            ~/.npm
            ${{ github.workspace }}/.next/cache
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-${{ hashFiles('**.[jt]s', '**.[jt]sx') }}
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-
      - name: Install dependencies
        if: steps.node-cache.outputs.cache-hit != 'true'
        run: |
          cd ui
          npm i
          cd ..
          cd provider-ui
          npm i
      # - name: Cache meshery-ui
      #   id: meshery-ui-cache
      #   uses: actions/cache@v3
      #   with:
      #     path: |
      #       /home/runner/work/meshery/meshery/ui/out
      #     key: ${{ runner.os }}-meshery-ui-${{ hashFiles('**.[jt]s', '**.[jt]sx') }}
      - name: build meshery-ui
        # if: steps.meshery-ui-cache.outputs.cache-hit != 'true'
        run: |
          make ui-meshery-build
      - name: build provider-ui
        run: |
          make ui-provider-build
      - name: Upload meshery-ui artifacts
        uses: actions/upload-artifact@834a144ee995460fba8ed112a2fc961b36a5ec5a # v4.3.6
        with:
          name: meshery-ui
          path: /home/runner/work/meshery/meshery/ui/out
      - name: Upload provider-ui artifacts
        uses: actions/upload-artifact@834a144ee995460fba8ed112a2fc961b36a5ec5a # v4.3.6
        with:
          name: provider-ui
          path: /home/runner/work/meshery/meshery/provider-ui/out
  docker-build-test:
    name: Docker build
    if: github.repository == 'meshery/meshery'
    runs-on: ubuntu-22.04
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@5c7944e73c4c2a096b17a9cb74d65b6c2bbafbde # v2.9.1
        with:
          egress-policy: audit

      - name: Check out code
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
        with:
          fetch-depth: 1
      - name: Docker edge build & tag
        if: startsWith(github.ref, 'refs/tags/') != true && success()
        env:
          RELEASE_CHANNEL: "edge"
        run: |
          DOCKER_BUILDKIT=1 docker build -f install/docker/Dockerfile --no-cache -t meshery:edge-latest --build-arg TOKEN=test --build-arg GIT_COMMITSHA=${GITHUB_SHA::8} --build-arg RELEASE_CHANNEL=${RELEASE_CHANNEL} .
          docker tag meshery:edge-latest meshery:edge-${GITHUB_SHA::8}
      - name: Docker edge push
        if: github.event_name != 'pull_request' && startsWith(github.ref, 'refs/tags/') && success()
        run: |
          docker push ${{ secrets.IMAGE_NAME }}:edge-latest
          docker push ${{ secrets.IMAGE_NAME }}:edge-${GITHUB_REF/refs\/tags\//}
          docker push ${{ secrets.IMAGE_NAME }}:edge-${GITHUB_SHA::8}
      - name: Docker Hub Description
        if: github.event_name != 'pull_request' && startsWith(github.ref, 'refs/tags/') && success()
        uses: peter-evans/dockerhub-description@e98e4d1628a5f3be2be7c231e50981aee98723ae # v4.0.0
        env:
          DOCKERHUB_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKERHUB_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
          DOCKERHUB_REPOSITORY: ${{ secrets.IMAGE_NAME }}

  # validate the swagger docs
  swaggerci:
    if: github.repository == 'meshery/meshery'
    name: swagger-docs
    runs-on: ubuntu-22.04
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@5c7944e73c4c2a096b17a9cb74d65b6c2bbafbde # v2.9.1
        with:
          egress-policy: audit

      - uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
      - name: Check if handlers were modified
        uses: dorny/paths-filter@de90cc6fb38fc0963ad72b210f1f284cd68cea36 # v3.0.2
        id: changes
        with:
          filters: |
            modified:
              - added|modified: "handlers/**"
      - name: Setup go-swagger
        if: steps.changes.outputs.modified == 'true'
        uses: minchao/setup-go-swagger@0be2506f6c9c8a2eff98c41d57d8d83b097d0a3b # v1
        with:
          version: v0.26.1
      - name: swagger-spec
        if: steps.changes.outputs.modified == 'true'
        run: swagger generate spec -o ./server/helpers/swagger.yaml --scan-models
      - name: swagger-docs
        if: steps.changes.outputs.modified == 'true'
        run: swagger generate spec -o ./docs/_data/swagger.yml --scan-models && swagger flatten ./docs/_data/swagger.yml -o ./docs/_data/swagger.yml --with-expand --format=yaml

  # validate graphQL schema
  garphql_validate:
    name: Validate GraphQL schema
    if: github.repository == 'meshery/meshery'
    runs-on: ubuntu-latest
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@5c7944e73c4c2a096b17a9cb74d65b6c2bbafbde # v2.9.1
        with:
          egress-policy: audit

      - name: Check out code
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
        with:
          fetch-depth: 1
      - name: Check if schema was modified
        uses: dorny/paths-filter@de90cc6fb38fc0963ad72b210f1f284cd68cea36 # v3.0.2
        id: filter
        with:
          filters: |
            modified:
              - added|modified: 'server/internal/graphql/schema/schema.graphql'
      - name: Set up Ruby
        if: steps.filter.outputs.modified == 'true'
        uses: ruby/setup-ruby@a6e6f86333f0a2523ece813039b8b4be04560854 # v1.190.0
        with:
          ruby-version: 3.2.2
          bundler-cache: true
      - name: graphql-docs
        if: steps.filter.outputs.modified == 'true'
        run: |
          cd docs
          bundle install
          bundle exec rake graphql:compile_docs

