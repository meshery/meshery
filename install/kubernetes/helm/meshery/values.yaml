# Default values for meshery.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1
restartPolicy: Always
metadata:
  name: meshery
image:
  repository: layer5/meshery
  tag: stable-latest
  pullPolicy: Always

env:
  EVENT: mesheryLocal
  PROVIDER_BASE_URLS: https://meshery.layer5.io
  ADAPTER_URLS: meshery-istio:10000 meshery-linkerd:10001 meshery-consul:10002 meshery-kuma:10007 meshery-nginx-sm:10010 meshery-nsm:10004 meshery-app-mesh:10005 meshery-traefik-mesh:10006 meshery-cilium:10012
  PROVIDER: ""
  MESHERY_SERVER_CALLBACK_URL: ""
probe:
  #TODO: Need to confirm the health check path of meshery.
  livenessProbe:
    enabled: false
  readinessProbe:
    enabled: false

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

# For AKS AWS GCP to get the permissions to watch the nodes
rbac:
  nodes: false

serviceAccount:
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: "meshery-server"

podSecurityContext:
  {}
  # fsGroup: 2000

annotations: {}

securityContext:
  {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: LoadBalancer
  port: 9081
  target_port: 8080
  annotations: {}

ingress:
  enabled: false
  annotations:
    {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"

  hosts:
    - host: chart-example.local
      paths: []
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources:
  {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

nodeSelector: {}

tolerations: []

affinity: {}

# By default, the adapters need to have the same cluster role as the meshery to have permissions for performing necessary operations

# If need to use a different service accounts for the adapters, modify the serviceAccountNameOverride for the corresponding adapters here,
# or set the serviceAccountNameOverride to empty while setting the serviceAccount information in the sub-chart accordingly
meshery-app-mesh:
  enabled: false
  fullnameOverride: meshery-app-mesh
  serviceAccountNameOverride: meshery-server

meshery-istio:
  enabled: false
  fullnameOverride: meshery-istio
  serviceAccountNameOverride: meshery-server

meshery-linkerd:
  enabled: false
  fullnameOverride: meshery-linkerd
  serviceAccountNameOverride: meshery-server

meshery-consul:
  enabled: false
  fullnameOverride: meshery-consul
  serviceAccountNameOverride: meshery-server

meshery-kuma:
  enabled: false
  fullnameOverride: meshery-kuma
  serviceAccountNameOverride: meshery-server

meshery-nsm:
  enabled: false
  fullnameOverride: meshery-nsm
  serviceAccountNameOverride: meshery-server

meshery-nginx-sm:
  enabled: false
  fullnameOverride: meshery-nginx-sm
  serviceAccountNameOverride: meshery-server

meshery-traefik-mesh:
  enabled: false
  fullnameOverride: meshery-traefik-mesh
  serviceAccountNameOverride: meshery-server

meshery-cilium:
  enabled: false
  fullnameOverride: meshery-cilium

meshery-perf:
  enabled: false
  fullnameOverride: meshery-perf
  serviceAccountNameOverride: meshery-server

# If there need the test cases set it as true.
#
testCase:
  enabled: false

# # TODO: There need to confirm that we should deploy the Gateway and VirtualService for Meshery or not.
# There will be an issue when deploying Meshery before Istio and this could make the deploying fail.
# meshery-gateway
#
mesherygateway:
  enabled: false
  selector:
    istio: ingressgateway

