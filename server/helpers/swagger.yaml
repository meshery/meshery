basePath: /
consumes:
    - application/json
    - multipart/form-data
definitions:
    AuthenticateOKBody:
        description: AuthenticateOKBody authenticate o k body
        x-go-package: github.com/docker/docker/api/types/registry
    ContainerChangeResponseItem:
        description: ContainerChangeResponseItem change item in response to ContainerChanges operation
        x-go-package: github.com/docker/docker/api/types/container
    ContainerTopOKBody:
        description: ContainerTopOKBody OK response to ContainerTop operation
        x-go-package: github.com/docker/docker/api/types/container
    ContainerUpdateOKBody:
        description: ContainerUpdateOKBody OK response to ContainerUpdate operation
        x-go-package: github.com/docker/docker/api/types/container
    CreateOptions:
        description: Volume configuration
        title: CreateOptions VolumeConfig
        x-go-package: github.com/docker/docker/api/types/volume
    CreateResponse:
        description: OK response to ContainerCreate operation
        title: CreateResponse ContainerCreateResponse
        x-go-package: github.com/docker/docker/api/types/container
    ErrorResponse:
        title: ErrorResponse Represents an error.
        x-go-package: github.com/docker/docker/api/types
    GraphDriverData:
        description: |-
            GraphDriverData Information about the storage driver used to store the container's and
            image's filesystem.
        x-go-package: github.com/docker/docker/api/types
    HistoryResponseItem:
        description: HistoryResponseItem individual image layer information in response to ImageHistory operation
        x-go-package: github.com/docker/docker/api/types/image
    IdResponse:
        description: IDResponse Response to an API call that returns just an Id
        x-go-name: IDResponse
        x-go-package: github.com/docker/docker/api/types
    ImageDeleteResponseItem:
        description: ImageDeleteResponseItem image delete response item
        x-go-package: github.com/docker/docker/api/types
    ImageSummary:
        description: ImageSummary image summary
        x-go-package: github.com/docker/docker/api/types
    ListResponse:
        description: Volume list response
        title: ListResponse VolumeListResponse
        x-go-package: github.com/docker/docker/api/types/volume
    Plugin:
        description: Plugin A plugin for the Engine API
        x-go-package: github.com/docker/docker/api/types
    PluginConfig:
        title: PluginConfig The config of a plugin.
        x-go-package: github.com/docker/docker/api/types
    PluginConfigArgs:
        description: PluginConfigArgs plugin config args
        x-go-package: github.com/docker/docker/api/types
    PluginConfigInterface:
        description: PluginConfigInterface The interface between Docker and the plugin
        x-go-package: github.com/docker/docker/api/types
    PluginConfigLinux:
        description: PluginConfigLinux plugin config linux
        x-go-package: github.com/docker/docker/api/types
    PluginConfigNetwork:
        description: PluginConfigNetwork plugin config network
        x-go-package: github.com/docker/docker/api/types
    PluginConfigRootfs:
        description: PluginConfigRootfs plugin config rootfs
        x-go-package: github.com/docker/docker/api/types
    PluginConfigUser:
        description: PluginConfigUser plugin config user
        x-go-package: github.com/docker/docker/api/types
    PluginDevice:
        description: PluginDevice plugin device
        x-go-package: github.com/docker/docker/api/types
    PluginEnv:
        description: PluginEnv plugin env
        x-go-package: github.com/docker/docker/api/types
    PluginInterfaceType:
        description: PluginInterfaceType plugin interface type
        x-go-package: github.com/docker/docker/api/types
    PluginMount:
        description: PluginMount plugin mount
        x-go-package: github.com/docker/docker/api/types
    PluginSettings:
        title: PluginSettings Settings that can be modified by users.
        x-go-package: github.com/docker/docker/api/types
    Port:
        description: Port An open port on a container
        x-go-package: github.com/docker/docker/api/types
    ServiceUpdateResponse:
        description: ServiceUpdateResponse service update response
        x-go-package: github.com/docker/docker/api/types
    UsageData:
        description: |-
            UsageData Usage details about the volume. This information is used by the
            `GET /system/df` endpoint, and omitted in other endpoints.
        x-go-package: github.com/docker/docker/api/types/volume
    Volume:
        description: Volume volume
        x-go-package: github.com/docker/docker/api/types/volume
    WaitExitError:
        description: WaitExitError container waiting error, if any
        x-go-package: github.com/docker/docker/api/types/container
    WaitResponse:
        description: OK response to ContainerWait operation
        title: WaitResponse ContainerWaitResponse
        x-go-package: github.com/docker/docker/api/types/container
info:
    description: |-
        the purpose of this application is to provide an application
        that is using plain go code to define an API

        This should demonstrate all the possible comment annotations
        that are available to turn go code into a fully compliant swagger 2.0 spec
    license:
        name: Apache-2.0
        url: http://www.apache.org/licenses/LICENSE-2.0.txt
    title: Meshery API.
    version: 0.4.27
paths:
    /api/application:
        get:
            description: |-
                Fetches the list of all applications saved by the current user

                ```?updated_after=<timestamp>``` timestamp should be of the format "YYYY-MM-DD HH:MM:SS"

                ```?order={field}``` orders on the passed field

                ```?search=<application name>``` A string matching is done on the specified application name

                ```?page={page-number}``` Default page number is 0

                ```?pagesize={pagesize}``` Default pagesize is 10
            operationId: idGetMesheryApplications
            responses:
                "200":
                    $ref: '#/responses/mesheryApplicationsResponseWrapper'
            summary: Handle GET request for Application Files
            tags:
                - ApplicationsAPI
    /api/application/{id}:
        delete:
            description: 'Deletes a meshery application file with ID: id'
            operationId: idDeleteMesheryApplicationFile
            parameters:
                - description: id for a specific
                  format: uuid
                  in: path
                  name: id
                  required: true
                  type: string
                  x-go-name: ID
            responses:
                "200":
                    $ref: '#/responses/noContentWrapper'
            summary: Handle Delete for a Meshery Application File
            tags:
                - ApplicationsAPI
    /api/application/{sourcetype}:
        post:
            description: Updates the design for the provided application
            operationId: idPutApplicationFileRequest
            responses:
                "200":
                    $ref: '#/responses/mesheryApplicationResponseWrapper'
            summary: Handle POST request for Application Files
            tags:
                - ApplicationsAPI
    /api/application/deploy:
        delete:
            description: Delete a deployed application file with the request
            operationId: idDeleteApplicationFile
            responses:
                "200":
                    description: ""
            summary: Handle DELETE request for Application File Deploy
            tags:
                - ApplicationsAPI
        post:
            description: Deploy an attached application file with the request
            operationId: idPostDeployApplicationFile
            parameters:
                - in: formData
                  name: Upload Yaml/Yml File
                  type: file
                  x-go-name: FormFile
            responses:
                "200":
                    $ref: '#/responses/applicationFilesResponseWrapper'
            summary: Handle POST request for Application File Deploy
            tags:
                - ApplicationsAPI
    /api/application/download/{id}/{sourcetype}:
        get:
            description: Get the pattern source-content
            operationId: typeGetApplication
            parameters:
                - in: formData
                  name: Upload Yaml/Yml File
                  type: file
                  x-go-name: FormFile
            responses: {}
            summary: Handle GET request for Meshery Patterns with of source content
            tags:
                - PatternsAPI
    /api/application/types:
        get:
            description: Get application file types
            operationId: typeGetMesheryApplication
            responses:
                "200":
                    $ref: '#/responses/mesheryApplicationTypesResponseWrapper'
            summary: Handle GET request for Meshery Application types
            tags:
                - ApplicationsAPI
    /api/content/design/share:
        post:
            description: Used to share designs with others
            operationId: idPostShareContent
            responses:
                "200":
                    description: ""
                "403":
                    description: ""
                "500":
                    description: ""
            summary: Handle POST request for Sharing content
            tags:
                - ShareContent
    /api/content/filter/share:
        post:
            description: Used to share filters with others
            operationId: idPostShareContent
            responses:
                "200":
                    description: ""
                "403":
                    description: ""
                "500":
                    description: ""
            summary: Handle POST request for Sharing content
            tags:
                - ShareContent
    /api/events:
        get:
            description: |-
                Listens for events across all of Meshery's components like adapters and server, streaming them to the UI via Server Side Events
                This API call never terminates and establishes a persistent keep-alive connection over which `EventsResponse`s are pushed.
            operationId: idGetEventStreamer
            responses:
                "200":
                    description: ""
            summary: Handle GET request for events.
            tags:
                - EventsAPI
    /api/events/{id}:
        delete:
            description: Deletes event associated with the id.
            operationId: idGetEventStreamer
            responses:
                "200":
                    description: ""
            summary: Handle DELETE request for events.
    /api/events/bulk:
        delete:
            description: Bulk delete events associated with the ids.
            operationId: idGetEventStreamer
            responses:
                "200":
                    description: ""
            summary: Handle DELETE request to delete events in bulk.
    /api/events/status:
        put:
            description: Bulk update status for the events associated with the ids.
            operationId: idGetEventStreamer
            responses:
                "200":
                    $ref: '#/responses/eventResponseWrapper'
            summary: Handle PUT request to update event status in bulk.
    /api/events/status/{id}:
        put:
            description: Updates event status for the event associated with the id.
            operationId: idGetEventStreamer
            responses:
                "200":
                    $ref: '#/responses/eventResponseWrapper'
            summary: Handle PUT request to update event status.
    /api/events/types:
        get:
            operationId: idGetEventStreamer
            responses:
                "200":
                    description: ""
            summary: Handle GET request for available event categories and actions.
            tags:
                - EventsAPI
    /api/filter:
        get:
            description: |-
                # Returns the list of all the filters saved by the current user

                ```?order={field}``` orders on the passed field

                ```?search=<filter name>``` A string matching is done on the specified filter name

                ```?page={page-number}``` Default page number is 0

                ```?pagesize={pagesize}``` Default pagesize is 10

                ```?visibility={[visibility]}``` Default visibility is public + private; Mulitple visibility filters can be passed as an array
                Eg: ```?visibility=["public", "published"]``` will return public and published filters
            operationId: idGetFilterFiles
            responses:
                "200":
                    $ref: '#/responses/mesheryFiltersResponseWrapper'
            summary: Handle GET request for filters
            tags:
                - FiltersAPI
        post:
            description: Used to save/update a Meshery Filter
            operationId: idPostFilterFile
            responses:
                "200":
                    $ref: '#/responses/mesheryFilterResponseWrapper'
            summary: Handle POST requests for Meshery Filters
            tags:
                - FiltersAPI
    /api/filter/{id}:
        delete:
            description: 'Deletes a meshery filter with ID: id'
            operationId: idDeleteMesheryFilter
            parameters:
                - description: id for a specific
                  format: uuid
                  in: path
                  name: id
                  required: true
                  type: string
                  x-go-name: ID
            responses:
                "200":
                    $ref: '#/responses/noContentWrapper'
            summary: Handle Delete for a Meshery Filter
            tags:
                - FiltersAPI
        get:
            description: Fetches the Meshery Filter with the given id
            operationId: idGetMesheryFilter
            parameters:
                - description: id for a specific
                  format: uuid
                  in: path
                  name: id
                  required: true
                  type: string
                  x-go-name: ID
            responses:
                "200":
                    $ref: '#/responses/mesheryFilterResponseWrapper'
            summary: Handle GET request for a Meshery Filter
            tags:
                - FiltersAPI
    /api/filter/catalog:
        get:
            description: |-
                # Filters can be further filtered through query parameter

                ```?order={field}``` orders on the passed field

                ```?page={page-number}``` Default page number is 0

                ```?pagesize={pagesize}``` Default pagesize is 10.

                ```?search={filtername}``` If search is non empty then a greedy search is performed
            operationId: idGetCatalogMesheryFiltersHandler
            responses:
                "200":
                    $ref: '#/responses/mesheryFiltersResponseWrapper'
            summary: Handle GET request for catalog filters
            tags:
                - FiltersAPI
    /api/filter/catalog/publish:
        post:
            description: Publishes filter to Meshery Catalog by setting visibility to published and setting catalog data
            operationId: idPublishCatalogFilterHandler
            responses:
                "202":
                    $ref: '#/responses/noContentWrapper'
            summary: Handle Publish for a Meshery Filter
            tags:
                - FiltersAPI
    /api/filter/catalog/unpublish:
        delete:
            description: Unpublishes filter from Meshery Catalog by setting visibility to private and removing catalog data from website
            operationId: idUnPublishCatalogFilterHandler
            responses:
                "200":
                    $ref: '#/responses/noContentWrapper'
            summary: Handle UnPublish for a Meshery Filter
            tags:
                - FiltersAPI
    /api/filter/clone/{id}:
        post:
            description: 'Creates a local copy of a published filter with id: id'
            operationId: idCloneMesheryFilter
            responses:
                "200":
                    $ref: '#/responses/noContentWrapper'
            summary: Handle Clone for a Meshery Filter
            tags:
                - FiltersAPI
    /api/filter/deploy:
        delete:
            description: Delete a deployed filter file with the request
            operationId: idDeleteFilterFile
            responses:
                "200":
                    description: ""
            summary: Handle DELETE request for Filter File Deploy
            tags:
                - FilterAPI
        post:
            description: Deploy an attached filter file with the request
            operationId: idPostDeployFilterFile
            responses:
                "200":
                    $ref: '#/responses/FilterFilesResponseWrapper'
            summary: Handle POST request for Filter File Deploy
            tags:
                - FilterAPI
    /api/filter/file/{id}:
        get:
            description: Returns the Meshery Filter file saved by the current user with the given id
            operationId: idGetFilterFile
            responses:
                "200":
                    $ref: '#/responses/mesheryFilterResponseWrapper'
            summary: Handle GET request for filter file with given id
            tags:
                - FiltersAPI
    /api/identity/users:
        get:
            description: |-
                # Users can be further filtered through query parameters

                ```?order={field}``` orders on the passed field

                ```?page={page-number}``` Default page number is 0

                ```?pagesize={pagesize}``` Default pagesize is 20

                ```?search={username|email|first_name|last_name}``` If search is non empty then a greedy search is performed

                ```?filter={condition}```
            operationId: idGetAllUsersHandler
            parameters:
                - format: int64
                  in: query
                  name: page
                  type: integer
                  x-go-name: Page
                - format: int64
                  in: query
                  name: pageSize
                  type: integer
                  x-go-name: PageSize
                - in: query
                  name: search
                  type: string
                  x-go-name: Search
                - description: 'in: order'
                  in: query
                  name: order
                  type: string
                  x-go-name: Order
                - description: 'in: filter'
                  in: query
                  name: filter
                  type: string
                  x-go-name: Filter
            responses:
                "200":
                    $ref: '#/responses/users'
            summary: Handles GET for all Users
            tags:
                - UserAPI
    /api/identity/users/keys:
        get:
            description: Returns all keys for user
            operationId: idGetAllUsersKeysHandler
            responses:
                "200":
                    $ref: '#/responses/keys'
            summary: Handles GET for all Keys for users
            tags:
                - UserKeysAPI
    /api/integrations/connections:
        get:
            description: |-
                ```?order={field}``` orders on the passed field

                ```?search={}``` If search is non empty then a greedy search is performed

                ```?page={page-number}``` Default page number is 0

                ```?pagesize={pagesize}``` Default pagesize is 10
            operationId: idGetConnections
            responses:
                "200":
                    $ref: '#/responses/ConnectionPage'
            summary: Handle GET request for getting all connections
            tags:
                - GetConnections
        post:
            description: Creates a new connection
            operationId: idPostConnection
            responses:
                "201":
                    $ref: '#/responses/noContentWrapper'
            summary: Handle POST request for creating a new connection
            tags:
                - PostConnection
    /api/integrations/connections/{connectionId}:
        delete:
            description: Deletes existing connection
            operationId: idDeleteConnection
            responses:
                "200":
                    $ref: '#/responses/noContentWrapper'
            summary: Handle DELETE request for deleting an existing connection by connection ID
            tags:
                - DeleteConnection
        put:
            description: Updates existing connection using ID
            operationId: idPutConnectionById
            responses:
                "200":
                    $ref: '#/responses/mesheryConnectionResponseWrapper'
            summary: Handle PUT request for updating an existing connection by connection ID
            tags:
                - PutConnectionById
    /api/integrations/connections/{connectionKind}:
        get:
            description: |-
                ```?order={field}``` orders on the passed field

                ```?search={}``` If search is non empty then a greedy search is performed

                ```?page={page-number}``` Default page number is 0

                ```?pagesize={pagesize}``` Default pagesize is 10
            operationId: idGetConnectionsByKind
            responses:
                "200":
                    $ref: '#/responses/ConnectionPage'
            summary: Handle GET request for getting all connections for a given kind.
            tags:
                - GetConnectionsByKind
        put:
            description: Updates existing connection
            operationId: idPutConnection
            responses:
                "200":
                    $ref: '#/responses/noContentWrapper'
            summary: Handle PUT request for updating an existing connection
            tags:
                - PutConnection
    /api/integrations/connections/status:
        get:
            description: Get all connections status
            operationId: idGetConnectionsStatus
            responses:
                "200":
                    $ref: '#/responses/mesheryConnectionsStatusPage'
            summary: Handle GET request for getting all connections status
            tags:
                - GetConnectionsStatus
    /api/integrations/environments:
        get:
            description: |-
                # Environments can be further filtered through query parameters

                ```?order={field}``` orders on the passed field

                ```?page={page-number}``` Default page number is 0

                ```?pagesize={pagesize}``` Default pagesize is 20

                ```?search={environments_name}``` If search is non empty then a greedy search is performed

                ```?filter={condition}```
            operationId: idGetEnvironments
            responses:
                "200":
                    $ref: '#/responses/environmentsResponseWrapper'
            summary: Handles GET for all Environments
            tags:
                - EnvironmentsAPI
        post:
            description: Creates a new environment
            operationId: idSaveEnvironment
            responses:
                "201":
                    $ref: '#/responses/noContentWrapper'
            summary: Handle POST request for creating a new environment
            tags:
                - PostEnvironment
    /api/integrations/environments/{environmentID}/connections/{connectionID}:
        delete:
            description: Removes connection from environment
            operationId: idRemoveConnectionFromEnvironmentHandler
            responses:
                "201":
                    $ref: '#/responses/noContentWrapper'
            summary: Handle DELETE to remove Connection from Environment by ID
            tags:
                - EnvironmentAPI
        post:
            description: Returns Environment connection mapping info
            operationId: idAddConnectionToEnvironmentHandler
            responses:
                "200":
                    $ref: '#/responses/environmentResponseWrapper'
            summary: Handle POST to add Connection in Environment by ID
            tags:
                - EnvironmentAPI
    /api/integrations/environments/{id}:
        delete:
            description: Returns Environment info
            operationId: idDeleteEnvironmentHandler
            responses:
                "201":
                    $ref: '#/responses/noContentWrapper'
            summary: Handle DELETE for Environment based on ID
            tags:
                - EnvironmentAPI
        get:
            description: Returns Environment info
            operationId: idGetEnvironmentByIDHandler
            responses:
                "200":
                    $ref: '#/responses/environmentResponseWrapper'
            summary: Handle GET for Environment info by ID
            tags:
                - EnvironmentAPI
        put:
            description: Updates a environment
            operationId: idUpdateEnvironmentHandler
            responses:
                "200":
                    $ref: '#/responses/environmentResponseWrapper'
            summary: Handle PUT request for updating a environment
            tags:
                - PostEnvironment
    /api/meshmodel/components/register:
        post:
            description: Validate the given value with the given schema
            operationId: idPostMeshModelValidate
            responses:
                "200":
                    description: ""
            summary: Handle POST request for registering meshmodel components.
            tags:
                - MeshmodelValidate
    /api/meshmodel/generate:
        post:
            description: Generates Meshery Components for the given payload
            operationId: idPostMeshModelComponentGenerate
            responses:
                "200":
                    description: ""
            summary: Handle POST request for component generation
            tags:
                - MeshmodelComponentGenerate
    /api/meshmodel/validate:
        post:
            description: Validate the given value with the given schema
            operationId: idPostMeshModelValidate
            responses:
                "200":
                    description: ""
            summary: Handle POST request for validate
            tags:
                - MeshmodelValidate
    /api/meshmodels/categories:
        get:
            description: |-
                ```?order={field}``` orders on the passed field

                ```?sort={[asc/desc]}``` Default behavior is asc

                ```?search={categoryName}``` If search is non empty then a greedy search is performed

                ```?page={page-number}``` Default page number is 1

                ```?pagesize={pagesize}``` Default pagesize is 25. To return all results: ```pagesize=all```
            operationId: idGetMeshmodelCategories
            responses:
                "200":
                    $ref: '#/responses/meshmodelCategoriesResponseWrapper'
            summary: Handle GET request for getting all meshmodel categories
            tags:
                - GetMeshmodelCategories
    /api/meshmodels/categories/{category}:
        get:
            description: |-
                ```?order={field}``` orders on the passed field

                ```?sort={[asc/desc]}``` Default behavior is asc

                ```?page={page-number}``` Default page number is 1

                ```?pagesize={pagesize}``` Default pagesize is 25. To return all results: ```pagesize=all```

                ```?search={[true/false]}``` If search is true then a greedy search is performed
            operationId: idGetMeshmodelCategoriesByName
            responses:
                "200":
                    $ref: '#/responses/meshmodelCategoriesResponseWrapper'
            summary: Handle GET request for getting all meshmodel categories of a given name
            tags:
                - GetMeshmodelCategoriesByName
    /api/meshmodels/categories/{category}/components:
        get:
            description: |-
                # Components can be further filtered through query parameter

                ```?version={version}```

                ```?trim={[true]}``` When trim is set to true, the underlying schemas are not returned for entities

                ```?apiVersion={apiVersion}``` If apiVersion is unspecified then all models are returned

                ```?order={field}``` orders on the passed field

                ```?search={componentname}``` If search is non empty then a greedy search is performed

                ```?sort={[asc/desc]}``` Default behavior is asc

                ```?page={page-number}``` Default page number is 1

                ```?pagesize={pagesize}``` Default pagesize is 25. To return all results: ```pagesize=all```
            operationId: idGetMeshmodelComponentByCategory
            responses:
                "200":
                    $ref: '#/responses/meshmodelComponentsDuplicateResponseWrapper'
            summary: Handle GET request for getting meshmodel components of a specific model and category.
            tags:
                - GetMeshmodelComponentByCategory
    /api/meshmodels/categories/{category}/components/{name}:
        get:
            description: |-
                Example: ```/api/meshmodels/categories/Orchestration``` and Management/components/Namespace
                Components can be further filtered through query parameter

                ```?model={model}``` If model is unspecified then all models are returned

                ```?version={version}``` If version is unspecified then all model versions are returned

                ```?apiVersion={apiVersion}``` If apiVersion is unspecified then all components are returned

                ```?order={field}``` orders on the passed field

                ```?search={[true/false]}``` If search is true then a greedy search is performed

                ```?sort={[asc/desc]}``` Default behavior is asc

                ```?page={page-number}``` Default page number is 1

                ```?pagesize={pagesize}``` Default pagesize is 25. To return all results: ```pagesize=all```
            operationId: idGetMeshmodelComponentsByNameByCategory
            responses:
                "200":
                    $ref: '#/responses/meshmodelComponentsDuplicateResponseWrapper'
            summary: Handle GET request for getting meshmodel components of a specific type category.
            tags:
                - GetMeshmodelComponentsByNameByCategory
    /api/meshmodels/categories/{category}/models:
        get:
            description: |-
                ```?version={version}``` If version is unspecified then all models are returned

                ```?order={field}``` orders on the passed field

                ```?search={modelname}``` If search is non empty then a greedy search is performed

                ```?sort={[asc/desc]}``` Default behavior is asc

                ```?page={page-number}``` Default page number is 1

                ```?pagesize={pagesize}``` Default pagesize is 25. To return all results: ```pagesize=all```
            operationId: idGetMeshmodelModelsByCategories
            responses:
                "200":
                    $ref: '#/responses/meshmodelModelsDuplicateResponseWrapper'
            summary: Handle GET request for getting all meshmodel models for a given category. The component type/model name should be lowercase like "kubernetes", "istio"
            tags:
                - GetMeshmodelModelsByCategories
    /api/meshmodels/categories/{category}/models/{model}:
        get:
            description: |-
                ```?version={version}``` If version is unspecified then all models are returned

                ```?order={field}``` orders on the passed field

                ```?search={[true/false]}``` If search is true then a greedy search is performed

                ```?sort={[asc/desc]}``` Default behavior is asc

                ```?page={page-number}``` Default page number is 1

                ```?pagesize={pagesize}``` Default pagesize is 25. To return all results: ```pagesize=all```
            operationId: idGetMeshmodelModelsByCategoriesByModel
            responses:
                "200":
                    $ref: '#/responses/meshmodelModelsDuplicateResponseWrapper'
            summary: Handle GET request for getting all meshmodel models for a given category. The component type/model name should be lowercase like "kubernetes", "istio"
            tags:
                - GetMeshmodelModelsByCategoriesByModel
    /api/meshmodels/categories/{category}/models/{model}/components:
        get:
            description: |-
                Example: ```/api/meshmodels/categories/Orchestration``` and Management/models/kubernetes/components
                Components can be further filtered through query parameter

                ```?version={version}```

                ```?trim={[true]}``` When trim is set to true, the underlying schemas are not returned for entities

                ```?apiVersion={apiVersion}``` If apiVersion is unspecified then all models are returned

                ```?order={field}``` orders on the passed field

                ```?search={componentname}``` If search is non empty then a greedy search is performed

                ```?sort={[asc/desc]}``` Default behavior is asc

                ```?page={page-number}``` Default page number is 1

                ```?pagesize={pagesize}``` Default pagesize is 25. To return all results: ```pagesize=all```
            operationId: idGetMeshmodelComponentByModelByCategory
            responses:
                "200":
                    $ref: '#/responses/meshmodelComponentsDuplicateResponseWrapper'
            summary: Handle GET request for getting meshmodel components of a specific model and category. The component type/model name should be lowercase like "kubernetes", "istio"
            tags:
                - GetMeshmodelComponentByModelByCategory
    /api/meshmodels/categories/{category}/models/{model}/components/{name}:
        get:
            description: |-
                Example: ```/api/meshmodels/categories/Orchestration``` and Management/models/kubernetes/components/Namespace
                Components can be further filtered through query parameter

                ```?version={version}``` If version is unspecified then all model versions are returned

                ```?apiVersion={apiVersion}``` If apiVersion is unspecified then all components are returned

                ```?order={field}``` orders on the passed field

                ```?search={[true/false]}``` If search is true then a greedy search is performed

                ```?sort={[asc/desc]}``` Default behavior is asc

                ```?page={page-number}``` Default page number is 1

                ```?pagesize={pagesize}``` Default pagesize is 25. To return all results: ```pagesize=all```
            operationId: idGetMeshmodelComponentsByNameByModelByCategory
            responses:
                "200":
                    $ref: '#/responses/meshmodelComponentsDuplicateResponseWrapper'
            summary: Handle GET request for getting meshmodel components of a specific type by model and category.
            tags:
                - GetMeshmodelComponentsByNameByModelByCategory
    /api/meshmodels/components:
        get:
            description: |-
                # Components can be further filtered through query parameter

                ```?version={version}```

                ```?apiVersion={apiVersion}``` If apiVersion is unspecified then all models are returned

                ```?order={field}``` orders on the passed field

                ```?search={componentname}``` If search is non empty then a greedy search is performed

                ```?trim={[true]}``` When trim is set to true, the underlying schemas are not returned for entities

                ```?sort={[asc/desc]}``` Default behavior is asc

                ```?page={page-number}``` Default page number is 1

                ```?pagesize={pagesize}``` Default pagesize is 25. To return all results: ```pagesize=all```
            operationId: idGetAllMeshmodelComponents
            responses:
                "200":
                    $ref: '#/responses/meshmodelComponentsDuplicateResponseWrapper'
            summary: Handle GET request for getting meshmodel components across all models and categories
            tags:
                - GetAllMeshmodelComponents
    /api/meshmodels/components/{name}:
        get:
            description: |-
                Example: ```/api/meshmodels/components/Namespace```
                Components can be further filtered through query parameter

                ```?model={model}``` If model is unspecified then all models are returned

                ```?version={version}``` If version is unspecified then all model versions are returned

                ```?apiVersion={apiVersion}``` If apiVersion is unspecified then all components are returned

                ```?order={field}``` orders on the passed field

                ```?sort={[asc/desc]}``` Default behavior is asc

                ```?trim={[true]}``` When trim is set to true, the underlying schemas are not returned for entities

                ```?search={[true/false]}``` If search is true then a greedy search is performed

                ```?page={page-number}``` Default page number is 1

                ```?pagesize={pagesize}``` Default pagesize is 25. To return all results: ```pagesize=all```
            operationId: idGetAllMeshmodelComponentsByName
            responses:
                "200":
                    $ref: '#/responses/meshmodelComponentsDuplicateResponseWrapper'
            summary: Handle GET request for getting meshmodel components of a specific type by name across all models and categories
            tags:
                - GetAllMeshmodelComponentsByName
    /api/meshmodels/models:
        get:
            description: |-
                # Returns a list of registered models across all categories

                ```?version={version}``` If version is unspecified then all models are returned

                ```?order={field}``` orders on the passed field

                ```?search={modelname}``` If search is non empty then a greedy search is performed

                ```?sort={[asc/desc]}``` Default behavior is asc

                ```?page={page-number}``` Default page number is 1

                ```?pagesize={pagesize}``` Default pagesize is 25. To return all results: ```pagesize=all```
            operationId: idGetMeshmodelModels
            responses:
                "200":
                    $ref: '#/responses/meshmodelModelsDuplicateResponseWrapper'
            summary: Handle GET request for getting all meshmodel models
            tags:
                - GetMeshmodelModels
    /api/meshmodels/models/{model}:
        get:
            description: |-
                # Returns a list of registered models across all categories

                ```?version={version}``` If version is unspecified then all models are returned

                ```?order={field}``` orders on the passed field

                ```?search={[true/false]}``` If search is true then a greedy search is performed

                ```?sort={[asc/desc]}``` Default behavior is asc

                ```?page={page-number}``` Default page number is 1

                ```?pagesize={pagesize}``` Default pagesize is 25. To return all results: ```pagesize=all```
            operationId: idGetMeshmodelModelsByName
            responses:
                "200":
                    $ref: '#/responses/meshmodelModelsDuplicateResponseWrapper'
            summary: Handle GET request for getting all meshmodel models. The component type/model name should be lowercase like "kubernetes", "istio"
            tags:
                - GetMeshmodelModelsByName
    /api/meshmodels/models/{model}/components:
        get:
            description: |-
                Example: ```/api/meshmodels/models/kubernetes/components```
                Components can be further filtered through query parameter

                ```?version={version}```

                ```?trim={[true]}``` When trim is set to true, the underlying schemas are not returned for entities

                ```?apiVersion={apiVersion}``` If apiVersion is unspecified then all models are returned

                ```?search={componentname}``` If search is non empty then a greedy search is performed

                ```?order={field}``` orders on the passed field

                ```?sort={[asc/desc]}``` Default behavior is asc

                ```?page={page-number}``` Default page number is 1

                ```?pagesize={pagesize}``` Default pagesize is 25. To return all results: ```pagesize=all```
            operationId: idGetMeshmodelComponentByModel
            responses:
                "200":
                    $ref: '#/responses/meshmodelComponentsDuplicateResponseWrapper'
            summary: Handle GET request for getting meshmodel components of a specific model. The component type/model name should be lowercase like "kubernetes", "istio"
            tags:
                - GetMeshmodelComponentByModel
    /api/meshmodels/models/{model}/components/{name}:
        get:
            description: |-
                Example: ```/api/meshmodels/models/kubernetes/components/Namespace```
                Components can be further filtered through query parameter

                ```?version={version}``` If version is unspecified then all model versions are returned

                ```?apiVersion={apiVersion}``` If apiVersion is unspecified then all components are returned

                ```?order={field}``` orders on the passed field

                ```?sort={[asc/desc]}``` Default behavior is asc

                ```?search={[true/false]}``` If search is true then a greedy search is performed

                ```?page={page-number}``` Default page number is 1

                ```?pagesize={pagesize}``` Default pagesize is 25. To return all results: ```pagesize=all```
            operationId: idGetMeshmodelComponentsByNameByModel
            responses:
                "200":
                    $ref: '#/responses/meshmodelComponentsDuplicateResponseWrapper'
            summary: Handle GET request for getting meshmodel components of a specific  model.
            tags:
                - GetMeshmodelComponentsByNameByModel
    /api/meshmodels/models/{model}/policies/:
        get:
            description: |-
                Example: ```/api/meshmodels/models/kubernetes/policies```

                ```?order={field}``` orders on the passed field

                ```?sort={[asc/desc]}``` Default behavior is asc

                ```?search={[true/false]}``` If search is true then a greedy search is performed

                ```?page={page-number}``` Default page number is 1

                ```?pagesize={pagesize}``` Default pagesize is 25. To return all results: ```pagesize=all```
            operationId: idGetMeshmodelPolicies
            responses:
                "200":
                    $ref: '#/responses/meshmodelPoliciesResponseWrapper'
            summary: Handle GET request for getting meshmodel policies of a specific model by name.
            tags:
                - GetMeshmodelPolicies
    /api/meshmodels/models/{model}/policies/{name}:
        get:
            description: |-
                Example: ```/api/meshmodels/models/kubernetes/policies/{name}```

                ```?order={field}``` orders on the passed field

                ```?sort={[asc/desc]}``` Default behavior is asc

                ```?search={[true/false]}``` If search is true then a greedy search is performed

                ```?page={page-number}``` Default page number is 1

                ```?pagesize={pagesize}``` Default pagesize is 25. To return all results: ```pagesize=all```
            operationId: idGetMeshmodelPoliciesByName
            responses:
                "200":
                    $ref: '#/responses/meshmodelPoliciesResponseWrapper'
            summary: Handle GET request for getting meshmodel policies of a specific model by name.
            tags:
                - GetMeshmodelPoliciesByName
    /api/meshmodels/models/{model}/relationships:
        get:
            description: |-
                Example: ```/api/meshmodel/model/kubernetes/relationship```

                # Relationships can be further filtered through query parameter

                ```?version={version}```

                ```?order={field}``` orders on the passed field

                ```?sort={[asc/desc]}``` Default behavior is asc

                ```?page={page-number}``` Default page number is 1

                ```?pagesize={pagesize}``` Default pagesize is 25. To return all results: ```pagesize=all```
            operationId: idGetAllMeshmodelRelationshipsByModel
            responses:
                "200":
                    $ref: '#/responses/meshmodelRelationshipsResponseWrapper'
            summary: Handle GET request for getting meshmodel relationships of a specific model
            tags:
                - GetAllMeshmodelRelationships
    /api/meshmodels/models/{model}/relationships/{name}:
        get:
            description: |-
                Example: ```/api/meshmodels/models/kubernetes/relationships/Edge```

                # Relationships can be further filtered through query parameter

                ```?version={version}```

                ```?order={field}``` orders on the passed field

                ```?sort={[asc/desc]}``` Default behavior is asc

                ```?search={[true/false]}``` If search is true then a greedy search is performed

                ```?page={page-number}``` Default page number is 1

                ```?pagesize={pagesize}``` Default pagesize is 25. To return all results: ```pagesize=all```
            operationId: idGetMeshmodelRelationshipByName
            responses:
                "200":
                    $ref: '#/responses/meshmodelRelationshipsResponseWrapper'
            summary: Handle GET request for getting meshmodel relationships of a specific model by name.
            tags:
                - GetMeshmodelRelationshipByName
    /api/meshmodels/registrants:
        get:
            description: |-
                # Returns a list of registrants and summary count of its models, components, and relationships

                ```?page={pagenumber}``` Default page number is 1

                ```?order={field}``` orders on the passed field

                ```?search={Hostname}``` Gets host by the name

                ```?sort={[asc/desc]}``` Default behavior is asc

                ```?pagesize={pagesize}``` Default pagesize is 25. To return all results: ```pagesize=all```
            operationId: GetMeshmodelRegistrants
            responses:
                "200":
                    $ref: '#/responses/meshmodelRegistrantsResponseWrapper'
            summary: Handle GET request for getting all meshmodel registrants
    /api/meshmodels/relationships:
        get:
            description: |-
                # Relationships can be further filtered through query parameter

                ```?version={version}```

                ```?order={field}``` orders on the passed field

                ```?sort={[asc/desc]}``` Default behavior is asc

                ```?page={page-number}``` Default page number is 1

                ```?pagesize={pagesize}``` Default pagesize is 25. To return all results: ```pagesize=all```
            operationId: idGetAllMeshmodelRelationships
            responses:
                "200":
                    $ref: '#/responses/meshmodelRelationshipsResponseWrapper'
            summary: Handle GET request for getting all meshmodel relationships
            tags:
                - GetAllMeshmodelRelationships
    /api/pattern:
        get:
            description: |-
                Returns the list of all the patterns saved by the current user
                This will return all the patterns with their details

                ```?order={field}``` orders on the passed field

                ```?search=<design name>``` A string matching is done on the specified design name

                ```?page={page-number}``` Default page number is 1

                ```?pagesize={pagesize}``` Default pagesize is 10

                ```?visibility={[visibility]}``` Default visibility is public + private; Mulitple visibility filters can be passed as an array
                Eg: ```?visibility=["public", "published"]``` will return public and published designs
            operationId: idGetPatternFiles
            responses:
                "200":
                    $ref: '#/responses/mesheryPatternsResponseWrapper'
            summary: Handle GET request for patterns
            tags:
                - PatternsAPI
        post:
            description: Edit/update a meshery pattern
            operationId: idPostPatternFile
            responses:
                "200":
                    $ref: '#/responses/mesheryPatternResponseWrapper'
            summary: Handle POST requests for patterns
            tags:
                - PatternsAPI
    /api/pattern/{id}:
        delete:
            description: DeleteMultiMesheryPatternsHandler deletes patterns with the given ids
            operationId: idDeleteMesheryPattern
            parameters:
                - description: id for a specific
                  format: uuid
                  in: path
                  name: id
                  required: true
                  type: string
                  x-go-name: ID
            responses:
                "200":
                    $ref: '#/responses/noContentWrapper'
            summary: Handle Delete for multiple Meshery Patterns
            tags:
                - PatternsAPI
        get:
            description: Fetches the pattern with the given id
            operationId: idGetMesheryPattern
            parameters:
                - description: id for a specific
                  format: uuid
                  in: path
                  name: id
                  required: true
                  type: string
                  x-go-name: ID
            responses:
                "200":
                    $ref: '#/responses/mesheryPatternResponseWrapper'
            summary: Handle GET for a Meshery Pattern
            tags:
                - PatternsAPI
    /api/pattern/{sourcetype}:
        post:
            description: Creates a new Pattern with source-content
            operationId: idPostPatternFileRequest
            responses:
                "200":
                    $ref: '#/responses/mesheryPatternResponseWrapper'
            summary: Handle POST request for Pattern Files
            tags:
                - PatternsAPI
        put:
            description: Updates the pattern with the given payload
            operationId: idUpdateMesheryPattern
            responses:
                "200":
                    $ref: '#/responses/mesheryPatternResponseWrapper'
            summary: Handle PUT request for Meshery Pattern with the given payload
            tags:
                - PatternsAPI
    /api/pattern/catalog:
        get:
            description: |-
                # Patterns can be further filtered through query parameter

                ```?order={field}``` orders on the passed field

                ```?page={page-number}``` Default page number is 0

                ```?pagesize={pagesize}``` Default pagesize is 10.

                ```?search={patternname}``` If search is non empty then a greedy search is performed
            operationId: idGetCatalogMesheryPatternsHandler
            responses:
                "200":
                    $ref: '#/responses/mesheryPatternsResponseWrapper'
            summary: Handle GET request for catalog patterns
            tags:
                - PatternsAPI
    /api/pattern/catalog/publish:
        post:
            description: Publishes pattern to Meshery Catalog by setting visibility to published and setting catalog data
            operationId: idPublishCatalogPatternHandler
            responses:
                "202":
                    $ref: '#/responses/noContentWrapper'
            summary: Handle Publish for a Meshery Pattern
            tags:
                - PatternsAPI
    /api/pattern/catalog/unpublish:
        delete:
            description: Unpublishes pattern from Meshery Catalog by setting visibility to private and removing catalog data from website
            operationId: idUnPublishCatalogPatternHandler
            responses:
                "200":
                    $ref: '#/responses/noContentWrapper'
            summary: Handle Publish for a Meshery Pattern
            tags:
                - PatternsAPI
    /api/pattern/clone/{id}:
        post:
            description: 'Creates a local copy of a published pattern with id: id'
            operationId: idCloneMesheryPattern
            responses:
                "200":
                    $ref: '#/responses/noContentWrapper'
            summary: Handle Clone for a Meshery Pattern
            tags:
                - PatternsAPI
    /api/pattern/deploy:
        delete:
            description: Delete a deployed pattern with the request
            operationId: idDeleteDeployPattern
            responses:
                "200":
                    description: ""
            summary: Handle DELETE request for Pattern Deploy
            tags:
                - PatternsAPI
        post:
            description: Deploy an attached pattern with the request
            operationId: idPostDeployPattern
            parameters:
                - in: formData
                  name: Upload Yaml/Yml File
                  type: file
                  x-go-name: FormFile
            responses:
                "200":
                    description: ""
            summary: Handle POST request for Pattern Deploy
            tags:
                - PatternsAPI
    /api/pattern/download/{id}/{sourcetype}:
        get:
            description: Get the pattern source-content
            operationId: typeGetApplication
            parameters:
                - in: formData
                  name: Upload Yaml/Yml File
                  type: file
                  x-go-name: FormFile
            responses: {}
            summary: Handle GET request for Meshery Patterns with of source content
            tags:
                - PatternsAPI
    /api/pattern/types:
        get:
            description: Get pattern file types
            operationId: typeGetMesheryPatternTypesHandler
            responses:
                "200":
                    $ref: '#/responses/mesheryApplicationTypesResponseWrapper'
            summary: Handle GET request for Meshery Pattern types
            tags:
                - PatternsAPI
    /api/patterns:
        delete:
            description: DeleteMultiMesheryPatternsHandler deletes patterns with the given ids
            operationId: idDeleteMesheryPattern
            parameters:
                - description: id for a specific
                  format: uuid
                  in: path
                  name: id
                  required: true
                  type: string
                  x-go-name: ID
            responses:
                "200":
                    $ref: '#/responses/noContentWrapper'
            summary: Handle Delete for multiple Meshery Patterns
            tags:
                - PatternsAPI
    /api/perf/profile:
        get:
            description: Runs the load test with the given parameters
            operationId: idRunPerfTest
            parameters:
                - in: query
                  name: Query
                - in: body
                  name: Body
                  schema: {}
            responses:
                "200":
                    description: ""
            summary: Handle GET request to run a test
            tags:
                - PerfAPI
    /api/perf/profile/result:
        get:
            description: |-
                # Results can be further filtered through query parameter

                ```?order={field}``` orders on the passed field

                ```?page={page-number}``` Default page number is 0

                ```?pagesize={pagesize}``` Default pagesize is 10

                ```?search={}``` If search is non empty then a greedy search is performed

                ```?from={date}``` Date must be in yyyy-mm-dd format

                ```?to={date}``` Date must be in yyyy-mm-dd format
            operationId: idGetAllPerfResults
            responses:
                "200":
                    $ref: '#/responses/performanceResultsResponseWrapper'
            summary: Handles GET requests for perf results
            tags:
                - PerfAPI
    /api/perf/profile/result/{id}:
        get:
            description: Returns an individual result from provider
            operationId: idGetSinglePerfResult
            responses:
                "200":
                    $ref: '#/responses/perfSingleResultRespWrapper'
            summary: Handles GET requests for perf result
            tags:
                - PerfAPI
    /api/policies/run_policy:
        post:
            description: Handle POST request for running the set of policies on the design file, the policies are picked from the policies directory and query is sent to find all the relationships around the services in the given design file
            operationId: idGetRegoPolicyForDesignFile
            responses: {}
            tags:
                - GetRegoPolicyForDesignFile
    /api/provider:
        get:
            description: Update the choice of provider in system
            operationId: idChoiceProvider
            parameters:
                - in: query
                  name: provider
                  type: string
                  x-go-name: Provider
            responses:
                "200":
                    description: ""
            summary: Handle GET request for the choice of provider
            tags:
                - ProvidersAPI
    /api/provider/capabilities:
        get:
            description: Returns the capabilities.json for the provider
            operationId: idGetProviderCapabilities
            responses:
                "200":
                    description: ""
            summary: Handle GET requests for Provider
            tags:
                - ProvidersAPI
    /api/provider/extension:
        get:
            description: handles the requests to serve react components from the provider package
            operationId: idReactComponents
            responses:
                "200":
                    description: ""
            summary: Handle GET request for React Components
            tags:
                - ProvidersAPI
    /api/providers:
        get:
            description: Returns the available list of providers
            operationId: idGetProvidersList
            responses:
                "200":
                    $ref: '#/responses/listProvidersRespWrapper'
            summary: Handle GET request for list of providers
            tags:
                - ProvidersAPI
    /api/schema/resource/{resourceName}:
        get:
            operationId: HandleResourceSchemas
            responses: {}
            summary: Handles the request to retrieve and merge resource JSON schema and UI schema.
    /api/smi/results:
        get:
            description: |-
                # Results can be further filtered through query parameter

                ```?order={field}``` orders on the passed field

                ```?page={page-number}``` Default page number is 0

                ```?pagesize={pagesize}``` Default pagesize is 10

                ```?search={status|mesh_version|mesh_name|date|id}``` If search is non empty then a greedy search is performed
            operationId: idFetchSmiResults
            responses:
                "200":
                    $ref: '#/responses/smiResultsResponseWrapper'
            summary: Handle GET request for the results of all the smi conformance tests
            tags:
                - Smi
    /api/system/adapter/manage:
        delete:
            description: Used to delete adapter configuration
            operationId: idDeleteAdapterConfig
            parameters:
                - in: query
                  name: adapter
                  type: string
                  x-go-name: Adapter
            responses:
                "200":
                    description: ""
            summary: Handle DELETE requests to delete adapter config
            tags:
                - SystemAPI
        post:
            description: Used to persist adapter config
            operationId: idPostAdapterConfig
            parameters:
                - in: body
                  name: meshLocationURL
                  schema:
                    type: string
                  x-go-name: MeshLocationURL
            responses:
                "200":
                    $ref: '#/responses/mesheryAdaptersRespWrapper'
            summary: Handle POST requests to persist adapter config
            tags:
                - SystemAPI
    /api/system/adapter/operation:
        post:
            description: Used to send operations to the adapters
            operationId: idPostAdapterOperation
            parameters:
                - in: query
                  name: adapter
                  type: string
                  x-go-name: Adapter
                - in: query
                  name: query
                  type: string
                  x-go-name: Query
                - in: query
                  name: customBody
                  type: string
                  x-go-name: CustomBody
                - in: query
                  name: namespace
                  type: string
                  x-go-name: Namespace
                - in: query
                  name: deleteOp
                  type: string
                  x-go-name: Delete
            responses:
                "200":
                    description: ""
            summary: Handle POST requests for Adapter Operations
            tags:
                - SystemAPI
    /api/system/adapters:
        get:
            description: Fetches and returns all the adapters and ping adapters
            operationId: idGetSystemAdapters
            parameters:
                - in: query
                  name: adapter
                  type: string
                  x-go-name: Adapter
            responses:
                "200":
                    $ref: '#/responses/systemAdaptersRespWrapper'
            summary: Handle GET request for adapters
            tags:
                - SystemAPI
    /api/system/adapters/available:
        get:
            description: Fetches and returns all the adapters available for deployment
            operationId: idGetAvailableAdapters
            responses:
                "200":
                    $ref: '#/responses/systemAdaptersRespWrapper'
            summary: Handle GET request for available adapters
            tags:
                - SystemAPI
    /api/system/database:
        get:
            description: |-
                # Tables can be further filtered through query parameter

                ```?order={field}``` orders on the passed field

                ```?sort={[asc/desc]}``` Default behavior is asc

                ```?page={page-number}``` Default page number is 1

                ```?pagesize={pagesize}``` Default pagesize is 10. To return all results: ```pagesize=all```

                ```?search={tablename}``` If search is non empty then a greedy search is performed
            operationId: idGetSystemDatabase
            responses:
                "200":
                    $ref: '#/responses/systemDatabaseResponseWrapper'
            summary: Handle GET request for getting summary about the system database.
            tags:
                - GetSystemDatabase
    /api/system/database/reset:
        delete:
            description: |-
                This endpoint resets the system database to its initial state by performing the following steps:
                Creates an archive of the current database contents.
                Drops all existing tables in the database.
                Applies auto migration to recreate the necessary tables.
            operationId: ResetSystemDatabase
            responses:
                "200":
                    description: ""
                "500":
                    description: ""
            summary: Reset the system database to its initial state.
    /api/system/kubernetes:
        delete:
            description: Used to delete kubernetes config to System
            operationId: idDeleteK8SConfig
            responses:
                "200":
                    description: ""
            summary: Handle DELETE request for Kubernetes Config
            tags:
                - SystemAPI
        post:
            description: Used to add kubernetes config to System
            operationId: idPostK8SConfig
            responses:
                "200":
                    $ref: '#/responses/k8sConfigRespWrapper'
            summary: Handle POST request for Kubernetes Config
            tags:
                - SystemAPI
    /api/system/kubernetes/contexts:
        get:
            description: |-
                # Contexts can be further filtered through query parameter

                ```?order={field}``` orders on the passed field

                ```?page={page-number}``` Default page number is 0

                ```?pagesize={pagesize}``` Default pagesize is 10

                ```?search={contextname}``` If search is non empty then a greedy search is performed
            operationId: idGetAllContexts
            responses:
                "200":
                    $ref: '#/responses/systemK8sContextsResponseWrapper'
            summary: Handle GET request for all kubernetes contexts.
            tags:
                - GetAllContexts
        post:
            description: Returns the context list for a given k8s config
            operationId: idPostK8SContexts
            responses:
                "200":
                    $ref: '#/responses/k8sContextsRespWrapper'
            summary: Handle POST requests for Kubernetes Context list
            tags:
                - SystemAPI
    /api/system/kubernetes/ping?connection_id={id}:
        get:
            description: Fetches server version to simulate ping
            operationId: idGetKubernetesPing
            responses:
                "200":
                    description: ""
            summary: Handle GET request for Kubernetes ping
            tags:
                - SystemAPI
    /api/system/kubernetes/register:
        post:
            description: Used to register Kubernetes components to Meshery from a kubeconfig file
            operationId: idPostK8SRegistration
            responses:
                "202":
                    description: ""
                "400":
                    description: ""
                "500":
                    description: ""
            summary: Handle registration request for Kubernetes components
            tags:
                - SystemAPI
    /api/system/meshsync/grafana:
        get:
            description: Fetches Prometheus and Grafana
            operationId: idMeshSyncGrafana
            responses:
                "200":
                    $ref: '#/responses/v1ServicesMapResponseWrapper'
            summary: Handle GET request for mesh-sync grafana
            tags:
                - SystemAPI
    /api/system/meshsync/prometheus:
        get:
            description: Fetches Prometheus
            operationId: idMeshSyncPrometheus
            responses:
                "200":
                    $ref: '#/responses/v1ServicesMapResponseWrapper'
            summary: Handle GET request for fetching prometheus
            tags:
                - SystemAPI
    /api/system/meshsync/resources:
        get:
            description: |-
                ```?apiVersion={apiVersion}``` If apiVersion is unspecified then all models are returned

                ```?search={componentname}``` If search is non empty then a greedy search is performed

                ```?order={field}``` orders on the passed field

                ```?sort={[asc/desc]}``` Default behavior is asc

                ```?page={page-number}``` Default page number is 1

                ```?pagesize={pagesize}``` Default pagesize is 25. To return all results: ```pagesize=all```

                ```?annotation={annotaion}``` annotation is a boolean value. If true then annotations are returned

                ```?labels={labels}``` labels is a boolean value. If true then labels are returned

                ```?spec={spec}``` spec is a boolean value. If true then spec is returned

                ```?status={status}``` status is a boolean value. If true then status is returned

                ```?clusterId={clusterId}``` clusterId is a string value. If specified then resources for that cluster are returned
            operationId: idGetMeshSyncResources
            responses:
                "200":
                    $ref: '#/responses/meshsyncResourcesResponseWrapper'
            summary: Handle GET request for meshsync discovered resources
            tags:
                - GetMeshSyncResources
    /api/system/sync:
        get:
            description: Used to send session data to the UI for initial sync
            operationId: idSystemSync
            responses:
                "200":
                    $ref: '#/responses/userLoadTestPrefsRespWrapper'
            summary: Handle GET request for config sync
            tags:
                - SystemAPI
    /api/system/version:
        get:
            description: Returns the running Meshery version
            operationId: idGetSystemVersion
            responses:
                "200":
                    $ref: '#/responses/mesheryVersionRespWrapper'
            summary: Handle GET request for system/server version
            tags:
                - SystemAPI
    /api/telemetry/metrics/board_import:
        post:
            description: Used for importing Grafana board for Prometheus
            operationId: idPostPrometheusBoardImport
            responses:
                "200":
                    $ref: '#/responses/prometheusBoardImportRespWrapper'
            summary: Handle POST request for Prometheus board import
            tags:
                - PrometheusAPI
    /api/telemetry/metrics/boards:
        post:
            description: Used to persist selected board and panels
            operationId: idPostPrometheusBoard
            parameters:
                - in: body
                  name: Body
                  required: true
                  schema:
                    items: {}
                    type: array
            responses:
                "200":
                    description: ""
            summary: Handle POST request for Prometheus board
            tags:
                - PrometheusAPI
    /api/telemetry/metrics/config:
        delete:
            description: Used for deleting Prometheus configuration
            operationId: idDeletePrometheusConfig
            responses:
                "200":
                    description: ""
            summary: Handle DELETE for Prometheus configuration
            tags:
                - PrometheusAPI
        get:
            description: Used for fetching Prometheus configuration
            operationId: idGetPrometheusConfig
            responses:
                "200":
                    $ref: '#/responses/prometheusConfigResponseWrapper'
            summary: Handle GET for Prometheus configuration
            tags:
                - PrometheusAPI
        post:
            description: Used for persisting Prometheus configuration
            operationId: idPostPrometheusConfig
            parameters:
                - in: body
                  name: prometheusURL
                  schema:
                    type: string
                  x-go-name: PrometheusURL
            responses:
                "200":
                    description: ""
            summary: Handle POST for Prometheus configuration
            tags:
                - PrometheusAPI
    /api/telemetry/metrics/grafana/boards:
        get:
            description: Used for fetching Grafana boards and panels
            operationId: idGetGrafanaBoards
            parameters:
                - in: query
                  name: dashboardSearch
                  type: string
                  x-go-name: DashboardSearch
            responses:
                "200":
                    $ref: '#/responses/grafanaBoardsResponseWrapper'
            summary: Handle GET request for Grafana boards
            tags:
                - GrafanaAPI
        post:
            description: Used for persist Grafana boards and panel selections
            operationId: idPostGrafanaBoards
            responses:
                "200":
                    description: ""
            summary: Handle POST request for Grafana boards
            tags:
                - GrafanaAPI
    /api/telemetry/metrics/grafana/config:
        delete:
            description: Used for Delete Grafana configuration
            operationId: idDeleteGrafanaConfig
            responses:
                "200":
                    description: ""
            summary: Handle DELETE request for Grafana configuration
            tags:
                - GrafanaAPI
        get:
            description: Used for fetching Grafana configuration
            operationId: idGetGrafanaConfig
            responses:
                "200":
                    $ref: '#/responses/grafanaConfigResponseWrapper'
            summary: Handle GET request for Grafana configuration
            tags:
                - GrafanaAPI
        post:
            description: Used for persisting Grafana configuration
            operationId: idPostGrafanaConfig
            parameters:
                - in: body
                  name: Body
                  required: true
                  schema: {}
            responses:
                "200":
                    description: ""
            summary: Handle POST request for Grafana configuration
            tags:
                - GrafanaAPI
    /api/telemetry/metrics/grafana/ping:
        get:
            description: Used to initiate a Grafana ping
            operationId: idGetGrafanaPing
            responses:
                "200":
                    description: ""
            summary: Handle GET request for Grafana ping
            tags:
                - GrafanaAPI
    /api/telemetry/metrics/grafana/query:
        get:
            description: Used for handling Grafana queries
            operationId: idGetGrafanaQuery
            responses:
                "200":
                    description: ""
            summary: Handle GET request for Grafana queries
            tags:
                - GrafanaAPI
    /api/telemetry/metrics/grafana/scan:
        get:
            description: Fetches and returns Grafana
            operationId: idGetGrafana
            responses:
                "200":
                    $ref: '#/responses/v1ServicesMapResponseWrapper'
            summary: Handle GET request for Grafana
            tags:
                - GrafanaAPI
    /api/telemetry/metrics/ping:
        get:
            description: Used to ping prometheus
            operationId: idGetPrometheusPing
            responses:
                "200":
                    description: ""
            summary: Handle GET request for Prometheus Ping
            tags:
                - PrometheusAPI
    /api/telemetry/metrics/query:
        get:
            description: Used to prometheus queries
            operationId: idGetPrometheusQuery
            responses:
                "200":
                    description: ""
            summary: Handle GET request for Prometheus Query
            tags:
                - PrometheusAPI
    /api/telemetry/metrics/static-board:
        get:
            description: Used to fetch the static board
            operationId: idGetPrometheusStaticBoard
            responses:
                "200":
                    $ref: '#/responses/prometheusStaticBoardRespWrapper'
            summary: Handle GET request for Prometheus static board
            tags:
                - PrometheusAPI
    /api/user/login:
        get:
            description: Redirects user for auth or issues session
            operationId: idGetUserLogin
            responses:
                "200":
                    description: ""
            summary: Handlers GET request for User login
            tags:
                - UserAPI
    /api/user/logout:
        get:
            description: Redirects user for auth or issues session
            operationId: idGetUserLogout
            responses:
                "200":
                    description: ""
            summary: Handlers GET request for User logout
            tags:
                - UserAPI
    /api/user/performance/profiles:
        get:
            description: |-
                Returns the list of all the performance profiles saved by the current user

                ```?order={field}``` orders on the passed field

                ```?page={page-number}``` Default page number is 0

                ```?pagesize={pagesize}``` Default pagesize is 10

                ```?search={profilename}``` If search is non empty then a greedy search is performed
            operationId: idGetPerformanceProfiles
            responses:
                "200":
                    $ref: '#/responses/performanceProfilesResponseWrapper'
            summary: Handle GET requests for performance profiles
            tags:
                - PerformanceAPI
        post:
            description: Save performance profile using the current provider's persistence mechanism
            operationId: idSavePerformanceProfile
            parameters:
                - in: body
                  name: Body
                  schema: {}
            responses:
                "200":
                    $ref: '#/responses/performanceProfileResponseWrapper'
            summary: Handle POST requests for saving performance profile
            tags:
                - PerformanceAPI
    /api/user/performance/profiles/{id}:
        delete:
            description: Deletes a performance profile with the given id
            operationId: idDeletePerformanceProfile
            parameters:
                - description: id for a specific
                  format: uuid
                  in: path
                  name: id
                  required: true
                  type: string
                  x-go-name: ID
            responses:
                "200":
                    $ref: '#/responses/noContentWrapper'
            summary: Handle Delete requests for performance profiles
            tags:
                - PerformanceAPI
        get:
            description: Returns single performance profile with the given id
            operationId: idGetSinglePerformanceProfile
            parameters:
                - description: id for a specific
                  format: uuid
                  in: path
                  name: id
                  required: true
                  type: string
                  x-go-name: ID
            responses:
                "200":
                    $ref: '#/responses/performanceProfileResponseWrapper'
            summary: Handle GET requests for performance results of a profile
            tags:
                - PerformanceAPI
    /api/user/performance/profiles/{id}/results:
        get:
            description: |-
                Fetches pages of results from provider for the given id

                ```?order={field}``` orders on the passed field

                ```?page={page-number}``` Default page number is 0

                ```?pagesize={pagesize}``` Default pagesize is 10

                ```?search={result_name|mesh|url}``` If search is non empty then a greedy search is performed
            operationId: idGETProfileResults
            parameters:
                - description: id for a specific
                  format: uuid
                  in: path
                  name: id
                  required: true
                  type: string
                  x-go-name: ID
            responses:
                "200":
                    $ref: '#/responses/performanceResultsResponseWrapper'
            summary: Handle GET request for results of a profile
            tags:
                - PerformanceAPI
    /api/user/performance/profiles/{id}/run:
        get:
            description: Runs the load test with the given parameters
            operationId: idRunPerformanceTest
            parameters:
                - in: query
                  name: Body
            responses:
                "200":
                    description: ""
            summary: Handle GET request to run a performance test
            tags:
                - PerformanceAPI
    /api/user/performance/profiles/results:
        get:
            description: |-
                # Results can be further filtered through query parameter

                ```?order={field}``` orders on the passed field

                ```?page={page-number}``` Default page number is 0

                ```?pagesize={pagesize}``` Default pagesize is 10

                ```?search={}``` If search is non empty then a greedy search is performed

                ```?from={date}``` Date must be in yyyy-mm-dd format

                ```?to={date}``` Date must be in yyyy-mm-dd format
            operationId: idGetAllPerformanceResults
            responses:
                "200":
                    $ref: '#/responses/performanceResultsResponseWrapper'
            summary: Handles GET requests for performance results
            tags:
                - PerformanceAPI
    /api/user/prefs:
        get:
            description: Returns User Load Test Preferences
            operationId: idGetUserTestPrefs
            responses:
                "200":
                    $ref: '#/responses/userLoadTestPrefsRespWrapper'
            summary: Handle GET Requests for User Load Test Preferences
            tags:
                - UserAPI
        post:
            description: Updates User Load Test Preferences
            operationId: idPostUserTestPrefs
            responses:
                "200":
                    $ref: '#/responses/userLoadTestPrefsRespWrapper'
            summary: Handle POST Requests for User Load Test Preferences
            tags:
                - UserAPI
    /api/user/prefs/perf:
        delete:
            description: Used for deleting load test preferences
            operationId: idDeleteLoadPreferences
            parameters:
                - format: uuid
                  in: query
                  name: uuid
                  type: string
                  x-go-name: UUID
            responses:
                "200":
                    description: ""
            summary: Handle DELETE request for load test preferences
            tags:
                - UserAPI
        get:
            description: Used for fetching load test preferences
            operationId: idGetLoadPreferences
            parameters:
                - format: uuid
                  in: query
                  name: uuid
                  type: string
                  x-go-name: UUID
            responses:
                "200":
                    $ref: '#/responses/loadTestPreferencesWrapper'
            summary: Handle GET request for load test preferences
            tags:
                - UserAPI
        post:
            description: Used for persisting load test preferences
            operationId: idPostLoadPreferences
            parameters:
                - in: body
                  name: Body
                  schema: {}
            responses:
                "200":
                    description: ""
            summary: Handle POST request for load test preferences
            tags:
                - UserAPI
    /api/user/profile/{id}:
        get:
            description: Returns User info
            operationId: idGetUserByIDHandler
            responses:
                "200":
                    $ref: '#/responses/userInfo'
            summary: Handle GET for User info by ID
            tags:
                - UserAPI
    /api/user/schedules:
        get:
            description: |-
                # Returns the list of all the schedules saved by the current user

                ```?order={field}``` orders on the passed field

                ```?page={page-number}``` Default page number is 0

                ```?pagesize={pagesize}``` Default pagesize is 10
            operationId: idGetSchedules
            responses:
                "200":
                    $ref: '#/responses/schedulesResponseWrapper'
            summary: Handle GET request for Schedules
            tags:
                - SchedulesAPI
        post:
            description: Save schedule using the current provider's persistence mechanism
            operationId: idPostSchedules
            responses:
                "200":
                    $ref: '#/responses/singleScheduleResponseWrapper'
            summary: Handle POST request for Schedules
            tags:
                - SchedulesAPI
    /api/user/schedules/{id}:
        delete:
            description: Deletes a schedule with the given id
            operationId: idDeleteSchedules
            parameters:
                - description: id for a specific
                  format: uuid
                  in: path
                  name: id
                  required: true
                  type: string
                  x-go-name: ID
            responses:
                "200":
                    $ref: '#/responses/schedulesResponseWrapper'
            summary: Handle DELETE request for Schedules
            tags:
                - SchedulesAPI
        get:
            description: Fetches and returns the schedule with the given id
            operationId: idGetSingleSchedule
            parameters:
                - description: id for a specific
                  format: uuid
                  in: path
                  name: id
                  required: true
                  type: string
                  x-go-name: ID
            responses:
                "200":
                    $ref: '#/responses/singleScheduleResponseWrapper'
            summary: Handle GET request for Schedules
            tags:
                - SchedulesAPI
    /api/user/token:
        get:
            description: |-
                Returns token from the actual provider in a file
                response:
                200:
            operationId: idGetTokenProvider
            summary: Handle GET request for tokens
            tags:
                - UserAPI
        post:
            description: |-
                Receives token from the actual provider
                response:
                200:
            operationId: idPostTokenProvider
            summary: Handle POST request for tokens
            tags:
                - UserAPI
    /api/v2/events:
        get:
            description: |-
                ```search={description}``` If search is non empty then a search is performed on event description
                ```?category=[eventcategory] Returns event belonging to provided categories ```
                ```?action=[eventaction] Returns events belonging to provided actions ```
                ```?status={[read/unread]}``` Return events filtered on event status Default is unread````
                ```?severity=[eventseverity] Returns events belonging to provided severities ```
                ```?sort={field} order the records based on passed field, defaults to updated_at```
                ```?order={[asc/desc]}``` Default behavior is desc
                ```?page={page-number}``` Default page number is 1
                ```?pagesize={pagesize}``` Default pagesize is 25. To return all results: ```pagesize=all```
            operationId: idGetEventStreamer
            responses:
                "200":
                    $ref: '#/responses/eventsResponseWrapper'
            summary: Handle GET request for events.
            tags:
                - EventsAPI
    /provider:
        get:
            description: Servers providers UI
            operationId: idProvider
            responses:
                "200":
                    description: ""
            summary: Handle GET request to provider UI
            tags:
                - ProvidersAPI
produces:
    - application/json
responses:
    Category:
        description: ""
        headers:
            metadata: {}
            name:
                type: string
        schema:
            additionalProperties: {}
            type: object
    ComponentDefinition:
        description: ""
        headers:
            apiVersion:
                type: string
            displayName:
                type: string
            displayhostname:
                type: string
            format: {}
            hostID: {}
            hostname:
                type: string
            kind:
                type: string
            metadata: {}
            model: {}
            schema:
                type: string
        schema:
            additionalProperties: {}
            type: object
    Connection:
        description: ""
        headers:
            created_at:
                format: date-time
                type: string
            credential_id: {}
            deleted_at: {}
            id: {}
            kind:
                type: string
            metadata: {}
            name:
                type: string
            status: {}
            sub_type:
                type: string
            type:
                type: string
            updated_at:
                format: date-time
                type: string
            user_id: {}
        schema:
            additionalProperties: {}
            type: object
    ConnectionPage:
        description: ""
        headers:
            connections:
                items: {}
                type: array
            page:
                format: int64
                type: integer
            page_size:
                format: int64
                type: integer
            total_count:
                format: int64
                type: integer
    ConnectionStatus:
        description: ""
        schema: {}
    ConnectionsStatusPage:
        description: ""
        headers:
            connections_status:
                items: {}
                type: array
    EventsResponse:
        description: ""
        headers:
            count_by_severity_level:
                items: {}
                type: array
            events:
                items: {}
                type: array
            page:
                format: int64
                type: integer
            page_size:
                format: int64
                type: integer
            total_count:
                format: int64
                type: integer
    FilterFilesResponseWrapper:
        description: Returns the response of the Filter files
    Model:
        description: ""
        headers:
            category: {}
            displayName:
                type: string
            displayhostname:
                type: string
            hostID: {}
            hostname:
                type: string
            metadata: {}
            name:
                type: string
            version:
                type: string
        schema:
            additionalProperties: {}
            type: object
    RelationshipDefinition:
        description: |-
            https://docs.google.com/drawings/d/1_qzQ_YxvCWPYrOBcdqGMlMwfbsZx96SBuIkbn8TfKhU/edit?pli=1
            see RELATIONSHIPDEFINITIONS table in the diagram
        headers:
            apiVersion:
                type: string
            displayhostname:
                type: string
            hostID: {}
            hostname:
                type: string
            kind:
                type: string
            metadata: {}
            model: {}
            selectors: {}
            subType:
                type: string
        schema:
            additionalProperties: {}
            type: object
    applicationFilesResponseWrapper:
        description: Returns the response of the application files
    environmentResponseWrapper:
        description: Returns environment
    environmentsResponseWrapper:
        description: Returns all environements
    eventResponseWrapper:
        description: Returns event
    eventsResponseWrapper:
        description: Returns all events
    grafanaBoardsResponseWrapper:
        description: Returns Grafana boards and panels
        schema:
            items: {}
            type: array
    grafanaConfigResponseWrapper:
        description: Returns Grafana configs
    k8sConfigRespWrapper:
        description: Returns saved kubernetes config
    k8sContextsRespWrapper:
        description: Returns kubernetes context list
    keys:
        description: Returns users Keys
        headers:
            Body: {}
    listProvidersRespWrapper:
        description: Returns a list of available providers
        schema:
            additionalProperties: {}
            type: object
    loadTestPreferencesWrapper:
        description: Returns load test preferences
    mesheryAdaptersRespWrapper:
        description: Returns all the meshery adapters
        schema:
            items: {}
            type: array
    mesheryApplicationResponseWrapper:
        description: Fetches a single Meshery Application
    mesheryApplicationTypesResponseWrapper:
        description: Returns Meshery application types
        schema:
            items: {}
            type: array
    mesheryApplicationsResponseWrapper:
        description: Returns all meshery applications
    mesheryConnectionResponseWrapper:
        description: Returns a single connection
    mesheryConnectionsStatusPage:
        description: Returns all connections Status
    mesheryFilterResponseWrapper:
        description: Returns a single meshery filter
    mesheryFiltersResponseWrapper:
        description: Returns all meshery filters
    mesheryPatternResponseWrapper:
        description: Returns a single meshery pattern
    mesheryPatternsResponseWrapper:
        description: Returns all meshery patterns
    mesheryVersionRespWrapper:
        description: Returns Meshery version
    meshmodelCategoriesResponseWrapper:
        description: Returns meshmodel categories
    meshmodelComponentsDuplicateResponseWrapper:
        description: Return meshmoddel components with the count of duplicates
    meshmodelComponentsResponseWrapper:
        description: Return meshmodel components
    meshmodelModelsDuplicateResponseWrapper:
        description: Return meshmodel models with the count of duplicates
    meshmodelModelsResponseWrapper:
        description: Returns meshmodel models
    meshmodelPoliciesResponseWrapper:
        description: Returns meshmodel policies
    meshmodelRegistrantsResponseWrapper:
        description: Returns meshmodel registrants
    meshmodelRelationshipsResponseWrapper:
        description: Returns meshmodel relationships
    meshsyncResourcesResponseWrapper:
        description: Returns MeshSync resources
    noContentWrapper:
        description: ""
    perfSingleResultRespWrapper:
        description: Returns Single test result
    perfTestPrefsRespWrapper:
        description: Returns Perf test preference
    performanceProfileResponseWrapper:
        description: Returns a single performance profile
    performanceProfilesResponseWrapper:
        description: Returns all the performance profiles
    performanceResultsResponseWrapper:
        description: Returns all performance results
    prometheusBoardImportRespWrapper:
        description: Response for prometheus board import
    prometheusConfigResponseWrapper:
        description: Returns prometheus configuration
    prometheusStaticBoardRespWrapper:
        description: Returns Prometheus static board
        schema:
            additionalProperties: {}
            type: object
    schedulesResponseWrapper:
        description: Returns List of saved schedules
    singleScheduleResponseWrapper:
        description: Returns a single schedules
    smiResultsResponseWrapper:
        description: Returns SMI results
    systemAdaptersRespWrapper:
        description: Return all the adapters
        schema:
            items: {}
            type: array
    systemDatabaseResponseWrapper:
        description: Returns database summary
    systemK8sContextsResponseWrapper:
        description: Returns K8s contexts
    userInfo:
        description: Returns user info
    userLoadTestPrefsRespWrapper:
        description: Returns User Load Test Preferencee
    users:
        description: Returns all users info
    v1ServicesMapResponseWrapper:
        description: Returns a map for v1 services
        schema:
            additionalProperties: {}
            type: object
schemes:
    - http
security:
    - token:
        - '[]'
securityDefinitions:
    token:
        in: cookie
        name: token
        type: apiKey
swagger: "2.0"
