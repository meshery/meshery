basePath: /
consumes:
    - application/json
    - multipart/form-data
definitions:
    AccessMode:
        properties:
            BlockVolume:
                $ref: '#/definitions/TypeBlock'
            MountVolume:
                $ref: '#/definitions/TypeMount'
            Scope:
                $ref: '#/definitions/Scope'
            Sharing:
                $ref: '#/definitions/SharingMode'
        title: AccessMode defines the access mode of a volume.
        type: object
        x-go-package: github.com/docker/docker/api/types/volume
    AccountExtension:
        description: AccountExtension describes the Account extension point in the UI
        properties:
            children:
                $ref: '#/definitions/AccountExtensions'
            component:
                type: string
                x-go-name: Component
            href:
                $ref: '#/definitions/Href'
            link:
                type: boolean
                x-go-name: Link
            on_click_callback:
                format: int64
                type: integer
                x-go-name: OnClickCallback
            show:
                type: boolean
                x-go-name: Show
            title:
                type: string
                x-go-name: Title
            type:
                type: string
                x-go-name: Type
        type: object
        x-go-package: github.com/layer5io/meshery/server/models
    AccountExtensions:
        description: NavigatorExtensions is a collection of AccountExtension
        items:
            $ref: '#/definitions/AccountExtension'
        type: array
        x-go-package: github.com/layer5io/meshery/server/models
    Adapter:
        description: Adapter represents an adapter in Meshery
        properties:
            adapter_location:
                type: string
                x-go-name: Location
            git_commit_sha:
                type: string
                x-go-name: GitCommitSHA
            name:
                type: string
                x-go-name: Name
            ops:
                items:
                    $ref: '#/definitions/SupportedOperation'
                type: array
                x-go-name: Ops
            version:
                type: string
                x-go-name: Version
        type: object
        x-go-package: github.com/layer5io/meshery/server/models
    Adapters:
        properties:
            appMesh:
                type: boolean
                x-go-name: AppMesh
            cilium:
                type: boolean
                x-go-name: Cilium
            citrix:
                type: boolean
                x-go-name: Citrix
            consul:
                type: boolean
                x-go-name: Consul
            istio:
                type: boolean
                x-go-name: Istio
            kuma:
                type: boolean
                x-go-name: Kuma
            linkerd:
                type: boolean
                x-go-name: Linkerd
            nginx:
                type: boolean
                x-go-name: Nginx
            nsm:
                type: boolean
                x-go-name: NSM
        type: object
        x-go-package: github.com/layer5io/meshery/server/models
    Alert:
        properties:
            alertRuleTags:
                additionalProperties:
                    type: string
                type: object
                x-go-name: AlertRuleTags
            conditions:
                items:
                    $ref: '#/definitions/AlertCondition'
                type: array
                x-go-name: Conditions
            executionErrorState:
                type: string
                x-go-name: ExecutionErrorState
            for:
                type: string
                x-go-name: For
            frequency:
                type: string
                x-go-name: Frequency
            handler:
                format: int64
                type: integer
                x-go-name: Handler
            message:
                type: string
                x-go-name: Message
            name:
                type: string
                x-go-name: Name
            noDataState:
                type: string
                x-go-name: NoDataState
            notifications:
                items:
                    $ref: '#/definitions/AlertNotification'
                type: array
                x-go-name: Notifications
        type: object
        x-go-package: github.com/grafana-tools/sdk
    AlertCondition:
        properties:
            evaluator:
                $ref: '#/definitions/AlertEvaluator'
            operator:
                $ref: '#/definitions/AlertOperator'
            query:
                $ref: '#/definitions/AlertQuery'
            reducer:
                $ref: '#/definitions/AlertReducer'
            type:
                type: string
                x-go-name: Type
        type: object
        x-go-package: github.com/grafana-tools/sdk
    AlertEvaluator:
        properties:
            params:
                items:
                    format: double
                    type: number
                type: array
                x-go-name: Params
            type:
                type: string
                x-go-name: Type
        type: object
        x-go-package: github.com/grafana-tools/sdk
    AlertNotification:
        description: |-
            AlertNotification as described in the doc
            https://grafana.com/docs/grafana/latest/http_api/alerting_notification_channels/
        properties:
            disableResolveMessage:
                type: boolean
                x-go-name: DisableResolveMessage
            frequency:
                type: string
                x-go-name: Frequency
            id:
                format: int64
                type: integer
                x-go-name: ID
            isDefault:
                type: boolean
                x-go-name: IsDefault
            name:
                type: string
                x-go-name: Name
            sendReminder:
                type: boolean
                x-go-name: SendReminder
            settings:
                x-go-name: Settings
            type:
                type: string
                x-go-name: Type
            uid:
                type: string
                x-go-name: UID
        type: object
        x-go-package: github.com/grafana-tools/sdk
    AlertOperator:
        properties:
            type:
                type: string
                x-go-name: Type
        type: object
        x-go-package: github.com/grafana-tools/sdk
    AlertQuery:
        properties:
            params:
                items:
                    type: string
                type: array
                x-go-name: Params
        type: object
        x-go-package: github.com/grafana-tools/sdk
    AlertReducer:
        properties:
            params:
                items:
                    type: string
                type: array
                x-go-name: Params
            type:
                type: string
                x-go-name: Type
        type: object
        x-go-package: github.com/grafana-tools/sdk
    AllUsers:
        properties:
            data:
                items:
                    $ref: '#/definitions/User'
                type: array
                x-go-name: Data
            page:
                format: int64
                type: integer
                x-go-name: Page
            page_size:
                format: int64
                type: integer
                x-go-name: PageSize
            total_count:
                format: int64
                type: integer
                x-go-name: TotalCount
        type: object
        x-go-package: github.com/layer5io/meshery/server/models
    ApplicationType:
        type: string
        x-go-package: github.com/layer5io/meshery/server/models
    ApplicationTypeResponse:
        properties:
            application_type:
                $ref: '#/definitions/ApplicationType'
            supported_extensions:
                items:
                    type: string
                type: array
                x-go-name: SupportedExtensions
        type: object
        x-go-package: github.com/layer5io/meshery/server/models
    ApplicationsAPIResponse:
        description: ApplicationsAPIResponse response retruned by patternfile endpoint on meshery server
        properties:
            applications:
                items:
                    $ref: '#/definitions/MesheryApplication'
                type: array
                x-go-name: Applications
            page:
                format: uint64
                type: integer
                x-go-name: Page
            page_size:
                format: uint64
                type: integer
                x-go-name: PageSize
            total_count:
                format: uint64
                type: integer
                x-go-name: TotalCount
        type: object
        x-go-package: github.com/layer5io/meshery/server/models
    AuthenticateOKBody:
        description: AuthenticateOKBody authenticate o k body
        properties:
            IdentityToken:
                description: An opaque token used to authenticate a user after a successful login
                type: string
            Status:
                description: The status of the authentication
                type: string
        required:
            - IdentityToken
            - Status
        type: object
        x-go-package: github.com/docker/docker/api/types/registry
    Availability:
        title: Availability specifies the availability of the volume.
        type: string
        x-go-package: github.com/docker/docker/api/types/volume
    Axis:
        description: for a graph panel
        properties:
            decimals:
                format: int64
                type: integer
                x-go-name: Decimals
            format:
                type: string
                x-go-name: Format
            label:
                type: string
                x-go-name: Label
            logBase:
                format: int64
                type: integer
                x-go-name: LogBase
            max:
                $ref: '#/definitions/FloatString'
            min:
                $ref: '#/definitions/FloatString'
            show:
                type: boolean
                x-go-name: Show
        type: object
        x-go-package: github.com/grafana-tools/sdk
    BoolString:
        properties:
            Flag:
                type: boolean
            Value:
                type: string
        type: object
        x-go-package: github.com/grafana-tools/sdk
    Capabilities:
        description: Capabilities is the collection of capability
        items:
            $ref: '#/definitions/Capability'
        type: array
        x-go-package: github.com/layer5io/meshery/server/models
    Capability:
        properties:
            description:
                description: Description A written representation of the purpose and characteristics of the capability.
                type: string
                x-go-name: Description
            displayName:
                description: DisplayName Name of the capability in human-readible format.
                type: string
                x-go-name: DisplayName
            entityState:
                description: EntityState State of the entity in which the capability is applicable.
                items:
                    $ref: '#/definitions/CapabiliyEntityState'
                type: array
                x-go-name: EntityState
            key:
                description: Key Key that backs the capability.
                type: string
                x-go-name: Key
            kind:
                description: Kind Top-level categorization of the capability
                type: string
                x-go-name: Kind
            metadata:
                additionalProperties: {}
                description: Metadata Metadata contains additional information associated with the capability. Extension point.
                type: object
                x-go-name: Metadata
            schemaVersion:
                description: SchemaVersion Specifies the version of the schema to which the capability definition conforms.
                type: string
                x-go-name: SchemaVersion
            status:
                $ref: '#/definitions/CapabiliyStatus'
            subType:
                description: SubType Most granular unit of capability classification. The combination of Kind, Type and SubType together uniquely identify a Capability.
                type: string
                x-go-name: SubType
            type:
                description: Type Classification of capabilities. Used to group capabilities similar in nature.
                type: string
                x-go-name: Type
            version:
                description: Version Version of the capability definition.
                type: string
                x-go-name: Version
        title: Capabiliy Meshery manages entities in accordance with their specific capabilities. This field explicitly identifies those capabilities largely by what actions a given component supports; e.g. metric-scrape, sub-interface, and so on. This field is extensible. Entities may define a broad array of capabilities, which are in-turn dynamically interpretted by Meshery for full lifecycle management.
        type: object
        x-go-package: github.com/meshery/schemas/models/v1alpha1/capability
    CapabiliyEntityState:
        title: CapabiliyEntityState defines model for Capabiliy.EntityState.
        type: string
        x-go-package: github.com/meshery/schemas/models/v1alpha1/capability
    CapabiliyStatus:
        description: CapabiliyStatus Status of the capability
        type: string
        x-go-package: github.com/meshery/schemas/models/v1alpha1/capability
    CapacityRange:
        description: |-
            CapacityRange describes the minimum and maximum capacity a volume should be
            created with
        properties:
            LimitBytes:
                description: |-
                    LimitBytes specifies that a volume must not be bigger than this. The
                    value of 0 indicates an unspecified maximum
                format: int64
                type: integer
            RequiredBytes:
                description: |-
                    RequiredBytes specifies that a volume must be at least this big. The
                    value of 0 indicates an unspecified minimum.
                format: int64
                type: integer
        type: object
        x-go-package: github.com/docker/docker/api/types/volume
    CatalogData:
        properties:
            compatibility:
                description: Compatibility A list of technologies included in or implicated by this design; a list of relevant technology tags.
                items:
                    $ref: '#/definitions/CatalogDataCompatibility'
                type: array
                x-go-name: Compatibility
            content_class:
                $ref: '#/definitions/ContentClass'
            imageURL:
                description: Contains reference to the dark and light mode snapshots of the catalog.
                items:
                    type: string
                type: array
                x-go-name: SnapshotURL
            pattern_caveats:
                description: PatternCaveats Specific stipulations to consider and known behaviors to be aware of when using this design.
                type: string
                x-go-name: PatternCaveats
            pattern_info:
                description: PatternInfo Purpose of the design along with its intended and unintended uses.
                type: string
                x-go-name: PatternInfo
            published_version:
                description: Tracks the specific content version that has been made available in the Catalog
                type: string
                x-go-name: PublishedVersion
            type:
                $ref: '#/definitions/CatalogDataType'
        title: CatalogData defines model for catalog_data.
        type: object
        x-go-package: github.com/layer5io/meshkit/models/catalog/v1alpha1
    CatalogDataCompatibility:
        title: CatalogDataCompatibility defines model for CatalogData.Compatibility.
        type: string
        x-go-package: github.com/layer5io/meshkit/models/catalog/v1alpha1
    CatalogDataType:
        title: CatalogDataType Categorization of the type of design or operational flow depicted in this design.
        type: string
        x-go-package: github.com/layer5io/meshkit/models/catalog/v1alpha1
    CategoryDefinition:
        properties:
            metadata:
                additionalProperties: {}
                type: object
                x-go-name: Metadata
            name:
                type: string
                x-go-name: Name
        type: object
        x-go-package: github.com/meshery/schemas/models/v1beta1/category
    ChangeType:
        description: |-
            Can be one of:

            `0`: Modified ("C")
            `1`: Added ("A")
            `2`: Deleted ("D")
        format: uint8
        title: ChangeType Kind of change
        type: integer
        x-go-package: github.com/docker/docker/api/types/container
    ClientIPConfig:
        properties:
            timeoutSeconds:
                description: |-
                    timeoutSeconds specifies the seconds of ClientIP type session sticky time.
                    The value must be >0 && <=86400(for 1 day) if ServiceAffinity == "ClientIP".
                    Default value is 10800(for 3 hours).
                    +optional
                format: int32
                type: integer
                x-go-name: TimeoutSeconds
        title: ClientIPConfig represents the configurations of Client IP based session affinity.
        type: object
        x-go-package: k8s.io/api/core/v1
    ClusterVolume:
        description: |-
            ClusterVolume contains options and information specific to, and only present
            on, Swarm CSI cluster volumes.
        properties:
            CreatedAt:
                format: date-time
                type: string
            ID:
                description: |-
                    ID is the Swarm ID of the volume. Because cluster volumes are Swarm
                    objects, they have an ID, unlike non-cluster volumes, which only have a
                    Name. This ID can be used to refer to the cluster volume.
                type: string
            Info:
                $ref: '#/definitions/Info'
            PublishStatus:
                description: |-
                    PublishStatus contains the status of the volume as it pertains to its
                    publishing on Nodes.
                items:
                    $ref: '#/definitions/PublishStatus'
                type: array
            Spec:
                $ref: '#/definitions/ClusterVolumeSpec'
            UpdatedAt:
                format: date-time
                type: string
            Version:
                $ref: '#/definitions/Version'
        type: object
        x-go-package: github.com/docker/docker/api/types/volume
    ClusterVolumeSpec:
        properties:
            AccessMode:
                $ref: '#/definitions/AccessMode'
            AccessibilityRequirements:
                $ref: '#/definitions/TopologyRequirement'
            Availability:
                $ref: '#/definitions/Availability'
            CapacityRange:
                $ref: '#/definitions/CapacityRange'
            Group:
                description: |-
                    Group defines the volume group of this volume. Volumes belonging to the
                    same group can be referred to by group name when creating Services.
                    Referring to a volume by group instructs swarm to treat volumes in that
                    group interchangeably for the purpose of scheduling. Volumes with an
                    empty string for a group technically all belong to the same, emptystring
                    group.
                type: string
            Secrets:
                description: |-
                    Secrets defines Swarm Secrets that are passed to the CSI storage plugin
                    when operating on this volume.
                items:
                    $ref: '#/definitions/Secret'
                type: array
        title: ClusterVolumeSpec contains the spec used to create this volume.
        type: object
        x-go-package: github.com/docker/docker/api/types/volume
    CollaboratorExtension:
        description: CollaboratorsExtension is the struct for collaborators extension
        properties:
            component:
                type: string
                x-go-name: Component
            type:
                type: string
                x-go-name: Type
        type: object
        x-go-package: github.com/layer5io/meshery/server/models
    CollaboratorExtensions:
        description: CollaboratorExtension describes the Collaborator extension point in the UI
        items:
            $ref: '#/definitions/CollaboratorExtension'
        type: array
        x-go-package: github.com/layer5io/meshery/server/models
    Column:
        description: for a table
        properties:
            text:
                type: string
                x-go-name: TextType
            value:
                type: string
                x-go-name: Value
        type: object
        x-go-package: github.com/grafana-tools/sdk
    ColumnStyle:
        description: for a table
        properties:
            alias:
                type: string
                x-go-name: Alias
            colorMode:
                type: string
                x-go-name: ColorMode
            colors:
                items:
                    type: string
                type: array
                x-go-name: Colors
            dateFormat:
                type: string
                x-go-name: DateFormat
            decimals:
                format: int64
                type: integer
                x-go-name: Decimals
            link:
                type: boolean
                x-go-name: Link
            linkTargetBlank:
                type: boolean
                x-go-name: LinkTargetBlank
            linkTooltip:
                type: string
                x-go-name: LinkTooltip
            linkUrl:
                type: string
                x-go-name: LinkUrl
            mappingType:
                format: int64
                type: integer
                x-go-name: MappingType
            pattern:
                type: string
                x-go-name: Pattern
            thresholds:
                items:
                    type: string
                type: array
                x-go-name: Thresholds
            type:
                type: string
                x-go-name: Type
            unit:
                type: string
                x-go-name: Unit
            valueMaps:
                items:
                    $ref: '#/definitions/ValueMap'
                type: array
                x-go-name: ValueMaps
        type: object
        x-go-package: github.com/grafana-tools/sdk
    Component:
        properties:
            kind:
                example: A Kubernetes Pod is of kind 'Pod'.
                type: string
                x-go-name: Kind
            schema:
                description: Schema JSON schema of the object as defined by the registrant.
                type: string
                x-go-name: Schema
            version:
                example: APIVersion of a Kubernetes Pod.
                type: string
                x-go-name: Version
        type: object
        x-go-package: github.com/meshery/schemas/models/v1beta1/component
    ComponentDefinition:
        description: ComponentDefinition Components are reusable building blocks for depicting capabilities defined within models. Learn more at https://docs.meshery.io/concepts/components
        properties:
            capabilities:
                description: Capabilities Meshery manages components in accordance with their specific capabilities. This field explicitly identifies those capabilities largely by what actions a given component supports; e.g. metric-scrape, sub-interface, and so on. This field is extensible. ComponentDefinitions may define a broad array of capabilities, which are in-turn dynamically interpretted by Meshery for full lifecycle management.
                items:
                    $ref: '#/definitions/Capability'
                type: array
                x-go-name: Capabilities
            component:
                $ref: '#/definitions/Component'
            configuration:
                additionalProperties: {}
                description: Configuration The configuration of the component. The configuration is based on the schema defined within the component definition(component.schema).
                type: object
                x-go-name: Configuration
            description:
                description: Description A written representation of the purpose and characteristics of the component.
                type: string
                x-go-name: Description
            displayName:
                description: DisplayName Name of the component in human-readible format.
                type: string
                x-go-name: DisplayName
            format:
                $ref: '#/definitions/ComponentDefinitionFormat'
            id:
                description: Id Uniquely identifies the entity (i.e. component) as defined in a declaration (i.e. design).
                format: uuid
                type: string
                x-go-name: Id
            metadata:
                $ref: '#/definitions/ComponentDefinition_Metadata'
            model:
                $ref: '#/definitions/ModelDefinition'
            schemaVersion:
                description: SchemaVersion Specifies the version of the schema to which the component definition conforms.
                type: string
                x-go-name: SchemaVersion
            status:
                $ref: '#/definitions/ComponentDefinitionStatus'
            styles:
                $ref: '#/definitions/Styles'
            version:
                description: Version Version of the component definition.
                type: string
                x-go-name: Version
        type: object
        x-go-package: github.com/meshery/schemas/models/v1beta1/component
    ComponentDefinition_Metadata:
        properties:
            genealogy:
                description: Genealogy Genealogy represents the various representational states of the component.
                type: string
                x-go-name: Genealogy
            instanceDetails:
                x-go-name: InstanceDetails
            isAnnotation:
                description: IsAnnotation Identifies whether the component is semantically meaningful or not; identifies whether the component should be treated as deployable entity or is for purposes of logical representation.
                type: boolean
                x-go-name: IsAnnotation
            isNamespaced:
                description: IsNamespaced Identifies whether the component is scoped to namespace or clsuter wide.
                type: boolean
                x-go-name: IsNamespaced
            published:
                description: Published 'published' controls whether the component should be registered in Meshery Registry. When the same 'published' property in Models, is set to 'false', the Model property takes precedence with all Entities in the Model not being registered.
                type: boolean
                x-go-name: Published
        title: ComponentDefinition_Metadata Metadata contains additional information associated with the component.
        type: object
        x-go-package: github.com/meshery/schemas/models/v1beta1/component
    ComponentDefinitionFormat:
        title: ComponentDefinitionFormat Format specifies the format used in the `component.schema` field. JSON is the default.
        type: string
        x-go-package: github.com/meshery/schemas/models/v1beta1/component
    ComponentDefinitionStatus:
        description: |-
            duplicate: this component is a duplicate of another. The component that is to be the canonical reference and that is duplicated by other components should not be assigned the 'duplicate' status.
            maintenance: model is unavailable for a period of time.
            enabled: model is available for use for all users of this Meshery Server.
            ignored: model is unavailable for use for all users of this Meshery Server.
        title: 'ComponentDefinitionStatus Status of component, including:'
        type: string
        x-go-package: github.com/meshery/schemas/models/v1beta1/component
    ComponentDefinitionStylesBorderStyle:
        description: ComponentDefinitionStylesBorderStyle The style of the node’s border
        type: string
        x-go-package: github.com/meshery/schemas/models/v1beta1/component
    ComponentDefinitionStylesGhost:
        title: ComponentDefinitionStylesGhost Whether to use the ghost effect, a semitransparent duplicate of the element drawn at an offset.
        type: string
        x-go-package: github.com/meshery/schemas/models/v1beta1/component
    ComponentDefinitionStylesShape:
        description: ComponentDefinitionStylesShape The shape of the node’s body. Note that each shape fits within the specified width and height, and so you may have to adjust width and height if you desire an equilateral shape (i.e. width !== height for several equilateral shapes)
        type: string
        x-go-package: github.com/meshery/schemas/models/v1beta1/component
    ComponentDefinitionStylesTextHalign:
        description: ComponentDefinitionStylesTextHalign The horizontal alignment of a node’s label
        type: string
        x-go-package: github.com/meshery/schemas/models/v1beta1/component
    ComponentDefinitionStylesTextTransform:
        description: ComponentDefinitionStylesTextTransform A transformation to apply to the label text
        type: string
        x-go-package: github.com/meshery/schemas/models/v1beta1/component
    ComponentDefinitionStylesTextValign:
        description: ComponentDefinitionStylesTextValign The vertical alignment of a node’s label
        type: string
        x-go-package: github.com/meshery/schemas/models/v1beta1/component
    Condition:
        description: |-
            This struct is intended for direct use as an array at the field path .status.conditions.  For example,

            type FooStatus struct{
            Represents the observations of a foo's current state.
            Known .status.conditions.type are: "Available", "Progressing", and "Degraded"
            +patchMergeKey=type
            +patchStrategy=merge
            +listType=map
            +listMapKey=type
            Conditions []metav1.Condition `json:"conditions,omitempty" patchStrategy:"merge" patchMergeKey:"type" protobuf:"bytes,1,rep,name=conditions"`

            other fields
            }
        properties:
            lastTransitionTime:
                description: |-
                    lastTransitionTime is the last time the condition transitioned from one status to another.
                    This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                    +required
                    +kubebuilder:validation:Required
                    +kubebuilder:validation:Type=string
                    +kubebuilder:validation:Format=date-time
                type: string
                x-go-name: LastTransitionTime
            message:
                description: |-
                    message is a human readable message indicating details about the transition.
                    This may be an empty string.
                    +required
                    +kubebuilder:validation:Required
                    +kubebuilder:validation:MaxLength=32768
                type: string
                x-go-name: Message
            observedGeneration:
                description: |-
                    observedGeneration represents the .metadata.generation that the condition was set based upon.
                    For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                    with respect to the current state of the instance.
                    +optional
                    +kubebuilder:validation:Minimum=0
                format: int64
                type: integer
                x-go-name: ObservedGeneration
            reason:
                description: |-
                    reason contains a programmatic identifier indicating the reason for the condition's last transition.
                    Producers of specific condition types may define expected values and meanings for this field,
                    and whether the values are considered a guaranteed API.
                    The value should be a CamelCase string.
                    This field may not be empty.
                    +required
                    +kubebuilder:validation:Required
                    +kubebuilder:validation:MaxLength=1024
                    +kubebuilder:validation:MinLength=1
                    +kubebuilder:validation:Pattern=`^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$`
                type: string
                x-go-name: Reason
            status:
                $ref: '#/definitions/ConditionStatus'
            type:
                description: |-
                    type of condition in CamelCase or in foo.example.com/CamelCase.

                    Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be
                    useful (see .node.status.conditions), the ability to deconflict is important.
                    The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                    +required
                    +kubebuilder:validation:Required
                    +kubebuilder:validation:Pattern=`^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$`
                    +kubebuilder:validation:MaxLength=316
                type: string
                x-go-name: Type
        title: Condition contains details for one aspect of the current state of this API Resource.
        type: object
        x-go-package: k8s.io/apimachinery/pkg/apis/meta/v1
    ConditionStatus:
        type: string
        x-go-package: k8s.io/apimachinery/pkg/apis/meta/v1
    Configuration:
        properties:
            applications:
                type: boolean
                x-go-name: Applications
            designs:
                type: boolean
                x-go-name: Designs
            filters:
                type: boolean
                x-go-name: Filters
        type: object
        x-go-package: github.com/layer5io/meshery/server/models
    Connection:
        properties:
            created_at:
                format: date-time
                type: string
                x-go-name: CreatedAt
            credential_id:
                format: uuid
                type: string
                x-go-name: CredentialID
            deleted_at:
                $ref: '#/definitions/NullTime'
            environments:
                items:
                    $ref: '#/definitions/EnvironmentData'
                type: array
                x-go-name: Environments
            id:
                format: uuid
                type: string
                x-go-name: ID
            kind:
                type: string
                x-go-name: Kind
            metadata:
                $ref: '#/definitions/JSONMap'
            name:
                type: string
                x-go-name: Name
            status:
                $ref: '#/definitions/ConnectionStatus'
            sub_type:
                type: string
                x-go-name: SubType
            type:
                type: string
                x-go-name: Type
            updated_at:
                format: date-time
                type: string
                x-go-name: UpdatedAt
            user_id:
                format: uuid
                type: string
                x-go-name: UserID
        type: object
        x-go-package: github.com/layer5io/meshery/server/models/connections
    ConnectionPage:
        properties:
            connections:
                items:
                    $ref: '#/definitions/Connection'
                type: array
                x-go-name: Connections
            page:
                format: int64
                type: integer
                x-go-name: Page
            page_size:
                format: int64
                type: integer
                x-go-name: PageSize
            total_count:
                format: int64
                type: integer
                x-go-name: TotalCount
        type: object
        x-go-package: github.com/layer5io/meshery/server/models/connections
    ConnectionStatus:
        type: string
        x-go-package: github.com/layer5io/meshery/server/models/connections
    ConnectionStatusInfo:
        properties:
            count:
                format: int64
                type: integer
                x-go-name: Count
            status:
                type: string
                x-go-name: Status
        type: object
        x-go-package: github.com/layer5io/meshery/server/models/connections
    ConnectionsStatusPage:
        properties:
            connections_status:
                items:
                    $ref: '#/definitions/ConnectionStatusInfo'
                type: array
                x-go-name: ConnectionsStatus
        type: object
        x-go-package: github.com/layer5io/meshery/server/models/connections
    ContainerTopOKBody:
        description: ContainerTopOKBody OK response to ContainerTop operation
        properties:
            Processes:
                description: |-
                    Each process running in the container, where each is process
                    is an array of values corresponding to the titles.
                items:
                    items:
                        type: string
                    type: array
                type: array
            Titles:
                description: The ps column titles
                items:
                    type: string
                type: array
        required:
            - Processes
            - Titles
        type: object
        x-go-package: github.com/docker/docker/api/types/container
    ContainerUpdateOKBody:
        description: ContainerUpdateOKBody OK response to ContainerUpdate operation
        properties:
            Warnings:
                description: warnings
                items:
                    type: string
                type: array
        required:
            - Warnings
        type: object
        x-go-package: github.com/docker/docker/api/types/container
    ContentClass:
        type: string
        x-go-package: github.com/layer5io/meshkit/models/catalog/v1alpha1
    CountBySeverityLevel:
        properties:
            count:
                format: int64
                type: integer
                x-go-name: Count
            severity:
                type: string
                x-go-name: Severity
        type: object
        x-go-package: github.com/layer5io/meshery/server/models
    CreateOptions:
        description: Volume configuration
        properties:
            ClusterVolumeSpec:
                $ref: '#/definitions/ClusterVolumeSpec'
            Driver:
                description: Name of the volume driver to use.
                type: string
            DriverOpts:
                additionalProperties:
                    type: string
                description: |-
                    A mapping of driver options and values. These options are
                    passed directly to the driver and are driver specific.
                type: object
            Labels:
                additionalProperties:
                    type: string
                description: User-defined key/value metadata.
                type: object
            Name:
                description: The new volume's name. If not specified, Docker generates a name.
                type: string
        title: CreateOptions VolumeConfig
        type: object
        x-go-package: github.com/docker/docker/api/types/volume
    CreateResponse:
        description: OK response to ContainerCreate operation
        properties:
            Id:
                description: The ID of the created container
                type: string
                x-go-name: ID
            Warnings:
                description: Warnings encountered when creating the container
                items:
                    type: string
                type: array
        required:
            - Id
            - Warning
            - Warnings
        title: CreateResponse ContainerCreateResponse
        type: object
        x-go-package: github.com/docker/docker/api/types/container
    DatabaseSummary:
        properties:
            page:
                format: int64
                type: integer
                x-go-name: Page
            page_size:
                format: int64
                type: integer
                x-go-name: PageSize
            record_count:
                format: int64
                type: integer
                x-go-name: RecordCount
            tables:
                items:
                    $ref: '#/definitions/SqliteSchema'
                type: array
                x-go-name: Tables
            total_tables:
                format: int64
                type: integer
                x-go-name: TotalTables
        type: object
        x-go-package: github.com/layer5io/meshery/server/models
    DeleteResponse:
        description: DeleteResponse delete response
        properties:
            Deleted:
                description: The image ID of an image that was deleted
                type: string
            Untagged:
                description: The image ID of an image that was untagged
                type: string
        type: object
        x-go-package: github.com/docker/docker/api/types/image
    DesignerComponents:
        properties:
            application:
                type: boolean
                x-go-name: Application
            deploy:
                type: boolean
                x-go-name: Deploy
            design:
                type: boolean
                x-go-name: Design
            filter:
                type: boolean
                x-go-name: Filter
            new:
                type: boolean
                x-go-name: New
            save:
                type: boolean
                x-go-name: Save
            saveAs:
                type: boolean
                x-go-name: SaveAs
            unDeploy:
                type: boolean
                x-go-name: Undeploy
            validate:
                type: boolean
                x-go-name: Validate
        type: object
        x-go-package: github.com/layer5io/meshery/server/models
    Detail:
        properties:
            assertions:
                type: string
                x-go-name: Assertions
            capability:
                type: string
                x-go-name: Capability
            reason:
                type: string
                x-go-name: Reason
            result:
                type: string
                x-go-name: Result
            smi_specification:
                type: string
                x-go-name: SmiSpecification
            smi_version:
                type: string
                x-go-name: SmiVersion
            status:
                type: string
                x-go-name: Status
            time:
                type: string
                x-go-name: Time
        type: object
        x-go-package: github.com/layer5io/meshery/server/models
    DuplicateResponseComponent:
        properties:
            capabilities:
                description: Capabilities Meshery manages components in accordance with their specific capabilities. This field explicitly identifies those capabilities largely by what actions a given component supports; e.g. metric-scrape, sub-interface, and so on. This field is extensible. ComponentDefinitions may define a broad array of capabilities, which are in-turn dynamically interpretted by Meshery for full lifecycle management.
                items:
                    $ref: '#/definitions/Capability'
                type: array
                x-go-name: Capabilities
            component:
                $ref: '#/definitions/Component'
            configuration:
                additionalProperties: {}
                description: Configuration The configuration of the component. The configuration is based on the schema defined within the component definition(component.schema).
                type: object
                x-go-name: Configuration
            description:
                description: Description A written representation of the purpose and characteristics of the component.
                type: string
                x-go-name: Description
            displayName:
                description: DisplayName Name of the component in human-readible format.
                type: string
                x-go-name: DisplayName
            duplicates:
                format: int64
                type: integer
                x-go-name: Duplicates
            format:
                $ref: '#/definitions/ComponentDefinitionFormat'
            id:
                description: Id Uniquely identifies the entity (i.e. component) as defined in a declaration (i.e. design).
                format: uuid
                type: string
                x-go-name: Id
            metadata:
                $ref: '#/definitions/ComponentDefinition_Metadata'
            model:
                $ref: '#/definitions/ModelDefinition'
            schemaVersion:
                description: SchemaVersion Specifies the version of the schema to which the component definition conforms.
                type: string
                x-go-name: SchemaVersion
            status:
                $ref: '#/definitions/ComponentDefinitionStatus'
            styles:
                $ref: '#/definitions/Styles'
            version:
                description: Version Version of the component definition.
                type: string
                x-go-name: Version
        type: object
        x-go-package: github.com/layer5io/meshery/server/models
    DuplicateResponseModels:
        properties:
            category:
                $ref: '#/definitions/CategoryDefinition'
            components:
                x-go-name: Components
            components_count:
                description: |-
                    Total number of components in a model
                    Edited on purpose
                format: int64
                type: integer
                x-go-name: ComponentsCount
            connection_id:
                format: uuid
                type: string
                x-go-name: RegistrantId
            description:
                description: Description Description of the model.
                type: string
                x-go-name: Description
            displayName:
                description: DisplayName Human-readable name for the model.
                type: string
                x-go-name: DisplayName
            duplicates:
                format: int64
                type: integer
                x-go-name: Duplicates
            id:
                description: Id Uniquely identifies the entity (i.e. component) as defined in a declaration (i.e. design).
                format: uuid
                type: string
                x-go-name: Id
            metadata:
                $ref: '#/definitions/ModelDefinition_Metadata'
            model:
                $ref: '#/definitions/Model'
            name:
                description: Name The unique name for the model within the scope of a registrant.
                type: string
                x-go-name: Name
            registrant:
                $ref: '#/definitions/Connection'
            relationships:
                description: |-
                    To prevent cyclic error, the type is changed to interface, it doesn't affect registration
                    Edited on purpose
                x-go-name: Relationships
            relationships_count:
                description: |-
                    Total number of relationships in a model
                    Edited on purpose
                format: int64
                type: integer
                x-go-name: RelationshipsCount
            schemaVersion:
                description: SchemaVersion Specifies the version of the schema used for the definition.
                type: string
                x-go-name: SchemaVersion
            status:
                $ref: '#/definitions/ModelDefinitionStatus'
            subCategory:
                description: SubCategory Sub-category of the model.
                type: string
                x-go-name: SubCategory
            version:
                description: Version Version of the model definition.
                type: string
                x-go-name: Version
        type: object
        x-go-package: github.com/layer5io/meshery/server/models
    Entity:
        properties:
            GetEntityDetail:
                type: string
            GetID:
                format: uuid
                type: string
            Type:
                $ref: '#/definitions/EntityType'
        type: object
        x-go-package: github.com/layer5io/meshkit/models/meshmodel/entity
    EntitySummary:
        properties:
            components:
                format: int64
                type: integer
                x-go-name: Components
            models:
                format: int64
                type: integer
                x-go-name: Models
            policies:
                format: int64
                type: integer
                x-go-name: Policies
            relationships:
                format: int64
                type: integer
                x-go-name: Relationships
        type: object
        x-go-package: github.com/layer5io/meshkit/models/meshmodel/core/v1beta1
    EntityType:
        type: string
        x-go-package: github.com/layer5io/meshkit/models/meshmodel/entity
    EnvironmentData:
        properties:
            created_at:
                format: date-time
                type: string
                x-go-name: CreatedAt
            deleted_at:
                $ref: '#/definitions/NullTime'
            description:
                type: string
                x-go-name: Description
            id:
                format: uuid
                type: string
                x-go-name: ID
            name:
                type: string
                x-go-name: Name
            org_id:
                format: uuid
                type: string
                x-go-name: OrganizationID
            owner:
                type: string
                x-go-name: Owner
            updated_at:
                format: date-time
                type: string
                x-go-name: UpdatedAt
        type: object
        x-go-package: github.com/layer5io/meshery/server/models/environments
    EnvironmentPage:
        properties:
            environments:
                items:
                    $ref: '#/definitions/EnvironmentData'
                type: array
                x-go-name: Environments
            page:
                format: int64
                type: integer
                x-go-name: Page
            page_size:
                format: int64
                type: integer
                x-go-name: PageSize
            total_count:
                format: int64
                type: integer
                x-go-name: TotalCount
        type: object
        x-go-package: github.com/layer5io/meshery/server/models/environments
    ErrorResponse:
        properties:
            message:
                description: The error message.
                type: string
                x-go-name: Message
        required:
            - message
        title: ErrorResponse Represents an error.
        type: object
        x-go-package: github.com/docker/docker/api/types
    Event:
        description: Event Defines model for event_trackers
        properties:
            acted_upon:
                description: ActedUpon UUID of the entity on which the event was performed.
                format: uuid
                type: string
                x-go-name: ActedUpon
            action:
                description: Action Action taken on the resource.
                type: string
                x-go-name: Action
            category:
                description: Category Resource name on which the operation is invoked.
                type: string
                x-go-name: Category
            created_at:
                description: CreatedAt Timestamp when the resource was created.
                format: date-time
                type: string
                x-go-name: CreatedAt
            deleted_at:
                description: DeletedAt Timestamp when the resource was deleted.
                format: date-time
                type: string
                x-go-name: DeletedAt
            description:
                description: Description A summary/receipt of event that occurred.
                type: string
                x-go-name: Description
            id:
                format: uuid
                type: string
                x-go-name: ID
            metadata:
                additionalProperties: {}
                description: |-
                    Metadata Contains meaningful information, specific to the type of event.
                    Structure of metadata can be different for different events.
                type: object
                x-go-name: Metadata
            operation_id:
                format: uuid
                type: string
                x-go-name: OperationID
            severity:
                $ref: '#/definitions/EventSeverity'
            status:
                $ref: '#/definitions/EventStatus'
            system_id:
                format: uuid
                type: string
                x-go-name: SystemID
            updated_at:
                description: UpdatedAt Timestamp when the resource was updated.
                format: date-time
                type: string
                x-go-name: UpdatedAt
            user_id:
                format: uuid
                type: string
                x-go-name: UserID
        type: object
        x-go-package: github.com/layer5io/meshkit/models/events
    EventSeverity:
        title: EventSeverity A set of seven standard event levels.
        type: string
        x-go-package: github.com/layer5io/meshkit/models/events
    EventStatus:
        title: EventStatus Status for the event.
        type: string
        x-go-package: github.com/layer5io/meshkit/models/events
    EventsResponse:
        properties:
            count_by_severity_level:
                items:
                    $ref: '#/definitions/CountBySeverityLevel'
                type: array
                x-go-name: CountBySeverityLevel
            events:
                items:
                    $ref: '#/definitions/Event'
                type: array
                x-go-name: Events
            page:
                format: int64
                type: integer
                x-go-name: Page
            page_size:
                format: int64
                type: integer
                x-go-name: PageSize
            total_count:
                format: int64
                type: integer
                x-go-name: TotalCount
        type: object
        x-go-package: github.com/layer5io/meshery/server/models
    Extensions:
        description: Extensions defines the UI extension points
        properties:
            account:
                $ref: '#/definitions/AccountExtensions'
            collaborator:
                $ref: '#/definitions/CollaboratorExtensions'
            graphql:
                $ref: '#/definitions/GraphQLExtensions'
            navigator:
                $ref: '#/definitions/NavigatorExtensions'
            user_prefs:
                $ref: '#/definitions/UserPrefsExtensions'
        type: object
        x-go-package: github.com/layer5io/meshery/server/models
    Feature:
        description: Feature is a type to store the features of the provider
        type: string
        x-go-package: github.com/layer5io/meshery/server/models
    FieldConfig:
        properties:
            defaults:
                $ref: '#/definitions/FieldConfigDefaults'
        type: object
        x-go-package: github.com/grafana-tools/sdk
    FieldConfigColor:
        properties:
            fixedColor:
                type: string
                x-go-name: FixedColor
            mode:
                type: string
                x-go-name: Mode
            seriesBy:
                type: string
                x-go-name: SeriesBy
        type: object
        x-go-package: github.com/grafana-tools/sdk
    FieldConfigCustom:
        properties:
            axisLabel:
                type: string
                x-go-name: AxisLabel
            axisPlacement:
                type: string
                x-go-name: AxisPlacement
            axisSoftMax:
                format: int64
                type: integer
                x-go-name: AxisSoftMax
            axisSoftMin:
                format: int64
                type: integer
                x-go-name: AxisSoftMin
            barAlignment:
                format: int64
                type: integer
                x-go-name: BarAlignment
            drawStyle:
                type: string
                x-go-name: DrawStyle
            fillOpacity:
                format: int64
                type: integer
                x-go-name: FillOpacity
            gradientMode:
                type: string
                x-go-name: GradientMode
            hideFrom:
                properties:
                    legend:
                        type: boolean
                        x-go-name: Legend
                    tooltip:
                        type: boolean
                        x-go-name: Tooltip
                    viz:
                        type: boolean
                        x-go-name: Viz
                type: object
                x-go-name: HideFrom
            lineInterpolation:
                type: string
                x-go-name: LineInterpolation
            lineStyle:
                properties:
                    fill:
                        type: string
                        x-go-name: Fill
                type: object
                x-go-name: LineStyle
            lineWidth:
                format: int64
                type: integer
                x-go-name: LineWidth
            pointSize:
                format: int64
                type: integer
                x-go-name: PointSize
            scaleDistribution:
                properties:
                    log:
                        format: int64
                        type: integer
                        x-go-name: Log
                    type:
                        type: string
                        x-go-name: Type
                type: object
                x-go-name: ScaleDistribution
            showPoints:
                type: string
                x-go-name: ShowPoints
            spanNulls:
                type: boolean
                x-go-name: SpanNulls
            stacking:
                properties:
                    group:
                        type: string
                        x-go-name: Group
                    mode:
                        type: string
                        x-go-name: Mode
                type: object
                x-go-name: Stacking
            thresholdsStyle:
                properties:
                    mode:
                        type: string
                        x-go-name: Mode
                type: object
                x-go-name: ThresholdsStyle
        type: object
        x-go-package: github.com/grafana-tools/sdk
    FieldConfigDefaults:
        properties:
            color:
                $ref: '#/definitions/FieldConfigColor'
            custom:
                $ref: '#/definitions/FieldConfigCustom'
            decimals:
                format: int64
                type: integer
                x-go-name: Decimals
            links:
                items:
                    $ref: '#/definitions/Link'
                type: array
                x-go-name: Links
            max:
                format: double
                type: number
                x-go-name: Max
            min:
                format: double
                type: number
                x-go-name: Min
            thresholds:
                $ref: '#/definitions/Thresholds'
            unit:
                type: string
                x-go-name: Unit
        type: object
        x-go-package: github.com/grafana-tools/sdk
    FieldsV1:
        description: |-
            Each key is either a '.' representing the field itself, and will always map to an empty set,
            or a string representing a sub-field or item. The string will follow one of these four formats:
            'f:<name>', where <name> is the name of a field in a struct, or key in a map
            'v:<value>', where <value> is the exact json formatted value of a list item
            'i:<index>', where <index> is position of a item in a list
            'k:<keys>', where <keys> is a map of  a list item's key fields to their unique values
            If a key maps to an empty Fields value, the field that key represents is part of the set.

            The exact format is defined in sigs.k8s.io/structured-merge-diff
            +protobuf.options.(gogoproto.goproto_stringer)=false
        title: FieldsV1 stores a set of fields in a data structure like a Trie, in JSON format.
        type: object
        x-go-package: k8s.io/apimachinery/pkg/apis/meta/v1
    FilesystemChange:
        properties:
            Kind:
                $ref: '#/definitions/ChangeType'
            Path:
                description: Path to file or directory that has changed.
                type: string
        required:
            - Kind
            - Path
        title: FilesystemChange Change in the container's filesystem.
        type: object
        x-go-package: github.com/docker/docker/api/types/container
    FiltersAPIResponse:
        description: FiltersAPIResponse response retruned by filterfile endpoint on meshery server
        properties:
            filters:
                items:
                    $ref: '#/definitions/MesheryFilter'
                type: array
                x-go-name: Filters
            page:
                format: uint64
                type: integer
                x-go-name: Page
            page_size:
                format: uint64
                type: integer
                x-go-name: PageSize
            total_count:
                format: uint64
                type: integer
                x-go-name: TotalCount
        type: object
        x-go-package: github.com/layer5io/meshery/server/models
    FloatString:
        properties:
            Valid:
                type: boolean
            Value:
                format: double
                type: number
        title: 'FloatString represents special type for json values that could be strings or ints: 100 or "100"'
        type: object
        x-go-package: github.com/grafana-tools/sdk
    Gauge:
        description: for a stat
        properties:
            maxValue:
                format: float
                type: number
                x-go-name: MaxValue
            minValue:
                format: float
                type: number
                x-go-name: MinValue
            show:
                type: boolean
                x-go-name: Show
            thresholdLabels:
                type: boolean
                x-go-name: ThresholdLabels
            thresholdMarkers:
                type: boolean
                x-go-name: ThresholdMarkers
        type: object
        x-go-package: github.com/grafana-tools/sdk
    Grafana:
        description: Grafana represents the Grafana session config
        properties:
            grafanaAPIKey:
                type: string
                x-go-name: GrafanaAPIKey
            grafanaURL:
                type: string
                x-go-name: GrafanaURL
            selectedBoardsConfigs:
                description: GrafanaBoardSearch string          `json:"grafanaBoardSearch,omitempty"`
                items:
                    $ref: '#/definitions/SelectedGrafanaConfig'
                type: array
                x-go-name: GrafanaBoards
        type: object
        x-go-package: github.com/layer5io/meshery/server/models
    GrafanaBoard:
        description: GrafanaBoard represents a Grafana board
        properties:
            org_id:
                format: uint64
                type: integer
                x-go-name: OrgID
            panels:
                items:
                    $ref: '#/definitions/Panel'
                type: array
                x-go-name: Panels
            slug:
                type: string
                x-go-name: Slug
            template_vars:
                items:
                    $ref: '#/definitions/GrafanaTemplateVars'
                type: array
                x-go-name: TemplateVars
            title:
                type: string
                x-go-name: Title
            uid:
                type: string
                x-go-name: UID
            uri:
                type: string
                x-go-name: URI
        type: object
        x-go-package: github.com/layer5io/meshery/server/models
    GrafanaConfigParams:
        description: Parameters to save Grafana configuration
        properties:
            grafanaAPIKey:
                type: string
                x-go-name: GrafanaAPIKey
            grafanaURL:
                type: string
                x-go-name: GrafanaURL
        type: object
        x-go-package: github.com/layer5io/meshery/server/models
    GrafanaDataSource:
        description: GrafanaDataSource represents a Grafana datasource like Prometheus
        properties:
            id:
                format: uint64
                type: integer
                x-go-name: ID
            name:
                type: string
                x-go-name: Name
        type: object
        x-go-package: github.com/layer5io/meshery/server/models
    GrafanaTemplateVars:
        description: GrafanaTemplateVars represents template variables in a bboard
        properties:
            datasource:
                $ref: '#/definitions/GrafanaDataSource'
            hide:
                format: uint8
                type: integer
                x-go-name: Hide
            name:
                type: string
                x-go-name: Name
            query:
                type: string
                x-go-name: Query
            value:
                x-go-name: Value
        type: object
        x-go-package: github.com/layer5io/meshery/server/models
    GraphDriverData:
        description: |-
            GraphDriverData Information about the storage driver used to store the container's and
            image's filesystem.
        properties:
            Data:
                additionalProperties:
                    type: string
                description: |-
                    Low-level storage metadata, provided as key/value pairs.

                    This information is driver-specific, and depends on the storage-driver
                    in use, and should be used for informational purposes only.
                type: object
            Name:
                description: Name of the storage driver.
                type: string
        required:
            - Data
            - Name
        type: object
        x-go-package: github.com/docker/docker/api/types
    GraphQLExtension:
        description: GraphQLExtension describes the graphql server extension point in the backend
        properties:
            component:
                type: string
                x-go-name: Component
            path:
                type: string
                x-go-name: Path
            type:
                type: string
                x-go-name: Type
        type: object
        x-go-package: github.com/layer5io/meshery/server/models
    GraphQLExtensions:
        description: GraphQLExtensions is a collection of GraphQLExtension endpoints
        items:
            $ref: '#/definitions/GraphQLExtension'
        type: array
        x-go-package: github.com/layer5io/meshery/server/models
    HeaderComponents:
        properties:
            contextSwitcher:
                type: boolean
                x-go-name: ContextSwitcher
            notifications:
                type: boolean
                x-go-name: Notifications
            profile:
                type: boolean
                x-go-name: Profile
            settings:
                type: boolean
                x-go-name: Settings
        type: object
        x-go-package: github.com/layer5io/meshery/server/models
    HistoryResponseItem:
        description: HistoryResponseItem individual image layer information in response to ImageHistory operation
        properties:
            Comment:
                description: comment
                type: string
            Created:
                description: created
                format: int64
                type: integer
            CreatedBy:
                description: created by
                type: string
            Id:
                description: Id
                type: string
                x-go-name: ID
            Size:
                description: size
                format: int64
                type: integer
            Tags:
                description: tags
                items:
                    type: string
                type: array
        required:
            - Comment
            - Created
            - CreatedBy
            - Id
            - Size
            - Tags
        type: object
        x-go-package: github.com/docker/docker/api/types/image
    Href:
        description: Href describes a link along with its type
        properties:
            external:
                type: boolean
                x-go-name: External
            uri:
                type: string
                x-go-name: URI
        type: object
        x-go-package: github.com/layer5io/meshery/server/models
    IPFamily:
        description: |-
            IPFamily represents the IP Family (IPv4 or IPv6). This type is used
            to express the family of an IP expressed by a type (e.g. service.spec.ipFamilies).
            +enum
        type: string
        x-go-package: k8s.io/api/core/v1
    IPFamilyPolicy:
        description: |-
            IPFamilyPolicy represents the dual-stack-ness requested or required by a Service
            +enum
        type: string
        x-go-package: k8s.io/api/core/v1
    IdResponse:
        description: IDResponse Response to an API call that returns just an Id
        properties:
            Id:
                description: The id of the newly created object.
                type: string
                x-go-name: ID
        required:
            - Id
        type: object
        x-go-name: IDResponse
        x-go-package: github.com/docker/docker/api/types
    Info:
        description: |-
            Info contains information about the Volume as a whole as provided by
            the CSI storage plugin.
        properties:
            AccessibleTopology:
                description: |-
                    AccessibleTopology is the topology this volume is actually accessible
                    from.
                items:
                    $ref: '#/definitions/Topology'
                type: array
            CapacityBytes:
                description: |-
                    CapacityBytes is the capacity of the volume in bytes. A value of 0
                    indicates that the capacity is unknown.
                format: int64
                type: integer
            VolumeContext:
                additionalProperties:
                    type: string
                description: |-
                    VolumeContext is the context originating from the CSI storage plugin
                    when the Volume is created.
                type: object
            VolumeID:
                description: |-
                    VolumeID is the ID of the Volume as seen by the CSI storage plugin. This
                    is distinct from the Volume's Swarm ID, which is the ID used by all of
                    the Docker Engine to refer to the Volume. If this field is blank, then
                    the Volume has not been successfully created yet.
                type: string
        type: object
        x-go-package: github.com/docker/docker/api/types/volume
    IntOrString:
        description: |-
            +protobuf=true
            +protobuf.options.(gogoproto.goproto_stringer)=false
            +k8s:openapi-gen=true
        properties:
            IntVal:
                format: int32
                type: integer
            StrVal:
                type: string
            Type:
                $ref: '#/definitions/Type'
        title: |-
            IntOrString is a type that can hold an int32 or a string.  When used in
            JSON or YAML marshalling and unmarshalling, it produces or consumes the
            inner type.  This allows you to have, for example, a JSON field that can
            accept a name or number.
            TODO: Rename to Int32OrString
        type: object
        x-go-package: k8s.io/apimachinery/pkg/util/intstr
    IntString:
        properties:
            Valid:
                type: boolean
            Value:
                format: int64
                type: integer
        title: 'IntString represents special type for json values that could be strings or ints: 100 or "100"'
        type: object
        x-go-package: github.com/grafana-tools/sdk
    JSONMap:
        additionalProperties: {}
        type: object
        x-go-package: github.com/layer5io/meshery/server/helpers/utils
    K8sContext:
        properties:
            auth:
                $ref: '#/definitions/Map'
            cluster:
                $ref: '#/definitions/Map'
            connection_id:
                type: string
                x-go-name: ConnectionID
            created_at:
                format: date-time
                type: string
                x-go-name: CreatedAt
            created_by:
                format: uuid
                type: string
                x-go-name: CreatedBy
            deployment_type:
                type: string
                x-go-name: DeploymentType
            id:
                type: string
                x-go-name: ID
            kubernetes_server_id:
                format: uuid
                type: string
                x-go-name: KubernetesServerID
            meshery_instance_id:
                format: uuid
                type: string
                x-go-name: MesheryInstanceID
            name:
                type: string
                x-go-name: Name
            owner:
                format: uuid
                type: string
                x-go-name: Owner
            server:
                type: string
                x-go-name: Server
            updated_at:
                format: date-time
                type: string
                x-go-name: UpdatedAt
            version:
                type: string
                x-go-name: Version
        type: object
        x-go-package: github.com/layer5io/meshery/server/models
    KubernetesKeyValue:
        properties:
            id:
                type: string
                x-go-name: ID
            key:
                type: string
                x-go-name: Key
            kind:
                type: string
                x-go-name: Kind
            unique_id:
                type: string
                x-go-name: UniqueID
            value:
                type: string
                x-go-name: Value
        type: object
        x-go-package: github.com/layer5io/meshsync/pkg/model
    KubernetesResource:
        properties:
            apiVersion:
                type: string
                x-go-name: APIVersion
            binaryData:
                type: string
                x-go-name: BinaryData
            cluster_id:
                type: string
                x-go-name: ClusterID
            component_metadata:
                additionalProperties: {}
                type: object
                x-go-name: ComponentMetadata
            data:
                type: string
                x-go-name: Data
            id:
                type: string
                x-go-name: ID
            immutable:
                description: Secondary fields for configsmaps and secrets
                type: string
                x-go-name: Immutable
            kind:
                type: string
                x-go-name: Kind
            metadata:
                $ref: '#/definitions/KubernetesResourceObjectMeta'
            model:
                type: string
                x-go-name: Model
            pattern_resource:
                format: uuid
                type: string
                x-go-name: PatternResource
            spec:
                $ref: '#/definitions/KubernetesResourceSpec'
            status:
                $ref: '#/definitions/KubernetesResourceStatus'
            stringData:
                type: string
                x-go-name: StringData
            type:
                type: string
                x-go-name: Type
        type: object
        x-go-package: github.com/layer5io/meshsync/pkg/model
    KubernetesResourceObjectMeta:
        properties:
            annotations:
                items:
                    $ref: '#/definitions/KubernetesKeyValue'
                type: array
                x-go-name: Annotations
            cluster_id:
                type: string
                x-go-name: ClusterID
            clusterName:
                type: string
                x-go-name: ClusterName
            creationTimestamp:
                type: string
                x-go-name: CreationTimestamp
            deletionGracePeriodSeconds:
                format: int64
                type: integer
                x-go-name: DeletionGracePeriodSeconds
            deletionTimestamp:
                type: string
                x-go-name: DeletionTimestamp
            finalizers:
                type: string
                x-go-name: Finalizers
            generateName:
                type: string
                x-go-name: GenerateName
            generation:
                format: int64
                type: integer
                x-go-name: Generation
            id:
                type: string
                x-go-name: ID
            labels:
                items:
                    $ref: '#/definitions/KubernetesKeyValue'
                type: array
                x-go-name: Labels
            managedFields:
                type: string
                x-go-name: ManagedFields
            name:
                type: string
                x-go-name: Name
            namespace:
                type: string
                x-go-name: Namespace
            ownerReferences:
                type: string
                x-go-name: OwnerReferences
            resourceVersion:
                type: string
                x-go-name: ResourceVersion
            selfLink:
                type: string
                x-go-name: SelfLink
            uid:
                type: string
                x-go-name: UID
        type: object
        x-go-package: github.com/layer5io/meshsync/pkg/model
    KubernetesResourceSpec:
        properties:
            attribute:
                type: string
                x-go-name: Attribute
            id:
                type: string
                x-go-name: ID
        type: object
        x-go-package: github.com/layer5io/meshsync/pkg/model
    KubernetesResourceStatus:
        properties:
            attribute:
                type: string
                x-go-name: Attribute
            id:
                type: string
                x-go-name: ID
        type: object
        x-go-package: github.com/layer5io/meshsync/pkg/model
    LatenciesMs:
        description: LatenciesMs - represents a collection of important latencies
        properties:
            Average:
                format: double
                type: number
            Max:
                format: double
                type: number
            Min:
                format: double
                type: number
            P50:
                format: double
                type: number
            P90:
                format: double
                type: number
            P99:
                format: double
                type: number
        type: object
        x-go-package: github.com/layer5io/meshery/server/models
    Legend:
        description: for a graph panel
        properties:
            alignAsTable:
                type: boolean
                x-go-name: AlignAsTable
            avg:
                type: boolean
                x-go-name: Avg
            current:
                type: boolean
                x-go-name: Current
            hideEmpty:
                type: boolean
                x-go-name: HideEmpty
            hideZero:
                type: boolean
                x-go-name: HideZero
            max:
                type: boolean
                x-go-name: Max
            min:
                type: boolean
                x-go-name: Min
            rightSide:
                type: boolean
                x-go-name: RightSide
            show:
                type: boolean
                x-go-name: Show
            sideWidth:
                format: uint64
                type: integer
                x-go-name: SideWidth
            total:
                type: boolean
                x-go-name: Total
            values:
                type: boolean
                x-go-name: Values
        type: object
        x-go-package: github.com/grafana-tools/sdk
    Link:
        description: Link represents link to another dashboard or external weblink
        properties:
            asDropdown:
                type: boolean
                x-go-name: AsDropdown
            dashUri:
                type: string
                x-go-name: DashURI
            dashboard:
                type: string
                x-go-name: Dashboard
            icon:
                type: string
                x-go-name: Icon
            includeVars:
                type: boolean
                x-go-name: IncludeVars
            keepTime:
                type: boolean
                x-go-name: KeepTime
            params:
                type: string
                x-go-name: Params
            tags:
                items:
                    type: string
                type: array
                x-go-name: Tags
            targetBlank:
                type: boolean
                x-go-name: TargetBlank
            title:
                type: string
                x-go-name: Title
            tooltip:
                type: string
                x-go-name: Tooltip
            type:
                type: string
                x-go-name: Type
            url:
                type: string
                x-go-name: URL
        type: object
        x-go-package: github.com/grafana-tools/sdk
    ListResponse:
        description: Volume list response
        properties:
            Volumes:
                description: List of volumes
                items:
                    $ref: '#/definitions/Volume'
                type: array
            Warnings:
                description: Warnings that occurred when fetching the list of volumes.
                items:
                    type: string
                type: array
        title: ListResponse VolumeListResponse
        type: object
        x-go-package: github.com/docker/docker/api/types/volume
    LoadBalancerIPMode:
        description: LoadBalancerIPMode represents the mode of the LoadBalancer ingress IP
        type: string
        x-go-package: k8s.io/api/core/v1
    LoadBalancerIngress:
        description: traffic intended for the service should be sent to an ingress point.
        properties:
            hostname:
                description: |-
                    Hostname is set for load-balancer ingress points that are DNS based
                    (typically AWS load-balancers)
                    +optional
                type: string
                x-go-name: Hostname
            ip:
                description: |-
                    IP is set for load-balancer ingress points that are IP based
                    (typically GCE or OpenStack load-balancers)
                    +optional
                type: string
                x-go-name: IP
            ipMode:
                $ref: '#/definitions/LoadBalancerIPMode'
            ports:
                description: |-
                    Ports is a list of records of service ports
                    If used, every port defined in the service should have an entry in it
                    +listType=atomic
                    +optional
                items:
                    $ref: '#/definitions/PortStatus'
                type: array
                x-go-name: Ports
        title: 'LoadBalancerIngress represents the status of a load-balancer ingress point:'
        type: object
        x-go-package: k8s.io/api/core/v1
    LoadBalancerStatus:
        properties:
            ingress:
                description: |-
                    Ingress is a list containing ingress points for the load-balancer.
                    Traffic intended for the service should be sent to these ingress points.
                    +optional
                    +listType=atomic
                items:
                    $ref: '#/definitions/LoadBalancerIngress'
                type: array
                x-go-name: Ingress
        title: LoadBalancerStatus represents the status of a load-balancer.
        type: object
        x-go-package: k8s.io/api/core/v1
    LoadTestPreferences:
        description: LoadTestPreferences represents the load test preferences
        properties:
            c:
                format: int64
                type: integer
                x-go-name: ConcurrentRequests
            gen:
                type: string
                x-go-name: LoadGenerator
            qps:
                format: int64
                type: integer
                x-go-name: QueriesPerSecond
            t:
                type: string
                x-go-name: Duration
        type: object
        x-go-package: github.com/layer5io/meshery/server/models
    ManagedFieldsEntry:
        description: |-
            ManagedFieldsEntry is a workflow-id, a FieldSet and the group version of the resource
            that the fieldset applies to.
        properties:
            apiVersion:
                description: |-
                    APIVersion defines the version of this resource that this field set
                    applies to. The format is "group/version" just like the top-level
                    APIVersion field. It is necessary to track the version of a field
                    set because it cannot be automatically converted.
                type: string
                x-go-name: APIVersion
            fieldsType:
                description: |-
                    FieldsType is the discriminator for the different fields format and version.
                    There is currently only one possible value: "FieldsV1"
                type: string
                x-go-name: FieldsType
            fieldsV1:
                $ref: '#/definitions/FieldsV1'
            manager:
                description: Manager is an identifier of the workflow managing these fields.
                type: string
                x-go-name: Manager
            operation:
                $ref: '#/definitions/ManagedFieldsOperationType'
            subresource:
                description: |-
                    Subresource is the name of the subresource used to update that object, or
                    empty string if the object was updated through the main resource. The
                    value of this field is used to distinguish between managers, even if they
                    share the same name. For example, a status update will be distinct from a
                    regular update using the same manager name.
                    Note that the APIVersion field is not related to the Subresource field and
                    it always corresponds to the version of the main resource.
                type: string
                x-go-name: Subresource
            time:
                description: |-
                    Time is the timestamp of when the ManagedFields entry was added. The
                    timestamp will also be updated if a field is added, the manager
                    changes any of the owned fields value or removes a field. The
                    timestamp does not update when a field is removed from the entry
                    because another manager took it over.
                    +optional
                type: string
                x-go-name: Time
        type: object
        x-go-package: k8s.io/apimachinery/pkg/apis/meta/v1
    ManagedFieldsOperationType:
        title: ManagedFieldsOperationType is the type of operation which lead to a ManagedFieldsEntry being created.
        type: string
        x-go-package: k8s.io/apimachinery/pkg/apis/meta/v1
    Map:
        additionalProperties: {}
        description: |-
            It implements native SQL driver interfaces and hence can
            be used for SQL json or jsonb types as a drop in replacement
            of golang native maps
        title: Map type is an alias for map[string]interface{}
        type: object
        x-go-package: github.com/layer5io/meshery/server/internal/sql
    MapType:
        properties:
            name:
                type: string
                x-go-name: Name
            value:
                format: int64
                type: integer
                x-go-name: Value
        type: object
        x-go-package: github.com/grafana-tools/sdk
    MatchSelector:
        properties:
            from:
                items:
                    $ref: '#/definitions/MatchSelectorItem'
                type: array
                x-go-name: From
            refs:
                items:
                    items:
                        type: string
                    type: array
                type: array
                x-go-name: Refs
            to:
                items:
                    $ref: '#/definitions/MatchSelectorItem'
                type: array
                x-go-name: To
        type: object
        x-go-package: github.com/meshery/schemas/models/v1alpha3/relationship
    MatchSelectorItem:
        properties:
            id:
                format: uuid
                type: string
                x-go-name: Id
            kind:
                type: string
                x-go-name: Kind
            mutatedRef:
                items:
                    items:
                        type: string
                    type: array
                type: array
                x-go-name: MutatedRef
            mutatorRef:
                items:
                    items:
                        type: string
                    type: array
                type: array
                x-go-name: MutatorRef
        type: object
        x-go-package: github.com/meshery/schemas/models/v1alpha3/relationship
    MeshMapComponentSet:
        properties:
            designer:
                $ref: '#/definitions/DesignerComponents'
            visualizer:
                type: boolean
                x-go-name: Visualizer
        type: object
        x-go-package: github.com/layer5io/meshery/server/models
    MeshModelHostsWithEntitySummary:
        properties:
            created_at:
                format: date-time
                type: string
                x-go-name: CreatedAt
            credential_id:
                description: CredentialId Credential ID
                format: uuid
                type: string
                x-go-name: CredentialId
            deleted_at:
                format: date-time
                type: string
                x-go-name: DeletedAt
            id:
                description: Id ID
                format: uuid
                type: string
                x-go-name: Id
            kind:
                description: Kind Connection Kind
                type: string
                x-go-name: Kind
            metadata:
                additionalProperties: {}
                type: object
                x-go-name: Metadata
            name:
                description: Name Connection Name
                type: string
                x-go-name: Name
            status:
                $ref: '#/definitions/ConnectionStatus'
            sub_type:
                description: SubType Connection Subtype
                type: string
                x-go-name: SubType
            summary:
                $ref: '#/definitions/EntitySummary'
            type:
                description: Type Connection Type
                type: string
                x-go-name: Type
            updated_at:
                format: date-time
                type: string
                x-go-name: UpdatedAt
            user_id:
                description: UserID A Universally Unique Identifier used to uniquely identify entites in Meshery. The UUID core defintion is used across different schemas.
                format: uuid
                type: string
                x-go-name: UserID
        type: object
        x-go-package: github.com/layer5io/meshkit/models/meshmodel/core/v1beta1
    MeshSyncResourcesAPIResponse:
        properties:
            design:
                $ref: '#/definitions/PatternFile'
            page:
                format: int64
                type: integer
                x-go-name: Page
            page_size:
                format: int64
                type: integer
                x-go-name: PageSize
            resources:
                items:
                    $ref: '#/definitions/KubernetesResource'
                type: array
                x-go-name: Resources
            total_count:
                format: int64
                type: integer
                x-go-name: TotalCount
        type: object
        x-go-package: github.com/layer5io/meshery/server/models
    MeshSyncResourcesSummaryAPIResponse:
        properties:
            kinds:
                items:
                    properties:
                        Count:
                            format: int64
                            type: integer
                        Kind:
                            type: string
                    type: object
                type: array
                x-go-name: Kinds
            labels:
                items:
                    $ref: '#/definitions/KubernetesKeyValue'
                type: array
                x-go-name: Labels
            namespaces:
                items:
                    type: string
                type: array
                x-go-name: Namespaces
        type: object
        x-go-package: github.com/layer5io/meshery/server/models
    MesheryApplication:
        description: MesheryApplication represents the applications that needs to be saved
        properties:
            application_file:
                type: string
                x-go-name: ApplicationFile
            created_at:
                format: date-time
                type: string
                x-go-name: CreatedAt
            id:
                format: uuid
                type: string
                x-go-name: ID
            location:
                $ref: '#/definitions/Map'
            name:
                type: string
                x-go-name: Name
            source_content:
                items:
                    format: uint8
                    type: integer
                type: array
                x-go-name: SourceContent
            type:
                $ref: '#/definitions/NullString'
            updated_at:
                format: date-time
                type: string
                x-go-name: UpdatedAt
            user_id:
                description: |-
                    Meshery doesn't have the user id fields
                    but the remote provider is allowed to provide one
                type: string
                x-go-name: UserID
        type: object
        x-go-package: github.com/layer5io/meshery/server/models
    MesheryFilter:
        description: MesheryFilter represents the filters that needs to be saved
        properties:
            catalog_data:
                $ref: '#/definitions/Map'
            created_at:
                format: date-time
                type: string
                x-go-name: CreatedAt
            filter_file:
                items:
                    format: uint8
                    type: integer
                type: array
                x-go-name: FilterFile
            filter_resource:
                type: string
                x-go-name: FilterResource
            id:
                format: uuid
                type: string
                x-go-name: ID
            location:
                $ref: '#/definitions/Map'
            name:
                type: string
                x-go-name: Name
            updated_at:
                format: date-time
                type: string
                x-go-name: UpdatedAt
            user_id:
                description: |-
                    Meshery doesn't have the user id fields
                    but the remote provider is allowed to provide one
                type: string
                x-go-name: UserID
            visibility:
                type: string
                x-go-name: Visibility
        type: object
        x-go-package: github.com/layer5io/meshery/server/models
    MesheryK8sContextPage:
        description: MesheryK8sContextPage represents a page of contexts
        properties:
            contexts:
                items:
                    $ref: '#/definitions/K8sContext'
                type: array
                x-go-name: Contexts
            page:
                format: uint64
                type: integer
                x-go-name: Page
            page_size:
                format: uint64
                type: integer
                x-go-name: PageSize
            total_count:
                format: int64
                type: integer
                x-go-name: TotalCount
        type: object
        x-go-package: github.com/layer5io/meshery/server/models
    MesheryPattern:
        description: MesheryPattern represents the patterns that needs to be saved
        properties:
            catalog_data:
                $ref: '#/definitions/CatalogData'
            clone_count:
                format: int64
                type: integer
                x-go-name: CloneCount
            created_at:
                format: date-time
                type: string
                x-go-name: CreatedAt
            deployment_count:
                format: int64
                type: integer
                x-go-name: DeploymentCount
            download_count:
                format: int64
                type: integer
                x-go-name: DownloadCount
            id:
                format: uuid
                type: string
                x-go-name: ID
            location:
                $ref: '#/definitions/Map'
            name:
                type: string
                x-go-name: Name
            pattern_file:
                type: string
                x-go-name: PatternFile
            share_count:
                format: int64
                type: integer
                x-go-name: ShareCount
            source_content:
                items:
                    format: uint8
                    type: integer
                type: array
                x-go-name: SourceContent
            type:
                $ref: '#/definitions/NullString'
            updated_at:
                format: date-time
                type: string
                x-go-name: UpdatedAt
            user_id:
                description: |-
                    Meshery doesn't have the user id fields
                    but the remote provider is allowed to provide one
                type: string
                x-go-name: UserID
            view_count:
                format: int64
                type: integer
                x-go-name: ViewCount
            visibility:
                type: string
                x-go-name: Visibility
        type: object
        x-go-package: github.com/layer5io/meshery/server/models
    MesheryUICapabilities:
        properties:
            header:
                $ref: '#/definitions/HeaderComponents'
            navigator:
                $ref: '#/definitions/NavigatorComponents'
        type: object
        x-go-package: github.com/layer5io/meshery/server/models
    MeshmodelCategoriesAPIResponse:
        description: API response model for meshmodel categories API
        properties:
            categories:
                items:
                    $ref: '#/definitions/Entity'
                type: array
                x-go-name: Categories
            page:
                format: int64
                type: integer
                x-go-name: Page
            page_size:
                format: int64
                type: integer
                x-go-name: PageSize
            total_count:
                format: int64
                type: integer
                x-go-name: Count
        type: object
        x-go-package: github.com/layer5io/meshery/server/models
    MeshmodelComponentsAPIResponse:
        description: API response model for meshmodel components API
        properties:
            components:
                items:
                    $ref: '#/definitions/ComponentDefinition'
                type: array
                x-go-name: Components
            page:
                format: int64
                type: integer
                x-go-name: Page
            page_size:
                format: int64
                type: integer
                x-go-name: PageSize
            total_count:
                format: int64
                type: integer
                x-go-name: Count
        type: object
        x-go-package: github.com/layer5io/meshery/server/models
    MeshmodelComponentsDuplicateAPIResponse:
        description: API response model for meshmodel components API that contains the number of duplicates for each component
        properties:
            components:
                items:
                    $ref: '#/definitions/DuplicateResponseComponent'
                type: array
                x-go-name: Components
            page:
                format: int64
                type: integer
                x-go-name: Page
            page_size:
                format: int64
                type: integer
                x-go-name: PageSize
            total_count:
                format: int64
                type: integer
                x-go-name: Count
        type: object
        x-go-package: github.com/layer5io/meshery/server/models
    MeshmodelPoliciesAPIResponse:
        description: API response model for meshmodel relationships API
        properties:
            page:
                format: int64
                type: integer
                x-go-name: Page
            page_size:
                format: int64
                type: integer
                x-go-name: PageSize
            policies:
                items:
                    $ref: '#/definitions/Entity'
                type: array
                x-go-name: Policies
            total_count:
                format: int64
                type: integer
                x-go-name: Count
        type: object
        x-go-package: github.com/layer5io/meshery/server/models
    MeshmodelRegistrantsAPIResponse:
        properties:
            page:
                format: int64
                type: integer
                x-go-name: Page
            page_size:
                format: int64
                type: integer
                x-go-name: PageSize
            registrants:
                items:
                    $ref: '#/definitions/MeshModelHostsWithEntitySummary'
                type: array
                x-go-name: Registrants
            total_count:
                format: int64
                type: integer
                x-go-name: Count
        type: object
        x-go-package: github.com/layer5io/meshery/server/models
    MeshmodelRelationshipsAPIResponse:
        description: API response model for meshmodel relationships API
        properties:
            page:
                format: int64
                type: integer
                x-go-name: Page
            page_size:
                format: int64
                type: integer
                x-go-name: PageSize
            relationships:
                items:
                    $ref: '#/definitions/Entity'
                type: array
                x-go-name: Relationships
            total_count:
                format: int64
                type: integer
                x-go-name: Count
        type: object
        x-go-package: github.com/layer5io/meshery/server/models
    MeshmodelsAPIResponse:
        description: API response model for meshmodel models API
        properties:
            models:
                items:
                    $ref: '#/definitions/ModelDefinition'
                type: array
                x-go-name: Models
            page:
                format: int64
                type: integer
                x-go-name: Page
            page_size:
                format: int64
                type: integer
                x-go-name: PageSize
            total_count:
                format: int64
                type: integer
                x-go-name: Count
        type: object
        x-go-package: github.com/layer5io/meshery/server/models
    MeshmodelsDuplicateAPIResponse:
        description: API response model for meshmodel models API that contains the number of duplicates for each model
        properties:
            models:
                items:
                    $ref: '#/definitions/DuplicateResponseModels'
                type: array
                x-go-name: Models
            page:
                format: int64
                type: integer
                x-go-name: Page
            page_size:
                format: int64
                type: integer
                x-go-name: PageSize
            total_count:
                format: int64
                type: integer
                x-go-name: Count
        type: object
        x-go-package: github.com/layer5io/meshery/server/models
    Meta:
        properties:
            CreatedAt:
                format: date-time
                type: string
            UpdatedAt:
                format: date-time
                type: string
            Version:
                $ref: '#/definitions/Version'
        title: Meta is a base object inherited by most of the other once.
        type: object
        x-go-package: github.com/docker/docker/api/types/swarm
    Model:
        properties:
            version:
                description: Version Version of the model as defined by the registrant.
                type: string
                x-go-name: Version
        type: object
        x-go-package: github.com/meshery/schemas/models/v1beta1/model
    ModelDefinition:
        properties:
            category:
                $ref: '#/definitions/CategoryDefinition'
            components:
                x-go-name: Components
            components_count:
                description: |-
                    Total number of components in a model
                    Edited on purpose
                format: int64
                type: integer
                x-go-name: ComponentsCount
            connection_id:
                format: uuid
                type: string
                x-go-name: RegistrantId
            description:
                description: Description Description of the model.
                type: string
                x-go-name: Description
            displayName:
                description: DisplayName Human-readable name for the model.
                type: string
                x-go-name: DisplayName
            id:
                description: Id Uniquely identifies the entity (i.e. component) as defined in a declaration (i.e. design).
                format: uuid
                type: string
                x-go-name: Id
            metadata:
                $ref: '#/definitions/ModelDefinition_Metadata'
            model:
                $ref: '#/definitions/Model'
            name:
                description: Name The unique name for the model within the scope of a registrant.
                type: string
                x-go-name: Name
            registrant:
                $ref: '#/definitions/Connection'
            relationships:
                description: |-
                    To prevent cyclic error, the type is changed to interface, it doesn't affect registration
                    Edited on purpose
                x-go-name: Relationships
            relationships_count:
                description: |-
                    Total number of relationships in a model
                    Edited on purpose
                format: int64
                type: integer
                x-go-name: RelationshipsCount
            schemaVersion:
                description: SchemaVersion Specifies the version of the schema used for the definition.
                type: string
                x-go-name: SchemaVersion
            status:
                $ref: '#/definitions/ModelDefinitionStatus'
            subCategory:
                description: SubCategory Sub-category of the model.
                type: string
                x-go-name: SubCategory
            version:
                description: Version Version of the model definition.
                type: string
                x-go-name: Version
        title: ModelDefinition Meshery Models serve as a portable unit of packaging to define managed entities, their relationships, and capabilities.
        type: object
        x-go-package: github.com/meshery/schemas/models/v1beta1/model
    ModelDefinition_Metadata:
        properties:
            capabilities:
                description: Capabilities Meshery manages entities in accordance with their specific capabilities. This field explicitly identifies those capabilities largely by what actions a given component supports; e.g. metric-scrape, sub-interface, and so on. This field is extensible. Entities may define a broad array of capabilities, which are in-turn dynamically interpretted by Meshery for full lifecycle management.
                items:
                    $ref: '#/definitions/Capability'
                type: array
                x-go-name: Capabilities
            isAnnotation:
                description: IsAnnotation Indicates whether the model and its entities should be treated as deployable entities or as logical representations.
                type: boolean
                x-go-name: IsAnnotation
            primaryColor:
                description: PrimaryColor Primary color associated with the model.
                type: string
                x-go-name: PrimaryColor
            secondaryColor:
                description: SecondaryColor Secondary color associated with the model.
                type: string
                x-go-name: SecondaryColor
            svgColor:
                description: SvgColor SVG representation of the model in colored format.
                type: string
                x-go-name: SvgColor
            svgComplete:
                description: SvgComplete SVG representation of the complete model.
                type: string
                x-go-name: SvgComplete
            svgWhite:
                description: SvgWhite SVG representation of the model in white color.
                type: string
                x-go-name: SvgWhite
        title: ModelDefinition_Metadata Metadata containing additional information associated with the model.
        type: object
        x-go-package: github.com/meshery/schemas/models/v1beta1/model
    ModelDefinitionStatus:
        description: |-
            duplicate: this component is a duplicate of another. The component that is to be the canonical reference and that is duplicated by other components should not be assigned the 'duplicate' status.
            maintenance: model is unavailable for a period of time.
            enabled: model is available for use for all users of this Meshery Server.
            ignored: model is unavailable for use for all users of this Meshery Server.
        title: 'ModelDefinitionStatus Status of model, including:'
        type: string
        x-go-package: github.com/meshery/schemas/models/v1beta1/model
    NavigatorComponents:
        properties:
            configuration:
                $ref: '#/definitions/Configuration'
            conformance:
                type: boolean
                x-go-name: Conformance
            dashboard:
                type: boolean
                x-go-name: Dashboard
            extensions:
                type: boolean
                x-go-name: Extensions
            help:
                type: boolean
                x-go-name: Help
            lifecycle:
                $ref: '#/definitions/Adapters'
            performance:
                type: boolean
                x-go-name: Performance
            toggler:
                type: boolean
                x-go-name: Toggler
        type: object
        x-go-package: github.com/layer5io/meshery/server/models
    NavigatorExtension:
        description: NavigatorExtension describes the Navigator extension point in the UI
        properties:
            allowedTo:
                $ref: '#/definitions/MeshMapComponentSet'
            children:
                $ref: '#/definitions/NavigatorExtensions'
            component:
                type: string
                x-go-name: Component
            href:
                $ref: '#/definitions/Href'
            icon:
                type: string
                x-go-name: Icon
            isBeta:
                type: boolean
                x-go-name: IsBeta
            link:
                type: boolean
                x-go-name: Link
            on_click_callback:
                format: int64
                type: integer
                x-go-name: OnClickCallback
            show:
                type: boolean
                x-go-name: Show
            title:
                type: string
                x-go-name: Title
            type:
                type: string
                x-go-name: Type
        type: object
        x-go-package: github.com/layer5io/meshery/server/models
    NavigatorExtensions:
        description: NavigatorExtensions is a collection of NavigatorExtension
        items:
            $ref: '#/definitions/NavigatorExtension'
        type: array
        x-go-package: github.com/layer5io/meshery/server/models
    NullString:
        description: |-
            var s NullString
            err := db.QueryRow("SELECT name FROM foo WHERE id=?", id).Scan(&s)
            ...
            if s.Valid {
            use s.String
            } else {
            NULL value
            }
        properties:
            String:
                type: string
            Valid:
                type: boolean
        title: |-
            NullString represents a string that may be null.
            NullString implements the [Scanner] interface so
            it can be used as a scan destination:
        type: object
        x-go-package: database/sql
    NullTime:
        description: |-
            NullTime implements the [Scanner] interface so
            it can be used as a scan destination, similar to [NullString].
        properties:
            Time:
                format: date-time
                type: string
            Valid:
                type: boolean
        title: NullTime represents a [time.Time] that may be null.
        type: object
        x-go-package: database/sql
    OpCategory:
        format: int32
        type: integer
        x-go-package: github.com/layer5io/meshery/server/meshes
    Options:
        properties:
            colorMode:
                type: string
                x-go-name: ColorMode
            content:
                type: string
                x-go-name: Content
            displayMode:
                type: string
                x-go-name: DisplayMode
            graphMode:
                type: string
                x-go-name: GraphMode
            justifyMode:
                type: string
                x-go-name: JustifyMode
            mode:
                type: string
                x-go-name: Mode
            orientation:
                type: string
                x-go-name: Orientation
            reduceOptions:
                properties:
                    calcs:
                        items:
                            type: string
                        type: array
                        x-go-name: Calcs
                    fields:
                        type: string
                        x-go-name: Fields
                    values:
                        type: boolean
                        x-go-name: Values
                type: object
                x-go-name: ReduceOptions
            textMode:
                type: string
                x-go-name: TextMode
        type: object
        x-go-package: github.com/grafana-tools/sdk
    Organization:
        properties:
            country:
                type: string
                x-go-name: Country
            created_at:
                format: date-time
                type: string
                x-go-name: CreatedAt
            deleted_at:
                $ref: '#/definitions/NullTime'
            description:
                type: string
                x-go-name: Description
            id:
                description: Unique identifier
                format: uuid
                type: string
                x-go-name: ID
            name:
                type: string
                x-go-name: Name
            owner:
                format: uuid
                type: string
                x-go-name: Owner
            region:
                type: string
                x-go-name: Region
            updated_at:
                format: date-time
                type: string
                x-go-name: UpdatedAt
        type: object
        x-go-package: github.com/layer5io/meshery/server/models
    OrganizationsPage:
        properties:
            organizations:
                items:
                    $ref: '#/definitions/Organization'
                type: array
                x-go-name: Organizations
            page:
                format: uint64
                type: integer
                x-go-name: Page
            page_size:
                format: uint64
                type: integer
                x-go-name: PageSize
            total_count:
                format: int64
                type: integer
                x-go-name: TotalCount
        type: object
        x-go-package: github.com/layer5io/meshery/server/models
    OwnerReference:
        description: |-
            OwnerReference contains enough information to let you identify an owning
            object. An owning object must be in the same namespace as the dependent, or
            be cluster-scoped, so there is no namespace field.
            +structType=atomic
        properties:
            apiVersion:
                description: API version of the referent.
                type: string
                x-go-name: APIVersion
            blockOwnerDeletion:
                description: |-
                    If true, AND if the owner has the "foregroundDeletion" finalizer, then
                    the owner cannot be deleted from the key-value store until this
                    reference is removed.
                    See https://kubernetes.io/docs/concepts/architecture/garbage-collection/#foreground-deletion
                    for how the garbage collector interacts with this field and enforces the foreground deletion.
                    Defaults to false.
                    To set this field, a user needs "delete" permission of the owner,
                    otherwise 422 (Unprocessable Entity) will be returned.
                    +optional
                type: boolean
                x-go-name: BlockOwnerDeletion
            controller:
                description: |-
                    If true, this reference points to the managing controller.
                    +optional
                type: boolean
                x-go-name: Controller
            kind:
                description: |-
                    Kind of the referent.
                    More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                type: string
                x-go-name: Kind
            name:
                description: |-
                    Name of the referent.
                    More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names
                type: string
                x-go-name: Name
            uid:
                $ref: '#/definitions/UID'
        type: object
        x-go-package: k8s.io/apimachinery/pkg/apis/meta/v1
    Panel:
        properties:
            alert:
                $ref: '#/definitions/Alert'
            aliasColors:
                x-go-name: AliasColors
            bars:
                type: boolean
                x-go-name: Bars
            cards:
                properties:
                    cardPadding:
                        format: double
                        type: number
                        x-go-name: CardPadding
                    cardRound:
                        format: double
                        type: number
                        x-go-name: CardRound
                type: object
                x-go-name: Cards
            collapsed:
                type: boolean
                x-go-name: Collapsed
            color:
                properties:
                    cardColor:
                        type: string
                        x-go-name: CardColor
                    colorScale:
                        type: string
                        x-go-name: ColorScale
                    colorScheme:
                        type: string
                        x-go-name: ColorScheme
                    exponent:
                        format: double
                        type: number
                        x-go-name: Exponent
                    max:
                        format: double
                        type: number
                        x-go-name: Max
                    min:
                        format: double
                        type: number
                        x-go-name: Min
                    mode:
                        type: string
                        x-go-name: Mode
                type: object
                x-go-name: Color
            colorBackground:
                type: boolean
                x-go-name: ColorBackground
            colorValue:
                type: boolean
                x-go-name: ColorValue
            colors:
                items:
                    type: string
                type: array
                x-go-name: Colors
            columns:
                items:
                    $ref: '#/definitions/Column'
                type: array
                x-go-name: Columns
            content:
                type: string
                x-go-name: Content
            dashLength:
                format: uint64
                type: integer
                x-go-name: DashLength
            dashboardTags:
                items:
                    type: string
                type: array
                x-go-name: DashboardTags
            dashes:
                type: boolean
                x-go-name: Dashes
            dataFormat:
                type: string
                x-go-name: DataFormat
            datasource:
                x-go-name: Datasource
            decimals:
                format: int64
                type: integer
                x-go-name: Decimals
            description:
                type: string
                x-go-name: Description
            editable:
                type: boolean
                x-go-name: Editable
            error:
                type: boolean
                x-go-name: Error
            fieldConfig:
                $ref: '#/definitions/FieldConfig'
            fill:
                format: int64
                type: integer
                x-go-name: Fill
            folderId:
                format: int64
                type: integer
                x-go-name: FolderID
            format:
                type: string
                x-go-name: Format
            gauge:
                $ref: '#/definitions/Gauge'
            gridPos:
                properties:
                    h:
                        format: int64
                        type: integer
                        x-go-name: H
                    w:
                        format: int64
                        type: integer
                        x-go-name: W
                    x:
                        format: int64
                        type: integer
                        x-go-name: X
                    "y":
                        format: int64
                        type: integer
                        x-go-name: "Y"
                type: object
                x-go-name: GridPos
            headings:
                type: boolean
                x-go-name: Headings
            height:
                x-go-name: Height
            hideTimeOverride:
                type: boolean
                x-go-name: HideTimeOverride
            hideZeroBuckets:
                type: boolean
                x-go-name: HideZeroBuckets
            highlightCards:
                type: boolean
                x-go-name: HighlightCards
            id:
                format: uint64
                type: integer
                x-go-name: ID
            isNew:
                type: boolean
                x-go-name: IsNew
            leftYAxisLabel:
                type: string
                x-go-name: LeftYAxisLabel
            legend:
                $ref: '#/definitions/Legend'
                properties:
                    show:
                        type: boolean
                        x-go-name: Show
                type: object
            limit:
                format: int64
                type: integer
                x-go-name: Limit
            lines:
                type: boolean
                x-go-name: Lines
            linewidth:
                format: uint64
                type: integer
                x-go-name: Linewidth
            links:
                items:
                    $ref: '#/definitions/Link'
                type: array
                x-go-name: Links
            mappingType:
                format: uint64
                type: integer
                x-go-name: MappingType
            mappingTypes:
                items:
                    $ref: '#/definitions/MapType'
                type: array
                x-go-name: MappingTypes
            maxDataPoints:
                $ref: '#/definitions/IntString'
            minSpan:
                format: float
                type: number
                x-go-name: MinSpan
            mode:
                type: string
                x-go-name: Mode
            nameFilter:
                type: string
                x-go-name: NameFilter
            nullPointMode:
                type: string
                x-go-name: NullPointMode
            onlyAlertsOnDashboard:
                type: boolean
                x-go-name: OnlyAlertsOnDashboard
            options:
                $ref: '#/definitions/TimeseriesOptions'
                properties:
                    content:
                        type: string
                        x-go-name: Content
                    mode:
                        type: string
                        x-go-name: Mode
                type: object
                x-go-name: Options
            pageSize:
                format: uint64
                type: integer
                x-go-name: PageSize
            panels:
                items:
                    $ref: '#/definitions/Panel'
                type: array
                x-go-name: Panels
            percentage:
                type: boolean
                x-go-name: Percentage
            pointradius:
                format: float
                type: number
                x-go-name: Pointradius
            points:
                type: boolean
                x-go-name: Points
            postfix:
                type: string
                x-go-name: Postfix
            postfixFontSize:
                type: string
                x-go-name: PostfixFontSize
            prefix:
                type: string
                x-go-name: Prefix
            prefixFontSize:
                type: string
                x-go-name: PrefixFontSize
            query:
                type: string
                x-go-name: Query
            rangeMaps:
                items:
                    $ref: '#/definitions/RangeMap'
                type: array
                x-go-name: RangeMaps
            recent:
                type: boolean
                x-go-name: Recent
            renderer:
                type: string
                x-go-name: Renderer
            repeat:
                type: string
                x-go-name: Repeat
            repeatPanelId:
                description: RepeatIteration *int64   `json:"repeatIteration,omitempty"`
                format: uint64
                type: integer
                x-go-name: RepeatPanelID
            reverseYBuckets:
                type: boolean
                x-go-name: ReverseYBuckets
            rightYAxisLabel:
                type: string
                x-go-name: RightYAxisLabel
            scopedVars:
                additionalProperties:
                    properties:
                        selected:
                            type: boolean
                            x-go-name: Selected
                        text:
                            type: string
                            x-go-name: Text
                        value:
                            type: string
                            x-go-name: Value
                    type: object
                type: object
                x-go-name: ScopedVars
            scroll:
                type: boolean
                x-go-name: Scroll
            search:
                type: boolean
                x-go-name: Search
            seriesOverrides:
                items:
                    $ref: '#/definitions/SeriesOverride'
                type: array
                x-go-name: SeriesOverrides
            show:
                type: string
                x-go-name: Show
            showHeader:
                type: boolean
                x-go-name: ShowHeader
            sort:
                $ref: '#/definitions/Sort'
            sortOrder:
                format: int64
                type: integer
                x-go-name: SortOrder
            spaceLength:
                format: uint64
                type: integer
                x-go-name: SpaceLength
            span:
                format: float
                type: number
                x-go-name: Span
            sparkline:
                $ref: '#/definitions/SparkLine'
            stack:
                type: boolean
                x-go-name: Stack
            starred:
                type: boolean
                x-go-name: Starred
            stateFilter:
                items:
                    type: string
                type: array
                x-go-name: StateFilter
            steppedLine:
                type: boolean
                x-go-name: SteppedLine
            styles:
                items:
                    $ref: '#/definitions/ColumnStyle'
                type: array
                x-go-name: Styles
            tags:
                items:
                    type: string
                type: array
                x-go-name: Tags
            targets:
                items:
                    $ref: '#/definitions/Target'
                type: array
                x-go-name: Targets
            thresholds:
                items:
                    $ref: '#/definitions/Threshold'
                type: string
                x-go-name: Thresholds
            timeFrom:
                type: string
                x-go-name: TimeFrom
            timeShift:
                type: string
                x-go-name: TimeShift
            title:
                type: string
                x-go-name: Title
            tooltip:
                $ref: '#/definitions/Tooltip'
                properties:
                    show:
                        type: boolean
                        x-go-name: Show
                    showHistogram:
                        type: boolean
                        x-go-name: ShowHistogram
                type: object
            tooltipDecimals:
                format: int64
                type: integer
                x-go-name: TooltipDecimals
            transform:
                type: string
                x-go-name: Transform
            transparent:
                type: boolean
                x-go-name: Transparent
            type:
                type: string
                x-go-name: Type
            valueFontSize:
                type: string
                x-go-name: ValueFontSize
            valueMaps:
                items:
                    $ref: '#/definitions/ValueMap'
                type: array
                x-go-name: ValueMaps
            valueName:
                type: string
                x-go-name: ValueName
            x-axis:
                type: boolean
                x-go-name: XAxis
            xAxis:
                properties:
                    show:
                        type: boolean
                        x-go-name: Show
                type: object
                x-go-name: XAxis
            xBucketNumber:
                format: double
                type: number
                x-go-name: XBucketNumber
            xBucketSize:
                type: string
                x-go-name: XBucketSize
            xaxis:
                $ref: '#/definitions/Axis'
            y-axis:
                type: boolean
                x-go-name: YAxis
            y_formats:
                items:
                    type: string
                type: array
                x-go-name: YFormats
            yAxis:
                properties:
                    decimals:
                        format: int64
                        type: integer
                        x-go-name: Decimals
                    format:
                        type: string
                        x-go-name: Format
                    logBase:
                        format: int64
                        type: integer
                        x-go-name: LogBase
                    max:
                        type: string
                        x-go-name: Max
                    min:
                        type: string
                        x-go-name: Min
                    show:
                        type: boolean
                        x-go-name: Show
                    splitFactor:
                        format: double
                        type: number
                        x-go-name: SplitFactor
                type: object
                x-go-name: YAxis
            yBucketBound:
                type: string
                x-go-name: YBucketBound
            yBucketNumber:
                format: double
                type: number
                x-go-name: YBucketNumber
            yBucketSize:
                format: double
                type: number
                x-go-name: YBucketSize
            yaxes:
                items:
                    $ref: '#/definitions/Axis'
                type: array
                x-go-name: Yaxes
        title: Panel represents panels of different types defined in Grafana.
        type: object
        x-go-package: github.com/grafana-tools/sdk
    PatternFile:
        properties:
            components:
                description: Components List of component declarations
                items:
                    $ref: '#/definitions/ComponentDefinition'
                type: array
                x-go-name: Components
            id:
                format: uuid
                type: string
                x-go-name: Id
            metadata:
                $ref: '#/definitions/PatternFileMetadata'
            name:
                description: Name Name of the design; a descriptive, but concise title for the design document.
                type: string
                x-go-name: Name
            preferences:
                description: Preferences Design-level preferences
                properties:
                    layers:
                        additionalProperties: {}
                        description: Layers List of available layers
                        type: object
                        x-go-name: Layers
                type: object
                x-go-name: Preferences
            relationships:
                description: Relationships List of relationships between components
                items:
                    $ref: '#/definitions/RelationshipDefinition'
                type: array
                x-go-name: Relationships
            schemaVersion:
                description: SchemaVersion Specifies the version of the schema to which the design conforms.
                type: string
                x-go-name: SchemaVersion
            version:
                description: Version Revision of the design as expressed by an auto-incremented, SemVer-compliant version number. May be manually set by a user or third-party system, but will always be required to be of version number higher than the previously defined version number.
                type: string
                x-go-name: Version
        type: object
        x-go-package: github.com/meshery/schemas/models/v1beta1/pattern
    PatternFileMetadata:
        properties:
            resolvedAliases:
                additionalProperties:
                    $ref: '#/definitions/ResolvedAlias'
                type: object
                x-go-name: ResolvedAliases
        type: object
        x-go-package: github.com/meshery/schemas/models/v1beta1/pattern
    PatternsAPIResponse:
        description: PatternsAPIResponse response retruned by patternfile endpoint on meshery server
        properties:
            page:
                format: uint64
                type: integer
                x-go-name: Page
            page_size:
                format: uint64
                type: integer
                x-go-name: PageSize
            patterns:
                items:
                    $ref: '#/definitions/MesheryPattern'
                type: array
                x-go-name: Patterns
            total_count:
                format: uint64
                type: integer
                x-go-name: TotalCount
        type: object
        x-go-package: github.com/layer5io/meshery/server/models
    PerformanceProfile:
        description: |-
            PerformanceProfile represents the performance profile that needs
            to be saved
        properties:
            concurrent_request:
                format: int64
                type: integer
                x-go-name: ConcurrentRequest
            content_type:
                type: string
                x-go-name: ContentType
            created_at:
                type: string
                x-go-name: CreatedAt
            duration:
                type: string
                x-go-name: Duration
            endpoints:
                $ref: '#/definitions/StringArray'
            id:
                format: uuid
                type: string
                x-go-name: ID
            last_run:
                type: string
                x-go-name: LastRun
            load_generators:
                $ref: '#/definitions/StringArray'
            metadata:
                $ref: '#/definitions/Map'
            name:
                type: string
                x-go-name: Name
            qps:
                format: int64
                type: integer
                x-go-name: QPS
            request_body:
                type: string
                x-go-name: RequestBody
            request_cookies:
                type: string
                x-go-name: RequestCookies
            request_headers:
                type: string
                x-go-name: RequestHeaders
            schedule:
                format: uuid
                type: string
                x-go-name: Schedule
            service_mesh:
                type: string
                x-go-name: ServiceMesh
            total_results:
                format: int64
                type: integer
                x-go-name: TotalResults
            updated_at:
                type: string
                x-go-name: UpdatedAt
        type: object
        x-go-package: github.com/layer5io/meshery/server/models
    PerformanceProfileParameters:
        description: PerformanceProfileParameters structs contains parameters to save a performance profile
        properties:
            concurrent_request:
                description: number of concurrent requests
                format: int64
                type: integer
                x-go-name: ConcurrentRequest
            duration:
                description: duration of tests e.g. 30s
                type: string
                x-go-name: Duration
            endpoints:
                description: array of urls of performance results
                items:
                    type: string
                type: array
                x-go-name: Endpoints
            load_generators:
                description: array of load generators
                items:
                    type: string
                type: array
                x-go-name: LoadGenerators
            name:
                description: name of performance profile
                type: string
                x-go-name: Name
            qps:
                description: qps in integer
                format: int64
                type: integer
                x-go-name: QPS
            service_mesh:
                description: infrastructure for performance tests
                type: string
                x-go-name: ServiceMesh
        type: object
        x-go-package: github.com/layer5io/meshery/server/models
    PerformanceProfilesAPIResponse:
        description: PerformanceProfilesAPIResponse response retruned by performance endpoint on meshery server
        properties:
            page:
                format: uint64
                type: integer
                x-go-name: Page
            page_size:
                format: uint64
                type: integer
                x-go-name: PageSize
            profiles:
                items:
                    $ref: '#/definitions/PerformanceProfile'
                type: array
                x-go-name: Profiles
            total_count:
                format: uint64
                type: integer
                x-go-name: TotalCount
        type: object
        x-go-package: github.com/layer5io/meshery/server/models
    PerformanceResult:
        description: PerformanceResult represents the result of a performance test
        properties:
            mesh:
                type: string
                x-go-name: Mesh
            meshery_id:
                format: uuid
                type: string
                x-go-name: MesheryID
            name:
                type: string
                x-go-name: Name
            performance_profile:
                format: uuid
                type: string
                x-go-name: PerformanceProfile
            runner_results:
                $ref: '#/definitions/RunnerResults'
            server_board_config:
                x-go-name: ServerBoardConfig
            server_metrics:
                x-go-name: ServerMatrics
            test_start_time:
                format: date-time
                type: string
                x-go-name: TestStartTime
            user_id:
                format: uuid
                type: string
                x-go-name: UserID
        type: object
        x-go-package: github.com/layer5io/meshery/server/models
    PerformanceResultsAPIResponse:
        description: PerformanceResultsAPIResponse response retruned by performance endpoint on meshery server
        properties:
            page:
                format: uint64
                type: integer
                x-go-name: Page
            page_size:
                format: uint64
                type: integer
                x-go-name: PageSize
            results:
                items:
                    $ref: '#/definitions/PerformanceResult'
                type: array
                x-go-name: Results
            total_count:
                format: uint64
                type: integer
                x-go-name: TotalCount
        type: object
        x-go-package: github.com/layer5io/meshery/server/models
    PerformanceSpec:
        description: PerformanceSpec - represents SMP, see here https://github.com/layer5io/service-mesh-performance-specification
        properties:
            ActualQPS:
                format: double
                type: number
            DetailsURI:
                type: string
            EndTime:
                format: date-time
                type: string
            EnvID:
                type: string
            Latencies:
                $ref: '#/definitions/LatenciesMs'
            MeshConfigID:
                type: string
            SMPVersion:
                type: string
            StartTime:
                format: date-time
                type: string
            TestID:
                type: string
        type: object
        x-go-package: github.com/layer5io/meshery/server/models
    PerformanceTestConfig:
        properties:
            clients:
                description: Single or distributed load generators
                items:
                    $ref: '#/definitions/PerformanceTestConfig_Client'
                type: array
                x-go-name: Clients
            duration:
                description: Length of time the endpoint will be under load
                type: string
                x-go-name: Duration
            id:
                type: string
                x-go-name: Id
            labels:
                additionalProperties:
                    type: string
                type: object
                x-go-name: Labels
            name:
                type: string
                x-go-name: Name
            smp_version:
                description: Spec version
                type: string
                x-go-name: SmpVersion
        type: object
        x-go-package: github.com/layer5io/service-mesh-performance/spec
    PerformanceTestConfig_Client:
        properties:
            additional_options:
                type: string
                x-go-name: AdditionalOptions
            body:
                type: string
                x-go-name: Body
            connections:
                format: int32
                type: integer
                x-go-name: Connections
            content_type:
                type: string
                x-go-name: ContentType
            cookies:
                additionalProperties:
                    type: string
                type: object
                x-go-name: Cookies
            endpoint_urls:
                items:
                    type: string
                type: array
                x-go-name: EndpointUrls
            headers:
                additionalProperties:
                    type: string
                type: object
                x-go-name: Headers
            internal:
                type: boolean
                x-go-name: Internal
            load_generator:
                type: string
                x-go-name: LoadGenerator
            protocol:
                $ref: '#/definitions/PerformanceTestConfig_Client_Protocol'
            rps:
                format: int64
                type: integer
                x-go-name: Rps
            ssl_certificate:
                type: string
                x-go-name: SslCertificate
        type: object
        x-go-package: github.com/layer5io/service-mesh-performance/spec
    PerformanceTestConfig_Client_Protocol:
        format: int32
        type: integer
        x-go-package: github.com/layer5io/service-mesh-performance/spec
    PerformanceTestParameters:
        description: PerformanceTestParameters contains parameters to run a performance test
        properties:
            c:
                description: concurrent request in number
                format: int64
                type: integer
                x-go-name: ConcurrentRequest
            dur:
                description: duration e.g. s for second
                type: string
                x-go-name: Duration
            loadGenerator:
                description: load generator for performance test
                type: string
                x-go-name: LoadGenerator
            mesh:
                description: infrastructure for performance test
                type: string
                x-go-name: ServiceMesh
            name:
                description: name of performance test
                type: string
                x-go-name: Name
            qps:
                description: qps in number
                format: int64
                type: integer
                x-go-name: QPS
            t:
                description: time in integer e.g. 30
                format: int64
                type: integer
                x-go-name: Time
            url:
                description: url for test
                type: string
                x-go-name: URL
            uuid:
                description: test-id of pre-existing test
                format: uuid
                type: string
                x-go-name: TestID
        type: object
        x-go-package: github.com/layer5io/meshery/server/models
    Plugin:
        description: Plugin A plugin for the Engine API
        properties:
            Config:
                $ref: '#/definitions/PluginConfig'
            Enabled:
                description: True if the plugin is running. False if the plugin is not running, only installed.
                type: boolean
            Id:
                description: Id
                type: string
                x-go-name: ID
            Name:
                description: name
                type: string
            PluginReference:
                description: plugin remote reference used to push/pull the plugin
                type: string
            Settings:
                $ref: '#/definitions/PluginSettings'
        required:
            - Config
            - Enabled
            - Name
            - Settings
        type: object
        x-go-package: github.com/docker/docker/api/types
    PluginConfig:
        properties:
            Args:
                $ref: '#/definitions/PluginConfigArgs'
            Description:
                description: description
                type: string
            DockerVersion:
                description: Docker Version used to create the plugin
                type: string
            Documentation:
                description: documentation
                type: string
            Entrypoint:
                description: entrypoint
                items:
                    type: string
                type: array
            Env:
                description: env
                items:
                    $ref: '#/definitions/PluginEnv'
                type: array
            Interface:
                $ref: '#/definitions/PluginConfigInterface'
            IpcHost:
                description: ipc host
                type: boolean
            Linux:
                $ref: '#/definitions/PluginConfigLinux'
            Mounts:
                description: mounts
                items:
                    $ref: '#/definitions/PluginMount'
                type: array
            Network:
                $ref: '#/definitions/PluginConfigNetwork'
            PidHost:
                description: pid host
                type: boolean
            PropagatedMount:
                description: propagated mount
                type: string
            User:
                $ref: '#/definitions/PluginConfigUser'
            WorkDir:
                description: work dir
                type: string
            rootfs:
                $ref: '#/definitions/PluginConfigRootfs'
        required:
            - Args
            - Description
            - Documentation
            - Entrypoint
            - Env
            - Interface
            - IpcHost
            - Linux
            - Mounts
            - Network
            - PidHost
            - PropagatedMount
            - WorkDir
        title: PluginConfig The config of a plugin.
        type: object
        x-go-package: github.com/docker/docker/api/types
    PluginConfigArgs:
        description: PluginConfigArgs plugin config args
        properties:
            Description:
                description: description
                type: string
            Name:
                description: name
                type: string
            Settable:
                description: settable
                items:
                    type: string
                type: array
            Value:
                description: value
                items:
                    type: string
                type: array
        required:
            - Description
            - Name
            - Settable
            - Value
        type: object
        x-go-package: github.com/docker/docker/api/types
    PluginConfigInterface:
        description: PluginConfigInterface The interface between Docker and the plugin
        properties:
            ProtocolScheme:
                description: Protocol to use for clients connecting to the plugin.
                type: string
            Socket:
                description: socket
                type: string
            Types:
                description: types
                items:
                    $ref: '#/definitions/PluginInterfaceType'
                type: array
        required:
            - Socket
            - Types
        type: object
        x-go-package: github.com/docker/docker/api/types
    PluginConfigLinux:
        description: PluginConfigLinux plugin config linux
        properties:
            AllowAllDevices:
                description: allow all devices
                type: boolean
            Capabilities:
                description: capabilities
                items:
                    type: string
                type: array
            Devices:
                description: devices
                items:
                    $ref: '#/definitions/PluginDevice'
                type: array
        required:
            - AllowAllDevices
            - Capabilities
            - Devices
        type: object
        x-go-package: github.com/docker/docker/api/types
    PluginConfigNetwork:
        description: PluginConfigNetwork plugin config network
        properties:
            Type:
                description: type
                type: string
        required:
            - Type
        type: object
        x-go-package: github.com/docker/docker/api/types
    PluginConfigRootfs:
        description: PluginConfigRootfs plugin config rootfs
        properties:
            diff_ids:
                description: diff ids
                items:
                    type: string
                type: array
                x-go-name: DiffIds
            type:
                description: type
                type: string
                x-go-name: Type
        type: object
        x-go-package: github.com/docker/docker/api/types
    PluginConfigUser:
        description: PluginConfigUser plugin config user
        properties:
            GID:
                description: g ID
                format: uint32
                type: integer
            UID:
                description: UID
                format: uint32
                type: integer
        type: object
        x-go-package: github.com/docker/docker/api/types
    PluginDevice:
        description: PluginDevice plugin device
        properties:
            Description:
                description: description
                type: string
            Name:
                description: name
                type: string
            Path:
                description: path
                type: string
            Settable:
                description: settable
                items:
                    type: string
                type: array
        required:
            - Description
            - Name
            - Path
            - Settable
        type: object
        x-go-package: github.com/docker/docker/api/types
    PluginEnv:
        description: PluginEnv plugin env
        properties:
            Description:
                description: description
                type: string
            Name:
                description: name
                type: string
            Settable:
                description: settable
                items:
                    type: string
                type: array
            Value:
                description: value
                type: string
        required:
            - Description
            - Name
            - Settable
            - Value
        type: object
        x-go-package: github.com/docker/docker/api/types
    PluginInterfaceType:
        description: PluginInterfaceType plugin interface type
        properties:
            Capability:
                description: capability
                type: string
            Prefix:
                description: prefix
                type: string
            Version:
                description: version
                type: string
        required:
            - Capability
            - Prefix
            - Version
        type: object
        x-go-package: github.com/docker/docker/api/types
    PluginMount:
        description: PluginMount plugin mount
        properties:
            Description:
                description: description
                type: string
            Destination:
                description: destination
                type: string
            Name:
                description: name
                type: string
            Options:
                description: options
                items:
                    type: string
                type: array
            Settable:
                description: settable
                items:
                    type: string
                type: array
            Source:
                description: source
                type: string
            Type:
                description: type
                type: string
        required:
            - Description
            - Destination
            - Name
            - Options
            - Settable
            - Source
            - Type
        type: object
        x-go-package: github.com/docker/docker/api/types
    PluginSettings:
        properties:
            Args:
                description: args
                items:
                    type: string
                type: array
            Devices:
                description: devices
                items:
                    $ref: '#/definitions/PluginDevice'
                type: array
            Env:
                description: env
                items:
                    type: string
                type: array
            Mounts:
                description: mounts
                items:
                    $ref: '#/definitions/PluginMount'
                type: array
        required:
            - Args
            - Devices
            - Env
            - Mounts
        title: PluginSettings Settings that can be modified by users.
        type: object
        x-go-package: github.com/docker/docker/api/types
    Port:
        description: Port An open port on a container
        properties:
            IP:
                description: Host IP address that the container's port is mapped to
                type: string
            PrivatePort:
                description: Port on the container
                format: uint16
                type: integer
            PublicPort:
                description: Port exposed on the host
                format: uint16
                type: integer
            Type:
                description: type
                type: string
        required:
            - PrivatePort
            - Type
        type: object
        x-go-package: github.com/docker/docker/api/types
    PortStatus:
        description: PortStatus represents the error condition of a service port
        properties:
            error:
                description: |-
                    Error is to record the problem with the service port
                    The format of the error shall comply with the following rules:
                    built-in error values shall be specified in this file and those shall use
                    CamelCase names
                    cloud provider specific error values must have names that comply with the
                    format foo.example.com/CamelCase.

                    The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                    +optional
                    +kubebuilder:validation:Required
                    +kubebuilder:validation:Pattern=`^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$`
                    +kubebuilder:validation:MaxLength=316
                type: string
                x-go-name: Error
            port:
                description: Port is the port number of the service port of which status is recorded here
                format: int32
                type: integer
                x-go-name: Port
            protocol:
                $ref: '#/definitions/Protocol'
        type: object
        x-go-package: k8s.io/api/core/v1
    Preference:
        description: Preference represents the data stored in session / local DB
        properties:
            anonymousPerfResults:
                type: boolean
                x-go-name: AnonymousPerfResults
            anonymousUsageStats:
                type: boolean
                x-go-name: AnonymousUsageStats
            grafana:
                $ref: '#/definitions/Grafana'
            loadTestPrefs:
                $ref: '#/definitions/LoadTestPreferences'
            meshAdapters:
                items:
                    $ref: '#/definitions/Adapter'
                type: array
                x-go-name: MeshAdapters
            prometheus:
                $ref: '#/definitions/Prometheus'
            remoteProviderPreferences:
                additionalProperties: {}
                type: object
                x-go-name: RemoteProviderPreferences
            updated_at:
                format: date-time
                type: string
                x-go-name: UpdatedAt
            usersExtensionPreferences:
                additionalProperties: {}
                type: object
                x-go-name: UsersExtensionPreferences
        type: object
        x-go-package: github.com/layer5io/meshery/server/models
    PreferenceParams:
        description: Parameters to updates Anonymous stats
        properties:
            anonymousPerfResults:
                type: boolean
                x-go-name: AnonymousPerfResults
            anonymousUsageStats:
                type: boolean
                x-go-name: AnonymousUsageStats
        type: object
        x-go-package: github.com/layer5io/meshery/server/models
    Prometheus:
        description: Prometheus represents the prometheus session config
        properties:
            prometheusURL:
                type: string
                x-go-name: PrometheusURL
            selectedPrometheusBoardsConfigs:
                items:
                    $ref: '#/definitions/SelectedGrafanaConfig'
                type: array
                x-go-name: SelectedPrometheusBoardsConfigs
        type: object
        x-go-package: github.com/layer5io/meshery/server/models
    Protocol:
        description: +enum
        title: Protocol defines network protocols supported for things like container ports.
        type: string
        x-go-package: k8s.io/api/core/v1
    ProviderProperties:
        description: ProviderProperties represents the structure of properties that a provider has
        properties:
            capabilities:
                $ref: '#/definitions/Capabilities'
            extensions:
                $ref: '#/definitions/Extensions'
            package_url:
                type: string
                x-go-name: PackageURL
            package_version:
                type: string
                x-go-name: PackageVersion
            provider_description:
                items:
                    type: string
                type: array
                x-go-name: ProviderDescription
            provider_name:
                type: string
                x-go-name: ProviderName
            provider_type:
                $ref: '#/definitions/ProviderType'
            provider_url:
                type: string
                x-go-name: ProviderURL
            restrictedAccess:
                $ref: '#/definitions/RestrictedAccess'
        type: object
        x-go-package: github.com/layer5io/meshery/server/models
    ProviderType:
        description: ProviderType - for representing provider types
        type: string
        x-go-package: github.com/layer5io/meshery/server/models
    PublishState:
        description: |-
            PublishState represents the state of a Volume as it pertains to its
            use on a particular Node.
        type: string
        x-go-package: github.com/docker/docker/api/types/volume
    PublishStatus:
        description: |-
            PublishStatus represents the status of the volume as published to an
            individual node
        properties:
            NodeID:
                description: NodeID is the ID of the swarm node this Volume is published to.
                type: string
            PublishContext:
                additionalProperties:
                    type: string
                description: |-
                    PublishContext is the PublishContext returned by the CSI plugin when
                    a volume is published.
                type: object
            State:
                $ref: '#/definitions/PublishState'
        type: object
        x-go-package: github.com/docker/docker/api/types/volume
    RangeMap:
        properties:
            from:
                type: string
                x-go-name: From
            text:
                type: string
                x-go-name: Text
            to:
                type: string
                x-go-name: To
        type: object
        x-go-package: github.com/grafana-tools/sdk
    Relationship_Metadata:
        properties:
            description:
                description: Description Characterization of the meaning of the relationship and its relevance to both Meshery and entities under management.
                type: string
                x-go-name: Description
            isAnnotation:
                type: boolean
                x-go-name: IsAnnotation
            styles:
                $ref: '#/definitions/RelationshipDefinitionMetadataStyles'
        type: object
        x-go-package: github.com/meshery/schemas/models/v1alpha3/relationship
    RelationshipDefinition:
        properties:
            capabilities:
                description: Capabilities Capabilities associated with the relationship.
                items:
                    $ref: '#/definitions/Capability'
                type: array
                x-go-name: Capabilities
            evaluationQuery:
                description: 'EvaluationQuery Optional. Assigns the policy to be used for the evaluation of the relationship. Deprecation Notice: In the future, this property is either to be removed or to it is to be an array of optional policy $refs.'
                type: string
                x-go-name: EvaluationQuery
            id:
                description: Id Uniquely identifies the entity
                format: uuid
                type: string
                x-go-name: Id
            kind:
                $ref: '#/definitions/RelationshipDefinitionKind'
            metadata:
                $ref: '#/definitions/Relationship_Metadata'
            model:
                $ref: '#/definitions/ModelDefinition'
            schemaVersion:
                description: SchemaVersion Specifies the version of the schema used for the relationship definition.
                type: string
                x-go-name: SchemaVersion
            selectors:
                $ref: '#/definitions/SelectorSet'
            status:
                $ref: '#/definitions/RelationshipDefinitionStatus'
            subType:
                description: SubType Most granular unit of relationship classification. The combination of Kind, Type and SubType together uniquely identify a Relationship.
                type: string
                x-go-name: SubType
            type:
                description: Type Classification of relationships. Used to group relationships similar in nature.
                type: string
                x-go-name: RelationshipType
            version:
                description: Version Specifies the version of the relationship definition.
                type: string
                x-go-name: Version
        title: RelationshipDefinition Relationships define the nature of interaction between interconnected components in Meshery. The combination of relationship properties kind, type, and subtype characterize various genealogical relations among and between components. Relationships have selectors, selector sets, metadata, and optional parameters. Learn more at https://docs.meshery.io/concepts/logical/relationships.
        type: object
        x-go-package: github.com/meshery/schemas/models/v1alpha3/relationship
    RelationshipDefinition_Selectors_Patch:
        properties:
            mutatedRef:
                items:
                    items:
                        type: string
                    type: array
                type: array
                x-go-name: MutatedRef
            mutatorRef:
                items:
                    items:
                        type: string
                    type: array
                type: array
                x-go-name: MutatorRef
            patchStrategy:
                $ref: '#/definitions/RelationshipDefinitionSelectorsPatchStrategy'
        title: RelationshipDefinition_Selectors_Patch defines model for RelationshipDefinition.Selectors.Allow.To.Patch.
        type: object
        x-go-package: github.com/meshery/schemas/models/v1alpha3/relationship
    RelationshipDefinitionKind:
        title: RelationshipDefinitionKind Kind of the Relationship. Learn more about relationships - https://docs.meshery.io/concepts/logical/relationships.
        type: string
        x-go-package: github.com/meshery/schemas/models/v1alpha3/relationship
    RelationshipDefinitionMetadataStyles:
        properties:
            arrow-scale:
                description: ArrowScale Scaling for the arrow size.
                format: float
                type: number
                x-go-name: ArrowScale
            color:
                description: 'Color The color of the element''s label. Colours may be specified by name (e.g. red), hex (e.g. #ff0000 or #f00), RGB (e.g. rgb(255, 0, 0)), or HSL (e.g. hsl(0, 100%, 50%)).'
                type: string
                x-go-name: Color
            curve-style:
                $ref: '#/definitions/RelationshipDefinitionMetadataStylesCurveStyle'
            edge-animation:
                description: EdgeAnimation The animation to use for the edge. Can be like 'marching-ants' , 'blink' , 'moving-gradient',etc .
                type: string
                x-go-name: EdgeAnimation
            font-family:
                description: FontFamily A comma-separated list of font names to use on the label text.
                type: string
                x-go-name: FontFamily
            font-size:
                description: FontSize The size of the label text.
                type: string
                x-go-name: FontSize
            font-style:
                description: FontStyle A CSS font style to be applied to the label text.
                type: string
                x-go-name: FontStyle
            font-weight:
                description: FontWeight A CSS font weight to be applied to the label text.
                type: string
                x-go-name: FontWeight
            label:
                description: Label The text to display for an element’s label. Can give a path, e.g. data(id) will label with the elements id
                type: string
                x-go-name: Label
            line-cap:
                $ref: '#/definitions/RelationshipDefinitionMetadataStylesLineCap'
            line-color:
                description: 'LineColor The colour of the edge’s line. Colours may be specified by name (e.g. red), hex (e.g. #ff0000 or #f00), RGB (e.g. rgb(255, 0, 0)), or HSL (e.g. hsl(0, 100%, 50%)).'
                type: string
                x-go-name: LineColor
            line-opacity:
                description: LineOpacity The opacity of the edge’s line and arrow. Useful if you wish to have a separate opacity for the edge label versus the edge line. Note that the opacity value of the edge element affects the effective opacity of its line and label subcomponents.
                format: float
                type: number
                x-go-name: LineOpacity
            line-style:
                $ref: '#/definitions/RelationshipDefinitionMetadataStylesLineStyle'
            mid-target-arrow-color:
                description: 'MidTargetArrowColor The colour of the edge’s source arrow. Colours may be specified by name (e.g. red), hex (e.g. #ff0000 or #f00), RGB (e.g. rgb(255, 0, 0)), or HSL (e.g. hsl(0, 100%, 50%)).'
                type: string
                x-go-name: MidTargetArrowColor
            mid-target-arrow-fill:
                $ref: '#/definitions/RelationshipDefinitionMetadataStylesMidTargetArrowFill'
            mid-target-arrow-shape:
                $ref: '#/definitions/RelationshipDefinitionMetadataStylesMidTargetArrowShape'
            opacity:
                description: Opacity The opacity of the element, ranging from 0 to 1. Note that the opacity of a compound node parent affects the effective opacity of its children.See https://js.cytoscape.org/#style/visibility
                format: float
                type: number
                x-go-name: Opacity
            primaryColor:
                description: PrimaryColor Primary color of the component used for UI representation.
                type: string
                x-go-name: PrimaryColor
            secondaryColor:
                description: SecondaryColor Secondary color of the entity used for UI representation.
                type: string
                x-go-name: SecondaryColor
            source-label:
                description: SourceLabel The text to display for an edge’s source label. Can give a path, e.g. data(id) will label with the elements id
                type: string
                x-go-name: SourceLabel
            svgColor:
                description: SvgColor Colored SVG of the entity used for UI representation on light background.
                type: string
                x-go-name: SvgColor
            svgComplete:
                description: SvgComplete Complete SVG of the entity used for UI representation, often inclusive of background.
                type: string
                x-go-name: SvgComplete
            svgWhite:
                description: SvgWhite White SVG of the entity used for UI representation on dark background.
                type: string
                x-go-name: SvgWhite
            target-arrow-color:
                description: 'TargetArrowColor The colour of the edge’s source arrow. Colours may be specified by name (e.g. red), hex (e.g. #ff0000 or #f00), RGB (e.g. rgb(255, 0, 0)), or HSL (e.g. hsl(0, 100%, 50%)).'
                type: string
                x-go-name: TargetArrowColor
            target-arrow-fill:
                $ref: '#/definitions/RelationshipDefinitionMetadataStyles0TargetArrowFill'
            target-arrow-shape:
                $ref: '#/definitions/RelationshipDefinitionMetadataStylesTargetArrowShape'
            target-label:
                description: TargetLabel The text to display for an edge’s target label. Can give a path, e.g. data(id) will label with the elements id
                type: string
                x-go-name: TargetLabel
            text-opacity:
                description: TextOpacity The opacity of the label text, including its outline.
                format: float
                type: number
                x-go-name: TextOpacity
            text-transform:
                $ref: '#/definitions/RelationshipDefinitionMetadataStylesTextTransform'
            z-index:
                description: ZIndex An integer value that affects the relative draw order of elements. In general, an element with a higher z-index will be drawn on top of an element with a lower z-index. Note that edges are under nodes despite z-index.
                format: int64
                type: integer
                x-go-name: ZIndex
        title: RelationshipDefinitionMetadataStyles0 defines model for .
        type: object
        x-go-package: github.com/meshery/schemas/models/v1alpha3/relationship
    RelationshipDefinitionMetadataStyles0TargetArrowFill:
        type: string
        x-go-package: github.com/meshery/schemas/models/v1alpha3/relationship
    RelationshipDefinitionMetadataStylesCurveStyle:
        title: RelationshipDefinitionMetadataStylesCurveStyle The curving method used to separate two or more edges between two nodes; may be haystack (very fast, bundled straight edges for which loops and compounds are unsupported), straight (straight edges with all arrows supported), bezier (bundled curved edges), unbundled-bezier (curved edges for use with manual control points), segments (a series of straight lines), taxi (right-angled lines, hierarchically bundled). Note that haystack edges work best with ellipse, rectangle, or similar nodes. Smaller node shapes, like triangle, will not be as aesthetically pleasing. Also note that edge endpoint arrows are unsupported for haystack edges.
        type: string
        x-go-package: github.com/meshery/schemas/models/v1alpha3/relationship
    RelationshipDefinitionMetadataStylesLineCap:
        title: RelationshipDefinitionMetadataStylesLineCap The cap style of the edge’s line; may be butt (default), round, or square. The cap may or may not be visible, depending on the shape of the node and the relative size of the node and edge. Caps other than butt extend beyond the specified endpoint of the edge.
        type: string
        x-go-package: github.com/meshery/schemas/models/v1alpha3/relationship
    RelationshipDefinitionMetadataStylesLineStyle:
        type: string
        x-go-package: github.com/meshery/schemas/models/v1alpha3/relationship
    RelationshipDefinitionMetadataStylesMidTargetArrowFill:
        type: string
        x-go-package: github.com/meshery/schemas/models/v1alpha3/relationship
    RelationshipDefinitionMetadataStylesMidTargetArrowShape:
        type: string
        x-go-package: github.com/meshery/schemas/models/v1alpha3/relationship
    RelationshipDefinitionMetadataStylesTargetArrowShape:
        description: RelationshipDefinitionMetadataStylesTargetArrowShape The shape of the edge’s source arrow
        type: string
        x-go-package: github.com/meshery/schemas/models/v1alpha3/relationship
    RelationshipDefinitionMetadataStylesTextTransform:
        description: RelationshipDefinitionMetadataStylesTextTransform A transformation to apply to the label text
        type: string
        x-go-package: github.com/meshery/schemas/models/v1alpha3/relationship
    RelationshipDefinitionSelectorsPatchStrategy:
        description: |-
            add: Inserts a value into an array or adds a member to an object.
            replace: Replaces a value.
            merge: Combines the values of the target location with the values from the patch. If the target location doesn't exist, it is created.
            strategic:specific to Kubernetes and understands the structure of Kubernetes objects. It can handle complex changes like updating lists and maps, as well as preserving default values. However, it's not supported for custom resources. For custom resources, only JSON Patch and Merge Patch are typically supported.
            remove: Removes a value.
            copy: Copies a value from one location to another.
            move: Moves a value from one location to another.
            test: Tests that a value at the target location is equal to a specified value.
        title: RelationshipDefinitionSelectorsPatchStrategy patchStrategy allows you to make specific changes to a resource using a standard JSON Patch format (RFC 6902).
        type: string
        x-go-package: github.com/meshery/schemas/models/v1alpha3/relationship
    RelationshipDefinitionStatus:
        title: Status of the relationship.
        type: string
        x-go-package: github.com/meshery/schemas/models/v1alpha3/relationship
    ResolvedAlias:
        description: resolvedAlias are aware of there immediate parents and completely resolved parents also
        properties:
            alias_component_id:
                format: uuid
                type: string
                x-go-name: AliasComponentId
            immediate_parent_id:
                format: uuid
                type: string
                x-go-name: ImmediateParentId
            immediate_ref_field_path:
                items:
                    type: string
                type: array
                x-go-name: ImmediateRefFieldPath
            relationship_id:
                format: uuid
                type: string
                x-go-name: RelationshipId
            resolved_parent_id:
                format: uuid
                type: string
                x-go-name: ResolvedParentId
            resolved_ref_field_path:
                items:
                    type: string
                type: array
                x-go-name: ResolvedRefFieldPath
        title: An resolved alias is an component that acts as an ref/pointer to a field in another component,
        type: object
        x-go-package: github.com/meshery/schemas/models/v1beta1/pattern
    RestrictedAccess:
        properties:
            allowedComponents:
                $ref: '#/definitions/MesheryUICapabilities'
            isMesheryUiRestricted:
                type: boolean
                x-go-name: IsMesheryUIRestricted
        type: object
        x-go-package: github.com/layer5io/meshery/server/models
    RunnerResults:
        properties:
            ActualDuration:
                format: uint64
                type: integer
            ActualQPS:
                format: double
                type: number
                x-go-name: QPS
            DurationHistogram:
                properties:
                    Avg:
                        format: double
                        type: number
                        x-go-name: Average
                    Max:
                        format: double
                        type: number
                    Min:
                        format: double
                        type: number
                    Percentiles:
                        items:
                            properties:
                                Percentile:
                                    format: double
                                    type: number
                                Value:
                                    format: double
                                    type: number
                            type: object
                        type: array
                type: object
            RequestedDuration:
                type: string
            StartTime:
                format: date-time
                type: string
            URL:
                type: string
            load-generator:
                type: string
                x-go-name: LoadGenerator
        type: object
        x-go-package: github.com/layer5io/meshery/server/models
    Schedule:
        description: Schedule is the struct for representing schedules
        properties:
            cron_expression:
                description: CronExpression is the UNIX cron expression (quartz expression)
                type: string
                x-go-name: CronExpression
            id:
                format: uuid
                type: string
                x-go-name: ID
        type: object
        x-go-package: github.com/layer5io/meshery/server/models
    SchedulesAPIResponse:
        description: API response model for SchedulesAPI
        properties:
            page:
                format: uint64
                type: integer
                x-go-name: Page
            page_size:
                format: uint64
                type: integer
                x-go-name: PageSize
            schedules:
                items:
                    $ref: '#/definitions/Schedule'
                type: array
                x-go-name: Schedules
            total_count:
                format: uint64
                type: integer
                x-go-name: TotalCount
        type: object
        x-go-package: github.com/layer5io/meshery/server/models
    Scope:
        description: |-
            Scope defines the Scope of a Cluster Volume. This is how many nodes a
            Volume can be accessed simultaneously on.
        type: string
        x-go-package: github.com/docker/docker/api/types/volume
    Secret:
        description: |-
            Secret represents a Swarm Secret value that must be passed to the CSI
            storage plugin when operating on this Volume. It represents one key-value
            pair of possibly many.
        properties:
            Key:
                description: Key is the name of the key of the key-value pair passed to the plugin.
                type: string
            Secret:
                description: |-
                    Secret is the swarm Secret object from which to read data. This can be a
                    Secret name or ID. The Secret data is retrieved by Swarm and used as the
                    value of the key-value pair passed to the plugin.
                type: string
        type: object
        x-go-package: github.com/docker/docker/api/types/volume
    SelectedGrafanaConfig:
        description: SelectedGrafanaConfig represents the selected boards, panels, and template variables
        properties:
            board:
                $ref: '#/definitions/GrafanaBoard'
            panels:
                items:
                    $ref: '#/definitions/Panel'
                type: array
                x-go-name: GrafanaPanels
            templateVars:
                items:
                    type: string
                type: array
                x-go-name: SelectedTemplateVars
        type: object
        x-go-package: github.com/layer5io/meshery/server/models
    Selector:
        properties:
            from:
                description: From Describes the component(s) which are involved in the relationship along with a set of actions to perform upon selection match.
                items:
                    $ref: '#/definitions/SelectorItem'
                type: array
                x-go-name: From
            to:
                description: To Describes the component(s) which are involved in the relationship along with a set of actions to perform upon selection match.
                items:
                    $ref: '#/definitions/SelectorItem'
                type: array
                x-go-name: To
        type: object
        x-go-package: github.com/meshery/schemas/models/v1alpha3/relationship
    SelectorItem:
        properties:
            id:
                description: Id A Universally Unique Identifier used to uniquely identify entites in Meshery. The UUID core defintion is used across different schemas.
                format: uuid
                type: string
                x-go-name: Id
            kind:
                type: string
                x-go-name: Kind
            match:
                $ref: '#/definitions/MatchSelector'
            model:
                $ref: '#/definitions/ModelDefinition'
            patch:
                $ref: '#/definitions/RelationshipDefinition_Selectors_Patch'
        type: object
        x-go-package: github.com/meshery/schemas/models/v1alpha3/relationship
    SelectorSet:
        items:
            properties:
                allow:
                    $ref: '#/definitions/Selector'
                deny:
                    $ref: '#/definitions/Selector'
            type: object
        type: array
        x-go-package: github.com/meshery/schemas/models/v1alpha3/relationship
    SeriesOverride:
        description: for a graph panel
        properties:
            alias:
                type: string
                x-go-name: Alias
            bars:
                type: boolean
                x-go-name: Bars
            color:
                type: string
                x-go-name: Color
            dashes:
                type: boolean
                x-go-name: Dashes
            fill:
                format: int64
                type: integer
                x-go-name: Fill
            fillBelowTo:
                type: string
                x-go-name: FillBelowTo
            legend:
                type: boolean
                x-go-name: Legend
            lines:
                type: boolean
                x-go-name: Lines
            linewidth:
                format: int64
                type: integer
                x-go-name: LineWidth
            nullPointMode:
                type: string
                x-go-name: NullPointMode
            stack:
                $ref: '#/definitions/BoolString'
            transform:
                type: string
                x-go-name: Transform
            yaxis:
                format: int64
                type: integer
                x-go-name: YAxis
            zindex:
                format: int64
                type: integer
                x-go-name: ZIndex
        type: object
        x-go-package: github.com/grafana-tools/sdk
    Service:
        description: |-
            Service is a named abstraction of software service (for example, mysql) consisting of local port
            (for example 3306) that the proxy listens on, and the selector that determines which pods
            will answer requests sent through the proxy.
        properties:
            annotations:
                additionalProperties:
                    type: string
                description: |-
                    Annotations is an unstructured key value map stored with a resource that may be
                    set by external tools to store and retrieve arbitrary metadata. They are not
                    queryable and should be preserved when modifying objects.
                    More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations
                    +optional
                type: object
                x-go-name: Annotations
            apiVersion:
                description: |-
                    APIVersion defines the versioned schema of this representation of an object.
                    Servers should convert recognized schemas to the latest internal value, and
                    may reject unrecognized values.
                    More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
                    +optional
                type: string
                x-go-name: APIVersion
            creationTimestamp:
                description: |-
                    CreationTimestamp is a timestamp representing the server time when this object was
                    created. It is not guaranteed to be set in happens-before order across separate operations.
                    Clients may not set this value. It is represented in RFC3339 form and is in UTC.

                    Populated by the system.
                    Read-only.
                    Null for lists.
                    More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
                    +optional
                type: string
                x-go-name: CreationTimestamp
            deletionGracePeriodSeconds:
                description: |-
                    Number of seconds allowed for this object to gracefully terminate before
                    it will be removed from the system. Only set when deletionTimestamp is also set.
                    May only be shortened.
                    Read-only.
                    +optional
                format: int64
                type: integer
                x-go-name: DeletionGracePeriodSeconds
            deletionTimestamp:
                description: |-
                    DeletionTimestamp is RFC 3339 date and time at which this resource will be deleted. This
                    field is set by the server when a graceful deletion is requested by the user, and is not
                    directly settable by a client. The resource is expected to be deleted (no longer visible
                    from resource lists, and not reachable by name) after the time in this field, once the
                    finalizers list is empty. As long as the finalizers list contains items, deletion is blocked.
                    Once the deletionTimestamp is set, this value may not be unset or be set further into the
                    future, although it may be shortened or the resource may be deleted prior to this time.
                    For example, a user may request that a pod is deleted in 30 seconds. The Kubelet will react
                    by sending a graceful termination signal to the containers in the pod. After that 30 seconds,
                    the Kubelet will send a hard termination signal (SIGKILL) to the container and after cleanup,
                    remove the pod from the API. In the presence of network partitions, this object may still
                    exist after this timestamp, until an administrator or automated process can determine the
                    resource is fully terminated.
                    If not set, graceful deletion of the object has not been requested.

                    Populated by the system when a graceful deletion is requested.
                    Read-only.
                    More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
                    +optional
                type: string
                x-go-name: DeletionTimestamp
            finalizers:
                description: |-
                    Must be empty before the object is deleted from the registry. Each entry
                    is an identifier for the responsible component that will remove the entry
                    from the list. If the deletionTimestamp of the object is non-nil, entries
                    in this list can only be removed.
                    Finalizers may be processed and removed in any order.  Order is NOT enforced
                    because it introduces significant risk of stuck finalizers.
                    finalizers is a shared field, any actor with permission can reorder it.
                    If the finalizer list is processed in order, then this can lead to a situation
                    in which the component responsible for the first finalizer in the list is
                    waiting for a signal (field value, external system, or other) produced by a
                    component responsible for a finalizer later in the list, resulting in a deadlock.
                    Without enforced ordering finalizers are free to order amongst themselves and
                    are not vulnerable to ordering changes in the list.
                    +optional
                    +patchStrategy=merge
                    +listType=set
                items:
                    type: string
                type: array
                x-go-name: Finalizers
            generateName:
                description: |-
                    GenerateName is an optional prefix, used by the server, to generate a unique
                    name ONLY IF the Name field has not been provided.
                    If this field is used, the name returned to the client will be different
                    than the name passed. This value will also be combined with a unique suffix.
                    The provided value has the same validation rules as the Name field,
                    and may be truncated by the length of the suffix required to make the value
                    unique on the server.

                    If this field is specified and the generated name exists, the server will return a 409.

                    Applied only if Name is not specified.
                    More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency
                    +optional
                type: string
                x-go-name: GenerateName
            generation:
                description: |-
                    A sequence number representing a specific generation of the desired state.
                    Populated by the system. Read-only.
                    +optional
                format: int64
                type: integer
                x-go-name: Generation
            kind:
                description: |-
                    Kind is a string value representing the REST resource this object represents.
                    Servers may infer this from the endpoint the client submits requests to.
                    Cannot be updated.
                    In CamelCase.
                    More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                    +optional
                type: string
                x-go-name: Kind
            labels:
                additionalProperties:
                    type: string
                description: |-
                    Map of string keys and values that can be used to organize and categorize
                    (scope and select) objects. May match selectors of replication controllers
                    and services.
                    More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels
                    +optional
                type: object
                x-go-name: Labels
            managedFields:
                description: |-
                    ManagedFields maps workflow-id and version to the set of fields
                    that are managed by that workflow. This is mostly for internal
                    housekeeping, and users typically shouldn't need to set or
                    understand this field. A workflow can be the user's name, a
                    controller's name, or the name of a specific apply path like
                    "ci-cd". The set of fields is always in the version that the
                    workflow used when modifying the object.

                    +optional
                    +listType=atomic
                items:
                    $ref: '#/definitions/ManagedFieldsEntry'
                type: array
                x-go-name: ManagedFields
            name:
                description: |-
                    Name must be unique within a namespace. Is required when creating resources, although
                    some resources may allow a client to request the generation of an appropriate name
                    automatically. Name is primarily intended for creation idempotence and configuration
                    definition.
                    Cannot be updated.
                    More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names
                    +optional
                type: string
                x-go-name: Name
            namespace:
                description: |-
                    Namespace defines the space within which each name must be unique. An empty namespace is
                    equivalent to the "default" namespace, but "default" is the canonical representation.
                    Not all objects are required to be scoped to a namespace - the value of this field for
                    those objects will be empty.

                    Must be a DNS_LABEL.
                    Cannot be updated.
                    More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces
                    +optional
                type: string
                x-go-name: Namespace
            ownerReferences:
                description: |-
                    List of objects depended by this object. If ALL objects in the list have
                    been deleted, this object will be garbage collected. If this object is managed by a controller,
                    then an entry in this list will point to this controller, with the controller field set to true.
                    There cannot be more than one managing controller.
                    +optional
                    +patchMergeKey=uid
                    +patchStrategy=merge
                    +listType=map
                    +listMapKey=uid
                items:
                    $ref: '#/definitions/OwnerReference'
                type: array
                x-go-name: OwnerReferences
            resourceVersion:
                description: |-
                    An opaque value that represents the internal version of this object that can
                    be used by clients to determine when objects have changed. May be used for optimistic
                    concurrency, change detection, and the watch operation on a resource or set of resources.
                    Clients must treat these values as opaque and passed unmodified back to the server.
                    They may only be valid for a particular resource or set of resources.

                    Populated by the system.
                    Read-only.
                    Value must be treated as opaque by clients and .
                    More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
                    +optional
                type: string
                x-go-name: ResourceVersion
            selfLink:
                description: |-
                    Deprecated: selfLink is a legacy read-only field that is no longer populated by the system.
                    +optional
                type: string
                x-go-name: SelfLink
            spec:
                $ref: '#/definitions/ServiceSpec'
            status:
                $ref: '#/definitions/ServiceStatus'
            uid:
                $ref: '#/definitions/UID'
        type: object
        x-go-package: k8s.io/api/core/v1
    ServiceAffinity:
        description: |-
            Session Affinity Type string
            +enum
        type: string
        x-go-package: k8s.io/api/core/v1
    ServiceCreateResponse:
        description: |-
            ServiceCreateResponse contains the information returned to a client on the
            creation of a new service.
        properties:
            ID:
                description: The ID of the created service.
                type: string
            Warnings:
                description: |-
                    Optional warning message.

                    FIXME(thaJeztah): this should have "omitempty" in the generated type.
                items:
                    type: string
                type: array
        type: object
        x-go-package: github.com/docker/docker/api/types/swarm
    ServiceExternalTrafficPolicy:
        description: |-
            ServiceExternalTrafficPolicy describes how nodes distribute service traffic they
            receive on one of the Service's "externally-facing" addresses (NodePorts, ExternalIPs,
            and LoadBalancer IPs.
            +enum
        type: string
        x-go-package: k8s.io/api/core/v1
    ServiceInternalTrafficPolicy:
        description: |-
            ServiceInternalTrafficPolicy describes how nodes distribute service traffic they
            receive on the ClusterIP.
            +enum
        type: string
        x-go-package: k8s.io/api/core/v1
    ServicePort:
        properties:
            appProtocol:
                description: |-
                    The application protocol for this port.
                    This is used as a hint for implementations to offer richer behavior for protocols that they understand.
                    This field follows standard Kubernetes label syntax.
                    Valid values are either:

                    Un-prefixed protocol names - reserved for IANA standard service names (as per
                    RFC-6335 and https://www.iana.org/assignments/service-names).

                    Kubernetes-defined prefixed names:
                    'kubernetes.io/h2c' - HTTP/2 prior knowledge over cleartext as described in https://www.rfc-editor.org/rfc/rfc9113.html#name-starting-http-2-with-prior-
                    'kubernetes.io/ws'  - WebSocket over cleartext as described in https://www.rfc-editor.org/rfc/rfc6455
                    'kubernetes.io/wss' - WebSocket over TLS as described in https://www.rfc-editor.org/rfc/rfc6455

                    Other protocols should use implementation-defined prefixed names such as
                    mycompany.com/my-custom-protocol.
                    +optional
                type: string
                x-go-name: AppProtocol
            name:
                description: |-
                    The name of this port within the service. This must be a DNS_LABEL.
                    All ports within a ServiceSpec must have unique names. When considering
                    the endpoints for a Service, this must match the 'name' field in the
                    EndpointPort.
                    Optional if only one ServicePort is defined on this service.
                    +optional
                type: string
                x-go-name: Name
            nodePort:
                description: |-
                    The port on each node on which this service is exposed when type is
                    NodePort or LoadBalancer.  Usually assigned by the system. If a value is
                    specified, in-range, and not in use it will be used, otherwise the
                    operation will fail.  If not specified, a port will be allocated if this
                    Service requires one.  If this field is specified when creating a
                    Service which does not need it, creation will fail. This field will be
                    wiped when updating a Service to no longer need it (e.g. changing type
                    from NodePort to ClusterIP).
                    More info: https://kubernetes.io/docs/concepts/services-networking/service/#type-nodeport
                    +optional
                format: int32
                type: integer
                x-go-name: NodePort
            port:
                description: The port that will be exposed by this service.
                format: int32
                type: integer
                x-go-name: Port
            protocol:
                $ref: '#/definitions/Protocol'
            targetPort:
                $ref: '#/definitions/IntOrString'
        title: ServicePort contains information on service's port.
        type: object
        x-go-package: k8s.io/api/core/v1
    ServiceSpec:
        properties:
            allocateLoadBalancerNodePorts:
                description: |-
                    allocateLoadBalancerNodePorts defines if NodePorts will be automatically
                    allocated for services with type LoadBalancer.  Default is "true". It
                    may be set to "false" if the cluster load-balancer does not rely on
                    NodePorts.  If the caller requests specific NodePorts (by specifying a
                    value), those requests will be respected, regardless of this field.
                    This field may only be set for services with type LoadBalancer and will
                    be cleared if the type is changed to any other type.
                    +optional
                type: boolean
                x-go-name: AllocateLoadBalancerNodePorts
            clusterIP:
                description: |-
                    clusterIP is the IP address of the service and is usually assigned
                    randomly. If an address is specified manually, is in-range (as per
                    system configuration), and is not in use, it will be allocated to the
                    service; otherwise creation of the service will fail. This field may not
                    be changed through updates unless the type field is also being changed
                    to ExternalName (which requires this field to be blank) or the type
                    field is being changed from ExternalName (in which case this field may
                    optionally be specified, as describe above).  Valid values are "None",
                    empty string (""), or a valid IP address. Setting this to "None" makes a
                    "headless service" (no virtual IP), which is useful when direct endpoint
                    connections are preferred and proxying is not required.  Only applies to
                    types ClusterIP, NodePort, and LoadBalancer. If this field is specified
                    when creating a Service of type ExternalName, creation will fail. This
                    field will be wiped when updating a Service to type ExternalName.
                    More info: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies
                    +optional
                type: string
                x-go-name: ClusterIP
            clusterIPs:
                description: |-
                    ClusterIPs is a list of IP addresses assigned to this service, and are
                    usually assigned randomly.  If an address is specified manually, is
                    in-range (as per system configuration), and is not in use, it will be
                    allocated to the service; otherwise creation of the service will fail.
                    This field may not be changed through updates unless the type field is
                    also being changed to ExternalName (which requires this field to be
                    empty) or the type field is being changed from ExternalName (in which
                    case this field may optionally be specified, as describe above).  Valid
                    values are "None", empty string (""), or a valid IP address.  Setting
                    this to "None" makes a "headless service" (no virtual IP), which is
                    useful when direct endpoint connections are preferred and proxying is
                    not required.  Only applies to types ClusterIP, NodePort, and
                    LoadBalancer. If this field is specified when creating a Service of type
                    ExternalName, creation will fail. This field will be wiped when updating
                    a Service to type ExternalName.  If this field is not specified, it will
                    be initialized from the clusterIP field.  If this field is specified,
                    clients must ensure that clusterIPs[0] and clusterIP have the same
                    value.

                    This field may hold a maximum of two entries (dual-stack IPs, in either order).
                    These IPs must correspond to the values of the ipFamilies field. Both
                    clusterIPs and ipFamilies are governed by the ipFamilyPolicy field.
                    More info: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies
                    +listType=atomic
                    +optional
                items:
                    type: string
                type: array
                x-go-name: ClusterIPs
            externalIPs:
                description: |-
                    externalIPs is a list of IP addresses for which nodes in the cluster
                    will also accept traffic for this service.  These IPs are not managed by
                    Kubernetes.  The user is responsible for ensuring that traffic arrives
                    at a node with this IP.  A common example is external load-balancers
                    that are not part of the Kubernetes system.
                    +optional
                    +listType=atomic
                items:
                    type: string
                type: array
                x-go-name: ExternalIPs
            externalName:
                description: |-
                    externalName is the external reference that discovery mechanisms will
                    return as an alias for this service (e.g. a DNS CNAME record). No
                    proxying will be involved.  Must be a lowercase RFC-1123 hostname
                    (https://tools.ietf.org/html/rfc1123) and requires `type` to be "ExternalName".
                    +optional
                type: string
                x-go-name: ExternalName
            externalTrafficPolicy:
                $ref: '#/definitions/ServiceExternalTrafficPolicy'
            healthCheckNodePort:
                description: |-
                    healthCheckNodePort specifies the healthcheck nodePort for the service.
                    This only applies when type is set to LoadBalancer and
                    externalTrafficPolicy is set to Local. If a value is specified, is
                    in-range, and is not in use, it will be used.  If not specified, a value
                    will be automatically allocated.  External systems (e.g. load-balancers)
                    can use this port to determine if a given node holds endpoints for this
                    service or not.  If this field is specified when creating a Service
                    which does not need it, creation will fail. This field will be wiped
                    when updating a Service to no longer need it (e.g. changing type).
                    This field cannot be updated once set.
                    +optional
                format: int32
                type: integer
                x-go-name: HealthCheckNodePort
            internalTrafficPolicy:
                $ref: '#/definitions/ServiceInternalTrafficPolicy'
            ipFamilies:
                description: |-
                    IPFamilies is a list of IP families (e.g. IPv4, IPv6) assigned to this
                    service. This field is usually assigned automatically based on cluster
                    configuration and the ipFamilyPolicy field. If this field is specified
                    manually, the requested family is available in the cluster,
                    and ipFamilyPolicy allows it, it will be used; otherwise creation of
                    the service will fail. This field is conditionally mutable: it allows
                    for adding or removing a secondary IP family, but it does not allow
                    changing the primary IP family of the Service. Valid values are "IPv4"
                    and "IPv6".  This field only applies to Services of types ClusterIP,
                    NodePort, and LoadBalancer, and does apply to "headless" services.
                    This field will be wiped when updating a Service to type ExternalName.

                    This field may hold a maximum of two entries (dual-stack families, in
                    either order).  These families must correspond to the values of the
                    clusterIPs field, if specified. Both clusterIPs and ipFamilies are
                    governed by the ipFamilyPolicy field.
                    +listType=atomic
                    +optional
                items:
                    $ref: '#/definitions/IPFamily'
                type: array
                x-go-name: IPFamilies
            ipFamilyPolicy:
                $ref: '#/definitions/IPFamilyPolicy'
            loadBalancerClass:
                description: |-
                    loadBalancerClass is the class of the load balancer implementation this Service belongs to.
                    If specified, the value of this field must be a label-style identifier, with an optional prefix,
                    e.g. "internal-vip" or "example.com/internal-vip". Unprefixed names are reserved for end-users.
                    This field can only be set when the Service type is 'LoadBalancer'. If not set, the default load
                    balancer implementation is used, today this is typically done through the cloud provider integration,
                    but should apply for any default implementation. If set, it is assumed that a load balancer
                    implementation is watching for Services with a matching class. Any default load balancer
                    implementation (e.g. cloud providers) should ignore Services that set this field.
                    This field can only be set when creating or updating a Service to type 'LoadBalancer'.
                    Once set, it can not be changed. This field will be wiped when a service is updated to a non 'LoadBalancer' type.
                    +optional
                type: string
                x-go-name: LoadBalancerClass
            loadBalancerIP:
                description: |-
                    Only applies to Service Type: LoadBalancer.
                    This feature depends on whether the underlying cloud-provider supports specifying
                    the loadBalancerIP when a load balancer is created.
                    This field will be ignored if the cloud-provider does not support the feature.
                    Deprecated: This field was under-specified and its meaning varies across implementations.
                    Using it is non-portable and it may not support dual-stack.
                    Users are encouraged to use implementation-specific annotations when available.
                    +optional
                type: string
                x-go-name: LoadBalancerIP
            loadBalancerSourceRanges:
                description: |-
                    If specified and supported by the platform, this will restrict traffic through the cloud-provider
                    load-balancer will be restricted to the specified client IPs. This field will be ignored if the
                    cloud-provider does not support the feature."
                    More info: https://kubernetes.io/docs/tasks/access-application-cluster/create-external-load-balancer/
                    +optional
                    +listType=atomic
                items:
                    type: string
                type: array
                x-go-name: LoadBalancerSourceRanges
            ports:
                description: |-
                    The list of ports that are exposed by this service.
                    More info: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies
                    +patchMergeKey=port
                    +patchStrategy=merge
                    +listType=map
                    +listMapKey=port
                    +listMapKey=protocol
                items:
                    $ref: '#/definitions/ServicePort'
                type: array
                x-go-name: Ports
            publishNotReadyAddresses:
                description: |-
                    publishNotReadyAddresses indicates that any agent which deals with endpoints for this
                    Service should disregard any indications of ready/not-ready.
                    The primary use case for setting this field is for a StatefulSet's Headless Service to
                    propagate SRV DNS records for its Pods for the purpose of peer discovery.
                    The Kubernetes controllers that generate Endpoints and EndpointSlice resources for
                    Services interpret this to mean that all endpoints are considered "ready" even if the
                    Pods themselves are not. Agents which consume only Kubernetes generated endpoints
                    through the Endpoints or EndpointSlice resources can safely assume this behavior.
                    +optional
                type: boolean
                x-go-name: PublishNotReadyAddresses
            selector:
                additionalProperties:
                    type: string
                description: |-
                    Route service traffic to pods with label keys and values matching this
                    selector. If empty or not present, the service is assumed to have an
                    external process managing its endpoints, which Kubernetes will not
                    modify. Only applies to types ClusterIP, NodePort, and LoadBalancer.
                    Ignored if type is ExternalName.
                    More info: https://kubernetes.io/docs/concepts/services-networking/service/
                    +optional
                    +mapType=atomic
                type: object
                x-go-name: Selector
            sessionAffinity:
                $ref: '#/definitions/ServiceAffinity'
            sessionAffinityConfig:
                $ref: '#/definitions/SessionAffinityConfig'
            trafficDistribution:
                description: |-
                    TrafficDistribution offers a way to express preferences for how traffic is
                    distributed to Service endpoints. Implementations can use this field as a
                    hint, but are not required to guarantee strict adherence. If the field is
                    not set, the implementation will apply its default routing strategy. If set
                    to "PreferClose", implementations should prioritize endpoints that are
                    topologically close (e.g., same zone).
                    This is a beta field and requires enabling ServiceTrafficDistribution feature.
                    +featureGate=ServiceTrafficDistribution
                    +optional
                type: string
                x-go-name: TrafficDistribution
            type:
                $ref: '#/definitions/ServiceType'
        title: ServiceSpec describes the attributes that a user creates on a service.
        type: object
        x-go-package: k8s.io/api/core/v1
    ServiceStatus:
        properties:
            conditions:
                description: |-
                    Current service state
                    +optional
                    +patchMergeKey=type
                    +patchStrategy=merge
                    +listType=map
                    +listMapKey=type
                items:
                    $ref: '#/definitions/Condition'
                type: array
                x-go-name: Conditions
            loadBalancer:
                $ref: '#/definitions/LoadBalancerStatus'
        title: ServiceStatus represents the current status of a service.
        type: object
        x-go-package: k8s.io/api/core/v1
    ServiceType:
        description: |-
            Service Type string describes ingress methods for a service
            +enum
        type: string
        x-go-package: k8s.io/api/core/v1
    ServiceUpdateResponse:
        description: ServiceUpdateResponse service update response
        properties:
            Warnings:
                description: Optional warning messages
                items:
                    type: string
                type: array
        type: object
        x-go-package: github.com/docker/docker/api/types/swarm
    SessionAffinityConfig:
        properties:
            clientIP:
                $ref: '#/definitions/ClientIPConfig'
        title: SessionAffinityConfig represents the configurations of session affinity.
        type: object
        x-go-package: k8s.io/api/core/v1
    SharingMode:
        description: |-
            SharingMode defines the Sharing of a Cluster Volume. This is how Tasks using a
            Volume at the same time can use it.
        type: string
        x-go-package: github.com/docker/docker/api/types/volume
    SmiResultPage:
        description: SmiResultPage - represents a page of meshery results
        properties:
            page:
                format: uint64
                type: integer
                x-go-name: Page
            page_size:
                format: uint64
                type: integer
                x-go-name: PageSize
            results:
                items:
                    $ref: '#/definitions/SmiResultWithID'
                type: array
                x-go-name: Results
            total_count:
                format: int64
                type: integer
                x-go-name: TotalCount
        type: object
        x-go-package: github.com/layer5io/meshery/server/models
    SmiResultWithID:
        properties:
            ID:
                format: uuid
                type: string
            cases_passed:
                type: string
                x-go-name: CasesPassed
            date:
                type: string
                x-go-name: Date
            id:
                format: uuid
                type: string
                x-go-name: ID
            mesh_name:
                type: string
                x-go-name: MeshName
            mesh_version:
                type: string
                x-go-name: MeshVersion
            more_details:
                items:
                    $ref: '#/definitions/Detail'
                type: array
                x-go-name: MoreDetails
            passing_percentage:
                type: string
                x-go-name: PassingPercentage
            status:
                type: string
                x-go-name: Status
        type: object
        x-go-package: github.com/layer5io/meshery/server/models
    Sort:
        description: for a graph panel
        properties:
            col:
                format: int64
                type: integer
                x-go-name: Col
            desc:
                type: boolean
                x-go-name: Desc
        type: object
        x-go-package: github.com/grafana-tools/sdk
    SparkLine:
        description: for a stat
        properties:
            fillColor:
                type: string
                x-go-name: FillColor
            full:
                type: boolean
                x-go-name: Full
            lineColor:
                type: string
                x-go-name: LineColor
            show:
                type: boolean
                x-go-name: Show
            ymax:
                format: double
                type: number
                x-go-name: YMax
            ymin:
                format: double
                type: number
                x-go-name: YMin
        type: object
        x-go-package: github.com/grafana-tools/sdk
    SqliteSchema:
        properties:
            count:
                format: int64
                type: integer
                x-go-name: Count
            name:
                type: string
                x-go-name: Name
            type:
                type: string
                x-go-name: Type
        type: object
        x-go-package: github.com/layer5io/meshery/server/models
    StackdriverAlignOption:
        description: |-
            StackdriverAlignOption defines a single alignment option shown in Grafana
            during query configuration.
        properties:
            label:
                type: string
                x-go-name: Label
            metricKinds:
                items:
                    type: string
                type: array
                x-go-name: MetricKinds
            text:
                type: string
                x-go-name: Text
            value:
                type: string
                x-go-name: Value
            valueTypes:
                items:
                    type: string
                type: array
                x-go-name: ValueTypes
        type: object
        x-go-package: github.com/grafana-tools/sdk
    StackdriverAlignOptions:
        description: |-
            StackdriverAlignOptions defines the list of alignment options shown in
            Grafana during query configuration.
        properties:
            expanded:
                type: boolean
                x-go-name: Expanded
            label:
                type: string
                x-go-name: Label
            options:
                items:
                    $ref: '#/definitions/StackdriverAlignOption'
                type: array
                x-go-name: Options
        type: object
        x-go-package: github.com/grafana-tools/sdk
    StringArray:
        items:
            type: string
        title: StringArray represents a one-dimensional array of the PostgreSQL character types.
        type: array
        x-go-package: github.com/lib/pq
    Styles:
        properties:
            active-bg-color:
                description: 'ActiveBgColor The colour of the indicator shown when the background is grabbed by the user. Selector needs to be *core*. Colours may be specified by name (e.g. red), hex (e.g. #ff0000 or #f00), RGB (e.g. rgb(255, 0, 0)), or HSL (e.g. hsl(0, 100%, 50%)).'
                type: string
                x-go-name: ActiveBgColor
            active-bg-opacity:
                description: ActiveBgOpacity  The opacity of the active background indicator. Selector needs to be *core*.
                type: string
                x-go-name: ActiveBgOpacity
            active-bg-size:
                description: ActiveBgSize  The opacity of the active background indicator. Selector needs to be *core*.
                type: string
                x-go-name: ActiveBgSize
            animation:
                additionalProperties: {}
                description: Animation The animation to apply to the element. example ripple,bounce,etc
                type: object
                x-go-name: Animation
            background-blacken:
                description: BackgroundBlacken Blackens the node’s body for values from 0 to 1; whitens the node’s body for values from 0 to -1.
                format: float
                type: number
                x-go-name: BackgroundBlacken
            background-clip:
                description: BackgroundClip How the background image is clipped to the node. Can be 'none', 'node', or 'node-border'.
                type: string
                x-go-name: BackgroundClip
            background-color:
                description: 'BackgroundColor The colour of the node’s body. Colours may be specified by name (e.g. red), hex (e.g. #ff0000 or #f00), RGB (e.g. rgb(255, 0, 0)), or HSL (e.g. hsl(0, 100%, 50%)).'
                type: string
                x-go-name: BackgroundColor
            background-fit:
                description: BackgroundFit How the background image is fit to the node. Can be 'none', 'contain', or 'cover'.
                type: string
                x-go-name: BackgroundFit
            background-height-relative-to:
                description: BackgroundHeightRelativeTo How the background image’s height is determined. Can be 'none', 'inner', or 'outer'.
                type: string
                x-go-name: BackgroundHeightRelativeTo
            background-image:
                description: BackgroundImage The URL that points to the image to show in the node.
                type: string
                x-go-name: BackgroundImage
            background-offset-x:
                description: BackgroundOffsetX The x offset of the background image, measured in percent (e.g. 50%) or pixels (e.g. 10px)
                type: string
                x-go-name: BackgroundOffsetX
            background-offset-y:
                description: BackgroundOffsetY The y offset of the background image, measured in percent (e.g. 50%) or pixels (e.g. 10px)
                type: string
                x-go-name: BackgroundOffsetY
            background-opacity:
                description: BackgroundOpacity The opacity level of the node’s background colour
                format: float
                type: number
                x-go-name: BackgroundOpacity
            background-position-x:
                description: BackgroundPositionX The x position of the background image, measured in percent (e.g. 50%) or pixels (e.g. 10px)
                type: string
                x-go-name: BackgroundPositionX
            background-position-y:
                description: BackgroundPositionY The y position of the background image, measured in percent (e.g. 50%) or pixels (e.g. 10px)
                type: string
                x-go-name: BackgroundPositionY
            background-width-relative-to:
                description: BackgroundWidthRelativeTo How the background image’s width is determined. Can be 'none', 'inner', or 'outer'.
                type: string
                x-go-name: BackgroundWidthRelativeTo
            body-text:
                description: BodyText The text to display for an element’s body. Can give a path, e.g. data(id) will label with the elements id
                type: string
                x-go-name: BodyText
            body-text-background-color:
                description: 'BodyTextBackgroundColor The colour of the node’s body text background. Colours may be specified by name (e.g. red), hex (e.g. #ff0000 or #f00), RGB (e.g. rgb(255, 0, 0)), or HSL (e.g. hsl(0, 100%, 50%)).'
                type: string
                x-go-name: BodyTextBackgroundColor
            body-text-color:
                description: 'BodyTextColor The colour of the node’s body text. Colours may be specified by name (e.g. red), hex (e.g. #ff0000 or #f00), RGB (e.g. rgb(255, 0, 0)), or HSL (e.g. hsl(0, 100%, 50%)).'
                type: string
                x-go-name: BodyTextColor
            body-text-decoration:
                description: BodyTextDecoration A CSS text decoration to be applied to the node’s body text.
                type: string
                x-go-name: BodyTextDecoration
            body-text-font-size:
                description: BodyTextFontSize The size of the node’s body text.
                format: float
                type: number
                x-go-name: BodyTextFontSize
            body-text-font-weight:
                description: BodyTextFontWeight A CSS font weight to be applied to the node’s body text.
                type: string
                x-go-name: BodyTextFontWeight
            body-text-horizontal-align:
                description: BodyTextHorizontalAlign A CSS horizontal alignment to be applied to the node’s body text.
                type: string
                x-go-name: BodyTextHorizontalAlign
            body-text-max-width:
                description: BodyTextMaxWidth The maximum width for wrapping text in the node.
                type: string
                x-go-name: BodyTextMaxWidth
            body-text-opacity:
                description: BodyTextOpacity The opacity of the node’s body text, including its outline.
                format: float
                type: number
                x-go-name: BodyTextOpacity
            body-text-vertical-align:
                description: BodyTextVerticalAlign A CSS vertical alignment to be applied to the node’s body text.
                type: string
                x-go-name: BodyTextVerticalAlign
            body-text-wrap:
                description: BodyTextWrap How to wrap the text in the node. Can be 'none', 'wrap', or 'ellipsis'.
                type: string
                x-go-name: BodyTextWrap
            border-color:
                description: 'BorderColor The colour of the node’s border. Colours may be specified by name (e.g. red), hex (e.g. #ff0000 or #f00), RGB (e.g. rgb(255, 0, 0)), or HSL (e.g. hsl(0, 100%, 50%)).'
                type: string
                x-go-name: BorderColor
            border-opacity:
                description: BorderOpacity The opacity of the node’s border
                format: float
                type: number
                x-go-name: BorderOpacity
            border-style:
                $ref: '#/definitions/ComponentDefinitionStylesBorderStyle'
            border-width:
                description: BorderWidth The size of the node’s border.
                format: float
                type: number
                x-go-name: BorderWidth
            color:
                description: 'Color The color of the element''s label. Colours may be specified by name (e.g. red), hex (e.g. #ff0000 or #f00), RGB (e.g. rgb(255, 0, 0)), or HSL (e.g. hsl(0, 100%, 50%)).'
                type: string
                x-go-name: Color
            font-family:
                description: FontFamily A comma-separated list of font names to use on the label text.
                type: string
                x-go-name: FontFamily
            font-size:
                description: FontSize The size of the label text.
                type: string
                x-go-name: FontSize
            font-style:
                description: FontStyle A CSS font style to be applied to the label text.
                type: string
                x-go-name: FontStyle
            font-weight:
                description: FontWeight A CSS font weight to be applied to the label text.
                type: string
                x-go-name: FontWeight
            ghost:
                $ref: '#/definitions/ComponentDefinitionStylesGhost'
            height:
                description: Height The height of the node’s body
                format: float
                type: number
                x-go-name: Height
            label:
                description: Label The text to display for an element’s label. Can give a path, e.g. data(id) will label with the elements id
                type: string
                x-go-name: Label
            menu-background-color:
                description: 'MenuBackgroundColor The colour of the background of the component menu. Colours may be specified by name (e.g. red), hex (e.g. #ff0000 or #f00), RGB (e.g. rgb(255, 0, 0)), or HSL (e.g. hsl(0, 100%, 50%)).'
                type: string
                x-go-name: MenuBackgroundColor
            menu-background-opacity:
                description: MenuBackgroundOpacity The opacity of the background of the component menu.
                format: float
                type: number
                x-go-name: MenuBackgroundOpacity
            menu-forground-color:
                description: 'MenuForgroundColor The colour of the text or icons in the component menu. Colours may be specified by name (e.g. red), hex (e.g. #ff0000 or #f00), RGB (e.g. rgb(255, 0, 0)), or HSL (e.g. hsl(0, 100%, 50%)).'
                type: string
                x-go-name: MenuForgroundColor
            opacity:
                description: Opacity The opacity of the element, ranging from 0 to 1. Note that the opacity of a compound node parent affects the effective opacity of its children.See https://js.cytoscape.org/#style/visibility
                format: float
                type: number
                x-go-name: Opacity
            outside-texture-bg-color:
                description: 'OutsideTextureBgColor The colour of the area outside the viewport texture when initOptions.textureOnViewport === true.  Selector needs to be *core*. Colours may be specified by name (e.g. red), hex (e.g. #ff0000 or #f00), RGB (e.g. rgb(255, 0, 0)), or HSL (e.g. hsl(0, 100%, 50%)).'
                type: string
                x-go-name: OutsideTextureBgColor
            outside-texture-bg-opacity:
                description: OutsideTextureBgOpacity The opacity of the area outside the viewport texture. Selector needs to be *core*
                format: float
                type: number
                x-go-name: OutsideTextureBgOpacity
            padding:
                description: Padding The amount of padding around all sides of the node.
                format: float
                type: number
                x-go-name: Padding
            position:
                description: Position The position of the node. If the position is set, the node is drawn at that position in the given dimensions. If the position is not set, the node is drawn at a random position.
                properties:
                    x:
                        description: X The x-coordinate of the node.
                        format: double
                        type: number
                        x-go-name: X
                    "y":
                        description: Y The y-coordinate of the node.
                        format: double
                        type: number
                        x-go-name: "Y"
                type: object
                x-go-name: Position
            primaryColor:
                description: PrimaryColor Primary color of the component used for UI representation.
                type: string
                x-go-name: PrimaryColor
            secondaryColor:
                description: SecondaryColor Secondary color of the entity used for UI representation.
                type: string
                x-go-name: SecondaryColor
            selection-box-border-width:
                description: SelectionBoxBorderWidth The size of the border on the selection box. Selector needs to be *core*
                format: float
                type: number
                x-go-name: SelectionBoxBorderWidth
            selection-box-color:
                description: 'SelectionBoxColor The background colour of the selection box used for drag selection. Selector needs to be *core*. Colours may be specified by name (e.g. red), hex (e.g. #ff0000 or #f00), RGB (e.g. rgb(255, 0, 0)), or HSL (e.g. hsl(0, 100%, 50%)).'
                type: string
                x-go-name: SelectionBoxColor
            selection-box-opacity:
                description: SelectionBoxOpacity The opacity of the selection box.  Selector needs to be *core*
                format: float
                type: number
                x-go-name: SelectionBoxOpacity
            shape:
                $ref: '#/definitions/ComponentDefinitionStylesShape'
            shape-polygon-points:
                description: ShapePolygonPoints An array (or a space-separated string) of numbers ranging on [-1, 1], representing alternating x and y values (i.e. x1 y1 x2 y2, x3 y3 ...). This represents the points in the polygon for the node’s shape. The bounding box of the node is given by (-1, -1), (1, -1), (1, 1), (-1, 1). The node’s position is the origin (0, 0 )
                type: string
                x-go-name: ShapePolygonPoints
            svgColor:
                description: SvgColor Colored SVG of the entity used for UI representation on light background.
                type: string
                x-go-name: SvgColor
            svgComplete:
                description: SvgComplete Complete SVG of the entity used for UI representation, often inclusive of background.
                type: string
                x-go-name: SvgComplete
            svgWhite:
                description: SvgWhite White SVG of the entity used for UI representation on dark background.
                type: string
                x-go-name: SvgWhite
            text-halign:
                $ref: '#/definitions/ComponentDefinitionStylesTextHalign'
            text-opacity:
                description: TextOpacity The opacity of the label text, including its outline.
                format: float
                type: number
                x-go-name: TextOpacity
            text-transform:
                $ref: '#/definitions/ComponentDefinitionStylesTextTransform'
            text-valign:
                $ref: '#/definitions/ComponentDefinitionStylesTextValign'
            width:
                description: Width The width of the node’s body or the width of an edge’s line.
                format: float
                type: number
                x-go-name: Width
            z-index:
                description: ZIndex An integer value that affects the relative draw order of elements. In general, an element with a higher z-index will be drawn on top of an element with a lower z-index. Note that edges are under nodes despite z-index.
                format: int64
                type: integer
                x-go-name: ZIndex
        type: object
        x-go-package: github.com/meshery/schemas/models/v1beta1/component
    SupportedOperation:
        properties:
            category:
                $ref: '#/definitions/OpCategory'
            key:
                type: string
                x-go-name: Key
            value:
                type: string
                x-go-name: Value
        type: object
        x-go-package: github.com/layer5io/meshery/server/meshes
    Target:
        description: for an any panel
        properties:
            alias:
                type: string
                x-go-name: Alias
            aliasBy:
                type: string
                x-go-name: AliasBy
            alignOptions:
                items:
                    $ref: '#/definitions/StackdriverAlignOptions'
                type: array
                x-go-name: AlignOptions
            alignmentPeriod:
                type: string
                x-go-name: AlignmentPeriod
            bucketAggs:
                items:
                    properties:
                        field:
                            type: string
                            x-go-name: Field
                        id:
                            type: string
                            x-go-name: ID
                        settings:
                            properties:
                                interval:
                                    type: string
                                    x-go-name: Interval
                                min_doc_count:
                                    x-go-name: MinDocCount
                                order:
                                    type: string
                                    x-go-name: Order
                                orderBy:
                                    type: string
                                    x-go-name: OrderBy
                                size:
                                    type: string
                                    x-go-name: Size
                            type: object
                            x-go-name: Settings
                        type:
                            type: string
                            x-go-name: Type
                    type: object
                type: array
                x-go-name: BucketAggs
            crossSeriesReducer:
                type: string
                x-go-name: CrossSeriesReducer
            datasource:
                x-go-name: Datasource
            dimensions:
                additionalProperties:
                    type: string
                type: object
                x-go-name: Dimensions
            dsType:
                description: For Elasticsearch
                type: string
                x-go-name: DsType
            expr:
                description: For Prometheus
                type: string
                x-go-name: Expr
            filters:
                items:
                    type: string
                type: array
                x-go-name: Filters
            format:
                type: string
                x-go-name: Format
            group:
                items:
                    properties:
                        params:
                            items:
                                type: string
                            type: array
                            x-go-name: Params
                        type:
                            type: string
                            x-go-name: Type
                    type: object
                type: array
                x-go-name: Group
            groupBy:
                items:
                    type: string
                type: array
                x-go-name: GroupBy
            hide:
                type: boolean
                x-go-name: Hide
            instant:
                type: boolean
                x-go-name: Instant
            interval:
                type: string
                x-go-name: Interval
            intervalFactor:
                format: int64
                type: integer
                x-go-name: IntervalFactor
            legendFormat:
                type: string
                x-go-name: LegendFormat
            measurement:
                description: For InfluxDB
                type: string
                x-go-name: Measurement
            metricColumn:
                type: string
                x-go-name: MetricColumn
            metricKind:
                type: string
                x-go-name: MetricKind
            metricName:
                type: string
                x-go-name: MetricName
            metricType:
                type: string
                x-go-name: MetricType
            metrics:
                items:
                    properties:
                        field:
                            type: string
                            x-go-name: Field
                        id:
                            type: string
                            x-go-name: ID
                        type:
                            type: string
                            x-go-name: Type
                    type: object
                type: array
                x-go-name: Metrics
            namespace:
                description: For CloudWatch
                type: string
                x-go-name: Namespace
            perSeriesAligner:
                type: string
                x-go-name: PerSeriesAligner
            period:
                type: string
                x-go-name: Period
            projectName:
                description: |-
                    For the Stackdriver data source. Find out more information at
                    https:/grafana.com/docs/grafana/v6.0/features/datasources/stackdriver/
                type: string
                x-go-name: ProjectName
            query:
                type: string
                x-go-name: Query
            rawQuery:
                type: boolean
                x-go-name: RawQuery
            rawSql:
                type: string
                x-go-name: RawSql
            refId:
                type: string
                x-go-name: RefID
            region:
                type: string
                x-go-name: Region
            select:
                items:
                    items:
                        properties:
                            params:
                                items:
                                    type: string
                                type: array
                                x-go-name: Params
                            type:
                                type: string
                                x-go-name: Type
                        type: object
                    type: array
                type: array
                x-go-name: Select
            statistics:
                items:
                    type: string
                type: array
                x-go-name: Statistics
            step:
                format: int64
                type: integer
                x-go-name: Step
            table:
                description: For PostgreSQL
                type: string
                x-go-name: Table
            tags:
                items:
                    properties:
                        key:
                            type: string
                            x-go-name: Key
                        operator:
                            type: string
                            x-go-name: Operator
                        value:
                            type: string
                            x-go-name: Value
                    type: object
                type: array
                x-go-name: Tags
            target:
                description: For Graphite
                type: string
                x-go-name: Target
            timeColumn:
                type: string
                x-go-name: TimeColumn
            timeField:
                type: string
                x-go-name: TimeField
            valueType:
                type: string
                x-go-name: ValueType
            where:
                items:
                    properties:
                        datatype:
                            type: string
                            x-go-name: Datatype
                        name:
                            type: string
                            x-go-name: Name
                        params:
                            items:
                                type: string
                            type: array
                            x-go-name: Params
                        type:
                            type: string
                            x-go-name: Type
                    type: object
                type: array
                x-go-name: Where
        type: object
        x-go-package: github.com/grafana-tools/sdk
    Threshold:
        properties:
            colorMode:
                description: critical, warning, ok, custom
                type: string
                x-go-name: ColorMode
            fill:
                type: boolean
                x-go-name: Fill
            fillColor:
                description: 'hexadecimal color (e.g. #629e51, only when ColorMode is "custom")'
                type: string
                x-go-name: FillColor
            line:
                type: boolean
                x-go-name: Line
            lineColor:
                description: 'hexadecimal color (e.g. #629e51, only when ColorMode is "custom")'
                type: string
                x-go-name: LineColor
            op:
                description: gt or lt
                type: string
                x-go-name: Op
            value:
                description: |-
                    the alert threshold value, we do not omitempty, since 0 is a valid
                    threshold
                format: float
                type: number
                x-go-name: Value
            yaxis:
                description: left or right
                type: string
                x-go-name: Yaxis
        type: object
        x-go-package: github.com/grafana-tools/sdk
    ThresholdStep:
        properties:
            color:
                type: string
                x-go-name: Color
            value:
                format: double
                type: number
                x-go-name: Value
        type: object
        x-go-package: github.com/grafana-tools/sdk
    Thresholds:
        properties:
            mode:
                type: string
                x-go-name: Mode
            steps:
                items:
                    $ref: '#/definitions/ThresholdStep'
                type: array
                x-go-name: Steps
        type: object
        x-go-package: github.com/grafana-tools/sdk
    TimeseriesLegendOptions:
        properties:
            calcs:
                items:
                    type: string
                type: array
                x-go-name: Calcs
            displayMode:
                type: string
                x-go-name: DisplayMode
            placement:
                type: string
                x-go-name: Placement
        type: object
        x-go-package: github.com/grafana-tools/sdk
    TimeseriesOptions:
        properties:
            legend:
                $ref: '#/definitions/TimeseriesLegendOptions'
            tooltip:
                $ref: '#/definitions/TimeseriesTooltipOptions'
        type: object
        x-go-package: github.com/grafana-tools/sdk
    TimeseriesTooltipOptions:
        properties:
            mode:
                type: string
                x-go-name: Mode
        type: object
        x-go-package: github.com/grafana-tools/sdk
    Tooltip:
        properties:
            msResolution:
                type: boolean
                x-go-name: MsResolution
            shared:
                type: boolean
                x-go-name: Shared
            sort:
                format: int64
                type: integer
                x-go-name: Sort
            value_type:
                type: string
                x-go-name: ValueType
        type: object
        x-go-package: github.com/grafana-tools/sdk
    Topology:
        description: |-
            This description is taken verbatim from the CSI Spec:

            A topological domain is a sub-division of a cluster, like "region",
            "zone", "rack", etc.
            A topological segment is a specific instance of a topological domain,
            like "zone3", "rack3", etc.
            For example {"com.company/zone": "Z1", "com.company/rack": "R3"}
            Valid keys have two segments: an OPTIONAL prefix and name, separated
            by a slash (/), for example: "com.company.example/zone".
            The key name segment is REQUIRED. The prefix is OPTIONAL.
            The key name MUST be 63 characters or less, begin and end with an
            alphanumeric character ([a-z0-9A-Z]), and contain only dashes (-),
            underscores (_), dots (.), or alphanumerics in between, for example
            "zone".
            The key prefix MUST be 63 characters or less, begin and end with a
            lower-case alphanumeric character ([a-z0-9]), contain only
            dashes (-), dots (.), or lower-case alphanumerics in between, and
            follow domain name notation format
            (https://tools.ietf.org/html/rfc1035#section-2.3.1).
            The key prefix SHOULD include the plugin's host company name and/or
            the plugin name, to minimize the possibility of collisions with keys
            from other plugins.
            If a key prefix is specified, it MUST be identical across all
            topology keys returned by the SP (across all RPCs).
            Keys MUST be case-insensitive. Meaning the keys "Zone" and "zone"
            MUST not both exist.
            Each value (topological segment) MUST contain 1 or more strings.
            Each string MUST be 63 characters or less and begin and end with an
            alphanumeric character with '-', '_', '.', or alphanumerics in
            between.
        properties:
            Segments:
                additionalProperties:
                    type: string
                type: object
        title: Topology is a map of topological domains to topological segments.
        type: object
        x-go-package: github.com/docker/docker/api/types/volume
    TopologyRequirement:
        description: |-
            TopologyRequirement expresses the user's requirements for a volume's
            accessible topology.
        properties:
            Preferred:
                description: |-
                    Preferred is a list of Topologies that the volume should attempt to be
                    provisioned in.

                    Taken from the CSI spec:

                    Specifies the list of topologies the CO would prefer the volume to
                    be provisioned in.

                    This field is OPTIONAL. If TopologyRequirement is specified either
                    requisite or preferred or both MUST be specified.

                    An SP MUST attempt to make the provisioned volume available using
                    the preferred topologies in order from first to last.

                    If requisite is specified, all topologies in preferred list MUST
                    also be present in the list of requisite topologies.

                    If the SP is unable to make the provisioned volume available
                    from any of the preferred topologies, the SP MAY choose a topology
                    from the list of requisite topologies.
                    If the list of requisite topologies is not specified, then the SP
                    MAY choose from the list of all possible topologies.
                    If the list of requisite topologies is specified and the SP is
                    unable to make the provisioned volume available from any of the
                    requisite topologies it MUST fail the CreateVolume call.

                    Example 1:
                    Given a volume should be accessible from a single zone, and
                    requisite =
                    {"region": "R1", "zone": "Z2"},
                    {"region": "R1", "zone": "Z3"}
                    preferred =
                    {"region": "R1", "zone": "Z3"}
                    then the SP SHOULD first attempt to make the provisioned volume
                    available from "zone" "Z3" in the "region" "R1" and fall back to
                    "zone" "Z2" in the "region" "R1" if that is not possible.

                    Example 2:
                    Given a volume should be accessible from a single zone, and
                    requisite =
                    {"region": "R1", "zone": "Z2"},
                    {"region": "R1", "zone": "Z3"},
                    {"region": "R1", "zone": "Z4"},
                    {"region": "R1", "zone": "Z5"}
                    preferred =
                    {"region": "R1", "zone": "Z4"},
                    {"region": "R1", "zone": "Z2"}
                    then the SP SHOULD first attempt to make the provisioned volume
                    accessible from "zone" "Z4" in the "region" "R1" and fall back to
                    "zone" "Z2" in the "region" "R1" if that is not possible. If that
                    is not possible, the SP may choose between either the "zone"
                    "Z3" or "Z5" in the "region" "R1".

                    Example 3:
                    Given a volume should be accessible from TWO zones (because an
                    opaque parameter in CreateVolumeRequest, for example, specifies
                    the volume is accessible from two zones, aka synchronously
                    replicated), and
                    requisite =
                    {"region": "R1", "zone": "Z2"},
                    {"region": "R1", "zone": "Z3"},
                    {"region": "R1", "zone": "Z4"},
                    {"region": "R1", "zone": "Z5"}
                    preferred =
                    {"region": "R1", "zone": "Z5"},
                    {"region": "R1", "zone": "Z3"}
                    then the SP SHOULD first attempt to make the provisioned volume
                    accessible from the combination of the two "zones" "Z5" and "Z3" in
                    the "region" "R1". If that's not possible, it should fall back to
                    a combination of "Z5" and other possibilities from the list of
                    requisite. If that's not possible, it should fall back  to a
                    combination of "Z3" and other possibilities from the list of
                    requisite. If that's not possible, it should fall back  to a
                    combination of other possibilities from the list of requisite.
                items:
                    $ref: '#/definitions/Topology'
                type: array
            Requisite:
                description: |-
                    Requisite specifies a list of Topologies, at least one of which the
                    volume must be accessible from.

                    Taken verbatim from the CSI Spec:

                    Specifies the list of topologies the provisioned volume MUST be
                    accessible from.
                    This field is OPTIONAL. If TopologyRequirement is specified either
                    requisite or preferred or both MUST be specified.

                    If requisite is specified, the provisioned volume MUST be
                    accessible from at least one of the requisite topologies.

                    Given
                    x = number of topologies provisioned volume is accessible from
                    n = number of requisite topologies
                    The CO MUST ensure n >= 1. The SP MUST ensure x >= 1
                    If x==n, then the SP MUST make the provisioned volume available to
                    all topologies from the list of requisite topologies. If it is
                    unable to do so, the SP MUST fail the CreateVolume call.
                    For example, if a volume should be accessible from a single zone,
                    and requisite =
                    {"region": "R1", "zone": "Z2"}
                    then the provisioned volume MUST be accessible from the "region"
                    "R1" and the "zone" "Z2".
                    Similarly, if a volume should be accessible from two zones, and
                    requisite =
                    {"region": "R1", "zone": "Z2"},
                    {"region": "R1", "zone": "Z3"}
                    then the provisioned volume MUST be accessible from the "region"
                    "R1" and both "zone" "Z2" and "zone" "Z3".

                    If x<n, then the SP SHALL choose x unique topologies from the list
                    of requisite topologies. If it is unable to do so, the SP MUST fail
                    the CreateVolume call.
                    For example, if a volume should be accessible from a single zone,
                    and requisite =
                    {"region": "R1", "zone": "Z2"},
                    {"region": "R1", "zone": "Z3"}
                    then the SP may choose to make the provisioned volume available in
                    either the "zone" "Z2" or the "zone" "Z3" in the "region" "R1".
                    Similarly, if a volume should be accessible from two zones, and
                    requisite =
                    {"region": "R1", "zone": "Z2"},
                    {"region": "R1", "zone": "Z3"},
                    {"region": "R1", "zone": "Z4"}
                    then the provisioned volume MUST be accessible from any combination
                    of two unique topologies: e.g. "R1/Z2" and "R1/Z3", or "R1/Z2" and
                    "R1/Z4", or "R1/Z3" and "R1/Z4".

                    If x>n, then the SP MUST make the provisioned volume available from
                    all topologies from the list of requisite topologies and MAY choose
                    the remaining x-n unique topologies from the list of all possible
                    topologies. If it is unable to do so, the SP MUST fail the
                    CreateVolume call.
                    For example, if a volume should be accessible from two zones, and
                    requisite =
                    {"region": "R1", "zone": "Z2"}
                    then the provisioned volume MUST be accessible from the "region"
                    "R1" and the "zone" "Z2" and the SP may select the second zone
                    independently, e.g. "R1/Z4".
                items:
                    $ref: '#/definitions/Topology'
                type: array
        type: object
        x-go-package: github.com/docker/docker/api/types/volume
    Type:
        format: int64
        title: Type represents the stored type of IntOrString.
        type: integer
        x-go-package: k8s.io/apimachinery/pkg/util/intstr
    TypeBlock:
        description: Intentionally empty.
        title: TypeBlock defines options for using a volume as a block-type volume.
        type: object
        x-go-package: github.com/docker/docker/api/types/volume
    TypeMount:
        description: |-
            TypeMount contains options for using a volume as a Mount-type
            volume.
        properties:
            FsType:
                description: FsType specifies the filesystem type for the mount volume. Optional.
                type: string
            MountFlags:
                description: MountFlags defines flags to pass when mounting the volume. Optional.
                items:
                    type: string
                type: array
        type: object
        x-go-package: github.com/docker/docker/api/types/volume
    UID:
        description: |-
            UID is a type that holds unique ID values, including UUIDs.  Because we
            don't ONLY use UUIDs, this is an alias to string.  Being a type captures
            intent and helps make sure that UIDs and names do not get conflated.
        type: string
        x-go-package: k8s.io/apimachinery/pkg/types
    UsageData:
        description: |-
            UsageData Usage details about the volume. This information is used by the
            `GET /system/df` endpoint, and omitted in other endpoints.
        properties:
            RefCount:
                description: |-
                    The number of containers referencing this volume. This field
                    is set to `-1` if the reference-count is not available.
                format: int64
                type: integer
            Size:
                description: |-
                    Amount of disk space used by the volume (in bytes). This information
                    is only available for volumes created with the `"local"` volume
                    driver. For volumes created with other volume drivers, this field
                    is set to `-1` ("not available")
                format: int64
                type: integer
        required:
            - RefCount
            - Size
        type: object
        x-go-package: github.com/docker/docker/api/types/volume
    User:
        description: User - represents a user in Meshery
        properties:
            avatar_url:
                type: string
                x-go-name: AvatarURL
            bio:
                type: string
                x-go-name: Bio
            email:
                type: string
                x-go-name: Email
            first_name:
                type: string
                x-go-name: FirstName
            id:
                type: string
                x-go-name: ID
            last_name:
                type: string
                x-go-name: LastName
            provider:
                type: string
                x-go-name: Provider
            role_names:
                items:
                    type: string
                type: array
                x-go-name: RoleNames
            status:
                type: string
                x-go-name: Status
            user_id:
                type: string
                x-go-name: UserID
        type: object
        x-go-package: github.com/layer5io/meshery/server/models
    UserKeys:
        properties:
            category:
                type: string
                x-go-name: Category
            created_at:
                type: string
                x-go-name: Created_at
            deleted_at:
                type: string
                x-go-name: Deleted_at
            description:
                type: string
                x-go-name: Description
            function:
                type: string
                x-go-name: Function
            id:
                type: string
                x-go-name: ID
            owner:
                type: string
                x-go-name: Owner
            subcategory:
                type: string
                x-go-name: Subcategory
            updated_at:
                type: string
                x-go-name: Updated_at
        type: object
        x-go-package: github.com/layer5io/meshery/server/models
    UserPrefsExtension:
        description: UserPrefsExtension describes the user preference extension point in the UI
        properties:
            component:
                type: string
                x-go-name: Component
            type:
                type: string
                x-go-name: Type
        type: object
        x-go-package: github.com/layer5io/meshery/server/models
    UserPrefsExtensions:
        description: UserPrefsExtensions is a collection of UserPrefsExtension
        items:
            $ref: '#/definitions/UserPrefsExtension'
        type: array
        x-go-package: github.com/layer5io/meshery/server/models
    ValueMap:
        description: for a stat
        properties:
            op:
                type: string
                x-go-name: Op
            text:
                type: string
                x-go-name: TextType
            value:
                type: string
                x-go-name: Value
        type: object
        x-go-package: github.com/grafana-tools/sdk
    Version:
        properties:
            Index:
                format: uint64
                type: integer
        title: Version represents the internal object version.
        type: object
        x-go-package: github.com/docker/docker/api/types/swarm
    Volume:
        description: Volume volume
        properties:
            ClusterVolume:
                $ref: '#/definitions/ClusterVolume'
            CreatedAt:
                description: Date/Time the volume was created.
                type: string
            Driver:
                description: Name of the volume driver used by the volume.
                type: string
            Labels:
                additionalProperties:
                    type: string
                description: User-defined key/value metadata.
                type: object
            Mountpoint:
                description: Mount path of the volume on the host.
                type: string
            Name:
                description: Name of the volume.
                type: string
            Options:
                additionalProperties:
                    type: string
                description: The driver specific options used when creating the volume.
                type: object
            Scope:
                description: |-
                    The level at which the volume exists. Either `global` for cluster-wide,
                    or `local` for machine level.
                type: string
            Status:
                additionalProperties: {}
                description: |-
                    Low-level details about the volume, provided by the volume driver.
                    Details are returned as a map with key/value pairs:
                    `{"key":"value","key2":"value2"}`.

                    The `Status` field is optional, and is omitted if the volume driver
                    does not support this feature.
                type: object
            UsageData:
                $ref: '#/definitions/UsageData'
        required:
            - Driver
            - Labels
            - Mountpoint
            - Name
            - Options
            - Scope
        type: object
        x-go-package: github.com/docker/docker/api/types/volume
    WaitExitError:
        description: WaitExitError container waiting error, if any
        properties:
            Message:
                description: Details of an error
                type: string
        type: object
        x-go-package: github.com/docker/docker/api/types/container
    WaitResponse:
        description: OK response to ContainerWait operation
        properties:
            Error:
                $ref: '#/definitions/WaitExitError'
            StatusCode:
                description: Exit code of the container
                format: int64
                type: integer
        required:
            - StatusCode
        title: WaitResponse ContainerWaitResponse
        type: object
        x-go-package: github.com/docker/docker/api/types/container
    Workspace:
        properties:
            created_at:
                format: date-time
                type: string
                x-go-name: CreatedAt
            deleted_at:
                $ref: '#/definitions/NullTime'
            description:
                type: string
                x-go-name: Description
            id:
                format: uuid
                type: string
                x-go-name: ID
            name:
                type: string
                x-go-name: Name
            organization_id:
                format: uuid
                type: string
                x-go-name: OrganizationID
            updated_at:
                format: date-time
                type: string
                x-go-name: UpdatedAt
        type: object
        x-go-package: github.com/layer5io/meshery/server/models
    WorkspacePage:
        properties:
            page:
                format: int64
                type: integer
                x-go-name: Page
            page_size:
                format: int64
                type: integer
                x-go-name: PageSize
            total_count:
                format: int64
                type: integer
                x-go-name: TotalCount
            workspaces:
                items:
                    $ref: '#/definitions/Workspace'
                type: array
                x-go-name: Workspaces
        type: object
        x-go-package: github.com/layer5io/meshery/server/models
    WorkspacesDesignsMapping:
        properties:
            ID:
                format: uuid
                type: string
            created_at:
                format: date-time
                type: string
                x-go-name: CreatedAt
            deleted_at:
                $ref: '#/definitions/NullTime'
            design_id:
                format: uuid
                type: string
                x-go-name: DesignId
            updated_at:
                format: date-time
                type: string
                x-go-name: UpdatedAt
            workspace_id:
                format: uuid
                type: string
                x-go-name: WorkspaceId
        type: object
        x-go-package: github.com/layer5io/meshery/server/models
    WorkspacesEnvironmentsMapping:
        properties:
            ID:
                format: uuid
                type: string
            created_at:
                format: date-time
                type: string
                x-go-name: CreatedAt
            deleted_at:
                $ref: '#/definitions/NullTime'
            environment_id:
                format: uuid
                type: string
                x-go-name: EnvironmentId
            updated_at:
                format: date-time
                type: string
                x-go-name: UpdatedAt
            workspace_id:
                format: uuid
                type: string
                x-go-name: WorkspaceId
        type: object
        x-go-package: github.com/layer5io/meshery/server/models
info:
    description: |-
        the purpose of this application is to provide an application
        that is using plain go code to define an API

        This should demonstrate all the possible comment annotations
        that are available to turn go code into a fully compliant swagger 2.0 spec
    license:
        name: Apache-2.0
        url: http://www.apache.org/licenses/LICENSE-2.0.txt
    title: Meshery API.
    version: 0.4.27
paths:
    /api/application:
        get:
            description: |-
                Fetches the list of all applications saved by the current user

                ```?updated_after=<timestamp>``` timestamp should be of the format "YYYY-MM-DD HH:MM:SS"

                ```?order={field}``` orders on the passed field

                ```?search=<application name>``` A string matching is done on the specified application name

                ```?page={page-number}``` Default page number is 0

                ```?pagesize={pagesize}``` Default pagesize is 10
            operationId: idGetMesheryApplications
            responses:
                "200":
                    $ref: '#/responses/mesheryApplicationsResponseWrapper'
            summary: Handle GET request for Application Files
            tags:
                - ApplicationsAPI
    /api/application/{id}:
        delete:
            description: 'Deletes a meshery application file with ID: id'
            operationId: idDeleteMesheryApplicationFile
            parameters:
                - description: id for a specific
                  format: uuid
                  in: path
                  name: id
                  required: true
                  type: string
                  x-go-name: ID
            responses:
                "200":
                    $ref: '#/responses/noContentWrapper'
            summary: Handle Delete for a Meshery Application File
            tags:
                - ApplicationsAPI
    /api/application/{sourcetype}:
        post:
            description: Updates the design for the provided application
            operationId: idPutApplicationFileRequest
            responses:
                "200":
                    $ref: '#/responses/mesheryApplicationResponseWrapper'
            summary: Handle POST request for Application Files
            tags:
                - ApplicationsAPI
    /api/application/deploy:
        delete:
            description: Delete a deployed application file with the request
            operationId: idDeleteApplicationFile
            responses:
                "200":
                    description: ""
            summary: Handle DELETE request for Application File Deploy
            tags:
                - ApplicationsAPI
        post:
            description: Deploy an attached application file with the request
            operationId: idPostDeployApplicationFile
            parameters:
                - in: formData
                  name: Upload Yaml/Yml File
                  type: file
                  x-go-name: FormFile
            responses:
                "200":
                    $ref: '#/responses/applicationFilesResponseWrapper'
            summary: Handle POST request for Application File Deploy
            tags:
                - ApplicationsAPI
    /api/application/download/{id}/{sourcetype}:
        get:
            description: Get the application source-content
            operationId: typeGetApplication
            parameters:
                - in: formData
                  name: Upload Yaml/Yml File
                  type: file
                  x-go-name: FormFile
            responses: {}
            summary: Handle GET request for Meshery Application with of source content
            tags:
                - ApplicationsAPI
    /api/application/types:
        get:
            description: Get application file types
            operationId: typeGetMesheryApplication
            responses:
                "200":
                    $ref: '#/responses/mesheryApplicationTypesResponseWrapper'
            summary: Handle GET request for Meshery Application types
            tags:
                - ApplicationsAPI
    /api/content/design/share:
        post:
            description: Used to share designs with others
            operationId: idPostShareContent
            responses:
                "200":
                    description: ""
                "403":
                    description: ""
                "500":
                    description: ""
            summary: Handle POST request for Sharing content
            tags:
                - ShareContent
    /api/content/filter/share:
        post:
            description: Used to share filters with others
            operationId: idPostShareContent
            responses:
                "200":
                    description: ""
                "403":
                    description: ""
                "500":
                    description: ""
            summary: Handle POST request for Sharing content
            tags:
                - ShareContent
    /api/environments:
        get:
            description: |-
                # Environments can be further filtered through query parameters

                ```?order={field}``` orders on the passed field

                ```?page={page-number}``` Default page number is 0

                ```?pagesize={pagesize}``` Default pagesize is 20

                ```?search={environments_name}``` If search is non empty then a greedy search is performed

                ```?orgID={orgid}``` orgID is used to retrieve environments belonging to a particular org *required*

                ```?filter={condition}```
            operationId: idGetEnvironments
            responses:
                "200":
                    $ref: '#/responses/environmentsResponseWrapper'
            summary: Handles GET for all Environments
            tags:
                - EnvironmentsAPI
        post:
            description: Creates a new environment
            operationId: idSaveEnvironment
            responses:
                "201":
                    $ref: '#/responses/noContentWrapper'
            summary: Handle POST request for creating a new environment
            tags:
                - PostEnvironment
    /api/environments/{environmentID}/connections:
        get:
            description: |-
                ```?order={field}``` orders on the passed field

                ```?page={page-number}``` Default page number is 0

                ```?pagesize={pagesize}``` Default pagesize is 20

                ```?search={environments_name}``` If search is non empty then a greedy search is performed

                ```?filter={{"assigned": true/false, "deleted_at": true/false}}``` defaults to assigned: false, deleted_at: false

                Returns all connections of environment
            operationId: idGetConnectionsOfEnvironmentHandler
            responses:
                "200":
                    $ref: '#/responses/mesheryConnectionsResponseWrapper'
            summary: Handle GET for all Connections of Environment
            tags:
                - EnvironmentAPI
    /api/environments/{environmentID}/connections/{connectionID}:
        delete:
            description: Removes connection from environment
            operationId: idRemoveConnectionFromEnvironmentHandler
            responses:
                "201":
                    $ref: '#/responses/noContentWrapper'
            summary: Handle DELETE to remove Connection from Environment by ID
            tags:
                - EnvironmentAPI
        post:
            description: Returns Environment connection mapping info
            operationId: idAddConnectionToEnvironmentHandler
            responses:
                "200":
                    $ref: '#/responses/environmentResponseWrapper'
            summary: Handle POST to add Connection in Environment by ID
            tags:
                - EnvironmentAPI
    /api/environments/{id}:
        delete:
            description: Handle DELETE for Environment based on ID
            operationId: idDeleteEnvironmentHandler
            responses:
                "201":
                    $ref: '#/responses/noContentWrapper'
            tags:
                - EnvironmentAPI
        get:
            description: |-
                ```?orgID={orgid}``` orgID is used to retrieve environments belonging to a particular org

                Returns Environment info
            operationId: idGetEnvironmentByIDHandler
            responses:
                "200":
                    $ref: '#/responses/environmentResponseWrapper'
            summary: Handle GET for Environment info by ID
            tags:
                - EnvironmentAPI
        put:
            description: Updates a environment
            operationId: idUpdateEnvironmentHandler
            responses:
                "200":
                    $ref: '#/responses/environmentResponseWrapper'
            summary: Handle PUT request for updating a environment
            tags:
                - PostEnvironment
    /api/events:
        get:
            description: |-
                Listens for events across all of Meshery's components like adapters and server, streaming them to the UI via Server Side Events
                This API call never terminates and establishes a persistent keep-alive connection over which `EventsResponse`s are pushed.
            operationId: idGetEventStreamer
            responses:
                "200":
                    description: ""
            summary: Handle GET request for events.
            tags:
                - EventsAPI
        post:
            operationId: idClientEventHandler
            responses:
                "200":
                    description: ""
            summary: Receives client-generated events bound for the Notification Center.
            tags:
                - EventsAPI
    /api/events/{id}:
        delete:
            description: Deletes event associated with the id.
            operationId: idGetEventStreamer
            responses:
                "200":
                    description: ""
            summary: Handle DELETE request for events.
    /api/events/bulk:
        delete:
            description: Bulk delete events associated with the ids.
            operationId: idGetEventStreamer
            responses:
                "200":
                    description: ""
            summary: Handle DELETE request to delete events in bulk.
    /api/events/status:
        put:
            description: Bulk update status for the events associated with the ids.
            operationId: idGetEventStreamer
            responses:
                "200":
                    $ref: '#/responses/eventResponseWrapper'
            summary: Handle PUT request to update event status in bulk.
    /api/events/status/{id}:
        put:
            description: Updates event status for the event associated with the id.
            operationId: idGetEventStreamer
            responses:
                "200":
                    $ref: '#/responses/eventResponseWrapper'
            summary: Handle PUT request to update event status.
    /api/events/types:
        get:
            operationId: idGetEventStreamer
            responses:
                "200":
                    description: ""
            summary: Handle GET request for available event categories and actions.
            tags:
                - EventsAPI
    /api/filter:
        get:
            description: |-
                # Returns the list of all the filters saved by the current user

                ```?order={field}``` orders on the passed field

                ```?search=<filter name>``` A string matching is done on the specified filter name

                ```?page={page-number}``` Default page number is 0

                ```?pagesize={pagesize}``` Default pagesize is 10

                ```?visibility={[visibility]}``` Default visibility is public + private; Mulitple visibility filters can be passed as an array
                Eg: ```?visibility=["public", "published"]``` will return public and published filters
            operationId: idGetFilterFiles
            responses:
                "200":
                    $ref: '#/responses/mesheryFiltersResponseWrapper'
            summary: Handle GET request for filters
            tags:
                - FiltersAPI
        post:
            description: Used to save/update a Meshery Filter
            operationId: idPostFilterFile
            responses:
                "200":
                    $ref: '#/responses/mesheryFilterResponseWrapper'
            summary: Handle POST requests for Meshery Filters
            tags:
                - FiltersAPI
    /api/filter/{id}:
        delete:
            description: 'Deletes a meshery filter with ID: id'
            operationId: idDeleteMesheryFilter
            parameters:
                - description: id for a specific
                  format: uuid
                  in: path
                  name: id
                  required: true
                  type: string
                  x-go-name: ID
            responses:
                "200":
                    $ref: '#/responses/noContentWrapper'
            summary: Handle Delete for a Meshery Filter
            tags:
                - FiltersAPI
        get:
            description: Fetches the Meshery Filter with the given id
            operationId: idGetMesheryFilter
            parameters:
                - description: id for a specific
                  format: uuid
                  in: path
                  name: id
                  required: true
                  type: string
                  x-go-name: ID
            responses:
                "200":
                    $ref: '#/responses/mesheryFilterResponseWrapper'
            summary: Handle GET request for a Meshery Filter
            tags:
                - FiltersAPI
    /api/filter/catalog:
        get:
            description: |-
                # Filters can be further filtered through query parameter

                ```?order={field}``` orders on the passed field

                ```?page={page-number}``` Default page number is 0

                ```?pagesize={pagesize}``` Default pagesize is 10.

                ```?search={filtername}``` If search is non empty then a greedy search is performed
            operationId: idGetCatalogMesheryFiltersHandler
            responses:
                "200":
                    $ref: '#/responses/mesheryFiltersResponseWrapper'
            summary: Handle GET request for catalog filters
            tags:
                - FiltersAPI
    /api/filter/catalog/publish:
        post:
            description: Publishes filter to Meshery Catalog by setting visibility to published and setting catalog data
            operationId: idPublishCatalogFilterHandler
            responses:
                "202":
                    $ref: '#/responses/noContentWrapper'
            summary: Handle Publish for a Meshery Filter
            tags:
                - FiltersAPI
    /api/filter/catalog/unpublish:
        delete:
            description: Unpublishes filter from Meshery Catalog by setting visibility to private and removing catalog data from website
            operationId: idUnPublishCatalogFilterHandler
            responses:
                "200":
                    $ref: '#/responses/noContentWrapper'
            summary: Handle UnPublish for a Meshery Filter
            tags:
                - FiltersAPI
    /api/filter/clone/{id}:
        post:
            description: 'Creates a local copy of a published filter with id: id'
            operationId: idCloneMesheryFilter
            responses:
                "200":
                    $ref: '#/responses/noContentWrapper'
            summary: Handle Clone for a Meshery Filter
            tags:
                - FiltersAPI
    /api/filter/deploy:
        delete:
            description: Delete a deployed filter file with the request
            operationId: idDeleteFilterFile
            responses:
                "200":
                    description: ""
            summary: Handle DELETE request for Filter File Deploy
            tags:
                - FilterAPI
        post:
            description: Deploy an attached filter file with the request
            operationId: idPostDeployFilterFile
            responses:
                "200":
                    $ref: '#/responses/FilterFilesResponseWrapper'
            summary: Handle POST request for Filter File Deploy
            tags:
                - FilterAPI
    /api/filter/file/{id}:
        get:
            description: Returns the Meshery Filter file saved by the current user with the given id
            operationId: idGetFilterFile
            responses:
                "200":
                    $ref: '#/responses/mesheryFilterResponseWrapper'
            summary: Handle GET request for filter file with given id
            tags:
                - FiltersAPI
    /api/identity/orgs:
        get:
            description: |4-
                ```?order={field}``` orders on the passed field

                ```?page={page-number}``` Default page number is 0

                ```?pagesize={pagesize}``` Default pagesize is 20

                ```?search={environments_name}``` If search is non empty then a greedy search is performed

                ```?filter={condition}```
            operationId: idGetOrganizations
            responses:
                "200":
                    $ref: '#/responses/orgsResponseWrapper'
            summary: Handles GET for all Organizations
            tags:
                - OrganizationsAPI
    /api/identity/users:
        get:
            description: |-
                # Users can be further filtered through query parameters

                ```?order={field}``` orders on the passed field

                ```?page={page-number}``` Default page number is 0

                ```?pagesize={pagesize}``` Default pagesize is 20

                ```?search={username|email|first_name|last_name}``` If search is non empty then a greedy search is performed

                ```?filter={condition}```
            operationId: idGetAllUsersHandler
            parameters:
                - format: int64
                  in: query
                  name: page
                  type: integer
                  x-go-name: Page
                - format: int64
                  in: query
                  name: pageSize
                  type: integer
                  x-go-name: PageSize
                - in: query
                  name: search
                  type: string
                  x-go-name: Search
                - description: 'in: order'
                  in: query
                  name: order
                  type: string
                  x-go-name: Order
                - description: 'in: filter'
                  in: query
                  name: filter
                  type: string
                  x-go-name: Filter
            responses:
                "200":
                    $ref: '#/responses/users'
            summary: Handles GET for all Users
            tags:
                - UserAPI
    /api/integrations/connections:
        get:
            description: |-
                ```?order={field}``` orders on the passed field

                ```?search={}``` If search is non empty then a greedy search is performed

                ```?page={page-number}``` Default page number is 0

                ```?pagesize={pagesize}``` Default pagesize is 10

                ```?filter={filter}``` Filter connections with type or sub_type, eg /api/integrations/connections?filter=type%20platform or /api/integrations/connections?filter=sub_type%20management

                ```?status={status}``` Status takes array as param to filter connections based on status, eg /api/integrations/connections?status=["connected", "deleted"]

                ```?kind={kind}``` Kind takes array as param to filter connections based on kind, eg /api/integrations/connections?kind=["meshery", "kubernetes"]
            operationId: idGetConnections
            responses:
                "200":
                    $ref: '#/responses/mesheryConnectionsResponseWrapper'
            summary: Handle GET request for getting all connections
            tags:
                - GetConnections
        post:
            description: Creates a new connection
            operationId: idPostConnection
            responses:
                "201":
                    $ref: '#/responses/noContentWrapper'
            summary: Handle POST request for creating a new connection
            tags:
                - PostConnection
    /api/integrations/connections/{connectionId}:
        delete:
            description: Deletes existing connection
            operationId: idDeleteConnection
            responses:
                "200":
                    $ref: '#/responses/noContentWrapper'
            summary: Handle DELETE request for deleting an existing connection by connection ID
            tags:
                - DeleteConnection
        put:
            description: Updates existing connection using ID
            operationId: idPutConnectionById
            responses:
                "200":
                    $ref: '#/responses/mesheryConnectionResponseWrapper'
            summary: Handle PUT request for updating an existing connection by connection ID
            tags:
                - PutConnectionById
    /api/integrations/connections/{connectionKind}:
        get:
            description: |-
                ```?order={field}``` orders on the passed field

                ```?search={}``` If search is non empty then a greedy search is performed

                ```?page={page-number}``` Default page number is 0

                ```?pagesize={pagesize}``` Default pagesize is 10
            operationId: idGetConnectionsByKind
            responses:
                "200":
                    $ref: '#/responses/ConnectionPage'
            summary: Handle GET request for getting all connections for a given kind.
            tags:
                - GetConnectionsByKind
        put:
            description: Updates existing connection
            operationId: idPutConnection
            responses:
                "200":
                    $ref: '#/responses/noContentWrapper'
            summary: Handle PUT request for updating an existing connection
            tags:
                - PutConnection
    /api/integrations/connections/status:
        get:
            description: Get all connections status
            operationId: idGetConnectionsStatus
            responses:
                "200":
                    $ref: '#/responses/mesheryConnectionsStatusPage'
            summary: Handle GET request for getting all connections status
            tags:
                - GetConnectionsStatus
    /api/meshmodel/components/register:
        post:
            description: Validate the given value with the given schema
            operationId: idPostMeshModelValidate
            responses:
                "200":
                    description: ""
            summary: Handle POST request for registering meshmodel components.
            tags:
                - MeshmodelValidate
    /api/meshmodel/generate:
        post:
            description: Generates Meshery Components for the given payload
            operationId: idPostMeshModelComponentGenerate
            responses:
                "200":
                    description: ""
            summary: Handle POST request for component generation
            tags:
                - MeshmodelComponentGenerate
    /api/meshmodel/update/status:
        post:
            description: Update the ignore status of a model based on the provided parameters.
            operationId: idPostMeshModelUpdateEntityStatus
            responses:
                "200":
                    $ref: '#/responses/noContentWrapper'
            summary: Handle POST request for updating the ignore status of a model.
            tags:
                - MeshModelUpdateEntityStatus
    /api/meshmodel/validate:
        post:
            description: Validate the given value with the given schema
            operationId: idPostMeshModelValidate
            responses:
                "200":
                    description: ""
            summary: Handle POST request for validate
            tags:
                - MeshmodelValidate
    /api/meshmodels/categories:
        get:
            description: |-
                ```?order={field}``` orders on the passed field

                ```?sort={[asc/desc]}``` Default behavior is asc

                ```?search={categoryName}``` If search is non empty then a greedy search is performed

                ```?page={page-number}``` Default page number is 1

                ```?pagesize={pagesize}``` Default pagesize is 25. To return all results: ```pagesize=all```
            operationId: idGetMeshmodelCategories
            responses:
                "200":
                    $ref: '#/responses/meshmodelCategoriesResponseWrapper'
            summary: Handle GET request for getting all meshmodel categories
            tags:
                - GetMeshmodelCategories
    /api/meshmodels/categories/{category}:
        get:
            description: |-
                ```?order={field}``` orders on the passed field

                ```?sort={[asc/desc]}``` Default behavior is asc

                ```?page={page-number}``` Default page number is 1

                ```?pagesize={pagesize}``` Default pagesize is 25. To return all results: ```pagesize=all```

                ```?search={[true/false]}``` If search is true then a greedy search is performed
            operationId: idGetMeshmodelCategoriesByName
            responses:
                "200":
                    $ref: '#/responses/meshmodelCategoriesResponseWrapper'
            summary: Handle GET request for getting all meshmodel categories of a given name
            tags:
                - GetMeshmodelCategoriesByName
    /api/meshmodels/categories/{category}/components:
        get:
            description: |-
                # Components can be further filtered through query parameter

                ```?version={version}```

                ```?trim={[true]}``` When trim is set to true, the underlying schemas are not returned for entities

                ```?apiVersion={apiVersion}``` If apiVersion is unspecified then all models are returned

                ```?order={field}``` orders on the passed field

                ```?search={componentname}``` If search is non empty then a greedy search is performed

                ```?sort={[asc/desc]}``` Default behavior is asc

                ```?page={page-number}``` Default page number is 1

                ```?pagesize={pagesize}``` Default pagesize is 25. To return all results: ```pagesize=all```

                ```?annotations={["true"/"false"/]}``` If "true" components having "isAnnotation" property as true are "only" returned, If false all components except "annotations" are returned. Any other value of the query parameter results in both annoations as well as non-annotation components being returned.
            operationId: idGetMeshmodelComponentByCategory
            responses:
                "200":
                    $ref: '#/responses/meshmodelComponentsDuplicateResponseWrapper'
            summary: Handle GET request for getting meshmodel components of a specific model and category.
            tags:
                - GetMeshmodelComponentByCategory
    /api/meshmodels/categories/{category}/components/{name}:
        get:
            description: |-
                Example: ```/api/meshmodels/categories/Orchestration``` and Management/components/Namespace
                Components can be further filtered through query parameter

                ```?model={model}``` If model is unspecified then all models are returned

                ```?version={version}``` If version is unspecified then all model versions are returned

                ```?apiVersion={apiVersion}``` If apiVersion is unspecified then all components are returned

                ```?order={field}``` orders on the passed field

                ```?search={[true/false]}``` If search is true then a greedy search is performed

                ```?sort={[asc/desc]}``` Default behavior is asc

                ```?page={page-number}``` Default page number is 1

                ```?pagesize={pagesize}``` Default pagesize is 25. To return all results: ```pagesize=all```

                ```?annotations={["true"/"false"/]}``` If "true" components having "isAnnotation" property as true are "only" returned, If false all components except "annotations" are returned. Any other value of the query parameter results in both annoations as well as non-annotation components being returned.
            operationId: idGetMeshmodelComponentsByNameByCategory
            responses:
                "200":
                    $ref: '#/responses/meshmodelComponentsDuplicateResponseWrapper'
            summary: Handle GET request for getting meshmodel components of a specific type category.
            tags:
                - GetMeshmodelComponentsByNameByCategory
    /api/meshmodels/categories/{category}/models:
        get:
            description: |-
                ```?version={version}``` If version is unspecified then all models are returned

                ```?order={field}``` orders on the passed field

                ```?search={modelname}``` If search is non empty then a greedy search is performed

                ```?sort={[asc/desc]}``` Default behavior is asc

                ```?page={page-number}``` Default page number is 1

                ```?pagesize={pagesize}``` Default pagesize is 25. To return all results: ```pagesize=all```
                ```?annotations={["true"/"false"/]}``` When this query parameter is "true", only models with the "isAnnotation" property set to true are returned. When  this query parameter is "false", all models except those considered to be annotation models are returned. Any other value of the query parameter results in both annoations as well as non-annotation models being returned.
            operationId: idGetMeshmodelModelsByCategories
            responses:
                "200":
                    $ref: '#/responses/meshmodelModelsDuplicateResponseWrapper'
            summary: Handle GET request for getting all meshmodel models for a given category. The component type/model name should be lowercase like "kubernetes", "istio"
            tags:
                - GetMeshmodelModelsByCategories
    /api/meshmodels/categories/{category}/models/{model}:
        get:
            description: |-
                ```?version={version}``` If version is unspecified then all models are returned

                ```?order={field}``` orders on the passed field

                ```?search={[true/false]}``` If search is true then a greedy search is performed

                ```?sort={[asc/desc]}``` Default behavior is asc

                ```?page={page-number}``` Default page number is 1

                ```?pagesize={pagesize}``` Default pagesize is 25. To return all results: ```pagesize=all```
            operationId: idGetMeshmodelModelsByCategoriesByModel
            responses:
                "200":
                    $ref: '#/responses/meshmodelModelsDuplicateResponseWrapper'
            summary: Handle GET request for getting all meshmodel models for a given category. The component type/model name should be lowercase like "kubernetes", "istio"
            tags:
                - GetMeshmodelModelsByCategoriesByModel
    /api/meshmodels/categories/{category}/models/{model}/components:
        get:
            description: |-
                Example: ```/api/meshmodels/categories/Orchestration``` and Management/models/kubernetes/components
                Components can be further filtered through query parameter

                ```?version={version}```

                ```?trim={[true]}``` When trim is set to true, the underlying schemas are not returned for entities

                ```?apiVersion={apiVersion}``` If apiVersion is unspecified then all models are returned

                ```?order={field}``` orders on the passed field

                ```?search={componentname}``` If search is non empty then a greedy search is performed

                ```?sort={[asc/desc]}``` Default behavior is asc

                ```?page={page-number}``` Default page number is 1

                ```?pagesize={pagesize}``` Default pagesize is 25. To return all results: ```pagesize=all```

                ```?annotations={["true"/"false"/]}``` If "true" components having "isAnnotation" property as true are "only" returned, If false all components except "annotations" are returned. Any other value of the query parameter results in both annoations as well as non-annotation components being returned.
            operationId: idGetMeshmodelComponentByModelByCategory
            responses:
                "200":
                    $ref: '#/responses/meshmodelComponentsDuplicateResponseWrapper'
            summary: Handle GET request for getting meshmodel components of a specific model and category. The component type/model name should be lowercase like "kubernetes", "istio"
            tags:
                - GetMeshmodelComponentByModelByCategory
    /api/meshmodels/categories/{category}/models/{model}/components/{name}:
        get:
            description: |-
                Example: ```/api/meshmodels/categories/Orchestration``` and Management/models/kubernetes/components/Namespace
                Components can be further filtered through query parameter

                ```?version={version}``` If version is unspecified then all model versions are returned

                ```?apiVersion={apiVersion}``` If apiVersion is unspecified then all components are returned

                ```?order={field}``` orders on the passed field

                ```?search={[true/false]}``` If search is true then a greedy search is performed

                ```?sort={[asc/desc]}``` Default behavior is asc

                ```?page={page-number}``` Default page number is 1

                ```?pagesize={pagesize}``` Default pagesize is 25. To return all results: ```pagesize=all```

                ```?annotations={["true"/"false"/]}``` If "true" components having "isAnnotation" property as true are "only" returned, If false all components except "annotations" are returned. Any other value of the query parameter results in both annoations as well as non-annotation components being returned.
            operationId: idGetMeshmodelComponentsByNameByModelByCategory
            responses:
                "200":
                    $ref: '#/responses/meshmodelComponentsDuplicateResponseWrapper'
            summary: Handle GET request for getting meshmodel components of a specific type by model and category.
            tags:
                - GetMeshmodelComponentsByNameByModelByCategory
    /api/meshmodels/components:
        get:
            description: |-
                # Components can be further filtered through query parameter

                ```?version={version}```

                ```?apiVersion={apiVersion}``` If apiVersion is unspecified then all models are returned

                ```?order={field}``` orders on the passed field

                ```?search={componentname}``` If search is non empty then a greedy search is performed

                ```?trim={[true]}``` When trim is set to true, the underlying schemas are not returned for entities

                ```?sort={[asc/desc]}``` Default behavior is asc

                ```?page={page-number}``` Default page number is 1

                ```?pagesize={pagesize}``` Default pagesize is 25. To return all results: ```pagesize=all```

                ```?annotations={["true"/"false"/]}``` If "true" components having "isAnnotation" property as true are "only" returned, If false all components except "annotations" are returned. Any other value of the query parameter results in both annoations as well as non-annotation components being returned.
            operationId: idGetAllMeshmodelComponents
            responses:
                "200":
                    $ref: '#/responses/meshmodelComponentsDuplicateResponseWrapper'
            summary: Handle GET request for getting meshmodel components across all models and categories
            tags:
                - GetAllMeshmodelComponents
    /api/meshmodels/components/{name}:
        get:
            description: |-
                Example: ```/api/meshmodels/components/Namespace```
                Components can be further filtered through query parameter

                ```?model={model}``` If model is unspecified then all models are returned

                ```?version={version}``` If version is unspecified then all model versions are returned

                ```?apiVersion={apiVersion}``` If apiVersion is unspecified then all components are returned

                ```?order={field}``` orders on the passed field

                ```?sort={[asc/desc]}``` Default behavior is asc

                ```?trim={[true]}``` When trim is set to true, the underlying schemas are not returned for entities

                ```?search={[true/false]}``` If search is true then a greedy search is performed

                ```?page={page-number}``` Default page number is 1

                ```?pagesize={pagesize}``` Default pagesize is 25. To return all results: ```pagesize=all```

                ```?annotations={["true"/"false"/]}``` If "true" components having "isAnnotation" property as true are "only" returned, If false all components except "annotations" are returned. Any other value of the query parameter results in both annoations as well as non-annotation components being returned.
            operationId: idGetAllMeshmodelComponentsByName
            responses:
                "200":
                    $ref: '#/responses/meshmodelComponentsDuplicateResponseWrapper'
            summary: Handle GET request for getting meshmodel components of a specific type by name across all models and categories
            tags:
                - GetAllMeshmodelComponentsByName
    /api/meshmodels/export:
        get:
            description: |-
                # Export model with the given id in the output format specified

                ```?id={id}```
                ```?output_format={output_format}``` Can be `json`, `yaml`, or `oci`. Default is `oci`
            operationId: idExportModel
            responses:
                "200":
                    $ref: '#/responses/byte'
            summary: Handle GET request for exporting a model.
            tags:
                - ExportModel
    /api/meshmodels/models:
        get:
            description: |-
                # Returns a list of registered models across all categories

                ```?version={version}``` If version is unspecified then all models are returned

                ```?order={field}``` orders on the passed field

                ```?search={modelname}``` If search is non empty then a greedy search is performed

                ```?sort={[asc/desc]}``` Default behavior is asc

                ```?page={page-number}``` Default page number is 1

                ```?pagesize={pagesize}``` Default pagesize is 25. To return all results: ```pagesize=all```
            operationId: idGetMeshmodelModels
            responses:
                "200":
                    $ref: '#/responses/meshmodelModelsDuplicateResponseWrapper'
            summary: Handle GET request for getting all meshmodel models
            tags:
                - GetMeshmodelModels
    /api/meshmodels/models/{model}:
        get:
            description: |-
                # Returns a list of registered models across all categories

                ```?version={version}``` If version is unspecified then all models are returned

                ```?order={field}``` orders on the passed field

                ```?search={[true/false]}``` If search is true then a greedy search is performed

                ```?sort={[asc/desc]}``` Default behavior is asc

                ```?page={page-number}``` Default page number is 1

                ```?pagesize={pagesize}``` Default pagesize is 25. To return all results: ```pagesize=all```
            operationId: idGetMeshmodelModelsByName
            responses:
                "200":
                    $ref: '#/responses/meshmodelModelsDuplicateResponseWrapper'
            summary: Handle GET request for getting all meshmodel models. The component type/model name should be lowercase like "kubernetes", "istio"
            tags:
                - GetMeshmodelModelsByName
    /api/meshmodels/models/{model}/components:
        get:
            description: |-
                Example: ```/api/meshmodels/models/kubernetes/components```
                Components can be further filtered through query parameter

                ```?version={version}```

                ```?trim={[true]}``` When trim is set to true, the underlying schemas are not returned for entities

                ```?apiVersion={apiVersion}``` If apiVersion is unspecified then all models are returned

                ```?search={componentname}``` If search is non empty then a greedy search is performed

                ```?order={field}``` orders on the passed field

                ```?sort={[asc/desc]}``` Default behavior is asc

                ```?page={page-number}``` Default page number is 1

                ```?pagesize={pagesize}``` Default pagesize is 25. To return all results: ```pagesize=all```

                ```?annotations={["true"/"false"/]}``` If "true" components having "isAnnotation" property as true are "only" returned, If false all components except "annotations" are returned. Any other value of the query parameter results in both annoations as well as non-annotation components being returned.
            operationId: idGetMeshmodelComponentByModel
            responses:
                "200":
                    $ref: '#/responses/meshmodelComponentsDuplicateResponseWrapper'
            summary: Handle GET request for getting meshmodel components of a specific model. The component type/model name should be lowercase like "kubernetes", "istio"
            tags:
                - GetMeshmodelComponentByModel
    /api/meshmodels/models/{model}/components/{name}:
        get:
            description: |-
                Example: ```/api/meshmodels/models/kubernetes/components/Namespace```
                Components can be further filtered through query parameter

                ```?version={version}``` If version is unspecified then all model versions are returned

                ```?apiVersion={apiVersion}``` If apiVersion is unspecified then all components are returned

                ```?order={field}``` orders on the passed field

                ```?sort={[asc/desc]}``` Default behavior is asc

                ```?search={[true/false]}``` If search is true then a greedy search is performed

                ```?page={page-number}``` Default page number is 1

                ```?pagesize={pagesize}``` Default pagesize is 25. To return all results: ```pagesize=all```

                ```?annotations={["true"/"false"/]}``` If "true" components having "isAnnotation" property as true are "only" returned, If false all components except "annotations" are returned. Any other value of the query parameter results in both annoations as well as non-annotation components being returned. returned.
            operationId: idGetMeshmodelComponentsByNameByModel
            responses:
                "200":
                    $ref: '#/responses/meshmodelComponentsDuplicateResponseWrapper'
            summary: Handle GET request for getting meshmodel components of a specific  model.
            tags:
                - GetMeshmodelComponentsByNameByModel
    /api/meshmodels/models/{model}/policies/:
        get:
            description: |-
                Example: ```/api/meshmodels/models/kubernetes/policies```

                ```?order={field}``` orders on the passed field

                ```?sort={[asc/desc]}``` Default behavior is asc

                ```?search={[true/false]}``` If search is true then a greedy search is performed

                ```?page={page-number}``` Default page number is 1

                ```?pagesize={pagesize}``` Default pagesize is 25. To return all results: ```pagesize=all```
            operationId: idGetMeshmodelPolicies
            responses:
                "200":
                    $ref: '#/responses/meshmodelPoliciesResponseWrapper'
            summary: Handle GET request for getting meshmodel policies of a specific model by name.
            tags:
                - GetMeshmodelPolicies
    /api/meshmodels/models/{model}/policies/{name}:
        get:
            description: |-
                Example: ```/api/meshmodels/models/kubernetes/policies/{name}```

                ```?order={field}``` orders on the passed field

                ```?sort={[asc/desc]}``` Default behavior is asc

                ```?search={[true/false]}``` If search is true then a greedy search is performed

                ```?page={page-number}``` Default page number is 1

                ```?pagesize={pagesize}``` Default pagesize is 25. To return all results: ```pagesize=all```
            operationId: idGetMeshmodelPoliciesByName
            responses:
                "200":
                    $ref: '#/responses/meshmodelPoliciesResponseWrapper'
            summary: Handle GET request for getting meshmodel policies of a specific model by name.
            tags:
                - GetMeshmodelPoliciesByName
    /api/meshmodels/models/{model}/relationships:
        get:
            description: |-
                Example: ```/api/meshmodel/model/kubernetes/relationship```

                # Relationships can be further filtered through query parameter

                ```?version={version}```

                ```?order={field}``` orders on the passed field

                ```?sort={[asc/desc]}``` Default behavior is asc

                ```?page={page-number}``` Default page number is 1

                ```?pagesize={pagesize}``` Default pagesize is 25. To return all results: ```pagesize=all```
            operationId: idGetAllMeshmodelRelationshipsByModel
            responses:
                "200":
                    $ref: '#/responses/meshmodelRelationshipsResponseWrapper'
            summary: Handle GET request for getting meshmodel relationships of a specific model
            tags:
                - GetAllMeshmodelRelationships
    /api/meshmodels/models/{model}/relationships/{name}:
        get:
            description: |-
                Example: ```/api/meshmodels/models/kubernetes/relationships/Edge```

                # Relationships can be further filtered through query parameter

                ```?version={version}```

                ```?order={field}``` orders on the passed field

                ```?sort={[asc/desc]}``` Default behavior is asc

                ```?search={[true/false]}``` If search is true then a greedy search is performed

                ```?page={page-number}``` Default page number is 1

                ```?pagesize={pagesize}``` Default pagesize is 25. To return all results: ```pagesize=all```
            operationId: idGetMeshmodelRelationshipByName
            responses:
                "200":
                    $ref: '#/responses/meshmodelRelationshipsResponseWrapper'
            summary: Handle GET request for getting meshmodel relationships of a specific model by name.
            tags:
                - GetMeshmodelRelationshipByName
    /api/meshmodels/register:
        post:
            description: Register model based on thier Schema Version.
            operationId: idRegisterMeshmodels
            responses:
                "200":
                    $ref: '#/responses/noContentWrapper'
            summary: Handle POST request for registering entites like components and relationships model.
            tags:
                - RegisterMeshmodels
    /api/meshmodels/registrants:
        get:
            description: |-
                # Returns a list of registrants and summary count of its models, components, and relationships

                ```?page={pagenumber}``` Default page number is 1

                ```?order={field}``` orders on the passed field

                ```?search={Hostname}``` Gets host by the name

                ```?sort={[asc/desc]}``` Default behavior is asc

                ```?pagesize={pagesize}``` Default pagesize is 25. To return all results: ```pagesize=all```
            operationId: GetMeshmodelRegistrants
            responses:
                "200":
                    $ref: '#/responses/meshmodelRegistrantsResponseWrapper'
            summary: Handle GET request for getting all meshmodel registrants
    /api/meshmodels/relationships:
        get:
            description: |-
                # Relationships can be further filtered through query parameter

                ```?version={version}```

                ```?order={field}``` orders on the passed field

                ```?sort={[asc/desc]}``` Default behavior is asc

                ```?page={page-number}``` Default page number is 1

                ```?pagesize={pagesize}``` Default pagesize is 25. To return all results: ```pagesize=all```
            operationId: idGetAllMeshmodelRelationships
            responses:
                "200":
                    $ref: '#/responses/meshmodelRelationshipsResponseWrapper'
            summary: Handle GET request for getting all meshmodel relationships
            tags:
                - GetAllMeshmodelRelationships
    /api/meshmodels/relationships/evaluate:
        post:
            description: Handle POST request for evaluating relationships in the provided design file by running a set of provided evaluation queries on the design file
            operationId: relationshipPolicyEvalPayloadWrapper
            responses: {}
            tags:
                - EvaluateRelationshipPolicy
    /api/pattern:
        get:
            description: |-
                Returns the list of all the patterns saved by the current user
                This will return all the patterns with their details

                ```?order={field}``` orders on the passed field

                ```?search=<design name>``` A string matching is done on the specified design name

                ```?page={page-number}``` Default page number is 1

                ```?pagesize={pagesize}``` Default pagesize is 10

                ```?visibility={[visibility]}``` Default visibility is public + private; Mulitple visibility filters can be passed as an array
                Eg: ```?visibility=["public", "published"]``` will return public and published designs

                ```?metrics``` Returns metrics like deployment/share/clone/view/download count for desings, default is false,

                ```?populate``` Add the design content to the response like pattern_file return design file content

                200: mesheryPatternsResponseWrapper
            operationId: idGetPatternFiles
            summary: Handle GET request for patterns
            tags:
                - PatternsAPI
        post:
            description: Edit/update a meshery pattern
            operationId: idPostPatternFile
            responses:
                "200":
                    $ref: '#/responses/mesheryPatternResponseWrapper'
            summary: Handle POST requests for patterns
            tags:
                - PatternsAPI
    /api/pattern/{id}:
        delete:
            description: DeleteMultiMesheryPatternsHandler deletes patterns with the given ids
            operationId: idDeleteMesheryPattern
            parameters:
                - description: id for a specific
                  format: uuid
                  in: path
                  name: id
                  required: true
                  type: string
                  x-go-name: ID
            responses:
                "200":
                    $ref: '#/responses/noContentWrapper'
            summary: Handle Delete for multiple Meshery Patterns
            tags:
                - PatternsAPI
        get:
            description: |-
                ```?metrics``` Returns metrics like deployment/share/clone/view/download count for desings, default false,

                Fetches the pattern with the given id
            operationId: idGetMesheryPattern
            parameters:
                - description: id for a specific
                  format: uuid
                  in: path
                  name: id
                  required: true
                  type: string
                  x-go-name: ID
            responses:
                "200":
                    $ref: '#/responses/mesheryPatternResponseWrapper'
            summary: Handle GET for a Meshery Pattern
            tags:
                - PatternsAPI
    /api/pattern/{sourcetype}:
        post:
            description: Creates a new Pattern with source-content
            operationId: idPostPatternFileRequest
            responses:
                "200":
                    $ref: '#/responses/mesheryPatternResponseWrapper'
            summary: Handle POST request for Pattern Files
            tags:
                - PatternsAPI
        put:
            description: Updates the pattern with the given payload
            operationId: idUpdateMesheryPattern
            responses:
                "200":
                    $ref: '#/responses/mesheryPatternResponseWrapper'
            summary: Handle PUT request for Meshery Pattern with the given payload
            tags:
                - PatternsAPI
    /api/pattern/catalog:
        get:
            description: |-
                # Patterns can be further filtered through query parameter

                ```?order={field}``` orders on the passed field

                ```?page={page-number}``` Default page number is 0

                ```?pagesize={pagesize}``` Default pagesize is 10.

                ```?search={patternname}``` If search is non empty then a greedy search is performed

                ```?metrics``` Returns metrics like deployment/share/clone/view/download count for designs, default false,

                ```?class={class}``` Filters patterns based on class

                ```?technology={technology}``` Filters patterns based on technology

                ```?type={type}``` Filters patterns based on type

                ```?orgID={orgID}``` Filters patterns based on organization ID

                ```?workspaceID={workspaceID}``` Filter patterns based on workspace ID

                ```?userid={userid}``` Filters patterns based on user ID
            operationId: idGetCatalogMesheryPatternsHandler
            responses:
                "200":
                    $ref: '#/responses/mesheryPatternsResponseWrapper'
            summary: Handle GET request for catalog patterns
            tags:
                - PatternsAPI
    /api/pattern/catalog/publish:
        post:
            description: Publishes pattern to Meshery Catalog by setting visibility to published and setting catalog data
            operationId: idPublishCatalogPatternHandler
            responses:
                "202":
                    $ref: '#/responses/noContentWrapper'
            summary: Handle Publish for a Meshery Pattern
            tags:
                - PatternsAPI
    /api/pattern/catalog/unpublish:
        delete:
            description: Unpublishes pattern from Meshery Catalog by setting visibility to private and removing catalog data from website
            operationId: idUnPublishCatalogPatternHandler
            responses:
                "200":
                    $ref: '#/responses/noContentWrapper'
            summary: Handle Publish for a Meshery Pattern
            tags:
                - PatternsAPI
    /api/pattern/clone/{id}:
        post:
            description: 'Creates a local copy of a published pattern with id: id'
            operationId: idCloneMesheryPattern
            responses:
                "200":
                    $ref: '#/responses/noContentWrapper'
            summary: Handle Clone for a Meshery Pattern
            tags:
                - PatternsAPI
    /api/pattern/deploy:
        delete:
            description: Delete a deployed pattern with the request
            operationId: idDeleteDeployPattern
            responses:
                "200":
                    description: ""
            summary: Handle DELETE request for Pattern Deploy
            tags:
                - PatternsAPI
        post:
            description: Deploy an attached pattern with the request
            operationId: idPostDeployPattern
            parameters:
                - in: formData
                  name: Upload Yaml/Yml File
                  type: file
                  x-go-name: FormFile
            responses:
                "200":
                    description: ""
            summary: Handle POST request for Pattern Deploy
            tags:
                - PatternsAPI
    /api/pattern/download/{id}:
        get:
            description: |-
                ```?metrics``` Returns metrics like deployment/share/clone/view/download count for desings, default false,

                Fetches the pattern with the given id
            operationId: idGetMesheryPattern
            parameters:
                - description: id for a specific
                  format: uuid
                  in: path
                  name: id
                  required: true
                  type: string
                  x-go-name: ID
            responses:
                "200":
                    $ref: '#/responses/mesheryPatternResponseWrapper'
            summary: Handle GET for a Meshery Pattern
            tags:
                - PatternsAPI
    /api/pattern/download/{id}/{sourcetype}:
        get:
            description: Get the pattern source-content
            operationId: typeGetPatternSourceContent
            responses:
                "200":
                    $ref: '#/responses/mesheryPatternSourceContentResponseWrapper'
            summary: Handle GET request for Meshery Patterns with of source content
            tags:
                - PatternsAPI
    /api/pattern/types:
        get:
            description: Get pattern file types
            operationId: typeGetMesheryPatternTypesHandler
            responses:
                "200":
                    $ref: '#/responses/mesheryApplicationTypesResponseWrapper'
            summary: Handle GET request for Meshery Pattern types
            tags:
                - PatternsAPI
    /api/patterns:
        delete:
            description: DeleteMultiMesheryPatternsHandler deletes patterns with the given ids
            operationId: idDeleteMesheryPattern
            parameters:
                - description: id for a specific
                  format: uuid
                  in: path
                  name: id
                  required: true
                  type: string
                  x-go-name: ID
            responses:
                "200":
                    $ref: '#/responses/noContentWrapper'
            summary: Handle Delete for multiple Meshery Patterns
            tags:
                - PatternsAPI
    /api/perf/profile:
        get:
            description: Runs the load test with the given parameters
            operationId: idRunPerfTest
            parameters:
                - $ref: '#/definitions/PerformanceTestParameters'
                  in: query
                  name: Query
                - in: body
                  name: Body
                  schema:
                    $ref: '#/definitions/PerformanceTestConfig'
            responses:
                "200":
                    description: ""
            summary: Handle GET request to run a test
            tags:
                - PerfAPI
    /api/perf/profile/result:
        get:
            description: |-
                # Results can be further filtered through query parameter

                ```?order={field}``` orders on the passed field

                ```?page={page-number}``` Default page number is 0

                ```?pagesize={pagesize}``` Default pagesize is 10

                ```?search={}``` If search is non empty then a greedy search is performed

                ```?from={date}``` Date must be in yyyy-mm-dd format

                ```?to={date}``` Date must be in yyyy-mm-dd format
            operationId: idGetAllPerfResults
            responses:
                "200":
                    $ref: '#/responses/performanceResultsResponseWrapper'
            summary: Handles GET requests for perf results
            tags:
                - PerfAPI
    /api/perf/profile/result/{id}:
        get:
            description: Returns an individual result from provider
            operationId: idGetSinglePerfResult
            responses:
                "200":
                    $ref: '#/responses/perfSingleResultRespWrapper'
            summary: Handles GET requests for perf result
            tags:
                - PerfAPI
    /api/provider:
        get:
            description: Update the choice of provider in system
            operationId: idChoiceProvider
            parameters:
                - in: query
                  name: provider
                  type: string
                  x-go-name: Provider
            responses:
                "200":
                    description: ""
            summary: Handle GET request for the choice of provider
            tags:
                - ProvidersAPI
    /api/provider/capabilities:
        get:
            description: Returns the capabilities.json for the provider
            operationId: idGetProviderCapabilities
            responses:
                "200":
                    description: ""
            summary: Handle GET requests for Provider
            tags:
                - ProvidersAPI
    /api/provider/extension:
        get:
            description: handles the requests to serve react components from the provider package
            operationId: idReactComponents
            responses:
                "200":
                    description: ""
            summary: Handle GET request for React Components
            tags:
                - ProvidersAPI
    /api/providers:
        get:
            description: Returns the available list of providers
            operationId: idGetProvidersList
            responses:
                "200":
                    $ref: '#/responses/listProvidersRespWrapper'
            summary: Handle GET request for list of providers
            tags:
                - ProvidersAPI
    /api/schema/resource/{resourceName}:
        get:
            operationId: HandleResourceSchemas
            responses: {}
            summary: Handles the request to retrieve and merge resource JSON schema and UI schema.
    /api/smi/results:
        get:
            description: |-
                # Results can be further filtered through query parameter

                ```?order={field}``` orders on the passed field

                ```?page={page-number}``` Default page number is 0

                ```?pagesize={pagesize}``` Default pagesize is 10

                ```?search={status|mesh_version|mesh_name|date|id}``` If search is non empty then a greedy search is performed
            operationId: idFetchSmiResults
            responses:
                "200":
                    $ref: '#/responses/smiResultsResponseWrapper'
            summary: Handle GET request for the results of all the smi conformance tests
            tags:
                - Smi
    /api/system/adapter/manage:
        delete:
            description: Used to delete adapter configuration
            operationId: idDeleteAdapterConfig
            parameters:
                - in: query
                  name: adapter
                  type: string
                  x-go-name: Adapter
            responses:
                "200":
                    description: ""
            summary: Handle DELETE requests to delete adapter config
            tags:
                - SystemAPI
        post:
            description: Used to persist adapter config
            operationId: idPostAdapterConfig
            parameters:
                - in: body
                  name: meshLocationURL
                  schema:
                    type: string
                  x-go-name: MeshLocationURL
            responses:
                "200":
                    $ref: '#/responses/mesheryAdaptersRespWrapper'
            summary: Handle POST requests to persist adapter config
            tags:
                - SystemAPI
    /api/system/adapter/operation:
        post:
            description: Used to send operations to the adapters
            operationId: idPostAdapterOperation
            parameters:
                - in: query
                  name: adapter
                  type: string
                  x-go-name: Adapter
                - in: query
                  name: query
                  type: string
                  x-go-name: Query
                - in: query
                  name: customBody
                  type: string
                  x-go-name: CustomBody
                - in: query
                  name: namespace
                  type: string
                  x-go-name: Namespace
                - in: query
                  name: deleteOp
                  type: string
                  x-go-name: Delete
            responses:
                "200":
                    description: ""
            summary: Handle POST requests for Adapter Operations
            tags:
                - SystemAPI
    /api/system/adapters:
        get:
            description: Fetches and returns all the adapters and ping adapters
            operationId: idGetSystemAdapters
            parameters:
                - in: query
                  name: adapter
                  type: string
                  x-go-name: Adapter
            responses:
                "200":
                    $ref: '#/responses/systemAdaptersRespWrapper'
            summary: Handle GET request for adapters
            tags:
                - SystemAPI
    /api/system/adapters/available:
        get:
            description: Fetches and returns all the adapters available for deployment
            operationId: idGetAvailableAdapters
            responses:
                "200":
                    $ref: '#/responses/systemAdaptersRespWrapper'
            summary: Handle GET request for available adapters
            tags:
                - SystemAPI
    /api/system/database:
        get:
            description: |-
                # Tables can be further filtered through query parameter

                ```?order={field}``` orders on the passed field

                ```?sort={[asc/desc]}``` Default behavior is asc

                ```?page={page-number}``` Default page number is 1

                ```?pagesize={pagesize}``` Default pagesize is 10. To return all results: ```pagesize=all```

                ```?search={tablename}``` If search is non empty then a greedy search is performed
            operationId: idGetSystemDatabase
            responses:
                "200":
                    $ref: '#/responses/systemDatabaseResponseWrapper'
            summary: Handle GET request for getting summary about the system database.
            tags:
                - GetSystemDatabase
    /api/system/database/reset:
        delete:
            description: |-
                This endpoint resets the system database to its initial state by performing the following steps:
                Creates an archive of the current database contents.
                Drops all existing tables in the database.
                Applies auto migration to recreate the necessary tables.
            operationId: ResetSystemDatabase
            responses:
                "200":
                    description: ""
                "500":
                    description: ""
            summary: Reset the system database to its initial state.
    /api/system/downloadFile:
        get:
            description: Retrieves and initiates a download for the specified file.
            operationId: idDownloadFile
            responses:
                "200":
                    description: ""
                "500":
                    description: ""
            summary: Handles GET request to download a file.
            tags:
                - system
                - downloadFile
    /api/system/events:
        get:
            description: Retrieves the current server log level and lists all available log levels.
            operationId: getLogLevel
            produces:
                - application/json
            responses:
                "200":
                    $ref: '#/responses/LogLevelResponse'
                    description: '      Successfully retrieved log level'
            summary: Get current logging configuration for the server events
            tags:
                - system
        post:
            description: |-
                Updates the server's logging level. The new level must be one of the available logging levels.
                Invalid log levels will result in a 400 Bad Request response.
            operationId: setLogLevel
            responses:
                "200":
                    $ref: '#/responses/LogLevelResponse'
                    description: '      Successfully updated log level'
                "400":
                    $ref: '#/responses/LogLevelResponse'
                    description: '      Invalid log level provided'
            summary: Set server event logging level
            tags:
                - system
    /api/system/kubernetes:
        delete:
            description: Used to delete kubernetes config to System
            operationId: idDeleteK8SConfig
            responses:
                "200":
                    description: ""
            summary: Handle DELETE request for Kubernetes Config
            tags:
                - SystemAPI
        post:
            description: Used to add kubernetes config to System
            operationId: idPostK8SConfig
            responses:
                "200":
                    $ref: '#/responses/k8sConfigRespWrapper'
            summary: Handle POST request for Kubernetes Config
            tags:
                - SystemAPI
    /api/system/kubernetes/contexts:
        get:
            description: |-
                # Contexts can be further filtered through query parameter

                ```?order={field}``` orders on the passed field

                ```?page={page-number}``` Default page number is 0

                ```?pagesize={pagesize}``` Default pagesize is 10

                ```?search={contextname}``` If search is non empty then a greedy search is performed
            operationId: idGetAllContexts
            responses:
                "200":
                    $ref: '#/responses/systemK8sContextsResponseWrapper'
            summary: Handle GET request for all kubernetes contexts.
            tags:
                - GetAllContexts
        post:
            description: Returns the context list for a given k8s config
            operationId: idPostK8SContexts
            responses:
                "200":
                    $ref: '#/responses/k8sContextsRespWrapper'
            summary: Handle POST requests for Kubernetes Context list
            tags:
                - SystemAPI
    /api/system/kubernetes/ping?connection_id={id}:
        get:
            description: Fetches server version to simulate ping
            operationId: idGetKubernetesPing
            responses:
                "200":
                    description: ""
            summary: Handle GET request for Kubernetes ping
            tags:
                - SystemAPI
    /api/system/kubernetes/register:
        post:
            description: Used to register Kubernetes components to Meshery from a kubeconfig file
            operationId: idPostK8SRegistration
            responses:
                "202":
                    description: ""
                "400":
                    description: ""
                "500":
                    description: ""
            summary: Handle registration request for Kubernetes components
            tags:
                - SystemAPI
    /api/system/meshsync/grafana:
        get:
            description: Fetches Prometheus and Grafana
            operationId: idMeshSyncGrafana
            responses:
                "200":
                    $ref: '#/responses/v1ServicesMapResponseWrapper'
            summary: Handle GET request for mesh-sync grafana
            tags:
                - SystemAPI
    /api/system/meshsync/prometheus:
        get:
            description: Fetches Prometheus
            operationId: idMeshSyncPrometheus
            responses:
                "200":
                    $ref: '#/responses/v1ServicesMapResponseWrapper'
            summary: Handle GET request for fetching prometheus
            tags:
                - SystemAPI
    /api/system/meshsync/resources:
        get:
            description: |-
                ```?apiVersion={apiVersion}``` If apiVersion is unspecified then all models are returned

                ```?search={componentname}``` If search is non empty then a greedy search is performed

                ```?order={field}``` orders on the passed field

                ```?sort={[asc/desc]}``` Default behavior is asc

                ```?page={page-number}``` Default page number is 1

                ```?pagesize={pagesize}``` Default pagesize is 25. To return all results: ```pagesize=all```

                ```?annotation={annotaion}``` annotation is a boolean value. If true then annotations are returned

                ```?labels={labels}``` labels is a boolean value. If true then labels are returned

                ```?spec={spec}``` spec is a boolean value. If true then spec is returned

                ```?status={status}``` status is a boolean value. If true then status is returned

                ```?clusterId={[clusterId]}``` clusterId is array of string values. Required.

                ```?asDesign={bool}``` asDesign is a boolean value. If true then the response is returned as a design and resources are omitted
            operationId: idGetMeshSyncResources
            responses:
                "200":
                    $ref: '#/responses/meshsyncResourcesResponseWrapper'
            summary: Handle GET request for meshsync discovered resources
            tags:
                - GetMeshSyncResources
    /api/system/meshsync/resources/summary:
        get:
            description: '```?clusterId={clusterId}``` clusterId is id of the cluster to get resources for ( multiple supported)'
            operationId: idGetMeshSyncResourcesSummary
            responses:
                "200":
                    $ref: '#/responses/meshsyncResourcesSummaryResponseWrapper'
            summary: Handle GET request for meshsync discovered resources
            tags:
                - GetMeshSyncResourcesSummary
    /api/system/sync:
        get:
            description: Used to send session data to the UI for initial sync
            operationId: idSystemSync
            responses:
                "200":
                    $ref: '#/responses/userLoadTestPrefsRespWrapper'
            summary: Handle GET request for config sync
            tags:
                - SystemAPI
    /api/system/version:
        get:
            description: Returns the running Meshery version
            operationId: idGetSystemVersion
            responses:
                "200":
                    $ref: '#/responses/mesheryVersionRespWrapper'
            summary: Handle GET request for system/server version
            tags:
                - SystemAPI
    /api/system/viewFile:
        get:
            description: Retrieves and displays the content of the specified file as plain text.
            operationId: idFileViewer
            responses:
                "200":
                    description: ""
                "500":
                    description: ""
            summary: Handles GET request to view a file.
            tags:
                - system
                - viewFile
    /api/telemetry/metrics/board_import:
        post:
            description: Used for importing Grafana board for Prometheus
            operationId: idPostPrometheusBoardImport
            responses:
                "200":
                    $ref: '#/responses/prometheusBoardImportRespWrapper'
            summary: Handle POST request for Prometheus board import
            tags:
                - PrometheusAPI
    /api/telemetry/metrics/boards/{connectionID}:
        post:
            description: Used to persist selected board and panels
            operationId: idPostPrometheusBoard
            parameters:
                - in: body
                  name: Body
                  required: true
                  schema:
                    items:
                        $ref: '#/definitions/SelectedGrafanaConfig'
                    type: array
            responses:
                "200":
                    description: ""
            summary: Handle POST request for Prometheus board
            tags:
                - PrometheusAPI
    /api/telemetry/metrics/config:
        delete:
            description: Used for deleting Prometheus configuration
            operationId: idDeletePrometheusConfig
            responses:
                "200":
                    description: ""
            summary: Handle DELETE for Prometheus configuration
            tags:
                - PrometheusAPI
        get:
            description: Used for fetching Prometheus configuration
            operationId: idGetPrometheusConfig
            responses:
                "200":
                    $ref: '#/responses/prometheusConfigResponseWrapper'
            summary: Handle GET for Prometheus configuration
            tags:
                - PrometheusAPI
        post:
            description: Used for persisting Prometheus configuration
            operationId: idPostPrometheusConfig
            parameters:
                - in: body
                  name: prometheusURL
                  schema:
                    type: string
                  x-go-name: PrometheusURL
            responses:
                "200":
                    description: ""
            summary: Handle POST for Prometheus configuration
            tags:
                - PrometheusAPI
    /api/telemetry/metrics/grafana/boards/{connectionID}:
        get:
            description: Used for fetching Grafana boards and panels
            operationId: idGetGrafanaBoards
            parameters:
                - in: query
                  name: dashboardSearch
                  type: string
                  x-go-name: DashboardSearch
            responses:
                "200":
                    $ref: '#/responses/grafanaBoardsResponseWrapper'
            summary: Handle GET request for Grafana boards
            tags:
                - GrafanaAPI
        post:
            description: Used for persist Grafana boards and panel selections
            operationId: idPostGrafanaBoards
            responses:
                "200":
                    description: ""
            summary: Handle POST request for Grafana boards
            tags:
                - GrafanaAPI
    /api/telemetry/metrics/grafana/config:
        delete:
            description: Used for Delete Grafana configuration
            operationId: idDeleteGrafanaConfig
            responses:
                "200":
                    description: ""
            summary: Handle DELETE request for Grafana configuration
            tags:
                - GrafanaAPI
        get:
            description: Used for fetching Grafana configuration
            operationId: idGetGrafanaConfig
            responses:
                "200":
                    $ref: '#/responses/grafanaConfigResponseWrapper'
            summary: Handle GET request for Grafana configuration
            tags:
                - GrafanaAPI
        post:
            description: Used for persisting Grafana configuration
            operationId: idPostGrafanaConfig
            parameters:
                - in: body
                  name: Body
                  required: true
                  schema:
                    $ref: '#/definitions/GrafanaConfigParams'
            responses:
                "200":
                    description: ""
            summary: Handle POST request for Grafana configuration
            tags:
                - GrafanaAPI
    /api/telemetry/metrics/grafana/ping/{connectionID}:
        get:
            description: Used to initiate a Grafana ping
            operationId: idGetGrafanaPing
            responses:
                "200":
                    description: ""
            summary: Handle GET request for Grafana ping
            tags:
                - GrafanaAPI
    /api/telemetry/metrics/grafana/query/{connectionID}:
        get:
            description: Used for handling Grafana queries
            operationId: idGetGrafanaQuery
            responses:
                "200":
                    description: ""
            summary: Handle GET request for Grafana queries
            tags:
                - GrafanaAPI
    /api/telemetry/metrics/grafana/scan:
        get:
            description: Fetches and returns Grafana
            operationId: idGetGrafana
            responses:
                "200":
                    $ref: '#/responses/v1ServicesMapResponseWrapper'
            summary: Handle GET request for Grafana
            tags:
                - GrafanaAPI
    /api/telemetry/metrics/ping/{connectionID}:
        get:
            description: Used to ping prometheus
            operationId: idGetPrometheusPing
            responses:
                "200":
                    description: ""
            summary: Handle GET request for Prometheus Ping
            tags:
                - PrometheusAPI
    /api/telemetry/metrics/query/{connectionID}:
        get:
            description: Used to prometheus queries
            operationId: idGetPrometheusQuery
            responses:
                "200":
                    description: ""
            summary: Handle GET request for Prometheus Query
            tags:
                - PrometheusAPI
    /api/telemetry/metrics/static-board:
        get:
            description: Used to fetch the static board
            operationId: idGetPrometheusStaticBoard
            responses:
                "200":
                    $ref: '#/responses/prometheusStaticBoardRespWrapper'
            summary: Handle GET request for Prometheus static board
            tags:
                - PrometheusAPI
    /api/user/login:
        get:
            description: Redirects user for auth or issues session
            operationId: idGetUserLogin
            responses:
                "200":
                    description: ""
            summary: Handlers GET request for User login
            tags:
                - UserAPI
    /api/user/logout:
        get:
            description: Redirects user for auth or issues session
            operationId: idGetUserLogout
            responses:
                "200":
                    description: ""
            summary: Handlers GET request for User logout
            tags:
                - UserAPI
    /api/user/performance/profiles:
        get:
            description: |-
                Returns the list of all the performance profiles saved by the current user

                ```?order={field}``` orders on the passed field

                ```?page={page-number}``` Default page number is 0

                ```?pagesize={pagesize}``` Default pagesize is 10

                ```?search={profilename}``` If search is non empty then a greedy search is performed
            operationId: idGetPerformanceProfiles
            responses:
                "200":
                    $ref: '#/responses/performanceProfilesResponseWrapper'
            summary: Handle GET requests for performance profiles
            tags:
                - PerformanceAPI
        post:
            description: Save performance profile using the current provider's persistence mechanism
            operationId: idSavePerformanceProfile
            parameters:
                - in: body
                  name: Body
                  schema:
                    $ref: '#/definitions/PerformanceProfileParameters'
            responses:
                "200":
                    $ref: '#/responses/performanceProfileResponseWrapper'
            summary: Handle POST requests for saving performance profile
            tags:
                - PerformanceAPI
    /api/user/performance/profiles/{id}:
        delete:
            description: Deletes a performance profile with the given id
            operationId: idDeletePerformanceProfile
            parameters:
                - description: id for a specific
                  format: uuid
                  in: path
                  name: id
                  required: true
                  type: string
                  x-go-name: ID
            responses:
                "200":
                    $ref: '#/responses/noContentWrapper'
            summary: Handle Delete requests for performance profiles
            tags:
                - PerformanceAPI
        get:
            description: Returns single performance profile with the given id
            operationId: idGetSinglePerformanceProfile
            parameters:
                - description: id for a specific
                  format: uuid
                  in: path
                  name: id
                  required: true
                  type: string
                  x-go-name: ID
            responses:
                "200":
                    $ref: '#/responses/performanceProfileResponseWrapper'
            summary: Handle GET requests for performance results of a profile
            tags:
                - PerformanceAPI
    /api/user/performance/profiles/{id}/results:
        get:
            description: |-
                Fetches pages of results from provider for the given id

                ```?order={field}``` orders on the passed field

                ```?page={page-number}``` Default page number is 0

                ```?pagesize={pagesize}``` Default pagesize is 10

                ```?search={result_name|mesh|url}``` If search is non empty then a greedy search is performed
            operationId: idGETProfileResults
            parameters:
                - description: id for a specific
                  format: uuid
                  in: path
                  name: id
                  required: true
                  type: string
                  x-go-name: ID
            responses:
                "200":
                    $ref: '#/responses/performanceResultsResponseWrapper'
            summary: Handle GET request for results of a profile
            tags:
                - PerformanceAPI
    /api/user/performance/profiles/{id}/run:
        get:
            description: Runs the load test with the given parameters
            operationId: idRunPerformanceTest
            parameters:
                - $ref: '#/definitions/PerformanceTestParameters'
                  in: query
                  name: Body
            responses:
                "200":
                    description: ""
            summary: Handle GET request to run a performance test
            tags:
                - PerformanceAPI
    /api/user/performance/profiles/results:
        get:
            description: |-
                # Results can be further filtered through query parameter

                ```?order={field}``` orders on the passed field

                ```?page={page-number}``` Default page number is 0

                ```?pagesize={pagesize}``` Default pagesize is 10

                ```?search={}``` If search is non empty then a greedy search is performed

                ```?from={date}``` Date must be in yyyy-mm-dd format

                ```?to={date}``` Date must be in yyyy-mm-dd format
            operationId: idGetAllPerformanceResults
            responses:
                "200":
                    $ref: '#/responses/performanceResultsResponseWrapper'
            summary: Handles GET requests for performance results
            tags:
                - PerformanceAPI
    /api/user/prefs:
        get:
            description: Returns User Load Test Preferences
            operationId: idGetUserTestPrefs
            responses:
                "200":
                    $ref: '#/responses/userLoadTestPrefsRespWrapper'
            summary: Handle GET Requests for User Load Test Preferences
            tags:
                - UserAPI
        post:
            description: Updates User Load Test Preferences
            operationId: idPostUserTestPrefs
            responses:
                "200":
                    $ref: '#/responses/userLoadTestPrefsRespWrapper'
            summary: Handle POST Requests for User Load Test Preferences
            tags:
                - UserAPI
    /api/user/prefs/perf:
        delete:
            description: Used for deleting load test preferences
            operationId: idDeleteLoadPreferences
            parameters:
                - format: uuid
                  in: query
                  name: uuid
                  type: string
                  x-go-name: UUID
            responses:
                "200":
                    description: ""
            summary: Handle DELETE request for load test preferences
            tags:
                - UserAPI
        get:
            description: Used for fetching load test preferences
            operationId: idGetLoadPreferences
            parameters:
                - format: uuid
                  in: query
                  name: uuid
                  type: string
                  x-go-name: UUID
            responses:
                "200":
                    $ref: '#/responses/loadTestPreferencesWrapper'
            summary: Handle GET request for load test preferences
            tags:
                - UserAPI
        post:
            description: Used for persisting load test preferences
            operationId: idPostLoadPreferences
            parameters:
                - in: body
                  name: Body
                  schema:
                    $ref: '#/definitions/PerformanceTestConfig'
            responses:
                "200":
                    description: ""
            summary: Handle POST request for load test preferences
            tags:
                - UserAPI
    /api/user/profile/{id}:
        get:
            description: Returns User info
            operationId: idGetUserByIDHandler
            responses:
                "200":
                    $ref: '#/responses/userInfo'
            summary: Handle GET for User info by ID
            tags:
                - UserAPI
    /api/user/schedules:
        get:
            description: |-
                # Returns the list of all the schedules saved by the current user

                ```?order={field}``` orders on the passed field

                ```?page={page-number}``` Default page number is 0

                ```?pagesize={pagesize}``` Default pagesize is 10
            operationId: idGetSchedules
            responses:
                "200":
                    $ref: '#/responses/schedulesResponseWrapper'
            summary: Handle GET request for Schedules
            tags:
                - SchedulesAPI
        post:
            description: Save schedule using the current provider's persistence mechanism
            operationId: idPostSchedules
            responses:
                "200":
                    $ref: '#/responses/singleScheduleResponseWrapper'
            summary: Handle POST request for Schedules
            tags:
                - SchedulesAPI
    /api/user/schedules/{id}:
        delete:
            description: Deletes a schedule with the given id
            operationId: idDeleteSchedules
            parameters:
                - description: id for a specific
                  format: uuid
                  in: path
                  name: id
                  required: true
                  type: string
                  x-go-name: ID
            responses:
                "200":
                    $ref: '#/responses/schedulesResponseWrapper'
            summary: Handle DELETE request for Schedules
            tags:
                - SchedulesAPI
        get:
            description: Fetches and returns the schedule with the given id
            operationId: idGetSingleSchedule
            parameters:
                - description: id for a specific
                  format: uuid
                  in: path
                  name: id
                  required: true
                  type: string
                  x-go-name: ID
            responses:
                "200":
                    $ref: '#/responses/singleScheduleResponseWrapper'
            summary: Handle GET request for Schedules
            tags:
                - SchedulesAPI
    /api/user/token:
        get:
            description: |-
                Returns token from the actual provider in a file
                response:
                200:
            operationId: idGetTokenProvider
            summary: Handle GET request for tokens
            tags:
                - UserAPI
        post:
            description: |-
                Receives token from the actual provider
                response:
                200:
            operationId: idPostTokenProvider
            summary: Handle POST request for tokens
            tags:
                - UserAPI
    /api/v2/events:
        get:
            description: |-
                ```search={description}``` If search is non empty then a search is performed on event description
                ```?category=[eventcategory] Returns event belonging to provided categories ```
                ```?action=[eventaction] Returns events belonging to provided actions ```
                ```?status={[read/unread]}``` Return events filtered on event status Default is unread````
                ```?severity=[eventseverity] Returns events belonging to provided severities ```
                ```?sort={field} order the records based on passed field, defaults to updated_at```
                ```?order={[asc/desc]}``` Default behavior is desc
                ```?page={page-number}``` Default page number is 0
                ```?pagesize={pagesize}``` Default pagesize is 25. To return all results: ```pagesize=all```
            operationId: idGetEventStreamer
            responses:
                "200":
                    $ref: '#/responses/eventsResponseWrapper'
            summary: Handle GET request for events.
            tags:
                - EventsAPI
    /api/workspaces:
        get:
            description: |4-
                ```?order={field}``` orders on the passed field

                ```?page={page-number}``` Default page number is 0

                ```?pagesize={pagesize}``` Default pagesize is 20

                ```?search={name}``` If search is non empty then a greedy search is performed

                ```?orgID={orgid}``` orgID is used to retrieve workspaces belonging to a particular org *required*

                ```?filter={condition}```
            operationId: idGetWorkspaces
            responses:
                "200":
                    $ref: '#/responses/workspacesResponseWrapper'
            summary: Handles GET for all Workspaces
            tags:
                - WorkspacesAPI
        post:
            description: Creates a new workspace
            operationId: idSaveWorkspace
            responses:
                "201":
                    $ref: '#/responses/workspaceResponseWrapper'
            summary: Handle POST request for creating a new workspace
            tags:
                - PostWorkspace
    /api/workspaces/{id}:
        delete:
            description: Deletes a workspace
            operationId: idDeleteWorkspaceHandler
            responses:
                "201":
                    $ref: '#/responses/workspaceResponseWrapper'
            summary: Handle DELETE for Workspace based on ID
            tags:
                - WorkspaceAPI
        get:
            description: |-
                ```?orgID={orgid}``` orgID is used to retrieve workspaces belonging to a particular org

                Returns Workspace info
            operationId: idGetWorkspacesByIdHandler
            responses:
                "200":
                    $ref: '#/responses/workspaceResponseWrapper'
            summary: Handle GET for Workspace info by ID
            tags:
                - WorkspacesAPI
        put:
            description: Updates a workspace
            operationId: idUpdateWorkspaceHandler
            responses:
                "200":
                    $ref: '#/responses/workspaceResponseWrapper'
            summary: Handle PUT request for updating a workspace
            tags:
                - PostWorkspace
    /api/workspaces/{id}/designs:
        get:
            description: |-
                ```?order={field}``` orders on the passed field

                ```?page={page-number}``` Default page number is 0

                ```?pagesize={pagesize}``` Default pagesize is 20

                ```?search={name}``` If search is non empty then a greedy search is performed

                ```?filter={{"assigned": true/false, "deleted_at": true/false}}``` defaults to assigned: false, deleted_at: false
            operationId: idGetWorkspaceMesheryDesigns
            responses:
                "200":
                    $ref: '#/responses/mesheryPatternsResponseWrapper'
            summary: Handles GET for all Meshery Designs in a Workspace
            tags:
                - WorkspacesAPI
    /api/workspaces/{id}/designs/{designID}:
        delete:
            description: Removes a meshery design from a workspace
            operationId: idRemoveMesheryDesignFromWorkspace
            responses:
                "201":
                    $ref: '#/responses/workspaceDesignsMappingResponseWrapper'
            summary: Handle DELETE request for removing a meshery design from a workspace
            tags:
                - WorkspacesAPI
        post:
            description: Adds a meshery design to a workspace
            operationId: idAddMesheryDesignToWorkspace
            responses:
                "201":
                    $ref: '#/responses/workspaceDesignsMappingResponseWrapper'
            summary: Handle POST request for adding a meshery design to a workspace
            tags:
                - WorkspacesAPI
    /api/workspaces/{id}/environments:
        get:
            description: |-
                ```?order={field}``` orders on the passed field

                ```?page={page-number}``` Default page number is 0

                ```?pagesize={pagesize}``` Default pagesize is 20

                ```?search={name}``` If search is non empty then a greedy search is performed

                ```?orgID={orgid}``` orgID is used to retrieve workspaces belonging to a particular org *required*

                ```?filter={{"assigned": true/false, "deleted_at": true/false}}``` defaults to assigned: false, deleted_at: false
            operationId: idGetWorkspaceEnvironments
            responses:
                "200":
                    $ref: '#/responses/environmentsResponseWrapper'
            summary: Handles GET for all Environments in a Workspace
            tags:
                - WorkspacesAPI
    /api/workspaces/{id}/environments/{environmentID}:
        delete:
            description: Removes an environment from a workspace
            operationId: idRemoveEnvironmentFromWorkspace
            responses:
                "201":
                    $ref: '#/responses/workspaceEnvironmentsMappingResponseWrapper'
            summary: Handle DELETE request for removing an environment from a workspace
            tags:
                - WorkspacesAPI
        post:
            description: Adds an environment to a workspace
            operationId: idAddEnvironmentToWorkspace
            responses:
                "201":
                    $ref: '#/responses/workspaceEnvironmentsMappingResponseWrapper'
            summary: Handle POST request for adding an environment to a workspace
            tags:
                - WorkspacesAPI
    /provider:
        get:
            description: Servers providers UI
            operationId: idProvider
            responses:
                "200":
                    description: ""
            summary: Handle GET request to provider UI
            tags:
                - ProvidersAPI
produces:
    - application/json
responses:
    Connection:
        description: ""
        headers:
            created_at:
                format: date-time
                type: string
            credential_id:
                format: uuid
                type: string
            deleted_at: {}
            environments:
                items:
                    $ref: '#/definitions/EnvironmentData'
                type: array
            id:
                format: uuid
                type: string
            kind:
                type: string
            metadata: {}
            name:
                type: string
            status: {}
            sub_type:
                type: string
            type:
                type: string
            updated_at:
                format: date-time
                type: string
            user_id:
                format: uuid
                type: string
        schema:
            $ref: '#/definitions/NullTime'
    ConnectionPage:
        description: ""
        headers:
            connections:
                items:
                    $ref: '#/definitions/Connection'
                type: array
            page:
                format: int64
                type: integer
            page_size:
                format: int64
                type: integer
            total_count:
                format: int64
                type: integer
    ConnectionStatus:
        description: ""
        schema:
            type: string
    ConnectionsStatusPage:
        description: ""
        headers:
            connections_status:
                items:
                    $ref: '#/definitions/ConnectionStatusInfo'
                type: array
    EventsResponse:
        description: ""
        headers:
            count_by_severity_level:
                items:
                    $ref: '#/definitions/CountBySeverityLevel'
                type: array
            events:
                items:
                    $ref: '#/definitions/Event'
                type: array
            page:
                format: int64
                type: integer
            page_size:
                format: int64
                type: integer
            total_count:
                format: int64
                type: integer
    FilterFilesResponseWrapper:
        description: Returns the response of the Filter files
        schema:
            $ref: '#/definitions/MesheryFilter'
    LogLevelResponse:
        description: LogLevelResponse represents the response structure for log level operations
        headers:
            available_levels:
                description: List of available logging levels
                example:
                    - panic
                    - fatal
                    - error
                    - warn
                    - info
                    - debug
                    - trace
                items:
                    type: string
                type: array
            event_log_level:
                description: Current log level of the server
                example: info
                type: string
            status:
                description: Status of the operation (success/error)
                example: success/error
                type: string
    PolicyDefinition:
        description: ""
        headers:
            expression: {}
            kind:
                type: string
            model: {}
            subType:
                type: string
            version:
                type: string
        schema:
            $ref: '#/definitions/ModelDefinition'
            additionalProperties: {}
            type: object
    applicationFilesResponseWrapper:
        description: Returns the response of the application files
        schema:
            $ref: '#/definitions/MesheryApplication'
    environmentResponseWrapper:
        description: Returns environment
        schema:
            $ref: '#/definitions/EnvironmentData'
    environmentsResponseWrapper:
        description: Returns all environements
        schema:
            $ref: '#/definitions/EnvironmentPage'
    eventResponseWrapper:
        description: Returns event
        schema:
            $ref: '#/definitions/Event'
    eventsResponseWrapper:
        description: Returns all events
        schema:
            $ref: '#/definitions/EventsResponse'
    grafanaBoardsResponseWrapper:
        description: Returns Grafana boards and panels
        schema:
            items:
                $ref: '#/definitions/GrafanaBoard'
            type: array
    grafanaConfigResponseWrapper:
        description: Returns Grafana configs
        schema:
            $ref: '#/definitions/Grafana'
    k8sConfigRespWrapper:
        description: Returns saved kubernetes config
    k8sContextsRespWrapper:
        description: Returns kubernetes context list
    keys:
        description: Returns users Keys
        headers:
            Body: {}
        schema:
            $ref: '#/definitions/UserKeys'
    listProvidersRespWrapper:
        description: Returns a list of available providers
        schema:
            additionalProperties:
                $ref: '#/definitions/ProviderProperties'
            type: object
    loadTestPreferencesWrapper:
        description: ""
        schema:
            $ref: '#/definitions/PerformanceTestConfig'
            additionalProperties:
                additionalProperties:
                    items:
                        $ref: '#/definitions/ConnectionStatus'
                    type: array
                type: object
            type: object
    mesheryAdaptersRespWrapper:
        description: Returns all the meshery adapters
        schema:
            items:
                $ref: '#/definitions/Adapter'
            type: array
    mesheryApplicationResponseWrapper:
        description: Fetches a single Meshery Application
        schema:
            $ref: '#/definitions/MesheryApplication'
    mesheryApplicationTypesResponseWrapper:
        description: Returns Meshery application types
        schema:
            items:
                $ref: '#/definitions/ApplicationTypeResponse'
            type: array
    mesheryApplicationsResponseWrapper:
        description: Returns all meshery applications
        schema:
            $ref: '#/definitions/ApplicationsAPIResponse'
    mesheryConnectionResponseWrapper:
        description: Returns a single connection
        schema:
            $ref: '#/definitions/Connection'
    mesheryConnectionsResponseWrapper:
        description: Returns all connections
        schema:
            $ref: '#/definitions/ConnectionPage'
    mesheryConnectionsStatusPage:
        description: Returns all connections Status
        schema:
            $ref: '#/definitions/ConnectionsStatusPage'
    mesheryFilterResponseWrapper:
        description: Returns a single meshery filter
        schema:
            $ref: '#/definitions/MesheryFilter'
    mesheryFiltersResponseWrapper:
        description: Returns all meshery filters
        schema:
            $ref: '#/definitions/FiltersAPIResponse'
    mesheryPatternResponseWrapper:
        description: Returns a single meshery pattern
        schema:
            $ref: '#/definitions/MesheryPattern'
    mesheryPatternSourceContentResponseWrapper:
        description: Returns Design Source Content
        schema:
            items:
                format: uint8
                type: integer
            type: array
    mesheryPatternsResponseWrapper:
        description: Returns all meshery patterns
        schema:
            $ref: '#/definitions/PatternsAPIResponse'
    mesheryVersionRespWrapper:
        description: Returns Meshery version
        schema:
            $ref: '#/definitions/Version'
    meshmodelCategoriesResponseWrapper:
        description: Returns meshmodel categories
        schema:
            $ref: '#/definitions/MeshmodelCategoriesAPIResponse'
    meshmodelComponentsDuplicateResponseWrapper:
        description: Return meshmoddel components with the count of duplicates
        schema:
            $ref: '#/definitions/MeshmodelComponentsDuplicateAPIResponse'
    meshmodelComponentsResponseWrapper:
        description: Return meshmodel components
        schema:
            $ref: '#/definitions/MeshmodelComponentsAPIResponse'
    meshmodelModelsDuplicateResponseWrapper:
        description: Return meshmodel models with the count of duplicates
        schema:
            $ref: '#/definitions/MeshmodelsDuplicateAPIResponse'
    meshmodelModelsResponseWrapper:
        description: Returns meshmodel models
        schema:
            $ref: '#/definitions/MeshmodelsAPIResponse'
    meshmodelPoliciesResponseWrapper:
        description: Returns meshmodel policies
        schema:
            $ref: '#/definitions/MeshmodelPoliciesAPIResponse'
    meshmodelRegistrantsResponseWrapper:
        description: Returns meshmodel registrants
        schema:
            $ref: '#/definitions/MeshmodelRegistrantsAPIResponse'
    meshmodelRelationshipsResponseWrapper:
        description: Returns meshmodel relationships
        schema:
            $ref: '#/definitions/MeshmodelRelationshipsAPIResponse'
    meshsyncResourcesResponseWrapper:
        description: Returns MeshSync resources
        schema:
            $ref: '#/definitions/MeshSyncResourcesAPIResponse'
    meshsyncResourcesSummaryResponseWrapper:
        description: Returns MeshSync Resources Kinds
        schema:
            $ref: '#/definitions/MeshSyncResourcesSummaryAPIResponse'
    noContentWrapper:
        description: ""
    orgsResponseWrapper:
        description: Returns all orgs
        schema:
            $ref: '#/definitions/OrganizationsPage'
    perfSingleResultRespWrapper:
        description: Returns Single test result
        schema:
            $ref: '#/definitions/PerformanceSpec'
    perfTestPrefsRespWrapper:
        description: Returns Perf test preference
        schema:
            $ref: '#/definitions/Preference'
    performanceProfileResponseWrapper:
        description: Returns a single performance profile
        schema:
            $ref: '#/definitions/PerformanceProfile'
    performanceProfilesResponseWrapper:
        description: Returns all the performance profiles
        schema:
            $ref: '#/definitions/PerformanceProfilesAPIResponse'
    performanceResultsResponseWrapper:
        description: Returns all performance results
        schema:
            $ref: '#/definitions/PerformanceResultsAPIResponse'
    prometheusBoardImportRespWrapper:
        description: Response for prometheus board import
        schema:
            $ref: '#/definitions/GrafanaBoard'
    prometheusConfigResponseWrapper:
        description: Returns prometheus configuration
        schema:
            $ref: '#/definitions/Prometheus'
    prometheusStaticBoardRespWrapper:
        description: Returns Prometheus static board
        schema:
            additionalProperties:
                $ref: '#/definitions/GrafanaBoard'
            type: object
    schedulesResponseWrapper:
        description: Returns List of saved schedules
        schema:
            $ref: '#/definitions/SchedulesAPIResponse'
    singleScheduleResponseWrapper:
        description: Returns a single schedules
        schema:
            $ref: '#/definitions/Schedule'
    smiResultsResponseWrapper:
        description: Returns SMI results
        schema:
            $ref: '#/definitions/SmiResultPage'
    systemAdaptersRespWrapper:
        description: Return all the adapters
        schema:
            items:
                $ref: '#/definitions/Adapter'
            type: array
    systemDatabaseResponseWrapper:
        description: Returns database summary
        schema:
            $ref: '#/definitions/DatabaseSummary'
    systemK8sContextsResponseWrapper:
        description: Returns K8s contexts
        schema:
            $ref: '#/definitions/MesheryK8sContextPage'
    userInfo:
        description: Returns user info
        schema:
            $ref: '#/definitions/User'
    userLoadTestPrefsRespWrapper:
        description: Returns User Load Test Preferencee
        schema:
            $ref: '#/definitions/Preference'
    users:
        description: Returns all users info
        schema:
            $ref: '#/definitions/AllUsers'
    v1ServicesMapResponseWrapper:
        description: Returns a map for v1 services
        schema:
            additionalProperties:
                items:
                    $ref: '#/definitions/Service'
                type: array
            type: object
    workspaceDesignsMappingResponseWrapper:
        description: Returns workspace designs mapping
        schema:
            $ref: '#/definitions/WorkspacesDesignsMapping'
    workspaceEnvironmentsMappingResponseWrapper:
        description: Returns workspace environments mapping
        schema:
            $ref: '#/definitions/WorkspacesEnvironmentsMapping'
    workspaceResponseWrapper:
        description: Returns workspace
        schema:
            $ref: '#/definitions/Workspace'
    workspacesResponseWrapper:
        description: Returns workspaces
        schema:
            $ref: '#/definitions/WorkspacePage'
schemes:
    - http
security:
    - token:
        - '[]'
securityDefinitions:
    token:
        in: cookie
        name: token
        type: apiKey
swagger: "2.0"
