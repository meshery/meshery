{
  "id": "00000000-0000-0000-0000-000000000000",
  "schemaVersion": "components.meshery.io/v1beta1",
  "version": "v1.0.0",
  "displayName": "Chaos Experiment",
  "description": "",
  "format": "JSON",
  "model": {
   "id": "00000000-0000-0000-0000-000000000000",
   "schemaVersion": "models.meshery.io/v1beta1",
   "version": "v1.0.0",
   "name": "kube-gcp",
   "displayName": "Kube Gcp",
   "description": "",
   "status": "ignored",
   "hostID": "00000000-0000-0000-0000-000000000000",
   "registrant": {
    "hostname": "artifacthub"
   },
   "category": {
    "name": "Uncategorized",
    "metadata": null
   },
   "subCategory": "Uncategorized",
   "metadata": {
    "capabilities": "",
    "defaultData": "",
    "isAnnotation": false,
    "primaryColor": "#00B39F",
    "secondaryColor": "#00D3A9",
    "shape": "circle",
    "shapePolygonPoints": "",
    "styleOverrides": "",
    "styles": "",
    "svgColor": "",
    "svgComplete": "",
    "svgWhite": ""
   },
   "model": {
    "version": "3.8.0"
   },
   "components": null,
   "relationships": null
  },
  "metadata": {
   "capabilities": "",
   "defaultData": "",
   "genealogy": "",
   "isAnnotation": false,
   "isNamespaced": true,
   "primaryColor": "",
   "secondaryColor": "",
   "shape": "",
   "shapePolygonPoints": "",
   "status": "ignored",
   "styleOverrides": "",
   "styles": "",
   "subCategory": "",
   "svgColor": "",
   "svgComplete": "",
   "svgWhite": ""
  },
  "component": {
   "kind": "ChaosExperiment",
   "version": "litmuschaos.io/v1alpha1",
   "schema": "{\n \"properties\": {\n  \"description\": {\n   \"additionalProperties\": {\n    \"type\": \"string\"\n   },\n   \"type\": \"object\"\n  },\n  \"spec\": {\n   \"properties\": {\n    \"definition\": {\n     \"format\": \"textarea\",\n     \"properties\": {\n      \"args\": {\n       \"items\": {\n        \"type\": \"string\"\n       },\n       \"type\": \"array\"\n      },\n      \"command\": {\n       \"items\": {\n        \"type\": \"string\"\n       },\n       \"type\": \"array\"\n      },\n      \"configMaps\": {\n       \"items\": {\n        \"minProperties\": 2,\n        \"properties\": {\n         \"mountPath\": {\n          \"allowEmptyValue\": false,\n          \"minLength\": 1,\n          \"type\": \"string\"\n         },\n         \"name\": {\n          \"allowEmptyValue\": false,\n          \"minLength\": 1,\n          \"type\": \"string\"\n         }\n        },\n        \"type\": \"object\"\n       },\n       \"type\": \"array\"\n      },\n      \"env\": {\n       \"items\": {\n        \"description\": \"EnvVar represents an environment variable present in a Container.\",\n        \"properties\": {\n         \"name\": {\n          \"description\": \"Name of the environment variable. Must be a C_IDENTIFIER.\",\n          \"type\": \"string\"\n         },\n         \"value\": {\n          \"description\": \"Variable references $(VAR_NAME) are expanded using the previous defined environment variables in the container and any service environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to \\\"\\\".\",\n          \"type\": \"string\"\n         },\n         \"valueFrom\": {\n          \"description\": \"Source for the environment variable's value. Cannot be used if value is not empty.\",\n          \"properties\": {\n           \"configMapKeyRef\": {\n            \"description\": \"Selects a key of a ConfigMap.\",\n            \"properties\": {\n             \"key\": {\n              \"description\": \"The key to select.\",\n              \"type\": \"string\"\n             },\n             \"name\": {\n              \"description\": \"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?\",\n              \"type\": \"string\"\n             },\n             \"optional\": {\n              \"description\": \"Specify whether the ConfigMap or its key must be defined\",\n              \"type\": \"boolean\"\n             }\n            },\n            \"required\": [\n             \"key\"\n            ],\n            \"type\": \"object\"\n           },\n           \"fieldRef\": {\n            \"description\": \"Selects a field of the pod: supports metadata.name, metadata.namespace, metadata.labels, metadata.annotations, spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP.\",\n            \"properties\": {\n             \"apiVersion\": {\n              \"description\": \"Version of the schema the FieldPath is written in terms of, defaults to \\\"v1\\\".\",\n              \"type\": \"string\"\n             },\n             \"fieldPath\": {\n              \"description\": \"Path of the field to select in the specified API version.\",\n              \"type\": \"string\"\n             }\n            },\n            \"required\": [\n             \"fieldPath\"\n            ],\n            \"type\": \"object\"\n           },\n           \"resourceFieldRef\": {\n            \"description\": \"Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.\",\n            \"properties\": {\n             \"containerName\": {\n              \"description\": \"Container name: required for volumes, optional for env vars\",\n              \"type\": \"string\"\n             },\n             \"divisor\": {\n              \"anyOf\": [\n               {\n                \"type\": \"integer\"\n               },\n               {\n                \"type\": \"string\"\n               }\n              ],\n              \"description\": \"Specifies the output format of the exposed resources, defaults to \\\"1\\\"\",\n              \"pattern\": \"^(\\\\+|-)?(([0-9]+(\\\\.[0-9]*)?)|(\\\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\\\+|-)?(([0-9]+(\\\\.[0-9]*)?)|(\\\\.[0-9]+))))?$\",\n              \"x-kubernetes-int-or-string\": true\n             },\n             \"resource\": {\n              \"description\": \"Required: resource to select\",\n              \"type\": \"string\"\n             }\n            },\n            \"required\": [\n             \"resource\"\n            ],\n            \"type\": \"object\"\n           },\n           \"secretKeyRef\": {\n            \"description\": \"Selects a key of a secret in the pod's namespace\",\n            \"properties\": {\n             \"key\": {\n              \"description\": \"The key of the secret to select from.  Must be a valid secret key.\",\n              \"type\": \"string\"\n             },\n             \"name\": {\n              \"description\": \"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?\",\n              \"type\": \"string\"\n             },\n             \"optional\": {\n              \"description\": \"Specify whether the Secret or its key must be defined\",\n              \"type\": \"boolean\"\n             }\n            },\n            \"required\": [\n             \"key\"\n            ],\n            \"type\": \"object\"\n           }\n          },\n          \"type\": \"object\"\n         }\n        },\n        \"required\": [\n         \"name\"\n        ],\n        \"type\": \"object\"\n       },\n       \"type\": \"array\"\n      },\n      \"hostFileVolumes\": {\n       \"items\": {\n        \"minProperties\": 3,\n        \"properties\": {\n         \"mountPath\": {\n          \"allowEmptyValue\": false,\n          \"minLength\": 1,\n          \"type\": \"string\"\n         },\n         \"name\": {\n          \"allowEmptyValue\": false,\n          \"minLength\": 1,\n          \"type\": \"string\"\n         },\n         \"nodePath\": {\n          \"allowEmptyValue\": false,\n          \"minLength\": 1,\n          \"type\": \"string\"\n         }\n        },\n        \"type\": \"object\"\n       },\n       \"type\": \"array\"\n      },\n      \"hostPID\": {\n       \"type\": \"boolean\"\n      },\n      \"image\": {\n       \"type\": \"string\"\n      },\n      \"imagePullPolicy\": {\n       \"type\": \"string\"\n      },\n      \"labels\": {\n       \"additionalProperties\": {\n        \"type\": \"string\"\n       },\n       \"type\": \"object\"\n      },\n      \"permissions\": {\n       \"items\": {\n        \"minProperties\": 3,\n        \"properties\": {\n         \"apiGroups\": {\n          \"items\": {\n           \"type\": \"string\"\n          },\n          \"type\": \"array\"\n         },\n         \"nonResourceURLs\": {\n          \"items\": {\n           \"type\": \"string\"\n          },\n          \"type\": \"array\"\n         },\n         \"resourceNames\": {\n          \"items\": {\n           \"type\": \"string\"\n          },\n          \"type\": \"array\"\n         },\n         \"resources\": {\n          \"items\": {\n           \"type\": \"string\"\n          },\n          \"type\": \"array\"\n         },\n         \"verbs\": {\n          \"items\": {\n           \"type\": \"string\"\n          },\n          \"type\": \"array\"\n         }\n        },\n        \"required\": [\n         \"apiGroups\",\n         \"resources\",\n         \"verbs\"\n        ],\n        \"type\": \"object\"\n       },\n       \"type\": \"array\"\n      },\n      \"scope\": {\n       \"pattern\": \"^(Namespaced|Cluster)$\",\n       \"type\": \"string\"\n      },\n      \"secrets\": {\n       \"items\": {\n        \"minProperties\": 2,\n        \"properties\": {\n         \"mountPath\": {\n          \"allowEmptyValue\": false,\n          \"minLength\": 1,\n          \"type\": \"string\"\n         },\n         \"name\": {\n          \"allowEmptyValue\": false,\n          \"minLength\": 1,\n          \"type\": \"string\"\n         }\n        },\n        \"type\": \"object\"\n       },\n       \"type\": \"array\"\n      },\n      \"securityContext\": {\n       \"format\": \"textarea\",\n       \"type\": \"string\"\n      }\n     },\n     \"type\": \"string\"\n    }\n   },\n   \"type\": \"object\"\n  }\n },\n \"title\": \"Chaos Experiment\",\n \"type\": \"object\"\n}"
  }
 }