{
  "id": "00000000-0000-0000-0000-000000000000",
  "kind": "HTTPChaos",
  "apiVersion": "chaos-mesh.org/v1alpha1",
  "displayName": "HTTP Chaos",
  "format": "JSON",
  "hostID": "00000000-0000-0000-0000-000000000000",
  "metadata": {
   "capabilities": "",
   "defaultData": "",
   "genealogy": "",
   "isAnnotation": false,
   "isModelAnnotation": "FALSE",
   "isNamespaced": true,
   "logoURL": "",
   "model": "chaos",
   "modelDisplayName": "Chaos",
   "primaryColor": "#00B39F",
   "published": false,
   "secondaryColor": "#00D3A9",
   "shape": "circle",
   "shapePolygonPoints": "",
   "styleOverrides": "",
   "styles": "",
   "subCategory": "",
   "svgColor": "",
   "svgComplete": "",
   "svgWhite": ""
  },
  "model": {
   "id": "00000000-0000-0000-0000-000000000000",
   "name": "chaos",
   "version": "11.28.67",
   "displayName": "Chaos",
   "hostID": "00000000-0000-0000-0000-000000000000",
   "category": {
    "name": "App Definition and Development",
    "metadata": null
   },
   "metadata": {
    "source_uri": "https://startxfr.github.io/helm-repository/packages/chaos-14.6.75.tgz"
   },
   "components": null,
   "relationships": null
  },
  "schema": "{\n \"description\": \"HTTPChaos is the Schema for the HTTPchaos API\",\n \"properties\": {\n  \"spec\": {\n   \"properties\": {\n    \"abort\": {\n     \"description\": \"Abort is a rule to abort a http session.\",\n     \"type\": \"boolean\"\n    },\n    \"code\": {\n     \"description\": \"Code is a rule to select target by http status code in response.\",\n     \"format\": \"int32\",\n     \"type\": \"integer\"\n    },\n    \"delay\": {\n     \"description\": \"Delay represents the delay of the target request/response. A duration string is a possibly unsigned sequence of decimal numbers, each with optional fraction and a unit suffix, such as \\\"300ms\\\", \\\"2h45m\\\". Valid time units are \\\"ns\\\", \\\"us\\\" (or \\\"Âµs\\\"), \\\"ms\\\", \\\"s\\\", \\\"m\\\", \\\"h\\\".\",\n     \"type\": \"string\"\n    },\n    \"duration\": {\n     \"description\": \"Duration represents the duration of the chaos action.\",\n     \"type\": \"string\"\n    },\n    \"method\": {\n     \"description\": \"Method is a rule to select target by http method in request.\",\n     \"type\": \"string\"\n    },\n    \"mode\": {\n     \"description\": \"Mode defines the mode to run chaos action. Supported mode: one / all / fixed / fixed-percent / random-max-percent\",\n     \"enum\": [\n      \"one\",\n      \"all\",\n      \"fixed\",\n      \"fixed-percent\",\n      \"random-max-percent\"\n     ],\n     \"type\": \"string\"\n    },\n    \"patch\": {\n     \"description\": \"Patch is a rule to patch some contents in target.\",\n     \"properties\": {\n      \"body\": {\n       \"description\": \"Body is a rule to patch message body of target.\",\n       \"properties\": {\n        \"type\": {\n         \"description\": \"Type represents the patch type, only support `JSON` as [merge patch json](https://tools.ietf.org/html/rfc7396) currently.\",\n         \"type\": \"string\"\n        },\n        \"value\": {\n         \"description\": \"Value is the patch contents.\",\n         \"type\": \"string\"\n        }\n       },\n       \"required\": [\n        \"type\",\n        \"value\"\n       ],\n       \"type\": \"object\"\n      },\n      \"headers\": {\n       \"description\": \"Headers is a rule to append http headers of target. For example: `[[\\\"Set-Cookie\\\", \\\"\\u003cone cookie\\u003e\\\"], [\\\"Set-Cookie\\\", \\\"\\u003canother cookie\\u003e\\\"]]`.\",\n       \"items\": {\n        \"items\": {\n         \"type\": \"string\"\n        },\n        \"type\": \"array\"\n       },\n       \"type\": \"array\"\n      },\n      \"queries\": {\n       \"description\": \"Queries is a rule to append uri queries of target(Request only). For example: `[[\\\"foo\\\", \\\"bar\\\"], [\\\"foo\\\", \\\"unknown\\\"]]`.\",\n       \"items\": {\n        \"items\": {\n         \"type\": \"string\"\n        },\n        \"type\": \"array\"\n       },\n       \"type\": \"array\"\n      }\n     },\n     \"type\": \"object\"\n    },\n    \"path\": {\n     \"description\": \"Path is a rule to select target by uri path in http request.\",\n     \"type\": \"string\"\n    },\n    \"port\": {\n     \"description\": \"Port represents the target port to be proxy of.\",\n     \"format\": \"int32\",\n     \"type\": \"integer\"\n    },\n    \"replace\": {\n     \"description\": \"Replace is a rule to replace some contents in target.\",\n     \"properties\": {\n      \"body\": {\n       \"description\": \"Body is a rule to replace http message body in target.\",\n       \"format\": \"byte\",\n       \"type\": \"string\"\n      },\n      \"code\": {\n       \"description\": \"Code is a rule to replace http status code in response.\",\n       \"format\": \"int32\",\n       \"type\": \"integer\"\n      },\n      \"headers\": {\n       \"additionalProperties\": {\n        \"type\": \"string\"\n       },\n       \"description\": \"Headers is a rule to replace http headers of target. The key-value pairs represent header name and header value pairs.\",\n       \"type\": \"object\"\n      },\n      \"method\": {\n       \"description\": \"Method is a rule to replace http method in request.\",\n       \"type\": \"string\"\n      },\n      \"path\": {\n       \"description\": \"Path is rule to to replace uri path in http request.\",\n       \"type\": \"string\"\n      },\n      \"queries\": {\n       \"additionalProperties\": {\n        \"type\": \"string\"\n       },\n       \"description\": \"Queries is a rule to replace uri queries in http request. For example, with value `{ \\\"foo\\\": \\\"unknown\\\" }`, the `/?foo=bar` will be altered to `/?foo=unknown`,\",\n       \"type\": \"object\"\n      }\n     },\n     \"type\": \"object\"\n    },\n    \"request_headers\": {\n     \"additionalProperties\": {\n      \"type\": \"string\"\n     },\n     \"description\": \"RequestHeaders is a rule to select target by http headers in request. The key-value pairs represent header name and header value pairs.\",\n     \"type\": \"object\"\n    },\n    \"response_headers\": {\n     \"additionalProperties\": {\n      \"type\": \"string\"\n     },\n     \"description\": \"ResponseHeaders is a rule to select target by http headers in response. The key-value pairs represent header name and header value pairs.\",\n     \"type\": \"object\"\n    },\n    \"selector\": {\n     \"description\": \"Selector is used to select pods that are used to inject chaos action.\",\n     \"properties\": {\n      \"annotationSelectors\": {\n       \"additionalProperties\": {\n        \"type\": \"string\"\n       },\n       \"description\": \"Map of string keys and values that can be used to select objects. A selector based on annotations.\",\n       \"type\": \"object\"\n      },\n      \"expressionSelectors\": {\n       \"description\": \"a slice of label selector expressions that can be used to select objects. A list of selectors based on set-based label expressions.\",\n       \"items\": {\n        \"description\": \"A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.\",\n        \"properties\": {\n         \"key\": {\n          \"description\": \"key is the label key that the selector applies to.\",\n          \"type\": \"string\"\n         },\n         \"operator\": {\n          \"description\": \"operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.\",\n          \"type\": \"string\"\n         },\n         \"values\": {\n          \"description\": \"values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.\",\n          \"items\": {\n           \"type\": \"string\"\n          },\n          \"type\": \"array\"\n         }\n        },\n        \"required\": [\n         \"key\",\n         \"operator\"\n        ],\n        \"type\": \"object\"\n       },\n       \"type\": \"array\"\n      },\n      \"fieldSelectors\": {\n       \"additionalProperties\": {\n        \"type\": \"string\"\n       },\n       \"description\": \"Map of string keys and values that can be used to select objects. A selector based on fields.\",\n       \"type\": \"object\"\n      },\n      \"labelSelectors\": {\n       \"additionalProperties\": {\n        \"type\": \"string\"\n       },\n       \"description\": \"Map of string keys and values that can be used to select objects. A selector based on labels.\",\n       \"type\": \"object\"\n      },\n      \"namespaces\": {\n       \"description\": \"Namespaces is a set of namespace to which objects belong.\",\n       \"items\": {\n        \"type\": \"string\"\n       },\n       \"type\": \"array\"\n      },\n      \"nodeSelectors\": {\n       \"additionalProperties\": {\n        \"type\": \"string\"\n       },\n       \"description\": \"Map of string keys and values that can be used to select nodes. Selector which must match a node's labels, and objects must belong to these selected nodes.\",\n       \"type\": \"object\"\n      },\n      \"nodes\": {\n       \"description\": \"Nodes is a set of node name and objects must belong to these nodes.\",\n       \"items\": {\n        \"type\": \"string\"\n       },\n       \"type\": \"array\"\n      },\n      \"podPhaseSelectors\": {\n       \"description\": \"PodPhaseSelectors is a set of condition of a pod at the current time. supported value: Pending / Running / Succeeded / Failed / Unknown\",\n       \"items\": {\n        \"type\": \"string\"\n       },\n       \"type\": \"array\"\n      },\n      \"pods\": {\n       \"additionalProperties\": {\n        \"items\": {\n         \"type\": \"string\"\n        },\n        \"type\": \"array\"\n       },\n       \"description\": \"Pods is a map of string keys and a set values that used to select pods. The key defines the namespace which pods belong, and the each values is a set of pod names.\",\n       \"type\": \"object\"\n      }\n     },\n     \"type\": \"object\"\n    },\n    \"target\": {\n     \"description\": \"Target is the object to be selected and injected.\",\n     \"enum\": [\n      \"Request\",\n      \"Response\"\n     ],\n     \"type\": \"string\"\n    },\n    \"value\": {\n     \"description\": \"Value is required when the mode is set to `FixedMode` / `FixedPercentMode` / `RandomMaxPercentMode`. If `FixedMode`, provide an integer of pods to do chaos action. If `FixedPercentMode`, provide a number from 0-100 to specify the percent of pods the server can do chaos action. IF `RandomMaxPercentMode`,  provide a number from 0-100 to specify the max percent of pods to do chaos action\",\n     \"type\": \"string\"\n    }\n   },\n   \"required\": [\n    \"mode\",\n    \"selector\",\n    \"target\"\n   ],\n   \"type\": \"object\"\n  }\n },\n \"title\": \"HTTP Chaos\",\n \"type\": \"object\"\n}"
 }