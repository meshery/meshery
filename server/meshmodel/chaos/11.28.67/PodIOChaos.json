{
  "id": "00000000-0000-0000-0000-000000000000",
  "kind": "PodIOChaos",
  "apiVersion": "chaos-mesh.org/v1alpha1",
  "displayName": "Pod IO Chaos",
  "format": "JSON",
  "hostID": "00000000-0000-0000-0000-000000000000",
  "metadata": {
   "capabilities": "",
   "defaultData": "",
   "genealogy": "",
   "isAnnotation": false,
   "isModelAnnotation": "FALSE",
   "isNamespaced": true,
   "logoURL": "",
   "model": "chaos",
   "modelDisplayName": "Chaos",
   "primaryColor": "#00B39F",
   "published": false,
   "secondaryColor": "#00D3A9",
   "shape": "circle",
   "shapePolygonPoints": "",
   "styleOverrides": "",
   "styles": "",
   "subCategory": "",
   "svgColor": "",
   "svgComplete": "",
   "svgWhite": ""
  },
  "model": {
   "id": "00000000-0000-0000-0000-000000000000",
   "name": "chaos",
   "version": "11.28.67",
   "displayName": "Chaos",
   "hostID": "00000000-0000-0000-0000-000000000000",
   "category": {
    "name": "App Definition and Development",
    "metadata": null
   },
   "metadata": {
    "source_uri": "https://startxfr.github.io/helm-repository/packages/chaos-14.6.75.tgz"
   },
   "components": null,
   "relationships": null
  },
  "schema": "{\n \"description\": \"PodIOChaos is the Schema for the podiochaos API\",\n \"properties\": {\n  \"spec\": {\n   \"description\": \"PodIOChaosSpec defines the desired state of IOChaos\",\n   \"properties\": {\n    \"actions\": {\n     \"description\": \"Actions are a list of IOChaos actions\",\n     \"items\": {\n      \"description\": \"IOChaosAction defines a possible action of IOChaos\",\n      \"properties\": {\n       \"atime\": {\n        \"description\": \"Timespec represents a time\",\n        \"properties\": {\n         \"nsec\": {\n          \"format\": \"int64\",\n          \"type\": \"integer\"\n         },\n         \"sec\": {\n          \"format\": \"int64\",\n          \"type\": \"integer\"\n         }\n        },\n        \"required\": [\n         \"nsec\",\n         \"sec\"\n        ],\n        \"type\": \"object\"\n       },\n       \"blocks\": {\n        \"format\": \"int64\",\n        \"type\": \"integer\"\n       },\n       \"ctime\": {\n        \"description\": \"Timespec represents a time\",\n        \"properties\": {\n         \"nsec\": {\n          \"format\": \"int64\",\n          \"type\": \"integer\"\n         },\n         \"sec\": {\n          \"format\": \"int64\",\n          \"type\": \"integer\"\n         }\n        },\n        \"required\": [\n         \"nsec\",\n         \"sec\"\n        ],\n        \"type\": \"object\"\n       },\n       \"faults\": {\n        \"description\": \"Faults represents the fault to inject\",\n        \"items\": {\n         \"description\": \"IoFault represents the fault to inject and their weight\",\n         \"properties\": {\n          \"errno\": {\n           \"format\": \"int32\",\n           \"type\": \"integer\"\n          },\n          \"weight\": {\n           \"format\": \"int32\",\n           \"type\": \"integer\"\n          }\n         },\n         \"required\": [\n          \"errno\",\n          \"weight\"\n         ],\n         \"type\": \"object\"\n        },\n        \"type\": \"array\"\n       },\n       \"gid\": {\n        \"format\": \"int32\",\n        \"type\": \"integer\"\n       },\n       \"ino\": {\n        \"format\": \"int64\",\n        \"type\": \"integer\"\n       },\n       \"kind\": {\n        \"description\": \"FileType represents type of file\",\n        \"type\": \"string\"\n       },\n       \"latency\": {\n        \"description\": \"Latency represents the latency to inject\",\n        \"type\": \"string\"\n       },\n       \"methods\": {\n        \"description\": \"Methods represents the method that the action will inject in\",\n        \"items\": {\n         \"type\": \"string\"\n        },\n        \"type\": \"array\"\n       },\n       \"mistake\": {\n        \"description\": \"MistakeSpec represents the mistake to inject\",\n        \"properties\": {\n         \"filling\": {\n          \"description\": \"Filling determines what is filled in the mistake data.\",\n          \"enum\": [\n           \"zero\",\n           \"random\"\n          ],\n          \"type\": \"string\"\n         },\n         \"maxLength\": {\n          \"description\": \"Max length of each wrong data segment in bytes\",\n          \"format\": \"int64\",\n          \"minimum\": 1,\n          \"type\": \"integer\"\n         },\n         \"maxOccurrences\": {\n          \"description\": \"There will be [1, MaxOccurrences] segments of wrong data.\",\n          \"format\": \"int64\",\n          \"minimum\": 1,\n          \"type\": \"integer\"\n         }\n        },\n        \"type\": \"object\"\n       },\n       \"mtime\": {\n        \"description\": \"Timespec represents a time\",\n        \"properties\": {\n         \"nsec\": {\n          \"format\": \"int64\",\n          \"type\": \"integer\"\n         },\n         \"sec\": {\n          \"format\": \"int64\",\n          \"type\": \"integer\"\n         }\n        },\n        \"required\": [\n         \"nsec\",\n         \"sec\"\n        ],\n        \"type\": \"object\"\n       },\n       \"nlink\": {\n        \"format\": \"int32\",\n        \"type\": \"integer\"\n       },\n       \"path\": {\n        \"description\": \"Path represents a glob of injecting path\",\n        \"type\": \"string\"\n       },\n       \"percent\": {\n        \"description\": \"Percent represents the percent probability of injecting this action\",\n        \"type\": \"integer\"\n       },\n       \"perm\": {\n        \"type\": \"integer\"\n       },\n       \"rdev\": {\n        \"format\": \"int32\",\n        \"type\": \"integer\"\n       },\n       \"size\": {\n        \"format\": \"int64\",\n        \"type\": \"integer\"\n       },\n       \"source\": {\n        \"description\": \"Source represents the source of current rules\",\n        \"type\": \"string\"\n       },\n       \"type\": {\n        \"description\": \"IOChaosType represents the type of IOChaos Action\",\n        \"type\": \"string\"\n       },\n       \"uid\": {\n        \"format\": \"int32\",\n        \"type\": \"integer\"\n       }\n      },\n      \"required\": [\n       \"path\",\n       \"percent\",\n       \"type\"\n      ],\n      \"type\": \"object\"\n     },\n     \"type\": \"array\"\n    },\n    \"container\": {\n     \"description\": \"TODO: support multiple different container to inject in one pod\",\n     \"type\": \"string\"\n    },\n    \"volumeMountPath\": {\n     \"description\": \"VolumeMountPath represents the target mount path It must be a root of mount path now. TODO: search the mount parent of any path automatically. TODO: support multiple different volume mount path in one pod\",\n     \"type\": \"string\"\n    }\n   },\n   \"required\": [\n    \"volumeMountPath\"\n   ],\n   \"type\": \"object\"\n  }\n },\n \"title\": \"Pod IO Chaos\",\n \"type\": \"object\"\n}"
 }