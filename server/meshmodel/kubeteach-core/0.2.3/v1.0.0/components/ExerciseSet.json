{
  "capabilities": [
   {
    "description": "Initiate a performance test. Meshery will execute the load generation, collect metrics, and present the results.",
    "displayName": "Performance Test",
    "entityState": [
     "instance"
    ],
    "key": "",
    "kind": "action",
    "metadata": null,
    "schemaVersion": "capability.meshery.io/v1alpha1",
    "status": "enabled",
    "subType": "perf-test",
    "type": "operator",
    "version": "0.7.0"
   },
   {
    "description": "Configure the workload specific setting of a component",
    "displayName": "Workload Configuration",
    "entityState": [
     "declaration"
    ],
    "key": "",
    "kind": "mutate",
    "metadata": null,
    "schemaVersion": "capability.meshery.io/v1alpha1",
    "status": "enabled",
    "subType": "config",
    "type": "configuration",
    "version": "0.7.0"
   },
   {
    "description": "Configure Labels And Annotations for  the component ",
    "displayName": "Labels and Annotations Configuration",
    "entityState": [
     "declaration"
    ],
    "key": "",
    "kind": "mutate",
    "metadata": null,
    "schemaVersion": "capability.meshery.io/v1alpha1",
    "status": "enabled",
    "subType": "labels-and-annotations",
    "type": "configuration",
    "version": "0.7.0"
   },
   {
    "description": "View relationships for the component",
    "displayName": "Relationships",
    "entityState": [
     "declaration",
     "instance"
    ],
    "key": "",
    "kind": "view",
    "metadata": null,
    "schemaVersion": "capability.meshery.io/v1alpha1",
    "status": "enabled",
    "subType": "relationship",
    "type": "configuration",
    "version": "0.7.0"
   },
   {
    "description": "View Component Definition ",
    "displayName": "Json Schema",
    "entityState": [
     "declaration",
     "instance"
    ],
    "key": "",
    "kind": "view",
    "metadata": null,
    "schemaVersion": "capability.meshery.io/v1alpha1",
    "status": "enabled",
    "subType": "definition",
    "type": "configuration",
    "version": "0.7.0"
   },
   {
    "description": "Configure the visual styles for the component",
    "displayName": "Styling",
    "entityState": [
     "declaration"
    ],
    "key": "",
    "kind": "mutate",
    "metadata": null,
    "schemaVersion": "capability.meshery.io/v1alpha1",
    "status": "enabled",
    "subType": "",
    "type": "style",
    "version": "0.7.0"
   },
   {
    "description": "Change the shape of the component",
    "displayName": "Change Shape",
    "entityState": [
     "declaration"
    ],
    "key": "",
    "kind": "mutate",
    "metadata": null,
    "schemaVersion": "capability.meshery.io/v1alpha1",
    "status": "enabled",
    "subType": "shape",
    "type": "style",
    "version": "0.7.0"
   },
   {
    "description": "Drag and Drop a component into a parent component in graph view",
    "displayName": "Compound Drag And Drop",
    "entityState": [
     "declaration"
    ],
    "key": "",
    "kind": "interaction",
    "metadata": null,
    "schemaVersion": "capability.meshery.io/v1alpha1",
    "status": "enabled",
    "subType": "compoundDnd",
    "type": "graph",
    "version": "0.7.0"
   }
  ],
  "component": {
   "kind": "ExerciseSet",
   "schema": "{\n \"description\": \"ExerciseSet is the Schema for the exercisesets API\",\n \"properties\": {\n  \"spec\": {\n   \"description\": \"ExerciseSetSpec defines the desired state of ExerciseSet\",\n   \"properties\": {\n    \"taskDefinitions\": {\n     \"description\": \"TaskDefinitionSpec represents the Spec of an TaskDefinition\",\n     \"items\": {\n      \"description\": \"ExerciseSetSpecTaskDefinitions defines the desired state of ExerciseSet\",\n      \"properties\": {\n       \"name\": {\n        \"description\": \"Name is the name of the TaskDefinition\",\n        \"minLength\": 1,\n        \"type\": \"string\"\n       },\n       \"taskDefinitionSpec\": {\n        \"description\": \"TaskDefinitionSpec represents the Spec of an TaskDefinition\",\n        \"properties\": {\n         \"points\": {\n          \"description\": \"Points Number of points for this TaskDefinition. Points will be summarized in an ExerciseSet.\",\n          \"type\": \"integer\"\n         },\n         \"requiredTaskName\": {\n          \"description\": \"RequiredTaskName defines a TaskDefinition Name that have to be done before. Useful for example if in task1 a object should be created and in task2 the object should be deleted again.\",\n          \"type\": \"string\"\n         },\n         \"taskCondition\": {\n          \"description\": \"TaskConditions defines a list of conditions for a object that must be true to complete the task.\",\n          \"items\": {\n           \"description\": \"TaskCondition defines a list of conditions for a object that must be true to complete the task.\",\n           \"properties\": {\n            \"apiGroup\": {\n             \"description\": \"APIGroup is used of the object that should be match this conditions\",\n             \"type\": \"string\"\n            },\n            \"apiVersion\": {\n             \"description\": \"APIVersion is used of the object that should be match this conditions\",\n             \"minLength\": 1,\n             \"type\": \"string\"\n            },\n            \"kind\": {\n             \"description\": \"Kind is used of the object that should be match this conditions\",\n             \"minLength\": 1,\n             \"type\": \"string\"\n            },\n            \"name\": {\n             \"description\": \"Name defines the name of the object that must apply to this conditions\",\n             \"minLength\": 1,\n             \"type\": \"string\"\n            },\n            \"namespace\": {\n             \"description\": \"Namespace is used to find the object if it is namespaced\",\n             \"type\": \"string\"\n            },\n            \"notExists\": {\n             \"description\": \"NotExists if set to true, all ResourceCondition are ignored and the TaskCondition is true if object do not exists\",\n             \"type\": \"boolean\"\n            },\n            \"resourceCondition\": {\n             \"description\": \"ResourceCondition describe the conditions that must be apply to success this TaskCondition If no ResourceCondition is set this TaskCondition just check if object exits\",\n             \"items\": {\n              \"description\": \"ResourceCondition describe the conditions that must be apply to success this TaskCondition\",\n              \"properties\": {\n               \"field\": {\n                \"description\": \"Field is the json search string for this condition. Example: metadata.name For more details have a look into gjson docs: https://github.com/tidwall/gjson\",\n                \"minLength\": 1,\n                \"type\": \"string\"\n               },\n               \"operator\": {\n                \"description\": \"Operator is for the condition. Valid operators are eq, neq, lt, gt, nil, notnil contains.\",\n                \"enum\": [\n                 \"eq\",\n                 \"neq\",\n                 \"lt\",\n                 \"gt\",\n                 \"contains\",\n                 \"nil\",\n                 \"notnil\"\n                ],\n                \"type\": \"string\"\n               },\n               \"value\": {\n                \"description\": \"Value contains the value which the Operator must match. Must be a string but for lt and gt only numbers are allowed in this string. Value is ignored by Operator nil and notnil\",\n                \"type\": \"string\"\n               }\n              },\n              \"required\": [\n               \"field\",\n               \"operator\"\n              ],\n              \"type\": \"object\"\n             },\n             \"type\": \"array\"\n            }\n           },\n           \"required\": [\n            \"apiVersion\",\n            \"kind\",\n            \"name\"\n           ],\n           \"type\": \"object\"\n          },\n          \"minItems\": 1,\n          \"type\": \"array\"\n         },\n         \"taskSpec\": {\n          \"description\": \"TaskSpec represents spec of the task that is creating for this TaskDefinition.\",\n          \"properties\": {\n           \"description\": {\n            \"description\": \"Description describes the task\",\n            \"minLength\": 1,\n            \"type\": \"string\"\n           },\n           \"helpURL\": {\n            \"description\": \"HelpURL is a URL that can help to solve this Task\",\n            \"type\": \"string\"\n           },\n           \"longDescription\": {\n            \"description\": \"LongDescription describes the task\",\n            \"type\": \"string\"\n           },\n           \"title\": {\n            \"description\": \"Title is the title of the task\",\n            \"minLength\": 1,\n            \"type\": \"string\"\n           }\n          },\n          \"required\": [\n           \"description\",\n           \"title\"\n          ],\n          \"type\": \"object\"\n         }\n        },\n        \"required\": [\n         \"taskCondition\",\n         \"taskSpec\"\n        ],\n        \"type\": \"object\"\n       }\n      },\n      \"required\": [\n       \"name\",\n       \"taskDefinitionSpec\"\n      ],\n      \"type\": \"object\"\n     },\n     \"type\": \"array\"\n    }\n   },\n   \"type\": \"object\"\n  }\n },\n \"title\": \"Exercise Set\",\n \"type\": \"object\"\n}",
   "version": "kubeteach.geberl.io/v1alpha1"
  },
  "configuration": null,
  "description": "",
  "displayName": "Exercise Set",
  "format": "JSON",
  "id": "00000000-0000-0000-0000-000000000000",
  "metadata": {
   "genealogy": "",
   "isAnnotation": false,
   "isNamespaced": true,
   "published": false
  },
  "model": {
   "category": {
    "name": "Uncategorized"
   },
   "displayName": "Kubeteach Core",
   "id": "00000000-0000-0000-0000-000000000000",
   "metadata": {
    "isAnnotation": false,
    "primaryColor": "#00B39F",
    "secondaryColor": "#00D3A9",
    "shape": "circle",
    "source_uri": "https://github.com/dergeberl/kubeteach-charts/releases/download/kubeteach-core-0.2.3/kubeteach-core-0.2.3.tgz",
    "styleOverrides": "",
    "svgColor": "",
    "svgComplete": "",
    "svgWhite": ""
   },
   "model": {
    "version": "0.2.3"
   },
   "name": "kubeteach-core",
   "registrant": {
    "created_at": "0001-01-01T00:00:00Z",
    "credential_id": "00000000-0000-0000-0000-000000000000",
    "deleted_at": "0001-01-01T00:00:00Z",
    "id": "00000000-0000-0000-0000-000000000000",
    "kind": "artifacthub",
    "name": "Artifact Hub",
    "status": "discovered",
    "sub_type": "",
    "type": "registry",
    "updated_at": "0001-01-01T00:00:00Z",
    "user_id": "00000000-0000-0000-0000-000000000000"
   },
   "connection_id": "00000000-0000-0000-0000-000000000000",
   "schemaVersion": "models.meshery.io/v1beta1",
   "status": "ignored",
   "subCategory": "Uncategorized",
   "version": "v1.0.0",
   "components": null,
   "relationships": null
  },
  "schemaVersion": "components.meshery.io/v1beta1",
  "status": "enabled",
  "styles": {
   "primaryColor": "#00B39F",
   "secondaryColor": "#00D3A9",
   "shape": "circle",
   "svgColor": "",
   "svgWhite": ""
  },
  "version": "v1.0.0"
 }