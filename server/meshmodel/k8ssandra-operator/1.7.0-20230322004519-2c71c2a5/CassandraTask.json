{"kind":"CassandraTask","apiVersion":"control.k8ssandra.io/v1alpha1","displayName":"Cassandra Task","format":"JSON","hostname":"","hostID":"00000000-0000-0000-0000-000000000000","displayhostname":"","metadata":{"capabilities":"","genealogy":"","isAnnotation":false,"isModelAnnotation":"FALSE","isNamespaced":true,"logoURL":"","model":"k8ssandra-operator","modelDisplayName":"K8ssandra Operator","primaryColor":"#00B39F","published":false,"secondaryColor":"#00D3A9","shape":"circle","styleOverrides":"","subCategory":"Database","svgColor":"","svgComplete":"","svgWhite":""},"model":{"name":"k8ssandra-operator","version":"1.7.0-20230322004519-2c71c2a5","displayName":"K8ssandra Operator","hostname":"","hostID":"00000000-0000-0000-0000-000000000000","displayhostname":"","category":{"name":"App Definition and Development","metadata":null},"metadata":{"source_uri":"https://helm.k8ssandra.io/stable/k8ssandra-operator-1.11.0-20231130143644-02d44150.tgz"},"components":null,"relationships":null},"schema":"{\n \"description\": \"CassandraTask is the Schema for the cassandrajobs API\",\n \"properties\": {\n  \"spec\": {\n   \"description\": \"CassandraTaskSpec defines the desired state of CassandraTask\",\n   \"properties\": {\n    \"concurrencyPolicy\": {\n     \"description\": \"Specifics if this task can be run concurrently with other active tasks. Valid values are: - \\\"Allow\\\": allows multiple Tasks to run concurrently on Cassandra cluster - \\\"Forbid\\\" (default): only a single task is executed at once The \\\"Allow\\\" property is only valid if all the other active Tasks have \\\"Allow\\\" as well.\",\n     \"type\": \"string\"\n    },\n    \"datacenter\": {\n     \"description\": \"Which datacenter this task is targetting. Note, this must be a datacenter which the current cass-operator can access\",\n     \"properties\": {\n      \"apiVersion\": {\n       \"description\": \"API version of the referent.\",\n       \"type\": \"string\"\n      },\n      \"fieldPath\": {\n       \"description\": \"If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: \\\"spec.containers{name}\\\" (where \\\"name\\\" refers to the name of the container that triggered the event) or if no container name is specified \\\"spec.containers[2]\\\" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.\",\n       \"type\": \"string\"\n      },\n      \"kind\": {\n       \"description\": \"Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\",\n       \"type\": \"string\"\n      },\n      \"name\": {\n       \"description\": \"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\",\n       \"type\": \"string\"\n      },\n      \"namespace\": {\n       \"description\": \"Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/\",\n       \"type\": \"string\"\n      },\n      \"resourceVersion\": {\n       \"description\": \"Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\",\n       \"type\": \"string\"\n      },\n      \"uid\": {\n       \"description\": \"UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids\",\n       \"type\": \"string\"\n      }\n     },\n     \"type\": \"object\",\n     \"x-kubernetes-map-type\": \"atomic\"\n    },\n    \"jobs\": {\n     \"description\": \"Jobs defines the jobs this task will execute (and their order)\",\n     \"items\": {\n      \"properties\": {\n       \"args\": {\n        \"description\": \"Arguments are additional parameters for the command\",\n        \"properties\": {\n         \"end_token\": {\n          \"type\": \"string\"\n         },\n         \"jobs\": {\n          \"type\": \"integer\"\n         },\n         \"keyspace_name\": {\n          \"type\": \"string\"\n         },\n         \"new_tokens\": {\n          \"additionalProperties\": {\n           \"type\": \"string\"\n          },\n          \"description\": \"NewTokens is a map of pod names to their newly-assigned tokens. Required for the move command, ignored otherwise. Pods referenced in this map must exist; any existing pod not referenced in this map will not be moved.\",\n          \"type\": \"object\"\n         },\n         \"no_snapshot\": {\n          \"type\": \"boolean\"\n         },\n         \"no_validate\": {\n          \"description\": \"Scrub arguments\",\n          \"type\": \"boolean\"\n         },\n         \"pod_name\": {\n          \"type\": \"string\"\n         },\n         \"rack\": {\n          \"type\": \"string\"\n         },\n         \"skip_corrupted\": {\n          \"type\": \"boolean\"\n         },\n         \"source_datacenter\": {\n          \"type\": \"string\"\n         },\n         \"split_output\": {\n          \"description\": \"Compaction arguments\",\n          \"type\": \"boolean\"\n         },\n         \"start_token\": {\n          \"type\": \"string\"\n         },\n         \"tables\": {\n          \"items\": {\n           \"type\": \"string\"\n          },\n          \"type\": \"array\"\n         }\n        },\n        \"type\": \"object\"\n       },\n       \"command\": {\n        \"description\": \"Command defines what is run against Cassandra pods\",\n        \"type\": \"string\"\n       },\n       \"name\": {\n        \"type\": \"string\"\n       }\n      },\n      \"required\": [\n       \"command\",\n       \"name\"\n      ],\n      \"type\": \"object\"\n     },\n     \"type\": \"array\"\n    },\n    \"restartPolicy\": {\n     \"description\": \"RestartPolicy indicates the behavior n case of failure. Default is Never.\",\n     \"type\": \"string\"\n    },\n    \"scheduledTime\": {\n     \"description\": \"ScheduledTime indicates the earliest possible time this task is executed. This does not necessarily equal to the time it is actually executed (if other tasks are blocking for example). If not set, the task will be executed immediately.\",\n     \"format\": \"date-time\",\n     \"type\": \"string\"\n    },\n    \"ttlSecondsAfterFinished\": {\n     \"description\": \"TTLSecondsAfterFinished defines how long the completed job will kept before being cleaned up. If set to 0 the task will not be cleaned up by the cass-operator. If unset, the default time (86400s) is used.\",\n     \"format\": \"int32\",\n     \"type\": \"integer\"\n    }\n   },\n   \"type\": \"object\"\n  }\n },\n \"title\": \"Cassandra Task\",\n \"type\": \"object\"\n}"}