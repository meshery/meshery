{
  "capabilities": [
   {
    "description": "Initiate a performance test. Meshery will execute the load generation, collect metrics, and present the results.",
    "displayName": "Performance Test",
    "entityState": [
     "instance"
    ],
    "key": "",
    "kind": "action",
    "metadata": null,
    "schemaVersion": "capability.meshery.io/v1alpha1",
    "status": "enabled",
    "subType": "perf-test",
    "type": "operator",
    "version": "0.7.0"
   },
   {
    "description": "Configure the workload specific setting of a component",
    "displayName": "Workload Configuration",
    "entityState": [
     "declaration"
    ],
    "key": "",
    "kind": "mutate",
    "metadata": null,
    "schemaVersion": "capability.meshery.io/v1alpha1",
    "status": "enabled",
    "subType": "config",
    "type": "configuration",
    "version": "0.7.0"
   },
   {
    "description": "Configure Labels And Annotations for  the component ",
    "displayName": "Labels and Annotations Configuration",
    "entityState": [
     "declaration"
    ],
    "key": "",
    "kind": "mutate",
    "metadata": null,
    "schemaVersion": "capability.meshery.io/v1alpha1",
    "status": "enabled",
    "subType": "labels-and-annotations",
    "type": "configuration",
    "version": "0.7.0"
   },
   {
    "description": "View relationships for the component",
    "displayName": "Relationships",
    "entityState": [
     "declaration",
     "instance"
    ],
    "key": "",
    "kind": "view",
    "metadata": null,
    "schemaVersion": "capability.meshery.io/v1alpha1",
    "status": "enabled",
    "subType": "relationship",
    "type": "configuration",
    "version": "0.7.0"
   },
   {
    "description": "View Component Definition ",
    "displayName": "Json Schema",
    "entityState": [
     "declaration",
     "instance"
    ],
    "key": "",
    "kind": "view",
    "metadata": null,
    "schemaVersion": "capability.meshery.io/v1alpha1",
    "status": "enabled",
    "subType": "definition",
    "type": "configuration",
    "version": "0.7.0"
   },
   {
    "description": "Configure the visual styles for the component",
    "displayName": "Styling",
    "entityState": [
     "declaration"
    ],
    "key": "",
    "kind": "mutate",
    "metadata": null,
    "schemaVersion": "capability.meshery.io/v1alpha1",
    "status": "enabled",
    "subType": "",
    "type": "style",
    "version": "0.7.0"
   },
   {
    "description": "Change the shape of the component",
    "displayName": "Change Shape",
    "entityState": [
     "declaration"
    ],
    "key": "",
    "kind": "mutate",
    "metadata": null,
    "schemaVersion": "capability.meshery.io/v1alpha1",
    "status": "enabled",
    "subType": "shape",
    "type": "style",
    "version": "0.7.0"
   },
   {
    "description": "Drag and Drop a component into a parent component in graph view",
    "displayName": "Compound Drag And Drop",
    "entityState": [
     "declaration"
    ],
    "key": "",
    "kind": "interaction",
    "metadata": null,
    "schemaVersion": "capability.meshery.io/v1alpha1",
    "status": "enabled",
    "subType": "compoundDnd",
    "type": "graph",
    "version": "0.7.0"
   }
  ],
  "component": {
   "kind": "BGPMeta",
   "schema": "{\n \"description\": \"BGPMeta is the Schema for the bgpmeta API\",\n \"properties\": {\n  \"spec\": {\n   \"description\": \"BGPMetaSpec defines the desired state of BGPMeta\",\n   \"properties\": {\n    \"allowas_in\": {\n     \"type\": \"integer\"\n    },\n    \"bgpGeneration\": {\n     \"format\": \"int64\",\n     \"type\": \"integer\"\n    },\n    \"bgpName\": {\n     \"type\": \"string\"\n    },\n    \"bgp_password\": {\n     \"type\": \"string\"\n    },\n    \"community\": {\n     \"type\": \"string\"\n    },\n    \"description\": {\n     \"type\": \"string\"\n    },\n    \"hwid\": {\n     \"type\": \"integer\"\n    },\n    \"id\": {\n     \"type\": \"integer\"\n    },\n    \"imported\": {\n     \"description\": \"INSERT ADDITIONAL SPEC FIELDS - desired state of cluster Important: Run \\\"make\\\" to regenerate code after modifying this file\",\n     \"type\": \"boolean\"\n    },\n    \"inboundRouteMap\": {\n     \"type\": \"integer\"\n    },\n    \"internal\": {\n     \"type\": \"string\"\n    },\n    \"ip_version\": {\n     \"type\": \"string\"\n    },\n    \"local_ip\": {\n     \"type\": \"string\"\n    },\n    \"local_preference\": {\n     \"type\": \"integer\"\n    },\n    \"multihop\": {\n     \"type\": \"integer\"\n    },\n    \"name\": {\n     \"type\": \"string\"\n    },\n    \"neighbor_address\": {\n     \"type\": \"string\"\n    },\n    \"neighbor_as\": {\n     \"type\": \"integer\"\n    },\n    \"originate\": {\n     \"type\": \"string\"\n    },\n    \"outboundRouteMap\": {\n     \"type\": \"integer\"\n    },\n    \"port\": {\n     \"type\": \"integer\"\n    },\n    \"prefix_length\": {\n     \"type\": \"integer\"\n    },\n    \"prefix_limit\": {\n     \"type\": \"string\"\n    },\n    \"prefix_list_inbound\": {\n     \"type\": \"string\"\n    },\n    \"prefix_list_outbound\": {\n     \"type\": \"string\"\n    },\n    \"prepend_inbound\": {\n     \"type\": \"integer\"\n    },\n    \"prepend_outbound\": {\n     \"type\": \"integer\"\n    },\n    \"reclaimPolicy\": {\n     \"type\": \"boolean\"\n    },\n    \"remote_ip\": {\n     \"type\": \"string\"\n    },\n    \"site\": {\n     \"type\": \"string\"\n    },\n    \"status\": {\n     \"type\": \"string\"\n    },\n    \"update_source\": {\n     \"type\": \"string\"\n    },\n    \"vlan\": {\n     \"type\": \"integer\"\n    },\n    \"vnet\": {\n     \"type\": \"integer\"\n    },\n    \"weight\": {\n     \"type\": \"integer\"\n    }\n   },\n   \"required\": [\n    \"allowas_in\",\n    \"bgpGeneration\",\n    \"bgpName\",\n    \"bgp_password\",\n    \"community\",\n    \"description\",\n    \"hwid\",\n    \"id\",\n    \"imported\",\n    \"inboundRouteMap\",\n    \"internal\",\n    \"ip_version\",\n    \"local_ip\",\n    \"local_preference\",\n    \"multihop\",\n    \"name\",\n    \"neighbor_as\",\n    \"originate\",\n    \"outboundRouteMap\",\n    \"port\",\n    \"prefix_length\",\n    \"prefix_limit\",\n    \"prefix_list_inbound\",\n    \"prefix_list_outbound\",\n    \"prepend_inbound\",\n    \"prepend_outbound\",\n    \"reclaimPolicy\",\n    \"remote_ip\",\n    \"site\",\n    \"status\",\n    \"update_source\",\n    \"vlan\",\n    \"vnet\",\n    \"weight\"\n   ],\n   \"type\": \"object\"\n  }\n },\n \"title\": \"BGP Meta\",\n \"type\": \"object\"\n}",
   "version": "k8s.netris.ai/v1alpha1"
  },
  "configuration": null,
  "description": "",
  "displayName": "BGP Meta",
  "format": "JSON",
  "id": "00000000-0000-0000-0000-000000000000",
  "metadata": {
   "genealogy": "",
   "isAnnotation": false,
   "isNamespaced": true,
   "published": false
  },
  "model": {
   "category": {
    "name": "Uncategorized"
   },
   "displayName": "Netris Operator",
   "id": "00000000-0000-0000-0000-000000000000",
   "metadata": {
    "source_uri": "https://github.com/netrisai/charts/releases/download/netris-operator-1.1.2/netris-operator-1.1.2.tgz",
    "svgColor": "",
    "svgWhite": ""
   },
   "model": {
    "version": "1.1.0"
   },
   "name": "netris-operator",
   "registrant": {
    "created_at": "0001-01-01T00:00:00Z",
    "credential_id": "00000000-0000-0000-0000-000000000000",
    "deleted_at": "0001-01-01T00:00:00Z",
    "id": "00000000-0000-0000-0000-000000000000",
    "kind": "artifacthub",
    "name": "Artifact Hub",
    "status": "discovered",
    "sub_type": "",
    "type": "registry",
    "updated_at": "0001-01-01T00:00:00Z",
    "user_id": "00000000-0000-0000-0000-000000000000"
   },
   "connection_id": "00000000-0000-0000-0000-000000000000",
   "schemaVersion": "models.meshery.io/v1beta1",
   "status": "ignored",
   "version": "v1.0.0",
   "components": null,
   "relationships": null
  },
  "schemaVersion": "components.meshery.io/v1beta1",
  "status": "enabled",
  "styles": {
   "primaryColor": "#00B39F",
   "secondaryColor": "#00D3A9",
   "shape": "circle",
   "svgColor": "",
   "svgWhite": ""
  },
  "version": "v1.0.0"
 }