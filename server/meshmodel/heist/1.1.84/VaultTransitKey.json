{"kind":"VaultTransitKey","apiVersion":"heist.youniqx.com/v1alpha1","displayName":"Vault Transit Key","format":"JSON","hostname":"","hostID":"00000000-0000-0000-0000-000000000000","displayhostname":"","metadata":{"capabilities":"","genealogy":"","isAnnotation":false,"isModelAnnotation":"FALSE","isNamespaced":true,"logoURL":"","model":"heist","modelDisplayName":"Heist","primaryColor":"#00B39F","published":false,"secondaryColor":"#00D3A9","shape":"circle","styleOverrides":"","subCategory":"Uncategorized","svgColor":"","svgComplete":"","svgWhite":""},"model":{"name":"heist","version":"1.1.84","displayName":"Heist","hostname":"","hostID":"00000000-0000-0000-0000-000000000000","displayhostname":"","category":{"name":"Uncategorized","metadata":null},"metadata":{"source_uri":"https://github.com/youniqx/helm-charts/releases/download/heist-1.1.153/heist-1.1.153.tgz"},"components":null,"relationships":null},"schema":"{\n \"description\": \"VaultTransitKey is the Schema for the vaulttransitengines API.\",\n \"properties\": {\n  \"spec\": {\n   \"description\": \"VaultTransitKeySpec defines the desired state of VaultTransitKey.\",\n   \"properties\": {\n    \"allowPlaintextBackup\": {\n     \"description\": \"AllowPlaintextBackup enables taking backups of named key in the plaintext format. Once set, this cannot be disabled.\",\n     \"type\": \"boolean\"\n    },\n    \"deleteProtection\": {\n     \"description\": \"DeleteProtection configures that the secret should not be able to be deleted. Defaults to false.\",\n     \"type\": \"boolean\"\n    },\n    \"engine\": {\n     \"description\": \"Engine configures the used transit engine.\",\n     \"type\": \"string\"\n    },\n    \"exportable\": {\n     \"description\": \"Exportable enables keys to be exportable. This allows for all the valid keys in the key ring to be exported. Once set, this cannot be disabled.\",\n     \"type\": \"boolean\"\n    },\n    \"minimumDecryptionVersion\": {\n     \"description\": \"MinimumDecryptionVersion specifies the minimum version of the key that can be used to decrypt the ciphertext. Adjusting this as part of a key rotation policy can prevent old copies of ciphertext from being decrypted, should they fall into the wrong hands. For signatures, this value controls the minimum version of signature that can be verified against. For HMACs, this controls the minimum version of a key allowed to be used as the key for verification.\",\n     \"type\": \"integer\"\n    },\n    \"minimumEncryptionVersion\": {\n     \"description\": \"MinimumEncryptionVersion Specifies the minimum version of the key that can be used to encrypt plaintext, sign payloads, or generate HMACs. Must be 0 (which will use the latest version) or a value greater or equal to min_decryption_version.\",\n     \"type\": \"integer\"\n    },\n    \"type\": {\n     \"description\": \"Type configures the transit key type. Must be a vault supported key type. Additional information: https://www.vaultproject.io/api/secret/transit#type.\",\n     \"enum\": [\n      \"aes128-gcm96\",\n      \"aes256-gcm96\",\n      \"chacha20-poly1305\",\n      \"ed25519\",\n      \"ecdsa-p256\",\n      \"ecdsa-p384\",\n      \"ecdsa-p521\",\n      \"rsa-2048\",\n      \"rsa-3072\",\n      \"rsa-4096\"\n     ],\n     \"type\": \"string\"\n    }\n   },\n   \"required\": [\n    \"engine\",\n    \"type\"\n   ],\n   \"type\": \"object\"\n  }\n },\n \"title\": \"Vault Transit Key\",\n \"type\": \"object\"\n}"}