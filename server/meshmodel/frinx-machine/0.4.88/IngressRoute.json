{
  "id": "00000000-0000-0000-0000-000000000000",
  "kind": "IngressRoute",
  "apiVersion": "traefik.containo.us/v1alpha1",
  "displayName": "Ingress Route",
  "format": "JSON",
  "hostID": "00000000-0000-0000-0000-000000000000",
  "metadata": {
   "capabilities": "",
   "defaultData": "",
   "genealogy": "",
   "isAnnotation": false,
   "isNamespaced": true,
   "primaryColor": "#00B39F",
   "published": false,
   "secondaryColor": "#00D3A9",
   "shape": "circle",
   "shapePolygonPoints": "",
   "styleOverrides": "",
   "styles": "",
   "subCategory": "",
   "svgColor": "\u003csvg width=\"144\" height=\"146\" viewBox=\"0 0 144 146\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"\u003e\n\u003cpath d=\"M3 0H46L143.5 146H100.5L3 0Z\" fill=\"#03AAFF\"/\u003e\n\u003cpath d=\"M140.5 0H97.5L0 146H43L140.5 0Z\" fill=\"#03AAFF\"/\u003e\n\u003cpath d=\"M50.5 70.5L71.5 39L93 70.5L72 103L50.5 70.5Z\" fill=\"#0370FF\"/\u003e\n\u003c/svg\u003e\r",
   "svgComplete": "",
   "svgWhite": "\u003csvg width=\"144\" height=\"146\" viewBox=\"0 0 144 146\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"\u003e\n\u003cpath d=\"M3 0H46L143.5 146H100.5L3 0Z\" fill=\"white\"/\u003e\n\u003cpath d=\"M140.5 0H97.5L0 146H43L140.5 0Z\" fill=\"white\"/\u003e\n\u003cpath d=\"M50.5 70.5L71.5 39L93 70.5L72 103L50.5 70.5Z\" fill=\"#F0F0F0\"/\u003e\n\u003c/svg\u003e\r"
  },
  "model": {
   "id": "00000000-0000-0000-0000-000000000000",
   "name": "frinx-machine",
   "version": "0.4.88",
   "displayName": "Frinx Machine",
   "status": "",
   "hostID": "00000000-0000-0000-0000-000000000000",
   "category": {
    "name": "Uncategorized",
    "metadata": null
   },
   "metadata": {
    "isAnnotation": false,
    "published": false,
    "subCategory": "Uncategorized",
    "svgColor": "\u003c?xml version=\"1.0\" encoding=\"UTF-8\"?\u003e\u003c!DOCTYPE svg\u003e\u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 144 146\" fill=\"none\"\u003e\n\u003cpath xmlns=\"http://www.w3.org/2000/svg\" d=\"M3 0H46L143.5 146H100.5L3 0Z\" fill=\"#03AAFF\"\u003e\u003c/path\u003e\n\u003cpath xmlns=\"http://www.w3.org/2000/svg\" d=\"M140.5 0H97.5L0 146H43L140.5 0Z\" fill=\"#03AAFF\"\u003e\u003c/path\u003e\n\u003cpath xmlns=\"http://www.w3.org/2000/svg\" d=\"M50.5 70.5L71.5 39L93 70.5L72 103L50.5 70.5Z\" fill=\"#0370FF\"\u003e\u003c/path\u003e\n\u003c/svg\u003e\n",
    "svgComplete": "",
    "svgWhite": "\u003c?xml version=\"1.0\" encoding=\"UTF-8\"?\u003e\u003c!DOCTYPE svg\u003e\u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 144 146\" fill=\"none\"\u003e\n\u003cpath xmlns=\"http://www.w3.org/2000/svg\" d=\"M3 0H46L143.5 146H100.5L3 0Z\" fill=\"white\"\u003e\u003c/path\u003e\n\u003cpath xmlns=\"http://www.w3.org/2000/svg\" d=\"M140.5 0H97.5L0 146H43L140.5 0Z\" fill=\"white\"\u003e\u003c/path\u003e\n\u003cpath xmlns=\"http://www.w3.org/2000/svg\" d=\"M50.5 70.5L71.5 39L93 70.5L72 103L50.5 70.5Z\" fill=\"#F0F0F0\"\u003e\u003c/path\u003e\n\u003c/svg\u003e\n"
   },
   "components": null,
   "relationships": null
  },
  "schema": "{\n \"description\": \"IngressRoute is the CRD implementation of a Traefik HTTP Router.\",\n \"properties\": {\n  \"spec\": {\n   \"description\": \"IngressRouteSpec defines the desired state of IngressRoute.\",\n   \"properties\": {\n    \"entryPoints\": {\n     \"description\": \"EntryPoints defines the list of entry point names to bind to. Entry points have to be configured in the static configuration. More info: https://doc.traefik.io/traefik/v2.9/routing/entrypoints/ Default: all.\",\n     \"items\": {\n      \"type\": \"string\"\n     },\n     \"type\": \"array\"\n    },\n    \"routes\": {\n     \"description\": \"Routes defines the list of routes.\",\n     \"items\": {\n      \"description\": \"Route holds the HTTP route configuration.\",\n      \"properties\": {\n       \"kind\": {\n        \"description\": \"Kind defines the kind of the route. Rule is the only supported kind.\",\n        \"enum\": [\n         \"Rule\"\n        ],\n        \"type\": \"string\"\n       },\n       \"match\": {\n        \"description\": \"Match defines the router's rule. More info: https://doc.traefik.io/traefik/v2.9/routing/routers/#rule\",\n        \"type\": \"string\"\n       },\n       \"middlewares\": {\n        \"description\": \"Middlewares defines the list of references to Middleware resources. More info: https://doc.traefik.io/traefik/v2.9/routing/providers/kubernetes-crd/#kind-middleware\",\n        \"items\": {\n         \"description\": \"MiddlewareRef is a reference to a Middleware resource.\",\n         \"properties\": {\n          \"name\": {\n           \"description\": \"Name defines the name of the referenced Middleware resource.\",\n           \"type\": \"string\"\n          },\n          \"namespace\": {\n           \"description\": \"Namespace defines the namespace of the referenced Middleware resource.\",\n           \"type\": \"string\"\n          }\n         },\n         \"required\": [\n          \"name\"\n         ],\n         \"type\": \"object\"\n        },\n        \"type\": \"array\"\n       },\n       \"priority\": {\n        \"description\": \"Priority defines the router's priority. More info: https://doc.traefik.io/traefik/v2.9/routing/routers/#priority\",\n        \"type\": \"integer\"\n       },\n       \"services\": {\n        \"description\": \"Services defines the list of Service. It can contain any combination of TraefikService and/or reference to a Kubernetes Service.\",\n        \"items\": {\n         \"description\": \"Service defines an upstream HTTP service to proxy traffic to.\",\n         \"properties\": {\n          \"kind\": {\n           \"description\": \"Kind defines the kind of the Service.\",\n           \"enum\": [\n            \"Service\",\n            \"TraefikService\"\n           ],\n           \"type\": \"string\"\n          },\n          \"name\": {\n           \"description\": \"Name defines the name of the referenced Kubernetes Service or TraefikService. The differentiation between the two is specified in the Kind field.\",\n           \"type\": \"string\"\n          },\n          \"namespace\": {\n           \"description\": \"Namespace defines the namespace of the referenced Kubernetes Service or TraefikService.\",\n           \"type\": \"string\"\n          },\n          \"passHostHeader\": {\n           \"description\": \"PassHostHeader defines whether the client Host header is forwarded to the upstream Kubernetes Service. By default, passHostHeader is true.\",\n           \"type\": \"boolean\"\n          },\n          \"port\": {\n           \"anyOf\": [\n            {\n             \"type\": \"integer\"\n            },\n            {\n             \"type\": \"string\"\n            }\n           ],\n           \"description\": \"Port defines the port of a Kubernetes Service. This can be a reference to a named port.\",\n           \"x-kubernetes-int-or-string\": true\n          },\n          \"responseForwarding\": {\n           \"description\": \"ResponseForwarding defines how Traefik forwards the response from the upstream Kubernetes Service to the client.\",\n           \"properties\": {\n            \"flushInterval\": {\n             \"description\": \"FlushInterval defines the interval, in milliseconds, in between flushes to the client while copying the response body. A negative value means to flush immediately after each write to the client. This configuration is ignored when ReverseProxy recognizes a response as a streaming response; for such responses, writes are flushed to the client immediately. Default: 100ms\",\n             \"type\": \"string\"\n            }\n           },\n           \"type\": \"object\"\n          },\n          \"scheme\": {\n           \"description\": \"Scheme defines the scheme to use for the request to the upstream Kubernetes Service. It defaults to https when Kubernetes Service port is 443, http otherwise.\",\n           \"type\": \"string\"\n          },\n          \"serversTransport\": {\n           \"description\": \"ServersTransport defines the name of ServersTransport resource to use. It allows to configure the transport between Traefik and your servers. Can only be used on a Kubernetes Service.\",\n           \"type\": \"string\"\n          },\n          \"sticky\": {\n           \"description\": \"Sticky defines the sticky sessions configuration. More info: https://doc.traefik.io/traefik/v2.9/routing/services/#sticky-sessions\",\n           \"properties\": {\n            \"cookie\": {\n             \"description\": \"Cookie defines the sticky cookie configuration.\",\n             \"properties\": {\n              \"httpOnly\": {\n               \"description\": \"HTTPOnly defines whether the cookie can be accessed by client-side APIs, such as JavaScript.\",\n               \"type\": \"boolean\"\n              },\n              \"name\": {\n               \"description\": \"Name defines the Cookie name.\",\n               \"type\": \"string\"\n              },\n              \"sameSite\": {\n               \"description\": \"SameSite defines the same site policy. More info: https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Set-Cookie/SameSite\",\n               \"type\": \"string\"\n              },\n              \"secure\": {\n               \"description\": \"Secure defines whether the cookie can only be transmitted over an encrypted connection (i.e. HTTPS).\",\n               \"type\": \"boolean\"\n              }\n             },\n             \"type\": \"object\"\n            }\n           },\n           \"type\": \"object\"\n          },\n          \"strategy\": {\n           \"description\": \"Strategy defines the load balancing strategy between the servers. RoundRobin is the only supported value at the moment.\",\n           \"type\": \"string\"\n          },\n          \"weight\": {\n           \"description\": \"Weight defines the weight and should only be specified when Name references a TraefikService object (and to be precise, one that embeds a Weighted Round Robin).\",\n           \"type\": \"integer\"\n          }\n         },\n         \"required\": [\n          \"name\"\n         ],\n         \"type\": \"object\"\n        },\n        \"type\": \"array\"\n       }\n      },\n      \"required\": [\n       \"kind\",\n       \"match\"\n      ],\n      \"type\": \"object\"\n     },\n     \"type\": \"array\"\n    },\n    \"tls\": {\n     \"description\": \"TLS defines the TLS configuration. More info: https://doc.traefik.io/traefik/v2.9/routing/routers/#tls\",\n     \"properties\": {\n      \"certResolver\": {\n       \"description\": \"CertResolver defines the name of the certificate resolver to use. Cert resolvers have to be configured in the static configuration. More info: https://doc.traefik.io/traefik/v2.9/https/acme/#certificate-resolvers\",\n       \"type\": \"string\"\n      },\n      \"domains\": {\n       \"description\": \"Domains defines the list of domains that will be used to issue certificates. More info: https://doc.traefik.io/traefik/v2.9/routing/routers/#domains\",\n       \"items\": {\n        \"description\": \"Domain holds a domain name with SANs.\",\n        \"properties\": {\n         \"main\": {\n          \"description\": \"Main defines the main domain name.\",\n          \"type\": \"string\"\n         },\n         \"sans\": {\n          \"description\": \"SANs defines the subject alternative domain names.\",\n          \"items\": {\n           \"type\": \"string\"\n          },\n          \"type\": \"array\"\n         }\n        },\n        \"type\": \"object\"\n       },\n       \"type\": \"array\"\n      },\n      \"options\": {\n       \"description\": \"Options defines the reference to a TLSOption, that specifies the parameters of the TLS connection. If not defined, the `default` TLSOption is used. More info: https://doc.traefik.io/traefik/v2.9/https/tls/#tls-options\",\n       \"properties\": {\n        \"name\": {\n         \"description\": \"Name defines the name of the referenced TLSOption. More info: https://doc.traefik.io/traefik/v2.9/routing/providers/kubernetes-crd/#kind-tlsoption\",\n         \"type\": \"string\"\n        },\n        \"namespace\": {\n         \"description\": \"Namespace defines the namespace of the referenced TLSOption. More info: https://doc.traefik.io/traefik/v2.9/routing/providers/kubernetes-crd/#kind-tlsoption\",\n         \"type\": \"string\"\n        }\n       },\n       \"required\": [\n        \"name\"\n       ],\n       \"type\": \"object\"\n      },\n      \"secretName\": {\n       \"description\": \"SecretName is the name of the referenced Kubernetes Secret to specify the certificate details.\",\n       \"type\": \"string\"\n      },\n      \"store\": {\n       \"description\": \"Store defines the reference to the TLSStore, that will be used to store certificates. Please note that only `default` TLSStore can be used.\",\n       \"properties\": {\n        \"name\": {\n         \"description\": \"Name defines the name of the referenced TLSStore. More info: https://doc.traefik.io/traefik/v2.9/routing/providers/kubernetes-crd/#kind-tlsstore\",\n         \"type\": \"string\"\n        },\n        \"namespace\": {\n         \"description\": \"Namespace defines the namespace of the referenced TLSStore. More info: https://doc.traefik.io/traefik/v2.9/routing/providers/kubernetes-crd/#kind-tlsstore\",\n         \"type\": \"string\"\n        }\n       },\n       \"required\": [\n        \"name\"\n       ],\n       \"type\": \"object\"\n      }\n     },\n     \"type\": \"object\"\n    }\n   },\n   \"required\": [\n    \"routes\"\n   ],\n   \"type\": \"object\"\n  }\n },\n \"required\": [\n  \"metadata\",\n  \"spec\"\n ],\n \"title\": \"Ingress Route\",\n \"type\": \"object\"\n}"
 }