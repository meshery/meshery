{
  "capabilities": [
   {
    "description": "Initiate a performance test. Meshery will execute the load generation, collect metrics, and present the results.",
    "displayName": "Performance Test",
    "entityState": [
     "instance"
    ],
    "key": "",
    "kind": "action",
    "metadata": null,
    "schemaVersion": "capability.meshery.io/v1alpha1",
    "status": "enabled",
    "subType": "perf-test",
    "type": "operator",
    "version": "0.7.0"
   },
   {
    "description": "Configure the workload specific setting of a component",
    "displayName": "Workload Configuration",
    "entityState": [
     "declaration"
    ],
    "key": "",
    "kind": "mutate",
    "metadata": null,
    "schemaVersion": "capability.meshery.io/v1alpha1",
    "status": "enabled",
    "subType": "config",
    "type": "configuration",
    "version": "0.7.0"
   },
   {
    "description": "Configure Labels And Annotations for  the component ",
    "displayName": "Labels and Annotations Configuration",
    "entityState": [
     "declaration"
    ],
    "key": "",
    "kind": "mutate",
    "metadata": null,
    "schemaVersion": "capability.meshery.io/v1alpha1",
    "status": "enabled",
    "subType": "labels-and-annotations",
    "type": "configuration",
    "version": "0.7.0"
   },
   {
    "description": "View relationships for the component",
    "displayName": "Relationships",
    "entityState": [
     "declaration",
     "instance"
    ],
    "key": "",
    "kind": "view",
    "metadata": null,
    "schemaVersion": "capability.meshery.io/v1alpha1",
    "status": "enabled",
    "subType": "relationship",
    "type": "configuration",
    "version": "0.7.0"
   },
   {
    "description": "View Component Definition ",
    "displayName": "Json Schema",
    "entityState": [
     "declaration",
     "instance"
    ],
    "key": "",
    "kind": "view",
    "metadata": null,
    "schemaVersion": "capability.meshery.io/v1alpha1",
    "status": "enabled",
    "subType": "definition",
    "type": "configuration",
    "version": "0.7.0"
   },
   {
    "description": "Configure the visual styles for the component",
    "displayName": "Styling",
    "entityState": [
     "declaration"
    ],
    "key": "",
    "kind": "mutate",
    "metadata": null,
    "schemaVersion": "capability.meshery.io/v1alpha1",
    "status": "enabled",
    "subType": "",
    "type": "style",
    "version": "0.7.0"
   },
   {
    "description": "Change the shape of the component",
    "displayName": "Change Shape",
    "entityState": [
     "declaration"
    ],
    "key": "",
    "kind": "mutate",
    "metadata": null,
    "schemaVersion": "capability.meshery.io/v1alpha1",
    "status": "enabled",
    "subType": "shape",
    "type": "style",
    "version": "0.7.0"
   },
   {
    "description": "Drag and Drop a component into a parent component in graph view",
    "displayName": "Compound Drag And Drop",
    "entityState": [
     "declaration"
    ],
    "key": "",
    "kind": "interaction",
    "metadata": null,
    "schemaVersion": "capability.meshery.io/v1alpha1",
    "status": "enabled",
    "subType": "compoundDnd",
    "type": "graph",
    "version": "0.7.0"
   }
  ],
  "component": {
   "kind": "VDIRole",
   "schema": "{\n \"description\": \"VDIRole is the Schema for the vdiroles API\",\n \"properties\": {\n  \"rules\": {\n   \"description\": \"A list of rules granting access to resources in the VDICluster.\",\n   \"items\": {\n    \"description\": \"Rule represents a set of permissions applied to a VDIRole. It mostly resembles an rbacv1.PolicyRule, with resources being a regex and the addition of a namespace selector.\",\n    \"properties\": {\n     \"namespaces\": {\n      \"description\": \"Namespaces this rule applies to. Only evaluated for template launching permissions. Including \\\"*\\\" as an option matches all namespaces.\",\n      \"items\": {\n       \"type\": \"string\"\n      },\n      \"type\": \"array\"\n     },\n     \"resourcePatterns\": {\n      \"description\": \"Resource regexes that match this rule. This can be template patterns, role names or user names. There is no All representation because * will have that effect on its own when the regex is evaluated. When referring to \\\"serviceaccounts\\\", only the \\\"use\\\" verb is evaluated in the context of assuming those accounts in desktop sessions. \\n **NOTE**: The `kvdi-manager` is responsible for launching pods with a service account requested for a given Desktop. If the service account itself contains more permissions than the manager itself, the Kubernetes API will deny the request. The way to remedy this would be to either mirror permissions to that ClusterRole, or make the `kvdi-manager` itself a cluster admin, both of which come with inherent risks. In the end, you can decide the best approach for your use case with regards to exposing access to the Kubernetes APIs via kvdi sessions.\",\n      \"items\": {\n       \"type\": \"string\"\n      },\n      \"type\": \"array\"\n     },\n     \"resources\": {\n      \"description\": \"Resources this rule applies to. ResourceAll matches all resources. Recognized options are: `[\\\"users\\\", \\\"roles\\\", \\\"templates\\\", \\\"serviceaccounts\\\", \\\"*\\\"]`\",\n      \"items\": {\n       \"description\": \"Resource represents the target of an API action\",\n       \"enum\": [\n        \"users\",\n        \"roles\",\n        \"templates\",\n        \"serviceaccounts\",\n        \"*\"\n       ],\n       \"type\": \"string\"\n      },\n      \"type\": \"array\"\n     },\n     \"verbs\": {\n      \"description\": \"The actions this rule applies for. VerbAll matches all actions. Recognized options are: `[\\\"create\\\", \\\"read\\\", \\\"update\\\", \\\"delete\\\", \\\"use\\\", \\\"launch\\\", \\\"*\\\"]`\",\n      \"items\": {\n       \"description\": \"Verb represents an API action\",\n       \"enum\": [\n        \"create\",\n        \"read\",\n        \"update\",\n        \"delete\",\n        \"use\",\n        \"launch\",\n        \"*\"\n       ],\n       \"type\": \"string\"\n      },\n      \"type\": \"array\"\n     }\n    },\n    \"type\": \"object\"\n   },\n   \"type\": \"array\"\n  }\n },\n \"title\": \"VDI Role\",\n \"type\": \"object\"\n}",
   "version": "rbac.kvdi.io/v1"
  },
  "configuration": null,
  "description": "",
  "displayName": "VDI Role",
  "format": "JSON",
  "id": "00000000-0000-0000-0000-000000000000",
  "metadata": {
   "genealogy": "",
   "isAnnotation": false,
   "isNamespaced": false,
   "published": false
  },
  "model": {
   "category": {
    "name": "Uncategorized"
   },
   "displayName": "Kvdi",
   "id": "00000000-0000-0000-0000-000000000000",
   "metadata": {
    "isAnnotation": false,
    "source_uri": "https://kvdi.github.io/kvdi/deploy/charts/kvdi-v0.3.5.tgz",
    "svgColor": "",
    "svgWhite": ""
   },
   "model": {
    "version": "0.3.5"
   },
   "name": "kvdi",
   "registrant": {
    "created_at": "0001-01-01T00:00:00Z",
    "credential_id": "00000000-0000-0000-0000-000000000000",
    "deleted_at": "0001-01-01T00:00:00Z",
    "id": "00000000-0000-0000-0000-000000000000",
    "kind": "artifacthub",
    "name": "Artifact Hub",
    "status": "discovered",
    "sub_type": "",
    "type": "registry",
    "updated_at": "0001-01-01T00:00:00Z",
    "user_id": "00000000-0000-0000-0000-000000000000"
   },
   "connection_id": "00000000-0000-0000-0000-000000000000",
   "schemaVersion": "models.meshery.io/v1beta1",
   "status": "ignored",
   "version": "v1.0.0",
   "components": null,
   "relationships": null
  },
  "schemaVersion": "components.meshery.io/v1beta1",
  "status": "ignored",
  "styles": {
   "primaryColor": "#00B39F",
   "secondaryColor": "#00D3A9",
   "shape": "circle",
   "svgColor": "",
   "svgWhite": ""
  },
  "version": "v1.0.0"
 }