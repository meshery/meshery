{"kind":"ImagePolicy","apiVersion":"image.toolkit.fluxcd.io/v1beta1","displayName":"Image Policy","format":"JSON","hostname":"","hostID":"00000000-0000-0000-0000-000000000000","displayhostname":"","metadata":{"isNamespaced":true},"model":{"name":"uffizzi-app","version":"1.2.1","displayName":"uffizzi-app","hostname":"","hostID":"00000000-0000-0000-0000-000000000000","displayhostname":"","category":{"name":"","metadata":null},"metadata":{"source_uri":"https://github.com/UffizziCloud/uffizzi/releases/download/uffizzi-app-1.3.0/uffizzi-app-1.3.0.tgz"}},"schema":"{\n \"description\": \"ImagePolicy is the Schema for the imagepolicies API\",\n \"properties\": {\n  \"spec\": {\n   \"description\": \"ImagePolicySpec defines the parameters for calculating the ImagePolicy\",\n   \"properties\": {\n    \"filterTags\": {\n     \"description\": \"FilterTags enables filtering for only a subset of tags based on a set of rules. If no rules are provided, all the tags from the repository will be ordered and compared.\",\n     \"properties\": {\n      \"extract\": {\n       \"description\": \"Extract allows a capture group to be extracted from the specified regular expression pattern, useful before tag evaluation.\",\n       \"type\": \"string\"\n      },\n      \"pattern\": {\n       \"description\": \"Pattern specifies a regular expression pattern used to filter for image tags.\",\n       \"type\": \"string\"\n      }\n     },\n     \"type\": \"object\"\n    },\n    \"imageRepositoryRef\": {\n     \"description\": \"ImageRepositoryRef points at the object specifying the image being scanned\",\n     \"properties\": {\n      \"name\": {\n       \"description\": \"Name of the referent.\",\n       \"type\": \"string\"\n      },\n      \"namespace\": {\n       \"description\": \"Namespace of the referent, when not specified it acts as LocalObjectReference.\",\n       \"type\": \"string\"\n      }\n     },\n     \"required\": [\n      \"name\"\n     ],\n     \"type\": \"object\"\n    },\n    \"policy\": {\n     \"description\": \"Policy gives the particulars of the policy to be followed in selecting the most recent image\",\n     \"properties\": {\n      \"alphabetical\": {\n       \"description\": \"Alphabetical set of rules to use for alphabetical ordering of the tags.\",\n       \"properties\": {\n        \"order\": {\n         \"default\": \"asc\",\n         \"description\": \"Order specifies the sorting order of the tags. Given the letters of the alphabet as tags, ascending order would select Z, and descending order would select A.\",\n         \"enum\": [\n          \"asc\",\n          \"desc\"\n         ],\n         \"type\": \"string\"\n        }\n       },\n       \"type\": \"object\"\n      },\n      \"numerical\": {\n       \"description\": \"Numerical set of rules to use for numerical ordering of the tags.\",\n       \"properties\": {\n        \"order\": {\n         \"default\": \"asc\",\n         \"description\": \"Order specifies the sorting order of the tags. Given the integer values from 0 to 9 as tags, ascending order would select 9, and descending order would select 0.\",\n         \"enum\": [\n          \"asc\",\n          \"desc\"\n         ],\n         \"type\": \"string\"\n        }\n       },\n       \"type\": \"object\"\n      },\n      \"semver\": {\n       \"description\": \"SemVer gives a semantic version range to check against the tags available.\",\n       \"properties\": {\n        \"range\": {\n         \"description\": \"Range gives a semver range for the image tag; the highest version within the range that's a tag yields the latest image.\",\n         \"type\": \"string\"\n        }\n       },\n       \"required\": [\n        \"range\"\n       ],\n       \"type\": \"object\"\n      }\n     },\n     \"type\": \"object\"\n    }\n   },\n   \"required\": [\n    \"imageRepositoryRef\",\n    \"policy\"\n   ],\n   \"type\": \"object\"\n  }\n },\n \"title\": \"Image Policy\",\n \"type\": \"object\"\n}"}