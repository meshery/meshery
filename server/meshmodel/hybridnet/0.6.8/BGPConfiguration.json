{
  "id": "00000000-0000-0000-0000-000000000000",
  "kind": "BGPConfiguration",
  "apiVersion": "crd.projectcalico.org/v1",
  "displayName": "BGP Configuration",
  "format": "JSON",
  "hostID": "00000000-0000-0000-0000-000000000000",
  "metadata": {
   "isNamespaced": false
  },
  "model": {
   "id": "00000000-0000-0000-0000-000000000000",
   "name": "hybridnet",
   "version": "0.6.8",
   "displayName": "hybridnet",
   "hostID": "00000000-0000-0000-0000-000000000000",
   "category": {
    "name": "",
    "metadata": null
   },
   "metadata": {
    "source_uri": "https://github.com/alibaba/hybridnet/releases/download/helm-chart-0.6.8/hybridnet-0.6.8.tgz"
   },
   "components": null,
   "relationships": null
  },
  "schema": "{\n \"description\": \"BGPConfiguration contains the configuration for any BGP routing.\",\n \"properties\": {\n  \"spec\": {\n   \"description\": \"BGPConfigurationSpec contains the values of the BGP configuration.\",\n   \"properties\": {\n    \"asNumber\": {\n     \"description\": \"ASNumber is the default AS number used by a node. [Default: 64512]\",\n     \"format\": \"int32\",\n     \"type\": \"integer\"\n    },\n    \"communities\": {\n     \"description\": \"Communities is a list of BGP community values and their arbitrary names for tagging routes.\",\n     \"items\": {\n      \"description\": \"Community contains standard or large community value and its name.\",\n      \"properties\": {\n       \"name\": {\n        \"description\": \"Name given to community value.\",\n        \"type\": \"string\"\n       },\n       \"value\": {\n        \"description\": \"Value must be of format `aa:nn` or `aa:nn:mm`. For standard community use `aa:nn` format, where `aa` and `nn` are 16 bit number. For large community use `aa:nn:mm` format, where `aa`, `nn` and `mm` are 32 bit number. Where, `aa` is an AS Number, `nn` and `mm` are per-AS identifier.\",\n        \"pattern\": \"^(\\\\d+):(\\\\d+)$|^(\\\\d+):(\\\\d+):(\\\\d+)$\",\n        \"type\": \"string\"\n       }\n      },\n      \"type\": \"object\"\n     },\n     \"type\": \"array\"\n    },\n    \"listenPort\": {\n     \"description\": \"ListenPort is the port where BGP protocol should listen. Defaults to 179\",\n     \"maximum\": 65535,\n     \"minimum\": 1,\n     \"type\": \"integer\"\n    },\n    \"logSeverityScreen\": {\n     \"description\": \"LogSeverityScreen is the log severity above which logs are sent to the stdout. [Default: INFO]\",\n     \"type\": \"string\"\n    },\n    \"nodeToNodeMeshEnabled\": {\n     \"description\": \"NodeToNodeMeshEnabled sets whether full node to node BGP mesh is enabled. [Default: true]\",\n     \"type\": \"boolean\"\n    },\n    \"prefixAdvertisements\": {\n     \"description\": \"PrefixAdvertisements contains per-prefix advertisement configuration.\",\n     \"items\": {\n      \"description\": \"PrefixAdvertisement configures advertisement properties for the specified CIDR.\",\n      \"properties\": {\n       \"cidr\": {\n        \"description\": \"CIDR for which properties should be advertised.\",\n        \"type\": \"string\"\n       },\n       \"communities\": {\n        \"description\": \"Communities can be list of either community names already defined in `Specs.Communities` or community value of format `aa:nn` or `aa:nn:mm`. For standard community use `aa:nn` format, where `aa` and `nn` are 16 bit number. For large community use `aa:nn:mm` format, where `aa`, `nn` and `mm` are 32 bit number. Where,`aa` is an AS Number, `nn` and `mm` are per-AS identifier.\",\n        \"items\": {\n         \"type\": \"string\"\n        },\n        \"type\": \"array\"\n       }\n      },\n      \"type\": \"object\"\n     },\n     \"type\": \"array\"\n    },\n    \"serviceClusterIPs\": {\n     \"description\": \"ServiceClusterIPs are the CIDR blocks from which service cluster IPs are allocated. If specified, Calico will advertise these blocks, as well as any cluster IPs within them.\",\n     \"items\": {\n      \"description\": \"ServiceClusterIPBlock represents a single allowed ClusterIP CIDR block.\",\n      \"properties\": {\n       \"cidr\": {\n        \"type\": \"string\"\n       }\n      },\n      \"type\": \"object\"\n     },\n     \"type\": \"array\"\n    },\n    \"serviceExternalIPs\": {\n     \"description\": \"ServiceExternalIPs are the CIDR blocks for Kubernetes Service External IPs. Kubernetes Service ExternalIPs will only be advertised if they are within one of these blocks.\",\n     \"items\": {\n      \"description\": \"ServiceExternalIPBlock represents a single allowed External IP CIDR block.\",\n      \"properties\": {\n       \"cidr\": {\n        \"type\": \"string\"\n       }\n      },\n      \"type\": \"object\"\n     },\n     \"type\": \"array\"\n    },\n    \"serviceLoadBalancerIPs\": {\n     \"description\": \"ServiceLoadBalancerIPs are the CIDR blocks for Kubernetes Service LoadBalancer IPs. Kubernetes Service status.LoadBalancer.Ingress IPs will only be advertised if they are within one of these blocks.\",\n     \"items\": {\n      \"description\": \"ServiceLoadBalancerIPBlock represents a single allowed LoadBalancer IP CIDR block.\",\n      \"properties\": {\n       \"cidr\": {\n        \"type\": \"string\"\n       }\n      },\n      \"type\": \"object\"\n     },\n     \"type\": \"array\"\n    }\n   },\n   \"type\": \"object\"\n  }\n },\n \"title\": \"BGP Configuration\",\n \"type\": \"object\"\n}"
 }