{
  "capabilities": [
   {
    "description": "Initiate a performance test. Meshery will execute the load generation, collect metrics, and present the results.",
    "displayName": "Performance Test",
    "entityState": [
     "instance"
    ],
    "key": "",
    "kind": "action",
    "metadata": null,
    "schemaVersion": "capability.meshery.io/v1alpha1",
    "status": "enabled",
    "subType": "perf-test",
    "type": "operator",
    "version": "0.7.0"
   },
   {
    "description": "Configure the workload specific setting of a component",
    "displayName": "Workload Configuration",
    "entityState": [
     "declaration"
    ],
    "key": "",
    "kind": "mutate",
    "metadata": null,
    "schemaVersion": "capability.meshery.io/v1alpha1",
    "status": "enabled",
    "subType": "config",
    "type": "configuration",
    "version": "0.7.0"
   },
   {
    "description": "Configure Labels And Annotations for  the component ",
    "displayName": "Labels and Annotations Configuration",
    "entityState": [
     "declaration"
    ],
    "key": "",
    "kind": "mutate",
    "metadata": null,
    "schemaVersion": "capability.meshery.io/v1alpha1",
    "status": "enabled",
    "subType": "labels-and-annotations",
    "type": "configuration",
    "version": "0.7.0"
   },
   {
    "description": "View relationships for the component",
    "displayName": "Relationships",
    "entityState": [
     "declaration",
     "instance"
    ],
    "key": "",
    "kind": "view",
    "metadata": null,
    "schemaVersion": "capability.meshery.io/v1alpha1",
    "status": "enabled",
    "subType": "relationship",
    "type": "configuration",
    "version": "0.7.0"
   },
   {
    "description": "View Component Definition ",
    "displayName": "Json Schema",
    "entityState": [
     "declaration",
     "instance"
    ],
    "key": "",
    "kind": "view",
    "metadata": null,
    "schemaVersion": "capability.meshery.io/v1alpha1",
    "status": "enabled",
    "subType": "definition",
    "type": "configuration",
    "version": "0.7.0"
   },
   {
    "description": "Configure the visual styles for the component",
    "displayName": "Styling",
    "entityState": [
     "declaration"
    ],
    "key": "",
    "kind": "mutate",
    "metadata": null,
    "schemaVersion": "capability.meshery.io/v1alpha1",
    "status": "enabled",
    "subType": "",
    "type": "style",
    "version": "0.7.0"
   },
   {
    "description": "Change the shape of the component",
    "displayName": "Change Shape",
    "entityState": [
     "declaration"
    ],
    "key": "",
    "kind": "mutate",
    "metadata": null,
    "schemaVersion": "capability.meshery.io/v1alpha1",
    "status": "enabled",
    "subType": "shape",
    "type": "style",
    "version": "0.7.0"
   },
   {
    "description": "Drag and Drop a component into a parent component in graph view",
    "displayName": "Compound Drag And Drop",
    "entityState": [
     "declaration"
    ],
    "key": "",
    "kind": "interaction",
    "metadata": null,
    "schemaVersion": "capability.meshery.io/v1alpha1",
    "status": "enabled",
    "subType": "compoundDnd",
    "type": "graph",
    "version": "0.7.0"
   }
  ],
  "component": {
   "kind": "MongoDB",
   "schema": "{\n \"description\": \"MongoDB is the Schema for the mongodbs API\",\n \"properties\": {\n  \"spec\": {\n   \"description\": \"MongoDBSpec defines the desired state of MongoDB\",\n   \"properties\": {\n    \"featureCompatibilityVersion\": {\n     \"description\": \"FeatureCompatibilityVersion configures the feature compatibility version that will be set for the deployment\",\n     \"type\": \"string\"\n    },\n    \"members\": {\n     \"description\": \"Members is the number of members in the replica set\",\n     \"type\": \"integer\"\n    },\n    \"replicaSetHorizons\": {\n     \"description\": \"Add this parameter and values if you need your database to be accessed outside of Kubernetes. This setting allows you to provide different DNS settings within the Kubernetes cluster and to the Kubernetes cluster. The Kubernetes Operator uses split horizon DNS for replica set members. This feature allows communication both within the Kubernetes cluster and from outside Kubernetes.\",\n     \"items\": {\n      \"properties\": {},\n      \"type\": \"object\"\n     },\n     \"type\": \"array\"\n    },\n    \"security\": {\n     \"description\": \"Security configures security features, such as TLS, and authentication settings for a deployment\",\n     \"properties\": {\n      \"authentication\": {\n       \"properties\": {\n        \"modes\": {\n         \"description\": \"Modes is an array specifying which authentication methods should be enabled\",\n         \"items\": {\n          \"enum\": [\n           \"SCRAM\"\n          ],\n          \"type\": \"string\"\n         },\n         \"type\": \"array\"\n        }\n       },\n       \"required\": [\n        \"modes\"\n       ],\n       \"type\": \"object\"\n      },\n      \"tls\": {\n       \"description\": \"TLS configuration for both client-server and server-server communication\",\n       \"properties\": {\n        \"caConfigMapRef\": {\n         \"description\": \"CaConfigMap is a reference to a ConfigMap containing the certificate for the CA which signed the server certificates The certificate is expected to be available under the key \\\"ca.crt\\\"\",\n         \"properties\": {\n          \"name\": {\n           \"type\": \"string\"\n          }\n         },\n         \"required\": [\n          \"name\"\n         ],\n         \"type\": \"object\"\n        },\n        \"certificateKeySecretRef\": {\n         \"description\": \"CertificateKeySecret is a reference to a Secret containing a private key and certificate to use for TLS. The key and cert are expected to be PEM encoded and available at \\\"tls.key\\\" and \\\"tls.crt\\\". This is the same format used for the standard \\\"kubernetes.io/tls\\\" Secret type, but no specific type is required.\",\n         \"properties\": {\n          \"name\": {\n           \"type\": \"string\"\n          }\n         },\n         \"required\": [\n          \"name\"\n         ],\n         \"type\": \"object\"\n        },\n        \"enabled\": {\n         \"type\": \"boolean\"\n        },\n        \"optional\": {\n         \"description\": \"Optional configures if TLS should be required or optional for connections\",\n         \"type\": \"boolean\"\n        }\n       },\n       \"required\": [\n        \"enabled\"\n       ],\n       \"type\": \"object\"\n      }\n     },\n     \"type\": \"object\"\n    },\n    \"statefulSet\": {\n     \"description\": \"StatefulSetConfiguration holds the optional custom StatefulSet that should be merged into the operator created one.\",\n     \"type\": \"object\"\n    },\n    \"type\": {\n     \"description\": \"Type defines which type of MongoDB deployment the resource should create\",\n     \"enum\": [\n      \"ReplicaSet\"\n     ],\n     \"type\": \"string\"\n    },\n    \"users\": {\n     \"description\": \"Users specifies the MongoDB users that should be configured in your deployment\",\n     \"items\": {\n      \"properties\": {\n       \"db\": {\n        \"description\": \"DB is the database the user is stored in. Defaults to \\\"admin\\\"\",\n        \"type\": \"string\"\n       },\n       \"name\": {\n        \"description\": \"Name is the username of the user\",\n        \"type\": \"string\"\n       },\n       \"passwordSecretRef\": {\n        \"description\": \"PasswordSecretRef is a reference to the secret containing this user's password\",\n        \"properties\": {\n         \"key\": {\n          \"description\": \"Key is the key in the secret storing this password. Defaults to \\\"password\\\"\",\n          \"type\": \"string\"\n         },\n         \"name\": {\n          \"description\": \"Name is the name of the secret storing this user's password\",\n          \"type\": \"string\"\n         }\n        },\n        \"required\": [\n         \"name\"\n        ],\n        \"type\": \"object\"\n       },\n       \"roles\": {\n        \"description\": \"Roles is an array of roles assigned to this user\",\n        \"items\": {\n         \"description\": \"Role is the database role this user should have\",\n         \"properties\": {\n          \"db\": {\n           \"description\": \"DB is the database the role can act on\",\n           \"type\": \"string\"\n          },\n          \"name\": {\n           \"description\": \"Name is the name of the role\",\n           \"type\": \"string\"\n          }\n         },\n         \"required\": [\n          \"db\",\n          \"name\"\n         ],\n         \"type\": \"object\"\n        },\n        \"type\": \"array\"\n       },\n       \"scramCredentialsSecretName\": {\n        \"description\": \"ScramCredentialsSecretName appended by string \\\"scram-credentials\\\" is the name of the secret object created by the mongoDB operator for storing SCRAM credentials\",\n        \"pattern\": \"^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$\",\n        \"type\": \"string\"\n       }\n      },\n      \"required\": [\n       \"name\",\n       \"passwordSecretRef\",\n       \"roles\",\n       \"scramCredentialsSecretName\"\n      ],\n      \"type\": \"object\"\n     },\n     \"type\": \"array\"\n    },\n    \"version\": {\n     \"description\": \"Version defines which version of MongoDB will be used\",\n     \"type\": \"string\"\n    }\n   },\n   \"required\": [\n    \"security\",\n    \"type\",\n    \"users\",\n    \"version\"\n   ],\n   \"type\": \"object\"\n  }\n },\n \"title\": \"Mongo DB\",\n \"type\": \"object\"\n}",
   "version": "mongodb.com/v1"
  },
  "configuration": null,
  "description": "",
  "displayName": "Mongo DB",
  "format": "JSON",
  "id": "00000000-0000-0000-0000-000000000000",
  "metadata": {
   "genealogy": "",
   "isAnnotation": false,
   "isNamespaced": true,
   "published": false
  },
  "model": {
   "category": {
    "name": "App Definition and Development"
   },
   "displayName": "Mongodb Operator",
   "id": "00000000-0000-0000-0000-000000000000",
   "metadata": {
    "isAnnotation": false,
    "primaryColor": "#00B39F",
    "secondaryColor": "#00D3A9",
    "shape": "circle",
    "source_uri": "https://helm.cowley.tech/mongodb-operator-0.1.1.tgz",
    "styleOverrides": "",
    "svgColor": "",
    "svgComplete": "",
    "svgWhite": ""
   },
   "model": {
    "version": "0.1.1"
   },
   "name": "mongodb-operator",
   "registrant": {
    "created_at": "0001-01-01T00:00:00Z",
    "credential_id": "00000000-0000-0000-0000-000000000000",
    "deleted_at": "0001-01-01T00:00:00Z",
    "id": "00000000-0000-0000-0000-000000000000",
    "kind": "artifacthub",
    "name": "Artifact Hub",
    "status": "discovered",
    "sub_type": "",
    "type": "registry",
    "updated_at": "0001-01-01T00:00:00Z",
    "user_id": "00000000-0000-0000-0000-000000000000"
   },
   "connection_id": "00000000-0000-0000-0000-000000000000",
   "schemaVersion": "models.meshery.io/v1beta1",
   "status": "ignored",
   "subCategory": "Database",
   "version": "v1.0.0",
   "components": null,
   "relationships": null
  },
  "schemaVersion": "components.meshery.io/v1beta1",
  "status": "enabled",
  "styles": {
   "primaryColor": "#00B39F",
   "secondaryColor": "#00D3A9",
   "shape": "circle",
   "svgColor": "",
   "svgWhite": ""
  },
  "version": "v1.0.0"
 }