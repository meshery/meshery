{"kind":"EndpointMonitor","apiVersion":"endpointmonitor.stakater.com/v1alpha1","displayName":"Endpoint Monitor","format":"JSON","hostname":"","hostID":"00000000-0000-0000-0000-000000000000","displayhostname":"","metadata":{"capabilities":"","genealogy":"","isAnnotation":false,"isModelAnnotation":"FALSE","isNamespaced":true,"logoURL":"","model":"ingressmonitorcontroller","modelDisplayName":"Ingressmonitorcontroller","primaryColor":"#00B39F","published":false,"secondaryColor":"#00D3A9","shape":"circle","styleOverrides":"","subCategory":"Uncategorized","svgColor":"","svgComplete":"","svgWhite":""},"model":{"name":"ingressmonitorcontroller","version":"2.1.27","displayName":"Ingressmonitorcontroller","hostname":"","hostID":"00000000-0000-0000-0000-000000000000","displayhostname":"","category":{"name":"Uncategorized","metadata":null},"metadata":{"source_uri":"https://stakater.github.io/stakater-charts/ingressmonitorcontroller-2.1.46.tgz"},"components":null,"relationships":null},"schema":"{\n \"description\": \"EndpointMonitor is the Schema for the endpointmonitors API\",\n \"properties\": {\n  \"spec\": {\n   \"description\": \"EndpointMonitorSpec defines the desired state of EndpointMonitor\",\n   \"properties\": {\n    \"appInsightsConfig\": {\n     \"description\": \"Configuration for AppInsights Monitor Provider\",\n     \"properties\": {\n      \"frequency\": {\n       \"description\": \"Sets how often the test should run from each test location. Possible values: `300,600,900` seconds\",\n       \"type\": \"integer\"\n      },\n      \"retryEnable\": {\n       \"description\": \"If its `true`, falied test will be retry after a short interval. Possible values: `true, false`\",\n       \"type\": \"boolean\"\n      },\n      \"statusCode\": {\n       \"description\": \"Returned status code that is counted as a success\",\n       \"type\": \"integer\"\n      }\n     },\n     \"type\": \"object\"\n    },\n    \"forceHttps\": {\n     \"description\": \"Force monitor endpoint to use HTTPS\",\n     \"type\": \"boolean\"\n    },\n    \"gcloudConfig\": {\n     \"description\": \"Configuration for Google Cloud Monitor Provider\",\n     \"properties\": {\n      \"projectId\": {\n       \"description\": \"Google Cloud Project ID\",\n       \"type\": \"string\"\n      }\n     },\n     \"type\": \"object\"\n    },\n    \"grafanaConfig\": {\n     \"description\": \"Configuration for Grafana Cloud Monitor Provider\",\n     \"properties\": {\n      \"tenantId\": {\n       \"format\": \"int64\",\n       \"type\": \"integer\"\n      }\n     },\n     \"type\": \"object\"\n    },\n    \"healthEndpoint\": {\n     \"type\": \"string\"\n    },\n    \"pingdomConfig\": {\n     \"description\": \"Configuration for Pingdom Monitor Provider\",\n     \"properties\": {\n      \"alertContacts\": {\n       \"description\": \"`-` separated contact id's (e.g. \\\"1234567_8_9-9876543_2_1\\\")\",\n       \"type\": \"string\"\n      },\n      \"alertIntegrations\": {\n       \"description\": \"`-` separated set list of integrations ids (e.g. \\\"91166-12168\\\")\",\n       \"type\": \"string\"\n      },\n      \"basicAuthUser\": {\n       \"description\": \"Required for basic-authentication\",\n       \"type\": \"string\"\n      },\n      \"notifyWhenBackUp\": {\n       \"description\": \"Set to \\\"false\\\" to disable recovery notifications\",\n       \"type\": \"boolean\"\n      },\n      \"paused\": {\n       \"description\": \"Set to \\\"true\\\" to pause checks\",\n       \"type\": \"boolean\"\n      },\n      \"postDataEnvVar\": {\n       \"description\": \"Data that should be posted to the web page, for example submission data for a sign-up or login form. The data needs to be formatted in the same way as a web browser would send it to the web server. Because post data contains sensitive secret this field is only reference to a environment variable.\",\n       \"type\": \"string\"\n      },\n      \"requestHeaders\": {\n       \"description\": \"Custom pingdom request headers\",\n       \"type\": \"string\"\n      },\n      \"resolution\": {\n       \"description\": \"The pingdom check interval in minutes\",\n       \"type\": \"integer\"\n      },\n      \"sendNotificationWhenDown\": {\n       \"description\": \"How many failed check attempts before notifying\",\n       \"type\": \"integer\"\n      },\n      \"shouldContain\": {\n       \"description\": \"Set to text string that has to be present in the HTML code of the page\",\n       \"type\": \"string\"\n      },\n      \"sslDownDaysBefore\": {\n       \"description\": \"Consider down prior to certificate expiring Select the number of days prior to your certificate expiry date that you want to consider the check down. At this day your check will be considered down and if applicable a down alert will be sent.\",\n       \"type\": \"integer\"\n      },\n      \"tags\": {\n       \"description\": \"Comma separated set of tags to apply to check (e.g. \\\"testing,aws\\\")\",\n       \"type\": \"string\"\n      },\n      \"teamAlertContacts\": {\n       \"description\": \"`-` separated team id's (e.g. \\\"1234567_8_9-9876543_2_1\\\")\",\n       \"type\": \"string\"\n      },\n      \"verifyCertificate\": {\n       \"description\": \"Monitor SSL/TLS certificate Monitor the validity of your SSL/TLS certificate. With this enabled Uptime checks will be considered DOWN when the certificate becomes invalid or expires. SSL/TLS certificate monitoring is available for HTTP checks.\",\n       \"type\": \"boolean\"\n      }\n     },\n     \"type\": \"object\"\n    },\n    \"providers\": {\n     \"description\": \"Comma separated list of providers\",\n     \"type\": \"string\"\n    },\n    \"statusCakeConfig\": {\n     \"description\": \"Configuration for StatusCake Monitor Provider\",\n     \"properties\": {\n      \"basicAuthUser\": {\n       \"description\": \"Basic Auth User\",\n       \"type\": \"string\"\n      },\n      \"checkRate\": {\n       \"description\": \"Set Check Rate for the monitor\",\n       \"type\": \"integer\"\n      },\n      \"confirmation\": {\n       \"description\": \"Confirmation value ranges from (0,10)\",\n       \"maximum\": 10,\n       \"minimum\": 0,\n       \"type\": \"integer\"\n      },\n      \"contactGroup\": {\n       \"description\": \"Contact Group to be alerted.\",\n       \"type\": \"string\"\n      },\n      \"enableSslAlert\": {\n       \"description\": \"Enable SSL Alert\",\n       \"type\": \"boolean\"\n      },\n      \"findString\": {\n       \"description\": \"String to look for within the response. Considered down if not found\",\n       \"type\": \"string\"\n      },\n      \"followRedirect\": {\n       \"description\": \"Enable ingress redirects\",\n       \"type\": \"boolean\"\n      },\n      \"paused\": {\n       \"description\": \"Pause the service\",\n       \"type\": \"boolean\"\n      },\n      \"pingUrl\": {\n       \"description\": \"Webhook for alerts\",\n       \"type\": \"string\"\n      },\n      \"port\": {\n       \"description\": \"TCP Port\",\n       \"type\": \"integer\"\n      },\n      \"realBrowser\": {\n       \"description\": \"Enable Real Browser\",\n       \"type\": \"boolean\"\n      },\n      \"regions\": {\n       \"description\": \"Comma separated list of Node Location IDs\",\n       \"type\": \"string\"\n      },\n      \"statusCodes\": {\n       \"description\": \"Comma separated list of HTTP codes to trigger error on\",\n       \"type\": \"string\"\n      },\n      \"testTags\": {\n       \"description\": \"Comma separated list of tags\",\n       \"type\": \"string\"\n      },\n      \"testType\": {\n       \"description\": \"Set Test type - HTTP, TCP, PING\",\n       \"type\": \"string\"\n      },\n      \"triggerRate\": {\n       \"description\": \"Minutes to wait before sending an alert\",\n       \"type\": \"integer\"\n      }\n     },\n     \"type\": \"object\"\n    },\n    \"updownConfig\": {\n     \"description\": \"Configuration for Updown Monitor Provider\",\n     \"properties\": {\n      \"enable\": {\n       \"description\": \"Enable or disable checks\",\n       \"type\": \"boolean\"\n      },\n      \"period\": {\n       \"description\": \"The pingdom check interval in seconds\",\n       \"type\": \"integer\"\n      },\n      \"publishPage\": {\n       \"description\": \"Make status page public or not\",\n       \"type\": \"boolean\"\n      },\n      \"requestHeaders\": {\n       \"description\": \"Additional request headers for API calls\",\n       \"type\": \"string\"\n      }\n     },\n     \"type\": \"object\"\n    },\n    \"uptimeConfig\": {\n     \"description\": \"Configuration for Uptime Monitor Provider\",\n     \"properties\": {\n      \"checkType\": {\n       \"description\": \"The uptime check type that can be HTTP/DNS/ICMP etc.\",\n       \"type\": \"string\"\n      },\n      \"contacts\": {\n       \"description\": \"Add one or more contact groups separated by `,`\",\n       \"type\": \"string\"\n      },\n      \"interval\": {\n       \"description\": \"The uptime check interval in seconds\",\n       \"type\": \"integer\"\n      },\n      \"locations\": {\n       \"description\": \"Add different locations for the check\",\n       \"type\": \"string\"\n      },\n      \"tags\": {\n       \"description\": \"Add one or more tags for the check separated by `,`\",\n       \"type\": \"string\"\n      }\n     },\n     \"type\": \"object\"\n    },\n    \"uptimeRobotConfig\": {\n     \"description\": \"Configuration for UptimeRobot Monitor Provider\",\n     \"properties\": {\n      \"alertContacts\": {\n       \"description\": \"The uptimerobot alertContacts to be associated with this monitor\",\n       \"type\": \"string\"\n      },\n      \"customHTTPStatuses\": {\n       \"description\": \"Defines which http status codes are treated as up or down For ex: 200:0_401:1_503:1 (to accept 200 as down and 401 and 503 as up)\",\n       \"type\": \"string\"\n      },\n      \"interval\": {\n       \"description\": \"The uptimerobot check interval in seconds\",\n       \"minimum\": 60,\n       \"type\": \"integer\"\n      },\n      \"keywordExists\": {\n       \"description\": \"Alert if value exist (yes) or doesn't exist (no) (Only if monitor-type is keyword)\",\n       \"enum\": [\n        \"yes\",\n        \"no\"\n       ],\n       \"type\": \"string\"\n      },\n      \"keywordValue\": {\n       \"description\": \"keyword to check on URL (e.g.'search' or '404') (Only if monitor-type is keyword)\",\n       \"type\": \"string\"\n      },\n      \"maintenanceWindows\": {\n       \"description\": \"Specify maintenanceWindows i.e. once or recurring “do-not-monitor periods”\",\n       \"type\": \"string\"\n      },\n      \"monitorType\": {\n       \"description\": \"The uptimerobot monitor type (http or keyword)\",\n       \"enum\": [\n        \"http\",\n        \"keyword\"\n       ],\n       \"type\": \"string\"\n      },\n      \"statusPages\": {\n       \"description\": \"The uptimerobot public status page ID to add this monitor to\",\n       \"type\": \"string\"\n      }\n     },\n     \"type\": \"object\"\n    },\n    \"url\": {\n     \"description\": \"URL to monitor\",\n     \"type\": \"string\"\n    },\n    \"urlFrom\": {\n     \"description\": \"URL to monitor from either an ingress or route reference\",\n     \"properties\": {\n      \"ingressRef\": {\n       \"description\": \"IngressURLSource selects an Ingress to populate the URL with\",\n       \"properties\": {\n        \"name\": {\n         \"type\": \"string\"\n        }\n       },\n       \"required\": [\n        \"name\"\n       ],\n       \"type\": \"object\"\n      },\n      \"routeRef\": {\n       \"description\": \"RouteURLSource selects a Route to populate the URL with\",\n       \"properties\": {\n        \"name\": {\n         \"type\": \"string\"\n        }\n       },\n       \"required\": [\n        \"name\"\n       ],\n       \"type\": \"object\"\n      }\n     },\n     \"type\": \"object\"\n    }\n   },\n   \"type\": \"object\"\n  }\n },\n \"title\": \"Endpoint Monitor\",\n \"type\": \"object\"\n}"}