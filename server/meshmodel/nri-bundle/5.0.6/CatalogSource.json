{"kind":"CatalogSource","apiVersion":"operators.coreos.com/v1alpha1","displayName":"Catalog Source","format":"JSON","hostname":"","hostID":"00000000-0000-0000-0000-000000000000","displayhostname":"","metadata":{"capabilities":"","genealogy":"","isAnnotation":false,"isModelAnnotation":"FALSE","isNamespaced":true,"logoURL":"","model":"nri-bundle","modelDisplayName":"NRI Bundle","primaryColor":"#00B39F","published":false,"secondaryColor":"#00D3A9","shape":"circle","styleOverrides":"","subCategory":"Uncategorized","svgColor":"","svgComplete":"","svgWhite":""},"model":{"name":"nri-bundle","version":"5.0.6","displayName":"NRI Bundle","hostname":"","hostID":"00000000-0000-0000-0000-000000000000","displayhostname":"","category":{"name":"Uncategorized","metadata":null},"metadata":{"source_uri":"https://github.com/newrelic/helm-charts/releases/download/nri-bundle-5.0.54/nri-bundle-5.0.54.tgz"},"components":null,"relationships":null},"schema":"{\n \"description\": \"CatalogSource is a repository of CSVs, CRDs, and operator packages.\",\n \"properties\": {\n  \"spec\": {\n   \"properties\": {\n    \"address\": {\n     \"description\": \"Address is a host that OLM can use to connect to a pre-existing registry. Format: \\u003cregistry-host or ip\\u003e:\\u003cport\\u003e Only used when SourceType = SourceTypeGrpc. Ignored when the Image field is set.\",\n     \"type\": \"string\"\n    },\n    \"configMap\": {\n     \"description\": \"ConfigMap is the name of the ConfigMap to be used to back a configmap-server registry. Only used when SourceType = SourceTypeConfigmap or SourceTypeInternal.\",\n     \"type\": \"string\"\n    },\n    \"description\": {\n     \"type\": \"string\"\n    },\n    \"displayName\": {\n     \"description\": \"Metadata\",\n     \"type\": \"string\"\n    },\n    \"grpcPodConfig\": {\n     \"description\": \"GrpcPodConfig exposes different overrides for the pod spec of the CatalogSource Pod. Only used when SourceType = SourceTypeGrpc and Image is set.\",\n     \"properties\": {\n      \"nodeSelector\": {\n       \"additionalProperties\": {\n        \"type\": \"string\"\n       },\n       \"description\": \"NodeSelector is a selector which must be true for the pod to fit on a node. Selector which must match a node's labels for the pod to be scheduled on that node.\",\n       \"type\": \"object\"\n      },\n      \"priorityClassName\": {\n       \"description\": \"If specified, indicates the pod's priority. If not specified, the pod priority will be default or zero if there is no default.\",\n       \"type\": \"string\"\n      },\n      \"securityContextConfig\": {\n       \"default\": \"legacy\",\n       \"description\": \"SecurityContextConfig can be one of `legacy` or `restricted`. The CatalogSource's pod is either injected with the right pod.spec.securityContext and pod.spec.container[*].securityContext values to allow the pod to run in Pod Security Admission (PSA) `restricted` mode, or doesn't set these values at all, in which case the pod can only be run in PSA `baseline` or `privileged` namespaces. Currently if the SecurityContextConfig is unspecified, the default value of `legacy` is used. Specifying a value other than `legacy` or `restricted` result in a validation error. When using older catalog images, which could not be run in `restricted` mode, the SecurityContextConfig should be set to `legacy`. \\n In a future version will the default will be set to `restricted`, catalog maintainers should rebuild their catalogs with a version of opm that supports running catalogSource pods in `restricted` mode to prepare for these changes. \\n More information about PSA can be found here: https://kubernetes.io/docs/concepts/security/pod-security-admission/'\",\n       \"enum\": [\n        \"legacy\",\n        \"restricted\"\n       ],\n       \"type\": \"string\"\n      },\n      \"tolerations\": {\n       \"description\": \"Tolerations are the catalog source's pod's tolerations.\",\n       \"items\": {\n        \"description\": \"The pod this Toleration is attached to tolerates any taint that matches the triple \\u003ckey,value,effect\\u003e using the matching operator \\u003coperator\\u003e.\",\n        \"properties\": {\n         \"effect\": {\n          \"description\": \"Effect indicates the taint effect to match. Empty means match all taint effects. When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.\",\n          \"type\": \"string\"\n         },\n         \"key\": {\n          \"description\": \"Key is the taint key that the toleration applies to. Empty means match all taint keys. If the key is empty, operator must be Exists; this combination means to match all values and all keys.\",\n          \"type\": \"string\"\n         },\n         \"operator\": {\n          \"description\": \"Operator represents a key's relationship to the value. Valid operators are Exists and Equal. Defaults to Equal. Exists is equivalent to wildcard for value, so that a pod can tolerate all taints of a particular category.\",\n          \"type\": \"string\"\n         },\n         \"tolerationSeconds\": {\n          \"description\": \"TolerationSeconds represents the period of time the toleration (which must be of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default, it is not set, which means tolerate the taint forever (do not evict). Zero and negative values will be treated as 0 (evict immediately) by the system.\",\n          \"format\": \"int64\",\n          \"type\": \"integer\"\n         },\n         \"value\": {\n          \"description\": \"Value is the taint value the toleration matches to. If the operator is Exists, the value should be empty, otherwise just a regular string.\",\n          \"type\": \"string\"\n         }\n        },\n        \"type\": \"object\"\n       },\n       \"type\": \"array\"\n      }\n     },\n     \"type\": \"object\"\n    },\n    \"icon\": {\n     \"properties\": {\n      \"base64data\": {\n       \"type\": \"string\"\n      },\n      \"mediatype\": {\n       \"type\": \"string\"\n      }\n     },\n     \"required\": [\n      \"base64data\",\n      \"mediatype\"\n     ],\n     \"type\": \"object\"\n    },\n    \"image\": {\n     \"description\": \"Image is an operator-registry container image to instantiate a registry-server with. Only used when SourceType = SourceTypeGrpc. If present, the address field is ignored.\",\n     \"type\": \"string\"\n    },\n    \"priority\": {\n     \"description\": \"Priority field assigns a weight to the catalog source to prioritize them so that it can be consumed by the dependency resolver. Usage: Higher weight indicates that this catalog source is preferred over lower weighted catalog sources during dependency resolution. The range of the priority value can go from positive to negative in the range of int32. The default value to a catalog source with unassigned priority would be 0. The catalog source with the same priority values will be ranked lexicographically based on its name.\",\n     \"type\": \"integer\"\n    },\n    \"publisher\": {\n     \"type\": \"string\"\n    },\n    \"secrets\": {\n     \"description\": \"Secrets represent set of secrets that can be used to access the contents of the catalog. It is best to keep this list small, since each will need to be tried for every catalog entry.\",\n     \"items\": {\n      \"type\": \"string\"\n     },\n     \"type\": \"array\"\n    },\n    \"sourceType\": {\n     \"description\": \"SourceType is the type of source\",\n     \"type\": \"string\"\n    },\n    \"updateStrategy\": {\n     \"description\": \"UpdateStrategy defines how updated catalog source images can be discovered Consists of an interval that defines polling duration and an embedded strategy type\",\n     \"properties\": {\n      \"registryPoll\": {\n       \"properties\": {\n        \"interval\": {\n         \"description\": \"Interval is used to determine the time interval between checks of the latest catalog source version. The catalog operator polls to see if a new version of the catalog source is available. If available, the latest image is pulled and gRPC traffic is directed to the latest catalog source.\",\n         \"type\": \"string\"\n        }\n       },\n       \"type\": \"object\"\n      }\n     },\n     \"type\": \"object\"\n    }\n   },\n   \"required\": [\n    \"sourceType\"\n   ],\n   \"type\": \"object\"\n  }\n },\n \"required\": [\n  \"metadata\",\n  \"spec\"\n ],\n \"title\": \"Catalog Source\",\n \"type\": \"object\"\n}"}