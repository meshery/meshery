{
  "id": "00000000-0000-0000-0000-000000000000",
  "schemaVersion": "components.meshery.io/v1beta1",
  "version": "v1.0.0",
  "displayName": "Crdb Cluster",
  "description": "",
  "format": "JSON",
  "model": {
    "id": "00000000-0000-0000-0000-000000000000",
    "schemaVersion": "models.meshery.io/v1beta1",
    "version": "v1.0.0",
    "name": "cockroachdb-operator",
    "displayName": "Cockroachdb Operator",
    "status": "enabled",
    "registrant": {
      "id": "00000000-0000-0000-0000-000000000000",
      "name": "Artifact Hub",
      "credential_id": "00000000-0000-0000-0000-000000000000",
      "type": "registry",
      "sub_type": "",
      "kind": "artifacthub",
      "status": "discovered",
      "user_id": "00000000-0000-0000-0000-000000000000",
      "created_at": "0001-01-01T00:00:00Z",
      "updated_at": "0001-01-01T00:00:00Z",
      "deleted_at": "0001-01-01T00:00:00Z"
    },
    "connection_id": "00000000-0000-0000-0000-000000000000",
    "category": {
      "id": "00000000-0000-0000-0000-000000000000",
      "name": "Database"
    },
    "subCategory": "App Definition and Development",
    "metadata": {
      "isAnnotation": false,
      "primaryColor": "#00B39F",
      "secondaryColor": "#00D3A9",
      "shape": "circle",
      "source_uri": "https://github.com/mmontes11/charts/releases/download/cockroachdb-operator-0.1.0/cockroachdb-operator-0.1.0.tgz",
      "styleOverrides": "",
      "svgColor": "\u003c?xml version=\"1.0\" encoding=\"UTF-8\"?\u003e\u003c!DOCTYPE svg\u003e\u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 101 102\" fill=\"none\"\u003e\n\u003cg xmlns=\"http://www.w3.org/2000/svg\" clip-path=\"url(#clip0_42_113)\"\u003e\n\u003cpath xmlns=\"http://www.w3.org/2000/svg\" d=\"M61.6408 29.2296C57.9882 30.0826 54.25 30.5104 50.4999 30.5046C46.75 30.5085 43.012 30.0807 39.3591 29.2296C42.3458 24.4736 46.1126 20.2597 50.4999 16.7664C54.8839 20.2633 58.6502 24.4766 61.6408 29.2296ZM95.2219 1.81707C90.6539 0.606468 85.9489 -0.00424717 81.2245 0.000195164C70.2881 -0.010347 59.5948 3.24011 50.4999 9.33957C41.4068 3.2366 30.7124 -0.0141867 19.7754 0.000195164C15.0191 -0.0125421 10.2815 0.598242 5.68272 1.81707C3.75618 2.30152 1.85918 2.89752 0.00121236 3.60207C-0.0323721 3.64226 -0.0507812 3.69304 -0.0507812 3.74551C-0.0507813 3.79797 -0.0323721 3.84876 0.00121236 3.88895C0.793567 5.60121 1.67287 7.27153 2.63565 8.89332C2.67291 8.91937 2.71722 8.93334 2.76261 8.93334C2.80801 8.93334 2.85232 8.91937 2.88957 8.89332C4.77003 8.20914 6.68821 7.63444 8.63456 7.17207C21.2066 4.29935 34.3983 6.44825 45.4215 13.1646C40.6521 17.2142 36.5961 22.0417 33.4237 27.4446C32.7889 28.4646 32.2493 29.5164 31.678 30.6321C31.1067 31.7477 30.9797 32.0664 30.6305 32.8314C30.2814 33.5964 29.6466 35.1264 29.234 36.2739C25.4608 46.4594 24.7395 57.5313 27.1592 68.1236C29.5789 78.7159 35.0337 88.365 42.8505 95.8802C43.6758 96.6771 44.5328 97.4421 45.4215 98.2071C46.3102 98.9721 46.8181 99.3864 47.5481 99.9283C48.2781 100.47 49.4208 101.331 50.373 101.968C50.4102 101.994 50.4545 102.008 50.4999 102.008C50.5453 102.008 50.5896 101.994 50.6269 101.968C51.5791 101.299 52.5313 100.63 53.4518 99.9283C54.3723 99.2271 54.8801 98.8127 55.5784 98.2071C56.2767 97.6014 57.3241 96.6771 58.1493 95.8802C63.5504 90.6853 67.8479 84.4457 70.7828 77.5377C73.7176 70.6296 75.2289 63.1963 75.2256 55.6858C75.237 49.0595 74.0652 42.4849 71.7659 36.2739C71.3215 35.0946 70.8454 33.9471 70.3376 32.7996C69.8298 31.6521 69.6393 31.3014 69.2902 30.6002C68.941 29.8989 68.1793 28.4964 67.5445 27.4127C64.3677 22.013 60.3122 17.1862 55.5466 13.1327C66.5959 6.45161 79.7996 4.34834 92.3653 7.2677C94.3122 7.72826 96.2304 8.30299 98.1103 8.98895C98.1476 9.015 98.1919 9.02896 98.2373 9.02896C98.2827 9.02896 98.327 9.015 98.3642 8.98895C99.2953 7.37395 100.163 5.71645 100.967 4.01645C101.001 3.97626 101.019 3.92547 101.019 3.87301C101.019 3.82054 101.001 3.76976 100.967 3.72957C99.0893 2.98393 97.1713 2.34542 95.2219 1.81707Z\" fill=\"#151F34\"\u003e\u003c/path\u003e\n\u003cpath xmlns=\"http://www.w3.org/2000/svg\" d=\"M69.2584 55.6851C69.2775 68.3598 64.4485 80.5578 55.7688 89.7594C54.2585 84.932 53.4879 79.902 53.4835 74.8419C53.4611 62.1666 58.2905 49.9674 66.9731 40.7676C68.4853 45.5946 69.2559 50.6248 69.2584 55.6851Z\" fill=\"#348540\"\u003e\u003c/path\u003e\n\u003cpath xmlns=\"http://www.w3.org/2000/svg\" d=\"M47.6113 74.8419C47.6123 79.9024 46.8416 84.9333 45.326 89.7594C39.2757 83.34 35.046 75.4116 33.0758 66.7969C31.1056 58.1821 31.4668 49.1949 34.1217 40.7676C42.8043 49.9674 47.6338 62.1666 47.6113 74.8419Z\" fill=\"#7DBC42\"\u003e\u003c/path\u003e\n\u003c/g\u003e\n\u003cdefs xmlns=\"http://www.w3.org/2000/svg\"\u003e\n\u003cclipPath xmlns=\"http://www.w3.org/2000/svg\" id=\"clip0_42_113\"\u003e\n\u003crect xmlns=\"http://www.w3.org/2000/svg\" width=\"101\" height=\"102\" fill=\"white\"\u003e\u003c/rect\u003e\n\u003c/clipPath\u003e\n\u003c/defs\u003e\n\u003c/svg\u003e",
      "svgComplete": "",
      "svgWhite": "\u003c?xml version=\"1.0\" encoding=\"UTF-8\"?\u003e\u003c!DOCTYPE svg\u003e\u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 101 102\" fill=\"none\"\u003e\n\u003cg xmlns=\"http://www.w3.org/2000/svg\" clip-path=\"url(#clip0_42_113)\"\u003e\n\u003cpath xmlns=\"http://www.w3.org/2000/svg\" d=\"M61.6408 29.2296C57.9882 30.0826 54.25 30.5104 50.4999 30.5046C46.75 30.5085 43.012 30.0807 39.3591 29.2296C42.3458 24.4736 46.1126 20.2597 50.4999 16.7664C54.8839 20.2633 58.6502 24.4766 61.6408 29.2296ZM95.2219 1.81707C90.6539 0.606468 85.9489 -0.00424717 81.2245 0.000195164C70.2881 -0.010347 59.5948 3.24011 50.4999 9.33957C41.4068 3.2366 30.7124 -0.0141867 19.7754 0.000195164C15.0191 -0.0125421 10.2815 0.598242 5.68272 1.81707C3.75618 2.30152 1.85918 2.89752 0.00121236 3.60207C-0.0323721 3.64226 -0.0507812 3.69304 -0.0507812 3.74551C-0.0507813 3.79797 -0.0323721 3.84876 0.00121236 3.88895C0.793567 5.60121 1.67287 7.27153 2.63565 8.89332C2.67291 8.91937 2.71722 8.93334 2.76261 8.93334C2.80801 8.93334 2.85232 8.91937 2.88957 8.89332C4.77003 8.20914 6.68821 7.63444 8.63456 7.17207C21.2066 4.29935 34.3983 6.44825 45.4215 13.1646C40.6521 17.2142 36.5961 22.0417 33.4237 27.4446C32.7889 28.4646 32.2493 29.5164 31.678 30.6321C31.1067 31.7477 30.9797 32.0664 30.6305 32.8314C30.2814 33.5964 29.6466 35.1264 29.234 36.2739C25.4608 46.4594 24.7395 57.5313 27.1592 68.1236C29.5789 78.7159 35.0337 88.365 42.8505 95.8802C43.6758 96.6771 44.5328 97.4421 45.4215 98.2071C46.3102 98.9721 46.8181 99.3864 47.5481 99.9283C48.2781 100.47 49.4208 101.331 50.373 101.968C50.4102 101.994 50.4545 102.008 50.4999 102.008C50.5453 102.008 50.5896 101.994 50.6269 101.968C51.5791 101.299 52.5313 100.63 53.4518 99.9283C54.3723 99.2271 54.8801 98.8127 55.5784 98.2071C56.2767 97.6014 57.3241 96.6771 58.1493 95.8802C63.5504 90.6853 67.8479 84.4457 70.7828 77.5377C73.7176 70.6296 75.2289 63.1963 75.2256 55.6858C75.237 49.0595 74.0652 42.4849 71.7659 36.2739C71.3215 35.0946 70.8454 33.9471 70.3376 32.7996C69.8298 31.6521 69.6393 31.3014 69.2902 30.6002C68.941 29.8989 68.1793 28.4964 67.5445 27.4127C64.3677 22.013 60.3122 17.1862 55.5466 13.1327C66.5959 6.45161 79.7996 4.34834 92.3653 7.2677C94.3122 7.72826 96.2304 8.30299 98.1103 8.98895C98.1476 9.015 98.1919 9.02896 98.2373 9.02896C98.2827 9.02896 98.327 9.015 98.3642 8.98895C99.2953 7.37395 100.163 5.71645 100.967 4.01645C101.001 3.97626 101.019 3.92547 101.019 3.87301C101.019 3.82054 101.001 3.76976 100.967 3.72957C99.0893 2.98393 97.1713 2.34542 95.2219 1.81707Z\" fill=\"#151F34\"\u003e\u003c/path\u003e\n\u003cpath xmlns=\"http://www.w3.org/2000/svg\" d=\"M69.2584 55.6851C69.2775 68.3598 64.4485 80.5578 55.7688 89.7594C54.2585 84.932 53.4879 79.902 53.4835 74.8419C53.4611 62.1666 58.2905 49.9674 66.9731 40.7676C68.4853 45.5946 69.2559 50.6248 69.2584 55.6851Z\" fill=\"#348540\"\u003e\u003c/path\u003e\n\u003cpath xmlns=\"http://www.w3.org/2000/svg\" d=\"M47.6113 74.8419C47.6123 79.9024 46.8416 84.9333 45.326 89.7594C39.2757 83.34 35.046 75.4116 33.0758 66.7969C31.1056 58.1821 31.4668 49.1949 34.1217 40.7676C42.8043 49.9674 47.6338 62.1666 47.6113 74.8419Z\" fill=\"#7DBC42\"\u003e\u003c/path\u003e\n\u003c/g\u003e\n\u003cdefs xmlns=\"http://www.w3.org/2000/svg\"\u003e\n\u003cclipPath xmlns=\"http://www.w3.org/2000/svg\" id=\"clip0_42_113\"\u003e\n\u003crect xmlns=\"http://www.w3.org/2000/svg\" width=\"101\" height=\"102\" fill=\"white\"\u003e\u003c/rect\u003e\n\u003c/clipPath\u003e\n\u003c/defs\u003e\n\u003c/svg\u003e"
    },
    "model": {
      "version": "0.1.0"
    },
    "components_count": 0,
    "relationships_count": 0,
    "components": null,
    "relationships": null
  },
  "styles": {
    "primaryColor": "#00B39F",
    "secondaryColor": "#00D3A9",
    "shape": "circle",
    "svgColor": "\u003csvg width=\"101\" height=\"102\" viewBox=\"0 0 101 102\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"\u003e\n\u003cg clip-path=\"url(#clip0_42_113)\"\u003e\n\u003cpath d=\"M61.6408 29.2296C57.9882 30.0826 54.25 30.5104 50.4999 30.5046C46.75 30.5085 43.012 30.0807 39.3591 29.2296C42.3458 24.4736 46.1126 20.2597 50.4999 16.7664C54.8839 20.2633 58.6502 24.4766 61.6408 29.2296ZM95.2219 1.81707C90.6539 0.606468 85.9489 -0.00424717 81.2245 0.000195164C70.2881 -0.010347 59.5948 3.24011 50.4999 9.33957C41.4068 3.2366 30.7124 -0.0141867 19.7754 0.000195164C15.0191 -0.0125421 10.2815 0.598242 5.68272 1.81707C3.75618 2.30152 1.85918 2.89752 0.00121236 3.60207C-0.0323721 3.64226 -0.0507812 3.69304 -0.0507812 3.74551C-0.0507813 3.79797 -0.0323721 3.84876 0.00121236 3.88895C0.793567 5.60121 1.67287 7.27153 2.63565 8.89332C2.67291 8.91937 2.71722 8.93334 2.76261 8.93334C2.80801 8.93334 2.85232 8.91937 2.88957 8.89332C4.77003 8.20914 6.68821 7.63444 8.63456 7.17207C21.2066 4.29935 34.3983 6.44825 45.4215 13.1646C40.6521 17.2142 36.5961 22.0417 33.4237 27.4446C32.7889 28.4646 32.2493 29.5164 31.678 30.6321C31.1067 31.7477 30.9797 32.0664 30.6305 32.8314C30.2814 33.5964 29.6466 35.1264 29.234 36.2739C25.4608 46.4594 24.7395 57.5313 27.1592 68.1236C29.5789 78.7159 35.0337 88.365 42.8505 95.8802C43.6758 96.6771 44.5328 97.4421 45.4215 98.2071C46.3102 98.9721 46.8181 99.3864 47.5481 99.9283C48.2781 100.47 49.4208 101.331 50.373 101.968C50.4102 101.994 50.4545 102.008 50.4999 102.008C50.5453 102.008 50.5896 101.994 50.6269 101.968C51.5791 101.299 52.5313 100.63 53.4518 99.9283C54.3723 99.2271 54.8801 98.8127 55.5784 98.2071C56.2767 97.6014 57.3241 96.6771 58.1493 95.8802C63.5504 90.6853 67.8479 84.4457 70.7828 77.5377C73.7176 70.6296 75.2289 63.1963 75.2256 55.6858C75.237 49.0595 74.0652 42.4849 71.7659 36.2739C71.3215 35.0946 70.8454 33.9471 70.3376 32.7996C69.8298 31.6521 69.6393 31.3014 69.2902 30.6002C68.941 29.8989 68.1793 28.4964 67.5445 27.4127C64.3677 22.013 60.3122 17.1862 55.5466 13.1327C66.5959 6.45161 79.7996 4.34834 92.3653 7.2677C94.3122 7.72826 96.2304 8.30299 98.1103 8.98895C98.1476 9.015 98.1919 9.02896 98.2373 9.02896C98.2827 9.02896 98.327 9.015 98.3642 8.98895C99.2953 7.37395 100.163 5.71645 100.967 4.01645C101.001 3.97626 101.019 3.92547 101.019 3.87301C101.019 3.82054 101.001 3.76976 100.967 3.72957C99.0893 2.98393 97.1713 2.34542 95.2219 1.81707Z\" fill=\"#151F34\"/\u003e\n\u003cpath d=\"M69.2584 55.6851C69.2775 68.3598 64.4485 80.5578 55.7688 89.7594C54.2585 84.932 53.4879 79.902 53.4835 74.8419C53.4611 62.1666 58.2905 49.9674 66.9731 40.7676C68.4853 45.5946 69.2559 50.6248 69.2584 55.6851Z\" fill=\"#348540\"/\u003e\n\u003cpath d=\"M47.6113 74.8419C47.6123 79.9024 46.8416 84.9333 45.326 89.7594C39.2757 83.34 35.046 75.4116 33.0758 66.7969C31.1056 58.1821 31.4668 49.1949 34.1217 40.7676C42.8043 49.9674 47.6338 62.1666 47.6113 74.8419Z\" fill=\"#7DBC42\"/\u003e\n\u003c/g\u003e\n\u003cdefs\u003e\n\u003cclipPath id=\"clip0_42_113\"\u003e\n\u003crect width=\"101\" height=\"102\" fill=\"white\"/\u003e\n\u003c/clipPath\u003e\n\u003c/defs\u003e\n\u003c/svg\u003e",
    "svgComplete": "",
    "svgWhite": "\u003csvg width=\"101\" height=\"102\" viewBox=\"0 0 101 102\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"\u003e\n\u003cg clip-path=\"url(#clip0_42_113)\"\u003e\n\u003cpath d=\"M61.6408 29.2296C57.9882 30.0826 54.25 30.5104 50.4999 30.5046C46.75 30.5085 43.012 30.0807 39.3591 29.2296C42.3458 24.4736 46.1126 20.2597 50.4999 16.7664C54.8839 20.2633 58.6502 24.4766 61.6408 29.2296ZM95.2219 1.81707C90.6539 0.606468 85.9489 -0.00424717 81.2245 0.000195164C70.2881 -0.010347 59.5948 3.24011 50.4999 9.33957C41.4068 3.2366 30.7124 -0.0141867 19.7754 0.000195164C15.0191 -0.0125421 10.2815 0.598242 5.68272 1.81707C3.75618 2.30152 1.85918 2.89752 0.00121236 3.60207C-0.0323721 3.64226 -0.0507812 3.69304 -0.0507812 3.74551C-0.0507813 3.79797 -0.0323721 3.84876 0.00121236 3.88895C0.793567 5.60121 1.67287 7.27153 2.63565 8.89332C2.67291 8.91937 2.71722 8.93334 2.76261 8.93334C2.80801 8.93334 2.85232 8.91937 2.88957 8.89332C4.77003 8.20914 6.68821 7.63444 8.63456 7.17207C21.2066 4.29935 34.3983 6.44825 45.4215 13.1646C40.6521 17.2142 36.5961 22.0417 33.4237 27.4446C32.7889 28.4646 32.2493 29.5164 31.678 30.6321C31.1067 31.7477 30.9797 32.0664 30.6305 32.8314C30.2814 33.5964 29.6466 35.1264 29.234 36.2739C25.4608 46.4594 24.7395 57.5313 27.1592 68.1236C29.5789 78.7159 35.0337 88.365 42.8505 95.8802C43.6758 96.6771 44.5328 97.4421 45.4215 98.2071C46.3102 98.9721 46.8181 99.3864 47.5481 99.9283C48.2781 100.47 49.4208 101.331 50.373 101.968C50.4102 101.994 50.4545 102.008 50.4999 102.008C50.5453 102.008 50.5896 101.994 50.6269 101.968C51.5791 101.299 52.5313 100.63 53.4518 99.9283C54.3723 99.2271 54.8801 98.8127 55.5784 98.2071C56.2767 97.6014 57.3241 96.6771 58.1493 95.8802C63.5504 90.6853 67.8479 84.4457 70.7828 77.5377C73.7176 70.6296 75.2289 63.1963 75.2256 55.6858C75.237 49.0595 74.0652 42.4849 71.7659 36.2739C71.3215 35.0946 70.8454 33.9471 70.3376 32.7996C69.8298 31.6521 69.6393 31.3014 69.2902 30.6002C68.941 29.8989 68.1793 28.4964 67.5445 27.4127C64.3677 22.013 60.3122 17.1862 55.5466 13.1327C66.5959 6.45161 79.7996 4.34834 92.3653 7.2677C94.3122 7.72826 96.2304 8.30299 98.1103 8.98895C98.1476 9.015 98.1919 9.02896 98.2373 9.02896C98.2827 9.02896 98.327 9.015 98.3642 8.98895C99.2953 7.37395 100.163 5.71645 100.967 4.01645C101.001 3.97626 101.019 3.92547 101.019 3.87301C101.019 3.82054 101.001 3.76976 100.967 3.72957C99.0893 2.98393 97.1713 2.34542 95.2219 1.81707Z\" fill=\"#151F34\"/\u003e\n\u003cpath d=\"M69.2584 55.6851C69.2775 68.3598 64.4485 80.5578 55.7688 89.7594C54.2585 84.932 53.4879 79.902 53.4835 74.8419C53.4611 62.1666 58.2905 49.9674 66.9731 40.7676C68.4853 45.5946 69.2559 50.6248 69.2584 55.6851Z\" fill=\"#348540\"/\u003e\n\u003cpath d=\"M47.6113 74.8419C47.6123 79.9024 46.8416 84.9333 45.326 89.7594C39.2757 83.34 35.046 75.4116 33.0758 66.7969C31.1056 58.1821 31.4668 49.1949 34.1217 40.7676C42.8043 49.9674 47.6338 62.1666 47.6113 74.8419Z\" fill=\"#7DBC42\"/\u003e\n\u003c/g\u003e\n\u003cdefs\u003e\n\u003cclipPath id=\"clip0_42_113\"\u003e\n\u003crect width=\"101\" height=\"102\" fill=\"white\"/\u003e\n\u003c/clipPath\u003e\n\u003c/defs\u003e\n\u003c/svg\u003e"
  },
  "capabilities": [
    {
      "description": "Initiate a performance test. Meshery will execute the load generation, collect metrics, and present the results.",
      "displayName": "Performance Test",
      "entityState": [
        "instance"
      ],
      "key": "",
      "kind": "action",
      "schemaVersion": "capability.meshery.io/v1alpha1",
      "status": "enabled",
      "subType": "perf-test",
      "type": "operator",
      "version": "0.7.0"
    },
    {
      "description": "Configure the workload specific setting of a component",
      "displayName": "Workload Configuration",
      "entityState": [
        "declaration"
      ],
      "key": "",
      "kind": "mutate",
      "schemaVersion": "capability.meshery.io/v1alpha1",
      "status": "enabled",
      "subType": "config",
      "type": "configuration",
      "version": "0.7.0"
    },
    {
      "description": "Configure Labels And Annotations for  the component ",
      "displayName": "Labels and Annotations Configuration",
      "entityState": [
        "declaration"
      ],
      "key": "",
      "kind": "mutate",
      "schemaVersion": "capability.meshery.io/v1alpha1",
      "status": "enabled",
      "subType": "labels-and-annotations",
      "type": "configuration",
      "version": "0.7.0"
    },
    {
      "description": "View relationships for the component",
      "displayName": "Relationships",
      "entityState": [
        "declaration",
        "instance"
      ],
      "key": "",
      "kind": "view",
      "schemaVersion": "capability.meshery.io/v1alpha1",
      "status": "enabled",
      "subType": "relationship",
      "type": "configuration",
      "version": "0.7.0"
    },
    {
      "description": "View Component Definition ",
      "displayName": "Json Schema",
      "entityState": [
        "declaration",
        "instance"
      ],
      "key": "",
      "kind": "view",
      "schemaVersion": "capability.meshery.io/v1alpha1",
      "status": "enabled",
      "subType": "definition",
      "type": "configuration",
      "version": "0.7.0"
    },
    {
      "description": "Configure the visual styles for the component",
      "displayName": "Styling",
      "entityState": [
        "declaration"
      ],
      "key": "",
      "kind": "mutate",
      "schemaVersion": "capability.meshery.io/v1alpha1",
      "status": "enabled",
      "subType": "",
      "type": "style",
      "version": "0.7.0"
    },
    {
      "description": "Change the shape of the component",
      "displayName": "Change Shape",
      "entityState": [
        "declaration"
      ],
      "key": "",
      "kind": "mutate",
      "schemaVersion": "capability.meshery.io/v1alpha1",
      "status": "enabled",
      "subType": "shape",
      "type": "style",
      "version": "0.7.0"
    },
    {
      "description": "Drag and Drop a component into a parent component in graph view",
      "displayName": "Compound Drag And Drop",
      "entityState": [
        "declaration"
      ],
      "key": "",
      "kind": "interaction",
      "schemaVersion": "capability.meshery.io/v1alpha1",
      "status": "enabled",
      "subType": "compoundDnd",
      "type": "graph",
      "version": "0.7.0"
    }
  ],
  "status": "enabled",
  "metadata": {
    "configurationUISchema": "",
    "genealogy": "",
    "instanceDetails": null,
    "isAnnotation": false,
    "isNamespaced": true,
    "published": false,
    "source_uri": "https://github.com/mmontes11/charts/releases/download/cockroachdb-operator-0.1.0/cockroachdb-operator-0.1.0.tgz"
  },
  "configuration": null,
  "component": {
    "version": "crdb.cockroachlabs.com/v1alpha1",
    "kind": "CrdbCluster",
    "schema": "{\n \"description\": \"CrdbCluster is the CRD for the cockroachDB clusters API\",\n \"properties\": {\n  \"spec\": {\n   \"description\": \"CrdbClusterSpec defines the desired state of a CockroachDB Cluster that the operator maintains.\",\n   \"properties\": {\n    \"additionalArgs\": {\n     \"description\": \"(Optional) Additional command line arguments for the `cockroach` binary Default: \\\"\\\"\",\n     \"items\": {\n      \"type\": \"string\"\n     },\n     \"type\": \"array\"\n    },\n    \"additionalLabels\": {\n     \"additionalProperties\": {\n      \"type\": \"string\"\n     },\n     \"description\": \"(Optional) Additional custom resource labels that are added to all resources\",\n     \"type\": \"object\"\n    },\n    \"affinity\": {\n     \"description\": \"(Optional) If specified, the pod's scheduling constraints\",\n     \"properties\": {\n      \"nodeAffinity\": {\n       \"description\": \"Describes node affinity scheduling rules for the pod.\",\n       \"properties\": {\n        \"preferredDuringSchedulingIgnoredDuringExecution\": {\n         \"description\": \"The scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding \\\"weight\\\" to the sum if the node matches the corresponding matchExpressions; the node(s) with the highest sum are the most preferred.\",\n         \"items\": {\n          \"description\": \"An empty preferred scheduling term matches all objects with implicit weight 0 (i.e. it's a no-op). A null preferred scheduling term matches no objects (i.e. is also a no-op).\",\n          \"properties\": {\n           \"preference\": {\n            \"description\": \"A node selector term, associated with the corresponding weight.\",\n            \"properties\": {\n             \"matchExpressions\": {\n              \"description\": \"A list of node selector requirements by node's labels.\",\n              \"items\": {\n               \"description\": \"A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.\",\n               \"properties\": {\n                \"key\": {\n                 \"description\": \"The label key that the selector applies to.\",\n                 \"type\": \"string\"\n                },\n                \"operator\": {\n                 \"description\": \"Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.\",\n                 \"type\": \"string\"\n                },\n                \"values\": {\n                 \"description\": \"An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.\",\n                 \"items\": {\n                  \"type\": \"string\"\n                 },\n                 \"type\": \"array\"\n                }\n               },\n               \"required\": [\n                \"key\",\n                \"operator\"\n               ],\n               \"type\": \"object\"\n              },\n              \"type\": \"array\"\n             },\n             \"matchFields\": {\n              \"description\": \"A list of node selector requirements by node's fields.\",\n              \"items\": {\n               \"description\": \"A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.\",\n               \"properties\": {\n                \"key\": {\n                 \"description\": \"The label key that the selector applies to.\",\n                 \"type\": \"string\"\n                },\n                \"operator\": {\n                 \"description\": \"Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.\",\n                 \"type\": \"string\"\n                },\n                \"values\": {\n                 \"description\": \"An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.\",\n                 \"items\": {\n                  \"type\": \"string\"\n                 },\n                 \"type\": \"array\"\n                }\n               },\n               \"required\": [\n                \"key\",\n                \"operator\"\n               ],\n               \"type\": \"object\"\n              },\n              \"type\": \"array\"\n             }\n            },\n            \"type\": \"object\"\n           },\n           \"weight\": {\n            \"description\": \"Weight associated with matching the corresponding nodeSelectorTerm, in the range 1-100.\",\n            \"format\": \"int32\",\n            \"type\": \"integer\"\n           }\n          },\n          \"required\": [\n           \"preference\",\n           \"weight\"\n          ],\n          \"type\": \"object\"\n         },\n         \"type\": \"array\"\n        },\n        \"requiredDuringSchedulingIgnoredDuringExecution\": {\n         \"description\": \"If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to an update), the system may or may not try to eventually evict the pod from its node.\",\n         \"properties\": {\n          \"nodeSelectorTerms\": {\n           \"description\": \"Required. A list of node selector terms. The terms are ORed.\",\n           \"items\": {\n            \"description\": \"A null or empty node selector term matches no objects. The requirements of them are ANDed. The TopologySelectorTerm type implements a subset of the NodeSelectorTerm.\",\n            \"properties\": {\n             \"matchExpressions\": {\n              \"description\": \"A list of node selector requirements by node's labels.\",\n              \"items\": {\n               \"description\": \"A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.\",\n               \"properties\": {\n                \"key\": {\n                 \"description\": \"The label key that the selector applies to.\",\n                 \"type\": \"string\"\n                },\n                \"operator\": {\n                 \"description\": \"Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.\",\n                 \"type\": \"string\"\n                },\n                \"values\": {\n                 \"description\": \"An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.\",\n                 \"items\": {\n                  \"type\": \"string\"\n                 },\n                 \"type\": \"array\"\n                }\n               },\n               \"required\": [\n                \"key\",\n                \"operator\"\n               ],\n               \"type\": \"object\"\n              },\n              \"type\": \"array\"\n             },\n             \"matchFields\": {\n              \"description\": \"A list of node selector requirements by node's fields.\",\n              \"items\": {\n               \"description\": \"A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.\",\n               \"properties\": {\n                \"key\": {\n                 \"description\": \"The label key that the selector applies to.\",\n                 \"type\": \"string\"\n                },\n                \"operator\": {\n                 \"description\": \"Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.\",\n                 \"type\": \"string\"\n                },\n                \"values\": {\n                 \"description\": \"An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.\",\n                 \"items\": {\n                  \"type\": \"string\"\n                 },\n                 \"type\": \"array\"\n                }\n               },\n               \"required\": [\n                \"key\",\n                \"operator\"\n               ],\n               \"type\": \"object\"\n              },\n              \"type\": \"array\"\n             }\n            },\n            \"type\": \"object\"\n           },\n           \"type\": \"array\"\n          }\n         },\n         \"required\": [\n          \"nodeSelectorTerms\"\n         ],\n         \"type\": \"object\"\n        }\n       },\n       \"type\": \"object\"\n      },\n      \"podAffinity\": {\n       \"description\": \"Describes pod affinity scheduling rules (e.g. co-locate this pod in the same node, zone, etc. as some other pod(s)).\",\n       \"properties\": {\n        \"preferredDuringSchedulingIgnoredDuringExecution\": {\n         \"description\": \"The scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding \\\"weight\\\" to the sum if the node has pods which matches the corresponding podAffinityTerm; the node(s) with the highest sum are the most preferred.\",\n         \"items\": {\n          \"description\": \"The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)\",\n          \"properties\": {\n           \"podAffinityTerm\": {\n            \"description\": \"Required. A pod affinity term, associated with the corresponding weight.\",\n            \"properties\": {\n             \"labelSelector\": {\n              \"description\": \"A label query over a set of resources, in this case pods.\",\n              \"properties\": {\n               \"matchExpressions\": {\n                \"description\": \"matchExpressions is a list of label selector requirements. The requirements are ANDed.\",\n                \"items\": {\n                 \"description\": \"A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.\",\n                 \"properties\": {\n                  \"key\": {\n                   \"description\": \"key is the label key that the selector applies to.\",\n                   \"type\": \"string\"\n                  },\n                  \"operator\": {\n                   \"description\": \"operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.\",\n                   \"type\": \"string\"\n                  },\n                  \"values\": {\n                   \"description\": \"values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.\",\n                   \"items\": {\n                    \"type\": \"string\"\n                   },\n                   \"type\": \"array\"\n                  }\n                 },\n                 \"required\": [\n                  \"key\",\n                  \"operator\"\n                 ],\n                 \"type\": \"object\"\n                },\n                \"type\": \"array\"\n               },\n               \"matchLabels\": {\n                \"additionalProperties\": {\n                 \"type\": \"string\"\n                },\n                \"description\": \"matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \\\"key\\\", the operator is \\\"In\\\", and the values array contains only \\\"value\\\". The requirements are ANDed.\",\n                \"type\": \"object\"\n               }\n              },\n              \"type\": \"object\"\n             },\n             \"namespaces\": {\n              \"description\": \"namespaces specifies which namespaces the labelSelector applies to (matches against); null or empty list means \\\"this pod's namespace\\\"\",\n              \"items\": {\n               \"type\": \"string\"\n              },\n              \"type\": \"array\"\n             },\n             \"topologyKey\": {\n              \"description\": \"This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.\",\n              \"type\": \"string\"\n             }\n            },\n            \"required\": [\n             \"topologyKey\"\n            ],\n            \"type\": \"object\"\n           },\n           \"weight\": {\n            \"description\": \"weight associated with matching the corresponding podAffinityTerm, in the range 1-100.\",\n            \"format\": \"int32\",\n            \"type\": \"integer\"\n           }\n          },\n          \"required\": [\n           \"podAffinityTerm\",\n           \"weight\"\n          ],\n          \"type\": \"object\"\n         },\n         \"type\": \"array\"\n        },\n        \"requiredDuringSchedulingIgnoredDuringExecution\": {\n         \"description\": \"If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to a pod label update), the system may or may not try to eventually evict the pod from its node. When there are multiple elements, the lists of nodes corresponding to each podAffinityTerm are intersected, i.e. all terms must be satisfied.\",\n         \"items\": {\n          \"description\": \"Defines a set of pods (namely those matching the labelSelector relative to the given namespace(s)) that this pod should be co-located (affinity) or not co-located (anti-affinity) with, where co-located is defined as running on a node whose value of the label with key \\u003ctopologyKey\\u003e matches that of any node on which a pod of the set of pods is running\",\n          \"properties\": {\n           \"labelSelector\": {\n            \"description\": \"A label query over a set of resources, in this case pods.\",\n            \"properties\": {\n             \"matchExpressions\": {\n              \"description\": \"matchExpressions is a list of label selector requirements. The requirements are ANDed.\",\n              \"items\": {\n               \"description\": \"A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.\",\n               \"properties\": {\n                \"key\": {\n                 \"description\": \"key is the label key that the selector applies to.\",\n                 \"type\": \"string\"\n                },\n                \"operator\": {\n                 \"description\": \"operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.\",\n                 \"type\": \"string\"\n                },\n                \"values\": {\n                 \"description\": \"values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.\",\n                 \"items\": {\n                  \"type\": \"string\"\n                 },\n                 \"type\": \"array\"\n                }\n               },\n               \"required\": [\n                \"key\",\n                \"operator\"\n               ],\n               \"type\": \"object\"\n              },\n              \"type\": \"array\"\n             },\n             \"matchLabels\": {\n              \"additionalProperties\": {\n               \"type\": \"string\"\n              },\n              \"description\": \"matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \\\"key\\\", the operator is \\\"In\\\", and the values array contains only \\\"value\\\". The requirements are ANDed.\",\n              \"type\": \"object\"\n             }\n            },\n            \"type\": \"object\"\n           },\n           \"namespaces\": {\n            \"description\": \"namespaces specifies which namespaces the labelSelector applies to (matches against); null or empty list means \\\"this pod's namespace\\\"\",\n            \"items\": {\n             \"type\": \"string\"\n            },\n            \"type\": \"array\"\n           },\n           \"topologyKey\": {\n            \"description\": \"This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.\",\n            \"type\": \"string\"\n           }\n          },\n          \"required\": [\n           \"topologyKey\"\n          ],\n          \"type\": \"object\"\n         },\n         \"type\": \"array\"\n        }\n       },\n       \"type\": \"object\"\n      },\n      \"podAntiAffinity\": {\n       \"description\": \"Describes pod anti-affinity scheduling rules (e.g. avoid putting this pod in the same node, zone, etc. as some other pod(s)).\",\n       \"properties\": {\n        \"preferredDuringSchedulingIgnoredDuringExecution\": {\n         \"description\": \"The scheduler will prefer to schedule pods to nodes that satisfy the anti-affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling anti-affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding \\\"weight\\\" to the sum if the node has pods which matches the corresponding podAffinityTerm; the node(s) with the highest sum are the most preferred.\",\n         \"items\": {\n          \"description\": \"The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)\",\n          \"properties\": {\n           \"podAffinityTerm\": {\n            \"description\": \"Required. A pod affinity term, associated with the corresponding weight.\",\n            \"properties\": {\n             \"labelSelector\": {\n              \"description\": \"A label query over a set of resources, in this case pods.\",\n              \"properties\": {\n               \"matchExpressions\": {\n                \"description\": \"matchExpressions is a list of label selector requirements. The requirements are ANDed.\",\n                \"items\": {\n                 \"description\": \"A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.\",\n                 \"properties\": {\n                  \"key\": {\n                   \"description\": \"key is the label key that the selector applies to.\",\n                   \"type\": \"string\"\n                  },\n                  \"operator\": {\n                   \"description\": \"operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.\",\n                   \"type\": \"string\"\n                  },\n                  \"values\": {\n                   \"description\": \"values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.\",\n                   \"items\": {\n                    \"type\": \"string\"\n                   },\n                   \"type\": \"array\"\n                  }\n                 },\n                 \"required\": [\n                  \"key\",\n                  \"operator\"\n                 ],\n                 \"type\": \"object\"\n                },\n                \"type\": \"array\"\n               },\n               \"matchLabels\": {\n                \"additionalProperties\": {\n                 \"type\": \"string\"\n                },\n                \"description\": \"matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \\\"key\\\", the operator is \\\"In\\\", and the values array contains only \\\"value\\\". The requirements are ANDed.\",\n                \"type\": \"object\"\n               }\n              },\n              \"type\": \"object\"\n             },\n             \"namespaces\": {\n              \"description\": \"namespaces specifies which namespaces the labelSelector applies to (matches against); null or empty list means \\\"this pod's namespace\\\"\",\n              \"items\": {\n               \"type\": \"string\"\n              },\n              \"type\": \"array\"\n             },\n             \"topologyKey\": {\n              \"description\": \"This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.\",\n              \"type\": \"string\"\n             }\n            },\n            \"required\": [\n             \"topologyKey\"\n            ],\n            \"type\": \"object\"\n           },\n           \"weight\": {\n            \"description\": \"weight associated with matching the corresponding podAffinityTerm, in the range 1-100.\",\n            \"format\": \"int32\",\n            \"type\": \"integer\"\n           }\n          },\n          \"required\": [\n           \"podAffinityTerm\",\n           \"weight\"\n          ],\n          \"type\": \"object\"\n         },\n         \"type\": \"array\"\n        },\n        \"requiredDuringSchedulingIgnoredDuringExecution\": {\n         \"description\": \"If the anti-affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the anti-affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to a pod label update), the system may or may not try to eventually evict the pod from its node. When there are multiple elements, the lists of nodes corresponding to each podAffinityTerm are intersected, i.e. all terms must be satisfied.\",\n         \"items\": {\n          \"description\": \"Defines a set of pods (namely those matching the labelSelector relative to the given namespace(s)) that this pod should be co-located (affinity) or not co-located (anti-affinity) with, where co-located is defined as running on a node whose value of the label with key \\u003ctopologyKey\\u003e matches that of any node on which a pod of the set of pods is running\",\n          \"properties\": {\n           \"labelSelector\": {\n            \"description\": \"A label query over a set of resources, in this case pods.\",\n            \"properties\": {\n             \"matchExpressions\": {\n              \"description\": \"matchExpressions is a list of label selector requirements. The requirements are ANDed.\",\n              \"items\": {\n               \"description\": \"A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.\",\n               \"properties\": {\n                \"key\": {\n                 \"description\": \"key is the label key that the selector applies to.\",\n                 \"type\": \"string\"\n                },\n                \"operator\": {\n                 \"description\": \"operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.\",\n                 \"type\": \"string\"\n                },\n                \"values\": {\n                 \"description\": \"values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.\",\n                 \"items\": {\n                  \"type\": \"string\"\n                 },\n                 \"type\": \"array\"\n                }\n               },\n               \"required\": [\n                \"key\",\n                \"operator\"\n               ],\n               \"type\": \"object\"\n              },\n              \"type\": \"array\"\n             },\n             \"matchLabels\": {\n              \"additionalProperties\": {\n               \"type\": \"string\"\n              },\n              \"description\": \"matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \\\"key\\\", the operator is \\\"In\\\", and the values array contains only \\\"value\\\". The requirements are ANDed.\",\n              \"type\": \"object\"\n             }\n            },\n            \"type\": \"object\"\n           },\n           \"namespaces\": {\n            \"description\": \"namespaces specifies which namespaces the labelSelector applies to (matches against); null or empty list means \\\"this pod's namespace\\\"\",\n            \"items\": {\n             \"type\": \"string\"\n            },\n            \"type\": \"array\"\n           },\n           \"topologyKey\": {\n            \"description\": \"This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.\",\n            \"type\": \"string\"\n           }\n          },\n          \"required\": [\n           \"topologyKey\"\n          ],\n          \"type\": \"object\"\n         },\n         \"type\": \"array\"\n        }\n       },\n       \"type\": \"object\"\n      }\n     },\n     \"type\": \"object\"\n    },\n    \"cache\": {\n     \"description\": \"(Optional) The total size for caches (`--cache` command line parameter) Default: \\\"25%\\\"\",\n     \"type\": \"string\"\n    },\n    \"clientTLSSecret\": {\n     \"description\": \"(Optional) The secret with a certificate and a private key for root database user Default: \\\"\\\"\",\n     \"type\": \"string\"\n    },\n    \"cockroachDBVersion\": {\n     \"description\": \"(Optional) CockroachDBVersion sets the explicit version of the cockroachDB image Default: \\\"\\\"\",\n     \"type\": \"string\"\n    },\n    \"dataStore\": {\n     \"description\": \"Database disk storage configuration\",\n     \"properties\": {\n      \"hostPath\": {\n       \"description\": \"(Optional) Directory from the host node's filesystem\",\n       \"properties\": {\n        \"path\": {\n         \"description\": \"Path of the directory on the host. If the path is a symlink, it will follow the link to the real path. More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath\",\n         \"type\": \"string\"\n        },\n        \"type\": {\n         \"description\": \"Type for HostPath Volume Defaults to \\\"\\\" More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath\",\n         \"type\": \"string\"\n        }\n       },\n       \"required\": [\n        \"path\"\n       ],\n       \"type\": \"object\"\n      },\n      \"pvc\": {\n       \"description\": \"(Optional) Persistent volume to use\",\n       \"properties\": {\n        \"source\": {\n         \"description\": \"(Optional) Existing PVC in the same namespace\",\n         \"properties\": {\n          \"claimName\": {\n           \"description\": \"ClaimName is the name of a PersistentVolumeClaim in the same namespace as the pod using this volume. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims\",\n           \"type\": \"string\"\n          },\n          \"readOnly\": {\n           \"description\": \"Will force the ReadOnly setting in VolumeMounts. Default false.\",\n           \"type\": \"boolean\"\n          }\n         },\n         \"required\": [\n          \"claimName\"\n         ],\n         \"type\": \"object\"\n        },\n        \"spec\": {\n         \"description\": \"(Optional) PVC to request a new persistent volume\",\n         \"properties\": {\n          \"accessModes\": {\n           \"description\": \"AccessModes contains the desired access modes the volume should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1\",\n           \"items\": {\n            \"type\": \"string\"\n           },\n           \"type\": \"array\"\n          },\n          \"dataSource\": {\n           \"description\": \"This field can be used to specify either: * An existing VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot) * An existing PVC (PersistentVolumeClaim) * An existing custom resource that implements data population (Alpha) In order to use custom resource types that implement data population, the AnyVolumeDataSource feature gate must be enabled. If the provisioner or an external controller can support the specified data source, it will create a new volume based on the contents of the specified data source.\",\n           \"properties\": {\n            \"apiGroup\": {\n             \"description\": \"APIGroup is the group for the resource being referenced. If APIGroup is not specified, the specified Kind must be in the core API group. For any other third-party types, APIGroup is required.\",\n             \"type\": \"string\"\n            },\n            \"kind\": {\n             \"description\": \"Kind is the type of resource being referenced\",\n             \"type\": \"string\"\n            },\n            \"name\": {\n             \"description\": \"Name is the name of resource being referenced\",\n             \"type\": \"string\"\n            }\n           },\n           \"required\": [\n            \"kind\",\n            \"name\"\n           ],\n           \"type\": \"object\"\n          },\n          \"resources\": {\n           \"description\": \"Resources represents the minimum resources the volume should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources\",\n           \"properties\": {\n            \"limits\": {\n             \"additionalProperties\": {\n              \"anyOf\": [\n               {\n                \"type\": \"integer\"\n               },\n               {\n                \"type\": \"string\"\n               }\n              ],\n              \"pattern\": \"^(\\\\+|-)?(([0-9]+(\\\\.[0-9]*)?)|(\\\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\\\+|-)?(([0-9]+(\\\\.[0-9]*)?)|(\\\\.[0-9]+))))?$\",\n              \"x-kubernetes-int-or-string\": true\n             },\n             \"description\": \"Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/\",\n             \"type\": \"object\"\n            },\n            \"requests\": {\n             \"additionalProperties\": {\n              \"anyOf\": [\n               {\n                \"type\": \"integer\"\n               },\n               {\n                \"type\": \"string\"\n               }\n              ],\n              \"pattern\": \"^(\\\\+|-)?(([0-9]+(\\\\.[0-9]*)?)|(\\\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\\\+|-)?(([0-9]+(\\\\.[0-9]*)?)|(\\\\.[0-9]+))))?$\",\n              \"x-kubernetes-int-or-string\": true\n             },\n             \"description\": \"Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/\",\n             \"type\": \"object\"\n            }\n           },\n           \"type\": \"object\"\n          },\n          \"selector\": {\n           \"description\": \"A label query over volumes to consider for binding.\",\n           \"properties\": {\n            \"matchExpressions\": {\n             \"description\": \"matchExpressions is a list of label selector requirements. The requirements are ANDed.\",\n             \"items\": {\n              \"description\": \"A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.\",\n              \"properties\": {\n               \"key\": {\n                \"description\": \"key is the label key that the selector applies to.\",\n                \"type\": \"string\"\n               },\n               \"operator\": {\n                \"description\": \"operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.\",\n                \"type\": \"string\"\n               },\n               \"values\": {\n                \"description\": \"values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.\",\n                \"items\": {\n                 \"type\": \"string\"\n                },\n                \"type\": \"array\"\n               }\n              },\n              \"required\": [\n               \"key\",\n               \"operator\"\n              ],\n              \"type\": \"object\"\n             },\n             \"type\": \"array\"\n            },\n            \"matchLabels\": {\n             \"additionalProperties\": {\n              \"type\": \"string\"\n             },\n             \"description\": \"matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \\\"key\\\", the operator is \\\"In\\\", and the values array contains only \\\"value\\\". The requirements are ANDed.\",\n             \"type\": \"object\"\n            }\n           },\n           \"type\": \"object\"\n          },\n          \"storageClassName\": {\n           \"description\": \"Name of the StorageClass required by the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1\",\n           \"type\": \"string\"\n          },\n          \"volumeMode\": {\n           \"description\": \"volumeMode defines what type of volume is required by the claim. Value of Filesystem is implied when not included in claim spec.\",\n           \"type\": \"string\"\n          },\n          \"volumeName\": {\n           \"description\": \"VolumeName is the binding reference to the PersistentVolume backing this claim.\",\n           \"type\": \"string\"\n          }\n         },\n         \"type\": \"object\"\n        }\n       },\n       \"type\": \"object\"\n      },\n      \"supportsAutoResize\": {\n       \"description\": \"(Optional) SupportsAutoResize marks that a PVC will resize without restarting the entire cluster Default: false\",\n       \"type\": \"boolean\"\n      }\n     },\n     \"type\": \"object\"\n    },\n    \"grpcPort\": {\n     \"description\": \"(Optional) The database port (`--port` CLI parameter when starting the service) Default: 26258\",\n     \"format\": \"int32\",\n     \"type\": \"integer\"\n    },\n    \"httpPort\": {\n     \"description\": \"(Optional) The web UI port (`--http-port` CLI parameter when starting the service) Default: 8080\",\n     \"format\": \"int32\",\n     \"type\": \"integer\"\n    },\n    \"image\": {\n     \"description\": \"Container image information\",\n     \"properties\": {\n      \"name\": {\n       \"description\": \"Container image with supported CockroachDB version. This defaults to the version pinned to the operator and requires a full container and tag/sha name. For instance: cockroachdb/cockroachdb:v20.1\",\n       \"type\": \"string\"\n      },\n      \"pullPolicy\": {\n       \"description\": \"(Optional) PullPolicy for the image, which defaults to IfNotPresent. Default: IfNotPresent\",\n       \"type\": \"string\"\n      },\n      \"pullSecret\": {\n       \"description\": \"(Optional) Secret name containing the dockerconfig to use for a registry that requires authentication. The secret must be configured first by the user.\",\n       \"type\": \"string\"\n      }\n     },\n     \"required\": [\n      \"name\"\n     ],\n     \"type\": \"object\"\n    },\n    \"maxSQLMemory\": {\n     \"description\": \"(Optional) The maximum in-memory storage capacity available to store temporary data for SQL queries (`--max-sql-memory` parameter) Default: \\\"25%\\\"\",\n     \"type\": \"string\"\n    },\n    \"maxUnavailable\": {\n     \"description\": \"(Optional) The maximum number of pods that can be unavailable during a rolling update. This number is set in the PodDistruptionBudget and defaults to 1.\",\n     \"format\": \"int32\",\n     \"type\": \"integer\"\n    },\n    \"minAvailable\": {\n     \"description\": \"(Optional) The min number of pods that can be unavailable during a rolling update. This number is set in the PodDistruptionBudget and defaults to 1.\",\n     \"format\": \"int32\",\n     \"type\": \"integer\"\n    },\n    \"nodeTLSSecret\": {\n     \"description\": \"(Optional) The secret with certificates and a private key for the TLS endpoint on the database port. The standard naming of files is expected (tls.key, tls.crt, ca.crt) Default: \\\"\\\"\",\n     \"type\": \"string\"\n    },\n    \"nodes\": {\n     \"description\": \"Number of nodes (pods) in the cluster\",\n     \"format\": \"int32\",\n     \"type\": \"integer\"\n    },\n    \"podEnvVariables\": {\n     \"description\": \"(Optional) PodEnvVariables is a slice of environment variables that are added to the pods Default: (empty list)\",\n     \"items\": {\n      \"description\": \"EnvVar represents an environment variable present in a Container.\",\n      \"properties\": {\n       \"name\": {\n        \"description\": \"Name of the environment variable. Must be a C_IDENTIFIER.\",\n        \"type\": \"string\"\n       },\n       \"value\": {\n        \"description\": \"Variable references $(VAR_NAME) are expanded using the previous defined environment variables in the container and any service environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to \\\"\\\".\",\n        \"type\": \"string\"\n       },\n       \"valueFrom\": {\n        \"description\": \"Source for the environment variable's value. Cannot be used if value is not empty.\",\n        \"properties\": {\n         \"configMapKeyRef\": {\n          \"description\": \"Selects a key of a ConfigMap.\",\n          \"properties\": {\n           \"key\": {\n            \"description\": \"The key to select.\",\n            \"type\": \"string\"\n           },\n           \"name\": {\n            \"description\": \"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?\",\n            \"type\": \"string\"\n           },\n           \"optional\": {\n            \"description\": \"Specify whether the ConfigMap or its key must be defined\",\n            \"type\": \"boolean\"\n           }\n          },\n          \"required\": [\n           \"key\"\n          ],\n          \"type\": \"object\"\n         },\n         \"fieldRef\": {\n          \"description\": \"Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['\\u003cKEY\\u003e']`, `metadata.annotations['\\u003cKEY\\u003e']`, spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.\",\n          \"properties\": {\n           \"apiVersion\": {\n            \"description\": \"Version of the schema the FieldPath is written in terms of, defaults to \\\"v1\\\".\",\n            \"type\": \"string\"\n           },\n           \"fieldPath\": {\n            \"description\": \"Path of the field to select in the specified API version.\",\n            \"type\": \"string\"\n           }\n          },\n          \"required\": [\n           \"fieldPath\"\n          ],\n          \"type\": \"object\"\n         },\n         \"resourceFieldRef\": {\n          \"description\": \"Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.\",\n          \"properties\": {\n           \"containerName\": {\n            \"description\": \"Container name: required for volumes, optional for env vars\",\n            \"type\": \"string\"\n           },\n           \"divisor\": {\n            \"anyOf\": [\n             {\n              \"type\": \"integer\"\n             },\n             {\n              \"type\": \"string\"\n             }\n            ],\n            \"description\": \"Specifies the output format of the exposed resources, defaults to \\\"1\\\"\",\n            \"pattern\": \"^(\\\\+|-)?(([0-9]+(\\\\.[0-9]*)?)|(\\\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\\\+|-)?(([0-9]+(\\\\.[0-9]*)?)|(\\\\.[0-9]+))))?$\",\n            \"x-kubernetes-int-or-string\": true\n           },\n           \"resource\": {\n            \"description\": \"Required: resource to select\",\n            \"type\": \"string\"\n           }\n          },\n          \"required\": [\n           \"resource\"\n          ],\n          \"type\": \"object\"\n         },\n         \"secretKeyRef\": {\n          \"description\": \"Selects a key of a secret in the pod's namespace\",\n          \"properties\": {\n           \"key\": {\n            \"description\": \"The key of the secret to select from.  Must be a valid secret key.\",\n            \"type\": \"string\"\n           },\n           \"name\": {\n            \"description\": \"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?\",\n            \"type\": \"string\"\n           },\n           \"optional\": {\n            \"description\": \"Specify whether the Secret or its key must be defined\",\n            \"type\": \"boolean\"\n           }\n          },\n          \"required\": [\n           \"key\"\n          ],\n          \"type\": \"object\"\n         }\n        },\n        \"type\": \"object\"\n       }\n      },\n      \"required\": [\n       \"name\"\n      ],\n      \"type\": \"object\"\n     },\n     \"type\": \"array\"\n    },\n    \"resources\": {\n     \"description\": \"(Optional) Database container resource limits. Any container limits can be specified. Default: (not specified)\",\n     \"properties\": {\n      \"limits\": {\n       \"additionalProperties\": {\n        \"anyOf\": [\n         {\n          \"type\": \"integer\"\n         },\n         {\n          \"type\": \"string\"\n         }\n        ],\n        \"pattern\": \"^(\\\\+|-)?(([0-9]+(\\\\.[0-9]*)?)|(\\\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\\\+|-)?(([0-9]+(\\\\.[0-9]*)?)|(\\\\.[0-9]+))))?$\",\n        \"x-kubernetes-int-or-string\": true\n       },\n       \"description\": \"Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/\",\n       \"type\": \"object\"\n      },\n      \"requests\": {\n       \"additionalProperties\": {\n        \"anyOf\": [\n         {\n          \"type\": \"integer\"\n         },\n         {\n          \"type\": \"string\"\n         }\n        ],\n        \"pattern\": \"^(\\\\+|-)?(([0-9]+(\\\\.[0-9]*)?)|(\\\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\\\+|-)?(([0-9]+(\\\\.[0-9]*)?)|(\\\\.[0-9]+))))?$\",\n        \"x-kubernetes-int-or-string\": true\n       },\n       \"description\": \"Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/\",\n       \"type\": \"object\"\n      }\n     },\n     \"type\": \"object\"\n    },\n    \"sqlPort\": {\n     \"description\": \"(Optional) The SQL Port number Default: 26257\",\n     \"format\": \"int32\",\n     \"type\": \"integer\"\n    },\n    \"tlsEnabled\": {\n     \"description\": \"(Optional) TLSEnabled determines if TLS is enabled for your CockroachDB Cluster\",\n     \"type\": \"boolean\"\n    }\n   },\n   \"required\": [\n    \"dataStore\",\n    \"image\",\n    \"nodes\"\n   ],\n   \"type\": \"object\"\n  }\n },\n \"title\": \"Crdb Cluster\",\n \"type\": \"object\"\n}"
  }
}