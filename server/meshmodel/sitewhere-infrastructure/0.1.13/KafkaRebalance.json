{"kind":"KafkaRebalance","apiVersion":"kafka.strimzi.io/v1alpha1","displayName":"Kafka Rebalance","format":"JSON","hostname":"","hostID":"00000000-0000-0000-0000-000000000000","displayhostname":"","metadata":{"capabilities":"","genealogy":"","isAnnotation":false,"isModelAnnotation":"FALSE","isNamespaced":true,"logoURL":"","model":"sitewhere-infrastructure","modelDisplayName":"Sitewhere Infrastructure","primaryColor":"#00B39F","published":false,"secondaryColor":"#00D3A9","shape":"circle","styleOverrides":"","subCategory":"Uncategorized","svgColor":"","svgComplete":"","svgWhite":""},"model":{"name":"sitewhere-infrastructure","version":"0.1.13","displayName":"Sitewhere Infrastructure","hostname":"","hostID":"00000000-0000-0000-0000-000000000000","displayhostname":"","category":{"name":"Uncategorized","metadata":null},"metadata":{"source_uri":"https://sitewhere.io/helm-charts/sitewhere-infrastructure-0.1.13.tgz"},"components":null,"relationships":null},"schema":"{\n \"properties\": {\n  \"spec\": {\n   \"description\": \"The specification of the Kafka rebalance.\",\n   \"properties\": {\n    \"concurrentIntraBrokerPartitionMovements\": {\n     \"description\": \"The upper bound of ongoing partition replica movements between disks within each broker. Default is 2.\",\n     \"minimum\": 0,\n     \"type\": \"integer\"\n    },\n    \"concurrentLeaderMovements\": {\n     \"description\": \"The upper bound of ongoing partition leadership movements. Default is 1000.\",\n     \"minimum\": 0,\n     \"type\": \"integer\"\n    },\n    \"concurrentPartitionMovementsPerBroker\": {\n     \"description\": \"The upper bound of ongoing partition replica movements going into/out of each broker. Default is 5.\",\n     \"minimum\": 0,\n     \"type\": \"integer\"\n    },\n    \"excludedTopics\": {\n     \"description\": \"A regular expression where any matching topics will be excluded from the calculation of optimization proposals. This expression will be parsed by the java.util.regex.Pattern class; for more information on the supported formar consult the documentation for that class.\",\n     \"type\": \"string\"\n    },\n    \"goals\": {\n     \"description\": \"A list of goals, ordered by decreasing priority, to use for generating and executing the rebalance proposal. The supported goals are available at https://github.com/linkedin/cruise-control#goals. If an empty goals list is provided, the goals declared in the default.goals Cruise Control configuration parameter are used.\",\n     \"items\": {\n      \"type\": \"string\"\n     },\n     \"type\": \"array\"\n    },\n    \"replicaMovementStrategies\": {\n     \"description\": \"A list of strategy class names used to determine the execution order for the replica movements in the generated optimization proposal. By default BaseReplicaMovementStrategy is used, which will execute the replica movements in the order that they were generated.\",\n     \"items\": {\n      \"type\": \"string\"\n     },\n     \"type\": \"array\"\n    },\n    \"replicationThrottle\": {\n     \"description\": \"The upper bound, in bytes per second, on the bandwidth used to move replicas. There is no limit by default.\",\n     \"minimum\": 0,\n     \"type\": \"integer\"\n    },\n    \"skipHardGoalCheck\": {\n     \"description\": \"Whether to allow the hard goals specified in the Kafka CR to be skipped in optimization proposal generation. This can be useful when some of those hard goals are preventing a balance solution being found. Default is false.\",\n     \"type\": \"boolean\"\n    }\n   },\n   \"type\": \"object\"\n  }\n },\n \"title\": \"Kafka Rebalance\"\n}"}