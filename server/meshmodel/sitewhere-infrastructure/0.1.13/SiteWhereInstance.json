{"kind":"SiteWhereInstance","apiVersion":"sitewhere.io/v1alpha4","displayName":"Site Where Instance","format":"JSON","hostname":"","hostID":"00000000-0000-0000-0000-000000000000","displayhostname":"","metadata":{"capabilities":"","genealogy":"","isAnnotation":false,"isModelAnnotation":"FALSE","isNamespaced":false,"logoURL":"","model":"sitewhere-infrastructure","modelDisplayName":"Sitewhere Infrastructure","primaryColor":"#00B39F","published":false,"secondaryColor":"#00D3A9","shape":"circle","styleOverrides":"","subCategory":"Uncategorized","svgColor":"","svgComplete":"","svgWhite":""},"model":{"name":"sitewhere-infrastructure","version":"0.1.13","displayName":"Sitewhere Infrastructure","hostname":"","hostID":"00000000-0000-0000-0000-000000000000","displayhostname":"","category":{"name":"Uncategorized","metadata":null},"metadata":{"source_uri":"https://sitewhere.io/helm-charts/sitewhere-infrastructure-0.1.13.tgz"},"components":null,"relationships":null},"schema":"{\n \"description\": \"SiteWhereInstance is the Schema for the Sitewhere Instances API\",\n \"properties\": {\n  \"spec\": {\n   \"description\": \"SiteWhereInstanceSpec defines the desired state of SiteWhereInstance\",\n   \"properties\": {\n    \"configuration\": {\n     \"description\": \"Configuration is the configuration of the instance\",\n     \"format\": \"textarea\",\n     \"nullable\": true,\n     \"type\": \"string\"\n    },\n    \"configurationTemplate\": {\n     \"description\": \"ConfigurationTemplate is the name of the configuration template of the instance\",\n     \"type\": \"string\"\n    },\n    \"datasetTemplate\": {\n     \"description\": \"DatasetTemplate is the name of the dataset template of the instance\",\n     \"type\": \"string\"\n    },\n    \"description\": {\n     \"description\": \"Description is the description of the instance\",\n     \"type\": \"string\"\n    },\n    \"dockerSpec\": {\n     \"description\": \"DockerSpec is the\",\n     \"properties\": {\n      \"registry\": {\n       \"description\": \"Registry is the Docker registry\",\n       \"type\": \"string\"\n      },\n      \"repository\": {\n       \"description\": \"Repository is the Repository for docker images\",\n       \"type\": \"string\"\n      },\n      \"tag\": {\n       \"description\": \"Tag is the tag for docker images\",\n       \"type\": \"string\"\n      }\n     },\n     \"type\": \"object\"\n    },\n    \"microservices\": {\n     \"description\": \"Microservices microservices to create\",\n     \"items\": {\n      \"description\": \"SiteWhereMicroserviceSpec defines the desired state of SiteWhereMicroservice\",\n      \"properties\": {\n       \"configuration\": {\n        \"description\": \"Configuration is the configuration of the microservice\",\n        \"format\": \"textarea\",\n        \"nullable\": true,\n        \"type\": \"string\"\n       },\n       \"debug\": {\n        \"description\": \"Debug is the Debug specification\",\n        \"properties\": {\n         \"enabled\": {\n          \"type\": \"boolean\"\n         },\n         \"jdwpPort\": {\n          \"type\": \"integer\"\n         },\n         \"jmxPort\": {\n          \"type\": \"integer\"\n         }\n        },\n        \"type\": \"object\"\n       },\n       \"description\": {\n        \"description\": \"Description is the description of the microservice\",\n        \"type\": \"string\"\n       },\n       \"functionalArea\": {\n        \"description\": \"Functional Area\",\n        \"type\": \"string\"\n       },\n       \"icon\": {\n        \"description\": \"Icon displayed for microservice\",\n        \"type\": \"string\"\n       },\n       \"logging\": {\n        \"description\": \"Logging is the Logging specificacion\",\n        \"properties\": {\n         \"overrides\": {\n          \"items\": {\n           \"description\": \"MicroserviceLoggingEntry is the logging level\",\n           \"properties\": {\n            \"level\": {\n             \"type\": \"string\"\n            },\n            \"logger\": {\n             \"type\": \"string\"\n            }\n           },\n           \"type\": \"object\"\n          },\n          \"type\": \"array\"\n         }\n        },\n        \"type\": \"object\"\n       },\n       \"multitenant\": {\n        \"description\": \"Multitenant indicates whether microservice has tenant engines\",\n        \"type\": \"boolean\"\n       },\n       \"name\": {\n        \"description\": \"Name is the name displayed for microservice\",\n        \"type\": \"string\"\n       },\n       \"podSpec\": {\n        \"description\": \"PodSpec is the microservice pod specificacion\",\n        \"properties\": {\n         \"annotations\": {\n          \"additionalProperties\": {\n           \"type\": \"string\"\n          },\n          \"description\": \"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\",\n          \"type\": \"object\"\n         },\n         \"dockerSpec\": {\n          \"description\": \"DockerSpec is the Docker specification of the microservice. If this value is set a the microservice level, it will override the value set at the instance level.\",\n          \"properties\": {\n           \"registry\": {\n            \"description\": \"Registry is the Docker registry\",\n            \"type\": \"string\"\n           },\n           \"repository\": {\n            \"description\": \"Repository is the Repository for docker images\",\n            \"type\": \"string\"\n           },\n           \"tag\": {\n            \"description\": \"Tag is the tag for docker images\",\n            \"type\": \"string\"\n           }\n          },\n          \"type\": \"object\"\n         },\n         \"env\": {\n          \"description\": \"List of environment variables to set in the container. Cannot be updated.\",\n          \"items\": {\n           \"description\": \"EnvVar represents an environment variable present in a Container.\",\n           \"properties\": {\n            \"name\": {\n             \"description\": \"Name of the environment variable. Must be a C_IDENTIFIER.\",\n             \"type\": \"string\"\n            },\n            \"value\": {\n             \"description\": \"Variable references $(VAR_NAME) are expanded using the previous defined environment variables in the container and any service environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to \\\"\\\".\",\n             \"type\": \"string\"\n            },\n            \"valueFrom\": {\n             \"description\": \"Source for the environment variable's value. Cannot be used if value is not empty.\",\n             \"properties\": {\n              \"configMapKeyRef\": {\n               \"description\": \"Selects a key of a ConfigMap.\",\n               \"properties\": {\n                \"key\": {\n                 \"description\": \"The key to select.\",\n                 \"type\": \"string\"\n                },\n                \"name\": {\n                 \"description\": \"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?\",\n                 \"type\": \"string\"\n                },\n                \"optional\": {\n                 \"description\": \"Specify whether the ConfigMap or its key must be defined\",\n                 \"type\": \"boolean\"\n                }\n               },\n               \"required\": [\n                \"key\"\n               ],\n               \"type\": \"object\"\n              },\n              \"fieldRef\": {\n               \"description\": \"Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['\\u003cKEY\\u003e']`, `metadata.annotations['\\u003cKEY\\u003e']`, spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.\",\n               \"properties\": {\n                \"apiVersion\": {\n                 \"description\": \"Version of the schema the FieldPath is written in terms of, defaults to \\\"v1\\\".\",\n                 \"type\": \"string\"\n                },\n                \"fieldPath\": {\n                 \"description\": \"Path of the field to select in the specified API version.\",\n                 \"type\": \"string\"\n                }\n               },\n               \"required\": [\n                \"fieldPath\"\n               ],\n               \"type\": \"object\"\n              },\n              \"resourceFieldRef\": {\n               \"description\": \"Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.\",\n               \"properties\": {\n                \"containerName\": {\n                 \"description\": \"Container name: required for volumes, optional for env vars\",\n                 \"type\": \"string\"\n                },\n                \"divisor\": {\n                 \"anyOf\": [\n                  {\n                   \"type\": \"integer\"\n                  },\n                  {\n                   \"type\": \"string\"\n                  }\n                 ],\n                 \"description\": \"Specifies the output format of the exposed resources, defaults to \\\"1\\\"\",\n                 \"pattern\": \"^(\\\\+|-)?(([0-9]+(\\\\.[0-9]*)?)|(\\\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\\\+|-)?(([0-9]+(\\\\.[0-9]*)?)|(\\\\.[0-9]+))))?$\",\n                 \"x-kubernetes-int-or-string\": true\n                },\n                \"resource\": {\n                 \"description\": \"Required: resource to select\",\n                 \"type\": \"string\"\n                }\n               },\n               \"required\": [\n                \"resource\"\n               ],\n               \"type\": \"object\"\n              },\n              \"secretKeyRef\": {\n               \"description\": \"Selects a key of a secret in the pod's namespace\",\n               \"properties\": {\n                \"key\": {\n                 \"description\": \"The key of the secret to select from.  Must be a valid secret key.\",\n                 \"type\": \"string\"\n                },\n                \"name\": {\n                 \"description\": \"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?\",\n                 \"type\": \"string\"\n                },\n                \"optional\": {\n                 \"description\": \"Specify whether the Secret or its key must be defined\",\n                 \"type\": \"boolean\"\n                }\n               },\n               \"required\": [\n                \"key\"\n               ],\n               \"type\": \"object\"\n              }\n             },\n             \"type\": \"object\"\n            }\n           },\n           \"required\": [\n            \"name\"\n           ],\n           \"type\": \"object\"\n          },\n          \"type\": \"array\"\n         },\n         \"imagePullPolicy\": {\n          \"description\": \"Image pull policy. One of Always, Never, IfNotPresent. Defaults to Always if :latest tag is specified, or IfNotPresent otherwise. Cannot be updated. More info: https://kubernetes.io/docs/concepts/containers/images#updating-images\",\n          \"type\": \"string\"\n         },\n         \"livenessProbe\": {\n          \"description\": \"Periodic probe of container liveness. Container will be restarted if the probe fails. Cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes\",\n          \"properties\": {\n           \"exec\": {\n            \"description\": \"One and only one of the following should be specified. Exec specifies the action to take.\",\n            \"properties\": {\n             \"command\": {\n              \"description\": \"Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.\",\n              \"items\": {\n               \"type\": \"string\"\n              },\n              \"type\": \"array\"\n             }\n            },\n            \"type\": \"object\"\n           },\n           \"failureThreshold\": {\n            \"description\": \"Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.\",\n            \"format\": \"int32\",\n            \"type\": \"integer\"\n           },\n           \"httpGet\": {\n            \"description\": \"HTTPGet specifies the http request to perform.\",\n            \"properties\": {\n             \"host\": {\n              \"description\": \"Host name to connect to, defaults to the pod IP. You probably want to set \\\"Host\\\" in httpHeaders instead.\",\n              \"type\": \"string\"\n             },\n             \"httpHeaders\": {\n              \"description\": \"Custom headers to set in the request. HTTP allows repeated headers.\",\n              \"items\": {\n               \"description\": \"HTTPHeader describes a custom header to be used in HTTP probes\",\n               \"properties\": {\n                \"name\": {\n                 \"description\": \"The header field name\",\n                 \"type\": \"string\"\n                },\n                \"value\": {\n                 \"description\": \"The header field value\",\n                 \"type\": \"string\"\n                }\n               },\n               \"required\": [\n                \"name\",\n                \"value\"\n               ],\n               \"type\": \"object\"\n              },\n              \"type\": \"array\"\n             },\n             \"path\": {\n              \"description\": \"Path to access on the HTTP server.\",\n              \"type\": \"string\"\n             },\n             \"port\": {\n              \"anyOf\": [\n               {\n                \"type\": \"integer\"\n               },\n               {\n                \"type\": \"string\"\n               }\n              ],\n              \"description\": \"Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.\",\n              \"x-kubernetes-int-or-string\": true\n             },\n             \"scheme\": {\n              \"description\": \"Scheme to use for connecting to the host. Defaults to HTTP.\",\n              \"type\": \"string\"\n             }\n            },\n            \"required\": [\n             \"port\"\n            ],\n            \"type\": \"object\"\n           },\n           \"initialDelaySeconds\": {\n            \"description\": \"Number of seconds after the container has started before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes\",\n            \"format\": \"int32\",\n            \"type\": \"integer\"\n           },\n           \"periodSeconds\": {\n            \"description\": \"How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.\",\n            \"format\": \"int32\",\n            \"type\": \"integer\"\n           },\n           \"successThreshold\": {\n            \"description\": \"Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.\",\n            \"format\": \"int32\",\n            \"type\": \"integer\"\n           },\n           \"tcpSocket\": {\n            \"description\": \"TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook\",\n            \"properties\": {\n             \"host\": {\n              \"description\": \"Optional: Host name to connect to, defaults to the pod IP.\",\n              \"type\": \"string\"\n             },\n             \"port\": {\n              \"anyOf\": [\n               {\n                \"type\": \"integer\"\n               },\n               {\n                \"type\": \"string\"\n               }\n              ],\n              \"description\": \"Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.\",\n              \"x-kubernetes-int-or-string\": true\n             }\n            },\n            \"required\": [\n             \"port\"\n            ],\n            \"type\": \"object\"\n           },\n           \"timeoutSeconds\": {\n            \"description\": \"Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes\",\n            \"format\": \"int32\",\n            \"type\": \"integer\"\n           }\n          },\n          \"type\": \"object\"\n         },\n         \"name\": {\n          \"description\": \"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\",\n          \"type\": \"string\"\n         },\n         \"ports\": {\n          \"description\": \"List of ports to expose from the container. Exposing a port here gives the system additional information about the network connections a container uses, but is primarily informational. Not specifying a port here DOES NOT prevent that port from being exposed. Any port which is listening on the default \\\"0.0.0.0\\\" address inside a container will be accessible from the network. Cannot be updated.\",\n          \"items\": {\n           \"description\": \"ContainerPort represents a network port in a single container.\",\n           \"properties\": {\n            \"containerPort\": {\n             \"description\": \"Number of port to expose on the pod's IP address. This must be a valid port number, 0 \\u003c x \\u003c 65536.\",\n             \"format\": \"int32\",\n             \"type\": \"integer\"\n            },\n            \"hostIP\": {\n             \"description\": \"What host IP to bind the external port to.\",\n             \"type\": \"string\"\n            },\n            \"hostPort\": {\n             \"description\": \"Number of port to expose on the host. If specified, this must be a valid port number, 0 \\u003c x \\u003c 65536. If HostNetwork is specified, this must match ContainerPort. Most containers do not need this.\",\n             \"format\": \"int32\",\n             \"type\": \"integer\"\n            },\n            \"name\": {\n             \"description\": \"If specified, this must be an IANA_SVC_NAME and unique within the pod. Each named port in a pod must have a unique name. Name for the port that can be referred to by services.\",\n             \"type\": \"string\"\n            },\n            \"protocol\": {\n             \"default\": \"TCP\",\n             \"description\": \"Protocol for port. Must be UDP, TCP, or SCTP. Defaults to \\\"TCP\\\".\",\n             \"type\": \"string\"\n            }\n           },\n           \"required\": [\n            \"containerPort\"\n           ],\n           \"type\": \"object\"\n          },\n          \"type\": \"array\",\n          \"x-kubernetes-list-map-keys\": [\n           \"containerPort\"\n          ],\n          \"x-kubernetes-list-type\": \"map\"\n         },\n         \"readinessProbe\": {\n          \"description\": \"Periodic probe of container service readiness. Container will be removed from service endpoints if the probe fails. Cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes\",\n          \"properties\": {\n           \"exec\": {\n            \"description\": \"One and only one of the following should be specified. Exec specifies the action to take.\",\n            \"properties\": {\n             \"command\": {\n              \"description\": \"Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.\",\n              \"items\": {\n               \"type\": \"string\"\n              },\n              \"type\": \"array\"\n             }\n            },\n            \"type\": \"object\"\n           },\n           \"failureThreshold\": {\n            \"description\": \"Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.\",\n            \"format\": \"int32\",\n            \"type\": \"integer\"\n           },\n           \"httpGet\": {\n            \"description\": \"HTTPGet specifies the http request to perform.\",\n            \"properties\": {\n             \"host\": {\n              \"description\": \"Host name to connect to, defaults to the pod IP. You probably want to set \\\"Host\\\" in httpHeaders instead.\",\n              \"type\": \"string\"\n             },\n             \"httpHeaders\": {\n              \"description\": \"Custom headers to set in the request. HTTP allows repeated headers.\",\n              \"items\": {\n               \"description\": \"HTTPHeader describes a custom header to be used in HTTP probes\",\n               \"properties\": {\n                \"name\": {\n                 \"description\": \"The header field name\",\n                 \"type\": \"string\"\n                },\n                \"value\": {\n                 \"description\": \"The header field value\",\n                 \"type\": \"string\"\n                }\n               },\n               \"required\": [\n                \"name\",\n                \"value\"\n               ],\n               \"type\": \"object\"\n              },\n              \"type\": \"array\"\n             },\n             \"path\": {\n              \"description\": \"Path to access on the HTTP server.\",\n              \"type\": \"string\"\n             },\n             \"port\": {\n              \"anyOf\": [\n               {\n                \"type\": \"integer\"\n               },\n               {\n                \"type\": \"string\"\n               }\n              ],\n              \"description\": \"Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.\",\n              \"x-kubernetes-int-or-string\": true\n             },\n             \"scheme\": {\n              \"description\": \"Scheme to use for connecting to the host. Defaults to HTTP.\",\n              \"type\": \"string\"\n             }\n            },\n            \"required\": [\n             \"port\"\n            ],\n            \"type\": \"object\"\n           },\n           \"initialDelaySeconds\": {\n            \"description\": \"Number of seconds after the container has started before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes\",\n            \"format\": \"int32\",\n            \"type\": \"integer\"\n           },\n           \"periodSeconds\": {\n            \"description\": \"How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.\",\n            \"format\": \"int32\",\n            \"type\": \"integer\"\n           },\n           \"successThreshold\": {\n            \"description\": \"Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.\",\n            \"format\": \"int32\",\n            \"type\": \"integer\"\n           },\n           \"tcpSocket\": {\n            \"description\": \"TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook\",\n            \"properties\": {\n             \"host\": {\n              \"description\": \"Optional: Host name to connect to, defaults to the pod IP.\",\n              \"type\": \"string\"\n             },\n             \"port\": {\n              \"anyOf\": [\n               {\n                \"type\": \"integer\"\n               },\n               {\n                \"type\": \"string\"\n               }\n              ],\n              \"description\": \"Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.\",\n              \"x-kubernetes-int-or-string\": true\n             }\n            },\n            \"required\": [\n             \"port\"\n            ],\n            \"type\": \"object\"\n           },\n           \"timeoutSeconds\": {\n            \"description\": \"Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes\",\n            \"format\": \"int32\",\n            \"type\": \"integer\"\n           }\n          },\n          \"type\": \"object\"\n         },\n         \"resources\": {\n          \"description\": \"Compute Resources required by this container. Cannot be updated. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/\",\n          \"properties\": {\n           \"limits\": {\n            \"additionalProperties\": {\n             \"anyOf\": [\n              {\n               \"type\": \"integer\"\n              },\n              {\n               \"type\": \"string\"\n              }\n             ],\n             \"pattern\": \"^(\\\\+|-)?(([0-9]+(\\\\.[0-9]*)?)|(\\\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\\\+|-)?(([0-9]+(\\\\.[0-9]*)?)|(\\\\.[0-9]+))))?$\",\n             \"x-kubernetes-int-or-string\": true\n            },\n            \"description\": \"Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/\",\n            \"type\": \"object\"\n           },\n           \"requests\": {\n            \"additionalProperties\": {\n             \"anyOf\": [\n              {\n               \"type\": \"integer\"\n              },\n              {\n               \"type\": \"string\"\n              }\n             ],\n             \"pattern\": \"^(\\\\+|-)?(([0-9]+(\\\\.[0-9]*)?)|(\\\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\\\+|-)?(([0-9]+(\\\\.[0-9]*)?)|(\\\\.[0-9]+))))?$\",\n             \"x-kubernetes-int-or-string\": true\n            },\n            \"description\": \"Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/\",\n            \"type\": \"object\"\n           }\n          },\n          \"type\": \"object\"\n         }\n        },\n        \"type\": \"object\"\n       },\n       \"replicas\": {\n        \"description\": \"Replicas is the number of desired replicas of the microservice\",\n        \"format\": \"int32\",\n        \"type\": \"integer\"\n       },\n       \"serviceSpec\": {\n        \"description\": \"ServiceSpec is the Service specification\",\n        \"properties\": {\n         \"ports\": {\n          \"description\": \"The list of ports that are exposed by this service. More info: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies\",\n          \"items\": {\n           \"description\": \"ServicePort contains information on service's port.\",\n           \"properties\": {\n            \"appProtocol\": {\n             \"description\": \"The application protocol for this port. This field follows standard Kubernetes label syntax. Un-prefixed names are reserved for IANA standard service names (as per RFC-6335 and http://www.iana.org/assignments/service-names). Non-standard protocols should use prefixed names such as mycompany.com/my-custom-protocol. This is a beta field that is guarded by the ServiceAppProtocol feature gate and enabled by default.\",\n             \"type\": \"string\"\n            },\n            \"name\": {\n             \"description\": \"The name of this port within the service. This must be a DNS_LABEL. All ports within a ServiceSpec must have unique names. When considering the endpoints for a Service, this must match the 'name' field in the EndpointPort. Optional if only one ServicePort is defined on this service.\",\n             \"type\": \"string\"\n            },\n            \"nodePort\": {\n             \"description\": \"The port on each node on which this service is exposed when type=NodePort or LoadBalancer. Usually assigned by the system. If specified, it will be allocated to the service if unused or else creation of the service will fail. Default is to auto-allocate a port if the ServiceType of this Service requires one. More info: https://kubernetes.io/docs/concepts/services-networking/service/#type-nodeport\",\n             \"format\": \"int32\",\n             \"type\": \"integer\"\n            },\n            \"port\": {\n             \"description\": \"The port that will be exposed by this service.\",\n             \"format\": \"int32\",\n             \"type\": \"integer\"\n            },\n            \"protocol\": {\n             \"default\": \"TCP\",\n             \"description\": \"The IP protocol for this port. Supports \\\"TCP\\\", \\\"UDP\\\", and \\\"SCTP\\\". Default is TCP.\",\n             \"type\": \"string\"\n            },\n            \"targetPort\": {\n             \"anyOf\": [\n              {\n               \"type\": \"integer\"\n              },\n              {\n               \"type\": \"string\"\n              }\n             ],\n             \"description\": \"Number or name of the port to access on the pods targeted by the service. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME. If this is a string, it will be looked up as a named port in the target Pod's container ports. If this is not specified, the value of the 'port' field is used (an identity map). This field is ignored for services with clusterIP=None, and should be omitted or set equal to the 'port' field. More info: https://kubernetes.io/docs/concepts/services-networking/service/#defining-a-service\",\n             \"x-kubernetes-int-or-string\": true\n            }\n           },\n           \"required\": [\n            \"port\"\n           ],\n           \"type\": \"object\"\n          },\n          \"type\": \"array\",\n          \"x-kubernetes-list-map-keys\": [\n           \"port\"\n          ],\n          \"x-kubernetes-list-type\": \"map\"\n         },\n         \"type\": {\n          \"description\": \"type determines how the Service is exposed. Defaults to ClusterIP. Valid options are ExternalName, ClusterIP, NodePort, and LoadBalancer. \\\"ExternalName\\\" maps to the specified externalName. \\\"ClusterIP\\\" allocates a cluster-internal IP address for load-balancing to endpoints. Endpoints are determined by the selector or if that is not specified, by manual construction of an Endpoints object. If clusterIP is \\\"None\\\", no virtual IP is allocated and the endpoints are published as a set of endpoints rather than a stable IP. \\\"NodePort\\\" builds on ClusterIP and allocates a port on every node which routes to the clusterIP. \\\"LoadBalancer\\\" builds on NodePort and creates an external load-balancer (if supported in the current cloud) which routes to the clusterIP. More info: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types\",\n          \"type\": \"string\"\n         }\n        },\n        \"type\": \"object\"\n       }\n      },\n      \"type\": \"object\"\n     },\n     \"type\": \"array\"\n    },\n    \"name\": {\n     \"description\": \"Name is the name of the instance\",\n     \"type\": \"string\"\n    }\n   },\n   \"type\": \"object\"\n  }\n },\n \"title\": \"Site Where Instance\",\n \"type\": \"object\"\n}"}