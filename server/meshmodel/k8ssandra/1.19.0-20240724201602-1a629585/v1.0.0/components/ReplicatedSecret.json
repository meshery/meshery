{
  "capabilities": null,
  "component": {
   "kind": "ReplicatedSecret",
   "schema": "{\n \"description\": \"ReplicatedSecret is the Schema for the replicatedsecrets API\",\n \"properties\": {\n  \"spec\": {\n   \"description\": \"ReplicatedSecretSpec defines the desired state of ReplicatedSecret\",\n   \"properties\": {\n    \"replicationTargets\": {\n     \"description\": \"TargetContexts indicates the target clusters to which the secrets are replicated to. If empty, no clusters are targeted\",\n     \"items\": {\n      \"properties\": {\n       \"addLabels\": {\n        \"additionalProperties\": {\n         \"type\": \"string\"\n        },\n        \"description\": \"AddLabels adds labels to the target secret.\",\n        \"type\": \"object\"\n       },\n       \"dropLabels\": {\n        \"description\": \"DropLabels defines the labels to be dropped from the secret before replication, this is sometimes neccessary to avoid infinite replication.\",\n        \"items\": {\n         \"type\": \"string\"\n        },\n        \"type\": \"array\"\n       },\n       \"k8sContextName\": {\n        \"description\": \"K8sContextName defines the target cluster name as set in the ClientConfig. If left empty, current cluster is assumed\",\n        \"type\": \"string\"\n       },\n       \"namespace\": {\n        \"description\": \"TODO Implement at some point\\nNamespace to replicate the data to in the target cluster. If left empty, current namespace is used.\",\n        \"type\": \"string\"\n       },\n       \"targetPrefix\": {\n        \"description\": \"TargetPrefix is the prefix to be used for the replicated secret in the target cluster. If left empty, the same name is used\\nas the original secret.\",\n        \"type\": \"string\"\n       }\n      },\n      \"type\": \"object\"\n     },\n     \"type\": \"array\"\n    },\n    \"selector\": {\n     \"description\": \"Selector defines which secrets are replicated. If left empty, all the secrets are replicated\",\n     \"properties\": {\n      \"matchExpressions\": {\n       \"description\": \"matchExpressions is a list of label selector requirements. The requirements are ANDed.\",\n       \"items\": {\n        \"description\": \"A label selector requirement is a selector that contains values, a key, and an operator that\\nrelates the key and values.\",\n        \"properties\": {\n         \"key\": {\n          \"description\": \"key is the label key that the selector applies to.\",\n          \"type\": \"string\"\n         },\n         \"operator\": {\n          \"description\": \"operator represents a key's relationship to a set of values.\\nValid operators are In, NotIn, Exists and DoesNotExist.\",\n          \"type\": \"string\"\n         },\n         \"values\": {\n          \"description\": \"values is an array of string values. If the operator is In or NotIn,\\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\\nthe values array must be empty. This array is replaced during a strategic\\nmerge patch.\",\n          \"items\": {\n           \"type\": \"string\"\n          },\n          \"type\": \"array\"\n         }\n        },\n        \"required\": [\n         \"key\",\n         \"operator\"\n        ],\n        \"type\": \"object\"\n       },\n       \"type\": \"array\"\n      },\n      \"matchLabels\": {\n       \"additionalProperties\": {\n        \"type\": \"string\"\n       },\n       \"description\": \"matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\\nmap is equivalent to an element of matchExpressions, whose key field is \\\"key\\\", the\\noperator is \\\"In\\\", and the values array contains only \\\"value\\\". The requirements are ANDed.\",\n       \"type\": \"object\"\n      }\n     },\n     \"type\": \"object\",\n     \"x-kubernetes-map-type\": \"atomic\"\n    }\n   },\n   \"type\": \"object\"\n  }\n },\n \"title\": \"Replicated Secret\",\n \"type\": \"object\"\n}",
   "version": "replication.k8ssandra.io/v1alpha1"
  },
  "configuration": null,
  "description": "",
  "displayName": "Replicated Secret",
  "format": "JSON",
  "id": "00000000-0000-0000-0000-000000000000",
  "metadata": {
   "defaultData": "",
   "genealogy": "",
   "isAnnotation": false,
   "published": false,
   "shapePolygonPoints": "",
   "styleOverrides": "",
   "styles": ""
  },
  "model": {
   "category": {
    "name": "App Definition and Development"
   },
   "displayName": "K8ssandra",
   "id": "00000000-0000-0000-0000-000000000000",
   "metadata": {
    "defaultData": "",
    "isAnnotation": false,
    "primaryColor": "#00B39F",
    "secondaryColor": "#00D3A9",
    "shape": "circle",
    "shapePolygonPoints": "",
    "styleOverrides": "",
    "styles": "",
    "svgColor": "",
    "svgComplete": "",
    "svgWhite": ""
   },
   "model": {
    "version": "1.19.0-20240724201602-1a629585"
   },
   "name": "k8ssandra",
   "registrant": {
    "created_at": "0001-01-01T00:00:00Z",
    "credential_id": "00000000-0000-0000-0000-000000000000",
    "deleted_at": "0001-01-01T00:00:00Z",
    "id": "00000000-0000-0000-0000-000000000000",
    "kind": "artifacthub",
    "name": "Artifact Hub",
    "status": "discovered",
    "sub_type": "",
    "type": "registry",
    "updated_at": "0001-01-01T00:00:00Z",
    "user_id": "00000000-0000-0000-0000-000000000000"
   },
   "connection_id": "00000000-0000-0000-0000-000000000000",
   "schemaVersion": "models.meshery.io/v1beta1",
   "status": "ignored",
   "subCategory": "Database",
   "version": "v1.0.0",
   "components": null,
   "relationships": null
  },
  "schemaVersion": "components.meshery.io/v1beta1",
  "status": "ignored",
  "styles": {
   "primaryColor": "",
   "svgColor": "",
   "svgWhite": ""
  },
  "version": "v1.0.0"
 }