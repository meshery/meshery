{"kind":"EnvoyFleet","apiVersion":"gateway.kusk.io/v1alpha1","displayName":"Envoy Fleet","format":"JSON","hostname":"","hostID":"00000000-0000-0000-0000-000000000000","displayhostname":"","metadata":{"capabilities":"","genealogy":"","isAnnotation":false,"isModelAnnotation":"FALSE","isNamespaced":true,"logoURL":"","model":"kusk-gateway","modelDisplayName":"Kusk Gateway","primaryColor":"#009787","published":true,"secondaryColor":"#00D3A9","shape":"circle","styleOverrides":"","subCategory":"API Gateway","svgColor":"\u003c?xml version=\"1.0\" encoding=\"UTF-8\"?\u003e\u003c!DOCTYPE svg\u003e\u003csvg xmlns=\"http://www.w3.org/2000/svg\" style=\"enable-background:new 0 0 139.3 139.3\" xml:space=\"preserve\" viewBox=\"27.89 37.77 83.72 63.82\" height=\"20\" width=\"20\"\u003e\u003clinearGradient xmlns=\"http://www.w3.org/2000/svg\" id=\"a\" gradientUnits=\"userSpaceOnUse\" x1=\"-150.031\" y1=\"221.201\" x2=\"-128.088\" y2=\"255.634\" gradientTransform=\"matrix(.9808 .1951 .186 -.9354 187.374 312.672)\"\u003e\u003cstop xmlns=\"http://www.w3.org/2000/svg\" offset=\"0\" style=\"stop-color:#a1d7d8\"\u003e\u003c/stop\u003e\u003cstop xmlns=\"http://www.w3.org/2000/svg\" offset=\".24\" style=\"stop-color:#7fc9c7\"\u003e\u003c/stop\u003e\u003cstop xmlns=\"http://www.w3.org/2000/svg\" offset=\".767\" style=\"stop-color:#28a79b\"\u003e\u003c/stop\u003e\u003cstop xmlns=\"http://www.w3.org/2000/svg\" offset=\"1\" style=\"stop-color:#009787\"\u003e\u003c/stop\u003e\u003c/linearGradient\u003e\u003cpath xmlns=\"http://www.w3.org/2000/svg\" d=\"M111 59.5c2.1-6.3-1.4-13.2-7.8-14.8-2.6-.6-6-1-7.8 1.2-2.5 3.1 3.3 6.9 3.7 8.7.4 1.6.7 5.3-4.1 10.7-4.8 5.6-13.6 10.3-13.2 10.7.5.5 2.1 3 2.6 2.9 9.3-.6 17.6-5 22.9-12.3 1.6-2.2 2.8-4.6 3.7-7.1z\" style=\"fill:url(#a)\"\u003e\u003c/path\u003e\u003clinearGradient xmlns=\"http://www.w3.org/2000/svg\" id=\"b\" gradientUnits=\"userSpaceOnUse\" x1=\"-179.946\" y1=\"401.315\" x2=\"-148.877\" y2=\"447.811\" gradientTransform=\"scale(1 -1) rotate(-11.25 -2545.38 -1003.935)\"\u003e\u003cstop xmlns=\"http://www.w3.org/2000/svg\" offset=\"0\" style=\"stop-color:#a1d7d8\"\u003e\u003c/stop\u003e\u003cstop xmlns=\"http://www.w3.org/2000/svg\" offset=\".24\" style=\"stop-color:#7fc9c7\"\u003e\u003c/stop\u003e\u003cstop xmlns=\"http://www.w3.org/2000/svg\" offset=\".767\" style=\"stop-color:#28a79b\"\u003e\u003c/stop\u003e\u003cstop xmlns=\"http://www.w3.org/2000/svg\" offset=\"1\" style=\"stop-color:#009787\"\u003e\u003c/stop\u003e\u003c/linearGradient\u003e\u003cpath xmlns=\"http://www.w3.org/2000/svg\" d=\"M85.4 87.2c-1.3-2.2-2.9-4.1-4.7-5.9-11.9-11.6-24.4-19-28.1-20.2-.9-.3.9-2.7 1.4-2.6 3.1.8 19.6 9.4 24.8 15.2.5.6 14.9-8.8 16.5-16.3.2-1.1 0-2.2-.7-3.1-6.3-9.1-23.3-14.5-31.6-16.4-2.5-.6-4.9 1-5.5 3.4v.2c-.9 5.7-3.3 11-6.8 15.6V57c-1.4 2.1-4.5.8-4.5.8-8.5-3.6-15.2-4.3-17.5-1.1-3.8 5.2 6.2 19 22.3 30.9s32.4 17.2 36.2 12c1.6-2.4 1.2-7.2-1.8-12.4zM70.3 90c-1.4 1.9-8.8-1.1-16.4-6.7-7.8-5.7-12.9-11.7-11.5-13.6 1.4-1.9 8.7 1.1 16.4 6.7C66.6 82 71.7 88.2 70.3 90z\" style=\"fill:url(#b)\"\u003e\u003c/path\u003e\u003c/svg\u003e","svgComplete":"","svgWhite":"\u003c?xml version=\"1.0\" encoding=\"UTF-8\"?\u003e\u003c!DOCTYPE svg\u003e\u003csvg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\" id=\"Layer_1\" xmlns:_xmlns=\"xmlns\" _xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" viewBox=\"0 0 83.7 63.8\" style=\"enable-background:new 0 0 83.7 63.8;\" xml:space=\"preserve\" height=\"20\" width=\"20\"\u003e\n\u003cstyle xmlns=\"http://www.w3.org/2000/svg\" type=\"text/css\"\u003e\n        .st0{fill:#FFFFFF;}\n\u003c/style\u003e\n\u003cpath xmlns=\"http://www.w3.org/2000/svg\" class=\"st0\" d=\"M83.1,21.7c2.1-6.3-1.4-13.2-7.8-14.8c-2.6-0.6-6-1-7.8,1.2c-2.5,3.1,3.3,6.9,3.7,8.7c0.4,1.6,0.7,5.3-4.1,10.7\u0026#xA;        c-4.8,5.6-13.6,10.3-13.2,10.7c0.5,0.5,2.1,3,2.6,2.9c9.3-0.6,17.6-5,22.9-12.3C81,26.6,82.2,24.2,83.1,21.7z\"\u003e\u003c/path\u003e\n\u003cpath xmlns=\"http://www.w3.org/2000/svg\" class=\"st0\" d=\"M57.5,49.4c-1.3-2.2-2.9-4.1-4.7-5.9c-11.9-11.6-24.4-19-28.1-20.2c-0.9-0.3,0.9-2.7,1.4-2.6\u0026#xA;        c3.1,0.8,19.6,9.4,24.8,15.2c0.5,0.6,14.9-8.8,16.5-16.3c0.2-1.1,0-2.2-0.7-3.1C60.4,7.4,43.4,2,35.1,0.1c-2.5-0.6-4.9,1-5.5,3.4\u0026#xA;        v0.2c-0.9,5.7-3.3,11-6.8,15.6v-0.1c-1.4,2.1-4.5,0.8-4.5,0.8c-8.5-3.6-15.2-4.3-17.5-1.1C-3,24.1,7,37.9,23.1,49.8\u0026#xA;        s32.4,17.2,36.2,12C60.9,59.4,60.5,54.6,57.5,49.4z M42.4,52.2c-1.4,1.9-8.8-1.1-16.4-6.7c-7.8-5.7-12.9-11.7-11.5-13.6\u0026#xA;        s8.7,1.1,16.4,6.7C38.7,44.2,43.8,50.4,42.4,52.2z\"\u003e\u003c/path\u003e\n\u003c/svg\u003e"},"model":{"name":"kusk-gateway","version":"0.0.65","displayName":"Kusk Gateway","hostname":"","hostID":"00000000-0000-0000-0000-000000000000","displayhostname":"","category":{"name":"Orchestration \u0026 Management","metadata":null},"metadata":{"isAnnotation":false,"source_uri":"https://github.com/kubeshop/helm-charts/releases/download/kusk-gateway-0.0.65/kusk-gateway-0.0.65.tgz","svgColor":"\u003c?xml version=\"1.0\" encoding=\"UTF-8\"?\u003e\u003c!DOCTYPE svg\u003e\u003csvg xmlns=\"http://www.w3.org/2000/svg\" style=\"enable-background:new 0 0 139.3 139.3\" xml:space=\"preserve\" viewBox=\"27.89 37.77 83.72 63.82\" height=\"20\" width=\"20\"\u003e\u003clinearGradient xmlns=\"http://www.w3.org/2000/svg\" id=\"a\" gradientUnits=\"userSpaceOnUse\" x1=\"-150.031\" y1=\"221.201\" x2=\"-128.088\" y2=\"255.634\" gradientTransform=\"matrix(.9808 .1951 .186 -.9354 187.374 312.672)\"\u003e\u003cstop xmlns=\"http://www.w3.org/2000/svg\" offset=\"0\" style=\"stop-color:#a1d7d8\"\u003e\u003c/stop\u003e\u003cstop xmlns=\"http://www.w3.org/2000/svg\" offset=\".24\" style=\"stop-color:#7fc9c7\"\u003e\u003c/stop\u003e\u003cstop xmlns=\"http://www.w3.org/2000/svg\" offset=\".767\" style=\"stop-color:#28a79b\"\u003e\u003c/stop\u003e\u003cstop xmlns=\"http://www.w3.org/2000/svg\" offset=\"1\" style=\"stop-color:#009787\"\u003e\u003c/stop\u003e\u003c/linearGradient\u003e\u003cpath xmlns=\"http://www.w3.org/2000/svg\" d=\"M111 59.5c2.1-6.3-1.4-13.2-7.8-14.8-2.6-.6-6-1-7.8 1.2-2.5 3.1 3.3 6.9 3.7 8.7.4 1.6.7 5.3-4.1 10.7-4.8 5.6-13.6 10.3-13.2 10.7.5.5 2.1 3 2.6 2.9 9.3-.6 17.6-5 22.9-12.3 1.6-2.2 2.8-4.6 3.7-7.1z\" style=\"fill:url(#a)\"\u003e\u003c/path\u003e\u003clinearGradient xmlns=\"http://www.w3.org/2000/svg\" id=\"b\" gradientUnits=\"userSpaceOnUse\" x1=\"-179.946\" y1=\"401.315\" x2=\"-148.877\" y2=\"447.811\" gradientTransform=\"scale(1 -1) rotate(-11.25 -2545.38 -1003.935)\"\u003e\u003cstop xmlns=\"http://www.w3.org/2000/svg\" offset=\"0\" style=\"stop-color:#a1d7d8\"\u003e\u003c/stop\u003e\u003cstop xmlns=\"http://www.w3.org/2000/svg\" offset=\".24\" style=\"stop-color:#7fc9c7\"\u003e\u003c/stop\u003e\u003cstop xmlns=\"http://www.w3.org/2000/svg\" offset=\".767\" style=\"stop-color:#28a79b\"\u003e\u003c/stop\u003e\u003cstop xmlns=\"http://www.w3.org/2000/svg\" offset=\"1\" style=\"stop-color:#009787\"\u003e\u003c/stop\u003e\u003c/linearGradient\u003e\u003cpath xmlns=\"http://www.w3.org/2000/svg\" d=\"M85.4 87.2c-1.3-2.2-2.9-4.1-4.7-5.9-11.9-11.6-24.4-19-28.1-20.2-.9-.3.9-2.7 1.4-2.6 3.1.8 19.6 9.4 24.8 15.2.5.6 14.9-8.8 16.5-16.3.2-1.1 0-2.2-.7-3.1-6.3-9.1-23.3-14.5-31.6-16.4-2.5-.6-4.9 1-5.5 3.4v.2c-.9 5.7-3.3 11-6.8 15.6V57c-1.4 2.1-4.5.8-4.5.8-8.5-3.6-15.2-4.3-17.5-1.1-3.8 5.2 6.2 19 22.3 30.9s32.4 17.2 36.2 12c1.6-2.4 1.2-7.2-1.8-12.4zM70.3 90c-1.4 1.9-8.8-1.1-16.4-6.7-7.8-5.7-12.9-11.7-11.5-13.6 1.4-1.9 8.7 1.1 16.4 6.7C66.6 82 71.7 88.2 70.3 90z\" style=\"fill:url(#b)\"\u003e\u003c/path\u003e\u003c/svg\u003e","svgWhite":"\u003c?xml version=\"1.0\" encoding=\"UTF-8\"?\u003e\u003c!DOCTYPE svg\u003e\u003csvg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\" id=\"Layer_1\" xmlns:_xmlns=\"xmlns\" _xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" viewBox=\"0 0 83.7 63.8\" style=\"enable-background:new 0 0 83.7 63.8;\" xml:space=\"preserve\" height=\"20\" width=\"20\"\u003e\n\u003cstyle xmlns=\"http://www.w3.org/2000/svg\" type=\"text/css\"\u003e\n        .st0{fill:#FFFFFF;}\n\u003c/style\u003e\n\u003cpath xmlns=\"http://www.w3.org/2000/svg\" class=\"st0\" d=\"M83.1,21.7c2.1-6.3-1.4-13.2-7.8-14.8c-2.6-0.6-6-1-7.8,1.2c-2.5,3.1,3.3,6.9,3.7,8.7c0.4,1.6,0.7,5.3-4.1,10.7\u0026#xA;        c-4.8,5.6-13.6,10.3-13.2,10.7c0.5,0.5,2.1,3,2.6,2.9c9.3-0.6,17.6-5,22.9-12.3C81,26.6,82.2,24.2,83.1,21.7z\"\u003e\u003c/path\u003e\n\u003cpath xmlns=\"http://www.w3.org/2000/svg\" class=\"st0\" d=\"M57.5,49.4c-1.3-2.2-2.9-4.1-4.7-5.9c-11.9-11.6-24.4-19-28.1-20.2c-0.9-0.3,0.9-2.7,1.4-2.6\u0026#xA;        c3.1,0.8,19.6,9.4,24.8,15.2c0.5,0.6,14.9-8.8,16.5-16.3c0.2-1.1,0-2.2-0.7-3.1C60.4,7.4,43.4,2,35.1,0.1c-2.5-0.6-4.9,1-5.5,3.4\u0026#xA;        v0.2c-0.9,5.7-3.3,11-6.8,15.6v-0.1c-1.4,2.1-4.5,0.8-4.5,0.8c-8.5-3.6-15.2-4.3-17.5-1.1C-3,24.1,7,37.9,23.1,49.8\u0026#xA;        s32.4,17.2,36.2,12C60.9,59.4,60.5,54.6,57.5,49.4z M42.4,52.2c-1.4,1.9-8.8-1.1-16.4-6.7c-7.8-5.7-12.9-11.7-11.5-13.6\u0026#xA;        s8.7,1.1,16.4,6.7C38.7,44.2,43.8,50.4,42.4,52.2z\"\u003e\u003c/path\u003e\n\u003c/svg\u003e"},"components":null,"relationships":null},"schema":"{\n \"description\": \"EnvoyFleet is the Schema for the envoyfleet API\",\n \"properties\": {\n  \"spec\": {\n   \"description\": \"EnvoyFleetSpec defines the desired state of EnvoyFleet\",\n   \"properties\": {\n    \"accesslog\": {\n     \"description\": \"Access logging settings for the Envoy\",\n     \"properties\": {\n      \"format\": {\n       \"description\": \"Stdout logging format - text for unstructured and json for the structured type of logging\",\n       \"enum\": [\n        \"json\",\n        \"text\"\n       ],\n       \"type\": \"string\"\n      },\n      \"json_template\": {\n       \"additionalProperties\": {\n        \"type\": \"string\"\n       },\n       \"description\": \"Logging format template for the structured json type. See https://www.envoyproxy.io/docs/envoy/latest/configuration/observability/access_log/usage for the usage. Uses Kusk Gateway defaults if not specified.\",\n       \"type\": \"object\"\n      },\n      \"text_template\": {\n       \"description\": \"Logging format template for the unstructured text type. See https://www.envoyproxy.io/docs/envoy/latest/configuration/observability/access_log/usage for the usage. Uses Kusk Gateway defaults if not specified.\",\n       \"type\": \"string\"\n      }\n     },\n     \"required\": [\n      \"format\"\n     ],\n     \"type\": \"object\"\n    },\n    \"affinity\": {\n     \"description\": \"Affinity is used to schedule Envoy pod(s) to specific nodes, optional\",\n     \"properties\": {\n      \"nodeAffinity\": {\n       \"description\": \"Describes node affinity scheduling rules for the pod.\",\n       \"properties\": {\n        \"preferredDuringSchedulingIgnoredDuringExecution\": {\n         \"description\": \"The scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding \\\"weight\\\" to the sum if the node matches the corresponding matchExpressions; the node(s) with the highest sum are the most preferred.\",\n         \"items\": {\n          \"description\": \"An empty preferred scheduling term matches all objects with implicit weight 0 (i.e. it's a no-op). A null preferred scheduling term matches no objects (i.e. is also a no-op).\",\n          \"properties\": {\n           \"preference\": {\n            \"description\": \"A node selector term, associated with the corresponding weight.\",\n            \"properties\": {\n             \"matchExpressions\": {\n              \"description\": \"A list of node selector requirements by node's labels.\",\n              \"items\": {\n               \"description\": \"A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.\",\n               \"properties\": {\n                \"key\": {\n                 \"description\": \"The label key that the selector applies to.\",\n                 \"type\": \"string\"\n                },\n                \"operator\": {\n                 \"description\": \"Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.\",\n                 \"type\": \"string\"\n                },\n                \"values\": {\n                 \"description\": \"An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.\",\n                 \"items\": {\n                  \"type\": \"string\"\n                 },\n                 \"type\": \"array\"\n                }\n               },\n               \"required\": [\n                \"key\",\n                \"operator\"\n               ],\n               \"type\": \"object\"\n              },\n              \"type\": \"array\"\n             },\n             \"matchFields\": {\n              \"description\": \"A list of node selector requirements by node's fields.\",\n              \"items\": {\n               \"description\": \"A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.\",\n               \"properties\": {\n                \"key\": {\n                 \"description\": \"The label key that the selector applies to.\",\n                 \"type\": \"string\"\n                },\n                \"operator\": {\n                 \"description\": \"Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.\",\n                 \"type\": \"string\"\n                },\n                \"values\": {\n                 \"description\": \"An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.\",\n                 \"items\": {\n                  \"type\": \"string\"\n                 },\n                 \"type\": \"array\"\n                }\n               },\n               \"required\": [\n                \"key\",\n                \"operator\"\n               ],\n               \"type\": \"object\"\n              },\n              \"type\": \"array\"\n             }\n            },\n            \"type\": \"object\"\n           },\n           \"weight\": {\n            \"description\": \"Weight associated with matching the corresponding nodeSelectorTerm, in the range 1-100.\",\n            \"format\": \"int32\",\n            \"type\": \"integer\"\n           }\n          },\n          \"required\": [\n           \"preference\",\n           \"weight\"\n          ],\n          \"type\": \"object\"\n         },\n         \"type\": \"array\"\n        },\n        \"requiredDuringSchedulingIgnoredDuringExecution\": {\n         \"description\": \"If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to an update), the system may or may not try to eventually evict the pod from its node.\",\n         \"properties\": {\n          \"nodeSelectorTerms\": {\n           \"description\": \"Required. A list of node selector terms. The terms are ORed.\",\n           \"items\": {\n            \"description\": \"A null or empty node selector term matches no objects. The requirements of them are ANDed. The TopologySelectorTerm type implements a subset of the NodeSelectorTerm.\",\n            \"properties\": {\n             \"matchExpressions\": {\n              \"description\": \"A list of node selector requirements by node's labels.\",\n              \"items\": {\n               \"description\": \"A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.\",\n               \"properties\": {\n                \"key\": {\n                 \"description\": \"The label key that the selector applies to.\",\n                 \"type\": \"string\"\n                },\n                \"operator\": {\n                 \"description\": \"Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.\",\n                 \"type\": \"string\"\n                },\n                \"values\": {\n                 \"description\": \"An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.\",\n                 \"items\": {\n                  \"type\": \"string\"\n                 },\n                 \"type\": \"array\"\n                }\n               },\n               \"required\": [\n                \"key\",\n                \"operator\"\n               ],\n               \"type\": \"object\"\n              },\n              \"type\": \"array\"\n             },\n             \"matchFields\": {\n              \"description\": \"A list of node selector requirements by node's fields.\",\n              \"items\": {\n               \"description\": \"A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.\",\n               \"properties\": {\n                \"key\": {\n                 \"description\": \"The label key that the selector applies to.\",\n                 \"type\": \"string\"\n                },\n                \"operator\": {\n                 \"description\": \"Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.\",\n                 \"type\": \"string\"\n                },\n                \"values\": {\n                 \"description\": \"An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.\",\n                 \"items\": {\n                  \"type\": \"string\"\n                 },\n                 \"type\": \"array\"\n                }\n               },\n               \"required\": [\n                \"key\",\n                \"operator\"\n               ],\n               \"type\": \"object\"\n              },\n              \"type\": \"array\"\n             }\n            },\n            \"type\": \"object\"\n           },\n           \"type\": \"array\"\n          }\n         },\n         \"required\": [\n          \"nodeSelectorTerms\"\n         ],\n         \"type\": \"object\"\n        }\n       },\n       \"type\": \"object\"\n      },\n      \"podAffinity\": {\n       \"description\": \"Describes pod affinity scheduling rules (e.g. co-locate this pod in the same node, zone, etc. as some other pod(s)).\",\n       \"properties\": {\n        \"preferredDuringSchedulingIgnoredDuringExecution\": {\n         \"description\": \"The scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding \\\"weight\\\" to the sum if the node has pods which matches the corresponding podAffinityTerm; the node(s) with the highest sum are the most preferred.\",\n         \"items\": {\n          \"description\": \"The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)\",\n          \"properties\": {\n           \"podAffinityTerm\": {\n            \"description\": \"Required. A pod affinity term, associated with the corresponding weight.\",\n            \"properties\": {\n             \"labelSelector\": {\n              \"description\": \"A label query over a set of resources, in this case pods.\",\n              \"properties\": {\n               \"matchExpressions\": {\n                \"description\": \"matchExpressions is a list of label selector requirements. The requirements are ANDed.\",\n                \"items\": {\n                 \"description\": \"A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.\",\n                 \"properties\": {\n                  \"key\": {\n                   \"description\": \"key is the label key that the selector applies to.\",\n                   \"type\": \"string\"\n                  },\n                  \"operator\": {\n                   \"description\": \"operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.\",\n                   \"type\": \"string\"\n                  },\n                  \"values\": {\n                   \"description\": \"values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.\",\n                   \"items\": {\n                    \"type\": \"string\"\n                   },\n                   \"type\": \"array\"\n                  }\n                 },\n                 \"required\": [\n                  \"key\",\n                  \"operator\"\n                 ],\n                 \"type\": \"object\"\n                },\n                \"type\": \"array\"\n               },\n               \"matchLabels\": {\n                \"additionalProperties\": {\n                 \"type\": \"string\"\n                },\n                \"description\": \"matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \\\"key\\\", the operator is \\\"In\\\", and the values array contains only \\\"value\\\". The requirements are ANDed.\",\n                \"type\": \"object\"\n               }\n              },\n              \"type\": \"object\"\n             },\n             \"namespaceSelector\": {\n              \"description\": \"A label query over the set of namespaces that the term applies to. The term is applied to the union of the namespaces selected by this field and the ones listed in the namespaces field. null selector and null or empty namespaces list means \\\"this pod's namespace\\\". An empty selector ({}) matches all namespaces.\",\n              \"properties\": {\n               \"matchExpressions\": {\n                \"description\": \"matchExpressions is a list of label selector requirements. The requirements are ANDed.\",\n                \"items\": {\n                 \"description\": \"A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.\",\n                 \"properties\": {\n                  \"key\": {\n                   \"description\": \"key is the label key that the selector applies to.\",\n                   \"type\": \"string\"\n                  },\n                  \"operator\": {\n                   \"description\": \"operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.\",\n                   \"type\": \"string\"\n                  },\n                  \"values\": {\n                   \"description\": \"values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.\",\n                   \"items\": {\n                    \"type\": \"string\"\n                   },\n                   \"type\": \"array\"\n                  }\n                 },\n                 \"required\": [\n                  \"key\",\n                  \"operator\"\n                 ],\n                 \"type\": \"object\"\n                },\n                \"type\": \"array\"\n               },\n               \"matchLabels\": {\n                \"additionalProperties\": {\n                 \"type\": \"string\"\n                },\n                \"description\": \"matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \\\"key\\\", the operator is \\\"In\\\", and the values array contains only \\\"value\\\". The requirements are ANDed.\",\n                \"type\": \"object\"\n               }\n              },\n              \"type\": \"object\"\n             },\n             \"namespaces\": {\n              \"description\": \"namespaces specifies a static list of namespace names that the term applies to. The term is applied to the union of the namespaces listed in this field and the ones selected by namespaceSelector. null or empty namespaces list and null namespaceSelector means \\\"this pod's namespace\\\".\",\n              \"items\": {\n               \"type\": \"string\"\n              },\n              \"type\": \"array\"\n             },\n             \"topologyKey\": {\n              \"description\": \"This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.\",\n              \"type\": \"string\"\n             }\n            },\n            \"required\": [\n             \"topologyKey\"\n            ],\n            \"type\": \"object\"\n           },\n           \"weight\": {\n            \"description\": \"weight associated with matching the corresponding podAffinityTerm, in the range 1-100.\",\n            \"format\": \"int32\",\n            \"type\": \"integer\"\n           }\n          },\n          \"required\": [\n           \"podAffinityTerm\",\n           \"weight\"\n          ],\n          \"type\": \"object\"\n         },\n         \"type\": \"array\"\n        },\n        \"requiredDuringSchedulingIgnoredDuringExecution\": {\n         \"description\": \"If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to a pod label update), the system may or may not try to eventually evict the pod from its node. When there are multiple elements, the lists of nodes corresponding to each podAffinityTerm are intersected, i.e. all terms must be satisfied.\",\n         \"items\": {\n          \"description\": \"Defines a set of pods (namely those matching the labelSelector relative to the given namespace(s)) that this pod should be co-located (affinity) or not co-located (anti-affinity) with, where co-located is defined as running on a node whose value of the label with key \\u003ctopologyKey\\u003e matches that of any node on which a pod of the set of pods is running\",\n          \"properties\": {\n           \"labelSelector\": {\n            \"description\": \"A label query over a set of resources, in this case pods.\",\n            \"properties\": {\n             \"matchExpressions\": {\n              \"description\": \"matchExpressions is a list of label selector requirements. The requirements are ANDed.\",\n              \"items\": {\n               \"description\": \"A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.\",\n               \"properties\": {\n                \"key\": {\n                 \"description\": \"key is the label key that the selector applies to.\",\n                 \"type\": \"string\"\n                },\n                \"operator\": {\n                 \"description\": \"operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.\",\n                 \"type\": \"string\"\n                },\n                \"values\": {\n                 \"description\": \"values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.\",\n                 \"items\": {\n                  \"type\": \"string\"\n                 },\n                 \"type\": \"array\"\n                }\n               },\n               \"required\": [\n                \"key\",\n                \"operator\"\n               ],\n               \"type\": \"object\"\n              },\n              \"type\": \"array\"\n             },\n             \"matchLabels\": {\n              \"additionalProperties\": {\n               \"type\": \"string\"\n              },\n              \"description\": \"matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \\\"key\\\", the operator is \\\"In\\\", and the values array contains only \\\"value\\\". The requirements are ANDed.\",\n              \"type\": \"object\"\n             }\n            },\n            \"type\": \"object\"\n           },\n           \"namespaceSelector\": {\n            \"description\": \"A label query over the set of namespaces that the term applies to. The term is applied to the union of the namespaces selected by this field and the ones listed in the namespaces field. null selector and null or empty namespaces list means \\\"this pod's namespace\\\". An empty selector ({}) matches all namespaces.\",\n            \"properties\": {\n             \"matchExpressions\": {\n              \"description\": \"matchExpressions is a list of label selector requirements. The requirements are ANDed.\",\n              \"items\": {\n               \"description\": \"A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.\",\n               \"properties\": {\n                \"key\": {\n                 \"description\": \"key is the label key that the selector applies to.\",\n                 \"type\": \"string\"\n                },\n                \"operator\": {\n                 \"description\": \"operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.\",\n                 \"type\": \"string\"\n                },\n                \"values\": {\n                 \"description\": \"values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.\",\n                 \"items\": {\n                  \"type\": \"string\"\n                 },\n                 \"type\": \"array\"\n                }\n               },\n               \"required\": [\n                \"key\",\n                \"operator\"\n               ],\n               \"type\": \"object\"\n              },\n              \"type\": \"array\"\n             },\n             \"matchLabels\": {\n              \"additionalProperties\": {\n               \"type\": \"string\"\n              },\n              \"description\": \"matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \\\"key\\\", the operator is \\\"In\\\", and the values array contains only \\\"value\\\". The requirements are ANDed.\",\n              \"type\": \"object\"\n             }\n            },\n            \"type\": \"object\"\n           },\n           \"namespaces\": {\n            \"description\": \"namespaces specifies a static list of namespace names that the term applies to. The term is applied to the union of the namespaces listed in this field and the ones selected by namespaceSelector. null or empty namespaces list and null namespaceSelector means \\\"this pod's namespace\\\".\",\n            \"items\": {\n             \"type\": \"string\"\n            },\n            \"type\": \"array\"\n           },\n           \"topologyKey\": {\n            \"description\": \"This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.\",\n            \"type\": \"string\"\n           }\n          },\n          \"required\": [\n           \"topologyKey\"\n          ],\n          \"type\": \"object\"\n         },\n         \"type\": \"array\"\n        }\n       },\n       \"type\": \"object\"\n      },\n      \"podAntiAffinity\": {\n       \"description\": \"Describes pod anti-affinity scheduling rules (e.g. avoid putting this pod in the same node, zone, etc. as some other pod(s)).\",\n       \"properties\": {\n        \"preferredDuringSchedulingIgnoredDuringExecution\": {\n         \"description\": \"The scheduler will prefer to schedule pods to nodes that satisfy the anti-affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling anti-affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding \\\"weight\\\" to the sum if the node has pods which matches the corresponding podAffinityTerm; the node(s) with the highest sum are the most preferred.\",\n         \"items\": {\n          \"description\": \"The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)\",\n          \"properties\": {\n           \"podAffinityTerm\": {\n            \"description\": \"Required. A pod affinity term, associated with the corresponding weight.\",\n            \"properties\": {\n             \"labelSelector\": {\n              \"description\": \"A label query over a set of resources, in this case pods.\",\n              \"properties\": {\n               \"matchExpressions\": {\n                \"description\": \"matchExpressions is a list of label selector requirements. The requirements are ANDed.\",\n                \"items\": {\n                 \"description\": \"A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.\",\n                 \"properties\": {\n                  \"key\": {\n                   \"description\": \"key is the label key that the selector applies to.\",\n                   \"type\": \"string\"\n                  },\n                  \"operator\": {\n                   \"description\": \"operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.\",\n                   \"type\": \"string\"\n                  },\n                  \"values\": {\n                   \"description\": \"values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.\",\n                   \"items\": {\n                    \"type\": \"string\"\n                   },\n                   \"type\": \"array\"\n                  }\n                 },\n                 \"required\": [\n                  \"key\",\n                  \"operator\"\n                 ],\n                 \"type\": \"object\"\n                },\n                \"type\": \"array\"\n               },\n               \"matchLabels\": {\n                \"additionalProperties\": {\n                 \"type\": \"string\"\n                },\n                \"description\": \"matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \\\"key\\\", the operator is \\\"In\\\", and the values array contains only \\\"value\\\". The requirements are ANDed.\",\n                \"type\": \"object\"\n               }\n              },\n              \"type\": \"object\"\n             },\n             \"namespaceSelector\": {\n              \"description\": \"A label query over the set of namespaces that the term applies to. The term is applied to the union of the namespaces selected by this field and the ones listed in the namespaces field. null selector and null or empty namespaces list means \\\"this pod's namespace\\\". An empty selector ({}) matches all namespaces.\",\n              \"properties\": {\n               \"matchExpressions\": {\n                \"description\": \"matchExpressions is a list of label selector requirements. The requirements are ANDed.\",\n                \"items\": {\n                 \"description\": \"A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.\",\n                 \"properties\": {\n                  \"key\": {\n                   \"description\": \"key is the label key that the selector applies to.\",\n                   \"type\": \"string\"\n                  },\n                  \"operator\": {\n                   \"description\": \"operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.\",\n                   \"type\": \"string\"\n                  },\n                  \"values\": {\n                   \"description\": \"values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.\",\n                   \"items\": {\n                    \"type\": \"string\"\n                   },\n                   \"type\": \"array\"\n                  }\n                 },\n                 \"required\": [\n                  \"key\",\n                  \"operator\"\n                 ],\n                 \"type\": \"object\"\n                },\n                \"type\": \"array\"\n               },\n               \"matchLabels\": {\n                \"additionalProperties\": {\n                 \"type\": \"string\"\n                },\n                \"description\": \"matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \\\"key\\\", the operator is \\\"In\\\", and the values array contains only \\\"value\\\". The requirements are ANDed.\",\n                \"type\": \"object\"\n               }\n              },\n              \"type\": \"object\"\n             },\n             \"namespaces\": {\n              \"description\": \"namespaces specifies a static list of namespace names that the term applies to. The term is applied to the union of the namespaces listed in this field and the ones selected by namespaceSelector. null or empty namespaces list and null namespaceSelector means \\\"this pod's namespace\\\".\",\n              \"items\": {\n               \"type\": \"string\"\n              },\n              \"type\": \"array\"\n             },\n             \"topologyKey\": {\n              \"description\": \"This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.\",\n              \"type\": \"string\"\n             }\n            },\n            \"required\": [\n             \"topologyKey\"\n            ],\n            \"type\": \"object\"\n           },\n           \"weight\": {\n            \"description\": \"weight associated with matching the corresponding podAffinityTerm, in the range 1-100.\",\n            \"format\": \"int32\",\n            \"type\": \"integer\"\n           }\n          },\n          \"required\": [\n           \"podAffinityTerm\",\n           \"weight\"\n          ],\n          \"type\": \"object\"\n         },\n         \"type\": \"array\"\n        },\n        \"requiredDuringSchedulingIgnoredDuringExecution\": {\n         \"description\": \"If the anti-affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the anti-affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to a pod label update), the system may or may not try to eventually evict the pod from its node. When there are multiple elements, the lists of nodes corresponding to each podAffinityTerm are intersected, i.e. all terms must be satisfied.\",\n         \"items\": {\n          \"description\": \"Defines a set of pods (namely those matching the labelSelector relative to the given namespace(s)) that this pod should be co-located (affinity) or not co-located (anti-affinity) with, where co-located is defined as running on a node whose value of the label with key \\u003ctopologyKey\\u003e matches that of any node on which a pod of the set of pods is running\",\n          \"properties\": {\n           \"labelSelector\": {\n            \"description\": \"A label query over a set of resources, in this case pods.\",\n            \"properties\": {\n             \"matchExpressions\": {\n              \"description\": \"matchExpressions is a list of label selector requirements. The requirements are ANDed.\",\n              \"items\": {\n               \"description\": \"A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.\",\n               \"properties\": {\n                \"key\": {\n                 \"description\": \"key is the label key that the selector applies to.\",\n                 \"type\": \"string\"\n                },\n                \"operator\": {\n                 \"description\": \"operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.\",\n                 \"type\": \"string\"\n                },\n                \"values\": {\n                 \"description\": \"values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.\",\n                 \"items\": {\n                  \"type\": \"string\"\n                 },\n                 \"type\": \"array\"\n                }\n               },\n               \"required\": [\n                \"key\",\n                \"operator\"\n               ],\n               \"type\": \"object\"\n              },\n              \"type\": \"array\"\n             },\n             \"matchLabels\": {\n              \"additionalProperties\": {\n               \"type\": \"string\"\n              },\n              \"description\": \"matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \\\"key\\\", the operator is \\\"In\\\", and the values array contains only \\\"value\\\". The requirements are ANDed.\",\n              \"type\": \"object\"\n             }\n            },\n            \"type\": \"object\"\n           },\n           \"namespaceSelector\": {\n            \"description\": \"A label query over the set of namespaces that the term applies to. The term is applied to the union of the namespaces selected by this field and the ones listed in the namespaces field. null selector and null or empty namespaces list means \\\"this pod's namespace\\\". An empty selector ({}) matches all namespaces.\",\n            \"properties\": {\n             \"matchExpressions\": {\n              \"description\": \"matchExpressions is a list of label selector requirements. The requirements are ANDed.\",\n              \"items\": {\n               \"description\": \"A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.\",\n               \"properties\": {\n                \"key\": {\n                 \"description\": \"key is the label key that the selector applies to.\",\n                 \"type\": \"string\"\n                },\n                \"operator\": {\n                 \"description\": \"operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.\",\n                 \"type\": \"string\"\n                },\n                \"values\": {\n                 \"description\": \"values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.\",\n                 \"items\": {\n                  \"type\": \"string\"\n                 },\n                 \"type\": \"array\"\n                }\n               },\n               \"required\": [\n                \"key\",\n                \"operator\"\n               ],\n               \"type\": \"object\"\n              },\n              \"type\": \"array\"\n             },\n             \"matchLabels\": {\n              \"additionalProperties\": {\n               \"type\": \"string\"\n              },\n              \"description\": \"matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \\\"key\\\", the operator is \\\"In\\\", and the values array contains only \\\"value\\\". The requirements are ANDed.\",\n              \"type\": \"object\"\n             }\n            },\n            \"type\": \"object\"\n           },\n           \"namespaces\": {\n            \"description\": \"namespaces specifies a static list of namespace names that the term applies to. The term is applied to the union of the namespaces listed in this field and the ones selected by namespaceSelector. null or empty namespaces list and null namespaceSelector means \\\"this pod's namespace\\\".\",\n            \"items\": {\n             \"type\": \"string\"\n            },\n            \"type\": \"array\"\n           },\n           \"topologyKey\": {\n            \"description\": \"This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.\",\n            \"type\": \"string\"\n           }\n          },\n          \"required\": [\n           \"topologyKey\"\n          ],\n          \"type\": \"object\"\n         },\n         \"type\": \"array\"\n        }\n       },\n       \"type\": \"object\"\n      }\n     },\n     \"type\": \"object\"\n    },\n    \"annotations\": {\n     \"additionalProperties\": {\n      \"type\": \"string\"\n     },\n     \"description\": \"Additional Envoy Deployment annotations, optional\",\n     \"type\": \"object\"\n    },\n    \"default\": {\n     \"description\": \"Default marks fleet as the default one in the cluster\",\n     \"type\": \"boolean\"\n    },\n    \"image\": {\n     \"default\": \"docker.io/envoyproxy/envoy:v1.23.1\",\n     \"description\": \"Envoy image tag\",\n     \"type\": \"string\"\n    },\n    \"nodeSelector\": {\n     \"additionalProperties\": {\n      \"type\": \"string\"\n     },\n     \"description\": \"Node Selector is used to schedule the Envoy pod(s) to the specificly labeled nodes, optional This is the map of \\\"key: value\\\" labels (e.g. \\\"disktype\\\": \\\"ssd\\\")\",\n     \"type\": \"object\"\n    },\n    \"resources\": {\n     \"description\": \"Resources allow to set CPU and Memory resource requests and limits, optional\",\n     \"properties\": {\n      \"limits\": {\n       \"additionalProperties\": {\n        \"anyOf\": [\n         {\n          \"type\": \"integer\"\n         },\n         {\n          \"type\": \"string\"\n         }\n        ],\n        \"pattern\": \"^(\\\\+|-)?(([0-9]+(\\\\.[0-9]*)?)|(\\\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\\\+|-)?(([0-9]+(\\\\.[0-9]*)?)|(\\\\.[0-9]+))))?$\",\n        \"x-kubernetes-int-or-string\": true\n       },\n       \"description\": \"Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/\",\n       \"type\": \"object\"\n      },\n      \"requests\": {\n       \"additionalProperties\": {\n        \"anyOf\": [\n         {\n          \"type\": \"integer\"\n         },\n         {\n          \"type\": \"string\"\n         }\n        ],\n        \"pattern\": \"^(\\\\+|-)?(([0-9]+(\\\\.[0-9]*)?)|(\\\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\\\+|-)?(([0-9]+(\\\\.[0-9]*)?)|(\\\\.[0-9]+))))?$\",\n        \"x-kubernetes-int-or-string\": true\n       },\n       \"description\": \"Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/\",\n       \"type\": \"object\"\n      }\n     },\n     \"type\": \"object\"\n    },\n    \"service\": {\n     \"description\": \"Service describes Envoy K8s service settings\",\n     \"properties\": {\n      \"annotations\": {\n       \"additionalProperties\": {\n        \"type\": \"string\"\n       },\n       \"description\": \"Service's annotations\",\n       \"type\": \"object\"\n      },\n      \"externalTrafficPolicy\": {\n       \"description\": \"externalTrafficPolicy denotes if this Service desires to route external traffic to node-local or cluster-wide endpoints. \\\"Local\\\" preserves the client source IP and avoids a second hop for LoadBalancer and Nodeport type services, but risks potentially imbalanced traffic spreading. \\\"Cluster\\\" obscures the client source IP and may cause a second hop to another node, but should have good overall load-spreading. For the preservation of the real client ip in access logs chose \\\"Local\\\"\",\n       \"enum\": [\n        \"Cluster\",\n        \"Local\"\n       ],\n       \"type\": \"string\"\n      },\n      \"loadBalancerIP\": {\n       \"description\": \"Static ip address for the LoadBalancer type if available\",\n       \"type\": \"string\"\n      },\n      \"ports\": {\n       \"description\": \"Kubernetes Service ports\",\n       \"items\": {\n        \"description\": \"ServicePort contains information on service's port.\",\n        \"properties\": {\n         \"appProtocol\": {\n          \"description\": \"The application protocol for this port. This field follows standard Kubernetes label syntax. Un-prefixed names are reserved for IANA standard service names (as per RFC-6335 and https://www.iana.org/assignments/service-names). Non-standard protocols should use prefixed names such as mycompany.com/my-custom-protocol.\",\n          \"type\": \"string\"\n         },\n         \"name\": {\n          \"description\": \"The name of this port within the service. This must be a DNS_LABEL. All ports within a ServiceSpec must have unique names. When considering the endpoints for a Service, this must match the 'name' field in the EndpointPort. Optional if only one ServicePort is defined on this service.\",\n          \"type\": \"string\"\n         },\n         \"nodePort\": {\n          \"description\": \"The port on each node on which this service is exposed when type is NodePort or LoadBalancer.  Usually assigned by the system. If a value is specified, in-range, and not in use it will be used, otherwise the operation will fail.  If not specified, a port will be allocated if this Service requires one.  If this field is specified when creating a Service which does not need it, creation will fail. This field will be wiped when updating a Service to no longer need it (e.g. changing type from NodePort to ClusterIP). More info: https://kubernetes.io/docs/concepts/services-networking/service/#type-nodeport\",\n          \"format\": \"int32\",\n          \"type\": \"integer\"\n         },\n         \"port\": {\n          \"description\": \"The port that will be exposed by this service.\",\n          \"format\": \"int32\",\n          \"type\": \"integer\"\n         },\n         \"protocol\": {\n          \"default\": \"TCP\",\n          \"description\": \"The IP protocol for this port. Supports \\\"TCP\\\", \\\"UDP\\\", and \\\"SCTP\\\". Default is TCP.\",\n          \"type\": \"string\"\n         },\n         \"targetPort\": {\n          \"anyOf\": [\n           {\n            \"type\": \"integer\"\n           },\n           {\n            \"type\": \"string\"\n           }\n          ],\n          \"description\": \"Number or name of the port to access on the pods targeted by the service. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME. If this is a string, it will be looked up as a named port in the target Pod's container ports. If this is not specified, the value of the 'port' field is used (an identity map). This field is ignored for services with clusterIP=None, and should be omitted or set equal to the 'port' field. More info: https://kubernetes.io/docs/concepts/services-networking/service/#defining-a-service\",\n          \"x-kubernetes-int-or-string\": true\n         }\n        },\n        \"required\": [\n         \"port\"\n        ],\n        \"type\": \"object\"\n       },\n       \"type\": \"array\"\n      },\n      \"type\": {\n       \"description\": \"Kubernetes service type: NodePort, ClusterIP or LoadBalancer\",\n       \"enum\": [\n        \"NodePort\",\n        \"ClusterIP\",\n        \"LoadBalancer\"\n       ],\n       \"type\": \"string\"\n      }\n     },\n     \"required\": [\n      \"ports\",\n      \"type\"\n     ],\n     \"type\": \"object\"\n    },\n    \"size\": {\n     \"default\": 1,\n     \"description\": \"Size field specifies the number of Envoy Pods being deployed. Optional, default value is 1.\",\n     \"format\": \"int32\",\n     \"minimum\": 1,\n     \"type\": \"integer\"\n    },\n    \"terminationGracePeriodSeconds\": {\n     \"description\": \"Optional duration in seconds the pod needs to terminate gracefully. May be decreased in delete request. Value must be non-negative integer. The value zero indicates stop immediately via the kill signal (no opportunity to shut down). If this value is nil, the default grace period will be used instead. The grace period is the duration in seconds after the processes running in the pod are sent a termination signal and the time when the processes are forcibly halted with a kill signal. Set this value longer than the expected cleanup time for your process. Defaults to 30 seconds.\",\n     \"format\": \"int64\",\n     \"type\": \"integer\"\n    },\n    \"tls\": {\n     \"description\": \"TLS configuration\",\n     \"properties\": {\n      \"cipherSuites\": {\n       \"description\": \"If specified, the TLS listener will only support the specified cipher list when negotiating TLS 1.0-1.2 (this setting has no effect when negotiating TLS 1.3). If not specified, a default list will be used. Defaults are different for server (downstream) and client (upstream) TLS configurations. For more information see: https://www.envoyproxy.io/docs/envoy/latest/api-v3/extensions/transport_sockets/tls/v3/common.proto\",\n       \"items\": {\n        \"type\": \"string\"\n       },\n       \"type\": \"array\"\n      },\n      \"https_redirect_hosts\": {\n       \"description\": \"List of host names to enforce HTTPS redirect for. That is if a HTTP request is received on a host in this list a 301 redirect will be sent telling the client to use HTTPS\",\n       \"items\": {\n        \"type\": \"string\"\n       },\n       \"type\": \"array\"\n      },\n      \"tlsMaximumProtocolVersion\": {\n       \"description\": \"Maximum TLS protocol version. By default, it’s TLSv1_2 for clients and TLSv1_3 for servers.\",\n       \"type\": \"string\"\n      },\n      \"tlsMinimumProtocolVersion\": {\n       \"description\": \"Minimum TLS protocol version. By default, it’s TLSv1_2 for clients and TLSv1_0 for servers.\",\n       \"type\": \"string\"\n      },\n      \"tlsSecrets\": {\n       \"description\": \"SecretName and Namespace combinations for locating TLS secrets containing TLS certificates You can specify more than one For more information on how certificate selection works see: https://www.envoyproxy.io/docs/envoy/latest/intro/arch_overview/security/ssl#certificate-selection\",\n       \"items\": {\n        \"properties\": {\n         \"namespace\": {\n          \"description\": \"Namespace where the Kubernetes certificate resides\",\n          \"type\": \"string\"\n         },\n         \"secretRef\": {\n          \"description\": \"Name of the Kubernetes secret containing the TLS certificate\",\n          \"type\": \"string\"\n         }\n        },\n        \"required\": [\n         \"namespace\",\n         \"secretRef\"\n        ],\n        \"type\": \"object\"\n       },\n       \"type\": \"array\"\n      }\n     },\n     \"required\": [\n      \"tlsSecrets\"\n     ],\n     \"type\": \"object\"\n    },\n    \"tolerations\": {\n     \"description\": \"Tolerations allow pod to be scheduled to the nodes that has specific toleration labels, optional\",\n     \"items\": {\n      \"description\": \"The pod this Toleration is attached to tolerates any taint that matches the triple \\u003ckey,value,effect\\u003e using the matching operator \\u003coperator\\u003e.\",\n      \"properties\": {\n       \"effect\": {\n        \"description\": \"Effect indicates the taint effect to match. Empty means match all taint effects. When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.\",\n        \"type\": \"string\"\n       },\n       \"key\": {\n        \"description\": \"Key is the taint key that the toleration applies to. Empty means match all taint keys. If the key is empty, operator must be Exists; this combination means to match all values and all keys.\",\n        \"type\": \"string\"\n       },\n       \"operator\": {\n        \"description\": \"Operator represents a key's relationship to the value. Valid operators are Exists and Equal. Defaults to Equal. Exists is equivalent to wildcard for value, so that a pod can tolerate all taints of a particular category.\",\n        \"type\": \"string\"\n       },\n       \"tolerationSeconds\": {\n        \"description\": \"TolerationSeconds represents the period of time the toleration (which must be of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default, it is not set, which means tolerate the taint forever (do not evict). Zero and negative values will be treated as 0 (evict immediately) by the system.\",\n        \"format\": \"int64\",\n        \"type\": \"integer\"\n       },\n       \"value\": {\n        \"description\": \"Value is the taint value the toleration matches to. If the operator is Exists, the value should be empty, otherwise just a regular string.\",\n        \"type\": \"string\"\n       }\n      },\n      \"type\": \"object\"\n     },\n     \"type\": \"array\"\n    }\n   },\n   \"required\": [\n    \"service\"\n   ],\n   \"type\": \"object\"\n  }\n },\n \"required\": [\n  \"spec\"\n ],\n \"title\": \"Envoy Fleet\",\n \"type\": \"object\"\n}"}