{
  "id": "00000000-0000-0000-0000-000000000000",
  "kind": "Service",
  "apiVersion": "ecs.services.k8s.aws/v1alpha1",
  "displayName": "Service",
  "format": "JSON",
  "hostID": "00000000-0000-0000-0000-000000000000",
  "metadata": {
   "capabilities": "",
   "defaultData": "",
   "genealogy": "",
   "isAnnotation": false,
   "isNamespaced": true,
   "primaryColor": "#ED7100",
   "published": false,
   "secondaryColor": "",
   "shape": "rectangle",
   "shapePolygonPoints": "",
   "styleOverrides": "",
   "styles": "",
   "subCategory": "",
   "svgColor": "\u003csvg width=\"64px\" height=\"64px\" viewBox=\"0 0 64 64\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"\u003e\n    \u003ctitle\u003eIcon-Architecture/48/Arch_Amazon-Elastic-Container-Service_48\u003c/title\u003e\n    \u003cg id=\"Icon-Architecture/48/Arch_Amazon-Elastic-Container-Service_48\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\"\u003e\n        \u003cg id=\"Icon-Architecture-BG/48/Compute\" fill=\"#ED7100\"\u003e\n            \u003crect id=\"Rectangle\" x=\"0\" y=\"0\" width=\"64\" height=\"64\"\u003e\u003c/rect\u003e\n        \u003c/g\u003e\n        \u003cpath d=\"M50,36.3822466 L44,33.3822885 L44,25.0004058 C44,24.6374109 43.803,24.3024156 43.485,24.1264181 L35,19.412484 L35,12.7495773 L50,21.5724538 L50,36.3822466 Z M51.507,20.1384739 L34.507,10.1386138 C34.199,9.95761637 33.815,9.95461641 33.504,10.1326139 C33.192,10.3106114 33,10.6416068 33,11.0006018 L33,20.0004758 C33,20.3634707 33.197,20.6984661 33.515,20.8744636 L42,25.5883976 L42,34.0002799 C42,34.3792746 42.214,34.7252697 42.553,34.8952674 L50.553,38.8952114 C50.694,38.9652104 50.847,39.0002099 51,39.0002099 C51.183,39.0002099 51.365,38.9502106 51.525,38.851212 C51.82,38.6682146 52,38.3472191 52,38.0002239 L52,21.0004618 C52,20.6464668 51.812,20.3184714 51.507,20.1384739 L51.507,20.1384739 Z M32,51.8280304 L15,41.4391758 L15,21.5544541 L29,12.8045765 L29,19.4464836 L21.47,24.1524177 C21.178,24.3354152 21,24.6554107 21,25.0004058 L21,38.0002239 C21,38.351219 21.185,38.6772144 21.485,38.8572119 L31.485,44.857128 C31.789,45.0401254 32.167,45.0481253 32.479,44.8781277 L42.988,39.1462079 L48.035,42.0291675 L32,51.8280304 Z M50.496,41.1321801 L43.496,37.1322361 C43.194,36.9592385 42.825,36.9562385 42.521,37.1222362 L32.023,42.8481561 L23,37.4342318 L23,25.5543981 L30.53,20.848464 C30.822,20.6654665 31,20.345471 31,20.0004758 L31,11.0006018 C31,10.6366069 30.803,10.3026115 30.484,10.125614 C30.168,9.9486165 29.778,9.95961634 29.47,10.1526136 L13.47,20.1524737 C13.178,20.3354711 13,20.6554667 13,21.0004618 L13,42.0001679 C13,42.3481631 13.182,42.6711585 13.479,42.854156 L31.479,53.854002 C31.639,53.9510007 31.819,54 32,54 C32.181,54 32.361,53.9510007 32.521,53.854002 L50.521,42.854156 C50.823,42.6691586 51.005,42.3391632 51.0001004,41.9851681 C50.995,41.6321731 50.803,41.3071776 50.496,41.1321801 L50.496,41.1321801 Z\" id=\"Amazon-Elastic-Container-Service_Icon_48_Squid\" fill=\"#FFFFFF\"\u003e\u003c/path\u003e\n    \u003c/g\u003e\n\u003c/svg\u003e",
   "svgComplete": "",
   "svgWhite": "\u003csvg width=\"64px\" height=\"64px\" viewBox=\"0 0 64 64\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"\u003e\n    \u003ctitle\u003eIcon-Architecture/48/Arch_Amazon-Elastic-Container-Service_48\u003c/title\u003e\n    \u003cg id=\"Icon-Architecture/48/Arch_Amazon-Elastic-Container-Service_48\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\"\u003e\n        \u003cg id=\"Icon-Architecture-BG/48/Compute\" fill=\"#ED7100\"\u003e\n            \u003crect id=\"Rectangle\" x=\"0\" y=\"0\" width=\"64\" height=\"64\"\u003e\u003c/rect\u003e\n        \u003c/g\u003e\n        \u003cpath d=\"M50,36.3822466 L44,33.3822885 L44,25.0004058 C44,24.6374109 43.803,24.3024156 43.485,24.1264181 L35,19.412484 L35,12.7495773 L50,21.5724538 L50,36.3822466 Z M51.507,20.1384739 L34.507,10.1386138 C34.199,9.95761637 33.815,9.95461641 33.504,10.1326139 C33.192,10.3106114 33,10.6416068 33,11.0006018 L33,20.0004758 C33,20.3634707 33.197,20.6984661 33.515,20.8744636 L42,25.5883976 L42,34.0002799 C42,34.3792746 42.214,34.7252697 42.553,34.8952674 L50.553,38.8952114 C50.694,38.9652104 50.847,39.0002099 51,39.0002099 C51.183,39.0002099 51.365,38.9502106 51.525,38.851212 C51.82,38.6682146 52,38.3472191 52,38.0002239 L52,21.0004618 C52,20.6464668 51.812,20.3184714 51.507,20.1384739 L51.507,20.1384739 Z M32,51.8280304 L15,41.4391758 L15,21.5544541 L29,12.8045765 L29,19.4464836 L21.47,24.1524177 C21.178,24.3354152 21,24.6554107 21,25.0004058 L21,38.0002239 C21,38.351219 21.185,38.6772144 21.485,38.8572119 L31.485,44.857128 C31.789,45.0401254 32.167,45.0481253 32.479,44.8781277 L42.988,39.1462079 L48.035,42.0291675 L32,51.8280304 Z M50.496,41.1321801 L43.496,37.1322361 C43.194,36.9592385 42.825,36.9562385 42.521,37.1222362 L32.023,42.8481561 L23,37.4342318 L23,25.5543981 L30.53,20.848464 C30.822,20.6654665 31,20.345471 31,20.0004758 L31,11.0006018 C31,10.6366069 30.803,10.3026115 30.484,10.125614 C30.168,9.9486165 29.778,9.95961634 29.47,10.1526136 L13.47,20.1524737 C13.178,20.3354711 13,20.6554667 13,21.0004618 L13,42.0001679 C13,42.3481631 13.182,42.6711585 13.479,42.854156 L31.479,53.854002 C31.639,53.9510007 31.819,54 32,54 C32.181,54 32.361,53.9510007 32.521,53.854002 L50.521,42.854156 C50.823,42.6691586 51.005,42.3391632 51.0001004,41.9851681 C50.995,41.6321731 50.803,41.3071776 50.496,41.1321801 L50.496,41.1321801 Z\" id=\"Amazon-Elastic-Container-Service_Icon_48_Squid\" fill=\"#FFFFFF\"\u003e\u003c/path\u003e\n    \u003c/g\u003e\n\u003c/svg\u003e"
  },
  "model": {
   "id": "00000000-0000-0000-0000-000000000000",
   "name": "aws-ecs-controller",
   "version": "v0.0.4",
   "displayName": "AWS Elastic Container Service",
   "status": "",
   "hostID": "00000000-0000-0000-0000-000000000000",
   "category": {
    "name": "Provisioning",
    "metadata": null
   },
   "metadata": {
    "isAnnotation": false,
    "published": false,
    "subCategory": "Automation \u0026 Configuration",
    "svgColor": "\u003c?xml version=\"1.0\" encoding=\"UTF-8\"?\u003e\u003c!DOCTYPE svg\u003e\u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 64 64\" version=\"1.1\" xmlns:_xmlns=\"xmlns\" _xmlns:xlink=\"http://www.w3.org/1999/xlink\"\u003e\n    \u003ctitle xmlns=\"http://www.w3.org/2000/svg\"\u003eIcon-Architecture/48/Arch_Amazon-Elastic-Container-Service_48\u003c/title\u003e\n    \u003cg xmlns=\"http://www.w3.org/2000/svg\" id=\"Icon-Architecture/48/Arch_Amazon-Elastic-Container-Service_48\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\"\u003e\n        \u003cg xmlns=\"http://www.w3.org/2000/svg\" id=\"Icon-Architecture-BG/48/Compute\" fill=\"#ED7100\"\u003e\n            \u003crect xmlns=\"http://www.w3.org/2000/svg\" id=\"Rectangle\" x=\"0\" y=\"0\" width=\"64\" height=\"64\"\u003e\u003c/rect\u003e\n        \u003c/g\u003e\n        \u003cpath xmlns=\"http://www.w3.org/2000/svg\" d=\"M50,36.3822466 L44,33.3822885 L44,25.0004058 C44,24.6374109 43.803,24.3024156 43.485,24.1264181 L35,19.412484 L35,12.7495773 L50,21.5724538 L50,36.3822466 Z M51.507,20.1384739 L34.507,10.1386138 C34.199,9.95761637 33.815,9.95461641 33.504,10.1326139 C33.192,10.3106114 33,10.6416068 33,11.0006018 L33,20.0004758 C33,20.3634707 33.197,20.6984661 33.515,20.8744636 L42,25.5883976 L42,34.0002799 C42,34.3792746 42.214,34.7252697 42.553,34.8952674 L50.553,38.8952114 C50.694,38.9652104 50.847,39.0002099 51,39.0002099 C51.183,39.0002099 51.365,38.9502106 51.525,38.851212 C51.82,38.6682146 52,38.3472191 52,38.0002239 L52,21.0004618 C52,20.6464668 51.812,20.3184714 51.507,20.1384739 L51.507,20.1384739 Z M32,51.8280304 L15,41.4391758 L15,21.5544541 L29,12.8045765 L29,19.4464836 L21.47,24.1524177 C21.178,24.3354152 21,24.6554107 21,25.0004058 L21,38.0002239 C21,38.351219 21.185,38.6772144 21.485,38.8572119 L31.485,44.857128 C31.789,45.0401254 32.167,45.0481253 32.479,44.8781277 L42.988,39.1462079 L48.035,42.0291675 L32,51.8280304 Z M50.496,41.1321801 L43.496,37.1322361 C43.194,36.9592385 42.825,36.9562385 42.521,37.1222362 L32.023,42.8481561 L23,37.4342318 L23,25.5543981 L30.53,20.848464 C30.822,20.6654665 31,20.345471 31,20.0004758 L31,11.0006018 C31,10.6366069 30.803,10.3026115 30.484,10.125614 C30.168,9.9486165 29.778,9.95961634 29.47,10.1526136 L13.47,20.1524737 C13.178,20.3354711 13,20.6554667 13,21.0004618 L13,42.0001679 C13,42.3481631 13.182,42.6711585 13.479,42.854156 L31.479,53.854002 C31.639,53.9510007 31.819,54 32,54 C32.181,54 32.361,53.9510007 32.521,53.854002 L50.521,42.854156 C50.823,42.6691586 51.005,42.3391632 51.0001004,41.9851681 C50.995,41.6321731 50.803,41.3071776 50.496,41.1321801 L50.496,41.1321801 Z\" id=\"Amazon-Elastic-Container-Service_Icon_48_Squid\" fill=\"#FFFFFF\"\u003e\u003c/path\u003e\n    \u003c/g\u003e\n\u003c/svg\u003e",
    "svgComplete": "",
    "svgWhite": "\u003c?xml version=\"1.0\" encoding=\"UTF-8\"?\u003e\u003c!DOCTYPE svg\u003e\u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 64 64\" version=\"1.1\" xmlns:_xmlns=\"xmlns\" _xmlns:xlink=\"http://www.w3.org/1999/xlink\"\u003e\n    \u003ctitle xmlns=\"http://www.w3.org/2000/svg\"\u003eIcon-Architecture/48/Arch_Amazon-Elastic-Container-Service_48\u003c/title\u003e\n    \u003cg xmlns=\"http://www.w3.org/2000/svg\" id=\"Icon-Architecture/48/Arch_Amazon-Elastic-Container-Service_48\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\"\u003e\n        \u003cg xmlns=\"http://www.w3.org/2000/svg\" id=\"Icon-Architecture-BG/48/Compute\" fill=\"#ED7100\"\u003e\n            \u003crect xmlns=\"http://www.w3.org/2000/svg\" id=\"Rectangle\" x=\"0\" y=\"0\" width=\"64\" height=\"64\"\u003e\u003c/rect\u003e\n        \u003c/g\u003e\n        \u003cpath xmlns=\"http://www.w3.org/2000/svg\" d=\"M50,36.3822466 L44,33.3822885 L44,25.0004058 C44,24.6374109 43.803,24.3024156 43.485,24.1264181 L35,19.412484 L35,12.7495773 L50,21.5724538 L50,36.3822466 Z M51.507,20.1384739 L34.507,10.1386138 C34.199,9.95761637 33.815,9.95461641 33.504,10.1326139 C33.192,10.3106114 33,10.6416068 33,11.0006018 L33,20.0004758 C33,20.3634707 33.197,20.6984661 33.515,20.8744636 L42,25.5883976 L42,34.0002799 C42,34.3792746 42.214,34.7252697 42.553,34.8952674 L50.553,38.8952114 C50.694,38.9652104 50.847,39.0002099 51,39.0002099 C51.183,39.0002099 51.365,38.9502106 51.525,38.851212 C51.82,38.6682146 52,38.3472191 52,38.0002239 L52,21.0004618 C52,20.6464668 51.812,20.3184714 51.507,20.1384739 L51.507,20.1384739 Z M32,51.8280304 L15,41.4391758 L15,21.5544541 L29,12.8045765 L29,19.4464836 L21.47,24.1524177 C21.178,24.3354152 21,24.6554107 21,25.0004058 L21,38.0002239 C21,38.351219 21.185,38.6772144 21.485,38.8572119 L31.485,44.857128 C31.789,45.0401254 32.167,45.0481253 32.479,44.8781277 L42.988,39.1462079 L48.035,42.0291675 L32,51.8280304 Z M50.496,41.1321801 L43.496,37.1322361 C43.194,36.9592385 42.825,36.9562385 42.521,37.1222362 L32.023,42.8481561 L23,37.4342318 L23,25.5543981 L30.53,20.848464 C30.822,20.6654665 31,20.345471 31,20.0004758 L31,11.0006018 C31,10.6366069 30.803,10.3026115 30.484,10.125614 C30.168,9.9486165 29.778,9.95961634 29.47,10.1526136 L13.47,20.1524737 C13.178,20.3354711 13,20.6554667 13,21.0004618 L13,42.0001679 C13,42.3481631 13.182,42.6711585 13.479,42.854156 L31.479,53.854002 C31.639,53.9510007 31.819,54 32,54 C32.181,54 32.361,53.9510007 32.521,53.854002 L50.521,42.854156 C50.823,42.6691586 51.005,42.3391632 51.0001004,41.9851681 C50.995,41.6321731 50.803,41.3071776 50.496,41.1321801 L50.496,41.1321801 Z\" id=\"Amazon-Elastic-Container-Service_Icon_48_Squid\" fill=\"#FFFFFF\"\u003e\u003c/path\u003e\n    \u003c/g\u003e\n\u003c/svg\u003e"
   },
   "components": null,
   "relationships": null
  },
  "schema": "{\n \"description\": \"Service is the Schema for the Services API\",\n \"properties\": {\n  \"spec\": {\n   \"description\": \"ServiceSpec defines the desired state of Service.\\n\\n\\nDetails on a service within a cluster.\",\n   \"properties\": {\n    \"capacityProviderStrategy\": {\n     \"description\": \"The capacity provider strategy to use for the service.\\n\\n\\nIf a capacityProviderStrategy is specified, the launchType parameter must\\nbe omitted. If no capacityProviderStrategy or launchType is specified, the\\ndefaultCapacityProviderStrategy for the cluster is used.\\n\\n\\nA capacity provider strategy may contain a maximum of 6 capacity providers.\",\n     \"items\": {\n      \"description\": \"The details of a capacity provider strategy. A capacity provider strategy\\ncan be set when using the RunTask or CreateCluster APIs or as the default\\ncapacity provider strategy for a cluster with the CreateCluster API.\\n\\n\\nOnly capacity providers that are already associated with a cluster and have\\nan ACTIVE or UPDATING status can be used in a capacity provider strategy.\\nThe PutClusterCapacityProviders API is used to associate a capacity provider\\nwith a cluster.\\n\\n\\nIf specifying a capacity provider that uses an Auto Scaling group, the capacity\\nprovider must already be created. New Auto Scaling group capacity providers\\ncan be created with the CreateCapacityProvider API operation.\\n\\n\\nTo use a Fargate capacity provider, specify either the FARGATE or FARGATE_SPOT\\ncapacity providers. The Fargate capacity providers are available to all accounts\\nand only need to be associated with a cluster to be used in a capacity provider\\nstrategy.\\n\\n\\nA capacity provider strategy may contain a maximum of 6 capacity providers.\",\n      \"properties\": {\n       \"base\": {\n        \"format\": \"int64\",\n        \"type\": \"integer\"\n       },\n       \"capacityProvider\": {\n        \"type\": \"string\"\n       },\n       \"weight\": {\n        \"format\": \"int64\",\n        \"type\": \"integer\"\n       }\n      },\n      \"type\": \"object\"\n     },\n     \"type\": \"array\"\n    },\n    \"cluster\": {\n     \"description\": \"The short name or full Amazon Resource Name (ARN) of the cluster that you\\nrun your service on. If you do not specify a cluster, the default cluster\\nis assumed.\",\n     \"type\": \"string\"\n    },\n    \"clusterRef\": {\n     \"description\": \"AWSResourceReferenceWrapper provides a wrapper around *AWSResourceReference\\ntype to provide more user friendly syntax for references using 'from' field\\nEx:\\nAPIIDRef:\\n\\n\\n\\tfrom:\\n\\t  name: my-api\",\n     \"properties\": {\n      \"from\": {\n       \"description\": \"AWSResourceReference provides all the values necessary to reference another\\nk8s resource for finding the identifier(Id/ARN/Name)\",\n       \"properties\": {\n        \"name\": {\n         \"type\": \"string\"\n        }\n       },\n       \"type\": \"object\"\n      }\n     },\n     \"type\": \"object\"\n    },\n    \"deploymentConfiguration\": {\n     \"description\": \"Optional deployment parameters that control how many tasks run during the\\ndeployment and the ordering of stopping and starting tasks.\",\n     \"properties\": {\n      \"alarms\": {\n       \"description\": \"One of the methods which provide a way for you to quickly identify when a\\ndeployment has failed, and then to optionally roll back the failure to the\\nlast working deployment.\\n\\n\\nWhen the alarms are generated, Amazon ECS sets the service deployment to\\nfailed. Set the rollback parameter to have Amazon ECS to roll back your service\\nto the last completed deployment after a failure.\\n\\n\\nYou can only use the DeploymentAlarms method to detect failures when the\\nDeploymentController is set to ECS (rolling update).\\n\\n\\nFor more information, see Rolling update (https://docs.aws.amazon.com/AmazonECS/latest/developerguide/deployment-type-ecs.html)\\nin the Amazon Elastic Container Service Developer Guide .\",\n       \"properties\": {\n        \"alarmNames\": {\n         \"items\": {\n          \"type\": \"string\"\n         },\n         \"type\": \"array\"\n        },\n        \"enable\": {\n         \"type\": \"boolean\"\n        },\n        \"rollback\": {\n         \"type\": \"boolean\"\n        }\n       },\n       \"type\": \"object\"\n      },\n      \"deploymentCircuitBreaker\": {\n       \"description\": \"The deployment circuit breaker can only be used for services using the rolling\\nupdate (ECS) deployment type.\\n\\n\\nThe deployment circuit breaker determines whether a service deployment will\\nfail if the service can't reach a steady state. If it is turned on, a service\\ndeployment will transition to a failed state and stop launching new tasks.\\nYou can also configure Amazon ECS to roll back your service to the last completed\\ndeployment after a failure. For more information, see Rolling update (https://docs.aws.amazon.com/AmazonECS/latest/developerguide/deployment-type-ecs.html)\\nin the Amazon Elastic Container Service Developer Guide.\\n\\n\\nFor more information about API failure reasons, see API failure reasons (https://docs.aws.amazon.com/AmazonECS/latest/developerguide/api_failures_messages.html)\\nin the Amazon Elastic Container Service Developer Guide.\",\n       \"properties\": {\n        \"enable\": {\n         \"type\": \"boolean\"\n        },\n        \"rollback\": {\n         \"type\": \"boolean\"\n        }\n       },\n       \"type\": \"object\"\n      },\n      \"maximumPercent\": {\n       \"format\": \"int64\",\n       \"type\": \"integer\"\n      },\n      \"minimumHealthyPercent\": {\n       \"format\": \"int64\",\n       \"type\": \"integer\"\n      }\n     },\n     \"type\": \"object\"\n    },\n    \"deploymentController\": {\n     \"description\": \"The deployment controller to use for the service. If no deployment controller\\nis specified, the default value of ECS is used.\",\n     \"properties\": {\n      \"type\": {\n       \"type\": \"string\"\n      }\n     },\n     \"type\": \"object\"\n    },\n    \"desiredCount\": {\n     \"description\": \"The number of instantiations of the specified task definition to place and\\nkeep running in your service.\\n\\n\\nThis is required if schedulingStrategy is REPLICA or isn't specified. If\\nschedulingStrategy is DAEMON then this isn't required.\",\n     \"format\": \"int64\",\n     \"type\": \"integer\"\n    },\n    \"enableECSManagedTags\": {\n     \"description\": \"Specifies whether to turn on Amazon ECS managed tags for the tasks within\\nthe service. For more information, see Tagging your Amazon ECS resources\\n(https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-using-tags.html)\\nin the Amazon Elastic Container Service Developer Guide.\\n\\n\\nWhen you use Amazon ECS managed tags, you need to set the propagateTags request\\nparameter.\",\n     \"type\": \"boolean\"\n    },\n    \"enableExecuteCommand\": {\n     \"description\": \"Determines whether the execute command functionality is turned on for the\\nservice. If true, this enables execute command functionality on all containers\\nin the service tasks.\",\n     \"type\": \"boolean\"\n    },\n    \"healthCheckGracePeriodSeconds\": {\n     \"description\": \"The period of time, in seconds, that the Amazon ECS service scheduler ignores\\nunhealthy Elastic Load Balancing target health checks after a task has first\\nstarted. This is only used when your service is configured to use a load\\nbalancer. If your service has a load balancer defined and you don't specify\\na health check grace period value, the default value of 0 is used.\\n\\n\\nIf you do not use an Elastic Load Balancing, we recommend that you use the\\nstartPeriod in the task definition health check parameters. For more information,\\nsee Health check (https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_HealthCheck.html).\\n\\n\\nIf your service's tasks take a while to start and respond to Elastic Load\\nBalancing health checks, you can specify a health check grace period of up\\nto 2,147,483,647 seconds (about 69 years). During that time, the Amazon ECS\\nservice scheduler ignores health check status. This grace period can prevent\\nthe service scheduler from marking tasks as unhealthy and stopping them before\\nthey have time to come up.\",\n     \"format\": \"int64\",\n     \"type\": \"integer\"\n    },\n    \"launchType\": {\n     \"description\": \"The infrastructure that you run your service on. For more information, see\\nAmazon ECS launch types (https://docs.aws.amazon.com/AmazonECS/latest/developerguide/launch_types.html)\\nin the Amazon Elastic Container Service Developer Guide.\\n\\n\\nThe FARGATE launch type runs your tasks on Fargate On-Demand infrastructure.\\n\\n\\nFargate Spot infrastructure is available for use but a capacity provider\\nstrategy must be used. For more information, see Fargate capacity providers\\n(https://docs.aws.amazon.com/AmazonECS/latest/developerguide/fargate-capacity-providers.html)\\nin the Amazon ECS User Guide for Fargate.\\n\\n\\nThe EC2 launch type runs your tasks on Amazon EC2 instances registered to\\nyour cluster.\\n\\n\\nThe EXTERNAL launch type runs your tasks on your on-premises server or virtual\\nmachine (VM) capacity registered to your cluster.\\n\\n\\nA service can use either a launch type or a capacity provider strategy. If\\na launchType is specified, the capacityProviderStrategy parameter must be\\nomitted.\",\n     \"type\": \"string\"\n    },\n    \"loadBalancers\": {\n     \"description\": \"A load balancer object representing the load balancers to use with your service.\\nFor more information, see Service load balancing (https://docs.aws.amazon.com/AmazonECS/latest/developerguide/service-load-balancing.html)\\nin the Amazon Elastic Container Service Developer Guide.\\n\\n\\nIf the service uses the rolling update (ECS) deployment controller and using\\neither an Application Load Balancer or Network Load Balancer, you must specify\\none or more target group ARNs to attach to the service. The service-linked\\nrole is required for services that use multiple target groups. For more information,\\nsee Using service-linked roles for Amazon ECS (https://docs.aws.amazon.com/AmazonECS/latest/developerguide/using-service-linked-roles.html)\\nin the Amazon Elastic Container Service Developer Guide.\\n\\n\\nIf the service uses the CODE_DEPLOY deployment controller, the service is\\nrequired to use either an Application Load Balancer or Network Load Balancer.\\nWhen creating an CodeDeploy deployment group, you specify two target groups\\n(referred to as a targetGroupPair). During a deployment, CodeDeploy determines\\nwhich task set in your service has the status PRIMARY, and it associates\\none target group with it. Then, it also associates the other target group\\nwith the replacement task set. The load balancer can also have up to two\\nlisteners: a required listener for production traffic and an optional listener\\nthat you can use to perform validation tests with Lambda functions before\\nrouting production traffic to it.\\n\\n\\nIf you use the CODE_DEPLOY deployment controller, these values can be changed\\nwhen updating the service.\\n\\n\\nFor Application Load Balancers and Network Load Balancers, this object must\\ncontain the load balancer target group ARN, the container name, and the container\\nport to access from the load balancer. The container name must be as it appears\\nin a container definition. The load balancer name parameter must be omitted.\\nWhen a task from this service is placed on a container instance, the container\\ninstance and port combination is registered as a target in the target group\\nthat's specified here.\\n\\n\\nFor Classic Load Balancers, this object must contain the load balancer name,\\nthe container name , and the container port to access from the load balancer.\\nThe container name must be as it appears in a container definition. The target\\ngroup ARN parameter must be omitted. When a task from this service is placed\\non a container instance, the container instance is registered with the load\\nbalancer that's specified here.\\n\\n\\nServices with tasks that use the awsvpc network mode (for example, those\\nwith the Fargate launch type) only support Application Load Balancers and\\nNetwork Load Balancers. Classic Load Balancers aren't supported. Also, when\\nyou create any target groups for these services, you must choose ip as the\\ntarget type, not instance. This is because tasks that use the awsvpc network\\nmode are associated with an elastic network interface, not an Amazon EC2\\ninstance.\",\n     \"items\": {\n      \"description\": \"The load balancer configuration to use with a service or task set.\\n\\n\\nWhen you add, update, or remove a load balancer configuration, Amazon ECS\\nstarts a new deployment with the updated Elastic Load Balancing configuration.\\nThis causes tasks to register to and deregister from load balancers.\\n\\n\\nWe recommend that you verify this on a test environment before you update\\nthe Elastic Load Balancing configuration.\\n\\n\\nA service-linked role is required for services that use multiple target groups.\\nFor more information, see Using service-linked roles (https://docs.aws.amazon.com/AmazonECS/latest/developerguide/using-service-linked-roles.html)\\nin the Amazon Elastic Container Service Developer Guide.\",\n      \"properties\": {\n       \"containerName\": {\n        \"type\": \"string\"\n       },\n       \"containerPort\": {\n        \"format\": \"int64\",\n        \"type\": \"integer\"\n       },\n       \"loadBalancerName\": {\n        \"type\": \"string\"\n       },\n       \"targetGroupARN\": {\n        \"type\": \"string\"\n       }\n      },\n      \"type\": \"object\"\n     },\n     \"type\": \"array\"\n    },\n    \"name\": {\n     \"description\": \"The name of your service. Up to 255 letters (uppercase and lowercase), numbers,\\nunderscores, and hyphens are allowed. Service names must be unique within\\na cluster, but you can have similarly named services in multiple clusters\\nwithin a Region or across multiple Regions.\",\n     \"type\": \"string\"\n    },\n    \"networkConfiguration\": {\n     \"description\": \"The network configuration for the service. This parameter is required for\\ntask definitions that use the awsvpc network mode to receive their own elastic\\nnetwork interface, and it isn't supported for other network modes. For more\\ninformation, see Task networking (https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task-networking.html)\\nin the Amazon Elastic Container Service Developer Guide.\",\n     \"properties\": {\n      \"awsVPCConfiguration\": {\n       \"description\": \"An object representing the networking details for a task or service. For\\nexample awsvpcConfiguration={subnets=[\\\"subnet-12344321\\\"],securityGroups=[\\\"sg-12344321\\\"]}\",\n       \"properties\": {\n        \"assignPublicIP\": {\n         \"type\": \"string\"\n        },\n        \"securityGroups\": {\n         \"items\": {\n          \"type\": \"string\"\n         },\n         \"type\": \"array\"\n        },\n        \"subnets\": {\n         \"items\": {\n          \"type\": \"string\"\n         },\n         \"type\": \"array\"\n        }\n       },\n       \"type\": \"object\"\n      }\n     },\n     \"type\": \"object\"\n    },\n    \"placementConstraints\": {\n     \"description\": \"An array of placement constraint objects to use for tasks in your service.\\nYou can specify a maximum of 10 constraints for each task. This limit includes\\nconstraints in the task definition and those specified at runtime.\",\n     \"items\": {\n      \"description\": \"An object representing a constraint on task placement. For more information,\\nsee Task placement constraints (https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task-placement-constraints.html)\\nin the Amazon Elastic Container Service Developer Guide.\\n\\n\\nIf you're using the Fargate launch type, task placement constraints aren't\\nsupported.\",\n      \"properties\": {\n       \"expression\": {\n        \"type\": \"string\"\n       },\n       \"type\": {\n        \"type\": \"string\"\n       }\n      },\n      \"type\": \"object\"\n     },\n     \"type\": \"array\"\n    },\n    \"placementStrategy\": {\n     \"description\": \"The placement strategy objects to use for tasks in your service. You can\\nspecify a maximum of 5 strategy rules for each service.\",\n     \"items\": {\n      \"description\": \"The task placement strategy for a task or service. For more information,\\nsee Task placement strategies (https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task-placement-strategies.html)\\nin the Amazon Elastic Container Service Developer Guide.\",\n      \"properties\": {\n       \"field\": {\n        \"type\": \"string\"\n       },\n       \"type\": {\n        \"type\": \"string\"\n       }\n      },\n      \"type\": \"object\"\n     },\n     \"type\": \"array\"\n    },\n    \"platformVersion\": {\n     \"description\": \"The platform version that your tasks in the service are running on. A platform\\nversion is specified only for tasks using the Fargate launch type. If one\\nisn't specified, the LATEST platform version is used. For more information,\\nsee Fargate platform versions (https://docs.aws.amazon.com/AmazonECS/latest/developerguide/platform_versions.html)\\nin the Amazon Elastic Container Service Developer Guide.\",\n     \"type\": \"string\"\n    },\n    \"propagateTags\": {\n     \"description\": \"Specifies whether to propagate the tags from the task definition to the task.\\nIf no value is specified, the tags aren't propagated. Tags can only be propagated\\nto the task during task creation. To add tags to a task after task creation,\\nuse the TagResource (https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_TagResource.html)\\nAPI action.\\n\\n\\nThe default is NONE.\",\n     \"type\": \"string\"\n    },\n    \"role\": {\n     \"description\": \"The name or full Amazon Resource Name (ARN) of the IAM role that allows Amazon\\nECS to make calls to your load balancer on your behalf. This parameter is\\nonly permitted if you are using a load balancer with your service and your\\ntask definition doesn't use the awsvpc network mode. If you specify the role\\nparameter, you must also specify a load balancer object with the loadBalancers\\nparameter.\\n\\n\\nIf your account has already created the Amazon ECS service-linked role, that\\nrole is used for your service unless you specify a role here. The service-linked\\nrole is required if your task definition uses the awsvpc network mode or\\nif the service is configured to use service discovery, an external deployment\\ncontroller, multiple target groups, or Elastic Inference accelerators in\\nwhich case you don't specify a role here. For more information, see Using\\nservice-linked roles for Amazon ECS (https://docs.aws.amazon.com/AmazonECS/latest/developerguide/using-service-linked-roles.html)\\nin the Amazon Elastic Container Service Developer Guide.\\n\\n\\nIf your specified role has a path other than /, then you must either specify\\nthe full role ARN (this is recommended) or prefix the role name with the\\npath. For example, if a role with the name bar has a path of /foo/ then you\\nwould specify /foo/bar as the role name. For more information, see Friendly\\nnames and paths (https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_identifiers.html#identifiers-friendly-names)\\nin the IAM User Guide.\",\n     \"type\": \"string\"\n    },\n    \"roleRef\": {\n     \"description\": \"AWSResourceReferenceWrapper provides a wrapper around *AWSResourceReference\\ntype to provide more user friendly syntax for references using 'from' field\\nEx:\\nAPIIDRef:\\n\\n\\n\\tfrom:\\n\\t  name: my-api\",\n     \"properties\": {\n      \"from\": {\n       \"description\": \"AWSResourceReference provides all the values necessary to reference another\\nk8s resource for finding the identifier(Id/ARN/Name)\",\n       \"properties\": {\n        \"name\": {\n         \"type\": \"string\"\n        }\n       },\n       \"type\": \"object\"\n      }\n     },\n     \"type\": \"object\"\n    },\n    \"schedulingStrategy\": {\n     \"description\": \"The scheduling strategy to use for the service. For more information, see\\nServices (https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs_services.html).\\n\\n\\nThere are two service scheduler strategies available:\\n\\n\\n  - REPLICA-The replica scheduling strategy places and maintains the desired\\n    number of tasks across your cluster. By default, the service scheduler\\n    spreads tasks across Availability Zones. You can use task placement strategies\\n    and constraints to customize task placement decisions. This scheduler\\n    strategy is required if the service uses the CODE_DEPLOY or EXTERNAL deployment\\n    controller types.\\n\\n\\n  - DAEMON-The daemon scheduling strategy deploys exactly one task on each\\n    active container instance that meets all of the task placement constraints\\n    that you specify in your cluster. The service scheduler also evaluates\\n    the task placement constraints for running tasks and will stop tasks that\\n    don't meet the placement constraints. When you're using this strategy,\\n    you don't need to specify a desired number of tasks, a task placement\\n    strategy, or use Service Auto Scaling policies. Tasks using the Fargate\\n    launch type or the CODE_DEPLOY or EXTERNAL deployment controller types\\n    don't support the DAEMON scheduling strategy.\",\n     \"type\": \"string\"\n    },\n    \"serviceConnectConfiguration\": {\n     \"description\": \"The configuration for this service to discover and connect to services, and\\nbe discovered by, and connected from, other services within a namespace.\\n\\n\\nTasks that run in a namespace can use short names to connect to services\\nin the namespace. Tasks can connect to services across all of the clusters\\nin the namespace. Tasks connect through a managed proxy container that collects\\nlogs and metrics for increased visibility. Only the tasks that Amazon ECS\\nservices create are supported with Service Connect. For more information,\\nsee Service Connect (https://docs.aws.amazon.com/AmazonECS/latest/developerguide/service-connect.html)\\nin the Amazon Elastic Container Service Developer Guide.\",\n     \"properties\": {\n      \"enabled\": {\n       \"type\": \"boolean\"\n      },\n      \"logConfiguration\": {\n       \"description\": \"The log configuration for the container. This parameter maps to LogConfig\\nin the Create a container (https://docs.docker.com/engine/api/v1.35/#operation/ContainerCreate)\\nsection of the Docker Remote API (https://docs.docker.com/engine/api/v1.35/)\\nand the --log-driver option to docker run (https://docs.docker.com/engine/reference/commandline/run/).\\n\\n\\nBy default, containers use the same logging driver that the Docker daemon\\nuses. However, the container might use a different logging driver than the\\nDocker daemon by specifying a log driver configuration in the container definition.\\nFor more information about the options for different supported log drivers,\\nsee Configure logging drivers (https://docs.docker.com/engine/admin/logging/overview/)\\nin the Docker documentation.\\n\\n\\nUnderstand the following when specifying a log configuration for your containers.\\n\\n\\n   * Amazon ECS currently supports a subset of the logging drivers available\\n   to the Docker daemon. Additional log drivers may be available in future\\n   releases of the Amazon ECS container agent. For tasks on Fargate, the\\n   supported log drivers are awslogs, splunk, and awsfirelens. For tasks\\n   hosted on Amazon EC2 instances, the supported log drivers are awslogs,\\n   fluentd, gelf, json-file, journald, logentries,syslog, splunk, and awsfirelens.\\n\\n\\n   * This parameter requires version 1.18 of the Docker Remote API or greater\\n   on your container instance.\\n\\n\\n   * For tasks that are hosted on Amazon EC2 instances, the Amazon ECS container\\n   agent must register the available logging drivers with the ECS_AVAILABLE_LOGGING_DRIVERS\\n   environment variable before containers placed on that instance can use\\n   these log configuration options. For more information, see Amazon ECS\\n   container agent configuration (https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-agent-config.html)\\n   in the Amazon Elastic Container Service Developer Guide.\\n\\n\\n   * For tasks that are on Fargate, because you don't have access to the\\n   underlying infrastructure your tasks are hosted on, any additional software\\n   needed must be installed outside of the task. For example, the Fluentd\\n   output aggregators or a remote host running Logstash to send Gelf logs\\n   to.\",\n       \"properties\": {\n        \"logDriver\": {\n         \"type\": \"string\"\n        },\n        \"options\": {\n         \"additionalProperties\": {\n          \"type\": \"string\"\n         },\n         \"type\": \"object\"\n        },\n        \"secretOptions\": {\n         \"items\": {\n          \"description\": \"An object representing the secret to expose to your container. Secrets can\\nbe exposed to a container in the following ways:\\n\\n\\n  - To inject sensitive data into your containers as environment variables,\\n    use the secrets container definition parameter.\\n\\n\\n  - To reference sensitive information in the log configuration of a container,\\n    use the secretOptions container definition parameter.\\n\\n\\nFor more information, see Specifying sensitive data (https://docs.aws.amazon.com/AmazonECS/latest/developerguide/specifying-sensitive-data.html)\\nin the Amazon Elastic Container Service Developer Guide.\",\n          \"properties\": {\n           \"name\": {\n            \"type\": \"string\"\n           },\n           \"valueFrom\": {\n            \"type\": \"string\"\n           }\n          },\n          \"type\": \"object\"\n         },\n         \"type\": \"array\"\n        }\n       },\n       \"type\": \"object\"\n      },\n      \"namespace\": {\n       \"type\": \"string\"\n      },\n      \"services\": {\n       \"items\": {\n        \"description\": \"The Service Connect service object configuration. For more information, see\\nService Connect (https://docs.aws.amazon.com/AmazonECS/latest/developerguide/service-connect.html)\\nin the Amazon Elastic Container Service Developer Guide.\",\n        \"properties\": {\n         \"clientAliases\": {\n          \"items\": {\n           \"description\": \"Each alias (\\\"endpoint\\\") is a fully-qualified name and port number that other\\ntasks (\\\"clients\\\") can use to connect to this service.\\n\\n\\nEach name and port mapping must be unique within the namespace.\\n\\n\\nTasks that run in a namespace can use short names to connect to services\\nin the namespace. Tasks can connect to services across all of the clusters\\nin the namespace. Tasks connect through a managed proxy container that collects\\nlogs and metrics for increased visibility. Only the tasks that Amazon ECS\\nservices create are supported with Service Connect. For more information,\\nsee Service Connect (https://docs.aws.amazon.com/AmazonECS/latest/developerguide/service-connect.html)\\nin the Amazon Elastic Container Service Developer Guide.\",\n           \"properties\": {\n            \"dnsName\": {\n             \"type\": \"string\"\n            },\n            \"port\": {\n             \"format\": \"int64\",\n             \"type\": \"integer\"\n            }\n           },\n           \"type\": \"object\"\n          },\n          \"type\": \"array\"\n         },\n         \"discoveryName\": {\n          \"type\": \"string\"\n         },\n         \"ingressPortOverride\": {\n          \"format\": \"int64\",\n          \"type\": \"integer\"\n         },\n         \"portName\": {\n          \"type\": \"string\"\n         },\n         \"timeout\": {\n          \"description\": \"An object that represents the timeout configurations for Service Connect.\\n\\n\\nIf idleTimeout is set to a time that is less than perRequestTimeout, the\\nconnection will close when the idleTimeout is reached and not the perRequestTimeout.\",\n          \"properties\": {\n           \"idleTimeoutSeconds\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n           },\n           \"perRequestTimeoutSeconds\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n           }\n          },\n          \"type\": \"object\"\n         },\n         \"tls\": {\n          \"description\": \"An object that represents the configuration for Service Connect TLS.\",\n          \"properties\": {\n           \"issuerCertificateAuthority\": {\n            \"description\": \"An object that represents the Amazon Web Services Private Certificate Authority\\ncertificate.\",\n            \"properties\": {\n             \"awsPCAAuthorityARN\": {\n              \"type\": \"string\"\n             }\n            },\n            \"type\": \"object\"\n           },\n           \"kmsKey\": {\n            \"type\": \"string\"\n           },\n           \"roleARN\": {\n            \"type\": \"string\"\n           }\n          },\n          \"type\": \"object\"\n         }\n        },\n        \"type\": \"object\"\n       },\n       \"type\": \"array\"\n      }\n     },\n     \"type\": \"object\"\n    },\n    \"serviceRegistries\": {\n     \"description\": \"The details of the service discovery registry to associate with this service.\\nFor more information, see Service discovery (https://docs.aws.amazon.com/AmazonECS/latest/developerguide/service-discovery.html).\\n\\n\\nEach service may be associated with one service registry. Multiple service\\nregistries for each service isn't supported.\",\n     \"items\": {\n      \"description\": \"The details for the service registry.\\n\\n\\nEach service may be associated with one service registry. Multiple service\\nregistries for each service are not supported.\\n\\n\\nWhen you add, update, or remove the service registries configuration, Amazon\\nECS starts a new deployment. New tasks are registered and deregistered to\\nthe updated service registry configuration.\",\n      \"properties\": {\n       \"containerName\": {\n        \"type\": \"string\"\n       },\n       \"containerPort\": {\n        \"format\": \"int64\",\n        \"type\": \"integer\"\n       },\n       \"port\": {\n        \"format\": \"int64\",\n        \"type\": \"integer\"\n       },\n       \"registryARN\": {\n        \"type\": \"string\"\n       }\n      },\n      \"type\": \"object\"\n     },\n     \"type\": \"array\"\n    },\n    \"tags\": {\n     \"description\": \"The metadata that you apply to the service to help you categorize and organize\\nthem. Each tag consists of a key and an optional value, both of which you\\ndefine. When a service is deleted, the tags are deleted as well.\\n\\n\\nThe following basic restrictions apply to tags:\\n\\n\\n  - Maximum number of tags per resource - 50\\n\\n\\n  - For each resource, each tag key must be unique, and each tag key can\\n    have only one value.\\n\\n\\n  - Maximum key length - 128 Unicode characters in UTF-8\\n\\n\\n  - Maximum value length - 256 Unicode characters in UTF-8\\n\\n\\n  - If your tagging schema is used across multiple services and resources,\\n    remember that other services may have restrictions on allowed characters.\\n    Generally allowed characters are: letters, numbers, and spaces representable\\n    in UTF-8, and the following characters: + - = . _ : / @.\\n\\n\\n  - Tag keys and values are case-sensitive.\\n\\n\\n  - Do not use aws:, AWS:, or any upper or lowercase combination of such\\n    as a prefix for either keys or values as it is reserved for Amazon Web\\n    Services use. You cannot edit or delete tag keys or values with this prefix.\\n    Tags with this prefix do not count against your tags per resource limit.\",\n     \"items\": {\n      \"description\": \"The metadata that you apply to a resource to help you categorize and organize\\nthem. Each tag consists of a key and an optional value. You define them.\\n\\n\\nThe following basic restrictions apply to tags:\\n\\n\\n  - Maximum number of tags per resource - 50\\n\\n\\n  - For each resource, each tag key must be unique, and each tag key can\\n    have only one value.\\n\\n\\n  - Maximum key length - 128 Unicode characters in UTF-8\\n\\n\\n  - Maximum value length - 256 Unicode characters in UTF-8\\n\\n\\n  - If your tagging schema is used across multiple services and resources,\\n    remember that other services may have restrictions on allowed characters.\\n    Generally allowed characters are: letters, numbers, and spaces representable\\n    in UTF-8, and the following characters: + - = . _ : / @.\\n\\n\\n  - Tag keys and values are case-sensitive.\\n\\n\\n  - Do not use aws:, AWS:, or any upper or lowercase combination of such\\n    as a prefix for either keys or values as it is reserved for Amazon Web\\n    Services use. You cannot edit or delete tag keys or values with this prefix.\\n    Tags with this prefix do not count against your tags per resource limit.\",\n      \"properties\": {\n       \"key\": {\n        \"type\": \"string\"\n       },\n       \"value\": {\n        \"type\": \"string\"\n       }\n      },\n      \"type\": \"object\"\n     },\n     \"type\": \"array\"\n    },\n    \"taskDefinition\": {\n     \"description\": \"The family and revision (family:revision) or full ARN of the task definition\\nto run in your service. If a revision isn't specified, the latest ACTIVE\\nrevision is used.\\n\\n\\nA task definition must be specified if the service uses either the ECS or\\nCODE_DEPLOY deployment controllers.\\n\\n\\nFor more information about deployment types, see Amazon ECS deployment types\\n(https://docs.aws.amazon.com/AmazonECS/latest/developerguide/deployment-types.html).\",\n     \"type\": \"string\"\n    },\n    \"taskDefinitionRef\": {\n     \"description\": \"AWSResourceReferenceWrapper provides a wrapper around *AWSResourceReference\\ntype to provide more user friendly syntax for references using 'from' field\\nEx:\\nAPIIDRef:\\n\\n\\n\\tfrom:\\n\\t  name: my-api\",\n     \"properties\": {\n      \"from\": {\n       \"description\": \"AWSResourceReference provides all the values necessary to reference another\\nk8s resource for finding the identifier(Id/ARN/Name)\",\n       \"properties\": {\n        \"name\": {\n         \"type\": \"string\"\n        }\n       },\n       \"type\": \"object\"\n      }\n     },\n     \"type\": \"object\"\n    },\n    \"volumeConfigurations\": {\n     \"description\": \"The configuration for a volume specified in the task definition as a volume\\nthat is configured at launch time. Currently, the only supported volume type\\nis an Amazon EBS volume.\",\n     \"items\": {\n      \"description\": \"The configuration for a volume specified in the task definition as a volume\\nthat is configured at launch time. Currently, the only supported volume type\\nis an Amazon EBS volume.\",\n      \"properties\": {\n       \"managedEBSVolume\": {\n        \"description\": \"The configuration for the Amazon EBS volume that Amazon ECS creates and manages\\non your behalf. These settings are used to create each Amazon EBS volume,\\nwith one volume created for each task in the service.\\n\\n\\nMany of these parameters map 1:1 with the Amazon EBS CreateVolume API request\\nparameters.\",\n        \"properties\": {\n         \"encrypted\": {\n          \"type\": \"boolean\"\n         },\n         \"filesystemType\": {\n          \"type\": \"string\"\n         },\n         \"iops\": {\n          \"format\": \"int64\",\n          \"type\": \"integer\"\n         },\n         \"kmsKeyID\": {\n          \"type\": \"string\"\n         },\n         \"roleARN\": {\n          \"type\": \"string\"\n         },\n         \"sizeInGiB\": {\n          \"format\": \"int64\",\n          \"type\": \"integer\"\n         },\n         \"snapshotID\": {\n          \"type\": \"string\"\n         },\n         \"tagSpecifications\": {\n          \"items\": {\n           \"description\": \"The tag specifications of an Amazon EBS volume.\",\n           \"properties\": {\n            \"propagateTags\": {\n             \"type\": \"string\"\n            },\n            \"resourceType\": {\n             \"type\": \"string\"\n            },\n            \"tags\": {\n             \"items\": {\n              \"description\": \"The metadata that you apply to a resource to help you categorize and organize\\nthem. Each tag consists of a key and an optional value. You define them.\\n\\n\\nThe following basic restrictions apply to tags:\\n\\n\\n  - Maximum number of tags per resource - 50\\n\\n\\n  - For each resource, each tag key must be unique, and each tag key can\\n    have only one value.\\n\\n\\n  - Maximum key length - 128 Unicode characters in UTF-8\\n\\n\\n  - Maximum value length - 256 Unicode characters in UTF-8\\n\\n\\n  - If your tagging schema is used across multiple services and resources,\\n    remember that other services may have restrictions on allowed characters.\\n    Generally allowed characters are: letters, numbers, and spaces representable\\n    in UTF-8, and the following characters: + - = . _ : / @.\\n\\n\\n  - Tag keys and values are case-sensitive.\\n\\n\\n  - Do not use aws:, AWS:, or any upper or lowercase combination of such\\n    as a prefix for either keys or values as it is reserved for Amazon Web\\n    Services use. You cannot edit or delete tag keys or values with this prefix.\\n    Tags with this prefix do not count against your tags per resource limit.\",\n              \"properties\": {\n               \"key\": {\n                \"type\": \"string\"\n               },\n               \"value\": {\n                \"type\": \"string\"\n               }\n              },\n              \"type\": \"object\"\n             },\n             \"type\": \"array\"\n            }\n           },\n           \"type\": \"object\"\n          },\n          \"type\": \"array\"\n         },\n         \"throughput\": {\n          \"format\": \"int64\",\n          \"type\": \"integer\"\n         },\n         \"volumeType\": {\n          \"type\": \"string\"\n         }\n        },\n        \"type\": \"object\"\n       },\n       \"name\": {\n        \"type\": \"string\"\n       }\n      },\n      \"type\": \"object\"\n     },\n     \"type\": \"array\"\n    }\n   },\n   \"required\": [\n    \"name\"\n   ],\n   \"type\": \"object\"\n  }\n },\n \"title\": \"Service\",\n \"type\": \"object\"\n}"
 }