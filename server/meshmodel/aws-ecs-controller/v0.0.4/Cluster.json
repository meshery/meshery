{
  "id": "00000000-0000-0000-0000-000000000000",
  "kind": "Cluster",
  "apiVersion": "ecs.services.k8s.aws/v1alpha1",
  "displayName": "Cluster",
  "format": "JSON",
  "hostID": "00000000-0000-0000-0000-000000000000",
  "metadata": {
   "capabilities": "",
   "defaultData": "",
   "genealogy": "",
   "isAnnotation": false,
   "isNamespaced": true,
   "primaryColor": "",
   "published": false,
   "secondaryColor": "",
   "shape": "",
   "shapePolygonPoints": "",
   "styleOverrides": "",
   "styles": "",
   "subCategory": "",
   "svgColor": "",
   "svgComplete": "",
   "svgWhite": ""
  },
  "model": {
   "id": "00000000-0000-0000-0000-000000000000",
   "name": "aws-ecs-controller",
   "version": "v0.0.4",
   "displayName": "AWS Elastic Container Service",
   "status": "",
   "hostID": "00000000-0000-0000-0000-000000000000",
   "category": {
    "name": "Provisioning",
    "metadata": null
   },
   "metadata": {
    "isAnnotation": false,
    "published": false,
    "subCategory": "Automation \u0026 Configuration",
    "svgColor": "",
    "svgComplete": "",
    "svgWhite": ""
   },
   "components": null,
   "relationships": null
  },
  "schema": "{\n \"description\": \"Cluster is the Schema for the Clusters API\",\n \"properties\": {\n  \"spec\": {\n   \"description\": \"ClusterSpec defines the desired state of Cluster.\\n\\n\\nA regional grouping of one or more container instances where you can run\\ntask requests. Each account receives a default cluster the first time you\\nuse the Amazon ECS service, but you may also create other clusters. Clusters\\nmay contain more than one instance type simultaneously.\",\n   \"properties\": {\n    \"capacityProviders\": {\n     \"description\": \"The short name of one or more capacity providers to associate with the cluster.\\nA capacity provider must be associated with a cluster before it can be included\\nas part of the default capacity provider strategy of the cluster or used\\nin a capacity provider strategy when calling the CreateService (https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_CreateService.html)\\nor RunTask (https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_RunTask.html)\\nactions.\\n\\n\\nIf specifying a capacity provider that uses an Auto Scaling group, the capacity\\nprovider must be created but not associated with another cluster. New Auto\\nScaling group capacity providers can be created with the CreateCapacityProvider\\n(https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_CreateCapacityProvider.html)\\nAPI operation.\\n\\n\\nTo use a Fargate capacity provider, specify either the FARGATE or FARGATE_SPOT\\ncapacity providers. The Fargate capacity providers are available to all accounts\\nand only need to be associated with a cluster to be used.\\n\\n\\nThe PutCapacityProvider (https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_PutCapacityProvider.html)\\nAPI operation is used to update the list of available capacity providers\\nfor a cluster after the cluster is created.\",\n     \"items\": {\n      \"type\": \"string\"\n     },\n     \"type\": \"array\"\n    },\n    \"configuration\": {\n     \"description\": \"The execute command configuration for the cluster.\",\n     \"properties\": {\n      \"executeCommandConfiguration\": {\n       \"description\": \"The details of the execute command configuration.\",\n       \"properties\": {\n        \"kmsKeyID\": {\n         \"type\": \"string\"\n        },\n        \"logConfiguration\": {\n         \"description\": \"The log configuration for the results of the execute command actions. The\\nlogs can be sent to CloudWatch Logs or an Amazon S3 bucket.\",\n         \"properties\": {\n          \"cloudWatchEncryptionEnabled\": {\n           \"type\": \"boolean\"\n          },\n          \"cloudWatchLogGroupName\": {\n           \"type\": \"string\"\n          },\n          \"s3BucketName\": {\n           \"type\": \"string\"\n          },\n          \"s3EncryptionEnabled\": {\n           \"type\": \"boolean\"\n          },\n          \"s3KeyPrefix\": {\n           \"type\": \"string\"\n          }\n         },\n         \"type\": \"object\"\n        },\n        \"logging\": {\n         \"type\": \"string\"\n        }\n       },\n       \"type\": \"object\"\n      }\n     },\n     \"type\": \"object\"\n    },\n    \"defaultCapacityProviderStrategy\": {\n     \"description\": \"The capacity provider strategy to set as the default for the cluster. After\\na default capacity provider strategy is set for a cluster, when you call\\nthe CreateService (https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_CreateService.html)\\nor RunTask (https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_RunTask.html)\\nAPIs with no capacity provider strategy or launch type specified, the default\\ncapacity provider strategy for the cluster is used.\\n\\n\\nIf a default capacity provider strategy isn't defined for a cluster when\\nit was created, it can be defined later with the PutClusterCapacityProviders\\nAPI operation.\",\n     \"items\": {\n      \"description\": \"The details of a capacity provider strategy. A capacity provider strategy\\ncan be set when using the RunTask or CreateCluster APIs or as the default\\ncapacity provider strategy for a cluster with the CreateCluster API.\\n\\n\\nOnly capacity providers that are already associated with a cluster and have\\nan ACTIVE or UPDATING status can be used in a capacity provider strategy.\\nThe PutClusterCapacityProviders API is used to associate a capacity provider\\nwith a cluster.\\n\\n\\nIf specifying a capacity provider that uses an Auto Scaling group, the capacity\\nprovider must already be created. New Auto Scaling group capacity providers\\ncan be created with the CreateCapacityProvider API operation.\\n\\n\\nTo use a Fargate capacity provider, specify either the FARGATE or FARGATE_SPOT\\ncapacity providers. The Fargate capacity providers are available to all accounts\\nand only need to be associated with a cluster to be used in a capacity provider\\nstrategy.\\n\\n\\nA capacity provider strategy may contain a maximum of 6 capacity providers.\",\n      \"properties\": {\n       \"base\": {\n        \"format\": \"int64\",\n        \"type\": \"integer\"\n       },\n       \"capacityProvider\": {\n        \"type\": \"string\"\n       },\n       \"weight\": {\n        \"format\": \"int64\",\n        \"type\": \"integer\"\n       }\n      },\n      \"type\": \"object\"\n     },\n     \"type\": \"array\"\n    },\n    \"name\": {\n     \"description\": \"The name of your cluster. If you don't specify a name for your cluster, you\\ncreate a cluster that's named default. Up to 255 letters (uppercase and lowercase),\\nnumbers, underscores, and hyphens are allowed.\",\n     \"type\": \"string\"\n    },\n    \"serviceConnectDefaults\": {\n     \"description\": \"Use this parameter to set a default Service Connect namespace. After you\\nset a default Service Connect namespace, any new services with Service Connect\\nturned on that are created in the cluster are added as client services in\\nthe namespace. This setting only applies to new services that set the enabled\\nparameter to true in the ServiceConnectConfiguration. You can set the namespace\\nof each service individually in the ServiceConnectConfiguration to override\\nthis default parameter.\\n\\n\\nTasks that run in a namespace can use short names to connect to services\\nin the namespace. Tasks can connect to services across all of the clusters\\nin the namespace. Tasks connect through a managed proxy container that collects\\nlogs and metrics for increased visibility. Only the tasks that Amazon ECS\\nservices create are supported with Service Connect. For more information,\\nsee Service Connect (https://docs.aws.amazon.com/AmazonECS/latest/developerguide/service-connect.html)\\nin the Amazon Elastic Container Service Developer Guide.\",\n     \"properties\": {\n      \"namespace\": {\n       \"type\": \"string\"\n      }\n     },\n     \"type\": \"object\"\n    },\n    \"settings\": {\n     \"description\": \"The setting to use when creating a cluster. This parameter is used to turn\\non CloudWatch Container Insights for a cluster. If this value is specified,\\nit overrides the containerInsights value set with PutAccountSetting or PutAccountSettingDefault.\",\n     \"items\": {\n      \"description\": \"The settings to use when creating a cluster. This parameter is used to turn\\non CloudWatch Container Insights for a cluster.\",\n      \"properties\": {\n       \"name\": {\n        \"type\": \"string\"\n       },\n       \"value\": {\n        \"type\": \"string\"\n       }\n      },\n      \"type\": \"object\"\n     },\n     \"type\": \"array\"\n    },\n    \"tags\": {\n     \"description\": \"The metadata that you apply to the cluster to help you categorize and organize\\nthem. Each tag consists of a key and an optional value. You define both.\\n\\n\\nThe following basic restrictions apply to tags:\\n\\n\\n  - Maximum number of tags per resource - 50\\n\\n\\n  - For each resource, each tag key must be unique, and each tag key can\\n    have only one value.\\n\\n\\n  - Maximum key length - 128 Unicode characters in UTF-8\\n\\n\\n  - Maximum value length - 256 Unicode characters in UTF-8\\n\\n\\n  - If your tagging schema is used across multiple services and resources,\\n    remember that other services may have restrictions on allowed characters.\\n    Generally allowed characters are: letters, numbers, and spaces representable\\n    in UTF-8, and the following characters: + - = . _ : / @.\\n\\n\\n  - Tag keys and values are case-sensitive.\\n\\n\\n  - Do not use aws:, AWS:, or any upper or lowercase combination of such\\n    as a prefix for either keys or values as it is reserved for Amazon Web\\n    Services use. You cannot edit or delete tag keys or values with this prefix.\\n    Tags with this prefix do not count against your tags per resource limit.\",\n     \"items\": {\n      \"description\": \"The metadata that you apply to a resource to help you categorize and organize\\nthem. Each tag consists of a key and an optional value. You define them.\\n\\n\\nThe following basic restrictions apply to tags:\\n\\n\\n  - Maximum number of tags per resource - 50\\n\\n\\n  - For each resource, each tag key must be unique, and each tag key can\\n    have only one value.\\n\\n\\n  - Maximum key length - 128 Unicode characters in UTF-8\\n\\n\\n  - Maximum value length - 256 Unicode characters in UTF-8\\n\\n\\n  - If your tagging schema is used across multiple services and resources,\\n    remember that other services may have restrictions on allowed characters.\\n    Generally allowed characters are: letters, numbers, and spaces representable\\n    in UTF-8, and the following characters: + - = . _ : / @.\\n\\n\\n  - Tag keys and values are case-sensitive.\\n\\n\\n  - Do not use aws:, AWS:, or any upper or lowercase combination of such\\n    as a prefix for either keys or values as it is reserved for Amazon Web\\n    Services use. You cannot edit or delete tag keys or values with this prefix.\\n    Tags with this prefix do not count against your tags per resource limit.\",\n      \"properties\": {\n       \"key\": {\n        \"type\": \"string\"\n       },\n       \"value\": {\n        \"type\": \"string\"\n       }\n      },\n      \"type\": \"object\"\n     },\n     \"type\": \"array\"\n    }\n   },\n   \"type\": \"object\"\n  }\n },\n \"title\": \"Cluster\",\n \"type\": \"object\"\n}"
 }