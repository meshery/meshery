{
  "id": "00000000-0000-0000-0000-000000000000",
  "kind": "TaskDefinition",
  "apiVersion": "ecs.services.k8s.aws/v1alpha1",
  "displayName": "Task Definition",
  "format": "JSON",
  "hostID": "00000000-0000-0000-0000-000000000000",
  "metadata": {
   "capabilities": "",
   "defaultData": "",
   "genealogy": "",
   "isAnnotation": false,
   "isNamespaced": true,
   "primaryColor": "#ED7100",
   "published": true,
   "secondaryColor": "",
   "shape": "rectangle",
   "shapePolygonPoints": "",
   "styleOverrides": "",
   "styles": "",
   "subCategory": "",
   "svgColor": "\u003csvg width=\"64px\" height=\"64px\" viewBox=\"0 0 64 64\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"\u003e\n    \u003ctitle\u003eIcon-Architecture/48/Arch_Amazon-Elastic-Container-Service_48\u003c/title\u003e\n    \u003cg id=\"Icon-Architecture/48/Arch_Amazon-Elastic-Container-Service_48\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\"\u003e\n        \u003cg id=\"Icon-Architecture-BG/48/Compute\" fill=\"#ED7100\"\u003e\n            \u003crect id=\"Rectangle\" x=\"0\" y=\"0\" width=\"64\" height=\"64\"\u003e\u003c/rect\u003e\n        \u003c/g\u003e\n        \u003cpath d=\"M50,36.3822466 L44,33.3822885 L44,25.0004058 C44,24.6374109 43.803,24.3024156 43.485,24.1264181 L35,19.412484 L35,12.7495773 L50,21.5724538 L50,36.3822466 Z M51.507,20.1384739 L34.507,10.1386138 C34.199,9.95761637 33.815,9.95461641 33.504,10.1326139 C33.192,10.3106114 33,10.6416068 33,11.0006018 L33,20.0004758 C33,20.3634707 33.197,20.6984661 33.515,20.8744636 L42,25.5883976 L42,34.0002799 C42,34.3792746 42.214,34.7252697 42.553,34.8952674 L50.553,38.8952114 C50.694,38.9652104 50.847,39.0002099 51,39.0002099 C51.183,39.0002099 51.365,38.9502106 51.525,38.851212 C51.82,38.6682146 52,38.3472191 52,38.0002239 L52,21.0004618 C52,20.6464668 51.812,20.3184714 51.507,20.1384739 L51.507,20.1384739 Z M32,51.8280304 L15,41.4391758 L15,21.5544541 L29,12.8045765 L29,19.4464836 L21.47,24.1524177 C21.178,24.3354152 21,24.6554107 21,25.0004058 L21,38.0002239 C21,38.351219 21.185,38.6772144 21.485,38.8572119 L31.485,44.857128 C31.789,45.0401254 32.167,45.0481253 32.479,44.8781277 L42.988,39.1462079 L48.035,42.0291675 L32,51.8280304 Z M50.496,41.1321801 L43.496,37.1322361 C43.194,36.9592385 42.825,36.9562385 42.521,37.1222362 L32.023,42.8481561 L23,37.4342318 L23,25.5543981 L30.53,20.848464 C30.822,20.6654665 31,20.345471 31,20.0004758 L31,11.0006018 C31,10.6366069 30.803,10.3026115 30.484,10.125614 C30.168,9.9486165 29.778,9.95961634 29.47,10.1526136 L13.47,20.1524737 C13.178,20.3354711 13,20.6554667 13,21.0004618 L13,42.0001679 C13,42.3481631 13.182,42.6711585 13.479,42.854156 L31.479,53.854002 C31.639,53.9510007 31.819,54 32,54 C32.181,54 32.361,53.9510007 32.521,53.854002 L50.521,42.854156 C50.823,42.6691586 51.005,42.3391632 51.0001004,41.9851681 C50.995,41.6321731 50.803,41.3071776 50.496,41.1321801 L50.496,41.1321801 Z\" id=\"Amazon-Elastic-Container-Service_Icon_48_Squid\" fill=\"#FFFFFF\"\u003e\u003c/path\u003e\n    \u003c/g\u003e\n\u003c/svg\u003e",
   "svgComplete": "",
   "svgWhite": "\u003csvg width=\"64px\" height=\"64px\" viewBox=\"0 0 64 64\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"\u003e\n    \u003ctitle\u003eIcon-Architecture/48/Arch_Amazon-Elastic-Container-Service_48\u003c/title\u003e\n    \u003cg id=\"Icon-Architecture/48/Arch_Amazon-Elastic-Container-Service_48\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\"\u003e\n        \u003cg id=\"Icon-Architecture-BG/48/Compute\" fill=\"#ED7100\"\u003e\n            \u003crect id=\"Rectangle\" x=\"0\" y=\"0\" width=\"64\" height=\"64\"\u003e\u003c/rect\u003e\n        \u003c/g\u003e\n        \u003cpath d=\"M50,36.3822466 L44,33.3822885 L44,25.0004058 C44,24.6374109 43.803,24.3024156 43.485,24.1264181 L35,19.412484 L35,12.7495773 L50,21.5724538 L50,36.3822466 Z M51.507,20.1384739 L34.507,10.1386138 C34.199,9.95761637 33.815,9.95461641 33.504,10.1326139 C33.192,10.3106114 33,10.6416068 33,11.0006018 L33,20.0004758 C33,20.3634707 33.197,20.6984661 33.515,20.8744636 L42,25.5883976 L42,34.0002799 C42,34.3792746 42.214,34.7252697 42.553,34.8952674 L50.553,38.8952114 C50.694,38.9652104 50.847,39.0002099 51,39.0002099 C51.183,39.0002099 51.365,38.9502106 51.525,38.851212 C51.82,38.6682146 52,38.3472191 52,38.0002239 L52,21.0004618 C52,20.6464668 51.812,20.3184714 51.507,20.1384739 L51.507,20.1384739 Z M32,51.8280304 L15,41.4391758 L15,21.5544541 L29,12.8045765 L29,19.4464836 L21.47,24.1524177 C21.178,24.3354152 21,24.6554107 21,25.0004058 L21,38.0002239 C21,38.351219 21.185,38.6772144 21.485,38.8572119 L31.485,44.857128 C31.789,45.0401254 32.167,45.0481253 32.479,44.8781277 L42.988,39.1462079 L48.035,42.0291675 L32,51.8280304 Z M50.496,41.1321801 L43.496,37.1322361 C43.194,36.9592385 42.825,36.9562385 42.521,37.1222362 L32.023,42.8481561 L23,37.4342318 L23,25.5543981 L30.53,20.848464 C30.822,20.6654665 31,20.345471 31,20.0004758 L31,11.0006018 C31,10.6366069 30.803,10.3026115 30.484,10.125614 C30.168,9.9486165 29.778,9.95961634 29.47,10.1526136 L13.47,20.1524737 C13.178,20.3354711 13,20.6554667 13,21.0004618 L13,42.0001679 C13,42.3481631 13.182,42.6711585 13.479,42.854156 L31.479,53.854002 C31.639,53.9510007 31.819,54 32,54 C32.181,54 32.361,53.9510007 32.521,53.854002 L50.521,42.854156 C50.823,42.6691586 51.005,42.3391632 51.0001004,41.9851681 C50.995,41.6321731 50.803,41.3071776 50.496,41.1321801 L50.496,41.1321801 Z\" id=\"Amazon-Elastic-Container-Service_Icon_48_Squid\" fill=\"#FFFFFF\"\u003e\u003c/path\u003e\n    \u003c/g\u003e\n\u003c/svg\u003e"
  },
  "model": {
   "id": "00000000-0000-0000-0000-000000000000",
   "name": "aws-ecs-controller",
   "version": "v0.0.5",
   "displayName": "AWS Elastic Container Service",
   "status": "",
   "hostID": "00000000-0000-0000-0000-000000000000",
   "category": {
    "name": "Provisioning",
    "metadata": null
   },
   "metadata": {
    "isAnnotation": false,
    "published": true,
    "subCategory": "Automation \u0026 Configuration",
    "svgColor": "\u003c?xml version=\"1.0\" encoding=\"UTF-8\"?\u003e\u003c!DOCTYPE svg\u003e\u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 64 64\" version=\"1.1\" xmlns:_xmlns=\"xmlns\" _xmlns:xlink=\"http://www.w3.org/1999/xlink\"\u003e\n    \u003ctitle xmlns=\"http://www.w3.org/2000/svg\"\u003eIcon-Architecture/48/Arch_Amazon-Elastic-Container-Service_48\u003c/title\u003e\n    \u003cg xmlns=\"http://www.w3.org/2000/svg\" id=\"Icon-Architecture/48/Arch_Amazon-Elastic-Container-Service_48\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\"\u003e\n        \u003cg xmlns=\"http://www.w3.org/2000/svg\" id=\"Icon-Architecture-BG/48/Compute\" fill=\"#ED7100\"\u003e\n            \u003crect xmlns=\"http://www.w3.org/2000/svg\" id=\"Rectangle\" x=\"0\" y=\"0\" width=\"64\" height=\"64\"\u003e\u003c/rect\u003e\n        \u003c/g\u003e\n        \u003cpath xmlns=\"http://www.w3.org/2000/svg\" d=\"M50,36.3822466 L44,33.3822885 L44,25.0004058 C44,24.6374109 43.803,24.3024156 43.485,24.1264181 L35,19.412484 L35,12.7495773 L50,21.5724538 L50,36.3822466 Z M51.507,20.1384739 L34.507,10.1386138 C34.199,9.95761637 33.815,9.95461641 33.504,10.1326139 C33.192,10.3106114 33,10.6416068 33,11.0006018 L33,20.0004758 C33,20.3634707 33.197,20.6984661 33.515,20.8744636 L42,25.5883976 L42,34.0002799 C42,34.3792746 42.214,34.7252697 42.553,34.8952674 L50.553,38.8952114 C50.694,38.9652104 50.847,39.0002099 51,39.0002099 C51.183,39.0002099 51.365,38.9502106 51.525,38.851212 C51.82,38.6682146 52,38.3472191 52,38.0002239 L52,21.0004618 C52,20.6464668 51.812,20.3184714 51.507,20.1384739 L51.507,20.1384739 Z M32,51.8280304 L15,41.4391758 L15,21.5544541 L29,12.8045765 L29,19.4464836 L21.47,24.1524177 C21.178,24.3354152 21,24.6554107 21,25.0004058 L21,38.0002239 C21,38.351219 21.185,38.6772144 21.485,38.8572119 L31.485,44.857128 C31.789,45.0401254 32.167,45.0481253 32.479,44.8781277 L42.988,39.1462079 L48.035,42.0291675 L32,51.8280304 Z M50.496,41.1321801 L43.496,37.1322361 C43.194,36.9592385 42.825,36.9562385 42.521,37.1222362 L32.023,42.8481561 L23,37.4342318 L23,25.5543981 L30.53,20.848464 C30.822,20.6654665 31,20.345471 31,20.0004758 L31,11.0006018 C31,10.6366069 30.803,10.3026115 30.484,10.125614 C30.168,9.9486165 29.778,9.95961634 29.47,10.1526136 L13.47,20.1524737 C13.178,20.3354711 13,20.6554667 13,21.0004618 L13,42.0001679 C13,42.3481631 13.182,42.6711585 13.479,42.854156 L31.479,53.854002 C31.639,53.9510007 31.819,54 32,54 C32.181,54 32.361,53.9510007 32.521,53.854002 L50.521,42.854156 C50.823,42.6691586 51.005,42.3391632 51.0001004,41.9851681 C50.995,41.6321731 50.803,41.3071776 50.496,41.1321801 L50.496,41.1321801 Z\" id=\"Amazon-Elastic-Container-Service_Icon_48_Squid\" fill=\"#FFFFFF\"\u003e\u003c/path\u003e\n    \u003c/g\u003e\n\u003c/svg\u003e",
    "svgComplete": "",
    "svgWhite": "\u003c?xml version=\"1.0\" encoding=\"UTF-8\"?\u003e\u003c!DOCTYPE svg\u003e\u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 64 64\" version=\"1.1\" xmlns:_xmlns=\"xmlns\" _xmlns:xlink=\"http://www.w3.org/1999/xlink\"\u003e\n    \u003ctitle xmlns=\"http://www.w3.org/2000/svg\"\u003eIcon-Architecture/48/Arch_Amazon-Elastic-Container-Service_48\u003c/title\u003e\n    \u003cg xmlns=\"http://www.w3.org/2000/svg\" id=\"Icon-Architecture/48/Arch_Amazon-Elastic-Container-Service_48\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\"\u003e\n        \u003cg xmlns=\"http://www.w3.org/2000/svg\" id=\"Icon-Architecture-BG/48/Compute\" fill=\"#ED7100\"\u003e\n            \u003crect xmlns=\"http://www.w3.org/2000/svg\" id=\"Rectangle\" x=\"0\" y=\"0\" width=\"64\" height=\"64\"\u003e\u003c/rect\u003e\n        \u003c/g\u003e\n        \u003cpath xmlns=\"http://www.w3.org/2000/svg\" d=\"M50,36.3822466 L44,33.3822885 L44,25.0004058 C44,24.6374109 43.803,24.3024156 43.485,24.1264181 L35,19.412484 L35,12.7495773 L50,21.5724538 L50,36.3822466 Z M51.507,20.1384739 L34.507,10.1386138 C34.199,9.95761637 33.815,9.95461641 33.504,10.1326139 C33.192,10.3106114 33,10.6416068 33,11.0006018 L33,20.0004758 C33,20.3634707 33.197,20.6984661 33.515,20.8744636 L42,25.5883976 L42,34.0002799 C42,34.3792746 42.214,34.7252697 42.553,34.8952674 L50.553,38.8952114 C50.694,38.9652104 50.847,39.0002099 51,39.0002099 C51.183,39.0002099 51.365,38.9502106 51.525,38.851212 C51.82,38.6682146 52,38.3472191 52,38.0002239 L52,21.0004618 C52,20.6464668 51.812,20.3184714 51.507,20.1384739 L51.507,20.1384739 Z M32,51.8280304 L15,41.4391758 L15,21.5544541 L29,12.8045765 L29,19.4464836 L21.47,24.1524177 C21.178,24.3354152 21,24.6554107 21,25.0004058 L21,38.0002239 C21,38.351219 21.185,38.6772144 21.485,38.8572119 L31.485,44.857128 C31.789,45.0401254 32.167,45.0481253 32.479,44.8781277 L42.988,39.1462079 L48.035,42.0291675 L32,51.8280304 Z M50.496,41.1321801 L43.496,37.1322361 C43.194,36.9592385 42.825,36.9562385 42.521,37.1222362 L32.023,42.8481561 L23,37.4342318 L23,25.5543981 L30.53,20.848464 C30.822,20.6654665 31,20.345471 31,20.0004758 L31,11.0006018 C31,10.6366069 30.803,10.3026115 30.484,10.125614 C30.168,9.9486165 29.778,9.95961634 29.47,10.1526136 L13.47,20.1524737 C13.178,20.3354711 13,20.6554667 13,21.0004618 L13,42.0001679 C13,42.3481631 13.182,42.6711585 13.479,42.854156 L31.479,53.854002 C31.639,53.9510007 31.819,54 32,54 C32.181,54 32.361,53.9510007 32.521,53.854002 L50.521,42.854156 C50.823,42.6691586 51.005,42.3391632 51.0001004,41.9851681 C50.995,41.6321731 50.803,41.3071776 50.496,41.1321801 L50.496,41.1321801 Z\" id=\"Amazon-Elastic-Container-Service_Icon_48_Squid\" fill=\"#FFFFFF\"\u003e\u003c/path\u003e\n    \u003c/g\u003e\n\u003c/svg\u003e"
   },
   "components": null,
   "relationships": null
  },
  "schema": "{\n \"description\": \"TaskDefinition is the Schema for the TaskDefinitions API\",\n \"properties\": {\n  \"spec\": {\n   \"description\": \"TaskDefinitionSpec defines the desired state of TaskDefinition.\\n\\n\\nThe details of a task definition which describes the container and volume\\ndefinitions of an Amazon Elastic Container Service task. You can specify\\nwhich Docker images to use, the required resources, and other configurations\\nrelated to launching the task definition through an Amazon ECS service or\\ntask.\",\n   \"properties\": {\n    \"containerDefinitions\": {\n     \"description\": \"A list of container definitions in JSON format that describe the different\\ncontainers that make up your task.\",\n     \"items\": {\n      \"description\": \"Container definitions are used in task definitions to describe the different\\ncontainers that are launched as part of a task.\",\n      \"properties\": {\n       \"command\": {\n        \"items\": {\n         \"type\": \"string\"\n        },\n        \"type\": \"array\"\n       },\n       \"cpu\": {\n        \"format\": \"int64\",\n        \"type\": \"integer\"\n       },\n       \"credentialSpecs\": {\n        \"items\": {\n         \"type\": \"string\"\n        },\n        \"type\": \"array\"\n       },\n       \"dependsOn\": {\n        \"items\": {\n         \"description\": \"The dependencies defined for container startup and shutdown. A container\\ncan contain multiple dependencies. When a dependency is defined for container\\nstartup, for container shutdown it is reversed.\\n\\n\\nYour Amazon ECS container instances require at least version 1.26.0 of the\\ncontainer agent to use container dependencies. However, we recommend using\\nthe latest container agent version. For information about checking your agent\\nversion and updating to the latest version, see Updating the Amazon ECS Container\\nAgent (https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-agent-update.html)\\nin the Amazon Elastic Container Service Developer Guide. If you're using\\nan Amazon ECS-optimized Linux AMI, your instance needs at least version 1.26.0-1\\nof the ecs-init package. If your container instances are launched from version\\n20190301 or later, then they contain the required versions of the container\\nagent and ecs-init. For more information, see Amazon ECS-optimized Linux\\nAMI (https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-optimized_AMI.html)\\nin the Amazon Elastic Container Service Developer Guide.\\n\\n\\nFor tasks that use the Fargate launch type, the task or service requires\\nthe following platforms:\\n\\n\\n  - Linux platform version 1.3.0 or later.\\n\\n\\n  - Windows platform version 1.0.0 or later.\\n\\n\\nFor more information about how to create a container dependency, see Container\\ndependency (https://docs.aws.amazon.com/AmazonECS/latest/developerguide/example_task_definitions.html#example_task_definition-containerdependency)\\nin the Amazon Elastic Container Service Developer Guide.\",\n         \"properties\": {\n          \"condition\": {\n           \"type\": \"string\"\n          },\n          \"containerName\": {\n           \"type\": \"string\"\n          }\n         },\n         \"type\": \"object\"\n        },\n        \"type\": \"array\"\n       },\n       \"disableNetworking\": {\n        \"type\": \"boolean\"\n       },\n       \"dnsSearchDomains\": {\n        \"items\": {\n         \"type\": \"string\"\n        },\n        \"type\": \"array\"\n       },\n       \"dnsServers\": {\n        \"items\": {\n         \"type\": \"string\"\n        },\n        \"type\": \"array\"\n       },\n       \"dockerLabels\": {\n        \"additionalProperties\": {\n         \"type\": \"string\"\n        },\n        \"type\": \"object\"\n       },\n       \"dockerSecurityOptions\": {\n        \"items\": {\n         \"type\": \"string\"\n        },\n        \"type\": \"array\"\n       },\n       \"entryPoint\": {\n        \"items\": {\n         \"type\": \"string\"\n        },\n        \"type\": \"array\"\n       },\n       \"environment\": {\n        \"items\": {\n         \"description\": \"A key-value pair object.\",\n         \"properties\": {\n          \"name\": {\n           \"type\": \"string\"\n          },\n          \"value\": {\n           \"type\": \"string\"\n          }\n         },\n         \"type\": \"object\"\n        },\n        \"type\": \"array\"\n       },\n       \"environmentFiles\": {\n        \"items\": {\n         \"description\": \"A list of files containing the environment variables to pass to a container.\\nYou can specify up to ten environment files. The file must have a .env file\\nextension. Each line in an environment file should contain an environment\\nvariable in VARIABLE=VALUE format. Lines beginning with # are treated as\\ncomments and are ignored.\\n\\n\\nIf there are environment variables specified using the environment parameter\\nin a container definition, they take precedence over the variables contained\\nwithin an environment file. If multiple environment files are specified that\\ncontain the same variable, they're processed from the top down. We recommend\\nthat you use unique variable names. For more information, see Specifying\\nenvironment variables (https://docs.aws.amazon.com/AmazonECS/latest/developerguide/taskdef-envfiles.html)\\nin the Amazon Elastic Container Service Developer Guide.\\n\\n\\nYou must use the following platforms for the Fargate launch type:\\n\\n\\n  - Linux platform version 1.4.0 or later.\\n\\n\\n  - Windows platform version 1.0.0 or later.\\n\\n\\nConsider the following when using the Fargate launch type:\\n\\n\\n  - The file is handled like a native Docker env-file.\\n\\n\\n  - There is no support for shell escape handling.\\n\\n\\n  - The container entry point interperts the VARIABLE values.\",\n         \"properties\": {\n          \"type\": {\n           \"type\": \"string\"\n          },\n          \"value\": {\n           \"type\": \"string\"\n          }\n         },\n         \"type\": \"object\"\n        },\n        \"type\": \"array\"\n       },\n       \"essential\": {\n        \"type\": \"boolean\"\n       },\n       \"extraHosts\": {\n        \"items\": {\n         \"description\": \"Hostnames and IP address entries that are added to the /etc/hosts file of\\na container via the extraHosts parameter of its ContainerDefinition.\",\n         \"properties\": {\n          \"hostname\": {\n           \"type\": \"string\"\n          },\n          \"ipAddress\": {\n           \"type\": \"string\"\n          }\n         },\n         \"type\": \"object\"\n        },\n        \"type\": \"array\"\n       },\n       \"firelensConfiguration\": {\n        \"description\": \"The FireLens configuration for the container. This is used to specify and\\nconfigure a log router for container logs. For more information, see Custom\\nlog routing (https://docs.aws.amazon.com/AmazonECS/latest/developerguide/using_firelens.html)\\nin the Amazon Elastic Container Service Developer Guide.\",\n        \"properties\": {\n         \"options\": {\n          \"additionalProperties\": {\n           \"type\": \"string\"\n          },\n          \"type\": \"object\"\n         },\n         \"type\": {\n          \"type\": \"string\"\n         }\n        },\n        \"type\": \"object\"\n       },\n       \"healthCheck\": {\n        \"description\": \"An object representing a container health check. Health check parameters\\nthat are specified in a container definition override any Docker health checks\\nthat exist in the container image (such as those specified in a parent image\\nor from the image's Dockerfile). This configuration maps to the HEALTHCHECK\\nparameter of docker run (https://docs.docker.com/engine/reference/run/).\\n\\n\\nThe Amazon ECS container agent only monitors and reports on the health checks\\nspecified in the task definition. Amazon ECS does not monitor Docker health\\nchecks that are embedded in a container image and not specified in the container\\ndefinition. Health check parameters that are specified in a container definition\\noverride any Docker health checks that exist in the container image.\\n\\n\\nYou can view the health status of both individual containers and a task with\\nthe DescribeTasks API operation or when viewing the task details in the console.\\n\\n\\nThe health check is designed to make sure that your containers survive agent\\nrestarts, upgrades, or temporary unavailability.\\n\\n\\nThe following describes the possible healthStatus values for a container:\\n\\n\\n   * HEALTHY-The container health check has passed successfully.\\n\\n\\n   * UNHEALTHY-The container health check has failed.\\n\\n\\n   * UNKNOWN-The container health check is being evaluated, there's no container\\n   health check defined, or Amazon ECS doesn't have the health status of\\n   the container.\\n\\n\\nThe following describes the possible healthStatus values based on the container\\nhealth checker status of essential containers in the task with the following\\npriority order (high to low):\\n\\n\\n   * UNHEALTHY-One or more essential containers have failed their health\\n   check.\\n\\n\\n   * UNKNOWN-Any essential container running within the task is in an UNKNOWN\\n   state and no other essential containers have an UNHEALTHY state.\\n\\n\\n   * HEALTHY-All essential containers within the task have passed their health\\n   checks.\\n\\n\\nConsider the following task health example with 2 containers.\\n\\n\\n   * If Container1 is UNHEALTHY and Container2 is UNKNOWN, the task health\\n   is UNHEALTHY.\\n\\n\\n   * If Container1 is UNHEALTHY and Container2 is HEALTHY, the task health\\n   is UNHEALTHY.\\n\\n\\n   * If Container1 is HEALTHY and Container2 is UNKNOWN, the task health\\n   is UNKNOWN.\\n\\n\\n   * If Container1 is HEALTHY and Container2 is HEALTHY, the task health\\n   is HEALTHY.\\n\\n\\nConsider the following task health example with 3 containers.\\n\\n\\n   * If Container1 is UNHEALTHY and Container2 is UNKNOWN, and Container3\\n   is UNKNOWN, the task health is UNHEALTHY.\\n\\n\\n   * If Container1 is UNHEALTHY and Container2 is UNKNOWN, and Container3\\n   is HEALTHY, the task health is UNHEALTHY.\\n\\n\\n   * If Container1 is UNHEALTHY and Container2 is HEALTHY, and Container3\\n   is HEALTHY, the task health is UNHEALTHY.\\n\\n\\n   * If Container1 is HEALTHY and Container2 is UNKNOWN, and Container3 is\\n   HEALTHY, the task health is UNKNOWN.\\n\\n\\n   * If Container1 is HEALTHY and Container2 is UNKNOWN, and Container3 is\\n   UNKNOWN, the task health is UNKNOWN.\\n\\n\\n   * If Container1 is HEALTHY and Container2 is HEALTHY, and Container3 is\\n   HEALTHY, the task health is HEALTHY.\\n\\n\\nIf a task is run manually, and not as part of a service, the task will continue\\nits lifecycle regardless of its health status. For tasks that are part of\\na service, if the task reports as unhealthy then the task will be stopped\\nand the service scheduler will replace it.\\n\\n\\nThe following are notes about container health check support:\\n\\n\\n   * When the Amazon ECS agent cannot connect to the Amazon ECS service,\\n   the service reports the container as UNHEALTHY.\\n\\n\\n   * The health check statuses are the \\\"last heard from\\\" response from the\\n   Amazon ECS agent. There are no assumptions made about the status of the\\n   container health checks.\\n\\n\\n   * Container health checks require version 1.17.0 or greater of the Amazon\\n   ECS container agent. For more information, see Updating the Amazon ECS\\n   container agent (https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-agent-update.html).\\n\\n\\n   * Container health checks are supported for Fargate tasks if you're using\\n   platform version 1.1.0 or greater. For more information, see Fargate platform\\n   versions (https://docs.aws.amazon.com/AmazonECS/latest/developerguide/platform_versions.html).\\n\\n\\n   * Container health checks aren't supported for tasks that are part of\\n   a service that's configured to use a Classic Load Balancer.\",\n        \"properties\": {\n         \"command\": {\n          \"items\": {\n           \"type\": \"string\"\n          },\n          \"type\": \"array\"\n         },\n         \"interval\": {\n          \"format\": \"int64\",\n          \"type\": \"integer\"\n         },\n         \"retries\": {\n          \"format\": \"int64\",\n          \"type\": \"integer\"\n         },\n         \"startPeriod\": {\n          \"format\": \"int64\",\n          \"type\": \"integer\"\n         },\n         \"timeout\": {\n          \"format\": \"int64\",\n          \"type\": \"integer\"\n         }\n        },\n        \"type\": \"object\"\n       },\n       \"hostname\": {\n        \"type\": \"string\"\n       },\n       \"image\": {\n        \"type\": \"string\"\n       },\n       \"interactive\": {\n        \"type\": \"boolean\"\n       },\n       \"links\": {\n        \"items\": {\n         \"type\": \"string\"\n        },\n        \"type\": \"array\"\n       },\n       \"linuxParameters\": {\n        \"description\": \"The Linux-specific options that are applied to the container, such as Linux\\nKernelCapabilities (https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_KernelCapabilities.html).\",\n        \"properties\": {\n         \"capabilities\": {\n          \"description\": \"The Linux capabilities for the container that are added to or dropped from\\nthe default configuration provided by Docker. For more information about\\nthe default capabilities and the non-default available capabilities, see\\nRuntime privilege and Linux capabilities (https://docs.docker.com/engine/reference/run/#runtime-privilege-and-linux-capabilities)\\nin the Docker run reference. For more detailed information about these Linux\\ncapabilities, see the capabilities(7) (http://man7.org/linux/man-pages/man7/capabilities.7.html)\\nLinux manual page.\",\n          \"properties\": {\n           \"add\": {\n            \"items\": {\n             \"type\": \"string\"\n            },\n            \"type\": \"array\"\n           },\n           \"drop\": {\n            \"items\": {\n             \"type\": \"string\"\n            },\n            \"type\": \"array\"\n           }\n          },\n          \"type\": \"object\"\n         },\n         \"devices\": {\n          \"items\": {\n           \"description\": \"An object representing a container instance host device.\",\n           \"properties\": {\n            \"containerPath\": {\n             \"type\": \"string\"\n            },\n            \"hostPath\": {\n             \"type\": \"string\"\n            },\n            \"permissions\": {\n             \"items\": {\n              \"type\": \"string\"\n             },\n             \"type\": \"array\"\n            }\n           },\n           \"type\": \"object\"\n          },\n          \"type\": \"array\"\n         },\n         \"initProcessEnabled\": {\n          \"type\": \"boolean\"\n         },\n         \"maxSwap\": {\n          \"format\": \"int64\",\n          \"type\": \"integer\"\n         },\n         \"sharedMemorySize\": {\n          \"format\": \"int64\",\n          \"type\": \"integer\"\n         },\n         \"swappiness\": {\n          \"format\": \"int64\",\n          \"type\": \"integer\"\n         },\n         \"tmpfs\": {\n          \"items\": {\n           \"description\": \"The container path, mount options, and size of the tmpfs mount.\",\n           \"properties\": {\n            \"containerPath\": {\n             \"type\": \"string\"\n            },\n            \"mountOptions\": {\n             \"items\": {\n              \"type\": \"string\"\n             },\n             \"type\": \"array\"\n            },\n            \"size\": {\n             \"format\": \"int64\",\n             \"type\": \"integer\"\n            }\n           },\n           \"type\": \"object\"\n          },\n          \"type\": \"array\"\n         }\n        },\n        \"type\": \"object\"\n       },\n       \"logConfiguration\": {\n        \"description\": \"The log configuration for the container. This parameter maps to LogConfig\\nin the Create a container (https://docs.docker.com/engine/api/v1.35/#operation/ContainerCreate)\\nsection of the Docker Remote API (https://docs.docker.com/engine/api/v1.35/)\\nand the --log-driver option to docker run (https://docs.docker.com/engine/reference/commandline/run/).\\n\\n\\nBy default, containers use the same logging driver that the Docker daemon\\nuses. However, the container might use a different logging driver than the\\nDocker daemon by specifying a log driver configuration in the container definition.\\nFor more information about the options for different supported log drivers,\\nsee Configure logging drivers (https://docs.docker.com/engine/admin/logging/overview/)\\nin the Docker documentation.\\n\\n\\nUnderstand the following when specifying a log configuration for your containers.\\n\\n\\n   * Amazon ECS currently supports a subset of the logging drivers available\\n   to the Docker daemon. Additional log drivers may be available in future\\n   releases of the Amazon ECS container agent. For tasks on Fargate, the\\n   supported log drivers are awslogs, splunk, and awsfirelens. For tasks\\n   hosted on Amazon EC2 instances, the supported log drivers are awslogs,\\n   fluentd, gelf, json-file, journald, logentries,syslog, splunk, and awsfirelens.\\n\\n\\n   * This parameter requires version 1.18 of the Docker Remote API or greater\\n   on your container instance.\\n\\n\\n   * For tasks that are hosted on Amazon EC2 instances, the Amazon ECS container\\n   agent must register the available logging drivers with the ECS_AVAILABLE_LOGGING_DRIVERS\\n   environment variable before containers placed on that instance can use\\n   these log configuration options. For more information, see Amazon ECS\\n   container agent configuration (https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-agent-config.html)\\n   in the Amazon Elastic Container Service Developer Guide.\\n\\n\\n   * For tasks that are on Fargate, because you don't have access to the\\n   underlying infrastructure your tasks are hosted on, any additional software\\n   needed must be installed outside of the task. For example, the Fluentd\\n   output aggregators or a remote host running Logstash to send Gelf logs\\n   to.\",\n        \"properties\": {\n         \"logDriver\": {\n          \"type\": \"string\"\n         },\n         \"options\": {\n          \"additionalProperties\": {\n           \"type\": \"string\"\n          },\n          \"type\": \"object\"\n         },\n         \"secretOptions\": {\n          \"items\": {\n           \"description\": \"An object representing the secret to expose to your container. Secrets can\\nbe exposed to a container in the following ways:\\n\\n\\n  - To inject sensitive data into your containers as environment variables,\\n    use the secrets container definition parameter.\\n\\n\\n  - To reference sensitive information in the log configuration of a container,\\n    use the secretOptions container definition parameter.\\n\\n\\nFor more information, see Specifying sensitive data (https://docs.aws.amazon.com/AmazonECS/latest/developerguide/specifying-sensitive-data.html)\\nin the Amazon Elastic Container Service Developer Guide.\",\n           \"properties\": {\n            \"name\": {\n             \"type\": \"string\"\n            },\n            \"valueFrom\": {\n             \"type\": \"string\"\n            }\n           },\n           \"type\": \"object\"\n          },\n          \"type\": \"array\"\n         }\n        },\n        \"type\": \"object\"\n       },\n       \"memory\": {\n        \"format\": \"int64\",\n        \"type\": \"integer\"\n       },\n       \"memoryReservation\": {\n        \"format\": \"int64\",\n        \"type\": \"integer\"\n       },\n       \"mountPoints\": {\n        \"items\": {\n         \"description\": \"The details for a volume mount point that's used in a container definition.\",\n         \"properties\": {\n          \"containerPath\": {\n           \"type\": \"string\"\n          },\n          \"readOnly\": {\n           \"type\": \"boolean\"\n          },\n          \"sourceVolume\": {\n           \"type\": \"string\"\n          }\n         },\n         \"type\": \"object\"\n        },\n        \"type\": \"array\"\n       },\n       \"name\": {\n        \"type\": \"string\"\n       },\n       \"portMappings\": {\n        \"items\": {\n         \"description\": \"Port mappings allow containers to access ports on the host container instance\\nto send or receive traffic. Port mappings are specified as part of the container\\ndefinition.\\n\\n\\nIf you use containers in a task with the awsvpc or host network mode, specify\\nthe exposed ports using containerPort. The hostPort can be left blank or\\nit must be the same value as the containerPort.\\n\\n\\nMost fields of this parameter (containerPort, hostPort, protocol) maps to\\nPortBindings in the Create a container (https://docs.docker.com/engine/api/v1.35/#operation/ContainerCreate)\\nsection of the Docker Remote API (https://docs.docker.com/engine/api/v1.35/)\\nand the --publish option to docker run (https://docs.docker.com/engine/reference/commandline/run/).\\nIf the network mode of a task definition is set to host, host ports must\\neither be undefined or match the container port in the port mapping.\\n\\n\\nYou can't expose the same container port for multiple protocols. If you attempt\\nthis, an error is returned.\\n\\n\\nAfter a task reaches the RUNNING status, manual and automatic host and container\\nport assignments are visible in the networkBindings section of DescribeTasks\\nAPI responses.\",\n         \"properties\": {\n          \"appProtocol\": {\n           \"type\": \"string\"\n          },\n          \"containerPort\": {\n           \"format\": \"int64\",\n           \"type\": \"integer\"\n          },\n          \"containerPortRange\": {\n           \"type\": \"string\"\n          },\n          \"hostPort\": {\n           \"format\": \"int64\",\n           \"type\": \"integer\"\n          },\n          \"name\": {\n           \"type\": \"string\"\n          },\n          \"protocol\": {\n           \"type\": \"string\"\n          }\n         },\n         \"type\": \"object\"\n        },\n        \"type\": \"array\"\n       },\n       \"privileged\": {\n        \"type\": \"boolean\"\n       },\n       \"pseudoTerminal\": {\n        \"type\": \"boolean\"\n       },\n       \"readonlyRootFilesystem\": {\n        \"type\": \"boolean\"\n       },\n       \"repositoryCredentials\": {\n        \"description\": \"The repository credentials for private registry authentication.\",\n        \"properties\": {\n         \"credentialsParameter\": {\n          \"type\": \"string\"\n         }\n        },\n        \"type\": \"object\"\n       },\n       \"resourceRequirements\": {\n        \"items\": {\n         \"description\": \"The type and amount of a resource to assign to a container. The supported\\nresource types are GPUs and Elastic Inference accelerators. For more information,\\nsee Working with GPUs on Amazon ECS (https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-gpu.html)\\nor Working with Amazon Elastic Inference on Amazon ECS (https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-inference.html)\\nin the Amazon Elastic Container Service Developer Guide\",\n         \"properties\": {\n          \"type\": {\n           \"type\": \"string\"\n          },\n          \"value\": {\n           \"type\": \"string\"\n          }\n         },\n         \"type\": \"object\"\n        },\n        \"type\": \"array\"\n       },\n       \"secrets\": {\n        \"items\": {\n         \"description\": \"An object representing the secret to expose to your container. Secrets can\\nbe exposed to a container in the following ways:\\n\\n\\n  - To inject sensitive data into your containers as environment variables,\\n    use the secrets container definition parameter.\\n\\n\\n  - To reference sensitive information in the log configuration of a container,\\n    use the secretOptions container definition parameter.\\n\\n\\nFor more information, see Specifying sensitive data (https://docs.aws.amazon.com/AmazonECS/latest/developerguide/specifying-sensitive-data.html)\\nin the Amazon Elastic Container Service Developer Guide.\",\n         \"properties\": {\n          \"name\": {\n           \"type\": \"string\"\n          },\n          \"valueFrom\": {\n           \"type\": \"string\"\n          }\n         },\n         \"type\": \"object\"\n        },\n        \"type\": \"array\"\n       },\n       \"startTimeout\": {\n        \"format\": \"int64\",\n        \"type\": \"integer\"\n       },\n       \"stopTimeout\": {\n        \"format\": \"int64\",\n        \"type\": \"integer\"\n       },\n       \"systemControls\": {\n        \"items\": {\n         \"description\": \"A list of namespaced kernel parameters to set in the container. This parameter\\nmaps to Sysctls in the Create a container (https://docs.docker.com/engine/api/v1.35/#operation/ContainerCreate)\\nsection of the Docker Remote API (https://docs.docker.com/engine/api/v1.35/)\\nand the --sysctl option to docker run (https://docs.docker.com/engine/reference/run/#security-configuration).\\nFor example, you can configure net.ipv4.tcp_keepalive_time setting to maintain\\nlonger lived connections.\\n\\n\\nWe don't recommend that you specify network-related systemControls parameters\\nfor multiple containers in a single task that also uses either the awsvpc\\nor host network mode. Doing this has the following disadvantages:\\n\\n\\n  - For tasks that use the awsvpc network mode including Fargate, if you\\n    set systemControls for any container, it applies to all containers in\\n    the task. If you set different systemControls for multiple containers\\n    in a single task, the container that's started last determines which systemControls\\n    take effect.\\n\\n\\n  - For tasks that use the host network mode, the network namespace systemControls\\n    aren't supported.\\n\\n\\nIf you're setting an IPC resource namespace to use for the containers in\\nthe task, the following conditions apply to your system controls. For more\\ninformation, see IPC mode (https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task_definition_parameters.html#task_definition_ipcmode).\\n\\n\\n  - For tasks that use the host IPC mode, IPC namespace systemControls aren't\\n    supported.\\n\\n\\n  - For tasks that use the task IPC mode, IPC namespace systemControls values\\n    apply to all containers within a task.\\n\\n\\nThis parameter is not supported for Windows containers.\\n\\n\\nThis parameter is only supported for tasks that are hosted on Fargate if\\nthe tasks are using platform version 1.4.0 or later (Linux). This isn't supported\\nfor Windows containers on Fargate.\",\n         \"properties\": {\n          \"namespace\": {\n           \"type\": \"string\"\n          },\n          \"value\": {\n           \"type\": \"string\"\n          }\n         },\n         \"type\": \"object\"\n        },\n        \"type\": \"array\"\n       },\n       \"ulimits\": {\n        \"items\": {\n         \"description\": \"The ulimit settings to pass to the container.\\n\\n\\nAmazon ECS tasks hosted on Fargate use the default resource limit values\\nset by the operating system with the exception of the nofile resource limit\\nparameter which Fargate overrides. The nofile resource limit sets a restriction\\non the number of open files that a container can use. The default nofile\\nsoft limit is 1024 and the default hard limit is 65535.\\n\\n\\nYou can specify the ulimit settings for a container in a task definition.\",\n         \"properties\": {\n          \"hardLimit\": {\n           \"format\": \"int64\",\n           \"type\": \"integer\"\n          },\n          \"name\": {\n           \"type\": \"string\"\n          },\n          \"softLimit\": {\n           \"format\": \"int64\",\n           \"type\": \"integer\"\n          }\n         },\n         \"type\": \"object\"\n        },\n        \"type\": \"array\"\n       },\n       \"user\": {\n        \"type\": \"string\"\n       },\n       \"volumesFrom\": {\n        \"items\": {\n         \"description\": \"Details on a data volume from another container in the same task definition.\",\n         \"properties\": {\n          \"readOnly\": {\n           \"type\": \"boolean\"\n          },\n          \"sourceContainer\": {\n           \"type\": \"string\"\n          }\n         },\n         \"type\": \"object\"\n        },\n        \"type\": \"array\"\n       },\n       \"workingDirectory\": {\n        \"type\": \"string\"\n       }\n      },\n      \"type\": \"object\"\n     },\n     \"type\": \"array\"\n    },\n    \"cpu\": {\n     \"description\": \"The number of CPU units used by the task. It can be expressed as an integer\\nusing CPU units (for example, 1024) or as a string using vCPUs (for example,\\n1 vCPU or 1 vcpu) in a task definition. String values are converted to an\\ninteger indicating the CPU units when the task definition is registered.\\n\\n\\nTask-level CPU and memory parameters are ignored for Windows containers.\\nWe recommend specifying container-level resources for Windows containers.\\n\\n\\nIf you're using the EC2 launch type, this field is optional. Supported values\\nare between 128 CPU units (0.125 vCPUs) and 10240 CPU units (10 vCPUs). If\\nyou do not specify a value, the parameter is ignored.\\n\\n\\nIf you're using the Fargate launch type, this field is required and you must\\nuse one of the following values, which determines your range of supported\\nvalues for the memory parameter:\\n\\n\\nThe CPU units cannot be less than 1 vCPU when you use Windows containers\\non Fargate.\\n\\n\\n  - 256 (.25 vCPU) - Available memory values: 512 (0.5 GB), 1024 (1 GB),\\n    2048 (2 GB)\\n\\n\\n  - 512 (.5 vCPU) - Available memory values: 1024 (1 GB), 2048 (2 GB), 3072\\n    (3 GB), 4096 (4 GB)\\n\\n\\n  - 1024 (1 vCPU) - Available memory values: 2048 (2 GB), 3072 (3 GB), 4096\\n    (4 GB), 5120 (5 GB), 6144 (6 GB), 7168 (7 GB), 8192 (8 GB)\\n\\n\\n  - 2048 (2 vCPU) - Available memory values: 4096 (4 GB) and 16384 (16 GB)\\n    in increments of 1024 (1 GB)\\n\\n\\n  - 4096 (4 vCPU) - Available memory values: 8192 (8 GB) and 30720 (30 GB)\\n    in increments of 1024 (1 GB)\\n\\n\\n  - 8192 (8 vCPU) - Available memory values: 16 GB and 60 GB in 4 GB increments\\n    This option requires Linux platform 1.4.0 or later.\\n\\n\\n  - 16384 (16vCPU) - Available memory values: 32GB and 120 GB in 8 GB increments\\n    This option requires Linux platform 1.4.0 or later.\",\n     \"type\": \"string\"\n    },\n    \"ephemeralStorage\": {\n     \"description\": \"The amount of ephemeral storage to allocate for the task. This parameter\\nis used to expand the total amount of ephemeral storage available, beyond\\nthe default amount, for tasks hosted on Fargate. For more information, see\\nUsing data volumes in tasks (https://docs.aws.amazon.com/AmazonECS/latest/developerguide/using_data_volumes.html)\\nin the Amazon ECS Developer Guide.\\n\\n\\nFor tasks using the Fargate launch type, the task requires the following\\nplatforms:\\n\\n\\n  - Linux platform version 1.4.0 or later.\\n\\n\\n  - Windows platform version 1.0.0 or later.\",\n     \"properties\": {\n      \"sizeInGiB\": {\n       \"format\": \"int64\",\n       \"type\": \"integer\"\n      }\n     },\n     \"type\": \"object\"\n    },\n    \"executionRoleARN\": {\n     \"description\": \"The Amazon Resource Name (ARN) of the task execution role that grants the\\nAmazon ECS container agent permission to make Amazon Web Services API calls\\non your behalf. The task execution IAM role is required depending on the\\nrequirements of your task. For more information, see Amazon ECS task execution\\nIAM role (https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task_execution_IAM_role.html)\\nin the Amazon Elastic Container Service Developer Guide.\",\n     \"type\": \"string\"\n    },\n    \"family\": {\n     \"description\": \"You must specify a family for a task definition. You can use it track multiple\\nversions of the same task definition. The family is used as a name for your\\ntask definition. Up to 255 letters (uppercase and lowercase), numbers, underscores,\\nand hyphens are allowed.\",\n     \"type\": \"string\"\n    },\n    \"inferenceAccelerators\": {\n     \"description\": \"The Elastic Inference accelerators to use for the containers in the task.\",\n     \"items\": {\n      \"description\": \"Details on an Elastic Inference accelerator. For more information, see Working\\nwith Amazon Elastic Inference on Amazon ECS (https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-inference.html)\\nin the Amazon Elastic Container Service Developer Guide.\",\n      \"properties\": {\n       \"deviceName\": {\n        \"type\": \"string\"\n       },\n       \"deviceType\": {\n        \"type\": \"string\"\n       }\n      },\n      \"type\": \"object\"\n     },\n     \"type\": \"array\"\n    },\n    \"ipcMode\": {\n     \"description\": \"The IPC resource namespace to use for the containers in the task. The valid\\nvalues are host, task, or none. If host is specified, then all containers\\nwithin the tasks that specified the host IPC mode on the same container instance\\nshare the same IPC resources with the host Amazon EC2 instance. If task is\\nspecified, all containers within the specified task share the same IPC resources.\\nIf none is specified, then IPC resources within the containers of a task\\nare private and not shared with other containers in a task or on the container\\ninstance. If no value is specified, then the IPC resource namespace sharing\\ndepends on the Docker daemon setting on the container instance. For more\\ninformation, see IPC settings (https://docs.docker.com/engine/reference/run/#ipc-settings---ipc)\\nin the Docker run reference.\\n\\n\\nIf the host IPC mode is used, be aware that there is a heightened risk of\\nundesired IPC namespace expose. For more information, see Docker security\\n(https://docs.docker.com/engine/security/security/).\\n\\n\\nIf you are setting namespaced kernel parameters using systemControls for\\nthe containers in the task, the following will apply to your IPC resource\\nnamespace. For more information, see System Controls (https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task_definition_parameters.html)\\nin the Amazon Elastic Container Service Developer Guide.\\n\\n\\n  - For tasks that use the host IPC mode, IPC namespace related systemControls\\n    are not supported.\\n\\n\\n  - For tasks that use the task IPC mode, IPC namespace related systemControls\\n    will apply to all containers within a task.\\n\\n\\nThis parameter is not supported for Windows containers or tasks run on Fargate.\",\n     \"type\": \"string\"\n    },\n    \"memory\": {\n     \"description\": \"The amount of memory (in MiB) used by the task. It can be expressed as an\\ninteger using MiB (for example ,1024) or as a string using GB (for example,\\n1GB or 1 GB) in a task definition. String values are converted to an integer\\nindicating the MiB when the task definition is registered.\\n\\n\\nTask-level CPU and memory parameters are ignored for Windows containers.\\nWe recommend specifying container-level resources for Windows containers.\\n\\n\\nIf using the EC2 launch type, this field is optional.\\n\\n\\nIf using the Fargate launch type, this field is required and you must use\\none of the following values. This determines your range of supported values\\nfor the cpu parameter.\\n\\n\\nThe CPU units cannot be less than 1 vCPU when you use Windows containers\\non Fargate.\\n\\n\\n  - 512 (0.5 GB), 1024 (1 GB), 2048 (2 GB) - Available cpu values: 256 (.25\\n    vCPU)\\n\\n\\n  - 1024 (1 GB), 2048 (2 GB), 3072 (3 GB), 4096 (4 GB) - Available cpu values:\\n    512 (.5 vCPU)\\n\\n\\n  - 2048 (2 GB), 3072 (3 GB), 4096 (4 GB), 5120 (5 GB), 6144 (6 GB), 7168\\n    (7 GB), 8192 (8 GB) - Available cpu values: 1024 (1 vCPU)\\n\\n\\n  - Between 4096 (4 GB) and 16384 (16 GB) in increments of 1024 (1 GB) -\\n    Available cpu values: 2048 (2 vCPU)\\n\\n\\n  - Between 8192 (8 GB) and 30720 (30 GB) in increments of 1024 (1 GB) -\\n    Available cpu values: 4096 (4 vCPU)\\n\\n\\n  - Between 16 GB and 60 GB in 4 GB increments - Available cpu values: 8192\\n    (8 vCPU) This option requires Linux platform 1.4.0 or later.\\n\\n\\n  - Between 32GB and 120 GB in 8 GB increments - Available cpu values: 16384\\n    (16 vCPU) This option requires Linux platform 1.4.0 or later.\",\n     \"type\": \"string\"\n    },\n    \"networkMode\": {\n     \"description\": \"The Docker networking mode to use for the containers in the task. The valid\\nvalues are none, bridge, awsvpc, and host. If no network mode is specified,\\nthe default is bridge.\\n\\n\\nFor Amazon ECS tasks on Fargate, the awsvpc network mode is required. For\\nAmazon ECS tasks on Amazon EC2 Linux instances, any network mode can be used.\\nFor Amazon ECS tasks on Amazon EC2 Windows instances, \\u003cdefault\\u003e or awsvpc\\ncan be used. If the network mode is set to none, you cannot specify port\\nmappings in your container definitions, and the tasks containers do not have\\nexternal connectivity. The host and awsvpc network modes offer the highest\\nnetworking performance for containers because they use the EC2 network stack\\ninstead of the virtualized network stack provided by the bridge mode.\\n\\n\\nWith the host and awsvpc network modes, exposed container ports are mapped\\ndirectly to the corresponding host port (for the host network mode) or the\\nattached elastic network interface port (for the awsvpc network mode), so\\nyou cannot take advantage of dynamic host port mappings.\\n\\n\\nWhen using the host network mode, you should not run containers using the\\nroot user (UID 0). It is considered best practice to use a non-root user.\\n\\n\\nIf the network mode is awsvpc, the task is allocated an elastic network interface,\\nand you must specify a NetworkConfiguration value when you create a service\\nor run a task with the task definition. For more information, see Task Networking\\n(https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task-networking.html)\\nin the Amazon Elastic Container Service Developer Guide.\\n\\n\\nIf the network mode is host, you cannot run multiple instantiations of the\\nsame task on a single container instance when port mappings are used.\\n\\n\\nFor more information, see Network settings (https://docs.docker.com/engine/reference/run/#network-settings)\\nin the Docker run reference.\",\n     \"type\": \"string\"\n    },\n    \"pidMode\": {\n     \"description\": \"The process namespace to use for the containers in the task. The valid values\\nare host or task. On Fargate for Linux containers, the only valid value is\\ntask. For example, monitoring sidecars might need pidMode to access information\\nabout other containers running in the same task.\\n\\n\\nIf host is specified, all containers within the tasks that specified the\\nhost PID mode on the same container instance share the same process namespace\\nwith the host Amazon EC2 instance.\\n\\n\\nIf task is specified, all containers within the specified task share the\\nsame process namespace.\\n\\n\\nIf no value is specified, the default is a private namespace for each container.\\nFor more information, see PID settings (https://docs.docker.com/engine/reference/run/#pid-settings---pid)\\nin the Docker run reference.\\n\\n\\nIf the host PID mode is used, there's a heightened risk of undesired process\\nnamespace exposure. For more information, see Docker security (https://docs.docker.com/engine/security/security/).\\n\\n\\nThis parameter is not supported for Windows containers.\\n\\n\\nThis parameter is only supported for tasks that are hosted on Fargate if\\nthe tasks are using platform version 1.4.0 or later (Linux). This isn't supported\\nfor Windows containers on Fargate.\",\n     \"type\": \"string\"\n    },\n    \"placementConstraints\": {\n     \"description\": \"An array of placement constraint objects to use for the task. You can specify\\na maximum of 10 constraints for each task. This limit includes constraints\\nin the task definition and those specified at runtime.\",\n     \"items\": {\n      \"description\": \"The constraint on task placement in the task definition. For more information,\\nsee Task placement constraints (https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task-placement-constraints.html)\\nin the Amazon Elastic Container Service Developer Guide.\\n\\n\\nTask placement constraints aren't supported for tasks run on Fargate.\",\n      \"properties\": {\n       \"expression\": {\n        \"type\": \"string\"\n       },\n       \"type\": {\n        \"type\": \"string\"\n       }\n      },\n      \"type\": \"object\"\n     },\n     \"type\": \"array\"\n    },\n    \"proxyConfiguration\": {\n     \"description\": \"The configuration details for the App Mesh proxy.\\n\\n\\nFor tasks hosted on Amazon EC2 instances, the container instances require\\nat least version 1.26.0 of the container agent and at least version 1.26.0-1\\nof the ecs-init package to use a proxy configuration. If your container instances\\nare launched from the Amazon ECS-optimized AMI version 20190301 or later,\\nthen they contain the required versions of the container agent and ecs-init.\\nFor more information, see Amazon ECS-optimized AMI versions (https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-ami-versions.html)\\nin the Amazon Elastic Container Service Developer Guide.\",\n     \"properties\": {\n      \"containerName\": {\n       \"type\": \"string\"\n      },\n      \"properties\": {\n       \"items\": {\n        \"description\": \"A key-value pair object.\",\n        \"properties\": {\n         \"name\": {\n          \"type\": \"string\"\n         },\n         \"value\": {\n          \"type\": \"string\"\n         }\n        },\n        \"type\": \"object\"\n       },\n       \"type\": \"array\"\n      },\n      \"type\": {\n       \"type\": \"string\"\n      }\n     },\n     \"type\": \"object\"\n    },\n    \"requiresCompatibilities\": {\n     \"description\": \"The task launch type that Amazon ECS validates the task definition against.\\nA client exception is returned if the task definition doesn't validate against\\nthe compatibilities specified. If no value is specified, the parameter is\\nomitted from the response.\",\n     \"items\": {\n      \"type\": \"string\"\n     },\n     \"type\": \"array\"\n    },\n    \"runtimePlatform\": {\n     \"description\": \"The operating system that your tasks definitions run on. A platform family\\nis specified only for tasks using the Fargate launch type.\\n\\n\\nWhen you specify a task definition in a service, this value must match the\\nruntimePlatform value of the service.\",\n     \"properties\": {\n      \"cpuArchitecture\": {\n       \"type\": \"string\"\n      },\n      \"operatingSystemFamily\": {\n       \"type\": \"string\"\n      }\n     },\n     \"type\": \"object\"\n    },\n    \"tags\": {\n     \"description\": \"The metadata that you apply to the task definition to help you categorize\\nand organize them. Each tag consists of a key and an optional value. You\\ndefine both of them.\\n\\n\\nThe following basic restrictions apply to tags:\\n\\n\\n  - Maximum number of tags per resource - 50\\n\\n\\n  - For each resource, each tag key must be unique, and each tag key can\\n    have only one value.\\n\\n\\n  - Maximum key length - 128 Unicode characters in UTF-8\\n\\n\\n  - Maximum value length - 256 Unicode characters in UTF-8\\n\\n\\n  - If your tagging schema is used across multiple services and resources,\\n    remember that other services may have restrictions on allowed characters.\\n    Generally allowed characters are: letters, numbers, and spaces representable\\n    in UTF-8, and the following characters: + - = . _ : / @.\\n\\n\\n  - Tag keys and values are case-sensitive.\\n\\n\\n  - Do not use aws:, AWS:, or any upper or lowercase combination of such\\n    as a prefix for either keys or values as it is reserved for Amazon Web\\n    Services use. You cannot edit or delete tag keys or values with this prefix.\\n    Tags with this prefix do not count against your tags per resource limit.\",\n     \"items\": {\n      \"description\": \"The metadata that you apply to a resource to help you categorize and organize\\nthem. Each tag consists of a key and an optional value. You define them.\\n\\n\\nThe following basic restrictions apply to tags:\\n\\n\\n  - Maximum number of tags per resource - 50\\n\\n\\n  - For each resource, each tag key must be unique, and each tag key can\\n    have only one value.\\n\\n\\n  - Maximum key length - 128 Unicode characters in UTF-8\\n\\n\\n  - Maximum value length - 256 Unicode characters in UTF-8\\n\\n\\n  - If your tagging schema is used across multiple services and resources,\\n    remember that other services may have restrictions on allowed characters.\\n    Generally allowed characters are: letters, numbers, and spaces representable\\n    in UTF-8, and the following characters: + - = . _ : / @.\\n\\n\\n  - Tag keys and values are case-sensitive.\\n\\n\\n  - Do not use aws:, AWS:, or any upper or lowercase combination of such\\n    as a prefix for either keys or values as it is reserved for Amazon Web\\n    Services use. You cannot edit or delete tag keys or values with this prefix.\\n    Tags with this prefix do not count against your tags per resource limit.\",\n      \"properties\": {\n       \"key\": {\n        \"type\": \"string\"\n       },\n       \"value\": {\n        \"type\": \"string\"\n       }\n      },\n      \"type\": \"object\"\n     },\n     \"type\": \"array\"\n    },\n    \"taskRoleARN\": {\n     \"description\": \"The short name or full Amazon Resource Name (ARN) of the IAM role that containers\\nin this task can assume. All containers in this task are granted the permissions\\nthat are specified in this role. For more information, see IAM Roles for\\nTasks (https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task-iam-roles.html)\\nin the Amazon Elastic Container Service Developer Guide.\",\n     \"type\": \"string\"\n    },\n    \"taskRoleRef\": {\n     \"description\": \"AWSResourceReferenceWrapper provides a wrapper around *AWSResourceReference\\ntype to provide more user friendly syntax for references using 'from' field\\nEx:\\nAPIIDRef:\\n\\n\\n\\tfrom:\\n\\t  name: my-api\",\n     \"properties\": {\n      \"from\": {\n       \"description\": \"AWSResourceReference provides all the values necessary to reference another\\nk8s resource for finding the identifier(Id/ARN/Name)\",\n       \"properties\": {\n        \"name\": {\n         \"type\": \"string\"\n        }\n       },\n       \"type\": \"object\"\n      }\n     },\n     \"type\": \"object\"\n    },\n    \"volumes\": {\n     \"description\": \"A list of volume definitions in JSON format that containers in your task\\nmight use.\",\n     \"items\": {\n      \"description\": \"The data volume configuration for tasks launched using this task definition.\\nSpecifying a volume configuration in a task definition is optional. The volume\\nconfiguration may contain multiple volumes but only one volume configured\\nat launch is supported. Each volume defined in the volume configuration may\\nonly specify a name and one of either configuredAtLaunch, dockerVolumeConfiguration,\\nefsVolumeConfiguration, fsxWindowsFileServerVolumeConfiguration, or host.\\nIf an empty volume configuration is specified, by default Amazon ECS uses\\na host volume. For more information, see Using data volumes in tasks (https://docs.aws.amazon.com/AmazonECS/latest/developerguide/using_data_volumes.html).\",\n      \"properties\": {\n       \"configuredAtLaunch\": {\n        \"type\": \"boolean\"\n       },\n       \"dockerVolumeConfiguration\": {\n        \"description\": \"This parameter is specified when you're using Docker volumes. Docker volumes\\nare only supported when you're using the EC2 launch type. Windows containers\\nonly support the use of the local driver. To use bind mounts, specify a host\\ninstead.\",\n        \"properties\": {\n         \"autoprovision\": {\n          \"type\": \"boolean\"\n         },\n         \"driver\": {\n          \"type\": \"string\"\n         },\n         \"driverOpts\": {\n          \"additionalProperties\": {\n           \"type\": \"string\"\n          },\n          \"type\": \"object\"\n         },\n         \"labels\": {\n          \"additionalProperties\": {\n           \"type\": \"string\"\n          },\n          \"type\": \"object\"\n         },\n         \"scope\": {\n          \"type\": \"string\"\n         }\n        },\n        \"type\": \"object\"\n       },\n       \"efsVolumeConfiguration\": {\n        \"description\": \"This parameter is specified when you're using an Amazon Elastic File System\\nfile system for task storage. For more information, see Amazon EFS volumes\\n(https://docs.aws.amazon.com/AmazonECS/latest/developerguide/efs-volumes.html)\\nin the Amazon Elastic Container Service Developer Guide.\",\n        \"properties\": {\n         \"authorizationConfig\": {\n          \"description\": \"The authorization configuration details for the Amazon EFS file system.\",\n          \"properties\": {\n           \"accessPointID\": {\n            \"type\": \"string\"\n           },\n           \"iam\": {\n            \"type\": \"string\"\n           }\n          },\n          \"type\": \"object\"\n         },\n         \"fileSystemID\": {\n          \"type\": \"string\"\n         },\n         \"rootDirectory\": {\n          \"type\": \"string\"\n         },\n         \"transitEncryption\": {\n          \"type\": \"string\"\n         },\n         \"transitEncryptionPort\": {\n          \"format\": \"int64\",\n          \"type\": \"integer\"\n         }\n        },\n        \"type\": \"object\"\n       },\n       \"fsxWindowsFileServerVolumeConfiguration\": {\n        \"description\": \"This parameter is specified when you're using Amazon FSx for Windows File\\nServer (https://docs.aws.amazon.com/fsx/latest/WindowsGuide/what-is.html)\\nfile system for task storage.\\n\\n\\nFor more information and the input format, see Amazon FSx for Windows File\\nServer volumes (https://docs.aws.amazon.com/AmazonECS/latest/developerguide/wfsx-volumes.html)\\nin the Amazon Elastic Container Service Developer Guide.\",\n        \"properties\": {\n         \"authorizationConfig\": {\n          \"description\": \"The authorization configuration details for Amazon FSx for Windows File Server\\nfile system. See FSxWindowsFileServerVolumeConfiguration (https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_FSxWindowsFileServerVolumeConfiguration.html)\\nin the Amazon ECS API Reference.\\n\\n\\nFor more information and the input format, see Amazon FSx for Windows File\\nServer Volumes (https://docs.aws.amazon.com/AmazonECS/latest/developerguide/wfsx-volumes.html)\\nin the Amazon Elastic Container Service Developer Guide.\",\n          \"properties\": {\n           \"credentialsParameter\": {\n            \"type\": \"string\"\n           },\n           \"domain\": {\n            \"type\": \"string\"\n           }\n          },\n          \"type\": \"object\"\n         },\n         \"fileSystemID\": {\n          \"type\": \"string\"\n         },\n         \"rootDirectory\": {\n          \"type\": \"string\"\n         }\n        },\n        \"type\": \"object\"\n       },\n       \"host\": {\n        \"description\": \"Details on a container instance bind mount host volume.\",\n        \"properties\": {\n         \"sourcePath\": {\n          \"type\": \"string\"\n         }\n        },\n        \"type\": \"object\"\n       },\n       \"name\": {\n        \"type\": \"string\"\n       }\n      },\n      \"type\": \"object\"\n     },\n     \"type\": \"array\"\n    }\n   },\n   \"required\": [\n    \"containerDefinitions\",\n    \"family\"\n   ],\n   \"type\": \"object\"\n  }\n },\n \"title\": \"Task Definition\",\n \"type\": \"object\"\n}"
 }