{
  "id": "00000000-0000-0000-0000-000000000000",
  "kind": "Cluster",
  "apiVersion": "ecs.services.k8s.aws/v1alpha1",
  "displayName": "Cluster",
  "format": "JSON",
  "hostID": "00000000-0000-0000-0000-000000000000",
  "metadata": {
   "capabilities": "",
   "defaultData": "",
   "genealogy": "",
   "isAnnotation": false,
   "isNamespaced": true,
   "primaryColor": "#ED7100",
   "published": true,
   "secondaryColor": "",
   "shape": "rectangle",
   "shapePolygonPoints": "",
   "styleOverrides": "",
   "styles": "",
   "subCategory": "",
   "svgColor": "\u003csvg width=\"64px\" height=\"64px\" viewBox=\"0 0 64 64\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"\u003e\n    \u003ctitle\u003eIcon-Architecture/48/Arch_Amazon-Elastic-Container-Service_48\u003c/title\u003e\n    \u003cg id=\"Icon-Architecture/48/Arch_Amazon-Elastic-Container-Service_48\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\"\u003e\n        \u003cg id=\"Icon-Architecture-BG/48/Compute\" fill=\"#ED7100\"\u003e\n            \u003crect id=\"Rectangle\" x=\"0\" y=\"0\" width=\"64\" height=\"64\"\u003e\u003c/rect\u003e\n        \u003c/g\u003e\n        \u003cpath d=\"M50,36.3822466 L44,33.3822885 L44,25.0004058 C44,24.6374109 43.803,24.3024156 43.485,24.1264181 L35,19.412484 L35,12.7495773 L50,21.5724538 L50,36.3822466 Z M51.507,20.1384739 L34.507,10.1386138 C34.199,9.95761637 33.815,9.95461641 33.504,10.1326139 C33.192,10.3106114 33,10.6416068 33,11.0006018 L33,20.0004758 C33,20.3634707 33.197,20.6984661 33.515,20.8744636 L42,25.5883976 L42,34.0002799 C42,34.3792746 42.214,34.7252697 42.553,34.8952674 L50.553,38.8952114 C50.694,38.9652104 50.847,39.0002099 51,39.0002099 C51.183,39.0002099 51.365,38.9502106 51.525,38.851212 C51.82,38.6682146 52,38.3472191 52,38.0002239 L52,21.0004618 C52,20.6464668 51.812,20.3184714 51.507,20.1384739 L51.507,20.1384739 Z M32,51.8280304 L15,41.4391758 L15,21.5544541 L29,12.8045765 L29,19.4464836 L21.47,24.1524177 C21.178,24.3354152 21,24.6554107 21,25.0004058 L21,38.0002239 C21,38.351219 21.185,38.6772144 21.485,38.8572119 L31.485,44.857128 C31.789,45.0401254 32.167,45.0481253 32.479,44.8781277 L42.988,39.1462079 L48.035,42.0291675 L32,51.8280304 Z M50.496,41.1321801 L43.496,37.1322361 C43.194,36.9592385 42.825,36.9562385 42.521,37.1222362 L32.023,42.8481561 L23,37.4342318 L23,25.5543981 L30.53,20.848464 C30.822,20.6654665 31,20.345471 31,20.0004758 L31,11.0006018 C31,10.6366069 30.803,10.3026115 30.484,10.125614 C30.168,9.9486165 29.778,9.95961634 29.47,10.1526136 L13.47,20.1524737 C13.178,20.3354711 13,20.6554667 13,21.0004618 L13,42.0001679 C13,42.3481631 13.182,42.6711585 13.479,42.854156 L31.479,53.854002 C31.639,53.9510007 31.819,54 32,54 C32.181,54 32.361,53.9510007 32.521,53.854002 L50.521,42.854156 C50.823,42.6691586 51.005,42.3391632 51.0001004,41.9851681 C50.995,41.6321731 50.803,41.3071776 50.496,41.1321801 L50.496,41.1321801 Z\" id=\"Amazon-Elastic-Container-Service_Icon_48_Squid\" fill=\"#FFFFFF\"\u003e\u003c/path\u003e\n    \u003c/g\u003e\n\u003c/svg\u003e",
   "svgComplete": "",
   "svgWhite": "\u003csvg width=\"64px\" height=\"64px\" viewBox=\"0 0 64 64\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"\u003e\n    \u003ctitle\u003eIcon-Architecture/48/Arch_Amazon-Elastic-Container-Service_48\u003c/title\u003e\n    \u003cg id=\"Icon-Architecture/48/Arch_Amazon-Elastic-Container-Service_48\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\"\u003e\n        \u003cg id=\"Icon-Architecture-BG/48/Compute\" fill=\"#ED7100\"\u003e\n            \u003crect id=\"Rectangle\" x=\"0\" y=\"0\" width=\"64\" height=\"64\"\u003e\u003c/rect\u003e\n        \u003c/g\u003e\n        \u003cpath d=\"M50,36.3822466 L44,33.3822885 L44,25.0004058 C44,24.6374109 43.803,24.3024156 43.485,24.1264181 L35,19.412484 L35,12.7495773 L50,21.5724538 L50,36.3822466 Z M51.507,20.1384739 L34.507,10.1386138 C34.199,9.95761637 33.815,9.95461641 33.504,10.1326139 C33.192,10.3106114 33,10.6416068 33,11.0006018 L33,20.0004758 C33,20.3634707 33.197,20.6984661 33.515,20.8744636 L42,25.5883976 L42,34.0002799 C42,34.3792746 42.214,34.7252697 42.553,34.8952674 L50.553,38.8952114 C50.694,38.9652104 50.847,39.0002099 51,39.0002099 C51.183,39.0002099 51.365,38.9502106 51.525,38.851212 C51.82,38.6682146 52,38.3472191 52,38.0002239 L52,21.0004618 C52,20.6464668 51.812,20.3184714 51.507,20.1384739 L51.507,20.1384739 Z M32,51.8280304 L15,41.4391758 L15,21.5544541 L29,12.8045765 L29,19.4464836 L21.47,24.1524177 C21.178,24.3354152 21,24.6554107 21,25.0004058 L21,38.0002239 C21,38.351219 21.185,38.6772144 21.485,38.8572119 L31.485,44.857128 C31.789,45.0401254 32.167,45.0481253 32.479,44.8781277 L42.988,39.1462079 L48.035,42.0291675 L32,51.8280304 Z M50.496,41.1321801 L43.496,37.1322361 C43.194,36.9592385 42.825,36.9562385 42.521,37.1222362 L32.023,42.8481561 L23,37.4342318 L23,25.5543981 L30.53,20.848464 C30.822,20.6654665 31,20.345471 31,20.0004758 L31,11.0006018 C31,10.6366069 30.803,10.3026115 30.484,10.125614 C30.168,9.9486165 29.778,9.95961634 29.47,10.1526136 L13.47,20.1524737 C13.178,20.3354711 13,20.6554667 13,21.0004618 L13,42.0001679 C13,42.3481631 13.182,42.6711585 13.479,42.854156 L31.479,53.854002 C31.639,53.9510007 31.819,54 32,54 C32.181,54 32.361,53.9510007 32.521,53.854002 L50.521,42.854156 C50.823,42.6691586 51.005,42.3391632 51.0001004,41.9851681 C50.995,41.6321731 50.803,41.3071776 50.496,41.1321801 L50.496,41.1321801 Z\" id=\"Amazon-Elastic-Container-Service_Icon_48_Squid\" fill=\"#FFFFFF\"\u003e\u003c/path\u003e\n    \u003c/g\u003e\n\u003c/svg\u003e"
  },
  "model": {
   "id": "00000000-0000-0000-0000-000000000000",
   "name": "aws-ecs-controller",
   "version": "v0.0.6",
   "displayName": "AWS Elastic Container Service",
   "status": "",
   "hostID": "00000000-0000-0000-0000-000000000000",
   "category": {
    "name": "Provisioning",
    "metadata": null
   },
   "metadata": {
    "isAnnotation": false,
    "published": true,
    "subCategory": "Automation \u0026 Configuration",
    "svgColor": "\u003c?xml version=\"1.0\" encoding=\"UTF-8\"?\u003e\u003c!DOCTYPE svg\u003e\u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 64 64\" version=\"1.1\" xmlns:_xmlns=\"xmlns\" _xmlns:xlink=\"http://www.w3.org/1999/xlink\"\u003e\n    \u003ctitle xmlns=\"http://www.w3.org/2000/svg\"\u003eIcon-Architecture/48/Arch_Amazon-Elastic-Container-Service_48\u003c/title\u003e\n    \u003cg xmlns=\"http://www.w3.org/2000/svg\" id=\"Icon-Architecture/48/Arch_Amazon-Elastic-Container-Service_48\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\"\u003e\n        \u003cg xmlns=\"http://www.w3.org/2000/svg\" id=\"Icon-Architecture-BG/48/Compute\" fill=\"#ED7100\"\u003e\n            \u003crect xmlns=\"http://www.w3.org/2000/svg\" id=\"Rectangle\" x=\"0\" y=\"0\" width=\"64\" height=\"64\"\u003e\u003c/rect\u003e\n        \u003c/g\u003e\n        \u003cpath xmlns=\"http://www.w3.org/2000/svg\" d=\"M50,36.3822466 L44,33.3822885 L44,25.0004058 C44,24.6374109 43.803,24.3024156 43.485,24.1264181 L35,19.412484 L35,12.7495773 L50,21.5724538 L50,36.3822466 Z M51.507,20.1384739 L34.507,10.1386138 C34.199,9.95761637 33.815,9.95461641 33.504,10.1326139 C33.192,10.3106114 33,10.6416068 33,11.0006018 L33,20.0004758 C33,20.3634707 33.197,20.6984661 33.515,20.8744636 L42,25.5883976 L42,34.0002799 C42,34.3792746 42.214,34.7252697 42.553,34.8952674 L50.553,38.8952114 C50.694,38.9652104 50.847,39.0002099 51,39.0002099 C51.183,39.0002099 51.365,38.9502106 51.525,38.851212 C51.82,38.6682146 52,38.3472191 52,38.0002239 L52,21.0004618 C52,20.6464668 51.812,20.3184714 51.507,20.1384739 L51.507,20.1384739 Z M32,51.8280304 L15,41.4391758 L15,21.5544541 L29,12.8045765 L29,19.4464836 L21.47,24.1524177 C21.178,24.3354152 21,24.6554107 21,25.0004058 L21,38.0002239 C21,38.351219 21.185,38.6772144 21.485,38.8572119 L31.485,44.857128 C31.789,45.0401254 32.167,45.0481253 32.479,44.8781277 L42.988,39.1462079 L48.035,42.0291675 L32,51.8280304 Z M50.496,41.1321801 L43.496,37.1322361 C43.194,36.9592385 42.825,36.9562385 42.521,37.1222362 L32.023,42.8481561 L23,37.4342318 L23,25.5543981 L30.53,20.848464 C30.822,20.6654665 31,20.345471 31,20.0004758 L31,11.0006018 C31,10.6366069 30.803,10.3026115 30.484,10.125614 C30.168,9.9486165 29.778,9.95961634 29.47,10.1526136 L13.47,20.1524737 C13.178,20.3354711 13,20.6554667 13,21.0004618 L13,42.0001679 C13,42.3481631 13.182,42.6711585 13.479,42.854156 L31.479,53.854002 C31.639,53.9510007 31.819,54 32,54 C32.181,54 32.361,53.9510007 32.521,53.854002 L50.521,42.854156 C50.823,42.6691586 51.005,42.3391632 51.0001004,41.9851681 C50.995,41.6321731 50.803,41.3071776 50.496,41.1321801 L50.496,41.1321801 Z\" id=\"Amazon-Elastic-Container-Service_Icon_48_Squid\" fill=\"#FFFFFF\"\u003e\u003c/path\u003e\n    \u003c/g\u003e\n\u003c/svg\u003e",
    "svgComplete": "",
    "svgWhite": "\u003c?xml version=\"1.0\" encoding=\"UTF-8\"?\u003e\u003c!DOCTYPE svg\u003e\u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 64 64\" version=\"1.1\" xmlns:_xmlns=\"xmlns\" _xmlns:xlink=\"http://www.w3.org/1999/xlink\"\u003e\n    \u003ctitle xmlns=\"http://www.w3.org/2000/svg\"\u003eIcon-Architecture/48/Arch_Amazon-Elastic-Container-Service_48\u003c/title\u003e\n    \u003cg xmlns=\"http://www.w3.org/2000/svg\" id=\"Icon-Architecture/48/Arch_Amazon-Elastic-Container-Service_48\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\"\u003e\n        \u003cg xmlns=\"http://www.w3.org/2000/svg\" id=\"Icon-Architecture-BG/48/Compute\" fill=\"#ED7100\"\u003e\n            \u003crect xmlns=\"http://www.w3.org/2000/svg\" id=\"Rectangle\" x=\"0\" y=\"0\" width=\"64\" height=\"64\"\u003e\u003c/rect\u003e\n        \u003c/g\u003e\n        \u003cpath xmlns=\"http://www.w3.org/2000/svg\" d=\"M50,36.3822466 L44,33.3822885 L44,25.0004058 C44,24.6374109 43.803,24.3024156 43.485,24.1264181 L35,19.412484 L35,12.7495773 L50,21.5724538 L50,36.3822466 Z M51.507,20.1384739 L34.507,10.1386138 C34.199,9.95761637 33.815,9.95461641 33.504,10.1326139 C33.192,10.3106114 33,10.6416068 33,11.0006018 L33,20.0004758 C33,20.3634707 33.197,20.6984661 33.515,20.8744636 L42,25.5883976 L42,34.0002799 C42,34.3792746 42.214,34.7252697 42.553,34.8952674 L50.553,38.8952114 C50.694,38.9652104 50.847,39.0002099 51,39.0002099 C51.183,39.0002099 51.365,38.9502106 51.525,38.851212 C51.82,38.6682146 52,38.3472191 52,38.0002239 L52,21.0004618 C52,20.6464668 51.812,20.3184714 51.507,20.1384739 L51.507,20.1384739 Z M32,51.8280304 L15,41.4391758 L15,21.5544541 L29,12.8045765 L29,19.4464836 L21.47,24.1524177 C21.178,24.3354152 21,24.6554107 21,25.0004058 L21,38.0002239 C21,38.351219 21.185,38.6772144 21.485,38.8572119 L31.485,44.857128 C31.789,45.0401254 32.167,45.0481253 32.479,44.8781277 L42.988,39.1462079 L48.035,42.0291675 L32,51.8280304 Z M50.496,41.1321801 L43.496,37.1322361 C43.194,36.9592385 42.825,36.9562385 42.521,37.1222362 L32.023,42.8481561 L23,37.4342318 L23,25.5543981 L30.53,20.848464 C30.822,20.6654665 31,20.345471 31,20.0004758 L31,11.0006018 C31,10.6366069 30.803,10.3026115 30.484,10.125614 C30.168,9.9486165 29.778,9.95961634 29.47,10.1526136 L13.47,20.1524737 C13.178,20.3354711 13,20.6554667 13,21.0004618 L13,42.0001679 C13,42.3481631 13.182,42.6711585 13.479,42.854156 L31.479,53.854002 C31.639,53.9510007 31.819,54 32,54 C32.181,54 32.361,53.9510007 32.521,53.854002 L50.521,42.854156 C50.823,42.6691586 51.005,42.3391632 51.0001004,41.9851681 C50.995,41.6321731 50.803,41.3071776 50.496,41.1321801 L50.496,41.1321801 Z\" id=\"Amazon-Elastic-Container-Service_Icon_48_Squid\" fill=\"#FFFFFF\"\u003e\u003c/path\u003e\n    \u003c/g\u003e\n\u003c/svg\u003e"
   },
   "components": null,
   "relationships": null
  },
  "schema": "{\n \"description\": \"Cluster is the Schema for the Clusters API\",\n \"properties\": {\n  \"spec\": {\n   \"description\": \"ClusterSpec defines the desired state of Cluster.\\n\\n\\nA regional grouping of one or more container instances where you can run\\ntask requests. Each account receives a default cluster the first time you\\nuse the Amazon ECS service, but you may also create other clusters. Clusters\\nmay contain more than one instance type simultaneously.\",\n   \"properties\": {\n    \"capacityProviders\": {\n     \"description\": \"The short name of one or more capacity providers to associate with the cluster.\\nA capacity provider must be associated with a cluster before it can be included\\nas part of the default capacity provider strategy of the cluster or used\\nin a capacity provider strategy when calling the CreateService (https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_CreateService.html)\\nor RunTask (https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_RunTask.html)\\nactions.\\n\\n\\nIf specifying a capacity provider that uses an Auto Scaling group, the capacity\\nprovider must be created but not associated with another cluster. New Auto\\nScaling group capacity providers can be created with the CreateCapacityProvider\\n(https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_CreateCapacityProvider.html)\\nAPI operation.\\n\\n\\nTo use a Fargate capacity provider, specify either the FARGATE or FARGATE_SPOT\\ncapacity providers. The Fargate capacity providers are available to all accounts\\nand only need to be associated with a cluster to be used.\\n\\n\\nThe PutCapacityProvider (https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_PutCapacityProvider.html)\\nAPI operation is used to update the list of available capacity providers\\nfor a cluster after the cluster is created.\",\n     \"items\": {\n      \"type\": \"string\"\n     },\n     \"type\": \"array\"\n    },\n    \"configuration\": {\n     \"description\": \"The execute command configuration for the cluster.\",\n     \"properties\": {\n      \"executeCommandConfiguration\": {\n       \"description\": \"The details of the execute command configuration.\",\n       \"properties\": {\n        \"kmsKeyID\": {\n         \"type\": \"string\"\n        },\n        \"logConfiguration\": {\n         \"description\": \"The log configuration for the results of the execute command actions. The\\nlogs can be sent to CloudWatch Logs or an Amazon S3 bucket.\",\n         \"properties\": {\n          \"cloudWatchEncryptionEnabled\": {\n           \"type\": \"boolean\"\n          },\n          \"cloudWatchLogGroupName\": {\n           \"type\": \"string\"\n          },\n          \"s3BucketName\": {\n           \"type\": \"string\"\n          },\n          \"s3EncryptionEnabled\": {\n           \"type\": \"boolean\"\n          },\n          \"s3KeyPrefix\": {\n           \"type\": \"string\"\n          }\n         },\n         \"type\": \"object\"\n        },\n        \"logging\": {\n         \"type\": \"string\"\n        }\n       },\n       \"type\": \"object\"\n      }\n     },\n     \"type\": \"object\"\n    },\n    \"defaultCapacityProviderStrategy\": {\n     \"description\": \"The capacity provider strategy to set as the default for the cluster. After\\na default capacity provider strategy is set for a cluster, when you call\\nthe CreateService (https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_CreateService.html)\\nor RunTask (https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_RunTask.html)\\nAPIs with no capacity provider strategy or launch type specified, the default\\ncapacity provider strategy for the cluster is used.\\n\\n\\nIf a default capacity provider strategy isn't defined for a cluster when\\nit was created, it can be defined later with the PutClusterCapacityProviders\\nAPI operation.\",\n     \"items\": {\n      \"description\": \"The details of a capacity provider strategy. A capacity provider strategy\\ncan be set when using the RunTask or CreateCluster APIs or as the default\\ncapacity provider strategy for a cluster with the CreateCluster API.\\n\\n\\nOnly capacity providers that are already associated with a cluster and have\\nan ACTIVE or UPDATING status can be used in a capacity provider strategy.\\nThe PutClusterCapacityProviders API is used to associate a capacity provider\\nwith a cluster.\\n\\n\\nIf specifying a capacity provider that uses an Auto Scaling group, the capacity\\nprovider must already be created. New Auto Scaling group capacity providers\\ncan be created with the CreateCapacityProvider API operation.\\n\\n\\nTo use a Fargate capacity provider, specify either the FARGATE or FARGATE_SPOT\\ncapacity providers. The Fargate capacity providers are available to all accounts\\nand only need to be associated with a cluster to be used in a capacity provider\\nstrategy.\\n\\n\\nA capacity provider strategy may contain a maximum of 6 capacity providers.\",\n      \"properties\": {\n       \"base\": {\n        \"format\": \"int64\",\n        \"type\": \"integer\"\n       },\n       \"capacityProvider\": {\n        \"type\": \"string\"\n       },\n       \"weight\": {\n        \"format\": \"int64\",\n        \"type\": \"integer\"\n       }\n      },\n      \"type\": \"object\"\n     },\n     \"type\": \"array\"\n    },\n    \"name\": {\n     \"description\": \"The name of your cluster. If you don't specify a name for your cluster, you\\ncreate a cluster that's named default. Up to 255 letters (uppercase and lowercase),\\nnumbers, underscores, and hyphens are allowed.\",\n     \"type\": \"string\"\n    },\n    \"serviceConnectDefaults\": {\n     \"description\": \"Use this parameter to set a default Service Connect namespace. After you\\nset a default Service Connect namespace, any new services with Service Connect\\nturned on that are created in the cluster are added as client services in\\nthe namespace. This setting only applies to new services that set the enabled\\nparameter to true in the ServiceConnectConfiguration. You can set the namespace\\nof each service individually in the ServiceConnectConfiguration to override\\nthis default parameter.\\n\\n\\nTasks that run in a namespace can use short names to connect to services\\nin the namespace. Tasks can connect to services across all of the clusters\\nin the namespace. Tasks connect through a managed proxy container that collects\\nlogs and metrics for increased visibility. Only the tasks that Amazon ECS\\nservices create are supported with Service Connect. For more information,\\nsee Service Connect (https://docs.aws.amazon.com/AmazonECS/latest/developerguide/service-connect.html)\\nin the Amazon Elastic Container Service Developer Guide.\",\n     \"properties\": {\n      \"namespace\": {\n       \"type\": \"string\"\n      }\n     },\n     \"type\": \"object\"\n    },\n    \"settings\": {\n     \"description\": \"The setting to use when creating a cluster. This parameter is used to turn\\non CloudWatch Container Insights for a cluster. If this value is specified,\\nit overrides the containerInsights value set with PutAccountSetting or PutAccountSettingDefault.\",\n     \"items\": {\n      \"description\": \"The settings to use when creating a cluster. This parameter is used to turn\\non CloudWatch Container Insights for a cluster.\",\n      \"properties\": {\n       \"name\": {\n        \"type\": \"string\"\n       },\n       \"value\": {\n        \"type\": \"string\"\n       }\n      },\n      \"type\": \"object\"\n     },\n     \"type\": \"array\"\n    },\n    \"tags\": {\n     \"description\": \"The metadata that you apply to the cluster to help you categorize and organize\\nthem. Each tag consists of a key and an optional value. You define both.\\n\\n\\nThe following basic restrictions apply to tags:\\n\\n\\n  - Maximum number of tags per resource - 50\\n\\n\\n  - For each resource, each tag key must be unique, and each tag key can\\n    have only one value.\\n\\n\\n  - Maximum key length - 128 Unicode characters in UTF-8\\n\\n\\n  - Maximum value length - 256 Unicode characters in UTF-8\\n\\n\\n  - If your tagging schema is used across multiple services and resources,\\n    remember that other services may have restrictions on allowed characters.\\n    Generally allowed characters are: letters, numbers, and spaces representable\\n    in UTF-8, and the following characters: + - = . _ : / @.\\n\\n\\n  - Tag keys and values are case-sensitive.\\n\\n\\n  - Do not use aws:, AWS:, or any upper or lowercase combination of such\\n    as a prefix for either keys or values as it is reserved for Amazon Web\\n    Services use. You cannot edit or delete tag keys or values with this prefix.\\n    Tags with this prefix do not count against your tags per resource limit.\",\n     \"items\": {\n      \"description\": \"The metadata that you apply to a resource to help you categorize and organize\\nthem. Each tag consists of a key and an optional value. You define them.\\n\\n\\nThe following basic restrictions apply to tags:\\n\\n\\n  - Maximum number of tags per resource - 50\\n\\n\\n  - For each resource, each tag key must be unique, and each tag key can\\n    have only one value.\\n\\n\\n  - Maximum key length - 128 Unicode characters in UTF-8\\n\\n\\n  - Maximum value length - 256 Unicode characters in UTF-8\\n\\n\\n  - If your tagging schema is used across multiple services and resources,\\n    remember that other services may have restrictions on allowed characters.\\n    Generally allowed characters are: letters, numbers, and spaces representable\\n    in UTF-8, and the following characters: + - = . _ : / @.\\n\\n\\n  - Tag keys and values are case-sensitive.\\n\\n\\n  - Do not use aws:, AWS:, or any upper or lowercase combination of such\\n    as a prefix for either keys or values as it is reserved for Amazon Web\\n    Services use. You cannot edit or delete tag keys or values with this prefix.\\n    Tags with this prefix do not count against your tags per resource limit.\",\n      \"properties\": {\n       \"key\": {\n        \"type\": \"string\"\n       },\n       \"value\": {\n        \"type\": \"string\"\n       }\n      },\n      \"type\": \"object\"\n     },\n     \"type\": \"array\"\n    }\n   },\n   \"type\": \"object\"\n  }\n },\n \"title\": \"Cluster\",\n \"type\": \"object\"\n}"
 }