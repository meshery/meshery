{
  "id": "00000000-0000-0000-0000-000000000000",
  "schemaVersion": "components.meshery.io/v1beta1",
  "version": "v1.0.0",
  "displayName": "HTTP Route",
  "description": "",
  "format": "JSON",
  "model": {
    "id": "00000000-0000-0000-0000-000000000000",
    "schemaVersion": "models.meshery.io/v1beta1",
    "version": "v1.0.0",
    "name": "gko",
    "displayName": "Gko",
    "status": "ignored",
    "registrant": {
      "id": "00000000-0000-0000-0000-000000000000",
      "name": "Artifact Hub",
      "credential_id": "00000000-0000-0000-0000-000000000000",
      "type": "registry",
      "sub_type": "",
      "kind": "artifacthub",
      "status": "discovered",
      "user_id": "00000000-0000-0000-0000-000000000000",
      "created_at": "0001-01-01T00:00:00Z",
      "updated_at": "0001-01-01T00:00:00Z",
      "deleted_at": "0001-01-01T00:00:00Z"
    },
    "connection_id": "00000000-0000-0000-0000-000000000000",
    "category": {
      "id": "00000000-0000-0000-0000-000000000000",
      "name": "Uncategorized"
    },
    "subCategory": "Uncategorized",
    "metadata": {
      "isAnnotation": false,
      "primaryColor": "#00B39F",
      "secondaryColor": "#00D3A9",
      "shape": "circle",
      "source_uri": "https://helm.gravitee.io/helm/gko/gko-4.8.0.tgz",
      "styleOverrides": "",
      "svgColor": "\u003c?xml version=\"1.0\" encoding=\"UTF-8\"?\u003e\u003c!DOCTYPE svg\u003e\u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 32 32\" fill=\"none\"\u003e\n\u003cg xmlns=\"http://www.w3.org/2000/svg\" clip-path=\"url(#clip0_36_80)\"\u003e\n\u003cpath xmlns=\"http://www.w3.org/2000/svg\" d=\"M16.4632 7.69351V15.2015L22.9702 11.4346L16.4632 7.69351Z\" fill=\"white\"\u003e\u003c/path\u003e\n\u003cpath xmlns=\"http://www.w3.org/2000/svg\" d=\"M16.4632 16.7705V24.3157L23.0307 20.5607L16.4632 16.7705Z\" fill=\"white\"\u003e\u003c/path\u003e\n\u003cpath xmlns=\"http://www.w3.org/2000/svg\" d=\"M15.5274 15.1502V7.75632L9.10194 11.4416L15.5274 15.1502Z\" fill=\"white\" fill-opacity=\"0.8\"\u003e\u003c/path\u003e\n\u003cpath xmlns=\"http://www.w3.org/2000/svg\" d=\"M2.63699 24.2878C3.89756 26.3157 5.60178 28.031 7.62134 29.3047V21.4033L2.63699 24.2878Z\" fill=\"white\" fill-opacity=\"0.8\"\u003e\u003c/path\u003e\n\u003cpath xmlns=\"http://www.w3.org/2000/svg\" d=\"M15.5274 24.2785V16.8264L9.08579 20.556L15.5274 24.2785Z\" fill=\"white\" fill-opacity=\"0.8\"\u003e\u003c/path\u003e\n\u003cpath xmlns=\"http://www.w3.org/2000/svg\" d=\"M8.55965 28.8344L15.0829 25.1049L8.55965 21.3335V28.8344Z\" fill=\"white\"\u003e\u003c/path\u003e\n\u003cpath xmlns=\"http://www.w3.org/2000/svg\" d=\"M23.4753 28.8742V21.3848L16.9615 25.1096L23.4753 28.8742Z\" fill=\"white\" fill-opacity=\"0.8\"\u003e\u003c/path\u003e\n\u003cpath xmlns=\"http://www.w3.org/2000/svg\" d=\"M29.852 23.4194C30.9655 21.341 31.5949 19.0378 31.6935 16.6819L24.9119 20.5651L29.852 23.4194Z\" fill=\"white\" fill-opacity=\"0.8\"\u003e\u003c/path\u003e\n\u003cpath xmlns=\"http://www.w3.org/2000/svg\" d=\"M24.4136 19.7691L30.96 16.0256L24.4136 12.2634V19.7691Z\" fill=\"white\"\u003e\u003c/path\u003e\n\u003cpath xmlns=\"http://www.w3.org/2000/svg\" d=\"M23.4755 10.6455V3.20041L16.9919 6.91827L23.4755 10.6455Z\" fill=\"white\" fill-opacity=\"0.8\"\u003e\u003c/path\u003e\n\u003cpath xmlns=\"http://www.w3.org/2000/svg\" d=\"M23.4754 19.7364V12.2239L16.9779 15.986L23.4754 19.7364Z\" fill=\"white\" fill-opacity=\"0.8\"\u003e\u003c/path\u003e\n\u003cpath xmlns=\"http://www.w3.org/2000/svg\" d=\"M8.55965 12.2099V19.7784L15.1061 15.9882L8.55965 12.2099Z\" fill=\"white\"\u003e\u003c/path\u003e\n\u003cpath xmlns=\"http://www.w3.org/2000/svg\" d=\"M15.5274 0.285706C13.1176 0.353534 10.756 0.977397 8.6271 2.10855L15.5274 6.06621V0.285706Z\" fill=\"white\" fill-opacity=\"0.8\"\u003e\u003c/path\u003e\n\u003cpath xmlns=\"http://www.w3.org/2000/svg\" d=\"M8.55965 3.1492V10.6734L15.1107 6.91597L8.55965 3.1492Z\" fill=\"white\"\u003e\u003c/path\u003e\n\u003cpath xmlns=\"http://www.w3.org/2000/svg\" d=\"M7.62134 2.69299C5.60228 3.96735 3.89818 5.6826 2.63699 7.7099L7.62134 10.5873V2.69299Z\" fill=\"white\" fill-opacity=\"0.8\"\u003e\u003c/path\u003e\n\u003cpath xmlns=\"http://www.w3.org/2000/svg\" d=\"M23.4335 2.14811C21.2869 0.992986 18.9001 0.355226 16.4632 0.285706V6.14069L23.4335 2.14811Z\" fill=\"white\"\u003e\u003c/path\u003e\n\u003cpath xmlns=\"http://www.w3.org/2000/svg\" d=\"M0.285713 16.5517C0.367085 18.9754 1.01023 21.3471 2.16447 23.4799L7.21396 20.5559L0.285713 16.5517Z\" fill=\"white\"\u003e\u003c/path\u003e\n\u003cpath xmlns=\"http://www.w3.org/2000/svg\" d=\"M2.16447 8.51996C1.01384 10.6433 0.370833 13.0043 0.285713 15.4178L7.22097 11.4393L2.16447 8.51996Z\" fill=\"white\"\u003e\u003c/path\u003e\n\u003cpath xmlns=\"http://www.w3.org/2000/svg\" d=\"M8.61544 29.8822C10.7469 31.0189 13.1128 31.6461 15.5274 31.7143V25.9291L8.61544 29.8822Z\" fill=\"white\" fill-opacity=\"0.8\"\u003e\u003c/path\u003e\n\u003cpath xmlns=\"http://www.w3.org/2000/svg\" d=\"M29.3675 7.73539C28.1143 5.71396 26.4208 4.00147 24.4136 2.72543V10.5987L29.3675 7.73539Z\" fill=\"white\"\u003e\u003c/path\u003e\n\u003cpath xmlns=\"http://www.w3.org/2000/svg\" d=\"M24.4136 29.2791C26.4312 27.994 28.1314 26.2684 29.3863 24.2321L24.4136 21.3591V29.2791Z\" fill=\"white\"\u003e\u003c/path\u003e\n\u003cpath xmlns=\"http://www.w3.org/2000/svg\" d=\"M31.7143 15.3738C31.6251 12.9835 30.9879 10.6458 29.8518 8.54102L24.8441 11.4325L31.7143 15.3738Z\" fill=\"white\" fill-opacity=\"0.8\"\u003e\u003c/path\u003e\n\u003cpath xmlns=\"http://www.w3.org/2000/svg\" d=\"M16.4632 31.7143C18.8725 31.6467 21.2333 31.0229 23.3613 29.8914L16.4632 25.8942V31.7143Z\" fill=\"white\"\u003e\u003c/path\u003e\n\u003cpath xmlns=\"http://www.w3.org/2000/svg\" d=\"M7.62141 19.711V12.2892L1.17738 15.9838L7.62141 19.711Z\" fill=\"white\" fill-opacity=\"0.8\"\u003e\u003c/path\u003e\n\u003c/g\u003e\n\u003cdefs xmlns=\"http://www.w3.org/2000/svg\"\u003e\n\u003cclipPath xmlns=\"http://www.w3.org/2000/svg\" id=\"clip0_36_80\"\u003e\n\u003crect xmlns=\"http://www.w3.org/2000/svg\" width=\"32\" height=\"32\" fill=\"white\"\u003e\u003c/rect\u003e\n\u003c/clipPath\u003e\n\u003c/defs\u003e\n\u003c/svg\u003e",
      "svgComplete": "",
      "svgWhite": "\u003c?xml version=\"1.0\" encoding=\"UTF-8\"?\u003e\u003c!DOCTYPE svg\u003e\u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 32 32\" fill=\"none\"\u003e\u003cpath xmlns=\"http://www.w3.org/2000/svg\" d=\"M16.405 8.732v6.57l5.694-3.297-5.694-3.273Zm0 7.942v6.602l5.747-3.285-5.747-3.317Z\" fill=\"#fff\"\u003e\u003c/path\u003e\u003cpath xmlns=\"http://www.w3.org/2000/svg\" d=\"M15.586 15.256v-6.47l-5.622 3.225 5.622 3.245ZM4.307 23.252a13.809 13.809 0 0 0 4.362 4.39v-6.914l-4.362 2.524Zm11.279-.008v-6.52L9.95 19.985l5.636 3.258Z\" fill=\"#fff\" fill-opacity=\".8\"\u003e\u003c/path\u003e\u003cpath xmlns=\"http://www.w3.org/2000/svg\" d=\"m9.49 27.23 5.707-3.263-5.707-3.3v6.563Z\" fill=\"#fff\"\u003e\u003c/path\u003e\u003cpath xmlns=\"http://www.w3.org/2000/svg\" d=\"M22.54 27.265v-6.553l-5.699 3.259 5.7 3.294Zm5.58-4.773a13.697 13.697 0 0 0 1.612-5.895l-5.934 3.397 4.323 2.498Z\" fill=\"#fff\" fill-opacity=\".8\"\u003e\u003c/path\u003e\u003cpath xmlns=\"http://www.w3.org/2000/svg\" d=\"m23.362 19.298 5.728-3.276-5.728-3.291v6.567Z\" fill=\"#fff\"\u003e\u003c/path\u003e\u003cpath xmlns=\"http://www.w3.org/2000/svg\" d=\"M22.541 11.315V4.8l-5.673 3.253 5.673 3.262Zm0 7.955v-6.574l-5.685 3.292 5.685 3.281Z\" fill=\"#fff\" fill-opacity=\".8\"\u003e\u003c/path\u003e\u003cpath xmlns=\"http://www.w3.org/2000/svg\" d=\"M9.49 12.684v6.622l5.728-3.316-5.728-3.306Z\" fill=\"#fff\"\u003e\u003c/path\u003e\u003cpath xmlns=\"http://www.w3.org/2000/svg\" d=\"M15.586 2.25a13.69 13.69 0 0 0-6.037 1.595l6.037 3.463V2.25Z\" fill=\"#fff\" fill-opacity=\".8\"\u003e\u003c/path\u003e\u003cpath xmlns=\"http://www.w3.org/2000/svg\" d=\"M9.49 4.756v6.583l5.732-3.288L9.49 4.756Z\" fill=\"#fff\"\u003e\u003c/path\u003e\u003cpath xmlns=\"http://www.w3.org/2000/svg\" d=\"M8.669 4.356a13.83 13.83 0 0 0-4.362 4.39l4.362 2.518V4.356Z\" fill=\"#fff\" fill-opacity=\".8\"\u003e\u003c/path\u003e\u003cpath xmlns=\"http://www.w3.org/2000/svg\" d=\"M22.504 3.88a13.695 13.695 0 0 0-6.099-1.63v5.123l6.1-3.493ZM2.25 16.483c.071 2.12.634 4.196 1.644 6.062l4.418-2.559-6.062-3.503Zm1.644-7.028a13.68 13.68 0 0 0-1.644 6.036l6.068-3.482-4.424-2.554Z\" fill=\"#fff\"\u003e\u003c/path\u003e\u003cpath xmlns=\"http://www.w3.org/2000/svg\" d=\"M9.539 28.147a13.673 13.673 0 0 0 6.047 1.603v-5.062L9.54 28.147Z\" fill=\"#fff\" fill-opacity=\".8\"\u003e\u003c/path\u003e\u003cpath xmlns=\"http://www.w3.org/2000/svg\" d=\"M27.697 8.768a13.83 13.83 0 0 0-4.335-4.383v6.889l4.335-2.506ZM23.362 27.62a13.851 13.851 0 0 0 4.351-4.417l-4.351-2.514v6.93Z\" fill=\"#fff\"\u003e\u003c/path\u003e\u003cpath xmlns=\"http://www.w3.org/2000/svg\" d=\"M29.75 15.452a13.659 13.659 0 0 0-1.63-5.979l-4.381 2.53 6.011 3.45Z\" fill=\"#fff\" fill-opacity=\".8\"\u003e\u003c/path\u003e\u003cpath xmlns=\"http://www.w3.org/2000/svg\" d=\"M16.405 29.75a13.673 13.673 0 0 0 6.036-1.595l-6.036-3.498v5.093Z\" fill=\"#fff\"\u003e\u003c/path\u003e\u003cpath xmlns=\"http://www.w3.org/2000/svg\" d=\"M8.669 19.247v-6.494L3.03 15.986l5.639 3.261Z\" fill=\"#fff\" fill-opacity=\".8\"\u003e\u003c/path\u003e\u003c/svg\u003e"
    },
    "model": {
      "version": "4.8.0"
    },
    "components_count": 0,
    "relationships_count": 0,
    "components": null,
    "relationships": null
  },
  "styles": {
    "primaryColor": "#00B39F",
    "secondaryColor": "#00D3A9",
    "shape": "circle",
    "svgColor": "\u003csvg width=\"18\" height=\"18\" viewBox=\"0 0 32 32\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"\u003e\n\u003cg clip-path=\"url(#clip0_36_80)\"\u003e\n\u003cpath d=\"M16.4632 7.69351V15.2015L22.9702 11.4346L16.4632 7.69351Z\" fill=\"white\"/\u003e\n\u003cpath d=\"M16.4632 16.7705V24.3157L23.0307 20.5607L16.4632 16.7705Z\" fill=\"white\"/\u003e\n\u003cpath d=\"M15.5274 15.1502V7.75632L9.10194 11.4416L15.5274 15.1502Z\" fill=\"white\" fill-opacity=\"0.8\"/\u003e\n\u003cpath d=\"M2.63699 24.2878C3.89756 26.3157 5.60178 28.031 7.62134 29.3047V21.4033L2.63699 24.2878Z\" fill=\"white\" fill-opacity=\"0.8\"/\u003e\n\u003cpath d=\"M15.5274 24.2785V16.8264L9.08579 20.556L15.5274 24.2785Z\" fill=\"white\" fill-opacity=\"0.8\"/\u003e\n\u003cpath d=\"M8.55965 28.8344L15.0829 25.1049L8.55965 21.3335V28.8344Z\" fill=\"white\"/\u003e\n\u003cpath d=\"M23.4753 28.8742V21.3848L16.9615 25.1096L23.4753 28.8742Z\" fill=\"white\" fill-opacity=\"0.8\"/\u003e\n\u003cpath d=\"M29.852 23.4194C30.9655 21.341 31.5949 19.0378 31.6935 16.6819L24.9119 20.5651L29.852 23.4194Z\" fill=\"white\" fill-opacity=\"0.8\"/\u003e\n\u003cpath d=\"M24.4136 19.7691L30.96 16.0256L24.4136 12.2634V19.7691Z\" fill=\"white\"/\u003e\n\u003cpath d=\"M23.4755 10.6455V3.20041L16.9919 6.91827L23.4755 10.6455Z\" fill=\"white\" fill-opacity=\"0.8\"/\u003e\n\u003cpath d=\"M23.4754 19.7364V12.2239L16.9779 15.986L23.4754 19.7364Z\" fill=\"white\" fill-opacity=\"0.8\"/\u003e\n\u003cpath d=\"M8.55965 12.2099V19.7784L15.1061 15.9882L8.55965 12.2099Z\" fill=\"white\"/\u003e\n\u003cpath d=\"M15.5274 0.285706C13.1176 0.353534 10.756 0.977397 8.6271 2.10855L15.5274 6.06621V0.285706Z\" fill=\"white\" fill-opacity=\"0.8\"/\u003e\n\u003cpath d=\"M8.55965 3.1492V10.6734L15.1107 6.91597L8.55965 3.1492Z\" fill=\"white\"/\u003e\n\u003cpath d=\"M7.62134 2.69299C5.60228 3.96735 3.89818 5.6826 2.63699 7.7099L7.62134 10.5873V2.69299Z\" fill=\"white\" fill-opacity=\"0.8\"/\u003e\n\u003cpath d=\"M23.4335 2.14811C21.2869 0.992986 18.9001 0.355226 16.4632 0.285706V6.14069L23.4335 2.14811Z\" fill=\"white\"/\u003e\n\u003cpath d=\"M0.285713 16.5517C0.367085 18.9754 1.01023 21.3471 2.16447 23.4799L7.21396 20.5559L0.285713 16.5517Z\" fill=\"white\"/\u003e\n\u003cpath d=\"M2.16447 8.51996C1.01384 10.6433 0.370833 13.0043 0.285713 15.4178L7.22097 11.4393L2.16447 8.51996Z\" fill=\"white\"/\u003e\n\u003cpath d=\"M8.61544 29.8822C10.7469 31.0189 13.1128 31.6461 15.5274 31.7143V25.9291L8.61544 29.8822Z\" fill=\"white\" fill-opacity=\"0.8\"/\u003e\n\u003cpath d=\"M29.3675 7.73539C28.1143 5.71396 26.4208 4.00147 24.4136 2.72543V10.5987L29.3675 7.73539Z\" fill=\"white\"/\u003e\n\u003cpath d=\"M24.4136 29.2791C26.4312 27.994 28.1314 26.2684 29.3863 24.2321L24.4136 21.3591V29.2791Z\" fill=\"white\"/\u003e\n\u003cpath d=\"M31.7143 15.3738C31.6251 12.9835 30.9879 10.6458 29.8518 8.54102L24.8441 11.4325L31.7143 15.3738Z\" fill=\"white\" fill-opacity=\"0.8\"/\u003e\n\u003cpath d=\"M16.4632 31.7143C18.8725 31.6467 21.2333 31.0229 23.3613 29.8914L16.4632 25.8942V31.7143Z\" fill=\"white\"/\u003e\n\u003cpath d=\"M7.62141 19.711V12.2892L1.17738 15.9838L7.62141 19.711Z\" fill=\"white\" fill-opacity=\"0.8\"/\u003e\n\u003c/g\u003e\n\u003cdefs\u003e\n\u003cclipPath id=\"clip0_36_80\"\u003e\n\u003crect width=\"32\" height=\"32\" fill=\"white\"/\u003e\n\u003c/clipPath\u003e\n\u003c/defs\u003e\n\u003c/svg\u003e",
    "svgComplete": "",
    "svgWhite": "\u003csvg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"\u003e\u003cpath d=\"M16.405 8.732v6.57l5.694-3.297-5.694-3.273Zm0 7.942v6.602l5.747-3.285-5.747-3.317Z\" fill=\"#fff\"/\u003e\u003cpath d=\"M15.586 15.256v-6.47l-5.622 3.225 5.622 3.245ZM4.307 23.252a13.809 13.809 0 0 0 4.362 4.39v-6.914l-4.362 2.524Zm11.279-.008v-6.52L9.95 19.985l5.636 3.258Z\" fill=\"#fff\" fill-opacity=\".8\"/\u003e\u003cpath d=\"m9.49 27.23 5.707-3.263-5.707-3.3v6.563Z\" fill=\"#fff\"/\u003e\u003cpath d=\"M22.54 27.265v-6.553l-5.699 3.259 5.7 3.294Zm5.58-4.773a13.697 13.697 0 0 0 1.612-5.895l-5.934 3.397 4.323 2.498Z\" fill=\"#fff\" fill-opacity=\".8\"/\u003e\u003cpath d=\"m23.362 19.298 5.728-3.276-5.728-3.291v6.567Z\" fill=\"#fff\"/\u003e\u003cpath d=\"M22.541 11.315V4.8l-5.673 3.253 5.673 3.262Zm0 7.955v-6.574l-5.685 3.292 5.685 3.281Z\" fill=\"#fff\" fill-opacity=\".8\"/\u003e\u003cpath d=\"M9.49 12.684v6.622l5.728-3.316-5.728-3.306Z\" fill=\"#fff\"/\u003e\u003cpath d=\"M15.586 2.25a13.69 13.69 0 0 0-6.037 1.595l6.037 3.463V2.25Z\" fill=\"#fff\" fill-opacity=\".8\"/\u003e\u003cpath d=\"M9.49 4.756v6.583l5.732-3.288L9.49 4.756Z\" fill=\"#fff\"/\u003e\u003cpath d=\"M8.669 4.356a13.83 13.83 0 0 0-4.362 4.39l4.362 2.518V4.356Z\" fill=\"#fff\" fill-opacity=\".8\"/\u003e\u003cpath d=\"M22.504 3.88a13.695 13.695 0 0 0-6.099-1.63v5.123l6.1-3.493ZM2.25 16.483c.071 2.12.634 4.196 1.644 6.062l4.418-2.559-6.062-3.503Zm1.644-7.028a13.68 13.68 0 0 0-1.644 6.036l6.068-3.482-4.424-2.554Z\" fill=\"#fff\"/\u003e\u003cpath d=\"M9.539 28.147a13.673 13.673 0 0 0 6.047 1.603v-5.062L9.54 28.147Z\" fill=\"#fff\" fill-opacity=\".8\"/\u003e\u003cpath d=\"M27.697 8.768a13.83 13.83 0 0 0-4.335-4.383v6.889l4.335-2.506ZM23.362 27.62a13.851 13.851 0 0 0 4.351-4.417l-4.351-2.514v6.93Z\" fill=\"#fff\"/\u003e\u003cpath d=\"M29.75 15.452a13.659 13.659 0 0 0-1.63-5.979l-4.381 2.53 6.011 3.45Z\" fill=\"#fff\" fill-opacity=\".8\"/\u003e\u003cpath d=\"M16.405 29.75a13.673 13.673 0 0 0 6.036-1.595l-6.036-3.498v5.093Z\" fill=\"#fff\"/\u003e\u003cpath d=\"M8.669 19.247v-6.494L3.03 15.986l5.639 3.261Z\" fill=\"#fff\" fill-opacity=\".8\"/\u003e\u003c/svg\u003e"
  },
  "capabilities": null,
  "status": "enabled",
  "metadata": {
    "configurationUISchema": "",
    "genealogy": "",
    "instanceDetails": null,
    "isAnnotation": false,
    "isNamespaced": true,
    "published": false,
    "source_uri": "https://helm.gravitee.io/helm/gko/gko-4.8.0.tgz"
  },
  "configuration": null,
  "component": {
    "version": "gateway.networking.k8s.io/v1",
    "kind": "HTTPRoute",
    "schema": "{\n \"description\": \"HTTPRoute provides a way to route HTTP requests. This includes the capability\\nto match requests by hostname, path, header, or query param. Filters can be\\nused to specify additional processing steps. Backends specify where matching\\nrequests should be routed.\",\n \"properties\": {\n  \"spec\": {\n   \"description\": \"Spec defines the desired state of HTTPRoute.\",\n   \"properties\": {\n    \"hostnames\": {\n     \"description\": \"Hostnames defines a set of hostnames that should match against the HTTP Host\\nheader to select a HTTPRoute used to process the request. Implementations\\nMUST ignore any port value specified in the HTTP Host header while\\nperforming a match and (absent of any applicable header modification\\nconfiguration) MUST forward this header unmodified to the backend.\\n\\nValid values for Hostnames are determined by RFC 1123 definition of a\\nhostname with 2 notable exceptions:\\n\\n1. IPs are not allowed.\\n2. A hostname may be prefixed with a wildcard label (`*.`). The wildcard\\n   label must appear by itself as the first label.\\n\\nIf a hostname is specified by both the Listener and HTTPRoute, there\\nmust be at least one intersecting hostname for the HTTPRoute to be\\nattached to the Listener. For example:\\n\\n* A Listener with `test.example.com` as the hostname matches HTTPRoutes\\n  that have either not specified any hostnames, or have specified at\\n  least one of `test.example.com` or `*.example.com`.\\n* A Listener with `*.example.com` as the hostname matches HTTPRoutes\\n  that have either not specified any hostnames or have specified at least\\n  one hostname that matches the Listener hostname. For example,\\n  `*.example.com`, `test.example.com`, and `foo.test.example.com` would\\n  all match. On the other hand, `example.com` and `test.example.net` would\\n  not match.\\n\\nHostnames that are prefixed with a wildcard label (`*.`) are interpreted\\nas a suffix match. That means that a match for `*.example.com` would match\\nboth `test.example.com`, and `foo.test.example.com`, but not `example.com`.\\n\\nIf both the Listener and HTTPRoute have specified hostnames, any\\nHTTPRoute hostnames that do not match the Listener hostname MUST be\\nignored. For example, if a Listener specified `*.example.com`, and the\\nHTTPRoute specified `test.example.com` and `test.example.net`,\\n`test.example.net` must not be considered for a match.\\n\\nIf both the Listener and HTTPRoute have specified hostnames, and none\\nmatch with the criteria above, then the HTTPRoute is not accepted. The\\nimplementation must raise an 'Accepted' Condition with a status of\\n`False` in the corresponding RouteParentStatus.\\n\\nIn the event that multiple HTTPRoutes specify intersecting hostnames (e.g.\\noverlapping wildcard matching and exact matching hostnames), precedence must\\nbe given to rules from the HTTPRoute with the largest number of:\\n\\n* Characters in a matching non-wildcard hostname.\\n* Characters in a matching hostname.\\n\\nIf ties exist across multiple Routes, the matching precedence rules for\\nHTTPRouteMatches takes over.\\n\\nSupport: Core\",\n     \"items\": {\n      \"description\": \"Hostname is the fully qualified domain name of a network host. This matches\\nthe RFC 1123 definition of a hostname with 2 notable exceptions:\\n\\n 1. IPs are not allowed.\\n 2. A hostname may be prefixed with a wildcard label (`*.`). The wildcard\\n    label must appear by itself as the first label.\\n\\nHostname can be \\\"precise\\\" which is a domain name without the terminating\\ndot of a network host (e.g. \\\"foo.example.com\\\") or \\\"wildcard\\\", which is a\\ndomain name prefixed with a single wildcard label (e.g. `*.example.com`).\\n\\nNote that as per RFC1035 and RFC1123, a *label* must consist of lower case\\nalphanumeric characters or '-', and must start and end with an alphanumeric\\ncharacter. No other punctuation is allowed.\",\n      \"maxLength\": 253,\n      \"minLength\": 1,\n      \"pattern\": \"^(\\\\*\\\\.)?[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$\",\n      \"type\": \"string\"\n     },\n     \"maxItems\": 16,\n     \"type\": \"array\"\n    },\n    \"parentRefs\": {\n     \"description\": \"ParentRefs references the resources (usually Gateways) that a Route wants\\nto be attached to. Note that the referenced parent resource needs to\\nallow this for the attachment to be complete. For Gateways, that means\\nthe Gateway needs to allow attachment from Routes of this kind and\\nnamespace. For Services, that means the Service must either be in the same\\nnamespace for a \\\"producer\\\" route, or the mesh implementation must support\\nand allow \\\"consumer\\\" routes for the referenced Service. ReferenceGrant is\\nnot applicable for governing ParentRefs to Services - it is not possible to\\ncreate a \\\"producer\\\" route for a Service in a different namespace from the\\nRoute.\\n\\nThere are two kinds of parent resources with \\\"Core\\\" support:\\n\\n* Gateway (Gateway conformance profile)\\n* Service (Mesh conformance profile, ClusterIP Services only)\\n\\nThis API may be extended in the future to support additional kinds of parent\\nresources.\\n\\nParentRefs must be _distinct_. This means either that:\\n\\n* They select different objects.  If this is the case, then parentRef\\n  entries are distinct. In terms of fields, this means that the\\n  multi-part key defined by `group`, `kind`, `namespace`, and `name` must\\n  be unique across all parentRef entries in the Route.\\n* They do not select different objects, but for each optional field used,\\n  each ParentRef that selects the same object must set the same set of\\n  optional fields to different values. If one ParentRef sets a\\n  combination of optional fields, all must set the same combination.\\n\\nSome examples:\\n\\n* If one ParentRef sets `sectionName`, all ParentRefs referencing the\\n  same object must also set `sectionName`.\\n* If one ParentRef sets `port`, all ParentRefs referencing the same\\n  object must also set `port`.\\n* If one ParentRef sets `sectionName` and `port`, all ParentRefs\\n  referencing the same object must also set `sectionName` and `port`.\\n\\nIt is possible to separately reference multiple distinct objects that may\\nbe collapsed by an implementation. For example, some implementations may\\nchoose to merge compatible Gateway Listeners together. If that is the\\ncase, the list of routes attached to those resources should also be\\nmerged.\\n\\nNote that for ParentRefs that cross namespace boundaries, there are specific\\nrules. Cross-namespace references are only valid if they are explicitly\\nallowed by something in the namespace they are referring to. For example,\\nGateway has the AllowedRoutes field, and ReferenceGrant provides a\\ngeneric way to enable other kinds of cross-namespace reference.\\n\\n\\n\\n\\n\\n\\n\",\n     \"items\": {\n      \"description\": \"ParentReference identifies an API object (usually a Gateway) that can be considered\\na parent of this resource (usually a route). There are two kinds of parent resources\\nwith \\\"Core\\\" support:\\n\\n* Gateway (Gateway conformance profile)\\n* Service (Mesh conformance profile, ClusterIP Services only)\\n\\nThis API may be extended in the future to support additional kinds of parent\\nresources.\\n\\nThe API object must be valid in the cluster; the Group and Kind must\\nbe registered in the cluster for this reference to be valid.\",\n      \"properties\": {\n       \"group\": {\n        \"default\": \"gateway.networking.k8s.io\",\n        \"description\": \"Group is the group of the referent.\\nWhen unspecified, \\\"gateway.networking.k8s.io\\\" is inferred.\\nTo set the core API group (such as for a \\\"Service\\\" kind referent),\\nGroup must be explicitly set to \\\"\\\" (empty string).\\n\\nSupport: Core\",\n        \"maxLength\": 253,\n        \"pattern\": \"^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$\",\n        \"type\": \"string\"\n       },\n       \"kind\": {\n        \"default\": \"Gateway\",\n        \"description\": \"Kind is kind of the referent.\\n\\nThere are two kinds of parent resources with \\\"Core\\\" support:\\n\\n* Gateway (Gateway conformance profile)\\n* Service (Mesh conformance profile, ClusterIP Services only)\\n\\nSupport for other resources is Implementation-Specific.\",\n        \"maxLength\": 63,\n        \"minLength\": 1,\n        \"pattern\": \"^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$\",\n        \"type\": \"string\"\n       },\n       \"name\": {\n        \"description\": \"Name is the name of the referent.\\n\\nSupport: Core\",\n        \"maxLength\": 253,\n        \"minLength\": 1,\n        \"type\": \"string\"\n       },\n       \"namespace\": {\n        \"description\": \"Namespace is the namespace of the referent. When unspecified, this refers\\nto the local namespace of the Route.\\n\\nNote that there are specific rules for ParentRefs which cross namespace\\nboundaries. Cross-namespace references are only valid if they are explicitly\\nallowed by something in the namespace they are referring to. For example:\\nGateway has the AllowedRoutes field, and ReferenceGrant provides a\\ngeneric way to enable any other kind of cross-namespace reference.\\n\\n\\n\\nSupport: Core\",\n        \"maxLength\": 63,\n        \"minLength\": 1,\n        \"pattern\": \"^[a-z0-9]([-a-z0-9]*[a-z0-9])?$\",\n        \"type\": \"string\"\n       },\n       \"port\": {\n        \"description\": \"Port is the network port this Route targets. It can be interpreted\\ndifferently based on the type of parent resource.\\n\\nWhen the parent resource is a Gateway, this targets all listeners\\nlistening on the specified port that also support this kind of Route(and\\nselect this Route). It's not recommended to set `Port` unless the\\nnetworking behaviors specified in a Route must apply to a specific port\\nas opposed to a listener(s) whose port(s) may be changed. When both Port\\nand SectionName are specified, the name and port of the selected listener\\nmust match both specified values.\\n\\n\\n\\nImplementations MAY choose to support other parent resources.\\nImplementations supporting other types of parent resources MUST clearly\\ndocument how/if Port is interpreted.\\n\\nFor the purpose of status, an attachment is considered successful as\\nlong as the parent resource accepts it partially. For example, Gateway\\nlisteners can restrict which Routes can attach to them by Route kind,\\nnamespace, or hostname. If 1 of 2 Gateway listeners accept attachment\\nfrom the referencing Route, the Route MUST be considered successfully\\nattached. If no Gateway listeners accept attachment from this Route,\\nthe Route MUST be considered detached from the Gateway.\\n\\nSupport: Extended\",\n        \"format\": \"int32\",\n        \"maximum\": 65535,\n        \"minimum\": 1,\n        \"type\": \"integer\"\n       },\n       \"sectionName\": {\n        \"description\": \"SectionName is the name of a section within the target resource. In the\\nfollowing resources, SectionName is interpreted as the following:\\n\\n* Gateway: Listener name. When both Port (experimental) and SectionName\\nare specified, the name and port of the selected listener must match\\nboth specified values.\\n* Service: Port name. When both Port (experimental) and SectionName\\nare specified, the name and port of the selected listener must match\\nboth specified values.\\n\\nImplementations MAY choose to support attaching Routes to other resources.\\nIf that is the case, they MUST clearly document how SectionName is\\ninterpreted.\\n\\nWhen unspecified (empty string), this will reference the entire resource.\\nFor the purpose of status, an attachment is considered successful if at\\nleast one section in the parent resource accepts it. For example, Gateway\\nlisteners can restrict which Routes can attach to them by Route kind,\\nnamespace, or hostname. If 1 of 2 Gateway listeners accept attachment from\\nthe referencing Route, the Route MUST be considered successfully\\nattached. If no Gateway listeners accept attachment from this Route, the\\nRoute MUST be considered detached from the Gateway.\\n\\nSupport: Core\",\n        \"maxLength\": 253,\n        \"minLength\": 1,\n        \"pattern\": \"^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$\",\n        \"type\": \"string\"\n       }\n      },\n      \"required\": [\n       \"name\"\n      ],\n      \"type\": \"object\"\n     },\n     \"maxItems\": 32,\n     \"type\": \"array\",\n     \"x-kubernetes-validations\": [\n      {\n       \"message\": \"sectionName must be specified when parentRefs includes 2 or more references to the same parent\",\n       \"rule\": \"self.all(p1, self.all(p2, p1.group == p2.group \\u0026\\u0026 p1.kind == p2.kind \\u0026\\u0026 p1.name == p2.name \\u0026\\u0026 (((!has(p1.__namespace__) || p1.__namespace__ == '') \\u0026\\u0026 (!has(p2.__namespace__) || p2.__namespace__ == '')) || (has(p1.__namespace__) \\u0026\\u0026 has(p2.__namespace__) \\u0026\\u0026 p1.__namespace__ == p2.__namespace__ )) ? ((!has(p1.sectionName) || p1.sectionName == '') == (!has(p2.sectionName) || p2.sectionName == '')) : true))\"\n      },\n      {\n       \"message\": \"sectionName must be unique when parentRefs includes 2 or more references to the same parent\",\n       \"rule\": \"self.all(p1, self.exists_one(p2, p1.group == p2.group \\u0026\\u0026 p1.kind == p2.kind \\u0026\\u0026 p1.name == p2.name \\u0026\\u0026 (((!has(p1.__namespace__) || p1.__namespace__ == '') \\u0026\\u0026 (!has(p2.__namespace__) || p2.__namespace__ == '')) || (has(p1.__namespace__) \\u0026\\u0026 has(p2.__namespace__) \\u0026\\u0026 p1.__namespace__ == p2.__namespace__ )) \\u0026\\u0026 (((!has(p1.sectionName) || p1.sectionName == '') \\u0026\\u0026 (!has(p2.sectionName) || p2.sectionName == '')) || (has(p1.sectionName) \\u0026\\u0026 has(p2.sectionName) \\u0026\\u0026 p1.sectionName == p2.sectionName))))\"\n      }\n     ]\n    },\n    \"rules\": {\n     \"default\": [\n      {\n       \"matches\": [\n        {\n         \"path\": {\n          \"type\": \"PathPrefix\",\n          \"value\": \"/\"\n         }\n        }\n       ]\n      }\n     ],\n     \"description\": \"Rules are a list of HTTP matchers, filters and actions.\\n\\n\",\n     \"items\": {\n      \"description\": \"HTTPRouteRule defines semantics for matching an HTTP request based on\\nconditions (matches), processing it (filters), and forwarding the request to\\nan API object (backendRefs).\",\n      \"properties\": {\n       \"backendRefs\": {\n        \"description\": \"BackendRefs defines the backend(s) where matching requests should be\\nsent.\\n\\nFailure behavior here depends on how many BackendRefs are specified and\\nhow many are invalid.\\n\\nIf *all* entries in BackendRefs are invalid, and there are also no filters\\nspecified in this route rule, *all* traffic which matches this rule MUST\\nreceive a 500 status code.\\n\\nSee the HTTPBackendRef definition for the rules about what makes a single\\nHTTPBackendRef invalid.\\n\\nWhen a HTTPBackendRef is invalid, 500 status codes MUST be returned for\\nrequests that would have otherwise been routed to an invalid backend. If\\nmultiple backends are specified, and some are invalid, the proportion of\\nrequests that would otherwise have been routed to an invalid backend\\nMUST receive a 500 status code.\\n\\nFor example, if two backends are specified with equal weights, and one is\\ninvalid, 50 percent of traffic must receive a 500. Implementations may\\nchoose how that 50 percent is determined.\\n\\nWhen a HTTPBackendRef refers to a Service that has no ready endpoints,\\nimplementations SHOULD return a 503 for requests to that backend instead.\\nIf an implementation chooses to do this, all of the above rules for 500 responses\\nMUST also apply for responses that return a 503.\\n\\nSupport: Core for Kubernetes Service\\n\\nSupport: Extended for Kubernetes ServiceImport\\n\\nSupport: Implementation-specific for any other resource\\n\\nSupport for weight: Core\",\n        \"items\": {\n         \"description\": \"HTTPBackendRef defines how a HTTPRoute forwards a HTTP request.\\n\\nNote that when a namespace different than the local namespace is specified, a\\nReferenceGrant object is required in the referent namespace to allow that\\nnamespace's owner to accept the reference. See the ReferenceGrant\\ndocumentation for details.\\n\\n\\u003cgateway:experimental:description\\u003e\\n\\nWhen the BackendRef points to a Kubernetes Service, implementations SHOULD\\nhonor the appProtocol field if it is set for the target Service Port.\\n\\nImplementations supporting appProtocol SHOULD recognize the Kubernetes\\nStandard Application Protocols defined in KEP-3726.\\n\\nIf a Service appProtocol isn't specified, an implementation MAY infer the\\nbackend protocol through its own means. Implementations MAY infer the\\nprotocol from the Route type referring to the backend Service.\\n\\nIf a Route is not able to send traffic to the backend using the specified\\nprotocol then the backend is considered invalid. Implementations MUST set the\\n\\\"ResolvedRefs\\\" condition to \\\"False\\\" with the \\\"UnsupportedProtocol\\\" reason.\\n\\n\\u003c/gateway:experimental:description\\u003e\",\n         \"properties\": {\n          \"filters\": {\n           \"description\": \"Filters defined at this level should be executed if and only if the\\nrequest is being forwarded to the backend defined here.\\n\\nSupport: Implementation-specific (For broader support of filters, use the\\nFilters field in HTTPRouteRule.)\",\n           \"items\": {\n            \"description\": \"HTTPRouteFilter defines processing steps that must be completed during the\\nrequest or response lifecycle. HTTPRouteFilters are meant as an extension\\npoint to express processing that may be done in Gateway implementations. Some\\nexamples include request or response modification, implementing\\nauthentication strategies, rate-limiting, and traffic shaping. API\\nguarantee/conformance is defined based on the type of the filter.\",\n            \"properties\": {\n             \"extensionRef\": {\n              \"description\": \"ExtensionRef is an optional, implementation-specific extension to the\\n\\\"filter\\\" behavior.  For example, resource \\\"myroutefilter\\\" in group\\n\\\"networking.example.net\\\"). ExtensionRef MUST NOT be used for core and\\nextended filters.\\n\\nThis filter can be used multiple times within the same rule.\\n\\nSupport: Implementation-specific\",\n              \"properties\": {\n               \"group\": {\n                \"description\": \"Group is the group of the referent. For example, \\\"gateway.networking.k8s.io\\\".\\nWhen unspecified or empty string, core API group is inferred.\",\n                \"maxLength\": 253,\n                \"pattern\": \"^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$\",\n                \"type\": \"string\"\n               },\n               \"kind\": {\n                \"description\": \"Kind is kind of the referent. For example \\\"HTTPRoute\\\" or \\\"Service\\\".\",\n                \"maxLength\": 63,\n                \"minLength\": 1,\n                \"pattern\": \"^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$\",\n                \"type\": \"string\"\n               },\n               \"name\": {\n                \"description\": \"Name is the name of the referent.\",\n                \"maxLength\": 253,\n                \"minLength\": 1,\n                \"type\": \"string\"\n               }\n              },\n              \"required\": [\n               \"group\",\n               \"kind\",\n               \"name\"\n              ],\n              \"type\": \"object\"\n             },\n             \"requestHeaderModifier\": {\n              \"description\": \"RequestHeaderModifier defines a schema for a filter that modifies request\\nheaders.\\n\\nSupport: Core\",\n              \"properties\": {\n               \"add\": {\n                \"description\": \"Add adds the given header(s) (name, value) to the request\\nbefore the action. It appends to any existing values associated\\nwith the header name.\\n\\nInput:\\n  GET /foo HTTP/1.1\\n  my-header: foo\\n\\nConfig:\\n  add:\\n  - name: \\\"my-header\\\"\\n    value: \\\"bar,baz\\\"\\n\\nOutput:\\n  GET /foo HTTP/1.1\\n  my-header: foo,bar,baz\",\n                \"items\": {\n                 \"description\": \"HTTPHeader represents an HTTP Header name and value as defined by RFC 7230.\",\n                 \"properties\": {\n                  \"name\": {\n                   \"description\": \"Name is the name of the HTTP Header to be matched. Name matching MUST be\\ncase insensitive. (See https://tools.ietf.org/html/rfc7230#section-3.2).\\n\\nIf multiple entries specify equivalent header names, the first entry with\\nan equivalent name MUST be considered for a match. Subsequent entries\\nwith an equivalent header name MUST be ignored. Due to the\\ncase-insensitivity of header names, \\\"foo\\\" and \\\"Foo\\\" are considered\\nequivalent.\",\n                   \"maxLength\": 256,\n                   \"minLength\": 1,\n                   \"pattern\": \"^[A-Za-z0-9!#$%\\u0026'*+\\\\-.^_\\\\x60|~]+$\",\n                   \"type\": \"string\"\n                  },\n                  \"value\": {\n                   \"description\": \"Value is the value of HTTP Header to be matched.\",\n                   \"maxLength\": 4096,\n                   \"minLength\": 1,\n                   \"type\": \"string\"\n                  }\n                 },\n                 \"required\": [\n                  \"name\",\n                  \"value\"\n                 ],\n                 \"type\": \"object\"\n                },\n                \"maxItems\": 16,\n                \"type\": \"array\",\n                \"x-kubernetes-list-map-keys\": [\n                 \"name\"\n                ],\n                \"x-kubernetes-list-type\": \"map\"\n               },\n               \"remove\": {\n                \"description\": \"Remove the given header(s) from the HTTP request before the action. The\\nvalue of Remove is a list of HTTP header names. Note that the header\\nnames are case-insensitive (see\\nhttps://datatracker.ietf.org/doc/html/rfc2616#section-4.2).\\n\\nInput:\\n  GET /foo HTTP/1.1\\n  my-header1: foo\\n  my-header2: bar\\n  my-header3: baz\\n\\nConfig:\\n  remove: [\\\"my-header1\\\", \\\"my-header3\\\"]\\n\\nOutput:\\n  GET /foo HTTP/1.1\\n  my-header2: bar\",\n                \"items\": {\n                 \"type\": \"string\"\n                },\n                \"maxItems\": 16,\n                \"type\": \"array\",\n                \"x-kubernetes-list-type\": \"set\"\n               },\n               \"set\": {\n                \"description\": \"Set overwrites the request with the given header (name, value)\\nbefore the action.\\n\\nInput:\\n  GET /foo HTTP/1.1\\n  my-header: foo\\n\\nConfig:\\n  set:\\n  - name: \\\"my-header\\\"\\n    value: \\\"bar\\\"\\n\\nOutput:\\n  GET /foo HTTP/1.1\\n  my-header: bar\",\n                \"items\": {\n                 \"description\": \"HTTPHeader represents an HTTP Header name and value as defined by RFC 7230.\",\n                 \"properties\": {\n                  \"name\": {\n                   \"description\": \"Name is the name of the HTTP Header to be matched. Name matching MUST be\\ncase insensitive. (See https://tools.ietf.org/html/rfc7230#section-3.2).\\n\\nIf multiple entries specify equivalent header names, the first entry with\\nan equivalent name MUST be considered for a match. Subsequent entries\\nwith an equivalent header name MUST be ignored. Due to the\\ncase-insensitivity of header names, \\\"foo\\\" and \\\"Foo\\\" are considered\\nequivalent.\",\n                   \"maxLength\": 256,\n                   \"minLength\": 1,\n                   \"pattern\": \"^[A-Za-z0-9!#$%\\u0026'*+\\\\-.^_\\\\x60|~]+$\",\n                   \"type\": \"string\"\n                  },\n                  \"value\": {\n                   \"description\": \"Value is the value of HTTP Header to be matched.\",\n                   \"maxLength\": 4096,\n                   \"minLength\": 1,\n                   \"type\": \"string\"\n                  }\n                 },\n                 \"required\": [\n                  \"name\",\n                  \"value\"\n                 ],\n                 \"type\": \"object\"\n                },\n                \"maxItems\": 16,\n                \"type\": \"array\",\n                \"x-kubernetes-list-map-keys\": [\n                 \"name\"\n                ],\n                \"x-kubernetes-list-type\": \"map\"\n               }\n              },\n              \"type\": \"object\"\n             },\n             \"requestMirror\": {\n              \"description\": \"RequestMirror defines a schema for a filter that mirrors requests.\\nRequests are sent to the specified destination, but responses from\\nthat destination are ignored.\\n\\nThis filter can be used multiple times within the same rule. Note that\\nnot all implementations will be able to support mirroring to multiple\\nbackends.\\n\\nSupport: Extended\\n\\n\",\n              \"properties\": {\n               \"backendRef\": {\n                \"description\": \"BackendRef references a resource where mirrored requests are sent.\\n\\nMirrored requests must be sent only to a single destination endpoint\\nwithin this BackendRef, irrespective of how many endpoints are present\\nwithin this BackendRef.\\n\\nIf the referent cannot be found, this BackendRef is invalid and must be\\ndropped from the Gateway. The controller must ensure the \\\"ResolvedRefs\\\"\\ncondition on the Route status is set to `status: False` and not configure\\nthis backend in the underlying implementation.\\n\\nIf there is a cross-namespace reference to an *existing* object\\nthat is not allowed by a ReferenceGrant, the controller must ensure the\\n\\\"ResolvedRefs\\\"  condition on the Route is set to `status: False`,\\nwith the \\\"RefNotPermitted\\\" reason and not configure this backend in the\\nunderlying implementation.\\n\\nIn either error case, the Message of the `ResolvedRefs` Condition\\nshould be used to provide more detail about the problem.\\n\\nSupport: Extended for Kubernetes Service\\n\\nSupport: Implementation-specific for any other resource\",\n                \"properties\": {\n                 \"group\": {\n                  \"default\": \"\",\n                  \"description\": \"Group is the group of the referent. For example, \\\"gateway.networking.k8s.io\\\".\\nWhen unspecified or empty string, core API group is inferred.\",\n                  \"maxLength\": 253,\n                  \"pattern\": \"^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$\",\n                  \"type\": \"string\"\n                 },\n                 \"kind\": {\n                  \"default\": \"Service\",\n                  \"description\": \"Kind is the Kubernetes resource kind of the referent. For example\\n\\\"Service\\\".\\n\\nDefaults to \\\"Service\\\" when not specified.\\n\\nExternalName services can refer to CNAME DNS records that may live\\noutside of the cluster and as such are difficult to reason about in\\nterms of conformance. They also may not be safe to forward to (see\\nCVE-2021-25740 for more information). Implementations SHOULD NOT\\nsupport ExternalName Services.\\n\\nSupport: Core (Services with a type other than ExternalName)\\n\\nSupport: Implementation-specific (Services with type ExternalName)\",\n                  \"maxLength\": 63,\n                  \"minLength\": 1,\n                  \"pattern\": \"^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$\",\n                  \"type\": \"string\"\n                 },\n                 \"name\": {\n                  \"description\": \"Name is the name of the referent.\",\n                  \"maxLength\": 253,\n                  \"minLength\": 1,\n                  \"type\": \"string\"\n                 },\n                 \"namespace\": {\n                  \"description\": \"Namespace is the namespace of the backend. When unspecified, the local\\nnamespace is inferred.\\n\\nNote that when a namespace different than the local namespace is specified,\\na ReferenceGrant object is required in the referent namespace to allow that\\nnamespace's owner to accept the reference. See the ReferenceGrant\\ndocumentation for details.\\n\\nSupport: Core\",\n                  \"maxLength\": 63,\n                  \"minLength\": 1,\n                  \"pattern\": \"^[a-z0-9]([-a-z0-9]*[a-z0-9])?$\",\n                  \"type\": \"string\"\n                 },\n                 \"port\": {\n                  \"description\": \"Port specifies the destination port number to use for this resource.\\nPort is required when the referent is a Kubernetes Service. In this\\ncase, the port number is the service port number, not the target port.\\nFor other resources, destination port might be derived from the referent\\nresource or this field.\",\n                  \"format\": \"int32\",\n                  \"maximum\": 65535,\n                  \"minimum\": 1,\n                  \"type\": \"integer\"\n                 }\n                },\n                \"required\": [\n                 \"name\"\n                ],\n                \"type\": \"object\",\n                \"x-kubernetes-validations\": [\n                 {\n                  \"message\": \"Must have port for Service reference\",\n                  \"rule\": \"(size(self.group) == 0 \\u0026\\u0026 self.kind == 'Service') ? has(self.port) : true\"\n                 }\n                ]\n               }\n              },\n              \"required\": [\n               \"backendRef\"\n              ],\n              \"type\": \"object\"\n             },\n             \"requestRedirect\": {\n              \"description\": \"RequestRedirect defines a schema for a filter that responds to the\\nrequest with an HTTP redirection.\\n\\nSupport: Core\",\n              \"properties\": {\n               \"hostname\": {\n                \"description\": \"Hostname is the hostname to be used in the value of the `Location`\\nheader in the response.\\nWhen empty, the hostname in the `Host` header of the request is used.\\n\\nSupport: Core\",\n                \"maxLength\": 253,\n                \"minLength\": 1,\n                \"pattern\": \"^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$\",\n                \"type\": \"string\"\n               },\n               \"path\": {\n                \"description\": \"Path defines parameters used to modify the path of the incoming request.\\nThe modified path is then used to construct the `Location` header. When\\nempty, the request path is used as-is.\\n\\nSupport: Extended\",\n                \"properties\": {\n                 \"replaceFullPath\": {\n                  \"description\": \"ReplaceFullPath specifies the value with which to replace the full path\\nof a request during a rewrite or redirect.\",\n                  \"maxLength\": 1024,\n                  \"type\": \"string\"\n                 },\n                 \"replacePrefixMatch\": {\n                  \"description\": \"ReplacePrefixMatch specifies the value with which to replace the prefix\\nmatch of a request during a rewrite or redirect. For example, a request\\nto \\\"/foo/bar\\\" with a prefix match of \\\"/foo\\\" and a ReplacePrefixMatch\\nof \\\"/xyz\\\" would be modified to \\\"/xyz/bar\\\".\\n\\nNote that this matches the behavior of the PathPrefix match type. This\\nmatches full path elements. A path element refers to the list of labels\\nin the path split by the `/` separator. When specified, a trailing `/` is\\nignored. For example, the paths `/abc`, `/abc/`, and `/abc/def` would all\\nmatch the prefix `/abc`, but the path `/abcd` would not.\\n\\nReplacePrefixMatch is only compatible with a `PathPrefix` HTTPRouteMatch.\\nUsing any other HTTPRouteMatch type on the same HTTPRouteRule will result in\\nthe implementation setting the Accepted Condition for the Route to `status: False`.\\n\\nRequest Path | Prefix Match | Replace Prefix | Modified Path\",\n                  \"maxLength\": 1024,\n                  \"type\": \"string\"\n                 },\n                 \"type\": {\n                  \"description\": \"Type defines the type of path modifier. Additional types may be\\nadded in a future release of the API.\\n\\nNote that values may be added to this enum, implementations\\nmust ensure that unknown values will not cause a crash.\\n\\nUnknown values here must result in the implementation setting the\\nAccepted Condition for the Route to `status: False`, with a\\nReason of `UnsupportedValue`.\",\n                  \"enum\": [\n                   \"ReplaceFullPath\",\n                   \"ReplacePrefixMatch\"\n                  ],\n                  \"type\": \"string\"\n                 }\n                },\n                \"required\": [\n                 \"type\"\n                ],\n                \"type\": \"object\",\n                \"x-kubernetes-validations\": [\n                 {\n                  \"message\": \"replaceFullPath must be specified when type is set to 'ReplaceFullPath'\",\n                  \"rule\": \"self.type == 'ReplaceFullPath' ? has(self.replaceFullPath) : true\"\n                 },\n                 {\n                  \"message\": \"type must be 'ReplaceFullPath' when replaceFullPath is set\",\n                  \"rule\": \"has(self.replaceFullPath) ? self.type == 'ReplaceFullPath' : true\"\n                 },\n                 {\n                  \"message\": \"replacePrefixMatch must be specified when type is set to 'ReplacePrefixMatch'\",\n                  \"rule\": \"self.type == 'ReplacePrefixMatch' ? has(self.replacePrefixMatch) : true\"\n                 },\n                 {\n                  \"message\": \"type must be 'ReplacePrefixMatch' when replacePrefixMatch is set\",\n                  \"rule\": \"has(self.replacePrefixMatch) ? self.type == 'ReplacePrefixMatch' : true\"\n                 }\n                ]\n               },\n               \"port\": {\n                \"description\": \"Port is the port to be used in the value of the `Location`\\nheader in the response.\\n\\nIf no port is specified, the redirect port MUST be derived using the\\nfollowing rules:\\n\\n* If redirect scheme is not-empty, the redirect port MUST be the well-known\\n  port associated with the redirect scheme. Specifically \\\"http\\\" to port 80\\n  and \\\"https\\\" to port 443. If the redirect scheme does not have a\\n  well-known port, the listener port of the Gateway SHOULD be used.\\n* If redirect scheme is empty, the redirect port MUST be the Gateway\\n  Listener port.\\n\\nImplementations SHOULD NOT add the port number in the 'Location'\\nheader in the following cases:\\n\\n* A Location header that will use HTTP (whether that is determined via\\n  the Listener protocol or the Scheme field) _and_ use port 80.\\n* A Location header that will use HTTPS (whether that is determined via\\n  the Listener protocol or the Scheme field) _and_ use port 443.\\n\\nSupport: Extended\",\n                \"format\": \"int32\",\n                \"maximum\": 65535,\n                \"minimum\": 1,\n                \"type\": \"integer\"\n               },\n               \"scheme\": {\n                \"description\": \"Scheme is the scheme to be used in the value of the `Location` header in\\nthe response. When empty, the scheme of the request is used.\\n\\nScheme redirects can affect the port of the redirect, for more information,\\nrefer to the documentation for the port field of this filter.\\n\\nNote that values may be added to this enum, implementations\\nmust ensure that unknown values will not cause a crash.\\n\\nUnknown values here must result in the implementation setting the\\nAccepted Condition for the Route to `status: False`, with a\\nReason of `UnsupportedValue`.\\n\\nSupport: Extended\",\n                \"enum\": [\n                 \"http\",\n                 \"https\"\n                ],\n                \"type\": \"string\"\n               },\n               \"statusCode\": {\n                \"default\": 302,\n                \"description\": \"StatusCode is the HTTP status code to be used in response.\\n\\nNote that values may be added to this enum, implementations\\nmust ensure that unknown values will not cause a crash.\\n\\nUnknown values here must result in the implementation setting the\\nAccepted Condition for the Route to `status: False`, with a\\nReason of `UnsupportedValue`.\\n\\nSupport: Core\",\n                \"enum\": [\n                 301,\n                 302\n                ],\n                \"type\": \"integer\"\n               }\n              },\n              \"type\": \"object\"\n             },\n             \"responseHeaderModifier\": {\n              \"description\": \"ResponseHeaderModifier defines a schema for a filter that modifies response\\nheaders.\\n\\nSupport: Extended\",\n              \"properties\": {\n               \"add\": {\n                \"description\": \"Add adds the given header(s) (name, value) to the request\\nbefore the action. It appends to any existing values associated\\nwith the header name.\\n\\nInput:\\n  GET /foo HTTP/1.1\\n  my-header: foo\\n\\nConfig:\\n  add:\\n  - name: \\\"my-header\\\"\\n    value: \\\"bar,baz\\\"\\n\\nOutput:\\n  GET /foo HTTP/1.1\\n  my-header: foo,bar,baz\",\n                \"items\": {\n                 \"description\": \"HTTPHeader represents an HTTP Header name and value as defined by RFC 7230.\",\n                 \"properties\": {\n                  \"name\": {\n                   \"description\": \"Name is the name of the HTTP Header to be matched. Name matching MUST be\\ncase insensitive. (See https://tools.ietf.org/html/rfc7230#section-3.2).\\n\\nIf multiple entries specify equivalent header names, the first entry with\\nan equivalent name MUST be considered for a match. Subsequent entries\\nwith an equivalent header name MUST be ignored. Due to the\\ncase-insensitivity of header names, \\\"foo\\\" and \\\"Foo\\\" are considered\\nequivalent.\",\n                   \"maxLength\": 256,\n                   \"minLength\": 1,\n                   \"pattern\": \"^[A-Za-z0-9!#$%\\u0026'*+\\\\-.^_\\\\x60|~]+$\",\n                   \"type\": \"string\"\n                  },\n                  \"value\": {\n                   \"description\": \"Value is the value of HTTP Header to be matched.\",\n                   \"maxLength\": 4096,\n                   \"minLength\": 1,\n                   \"type\": \"string\"\n                  }\n                 },\n                 \"required\": [\n                  \"name\",\n                  \"value\"\n                 ],\n                 \"type\": \"object\"\n                },\n                \"maxItems\": 16,\n                \"type\": \"array\",\n                \"x-kubernetes-list-map-keys\": [\n                 \"name\"\n                ],\n                \"x-kubernetes-list-type\": \"map\"\n               },\n               \"remove\": {\n                \"description\": \"Remove the given header(s) from the HTTP request before the action. The\\nvalue of Remove is a list of HTTP header names. Note that the header\\nnames are case-insensitive (see\\nhttps://datatracker.ietf.org/doc/html/rfc2616#section-4.2).\\n\\nInput:\\n  GET /foo HTTP/1.1\\n  my-header1: foo\\n  my-header2: bar\\n  my-header3: baz\\n\\nConfig:\\n  remove: [\\\"my-header1\\\", \\\"my-header3\\\"]\\n\\nOutput:\\n  GET /foo HTTP/1.1\\n  my-header2: bar\",\n                \"items\": {\n                 \"type\": \"string\"\n                },\n                \"maxItems\": 16,\n                \"type\": \"array\",\n                \"x-kubernetes-list-type\": \"set\"\n               },\n               \"set\": {\n                \"description\": \"Set overwrites the request with the given header (name, value)\\nbefore the action.\\n\\nInput:\\n  GET /foo HTTP/1.1\\n  my-header: foo\\n\\nConfig:\\n  set:\\n  - name: \\\"my-header\\\"\\n    value: \\\"bar\\\"\\n\\nOutput:\\n  GET /foo HTTP/1.1\\n  my-header: bar\",\n                \"items\": {\n                 \"description\": \"HTTPHeader represents an HTTP Header name and value as defined by RFC 7230.\",\n                 \"properties\": {\n                  \"name\": {\n                   \"description\": \"Name is the name of the HTTP Header to be matched. Name matching MUST be\\ncase insensitive. (See https://tools.ietf.org/html/rfc7230#section-3.2).\\n\\nIf multiple entries specify equivalent header names, the first entry with\\nan equivalent name MUST be considered for a match. Subsequent entries\\nwith an equivalent header name MUST be ignored. Due to the\\ncase-insensitivity of header names, \\\"foo\\\" and \\\"Foo\\\" are considered\\nequivalent.\",\n                   \"maxLength\": 256,\n                   \"minLength\": 1,\n                   \"pattern\": \"^[A-Za-z0-9!#$%\\u0026'*+\\\\-.^_\\\\x60|~]+$\",\n                   \"type\": \"string\"\n                  },\n                  \"value\": {\n                   \"description\": \"Value is the value of HTTP Header to be matched.\",\n                   \"maxLength\": 4096,\n                   \"minLength\": 1,\n                   \"type\": \"string\"\n                  }\n                 },\n                 \"required\": [\n                  \"name\",\n                  \"value\"\n                 ],\n                 \"type\": \"object\"\n                },\n                \"maxItems\": 16,\n                \"type\": \"array\",\n                \"x-kubernetes-list-map-keys\": [\n                 \"name\"\n                ],\n                \"x-kubernetes-list-type\": \"map\"\n               }\n              },\n              \"type\": \"object\"\n             },\n             \"type\": {\n              \"description\": \"Type identifies the type of filter to apply. As with other API fields,\\ntypes are classified into three conformance levels:\\n\\n- Core: Filter types and their corresponding configuration defined by\\n  \\\"Support: Core\\\" in this package, e.g. \\\"RequestHeaderModifier\\\". All\\n  implementations must support core filters.\\n\\n- Extended: Filter types and their corresponding configuration defined by\\n  \\\"Support: Extended\\\" in this package, e.g. \\\"RequestMirror\\\". Implementers\\n  are encouraged to support extended filters.\\n\\n- Implementation-specific: Filters that are defined and supported by\\n  specific vendors.\\n  In the future, filters showing convergence in behavior across multiple\\n  implementations will be considered for inclusion in extended or core\\n  conformance levels. Filter-specific configuration for such filters\\n  is specified using the ExtensionRef field. `Type` should be set to\\n  \\\"ExtensionRef\\\" for custom filters.\\n\\nImplementers are encouraged to define custom implementation types to\\nextend the core API with implementation-specific behavior.\\n\\nIf a reference to a custom filter type cannot be resolved, the filter\\nMUST NOT be skipped. Instead, requests that would have been processed by\\nthat filter MUST receive a HTTP error response.\\n\\nNote that values may be added to this enum, implementations\\nmust ensure that unknown values will not cause a crash.\\n\\nUnknown values here must result in the implementation setting the\\nAccepted Condition for the Route to `status: False`, with a\\nReason of `UnsupportedValue`.\",\n              \"enum\": [\n               \"RequestHeaderModifier\",\n               \"ResponseHeaderModifier\",\n               \"RequestMirror\",\n               \"RequestRedirect\",\n               \"URLRewrite\",\n               \"ExtensionRef\"\n              ],\n              \"type\": \"string\"\n             },\n             \"urlRewrite\": {\n              \"description\": \"URLRewrite defines a schema for a filter that modifies a request during forwarding.\\n\\nSupport: Extended\",\n              \"properties\": {\n               \"hostname\": {\n                \"description\": \"Hostname is the value to be used to replace the Host header value during\\nforwarding.\\n\\nSupport: Extended\",\n                \"maxLength\": 253,\n                \"minLength\": 1,\n                \"pattern\": \"^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$\",\n                \"type\": \"string\"\n               },\n               \"path\": {\n                \"description\": \"Path defines a path rewrite.\\n\\nSupport: Extended\",\n                \"properties\": {\n                 \"replaceFullPath\": {\n                  \"description\": \"ReplaceFullPath specifies the value with which to replace the full path\\nof a request during a rewrite or redirect.\",\n                  \"maxLength\": 1024,\n                  \"type\": \"string\"\n                 },\n                 \"replacePrefixMatch\": {\n                  \"description\": \"ReplacePrefixMatch specifies the value with which to replace the prefix\\nmatch of a request during a rewrite or redirect. For example, a request\\nto \\\"/foo/bar\\\" with a prefix match of \\\"/foo\\\" and a ReplacePrefixMatch\\nof \\\"/xyz\\\" would be modified to \\\"/xyz/bar\\\".\\n\\nNote that this matches the behavior of the PathPrefix match type. This\\nmatches full path elements. A path element refers to the list of labels\\nin the path split by the `/` separator. When specified, a trailing `/` is\\nignored. For example, the paths `/abc`, `/abc/`, and `/abc/def` would all\\nmatch the prefix `/abc`, but the path `/abcd` would not.\\n\\nReplacePrefixMatch is only compatible with a `PathPrefix` HTTPRouteMatch.\\nUsing any other HTTPRouteMatch type on the same HTTPRouteRule will result in\\nthe implementation setting the Accepted Condition for the Route to `status: False`.\\n\\nRequest Path | Prefix Match | Replace Prefix | Modified Path\",\n                  \"maxLength\": 1024,\n                  \"type\": \"string\"\n                 },\n                 \"type\": {\n                  \"description\": \"Type defines the type of path modifier. Additional types may be\\nadded in a future release of the API.\\n\\nNote that values may be added to this enum, implementations\\nmust ensure that unknown values will not cause a crash.\\n\\nUnknown values here must result in the implementation setting the\\nAccepted Condition for the Route to `status: False`, with a\\nReason of `UnsupportedValue`.\",\n                  \"enum\": [\n                   \"ReplaceFullPath\",\n                   \"ReplacePrefixMatch\"\n                  ],\n                  \"type\": \"string\"\n                 }\n                },\n                \"required\": [\n                 \"type\"\n                ],\n                \"type\": \"object\",\n                \"x-kubernetes-validations\": [\n                 {\n                  \"message\": \"replaceFullPath must be specified when type is set to 'ReplaceFullPath'\",\n                  \"rule\": \"self.type == 'ReplaceFullPath' ? has(self.replaceFullPath) : true\"\n                 },\n                 {\n                  \"message\": \"type must be 'ReplaceFullPath' when replaceFullPath is set\",\n                  \"rule\": \"has(self.replaceFullPath) ? self.type == 'ReplaceFullPath' : true\"\n                 },\n                 {\n                  \"message\": \"replacePrefixMatch must be specified when type is set to 'ReplacePrefixMatch'\",\n                  \"rule\": \"self.type == 'ReplacePrefixMatch' ? has(self.replacePrefixMatch) : true\"\n                 },\n                 {\n                  \"message\": \"type must be 'ReplacePrefixMatch' when replacePrefixMatch is set\",\n                  \"rule\": \"has(self.replacePrefixMatch) ? self.type == 'ReplacePrefixMatch' : true\"\n                 }\n                ]\n               }\n              },\n              \"type\": \"object\"\n             }\n            },\n            \"required\": [\n             \"type\"\n            ],\n            \"type\": \"object\",\n            \"x-kubernetes-validations\": [\n             {\n              \"message\": \"filter.requestHeaderModifier must be nil if the filter.type is not RequestHeaderModifier\",\n              \"rule\": \"!(has(self.requestHeaderModifier) \\u0026\\u0026 self.type != 'RequestHeaderModifier')\"\n             },\n             {\n              \"message\": \"filter.requestHeaderModifier must be specified for RequestHeaderModifier filter.type\",\n              \"rule\": \"!(!has(self.requestHeaderModifier) \\u0026\\u0026 self.type == 'RequestHeaderModifier')\"\n             },\n             {\n              \"message\": \"filter.responseHeaderModifier must be nil if the filter.type is not ResponseHeaderModifier\",\n              \"rule\": \"!(has(self.responseHeaderModifier) \\u0026\\u0026 self.type != 'ResponseHeaderModifier')\"\n             },\n             {\n              \"message\": \"filter.responseHeaderModifier must be specified for ResponseHeaderModifier filter.type\",\n              \"rule\": \"!(!has(self.responseHeaderModifier) \\u0026\\u0026 self.type == 'ResponseHeaderModifier')\"\n             },\n             {\n              \"message\": \"filter.requestMirror must be nil if the filter.type is not RequestMirror\",\n              \"rule\": \"!(has(self.requestMirror) \\u0026\\u0026 self.type != 'RequestMirror')\"\n             },\n             {\n              \"message\": \"filter.requestMirror must be specified for RequestMirror filter.type\",\n              \"rule\": \"!(!has(self.requestMirror) \\u0026\\u0026 self.type == 'RequestMirror')\"\n             },\n             {\n              \"message\": \"filter.requestRedirect must be nil if the filter.type is not RequestRedirect\",\n              \"rule\": \"!(has(self.requestRedirect) \\u0026\\u0026 self.type != 'RequestRedirect')\"\n             },\n             {\n              \"message\": \"filter.requestRedirect must be specified for RequestRedirect filter.type\",\n              \"rule\": \"!(!has(self.requestRedirect) \\u0026\\u0026 self.type == 'RequestRedirect')\"\n             },\n             {\n              \"message\": \"filter.urlRewrite must be nil if the filter.type is not URLRewrite\",\n              \"rule\": \"!(has(self.urlRewrite) \\u0026\\u0026 self.type != 'URLRewrite')\"\n             },\n             {\n              \"message\": \"filter.urlRewrite must be specified for URLRewrite filter.type\",\n              \"rule\": \"!(!has(self.urlRewrite) \\u0026\\u0026 self.type == 'URLRewrite')\"\n             },\n             {\n              \"message\": \"filter.extensionRef must be nil if the filter.type is not ExtensionRef\",\n              \"rule\": \"!(has(self.extensionRef) \\u0026\\u0026 self.type != 'ExtensionRef')\"\n             },\n             {\n              \"message\": \"filter.extensionRef must be specified for ExtensionRef filter.type\",\n              \"rule\": \"!(!has(self.extensionRef) \\u0026\\u0026 self.type == 'ExtensionRef')\"\n             }\n            ]\n           },\n           \"maxItems\": 16,\n           \"type\": \"array\",\n           \"x-kubernetes-validations\": [\n            {\n             \"message\": \"May specify either httpRouteFilterRequestRedirect or httpRouteFilterRequestRewrite, but not both\",\n             \"rule\": \"!(self.exists(f, f.type == 'RequestRedirect') \\u0026\\u0026 self.exists(f, f.type == 'URLRewrite'))\"\n            },\n            {\n             \"message\": \"May specify either httpRouteFilterRequestRedirect or httpRouteFilterRequestRewrite, but not both\",\n             \"rule\": \"!(self.exists(f, f.type == 'RequestRedirect') \\u0026\\u0026 self.exists(f, f.type == 'URLRewrite'))\"\n            },\n            {\n             \"message\": \"RequestHeaderModifier filter cannot be repeated\",\n             \"rule\": \"self.filter(f, f.type == 'RequestHeaderModifier').size() \\u003c= 1\"\n            },\n            {\n             \"message\": \"ResponseHeaderModifier filter cannot be repeated\",\n             \"rule\": \"self.filter(f, f.type == 'ResponseHeaderModifier').size() \\u003c= 1\"\n            },\n            {\n             \"message\": \"RequestRedirect filter cannot be repeated\",\n             \"rule\": \"self.filter(f, f.type == 'RequestRedirect').size() \\u003c= 1\"\n            },\n            {\n             \"message\": \"URLRewrite filter cannot be repeated\",\n             \"rule\": \"self.filter(f, f.type == 'URLRewrite').size() \\u003c= 1\"\n            }\n           ]\n          },\n          \"group\": {\n           \"default\": \"\",\n           \"description\": \"Group is the group of the referent. For example, \\\"gateway.networking.k8s.io\\\".\\nWhen unspecified or empty string, core API group is inferred.\",\n           \"maxLength\": 253,\n           \"pattern\": \"^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$\",\n           \"type\": \"string\"\n          },\n          \"kind\": {\n           \"default\": \"Service\",\n           \"description\": \"Kind is the Kubernetes resource kind of the referent. For example\\n\\\"Service\\\".\\n\\nDefaults to \\\"Service\\\" when not specified.\\n\\nExternalName services can refer to CNAME DNS records that may live\\noutside of the cluster and as such are difficult to reason about in\\nterms of conformance. They also may not be safe to forward to (see\\nCVE-2021-25740 for more information). Implementations SHOULD NOT\\nsupport ExternalName Services.\\n\\nSupport: Core (Services with a type other than ExternalName)\\n\\nSupport: Implementation-specific (Services with type ExternalName)\",\n           \"maxLength\": 63,\n           \"minLength\": 1,\n           \"pattern\": \"^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$\",\n           \"type\": \"string\"\n          },\n          \"name\": {\n           \"description\": \"Name is the name of the referent.\",\n           \"maxLength\": 253,\n           \"minLength\": 1,\n           \"type\": \"string\"\n          },\n          \"namespace\": {\n           \"description\": \"Namespace is the namespace of the backend. When unspecified, the local\\nnamespace is inferred.\\n\\nNote that when a namespace different than the local namespace is specified,\\na ReferenceGrant object is required in the referent namespace to allow that\\nnamespace's owner to accept the reference. See the ReferenceGrant\\ndocumentation for details.\\n\\nSupport: Core\",\n           \"maxLength\": 63,\n           \"minLength\": 1,\n           \"pattern\": \"^[a-z0-9]([-a-z0-9]*[a-z0-9])?$\",\n           \"type\": \"string\"\n          },\n          \"port\": {\n           \"description\": \"Port specifies the destination port number to use for this resource.\\nPort is required when the referent is a Kubernetes Service. In this\\ncase, the port number is the service port number, not the target port.\\nFor other resources, destination port might be derived from the referent\\nresource or this field.\",\n           \"format\": \"int32\",\n           \"maximum\": 65535,\n           \"minimum\": 1,\n           \"type\": \"integer\"\n          },\n          \"weight\": {\n           \"default\": 1,\n           \"description\": \"Weight specifies the proportion of requests forwarded to the referenced\\nbackend. This is computed as weight/(sum of all weights in this\\nBackendRefs list). For non-zero values, there may be some epsilon from\\nthe exact proportion defined here depending on the precision an\\nimplementation supports. Weight is not a percentage and the sum of\\nweights does not need to equal 100.\\n\\nIf only one backend is specified and it has a weight greater than 0, 100%\\nof the traffic is forwarded to that backend. If weight is set to 0, no\\ntraffic should be forwarded for this entry. If unspecified, weight\\ndefaults to 1.\\n\\nSupport for this field varies based on the context where used.\",\n           \"format\": \"int32\",\n           \"maximum\": 1000000,\n           \"minimum\": 0,\n           \"type\": \"integer\"\n          }\n         },\n         \"required\": [\n          \"name\"\n         ],\n         \"type\": \"object\",\n         \"x-kubernetes-validations\": [\n          {\n           \"message\": \"Must have port for Service reference\",\n           \"rule\": \"(size(self.group) == 0 \\u0026\\u0026 self.kind == 'Service') ? has(self.port) : true\"\n          }\n         ]\n        },\n        \"maxItems\": 16,\n        \"type\": \"array\"\n       },\n       \"filters\": {\n        \"description\": \"Filters define the filters that are applied to requests that match\\nthis rule.\\n\\nWherever possible, implementations SHOULD implement filters in the order\\nthey are specified.\\n\\nImplementations MAY choose to implement this ordering strictly, rejecting\\nany combination or order of filters that can not be supported. If implementations\\nchoose a strict interpretation of filter ordering, they MUST clearly document\\nthat behavior.\\n\\nTo reject an invalid combination or order of filters, implementations SHOULD\\nconsider the Route Rules with this configuration invalid. If all Route Rules\\nin a Route are invalid, the entire Route would be considered invalid. If only\\na portion of Route Rules are invalid, implementations MUST set the\\n\\\"PartiallyInvalid\\\" condition for the Route.\\n\\nConformance-levels at this level are defined based on the type of filter:\\n\\n- ALL core filters MUST be supported by all implementations.\\n- Implementers are encouraged to support extended filters.\\n- Implementation-specific custom filters have no API guarantees across\\n  implementations.\\n\\nSpecifying the same filter multiple times is not supported unless explicitly\\nindicated in the filter.\\n\\nAll filters are expected to be compatible with each other except for the\\nURLRewrite and RequestRedirect filters, which may not be combined. If an\\nimplementation can not support other combinations of filters, they must clearly\\ndocument that limitation. In cases where incompatible or unsupported\\nfilters are specified and cause the `Accepted` condition to be set to status\\n`False`, implementations may use the `IncompatibleFilters` reason to specify\\nthis configuration error.\\n\\nSupport: Core\",\n        \"items\": {\n         \"description\": \"HTTPRouteFilter defines processing steps that must be completed during the\\nrequest or response lifecycle. HTTPRouteFilters are meant as an extension\\npoint to express processing that may be done in Gateway implementations. Some\\nexamples include request or response modification, implementing\\nauthentication strategies, rate-limiting, and traffic shaping. API\\nguarantee/conformance is defined based on the type of the filter.\",\n         \"properties\": {\n          \"extensionRef\": {\n           \"description\": \"ExtensionRef is an optional, implementation-specific extension to the\\n\\\"filter\\\" behavior.  For example, resource \\\"myroutefilter\\\" in group\\n\\\"networking.example.net\\\"). ExtensionRef MUST NOT be used for core and\\nextended filters.\\n\\nThis filter can be used multiple times within the same rule.\\n\\nSupport: Implementation-specific\",\n           \"properties\": {\n            \"group\": {\n             \"description\": \"Group is the group of the referent. For example, \\\"gateway.networking.k8s.io\\\".\\nWhen unspecified or empty string, core API group is inferred.\",\n             \"maxLength\": 253,\n             \"pattern\": \"^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$\",\n             \"type\": \"string\"\n            },\n            \"kind\": {\n             \"description\": \"Kind is kind of the referent. For example \\\"HTTPRoute\\\" or \\\"Service\\\".\",\n             \"maxLength\": 63,\n             \"minLength\": 1,\n             \"pattern\": \"^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$\",\n             \"type\": \"string\"\n            },\n            \"name\": {\n             \"description\": \"Name is the name of the referent.\",\n             \"maxLength\": 253,\n             \"minLength\": 1,\n             \"type\": \"string\"\n            }\n           },\n           \"required\": [\n            \"group\",\n            \"kind\",\n            \"name\"\n           ],\n           \"type\": \"object\"\n          },\n          \"requestHeaderModifier\": {\n           \"description\": \"RequestHeaderModifier defines a schema for a filter that modifies request\\nheaders.\\n\\nSupport: Core\",\n           \"properties\": {\n            \"add\": {\n             \"description\": \"Add adds the given header(s) (name, value) to the request\\nbefore the action. It appends to any existing values associated\\nwith the header name.\\n\\nInput:\\n  GET /foo HTTP/1.1\\n  my-header: foo\\n\\nConfig:\\n  add:\\n  - name: \\\"my-header\\\"\\n    value: \\\"bar,baz\\\"\\n\\nOutput:\\n  GET /foo HTTP/1.1\\n  my-header: foo,bar,baz\",\n             \"items\": {\n              \"description\": \"HTTPHeader represents an HTTP Header name and value as defined by RFC 7230.\",\n              \"properties\": {\n               \"name\": {\n                \"description\": \"Name is the name of the HTTP Header to be matched. Name matching MUST be\\ncase insensitive. (See https://tools.ietf.org/html/rfc7230#section-3.2).\\n\\nIf multiple entries specify equivalent header names, the first entry with\\nan equivalent name MUST be considered for a match. Subsequent entries\\nwith an equivalent header name MUST be ignored. Due to the\\ncase-insensitivity of header names, \\\"foo\\\" and \\\"Foo\\\" are considered\\nequivalent.\",\n                \"maxLength\": 256,\n                \"minLength\": 1,\n                \"pattern\": \"^[A-Za-z0-9!#$%\\u0026'*+\\\\-.^_\\\\x60|~]+$\",\n                \"type\": \"string\"\n               },\n               \"value\": {\n                \"description\": \"Value is the value of HTTP Header to be matched.\",\n                \"maxLength\": 4096,\n                \"minLength\": 1,\n                \"type\": \"string\"\n               }\n              },\n              \"required\": [\n               \"name\",\n               \"value\"\n              ],\n              \"type\": \"object\"\n             },\n             \"maxItems\": 16,\n             \"type\": \"array\",\n             \"x-kubernetes-list-map-keys\": [\n              \"name\"\n             ],\n             \"x-kubernetes-list-type\": \"map\"\n            },\n            \"remove\": {\n             \"description\": \"Remove the given header(s) from the HTTP request before the action. The\\nvalue of Remove is a list of HTTP header names. Note that the header\\nnames are case-insensitive (see\\nhttps://datatracker.ietf.org/doc/html/rfc2616#section-4.2).\\n\\nInput:\\n  GET /foo HTTP/1.1\\n  my-header1: foo\\n  my-header2: bar\\n  my-header3: baz\\n\\nConfig:\\n  remove: [\\\"my-header1\\\", \\\"my-header3\\\"]\\n\\nOutput:\\n  GET /foo HTTP/1.1\\n  my-header2: bar\",\n             \"items\": {\n              \"type\": \"string\"\n             },\n             \"maxItems\": 16,\n             \"type\": \"array\",\n             \"x-kubernetes-list-type\": \"set\"\n            },\n            \"set\": {\n             \"description\": \"Set overwrites the request with the given header (name, value)\\nbefore the action.\\n\\nInput:\\n  GET /foo HTTP/1.1\\n  my-header: foo\\n\\nConfig:\\n  set:\\n  - name: \\\"my-header\\\"\\n    value: \\\"bar\\\"\\n\\nOutput:\\n  GET /foo HTTP/1.1\\n  my-header: bar\",\n             \"items\": {\n              \"description\": \"HTTPHeader represents an HTTP Header name and value as defined by RFC 7230.\",\n              \"properties\": {\n               \"name\": {\n                \"description\": \"Name is the name of the HTTP Header to be matched. Name matching MUST be\\ncase insensitive. (See https://tools.ietf.org/html/rfc7230#section-3.2).\\n\\nIf multiple entries specify equivalent header names, the first entry with\\nan equivalent name MUST be considered for a match. Subsequent entries\\nwith an equivalent header name MUST be ignored. Due to the\\ncase-insensitivity of header names, \\\"foo\\\" and \\\"Foo\\\" are considered\\nequivalent.\",\n                \"maxLength\": 256,\n                \"minLength\": 1,\n                \"pattern\": \"^[A-Za-z0-9!#$%\\u0026'*+\\\\-.^_\\\\x60|~]+$\",\n                \"type\": \"string\"\n               },\n               \"value\": {\n                \"description\": \"Value is the value of HTTP Header to be matched.\",\n                \"maxLength\": 4096,\n                \"minLength\": 1,\n                \"type\": \"string\"\n               }\n              },\n              \"required\": [\n               \"name\",\n               \"value\"\n              ],\n              \"type\": \"object\"\n             },\n             \"maxItems\": 16,\n             \"type\": \"array\",\n             \"x-kubernetes-list-map-keys\": [\n              \"name\"\n             ],\n             \"x-kubernetes-list-type\": \"map\"\n            }\n           },\n           \"type\": \"object\"\n          },\n          \"requestMirror\": {\n           \"description\": \"RequestMirror defines a schema for a filter that mirrors requests.\\nRequests are sent to the specified destination, but responses from\\nthat destination are ignored.\\n\\nThis filter can be used multiple times within the same rule. Note that\\nnot all implementations will be able to support mirroring to multiple\\nbackends.\\n\\nSupport: Extended\\n\\n\",\n           \"properties\": {\n            \"backendRef\": {\n             \"description\": \"BackendRef references a resource where mirrored requests are sent.\\n\\nMirrored requests must be sent only to a single destination endpoint\\nwithin this BackendRef, irrespective of how many endpoints are present\\nwithin this BackendRef.\\n\\nIf the referent cannot be found, this BackendRef is invalid and must be\\ndropped from the Gateway. The controller must ensure the \\\"ResolvedRefs\\\"\\ncondition on the Route status is set to `status: False` and not configure\\nthis backend in the underlying implementation.\\n\\nIf there is a cross-namespace reference to an *existing* object\\nthat is not allowed by a ReferenceGrant, the controller must ensure the\\n\\\"ResolvedRefs\\\"  condition on the Route is set to `status: False`,\\nwith the \\\"RefNotPermitted\\\" reason and not configure this backend in the\\nunderlying implementation.\\n\\nIn either error case, the Message of the `ResolvedRefs` Condition\\nshould be used to provide more detail about the problem.\\n\\nSupport: Extended for Kubernetes Service\\n\\nSupport: Implementation-specific for any other resource\",\n             \"properties\": {\n              \"group\": {\n               \"default\": \"\",\n               \"description\": \"Group is the group of the referent. For example, \\\"gateway.networking.k8s.io\\\".\\nWhen unspecified or empty string, core API group is inferred.\",\n               \"maxLength\": 253,\n               \"pattern\": \"^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$\",\n               \"type\": \"string\"\n              },\n              \"kind\": {\n               \"default\": \"Service\",\n               \"description\": \"Kind is the Kubernetes resource kind of the referent. For example\\n\\\"Service\\\".\\n\\nDefaults to \\\"Service\\\" when not specified.\\n\\nExternalName services can refer to CNAME DNS records that may live\\noutside of the cluster and as such are difficult to reason about in\\nterms of conformance. They also may not be safe to forward to (see\\nCVE-2021-25740 for more information). Implementations SHOULD NOT\\nsupport ExternalName Services.\\n\\nSupport: Core (Services with a type other than ExternalName)\\n\\nSupport: Implementation-specific (Services with type ExternalName)\",\n               \"maxLength\": 63,\n               \"minLength\": 1,\n               \"pattern\": \"^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$\",\n               \"type\": \"string\"\n              },\n              \"name\": {\n               \"description\": \"Name is the name of the referent.\",\n               \"maxLength\": 253,\n               \"minLength\": 1,\n               \"type\": \"string\"\n              },\n              \"namespace\": {\n               \"description\": \"Namespace is the namespace of the backend. When unspecified, the local\\nnamespace is inferred.\\n\\nNote that when a namespace different than the local namespace is specified,\\na ReferenceGrant object is required in the referent namespace to allow that\\nnamespace's owner to accept the reference. See the ReferenceGrant\\ndocumentation for details.\\n\\nSupport: Core\",\n               \"maxLength\": 63,\n               \"minLength\": 1,\n               \"pattern\": \"^[a-z0-9]([-a-z0-9]*[a-z0-9])?$\",\n               \"type\": \"string\"\n              },\n              \"port\": {\n               \"description\": \"Port specifies the destination port number to use for this resource.\\nPort is required when the referent is a Kubernetes Service. In this\\ncase, the port number is the service port number, not the target port.\\nFor other resources, destination port might be derived from the referent\\nresource or this field.\",\n               \"format\": \"int32\",\n               \"maximum\": 65535,\n               \"minimum\": 1,\n               \"type\": \"integer\"\n              }\n             },\n             \"required\": [\n              \"name\"\n             ],\n             \"type\": \"object\",\n             \"x-kubernetes-validations\": [\n              {\n               \"message\": \"Must have port for Service reference\",\n               \"rule\": \"(size(self.group) == 0 \\u0026\\u0026 self.kind == 'Service') ? has(self.port) : true\"\n              }\n             ]\n            }\n           },\n           \"required\": [\n            \"backendRef\"\n           ],\n           \"type\": \"object\"\n          },\n          \"requestRedirect\": {\n           \"description\": \"RequestRedirect defines a schema for a filter that responds to the\\nrequest with an HTTP redirection.\\n\\nSupport: Core\",\n           \"properties\": {\n            \"hostname\": {\n             \"description\": \"Hostname is the hostname to be used in the value of the `Location`\\nheader in the response.\\nWhen empty, the hostname in the `Host` header of the request is used.\\n\\nSupport: Core\",\n             \"maxLength\": 253,\n             \"minLength\": 1,\n             \"pattern\": \"^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$\",\n             \"type\": \"string\"\n            },\n            \"path\": {\n             \"description\": \"Path defines parameters used to modify the path of the incoming request.\\nThe modified path is then used to construct the `Location` header. When\\nempty, the request path is used as-is.\\n\\nSupport: Extended\",\n             \"properties\": {\n              \"replaceFullPath\": {\n               \"description\": \"ReplaceFullPath specifies the value with which to replace the full path\\nof a request during a rewrite or redirect.\",\n               \"maxLength\": 1024,\n               \"type\": \"string\"\n              },\n              \"replacePrefixMatch\": {\n               \"description\": \"ReplacePrefixMatch specifies the value with which to replace the prefix\\nmatch of a request during a rewrite or redirect. For example, a request\\nto \\\"/foo/bar\\\" with a prefix match of \\\"/foo\\\" and a ReplacePrefixMatch\\nof \\\"/xyz\\\" would be modified to \\\"/xyz/bar\\\".\\n\\nNote that this matches the behavior of the PathPrefix match type. This\\nmatches full path elements. A path element refers to the list of labels\\nin the path split by the `/` separator. When specified, a trailing `/` is\\nignored. For example, the paths `/abc`, `/abc/`, and `/abc/def` would all\\nmatch the prefix `/abc`, but the path `/abcd` would not.\\n\\nReplacePrefixMatch is only compatible with a `PathPrefix` HTTPRouteMatch.\\nUsing any other HTTPRouteMatch type on the same HTTPRouteRule will result in\\nthe implementation setting the Accepted Condition for the Route to `status: False`.\\n\\nRequest Path | Prefix Match | Replace Prefix | Modified Path\",\n               \"maxLength\": 1024,\n               \"type\": \"string\"\n              },\n              \"type\": {\n               \"description\": \"Type defines the type of path modifier. Additional types may be\\nadded in a future release of the API.\\n\\nNote that values may be added to this enum, implementations\\nmust ensure that unknown values will not cause a crash.\\n\\nUnknown values here must result in the implementation setting the\\nAccepted Condition for the Route to `status: False`, with a\\nReason of `UnsupportedValue`.\",\n               \"enum\": [\n                \"ReplaceFullPath\",\n                \"ReplacePrefixMatch\"\n               ],\n               \"type\": \"string\"\n              }\n             },\n             \"required\": [\n              \"type\"\n             ],\n             \"type\": \"object\",\n             \"x-kubernetes-validations\": [\n              {\n               \"message\": \"replaceFullPath must be specified when type is set to 'ReplaceFullPath'\",\n               \"rule\": \"self.type == 'ReplaceFullPath' ? has(self.replaceFullPath) : true\"\n              },\n              {\n               \"message\": \"type must be 'ReplaceFullPath' when replaceFullPath is set\",\n               \"rule\": \"has(self.replaceFullPath) ? self.type == 'ReplaceFullPath' : true\"\n              },\n              {\n               \"message\": \"replacePrefixMatch must be specified when type is set to 'ReplacePrefixMatch'\",\n               \"rule\": \"self.type == 'ReplacePrefixMatch' ? has(self.replacePrefixMatch) : true\"\n              },\n              {\n               \"message\": \"type must be 'ReplacePrefixMatch' when replacePrefixMatch is set\",\n               \"rule\": \"has(self.replacePrefixMatch) ? self.type == 'ReplacePrefixMatch' : true\"\n              }\n             ]\n            },\n            \"port\": {\n             \"description\": \"Port is the port to be used in the value of the `Location`\\nheader in the response.\\n\\nIf no port is specified, the redirect port MUST be derived using the\\nfollowing rules:\\n\\n* If redirect scheme is not-empty, the redirect port MUST be the well-known\\n  port associated with the redirect scheme. Specifically \\\"http\\\" to port 80\\n  and \\\"https\\\" to port 443. If the redirect scheme does not have a\\n  well-known port, the listener port of the Gateway SHOULD be used.\\n* If redirect scheme is empty, the redirect port MUST be the Gateway\\n  Listener port.\\n\\nImplementations SHOULD NOT add the port number in the 'Location'\\nheader in the following cases:\\n\\n* A Location header that will use HTTP (whether that is determined via\\n  the Listener protocol or the Scheme field) _and_ use port 80.\\n* A Location header that will use HTTPS (whether that is determined via\\n  the Listener protocol or the Scheme field) _and_ use port 443.\\n\\nSupport: Extended\",\n             \"format\": \"int32\",\n             \"maximum\": 65535,\n             \"minimum\": 1,\n             \"type\": \"integer\"\n            },\n            \"scheme\": {\n             \"description\": \"Scheme is the scheme to be used in the value of the `Location` header in\\nthe response. When empty, the scheme of the request is used.\\n\\nScheme redirects can affect the port of the redirect, for more information,\\nrefer to the documentation for the port field of this filter.\\n\\nNote that values may be added to this enum, implementations\\nmust ensure that unknown values will not cause a crash.\\n\\nUnknown values here must result in the implementation setting the\\nAccepted Condition for the Route to `status: False`, with a\\nReason of `UnsupportedValue`.\\n\\nSupport: Extended\",\n             \"enum\": [\n              \"http\",\n              \"https\"\n             ],\n             \"type\": \"string\"\n            },\n            \"statusCode\": {\n             \"default\": 302,\n             \"description\": \"StatusCode is the HTTP status code to be used in response.\\n\\nNote that values may be added to this enum, implementations\\nmust ensure that unknown values will not cause a crash.\\n\\nUnknown values here must result in the implementation setting the\\nAccepted Condition for the Route to `status: False`, with a\\nReason of `UnsupportedValue`.\\n\\nSupport: Core\",\n             \"enum\": [\n              301,\n              302\n             ],\n             \"type\": \"integer\"\n            }\n           },\n           \"type\": \"object\"\n          },\n          \"responseHeaderModifier\": {\n           \"description\": \"ResponseHeaderModifier defines a schema for a filter that modifies response\\nheaders.\\n\\nSupport: Extended\",\n           \"properties\": {\n            \"add\": {\n             \"description\": \"Add adds the given header(s) (name, value) to the request\\nbefore the action. It appends to any existing values associated\\nwith the header name.\\n\\nInput:\\n  GET /foo HTTP/1.1\\n  my-header: foo\\n\\nConfig:\\n  add:\\n  - name: \\\"my-header\\\"\\n    value: \\\"bar,baz\\\"\\n\\nOutput:\\n  GET /foo HTTP/1.1\\n  my-header: foo,bar,baz\",\n             \"items\": {\n              \"description\": \"HTTPHeader represents an HTTP Header name and value as defined by RFC 7230.\",\n              \"properties\": {\n               \"name\": {\n                \"description\": \"Name is the name of the HTTP Header to be matched. Name matching MUST be\\ncase insensitive. (See https://tools.ietf.org/html/rfc7230#section-3.2).\\n\\nIf multiple entries specify equivalent header names, the first entry with\\nan equivalent name MUST be considered for a match. Subsequent entries\\nwith an equivalent header name MUST be ignored. Due to the\\ncase-insensitivity of header names, \\\"foo\\\" and \\\"Foo\\\" are considered\\nequivalent.\",\n                \"maxLength\": 256,\n                \"minLength\": 1,\n                \"pattern\": \"^[A-Za-z0-9!#$%\\u0026'*+\\\\-.^_\\\\x60|~]+$\",\n                \"type\": \"string\"\n               },\n               \"value\": {\n                \"description\": \"Value is the value of HTTP Header to be matched.\",\n                \"maxLength\": 4096,\n                \"minLength\": 1,\n                \"type\": \"string\"\n               }\n              },\n              \"required\": [\n               \"name\",\n               \"value\"\n              ],\n              \"type\": \"object\"\n             },\n             \"maxItems\": 16,\n             \"type\": \"array\",\n             \"x-kubernetes-list-map-keys\": [\n              \"name\"\n             ],\n             \"x-kubernetes-list-type\": \"map\"\n            },\n            \"remove\": {\n             \"description\": \"Remove the given header(s) from the HTTP request before the action. The\\nvalue of Remove is a list of HTTP header names. Note that the header\\nnames are case-insensitive (see\\nhttps://datatracker.ietf.org/doc/html/rfc2616#section-4.2).\\n\\nInput:\\n  GET /foo HTTP/1.1\\n  my-header1: foo\\n  my-header2: bar\\n  my-header3: baz\\n\\nConfig:\\n  remove: [\\\"my-header1\\\", \\\"my-header3\\\"]\\n\\nOutput:\\n  GET /foo HTTP/1.1\\n  my-header2: bar\",\n             \"items\": {\n              \"type\": \"string\"\n             },\n             \"maxItems\": 16,\n             \"type\": \"array\",\n             \"x-kubernetes-list-type\": \"set\"\n            },\n            \"set\": {\n             \"description\": \"Set overwrites the request with the given header (name, value)\\nbefore the action.\\n\\nInput:\\n  GET /foo HTTP/1.1\\n  my-header: foo\\n\\nConfig:\\n  set:\\n  - name: \\\"my-header\\\"\\n    value: \\\"bar\\\"\\n\\nOutput:\\n  GET /foo HTTP/1.1\\n  my-header: bar\",\n             \"items\": {\n              \"description\": \"HTTPHeader represents an HTTP Header name and value as defined by RFC 7230.\",\n              \"properties\": {\n               \"name\": {\n                \"description\": \"Name is the name of the HTTP Header to be matched. Name matching MUST be\\ncase insensitive. (See https://tools.ietf.org/html/rfc7230#section-3.2).\\n\\nIf multiple entries specify equivalent header names, the first entry with\\nan equivalent name MUST be considered for a match. Subsequent entries\\nwith an equivalent header name MUST be ignored. Due to the\\ncase-insensitivity of header names, \\\"foo\\\" and \\\"Foo\\\" are considered\\nequivalent.\",\n                \"maxLength\": 256,\n                \"minLength\": 1,\n                \"pattern\": \"^[A-Za-z0-9!#$%\\u0026'*+\\\\-.^_\\\\x60|~]+$\",\n                \"type\": \"string\"\n               },\n               \"value\": {\n                \"description\": \"Value is the value of HTTP Header to be matched.\",\n                \"maxLength\": 4096,\n                \"minLength\": 1,\n                \"type\": \"string\"\n               }\n              },\n              \"required\": [\n               \"name\",\n               \"value\"\n              ],\n              \"type\": \"object\"\n             },\n             \"maxItems\": 16,\n             \"type\": \"array\",\n             \"x-kubernetes-list-map-keys\": [\n              \"name\"\n             ],\n             \"x-kubernetes-list-type\": \"map\"\n            }\n           },\n           \"type\": \"object\"\n          },\n          \"type\": {\n           \"description\": \"Type identifies the type of filter to apply. As with other API fields,\\ntypes are classified into three conformance levels:\\n\\n- Core: Filter types and their corresponding configuration defined by\\n  \\\"Support: Core\\\" in this package, e.g. \\\"RequestHeaderModifier\\\". All\\n  implementations must support core filters.\\n\\n- Extended: Filter types and their corresponding configuration defined by\\n  \\\"Support: Extended\\\" in this package, e.g. \\\"RequestMirror\\\". Implementers\\n  are encouraged to support extended filters.\\n\\n- Implementation-specific: Filters that are defined and supported by\\n  specific vendors.\\n  In the future, filters showing convergence in behavior across multiple\\n  implementations will be considered for inclusion in extended or core\\n  conformance levels. Filter-specific configuration for such filters\\n  is specified using the ExtensionRef field. `Type` should be set to\\n  \\\"ExtensionRef\\\" for custom filters.\\n\\nImplementers are encouraged to define custom implementation types to\\nextend the core API with implementation-specific behavior.\\n\\nIf a reference to a custom filter type cannot be resolved, the filter\\nMUST NOT be skipped. Instead, requests that would have been processed by\\nthat filter MUST receive a HTTP error response.\\n\\nNote that values may be added to this enum, implementations\\nmust ensure that unknown values will not cause a crash.\\n\\nUnknown values here must result in the implementation setting the\\nAccepted Condition for the Route to `status: False`, with a\\nReason of `UnsupportedValue`.\",\n           \"enum\": [\n            \"RequestHeaderModifier\",\n            \"ResponseHeaderModifier\",\n            \"RequestMirror\",\n            \"RequestRedirect\",\n            \"URLRewrite\",\n            \"ExtensionRef\"\n           ],\n           \"type\": \"string\"\n          },\n          \"urlRewrite\": {\n           \"description\": \"URLRewrite defines a schema for a filter that modifies a request during forwarding.\\n\\nSupport: Extended\",\n           \"properties\": {\n            \"hostname\": {\n             \"description\": \"Hostname is the value to be used to replace the Host header value during\\nforwarding.\\n\\nSupport: Extended\",\n             \"maxLength\": 253,\n             \"minLength\": 1,\n             \"pattern\": \"^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$\",\n             \"type\": \"string\"\n            },\n            \"path\": {\n             \"description\": \"Path defines a path rewrite.\\n\\nSupport: Extended\",\n             \"properties\": {\n              \"replaceFullPath\": {\n               \"description\": \"ReplaceFullPath specifies the value with which to replace the full path\\nof a request during a rewrite or redirect.\",\n               \"maxLength\": 1024,\n               \"type\": \"string\"\n              },\n              \"replacePrefixMatch\": {\n               \"description\": \"ReplacePrefixMatch specifies the value with which to replace the prefix\\nmatch of a request during a rewrite or redirect. For example, a request\\nto \\\"/foo/bar\\\" with a prefix match of \\\"/foo\\\" and a ReplacePrefixMatch\\nof \\\"/xyz\\\" would be modified to \\\"/xyz/bar\\\".\\n\\nNote that this matches the behavior of the PathPrefix match type. This\\nmatches full path elements. A path element refers to the list of labels\\nin the path split by the `/` separator. When specified, a trailing `/` is\\nignored. For example, the paths `/abc`, `/abc/`, and `/abc/def` would all\\nmatch the prefix `/abc`, but the path `/abcd` would not.\\n\\nReplacePrefixMatch is only compatible with a `PathPrefix` HTTPRouteMatch.\\nUsing any other HTTPRouteMatch type on the same HTTPRouteRule will result in\\nthe implementation setting the Accepted Condition for the Route to `status: False`.\\n\\nRequest Path | Prefix Match | Replace Prefix | Modified Path\",\n               \"maxLength\": 1024,\n               \"type\": \"string\"\n              },\n              \"type\": {\n               \"description\": \"Type defines the type of path modifier. Additional types may be\\nadded in a future release of the API.\\n\\nNote that values may be added to this enum, implementations\\nmust ensure that unknown values will not cause a crash.\\n\\nUnknown values here must result in the implementation setting the\\nAccepted Condition for the Route to `status: False`, with a\\nReason of `UnsupportedValue`.\",\n               \"enum\": [\n                \"ReplaceFullPath\",\n                \"ReplacePrefixMatch\"\n               ],\n               \"type\": \"string\"\n              }\n             },\n             \"required\": [\n              \"type\"\n             ],\n             \"type\": \"object\",\n             \"x-kubernetes-validations\": [\n              {\n               \"message\": \"replaceFullPath must be specified when type is set to 'ReplaceFullPath'\",\n               \"rule\": \"self.type == 'ReplaceFullPath' ? has(self.replaceFullPath) : true\"\n              },\n              {\n               \"message\": \"type must be 'ReplaceFullPath' when replaceFullPath is set\",\n               \"rule\": \"has(self.replaceFullPath) ? self.type == 'ReplaceFullPath' : true\"\n              },\n              {\n               \"message\": \"replacePrefixMatch must be specified when type is set to 'ReplacePrefixMatch'\",\n               \"rule\": \"self.type == 'ReplacePrefixMatch' ? has(self.replacePrefixMatch) : true\"\n              },\n              {\n               \"message\": \"type must be 'ReplacePrefixMatch' when replacePrefixMatch is set\",\n               \"rule\": \"has(self.replacePrefixMatch) ? self.type == 'ReplacePrefixMatch' : true\"\n              }\n             ]\n            }\n           },\n           \"type\": \"object\"\n          }\n         },\n         \"required\": [\n          \"type\"\n         ],\n         \"type\": \"object\",\n         \"x-kubernetes-validations\": [\n          {\n           \"message\": \"filter.requestHeaderModifier must be nil if the filter.type is not RequestHeaderModifier\",\n           \"rule\": \"!(has(self.requestHeaderModifier) \\u0026\\u0026 self.type != 'RequestHeaderModifier')\"\n          },\n          {\n           \"message\": \"filter.requestHeaderModifier must be specified for RequestHeaderModifier filter.type\",\n           \"rule\": \"!(!has(self.requestHeaderModifier) \\u0026\\u0026 self.type == 'RequestHeaderModifier')\"\n          },\n          {\n           \"message\": \"filter.responseHeaderModifier must be nil if the filter.type is not ResponseHeaderModifier\",\n           \"rule\": \"!(has(self.responseHeaderModifier) \\u0026\\u0026 self.type != 'ResponseHeaderModifier')\"\n          },\n          {\n           \"message\": \"filter.responseHeaderModifier must be specified for ResponseHeaderModifier filter.type\",\n           \"rule\": \"!(!has(self.responseHeaderModifier) \\u0026\\u0026 self.type == 'ResponseHeaderModifier')\"\n          },\n          {\n           \"message\": \"filter.requestMirror must be nil if the filter.type is not RequestMirror\",\n           \"rule\": \"!(has(self.requestMirror) \\u0026\\u0026 self.type != 'RequestMirror')\"\n          },\n          {\n           \"message\": \"filter.requestMirror must be specified for RequestMirror filter.type\",\n           \"rule\": \"!(!has(self.requestMirror) \\u0026\\u0026 self.type == 'RequestMirror')\"\n          },\n          {\n           \"message\": \"filter.requestRedirect must be nil if the filter.type is not RequestRedirect\",\n           \"rule\": \"!(has(self.requestRedirect) \\u0026\\u0026 self.type != 'RequestRedirect')\"\n          },\n          {\n           \"message\": \"filter.requestRedirect must be specified for RequestRedirect filter.type\",\n           \"rule\": \"!(!has(self.requestRedirect) \\u0026\\u0026 self.type == 'RequestRedirect')\"\n          },\n          {\n           \"message\": \"filter.urlRewrite must be nil if the filter.type is not URLRewrite\",\n           \"rule\": \"!(has(self.urlRewrite) \\u0026\\u0026 self.type != 'URLRewrite')\"\n          },\n          {\n           \"message\": \"filter.urlRewrite must be specified for URLRewrite filter.type\",\n           \"rule\": \"!(!has(self.urlRewrite) \\u0026\\u0026 self.type == 'URLRewrite')\"\n          },\n          {\n           \"message\": \"filter.extensionRef must be nil if the filter.type is not ExtensionRef\",\n           \"rule\": \"!(has(self.extensionRef) \\u0026\\u0026 self.type != 'ExtensionRef')\"\n          },\n          {\n           \"message\": \"filter.extensionRef must be specified for ExtensionRef filter.type\",\n           \"rule\": \"!(!has(self.extensionRef) \\u0026\\u0026 self.type == 'ExtensionRef')\"\n          }\n         ]\n        },\n        \"maxItems\": 16,\n        \"type\": \"array\",\n        \"x-kubernetes-validations\": [\n         {\n          \"message\": \"May specify either httpRouteFilterRequestRedirect or httpRouteFilterRequestRewrite, but not both\",\n          \"rule\": \"!(self.exists(f, f.type == 'RequestRedirect') \\u0026\\u0026 self.exists(f, f.type == 'URLRewrite'))\"\n         },\n         {\n          \"message\": \"RequestHeaderModifier filter cannot be repeated\",\n          \"rule\": \"self.filter(f, f.type == 'RequestHeaderModifier').size() \\u003c= 1\"\n         },\n         {\n          \"message\": \"ResponseHeaderModifier filter cannot be repeated\",\n          \"rule\": \"self.filter(f, f.type == 'ResponseHeaderModifier').size() \\u003c= 1\"\n         },\n         {\n          \"message\": \"RequestRedirect filter cannot be repeated\",\n          \"rule\": \"self.filter(f, f.type == 'RequestRedirect').size() \\u003c= 1\"\n         },\n         {\n          \"message\": \"URLRewrite filter cannot be repeated\",\n          \"rule\": \"self.filter(f, f.type == 'URLRewrite').size() \\u003c= 1\"\n         }\n        ]\n       },\n       \"matches\": {\n        \"default\": [\n         {\n          \"path\": {\n           \"type\": \"PathPrefix\",\n           \"value\": \"/\"\n          }\n         }\n        ],\n        \"description\": \"Matches define conditions used for matching the rule against incoming\\nHTTP requests. Each match is independent, i.e. this rule will be matched\\nif **any** one of the matches is satisfied.\\n\\nFor example, take the following matches configuration:\\n\\n```\\nmatches:\\n- path:\\n    value: \\\"/foo\\\"\\n  headers:\\n  - name: \\\"version\\\"\\n    value: \\\"v2\\\"\\n- path:\\n    value: \\\"/v2/foo\\\"\\n```\\n\\nFor a request to match against this rule, a request must satisfy\\nEITHER of the two conditions:\\n\\n- path prefixed with `/foo` AND contains the header `version: v2`\\n- path prefix of `/v2/foo`\\n\\nSee the documentation for HTTPRouteMatch on how to specify multiple\\nmatch conditions that should be ANDed together.\\n\\nIf no matches are specified, the default is a prefix\\npath match on \\\"/\\\", which has the effect of matching every\\nHTTP request.\\n\\nProxy or Load Balancer routing configuration generated from HTTPRoutes\\nMUST prioritize matches based on the following criteria, continuing on\\nties. Across all rules specified on applicable Routes, precedence must be\\ngiven to the match having:\\n\\n* \\\"Exact\\\" path match.\\n* \\\"Prefix\\\" path match with largest number of characters.\\n* Method match.\\n* Largest number of header matches.\\n* Largest number of query param matches.\\n\\nNote: The precedence of RegularExpression path matches are implementation-specific.\\n\\nIf ties still exist across multiple Routes, matching precedence MUST be\\ndetermined in order of the following criteria, continuing on ties:\\n\\n* The oldest Route based on creation timestamp.\\n* The Route appearing first in alphabetical order by\\n  \\\"{namespace}/{name}\\\".\\n\\nIf ties still exist within an HTTPRoute, matching precedence MUST be granted\\nto the FIRST matching rule (in list order) with a match meeting the above\\ncriteria.\\n\\nWhen no rules matching a request have been successfully attached to the\\nparent a request is coming from, a HTTP 404 status code MUST be returned.\",\n        \"items\": {\n         \"description\": \"HTTPRouteMatch defines the predicate used to match requests to a given\\naction. Multiple match types are ANDed together, i.e. the match will\\nevaluate to true only if all conditions are satisfied.\\n\\nFor example, the match below will match a HTTP request only if its path\\nstarts with `/foo` AND it contains the `version: v1` header:\\n\\n```\\nmatch:\\n\\n\\tpath:\\n\\t  value: \\\"/foo\\\"\\n\\theaders:\\n\\t- name: \\\"version\\\"\\n\\t  value \\\"v1\\\"\\n\\n```\",\n         \"properties\": {\n          \"headers\": {\n           \"description\": \"Headers specifies HTTP request header matchers. Multiple match values are\\nANDed together, meaning, a request must match all the specified headers\\nto select the route.\",\n           \"items\": {\n            \"description\": \"HTTPHeaderMatch describes how to select a HTTP route by matching HTTP request\\nheaders.\",\n            \"properties\": {\n             \"name\": {\n              \"description\": \"Name is the name of the HTTP Header to be matched. Name matching MUST be\\ncase insensitive. (See https://tools.ietf.org/html/rfc7230#section-3.2).\\n\\nIf multiple entries specify equivalent header names, only the first\\nentry with an equivalent name MUST be considered for a match. Subsequent\\nentries with an equivalent header name MUST be ignored. Due to the\\ncase-insensitivity of header names, \\\"foo\\\" and \\\"Foo\\\" are considered\\nequivalent.\\n\\nWhen a header is repeated in an HTTP request, it is\\nimplementation-specific behavior as to how this is represented.\\nGenerally, proxies should follow the guidance from the RFC:\\nhttps://www.rfc-editor.org/rfc/rfc7230.html#section-3.2.2 regarding\\nprocessing a repeated header, with special handling for \\\"Set-Cookie\\\".\",\n              \"maxLength\": 256,\n              \"minLength\": 1,\n              \"pattern\": \"^[A-Za-z0-9!#$%\\u0026'*+\\\\-.^_\\\\x60|~]+$\",\n              \"type\": \"string\"\n             },\n             \"type\": {\n              \"default\": \"Exact\",\n              \"description\": \"Type specifies how to match against the value of the header.\\n\\nSupport: Core (Exact)\\n\\nSupport: Implementation-specific (RegularExpression)\\n\\nSince RegularExpression HeaderMatchType has implementation-specific\\nconformance, implementations can support POSIX, PCRE or any other dialects\\nof regular expressions. Please read the implementation's documentation to\\ndetermine the supported dialect.\",\n              \"enum\": [\n               \"Exact\",\n               \"RegularExpression\"\n              ],\n              \"type\": \"string\"\n             },\n             \"value\": {\n              \"description\": \"Value is the value of HTTP Header to be matched.\",\n              \"maxLength\": 4096,\n              \"minLength\": 1,\n              \"type\": \"string\"\n             }\n            },\n            \"required\": [\n             \"name\",\n             \"value\"\n            ],\n            \"type\": \"object\"\n           },\n           \"maxItems\": 16,\n           \"type\": \"array\",\n           \"x-kubernetes-list-map-keys\": [\n            \"name\"\n           ],\n           \"x-kubernetes-list-type\": \"map\"\n          },\n          \"method\": {\n           \"description\": \"Method specifies HTTP method matcher.\\nWhen specified, this route will be matched only if the request has the\\nspecified method.\\n\\nSupport: Extended\",\n           \"enum\": [\n            \"GET\",\n            \"HEAD\",\n            \"POST\",\n            \"PUT\",\n            \"DELETE\",\n            \"CONNECT\",\n            \"OPTIONS\",\n            \"TRACE\",\n            \"PATCH\"\n           ],\n           \"type\": \"string\"\n          },\n          \"path\": {\n           \"default\": {\n            \"type\": \"PathPrefix\",\n            \"value\": \"/\"\n           },\n           \"description\": \"Path specifies a HTTP request path matcher. If this field is not\\nspecified, a default prefix match on the \\\"/\\\" path is provided.\",\n           \"properties\": {\n            \"type\": {\n             \"default\": \"PathPrefix\",\n             \"description\": \"Type specifies how to match against the path Value.\\n\\nSupport: Core (Exact, PathPrefix)\\n\\nSupport: Implementation-specific (RegularExpression)\",\n             \"enum\": [\n              \"Exact\",\n              \"PathPrefix\",\n              \"RegularExpression\"\n             ],\n             \"type\": \"string\"\n            },\n            \"value\": {\n             \"default\": \"/\",\n             \"description\": \"Value of the HTTP path to match against.\",\n             \"maxLength\": 1024,\n             \"type\": \"string\"\n            }\n           },\n           \"type\": \"object\",\n           \"x-kubernetes-validations\": [\n            {\n             \"message\": \"value must be an absolute path and start with '/' when type one of ['Exact', 'PathPrefix']\",\n             \"rule\": \"(self.type in ['Exact','PathPrefix']) ? self.value.startsWith('/') : true\"\n            },\n            {\n             \"message\": \"must not contain '//' when type one of ['Exact', 'PathPrefix']\",\n             \"rule\": \"(self.type in ['Exact','PathPrefix']) ? !self.value.contains('//') : true\"\n            },\n            {\n             \"message\": \"must not contain '/./' when type one of ['Exact', 'PathPrefix']\",\n             \"rule\": \"(self.type in ['Exact','PathPrefix']) ? !self.value.contains('/./') : true\"\n            },\n            {\n             \"message\": \"must not contain '/../' when type one of ['Exact', 'PathPrefix']\",\n             \"rule\": \"(self.type in ['Exact','PathPrefix']) ? !self.value.contains('/../') : true\"\n            },\n            {\n             \"message\": \"must not contain '%2f' when type one of ['Exact', 'PathPrefix']\",\n             \"rule\": \"(self.type in ['Exact','PathPrefix']) ? !self.value.contains('%2f') : true\"\n            },\n            {\n             \"message\": \"must not contain '%2F' when type one of ['Exact', 'PathPrefix']\",\n             \"rule\": \"(self.type in ['Exact','PathPrefix']) ? !self.value.contains('%2F') : true\"\n            },\n            {\n             \"message\": \"must not contain '#' when type one of ['Exact', 'PathPrefix']\",\n             \"rule\": \"(self.type in ['Exact','PathPrefix']) ? !self.value.contains('#') : true\"\n            },\n            {\n             \"message\": \"must not end with '/..' when type one of ['Exact', 'PathPrefix']\",\n             \"rule\": \"(self.type in ['Exact','PathPrefix']) ? !self.value.endsWith('/..') : true\"\n            },\n            {\n             \"message\": \"must not end with '/.' when type one of ['Exact', 'PathPrefix']\",\n             \"rule\": \"(self.type in ['Exact','PathPrefix']) ? !self.value.endsWith('/.') : true\"\n            },\n            {\n             \"message\": \"type must be one of ['Exact', 'PathPrefix', 'RegularExpression']\",\n             \"rule\": \"self.type in ['Exact','PathPrefix'] || self.type == 'RegularExpression'\"\n            },\n            {\n             \"message\": \"must only contain valid characters (matching ^(?:[-A-Za-z0-9/._~!$\\u0026'()*+,;=:@]|[%][0-9a-fA-F]{2})+$) for types ['Exact', 'PathPrefix']\",\n             \"rule\": \"(self.type in ['Exact','PathPrefix']) ? self.value.matches(r\\\"\\\"\\\"^(?:[-A-Za-z0-9/._~!$\\u0026'()*+,;=:@]|[%][0-9a-fA-F]{2})+$\\\"\\\"\\\") : true\"\n            }\n           ]\n          },\n          \"queryParams\": {\n           \"description\": \"QueryParams specifies HTTP query parameter matchers. Multiple match\\nvalues are ANDed together, meaning, a request must match all the\\nspecified query parameters to select the route.\\n\\nSupport: Extended\",\n           \"items\": {\n            \"description\": \"HTTPQueryParamMatch describes how to select a HTTP route by matching HTTP\\nquery parameters.\",\n            \"properties\": {\n             \"name\": {\n              \"description\": \"Name is the name of the HTTP query param to be matched. This must be an\\nexact string match. (See\\nhttps://tools.ietf.org/html/rfc7230#section-2.7.3).\\n\\nIf multiple entries specify equivalent query param names, only the first\\nentry with an equivalent name MUST be considered for a match. Subsequent\\nentries with an equivalent query param name MUST be ignored.\\n\\nIf a query param is repeated in an HTTP request, the behavior is\\npurposely left undefined, since different data planes have different\\ncapabilities. However, it is *recommended* that implementations should\\nmatch against the first value of the param if the data plane supports it,\\nas this behavior is expected in other load balancing contexts outside of\\nthe Gateway API.\\n\\nUsers SHOULD NOT route traffic based on repeated query params to guard\\nthemselves against potential differences in the implementations.\",\n              \"maxLength\": 256,\n              \"minLength\": 1,\n              \"pattern\": \"^[A-Za-z0-9!#$%\\u0026'*+\\\\-.^_\\\\x60|~]+$\",\n              \"type\": \"string\"\n             },\n             \"type\": {\n              \"default\": \"Exact\",\n              \"description\": \"Type specifies how to match against the value of the query parameter.\\n\\nSupport: Extended (Exact)\\n\\nSupport: Implementation-specific (RegularExpression)\\n\\nSince RegularExpression QueryParamMatchType has Implementation-specific\\nconformance, implementations can support POSIX, PCRE or any other\\ndialects of regular expressions. Please read the implementation's\\ndocumentation to determine the supported dialect.\",\n              \"enum\": [\n               \"Exact\",\n               \"RegularExpression\"\n              ],\n              \"type\": \"string\"\n             },\n             \"value\": {\n              \"description\": \"Value is the value of HTTP query param to be matched.\",\n              \"maxLength\": 1024,\n              \"minLength\": 1,\n              \"type\": \"string\"\n             }\n            },\n            \"required\": [\n             \"name\",\n             \"value\"\n            ],\n            \"type\": \"object\"\n           },\n           \"maxItems\": 16,\n           \"type\": \"array\",\n           \"x-kubernetes-list-map-keys\": [\n            \"name\"\n           ],\n           \"x-kubernetes-list-type\": \"map\"\n          }\n         },\n         \"type\": \"object\"\n        },\n        \"maxItems\": 64,\n        \"type\": \"array\"\n       },\n       \"timeouts\": {\n        \"description\": \"Timeouts defines the timeouts that can be configured for an HTTP request.\\n\\nSupport: Extended\",\n        \"properties\": {\n         \"backendRequest\": {\n          \"description\": \"BackendRequest specifies a timeout for an individual request from the gateway\\nto a backend. This covers the time from when the request first starts being\\nsent from the gateway to when the full response has been received from the backend.\\n\\nSetting a timeout to the zero duration (e.g. \\\"0s\\\") SHOULD disable the timeout\\ncompletely. Implementations that cannot completely disable the timeout MUST\\ninstead interpret the zero duration as the longest possible value to which\\nthe timeout can be set.\\n\\nAn entire client HTTP transaction with a gateway, covered by the Request timeout,\\nmay result in more than one call from the gateway to the destination backend,\\nfor example, if automatic retries are supported.\\n\\nThe value of BackendRequest must be a Gateway API Duration string as defined by\\nGEP-2257.  When this field is unspecified, its behavior is implementation-specific;\\nwhen specified, the value of BackendRequest must be no more than the value of the\\nRequest timeout (since the Request timeout encompasses the BackendRequest timeout).\\n\\nSupport: Extended\",\n          \"pattern\": \"^([0-9]{1,5}(h|m|s|ms)){1,4}$\",\n          \"type\": \"string\"\n         },\n         \"request\": {\n          \"description\": \"Request specifies the maximum duration for a gateway to respond to an HTTP request.\\nIf the gateway has not been able to respond before this deadline is met, the gateway\\nMUST return a timeout error.\\n\\nFor example, setting the `rules.timeouts.request` field to the value `10s` in an\\n`HTTPRoute` will cause a timeout if a client request is taking longer than 10 seconds\\nto complete.\\n\\nSetting a timeout to the zero duration (e.g. \\\"0s\\\") SHOULD disable the timeout\\ncompletely. Implementations that cannot completely disable the timeout MUST\\ninstead interpret the zero duration as the longest possible value to which\\nthe timeout can be set.\\n\\nThis timeout is intended to cover as close to the whole request-response transaction\\nas possible although an implementation MAY choose to start the timeout after the entire\\nrequest stream has been received instead of immediately after the transaction is\\ninitiated by the client.\\n\\nThe value of Request is a Gateway API Duration string as defined by GEP-2257. When this\\nfield is unspecified, request timeout behavior is implementation-specific.\\n\\nSupport: Extended\",\n          \"pattern\": \"^([0-9]{1,5}(h|m|s|ms)){1,4}$\",\n          \"type\": \"string\"\n         }\n        },\n        \"type\": \"object\",\n        \"x-kubernetes-validations\": [\n         {\n          \"message\": \"backendRequest timeout cannot be longer than request timeout\",\n          \"rule\": \"!(has(self.request) \\u0026\\u0026 has(self.backendRequest) \\u0026\\u0026 duration(self.request) != duration('0s') \\u0026\\u0026 duration(self.backendRequest) \\u003e duration(self.request))\"\n         }\n        ]\n       }\n      },\n      \"type\": \"object\",\n      \"x-kubernetes-validations\": [\n       {\n        \"message\": \"RequestRedirect filter must not be used together with backendRefs\",\n        \"rule\": \"(has(self.backendRefs) \\u0026\\u0026 size(self.backendRefs) \\u003e 0) ? (!has(self.filters) || self.filters.all(f, !has(f.requestRedirect))): true\"\n       },\n       {\n        \"message\": \"When using RequestRedirect filter with path.replacePrefixMatch, exactly one PathPrefix match must be specified\",\n        \"rule\": \"(has(self.filters) \\u0026\\u0026 self.filters.exists_one(f, has(f.requestRedirect) \\u0026\\u0026 has(f.requestRedirect.path) \\u0026\\u0026 f.requestRedirect.path.type == 'ReplacePrefixMatch' \\u0026\\u0026 has(f.requestRedirect.path.replacePrefixMatch))) ? ((size(self.matches) != 1 || !has(self.matches[0].path) || self.matches[0].path.type != 'PathPrefix') ? false : true) : true\"\n       },\n       {\n        \"message\": \"When using URLRewrite filter with path.replacePrefixMatch, exactly one PathPrefix match must be specified\",\n        \"rule\": \"(has(self.filters) \\u0026\\u0026 self.filters.exists_one(f, has(f.urlRewrite) \\u0026\\u0026 has(f.urlRewrite.path) \\u0026\\u0026 f.urlRewrite.path.type == 'ReplacePrefixMatch' \\u0026\\u0026 has(f.urlRewrite.path.replacePrefixMatch))) ? ((size(self.matches) != 1 || !has(self.matches[0].path) || self.matches[0].path.type != 'PathPrefix') ? false : true) : true\"\n       },\n       {\n        \"message\": \"Within backendRefs, when using RequestRedirect filter with path.replacePrefixMatch, exactly one PathPrefix match must be specified\",\n        \"rule\": \"(has(self.backendRefs) \\u0026\\u0026 self.backendRefs.exists_one(b, (has(b.filters) \\u0026\\u0026 b.filters.exists_one(f, has(f.requestRedirect) \\u0026\\u0026 has(f.requestRedirect.path) \\u0026\\u0026 f.requestRedirect.path.type == 'ReplacePrefixMatch' \\u0026\\u0026 has(f.requestRedirect.path.replacePrefixMatch))) )) ? ((size(self.matches) != 1 || !has(self.matches[0].path) || self.matches[0].path.type != 'PathPrefix') ? false : true) : true\"\n       },\n       {\n        \"message\": \"Within backendRefs, When using URLRewrite filter with path.replacePrefixMatch, exactly one PathPrefix match must be specified\",\n        \"rule\": \"(has(self.backendRefs) \\u0026\\u0026 self.backendRefs.exists_one(b, (has(b.filters) \\u0026\\u0026 b.filters.exists_one(f, has(f.urlRewrite) \\u0026\\u0026 has(f.urlRewrite.path) \\u0026\\u0026 f.urlRewrite.path.type == 'ReplacePrefixMatch' \\u0026\\u0026 has(f.urlRewrite.path.replacePrefixMatch))) )) ? ((size(self.matches) != 1 || !has(self.matches[0].path) || self.matches[0].path.type != 'PathPrefix') ? false : true) : true\"\n       }\n      ]\n     },\n     \"maxItems\": 16,\n     \"type\": \"array\",\n     \"x-kubernetes-validations\": [\n      {\n       \"message\": \"While 16 rules and 64 matches per rule are allowed, the total number of matches across all rules in a route must be less than 128\",\n       \"rule\": \"(self.size() \\u003e 0 ? self[0].matches.size() : 0) + (self.size() \\u003e 1 ? self[1].matches.size() : 0) + (self.size() \\u003e 2 ? self[2].matches.size() : 0) + (self.size() \\u003e 3 ? self[3].matches.size() : 0) + (self.size() \\u003e 4 ? self[4].matches.size() : 0) + (self.size() \\u003e 5 ? self[5].matches.size() : 0) + (self.size() \\u003e 6 ? self[6].matches.size() : 0) + (self.size() \\u003e 7 ? self[7].matches.size() : 0) + (self.size() \\u003e 8 ? self[8].matches.size() : 0) + (self.size() \\u003e 9 ? self[9].matches.size() : 0) + (self.size() \\u003e 10 ? self[10].matches.size() : 0) + (self.size() \\u003e 11 ? self[11].matches.size() : 0) + (self.size() \\u003e 12 ? self[12].matches.size() : 0) + (self.size() \\u003e 13 ? self[13].matches.size() : 0) + (self.size() \\u003e 14 ? self[14].matches.size() : 0) + (self.size() \\u003e 15 ? self[15].matches.size() : 0) \\u003c= 128\"\n      }\n     ]\n    }\n   },\n   \"type\": \"object\"\n  }\n },\n \"required\": [\n  \"spec\"\n ],\n \"title\": \"HTTP Route\",\n \"type\": \"object\"\n}"
  }
}