{"kind":"ContainerizedWorkload","apiVersion":"core.oam.dev/v1alpha2","displayName":"Containerized Workload","format":"JSON","hostname":"","hostID":"00000000-0000-0000-0000-000000000000","displayhostname":"","metadata":{"capabilities":"","genealogy":"","isAnnotation":false,"isModelAnnotation":"FALSE","isNamespaced":true,"logoURL":"https://layer5.io/company/brand","model":"oam-kubernetes-runtime","modelDisplayName":"Oam Kubernetes Runtime","primaryColor":"#00B39F","published":false,"secondaryColor":"#00D3A9","shape":"circle","styleOverrides":"","subCategory":"Uncategorized","svgColor":"","svgComplete":"","svgWhite":""},"model":{"name":"oam-kubernetes-runtime","version":"0.4.0-rc1.7.g91370c6","displayName":"Oam Kubernetes Runtime","hostname":"","hostID":"00000000-0000-0000-0000-000000000000","displayhostname":"","category":{"name":"Uncategorized","metadata":null},"metadata":{"isAnnotation":false,"source_uri":"https://charts.crossplane.io/master/oam-kubernetes-runtime-0.4.0-rc1.18.g64a2994.tgz"},"components":null,"relationships":null},"schema":"{\n \"description\": \"A ContainerizedWorkload is a workload that runs OCI containers.\",\n \"properties\": {\n  \"spec\": {\n   \"description\": \"A ContainerizedWorkloadSpec defines the desired state of a ContainerizedWorkload.\",\n   \"properties\": {\n    \"arch\": {\n     \"description\": \"CPUArchitecture required by this workload.\",\n     \"enum\": [\n      \"i386\",\n      \"amd64\",\n      \"arm\",\n      \"arm64\"\n     ],\n     \"type\": \"string\"\n    },\n    \"containers\": {\n     \"description\": \"Containers of which this workload consists.\",\n     \"items\": {\n      \"description\": \"A Container represents an Open Containers Initiative (OCI) container.\",\n      \"properties\": {\n       \"args\": {\n        \"description\": \"Arguments to be passed to the command run by this container.\",\n        \"items\": {\n         \"type\": \"string\"\n        },\n        \"type\": \"array\"\n       },\n       \"command\": {\n        \"description\": \"Command to be run by this container.\",\n        \"items\": {\n         \"type\": \"string\"\n        },\n        \"type\": \"array\"\n       },\n       \"config\": {\n        \"description\": \"ConfigFiles that should be written within this container.\",\n        \"items\": {\n         \"description\": \"A ContainerConfigFile specifies a configuration file that should be written within a container.\",\n         \"properties\": {\n          \"fromSecret\": {\n           \"description\": \"FromSecret is a secret key reference which can be used to assign a value to be written to the configuration file at the given path in the container.\",\n           \"properties\": {\n            \"key\": {\n             \"description\": \"The key to select.\",\n             \"type\": \"string\"\n            },\n            \"name\": {\n             \"description\": \"The name of the secret.\",\n             \"type\": \"string\"\n            }\n           },\n           \"required\": [\n            \"key\",\n            \"name\"\n           ],\n           \"type\": \"object\"\n          },\n          \"path\": {\n           \"description\": \"Path within the container at which the configuration file should be written.\",\n           \"type\": \"string\"\n          },\n          \"value\": {\n           \"description\": \"Value that should be written to the configuration file.\",\n           \"type\": \"string\"\n          }\n         },\n         \"required\": [\n          \"path\"\n         ],\n         \"type\": \"object\"\n        },\n        \"type\": \"array\"\n       },\n       \"env\": {\n        \"description\": \"Environment variables that should be set within this container.\",\n        \"items\": {\n         \"description\": \"A ContainerEnvVar specifies an environment variable that should be set within a container.\",\n         \"properties\": {\n          \"fromSecret\": {\n           \"description\": \"FromSecret is a secret key reference which can be used to assign a value to the environment variable.\",\n           \"properties\": {\n            \"key\": {\n             \"description\": \"The key to select.\",\n             \"type\": \"string\"\n            },\n            \"name\": {\n             \"description\": \"The name of the secret.\",\n             \"type\": \"string\"\n            }\n           },\n           \"required\": [\n            \"key\",\n            \"name\"\n           ],\n           \"type\": \"object\"\n          },\n          \"name\": {\n           \"description\": \"Name of the environment variable. Must be composed of valid Unicode letter and number characters, as well as _ and -.\",\n           \"pattern\": \"^[-_a-zA-Z0-9]+$\",\n           \"type\": \"string\"\n          },\n          \"value\": {\n           \"description\": \"Value of the environment variable.\",\n           \"type\": \"string\"\n          }\n         },\n         \"required\": [\n          \"name\"\n         ],\n         \"type\": \"object\"\n        },\n        \"type\": \"array\"\n       },\n       \"image\": {\n        \"description\": \"Image this container should run. Must be a path-like or URI-like representation of an OCI image. May be prefixed with a registry address and should be suffixed with a tag.\",\n        \"type\": \"string\"\n       },\n       \"imagePullSecret\": {\n        \"description\": \"ImagePullSecret specifies the name of a Secret from which the credentials required to pull this container's image can be loaded.\",\n        \"type\": \"string\"\n       },\n       \"livenessProbe\": {\n        \"description\": \"A LivenessProbe assesses whether this container is alive. Containers that fail liveness probes will be restarted.\",\n        \"properties\": {\n         \"exec\": {\n          \"description\": \"Exec probes a container's health by executing a command.\",\n          \"properties\": {\n           \"command\": {\n            \"description\": \"Command to be run by this probe.\",\n            \"items\": {\n             \"type\": \"string\"\n            },\n            \"type\": \"array\"\n           }\n          },\n          \"required\": [\n           \"command\"\n          ],\n          \"type\": \"object\"\n         },\n         \"failureThreshold\": {\n          \"description\": \"FailureThreshold specifies how many consecutive probes must fail in order for the container to be considered healthy.\",\n          \"format\": \"int32\",\n          \"type\": \"integer\"\n         },\n         \"httpGet\": {\n          \"description\": \"HTTPGet probes a container's health by sending an HTTP GET request.\",\n          \"properties\": {\n           \"httpHeaders\": {\n            \"description\": \"HTTPHeaders to send with the GET request.\",\n            \"items\": {\n             \"description\": \"A HTTPHeader to be passed when probing a container.\",\n             \"properties\": {\n              \"name\": {\n               \"description\": \"Name of this HTTP header. Must be unique per probe.\",\n               \"type\": \"string\"\n              },\n              \"value\": {\n               \"description\": \"Value of this HTTP header.\",\n               \"type\": \"string\"\n              }\n             },\n             \"required\": [\n              \"name\",\n              \"value\"\n             ],\n             \"type\": \"object\"\n            },\n            \"type\": \"array\"\n           },\n           \"path\": {\n            \"description\": \"Path to probe, e.g. '/healthz'.\",\n            \"type\": \"string\"\n           },\n           \"port\": {\n            \"description\": \"Port to probe.\",\n            \"format\": \"int32\",\n            \"type\": \"integer\"\n           }\n          },\n          \"required\": [\n           \"path\",\n           \"port\"\n          ],\n          \"type\": \"object\"\n         },\n         \"initialDelaySeconds\": {\n          \"description\": \"InitialDelaySeconds after a container starts before the first probe.\",\n          \"format\": \"int32\",\n          \"type\": \"integer\"\n         },\n         \"periodSeconds\": {\n          \"description\": \"PeriodSeconds between probes.\",\n          \"format\": \"int32\",\n          \"type\": \"integer\"\n         },\n         \"successThreshold\": {\n          \"description\": \"SuccessThreshold specifies how many consecutive probes must success in order for the container to be considered healthy.\",\n          \"format\": \"int32\",\n          \"type\": \"integer\"\n         },\n         \"tcpSocket\": {\n          \"description\": \"TCPSocketProbe probes a container's health by connecting to a TCP socket.\",\n          \"properties\": {\n           \"port\": {\n            \"description\": \"Port this probe should connect to.\",\n            \"format\": \"int32\",\n            \"type\": \"integer\"\n           }\n          },\n          \"required\": [\n           \"port\"\n          ],\n          \"type\": \"object\"\n         },\n         \"timeoutSeconds\": {\n          \"description\": \"TimeoutSeconds after which the probe times out.\",\n          \"format\": \"int32\",\n          \"type\": \"integer\"\n         }\n        },\n        \"type\": \"object\"\n       },\n       \"name\": {\n        \"description\": \"Name of this container. Must be unique within its workload.\",\n        \"type\": \"string\"\n       },\n       \"ports\": {\n        \"description\": \"Ports exposed by this container.\",\n        \"items\": {\n         \"description\": \"A ContainerPort specifies a port that is exposed by a container.\",\n         \"properties\": {\n          \"containerPort\": {\n           \"description\": \"Port number. Must be unique within its container.\",\n           \"format\": \"int32\",\n           \"type\": \"integer\"\n          },\n          \"name\": {\n           \"description\": \"Name of this port. Must be unique within its container. Must be lowercase alphabetical characters.\",\n           \"pattern\": \"^[a-z]+$\",\n           \"type\": \"string\"\n          },\n          \"protocol\": {\n           \"description\": \"Protocol used by the server listening on this port.\",\n           \"enum\": [\n            \"TCP\",\n            \"UDP\"\n           ],\n           \"type\": \"string\"\n          }\n         },\n         \"required\": [\n          \"containerPort\",\n          \"name\"\n         ],\n         \"type\": \"object\"\n        },\n        \"type\": \"array\"\n       },\n       \"readinessProbe\": {\n        \"description\": \"A ReadinessProbe assesses whether this container is ready to serve requests. Containers that fail readiness probes will be withdrawn from service.\",\n        \"properties\": {\n         \"exec\": {\n          \"description\": \"Exec probes a container's health by executing a command.\",\n          \"properties\": {\n           \"command\": {\n            \"description\": \"Command to be run by this probe.\",\n            \"items\": {\n             \"type\": \"string\"\n            },\n            \"type\": \"array\"\n           }\n          },\n          \"required\": [\n           \"command\"\n          ],\n          \"type\": \"object\"\n         },\n         \"failureThreshold\": {\n          \"description\": \"FailureThreshold specifies how many consecutive probes must fail in order for the container to be considered healthy.\",\n          \"format\": \"int32\",\n          \"type\": \"integer\"\n         },\n         \"httpGet\": {\n          \"description\": \"HTTPGet probes a container's health by sending an HTTP GET request.\",\n          \"properties\": {\n           \"httpHeaders\": {\n            \"description\": \"HTTPHeaders to send with the GET request.\",\n            \"items\": {\n             \"description\": \"A HTTPHeader to be passed when probing a container.\",\n             \"properties\": {\n              \"name\": {\n               \"description\": \"Name of this HTTP header. Must be unique per probe.\",\n               \"type\": \"string\"\n              },\n              \"value\": {\n               \"description\": \"Value of this HTTP header.\",\n               \"type\": \"string\"\n              }\n             },\n             \"required\": [\n              \"name\",\n              \"value\"\n             ],\n             \"type\": \"object\"\n            },\n            \"type\": \"array\"\n           },\n           \"path\": {\n            \"description\": \"Path to probe, e.g. '/healthz'.\",\n            \"type\": \"string\"\n           },\n           \"port\": {\n            \"description\": \"Port to probe.\",\n            \"format\": \"int32\",\n            \"type\": \"integer\"\n           }\n          },\n          \"required\": [\n           \"path\",\n           \"port\"\n          ],\n          \"type\": \"object\"\n         },\n         \"initialDelaySeconds\": {\n          \"description\": \"InitialDelaySeconds after a container starts before the first probe.\",\n          \"format\": \"int32\",\n          \"type\": \"integer\"\n         },\n         \"periodSeconds\": {\n          \"description\": \"PeriodSeconds between probes.\",\n          \"format\": \"int32\",\n          \"type\": \"integer\"\n         },\n         \"successThreshold\": {\n          \"description\": \"SuccessThreshold specifies how many consecutive probes must success in order for the container to be considered healthy.\",\n          \"format\": \"int32\",\n          \"type\": \"integer\"\n         },\n         \"tcpSocket\": {\n          \"description\": \"TCPSocketProbe probes a container's health by connecting to a TCP socket.\",\n          \"properties\": {\n           \"port\": {\n            \"description\": \"Port this probe should connect to.\",\n            \"format\": \"int32\",\n            \"type\": \"integer\"\n           }\n          },\n          \"required\": [\n           \"port\"\n          ],\n          \"type\": \"object\"\n         },\n         \"timeoutSeconds\": {\n          \"description\": \"TimeoutSeconds after which the probe times out.\",\n          \"format\": \"int32\",\n          \"type\": \"integer\"\n         }\n        },\n        \"type\": \"object\"\n       },\n       \"resources\": {\n        \"description\": \"Resources required by this container\",\n        \"properties\": {\n         \"cpu\": {\n          \"description\": \"CPU required by this container.\",\n          \"properties\": {\n           \"required\": {\n            \"description\": \"Required CPU count. 1.0 represents one CPU core.\",\n            \"type\": \"string\"\n           }\n          },\n          \"required\": [\n           \"required\"\n          ],\n          \"type\": \"object\"\n         },\n         \"extended\": {\n          \"description\": \"Extended resources required by this container.\",\n          \"items\": {\n           \"description\": \"ExtendedResource required by a container.\",\n           \"properties\": {\n            \"name\": {\n             \"description\": \"Name of the external resource. Resource names are specified in kind.group/version format, e.g. motionsensor.ext.example.com/v1.\",\n             \"type\": \"string\"\n            },\n            \"required\": {\n             \"anyOf\": [\n              {\n               \"type\": \"integer\"\n              },\n              {\n               \"type\": \"string\"\n              }\n             ],\n             \"description\": \"Required extended resource(s), e.g. 8 or \\\"very-cool-widget\\\"\",\n             \"x-kubernetes-int-or-string\": true\n            }\n           },\n           \"required\": [\n            \"name\",\n            \"required\"\n           ],\n           \"type\": \"object\"\n          },\n          \"type\": \"array\"\n         },\n         \"gpu\": {\n          \"description\": \"GPU required by this container.\",\n          \"properties\": {\n           \"required\": {\n            \"description\": \"Required GPU count.\",\n            \"type\": \"string\"\n           }\n          },\n          \"required\": [\n           \"required\"\n          ],\n          \"type\": \"object\"\n         },\n         \"memory\": {\n          \"description\": \"Memory required by this container.\",\n          \"properties\": {\n           \"required\": {\n            \"description\": \"Required memory.\",\n            \"type\": \"string\"\n           }\n          },\n          \"required\": [\n           \"required\"\n          ],\n          \"type\": \"object\"\n         },\n         \"volumes\": {\n          \"description\": \"Volumes required by this container.\",\n          \"items\": {\n           \"description\": \"VolumeResource required by a container.\",\n           \"properties\": {\n            \"accessMode\": {\n             \"description\": \"AccessMode of this volume; RO (read only) or RW (read and write).\",\n             \"enum\": [\n              \"RO\",\n              \"RW\"\n             ],\n             \"type\": \"string\"\n            },\n            \"disk\": {\n             \"description\": \"Disk requirements of this volume.\",\n             \"properties\": {\n              \"ephemeral\": {\n               \"description\": \"Ephemeral specifies whether an external disk needs to be mounted.\",\n               \"type\": \"boolean\"\n              },\n              \"required\": {\n               \"description\": \"Required disk space.\",\n               \"type\": \"string\"\n              }\n             },\n             \"required\": [\n              \"required\"\n             ],\n             \"type\": \"object\"\n            },\n            \"mountPath\": {\n             \"description\": \"MountPath at which this volume will be mounted within its container.\",\n             \"type\": \"string\"\n            },\n            \"name\": {\n             \"description\": \"Name of this volume. Must be unique within its container.\",\n             \"type\": \"string\"\n            },\n            \"sharingPolicy\": {\n             \"description\": \"SharingPolicy of this volume; Exclusive or Shared.\",\n             \"enum\": [\n              \"Exclusive\",\n              \"Shared\"\n             ],\n             \"type\": \"string\"\n            }\n           },\n           \"required\": [\n            \"mountPath\",\n            \"name\"\n           ],\n           \"type\": \"object\"\n          },\n          \"type\": \"array\"\n         }\n        },\n        \"required\": [\n         \"cpu\",\n         \"memory\"\n        ],\n        \"type\": \"object\"\n       }\n      },\n      \"required\": [\n       \"image\",\n       \"name\"\n      ],\n      \"type\": \"object\"\n     },\n     \"type\": \"array\"\n    },\n    \"osType\": {\n     \"description\": \"OperatingSystem required by this workload.\",\n     \"enum\": [\n      \"linux\",\n      \"windows\"\n     ],\n     \"type\": \"string\"\n    }\n   },\n   \"required\": [\n    \"containers\"\n   ],\n   \"type\": \"object\"\n  }\n },\n \"title\": \"Containerized Workload\",\n \"type\": \"object\"\n}"}