{
  "capabilities": null,
  "component": {
   "kind": "OpenStackMachine",
   "schema": "{\n \"description\": \"OpenStackMachine is the Schema for the openstackmachines API.\\n\\nDeprecated: This type will be removed in one of the next releases.\",\n \"properties\": {\n  \"spec\": {\n   \"description\": \"OpenStackMachineSpec defines the desired state of OpenStackMachine.\",\n   \"properties\": {\n    \"cloudName\": {\n     \"description\": \"The name of the cloud to use from the clouds secret\",\n     \"type\": \"string\"\n    },\n    \"configDrive\": {\n     \"description\": \"Config Drive support\",\n     \"type\": \"boolean\"\n    },\n    \"flavor\": {\n     \"description\": \"The flavor reference for the flavor for your server instance.\",\n     \"minLength\": 1,\n     \"type\": \"string\"\n    },\n    \"flavorID\": {\n     \"description\": \"FlavorID allows flavors to be specified by ID.  This field takes precedence\\nover Flavor.\",\n     \"minLength\": 1,\n     \"type\": \"string\"\n    },\n    \"floatingIP\": {\n     \"description\": \"The floatingIP which will be associated to the machine, only used for master.\\nThe floatingIP should have been created and haven't been associated.\",\n     \"type\": \"string\"\n    },\n    \"identityRef\": {\n     \"description\": \"IdentityRef is a reference to a identity to be used when reconciling this cluster\",\n     \"properties\": {\n      \"kind\": {\n       \"description\": \"Kind of the identity. Must be supported by the infrastructure\\nprovider and may be either cluster or namespace-scoped.\",\n       \"minLength\": 1,\n       \"type\": \"string\"\n      },\n      \"name\": {\n       \"description\": \"Name of the infrastructure identity to be used.\\nMust be either a cluster-scoped resource, or namespaced-scoped\\nresource the same namespace as the resource(s) being provisioned.\",\n       \"type\": \"string\"\n      }\n     },\n     \"required\": [\n      \"kind\",\n      \"name\"\n     ],\n     \"type\": \"object\"\n    },\n    \"image\": {\n     \"description\": \"The name of the image to use for your server instance.\\nIf the RootVolume is specified, this will be ignored and use rootVolume directly.\",\n     \"type\": \"string\"\n    },\n    \"imageUUID\": {\n     \"description\": \"The uuid of the image to use for your server instance.\\nif it's empty, Image name will be used\",\n     \"type\": \"string\"\n    },\n    \"instanceID\": {\n     \"description\": \"InstanceID is the OpenStack instance ID for this machine.\",\n     \"type\": \"string\"\n    },\n    \"networks\": {\n     \"description\": \"A networks object. Required parameter when there are multiple networks defined for the tenant.\\nWhen you do not specify both networks and ports parameters, the server attaches to the only network created for the current tenant.\",\n     \"items\": {\n      \"properties\": {\n       \"filter\": {\n        \"description\": \"Filters for optional network query\",\n        \"properties\": {\n         \"description\": {\n          \"type\": \"string\"\n         },\n         \"id\": {\n          \"type\": \"string\"\n         },\n         \"name\": {\n          \"type\": \"string\"\n         },\n         \"notTags\": {\n          \"type\": \"string\"\n         },\n         \"notTagsAny\": {\n          \"type\": \"string\"\n         },\n         \"projectId\": {\n          \"type\": \"string\"\n         },\n         \"tags\": {\n          \"type\": \"string\"\n         },\n         \"tagsAny\": {\n          \"type\": \"string\"\n         }\n        },\n        \"type\": \"object\"\n       },\n       \"fixedIP\": {\n        \"description\": \"A fixed IPv4 address for the NIC.\",\n        \"type\": \"string\"\n       },\n       \"subnets\": {\n        \"description\": \"Subnet within a network to use\",\n        \"items\": {\n         \"properties\": {\n          \"filter\": {\n           \"description\": \"Filters for optional subnet query\",\n           \"properties\": {\n            \"cidr\": {\n             \"type\": \"string\"\n            },\n            \"description\": {\n             \"type\": \"string\"\n            },\n            \"gateway_ip\": {\n             \"type\": \"string\"\n            },\n            \"id\": {\n             \"type\": \"string\"\n            },\n            \"ipVersion\": {\n             \"type\": \"integer\"\n            },\n            \"ipv6AddressMode\": {\n             \"type\": \"string\"\n            },\n            \"ipv6RaMode\": {\n             \"type\": \"string\"\n            },\n            \"name\": {\n             \"type\": \"string\"\n            },\n            \"notTags\": {\n             \"type\": \"string\"\n            },\n            \"notTagsAny\": {\n             \"type\": \"string\"\n            },\n            \"projectId\": {\n             \"type\": \"string\"\n            },\n            \"tags\": {\n             \"type\": \"string\"\n            },\n            \"tagsAny\": {\n             \"type\": \"string\"\n            }\n           },\n           \"type\": \"object\"\n          },\n          \"uuid\": {\n           \"description\": \"Optional UUID of the subnet.\\nIf specified this will not be validated prior to server creation.\\nIf specified, the enclosing `NetworkParam` must also be specified by UUID.\",\n           \"type\": \"string\"\n          }\n         },\n         \"type\": \"object\"\n        },\n        \"type\": \"array\"\n       },\n       \"uuid\": {\n        \"description\": \"Optional UUID of the network.\\nIf specified this will not be validated prior to server creation.\\nRequired if `Subnets` specifies a subnet by UUID.\",\n        \"type\": \"string\"\n       }\n      },\n      \"type\": \"object\"\n     },\n     \"type\": \"array\"\n    },\n    \"ports\": {\n     \"description\": \"Ports to be attached to the server instance. They are created if a port with the given name does not already exist.\\nWhen you do not specify both networks and ports parameters, the server attaches to the only network created for the current tenant.\",\n     \"items\": {\n      \"properties\": {\n       \"adminStateUp\": {\n        \"type\": \"boolean\"\n       },\n       \"allowedAddressPairs\": {\n        \"items\": {\n         \"properties\": {\n          \"ipAddress\": {\n           \"type\": \"string\"\n          },\n          \"macAddress\": {\n           \"type\": \"string\"\n          }\n         },\n         \"type\": \"object\"\n        },\n        \"type\": \"array\"\n       },\n       \"description\": {\n        \"type\": \"string\"\n       },\n       \"disablePortSecurity\": {\n        \"description\": \"DisablePortSecurity enables or disables the port security when set.\\nWhen not set, it takes the value of the corresponding field at the network level.\",\n        \"type\": \"boolean\"\n       },\n       \"fixedIPs\": {\n        \"description\": \"Specify pairs of subnet and/or IP address. These should be subnets of the network with the given NetworkID.\",\n        \"items\": {\n         \"properties\": {\n          \"ipAddress\": {\n           \"type\": \"string\"\n          },\n          \"subnet\": {\n           \"description\": \"Subnet is an openstack subnet query that will return the id of a subnet to create\\nthe fixed IP of a port in. This query must not return more than one subnet.\",\n           \"properties\": {\n            \"cidr\": {\n             \"type\": \"string\"\n            },\n            \"description\": {\n             \"type\": \"string\"\n            },\n            \"gateway_ip\": {\n             \"type\": \"string\"\n            },\n            \"id\": {\n             \"type\": \"string\"\n            },\n            \"ipVersion\": {\n             \"type\": \"integer\"\n            },\n            \"ipv6AddressMode\": {\n             \"type\": \"string\"\n            },\n            \"ipv6RaMode\": {\n             \"type\": \"string\"\n            },\n            \"name\": {\n             \"type\": \"string\"\n            },\n            \"notTags\": {\n             \"type\": \"string\"\n            },\n            \"notTagsAny\": {\n             \"type\": \"string\"\n            },\n            \"projectId\": {\n             \"type\": \"string\"\n            },\n            \"tags\": {\n             \"type\": \"string\"\n            },\n            \"tagsAny\": {\n             \"type\": \"string\"\n            }\n           },\n           \"type\": \"object\"\n          }\n         },\n         \"required\": [\n          \"subnet\"\n         ],\n         \"type\": \"object\"\n        },\n        \"type\": \"array\"\n       },\n       \"hostId\": {\n        \"description\": \"The ID of the host where the port is allocated\",\n        \"type\": \"string\"\n       },\n       \"macAddress\": {\n        \"type\": \"string\"\n       },\n       \"nameSuffix\": {\n        \"description\": \"Used to make the name of the port unique. If unspecified, instead the 0-based index of the port in the list is used.\",\n        \"type\": \"string\"\n       },\n       \"network\": {\n        \"description\": \"Network is a query for an openstack network that the port will be created or discovered on.\\nThis will fail if the query returns more than one network.\",\n        \"properties\": {\n         \"description\": {\n          \"type\": \"string\"\n         },\n         \"id\": {\n          \"type\": \"string\"\n         },\n         \"name\": {\n          \"type\": \"string\"\n         },\n         \"notTags\": {\n          \"type\": \"string\"\n         },\n         \"notTagsAny\": {\n          \"type\": \"string\"\n         },\n         \"projectId\": {\n          \"type\": \"string\"\n         },\n         \"tags\": {\n          \"type\": \"string\"\n         },\n         \"tagsAny\": {\n          \"type\": \"string\"\n         }\n        },\n        \"type\": \"object\"\n       },\n       \"profile\": {\n        \"additionalProperties\": {\n         \"type\": \"string\"\n        },\n        \"description\": \"A dictionary that enables the application running on the specified\\nhost to pass and receive virtual network interface (VIF) port-specific\\ninformation to the plug-in.\",\n        \"type\": \"object\"\n       },\n       \"projectId\": {\n        \"type\": \"string\"\n       },\n       \"securityGroupFilters\": {\n        \"description\": \"The names, uuids, filters or any combination these of the security groups to assign to the instance\",\n        \"items\": {\n         \"properties\": {\n          \"filter\": {\n           \"description\": \"Filters used to query security groups in openstack\",\n           \"properties\": {\n            \"description\": {\n             \"type\": \"string\"\n            },\n            \"id\": {\n             \"type\": \"string\"\n            },\n            \"limit\": {\n             \"type\": \"integer\"\n            },\n            \"marker\": {\n             \"type\": \"string\"\n            },\n            \"name\": {\n             \"type\": \"string\"\n            },\n            \"notTags\": {\n             \"type\": \"string\"\n            },\n            \"notTagsAny\": {\n             \"type\": \"string\"\n            },\n            \"projectId\": {\n             \"type\": \"string\"\n            },\n            \"sortDir\": {\n             \"type\": \"string\"\n            },\n            \"sortKey\": {\n             \"type\": \"string\"\n            },\n            \"tags\": {\n             \"type\": \"string\"\n            },\n            \"tagsAny\": {\n             \"type\": \"string\"\n            },\n            \"tenantId\": {\n             \"type\": \"string\"\n            }\n           },\n           \"type\": \"object\"\n          },\n          \"name\": {\n           \"description\": \"Security Group name\",\n           \"type\": \"string\"\n          },\n          \"uuid\": {\n           \"description\": \"Security Group UID\",\n           \"type\": \"string\"\n          }\n         },\n         \"type\": \"object\"\n        },\n        \"type\": \"array\"\n       },\n       \"securityGroups\": {\n        \"description\": \"The uuids of the security groups to assign to the instance\",\n        \"items\": {\n         \"type\": \"string\"\n        },\n        \"type\": \"array\",\n        \"x-kubernetes-list-type\": \"set\"\n       },\n       \"tags\": {\n        \"description\": \"Tags applied to the port (and corresponding trunk, if a trunk is configured.)\\nThese tags are applied in addition to the instance's tags, which will also be applied to the port.\",\n        \"items\": {\n         \"type\": \"string\"\n        },\n        \"type\": \"array\",\n        \"x-kubernetes-list-type\": \"set\"\n       },\n       \"tenantId\": {\n        \"type\": \"string\"\n       },\n       \"trunk\": {\n        \"description\": \"Enables and disables trunk at port level. If not provided, openStackMachine.Spec.Trunk is inherited.\",\n        \"type\": \"boolean\"\n       },\n       \"valueSpecs\": {\n        \"description\": \"Value specs are extra parameters to include in the API request with OpenStack.\\nThis is an extension point for the API, so what they do and if they are supported,\\ndepends on the specific OpenStack implementation.\",\n        \"items\": {\n         \"description\": \"ValueSpec represents a single value_spec key-value pair.\",\n         \"properties\": {\n          \"key\": {\n           \"description\": \"Key is the key in the key-value pair.\",\n           \"type\": \"string\"\n          },\n          \"name\": {\n           \"description\": \"Name is the name of the key-value pair.\\nThis is just for identifying the pair and will not be sent to the OpenStack API.\",\n           \"type\": \"string\"\n          },\n          \"value\": {\n           \"description\": \"Value is the value in the key-value pair.\",\n           \"type\": \"string\"\n          }\n         },\n         \"required\": [\n          \"key\",\n          \"name\",\n          \"value\"\n         ],\n         \"type\": \"object\"\n        },\n        \"type\": \"array\",\n        \"x-kubernetes-list-map-keys\": [\n         \"name\"\n        ],\n        \"x-kubernetes-list-type\": \"map\"\n       },\n       \"vnicType\": {\n        \"description\": \"The virtual network interface card (vNIC) type that is bound to the neutron port.\",\n        \"type\": \"string\"\n       }\n      },\n      \"type\": \"object\"\n     },\n     \"type\": \"array\"\n    },\n    \"providerID\": {\n     \"description\": \"ProviderID is the unique identifier as specified by the cloud provider.\",\n     \"type\": \"string\"\n    },\n    \"rootVolume\": {\n     \"description\": \"The volume metadata to boot from\",\n     \"properties\": {\n      \"availabilityZone\": {\n       \"type\": \"string\"\n      },\n      \"diskSize\": {\n       \"type\": \"integer\"\n      },\n      \"volumeType\": {\n       \"type\": \"string\"\n      }\n     },\n     \"type\": \"object\"\n    },\n    \"securityGroups\": {\n     \"description\": \"The names of the security groups to assign to the instance\",\n     \"items\": {\n      \"properties\": {\n       \"filter\": {\n        \"description\": \"Filters used to query security groups in openstack\",\n        \"properties\": {\n         \"description\": {\n          \"type\": \"string\"\n         },\n         \"id\": {\n          \"type\": \"string\"\n         },\n         \"limit\": {\n          \"type\": \"integer\"\n         },\n         \"marker\": {\n          \"type\": \"string\"\n         },\n         \"name\": {\n          \"type\": \"string\"\n         },\n         \"notTags\": {\n          \"type\": \"string\"\n         },\n         \"notTagsAny\": {\n          \"type\": \"string\"\n         },\n         \"projectId\": {\n          \"type\": \"string\"\n         },\n         \"sortDir\": {\n          \"type\": \"string\"\n         },\n         \"sortKey\": {\n          \"type\": \"string\"\n         },\n         \"tags\": {\n          \"type\": \"string\"\n         },\n         \"tagsAny\": {\n          \"type\": \"string\"\n         },\n         \"tenantId\": {\n          \"type\": \"string\"\n         }\n        },\n        \"type\": \"object\"\n       },\n       \"name\": {\n        \"description\": \"Security Group name\",\n        \"type\": \"string\"\n       },\n       \"uuid\": {\n        \"description\": \"Security Group UID\",\n        \"type\": \"string\"\n       }\n      },\n      \"type\": \"object\"\n     },\n     \"type\": \"array\"\n    },\n    \"serverGroupID\": {\n     \"description\": \"The server group to assign the machine to\",\n     \"type\": \"string\"\n    },\n    \"serverMetadata\": {\n     \"additionalProperties\": {\n      \"type\": \"string\"\n     },\n     \"description\": \"Metadata mapping. Allows you to create a map of key value pairs to add to the server instance.\",\n     \"type\": \"object\"\n    },\n    \"sshKeyName\": {\n     \"description\": \"The ssh key to inject in the instance\",\n     \"type\": \"string\"\n    },\n    \"subnet\": {\n     \"description\": \"UUID, IP address of a port from this subnet will be marked as AccessIPv4 on the created compute instance\",\n     \"type\": \"string\"\n    },\n    \"tags\": {\n     \"description\": \"Machine tags\\nRequires Nova api 2.52 minimum!\",\n     \"items\": {\n      \"type\": \"string\"\n     },\n     \"type\": \"array\",\n     \"x-kubernetes-list-type\": \"set\"\n    },\n    \"trunk\": {\n     \"description\": \"Whether the server instance is created on a trunk port or not.\",\n     \"type\": \"boolean\"\n    }\n   },\n   \"type\": \"object\"\n  }\n },\n \"title\": \"Open Stack Machine\",\n \"type\": \"object\"\n}",
   "version": "infrastructure.cluster.x-k8s.io/v1alpha6"
  },
  "configuration": null,
  "description": "",
  "displayName": "Open Stack Machine",
  "format": "JSON",
  "id": "00000000-0000-0000-0000-000000000000",
  "metadata": {
   "genealogy": "",
   "isAnnotation": false,
   "isNamespaced": true,
   "published": false,
   "source_uri": "git://github.com/kubernetes-sigs/cluster-api-provider-openstack/main/config/crd/bases"
  },
  "model": {
   "category": {
    "name": "Orchestration \u0026 Management"
   },
   "displayName": "OpenStack (Cluster API Provider)",
   "id": "00000000-0000-0000-0000-000000000000",
   "metadata": {
    "isAnnotation": false,
    "primaryColor": "#DA1A32",
    "shape": "round-rectangle",
    "source_uri": "git://github.com/kubernetes-sigs/cluster-api-provider-openstack/main/config/crd/bases",
    "styleOverrides": "",
    "svgColor": "\u003c?xml version=\"1.0\" encoding=\"UTF-8\"?\u003e\u003c!DOCTYPE svg\u003e\u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 -2.5 256 256\" version=\"1.1\" xmlns:_xmlns=\"xmlns\" _xmlns:xlink=\"http://www.w3.org/1999/xlink\" preserveAspectRatio=\"xMidYMid\"\u003e\n    \u003cg xmlns=\"http://www.w3.org/2000/svg\"\u003e\n        \u003cpath xmlns=\"http://www.w3.org/2000/svg\" d=\"M57.8196917,170.722795 L57.8196917,179.878808 C57.8196917,186.98261 63.5764029,192.739322 70.6802055,192.739322 L70.6802055,192.739322 L185.330319,192.739322 C192.434121,192.739322 198.190832,186.98261 198.190832,179.878808 L198.190832,179.878808 L198.190832,170.722795 L256,170.722795 L256,226.77443 C256,239.855951 245.296937,250.559013 232.215416,250.559013 L232.215416,250.559013 L23.7845838,250.559013 C10.7030627,250.559013 0,239.855951 0,226.77443 L0,226.77443 L0,170.722795 L57.8196917,170.722795 Z M57.8091675,96.3696608 L57.8091675,154.178828 L0,154.178828 L0,96.3696608 L57.8091675,96.3696608 Z M256,96.3696608 L256,154.178828 L198.190832,154.178828 L198.190832,96.3696608 L256,96.3696608 Z M232.215416,0 C245.296937,0 256,10.7030627 256,23.7951079 L256,23.7951079 L256,79.8362179 L198.190832,79.8362179 L198.190832,70.6802055 C198.190832,63.5764029 192.434121,57.8196917 185.330319,57.8196917 L185.330319,57.8196917 L70.6696814,57.8196917 C63.5658787,57.8196917 57.8091675,63.5764029 57.8091675,70.6802055 L57.8091675,70.6802055 L57.8091675,79.8362179 L0,79.8362179 L0,23.7845838 C0,10.7030627 10.7030627,0 23.7845838,0 L23.7845838,0 Z\" fill=\"#DA1A32\"\u003e\n\n\u003c/path\u003e\n    \u003c/g\u003e\n\u003c/svg\u003e",
    "svgComplete": "",
    "svgWhite": "\u003c?xml version=\"1.0\" encoding=\"UTF-8\"?\u003e\u003c!DOCTYPE svg\u003e\u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 -2.5 256 256\" version=\"1.1\" xmlns:_xmlns=\"xmlns\" _xmlns:xlink=\"http://www.w3.org/1999/xlink\" preserveAspectRatio=\"xMidYMid\"\u003e\n    \u003cg xmlns=\"http://www.w3.org/2000/svg\"\u003e\n        \u003cpath xmlns=\"http://www.w3.org/2000/svg\" d=\"M57.8196917,170.722795 L57.8196917,179.878808 C57.8196917,186.98261 63.5764029,192.739322 70.6802055,192.739322 L70.6802055,192.739322 L185.330319,192.739322 C192.434121,192.739322 198.190832,186.98261 198.190832,179.878808 L198.190832,179.878808 L198.190832,170.722795 L256,170.722795 L256,226.77443 C256,239.855951 245.296937,250.559013 232.215416,250.559013 L232.215416,250.559013 L23.7845838,250.559013 C10.7030627,250.559013 0,239.855951 0,226.77443 L0,226.77443 L0,170.722795 L57.8196917,170.722795 Z M57.8091675,96.3696608 L57.8091675,154.178828 L0,154.178828 L0,96.3696608 L57.8091675,96.3696608 Z M256,96.3696608 L256,154.178828 L198.190832,154.178828 L198.190832,96.3696608 L256,96.3696608 Z M232.215416,0 C245.296937,0 256,10.7030627 256,23.7951079 L256,23.7951079 L256,79.8362179 L198.190832,79.8362179 L198.190832,70.6802055 C198.190832,63.5764029 192.434121,57.8196917 185.330319,57.8196917 L185.330319,57.8196917 L70.6696814,57.8196917 C63.5658787,57.8196917 57.8091675,63.5764029 57.8091675,70.6802055 L57.8091675,70.6802055 L57.8091675,79.8362179 L0,79.8362179 L0,23.7845838 C0,10.7030627 10.7030627,0 23.7845838,0 L23.7845838,0 Z\" fill=\"#fff\"\u003e\n\u003c/path\u003e\n    \u003c/g\u003e\n\u003c/svg\u003e"
   },
   "model": {
    "version": "v0.11.0-rc.0"
   },
   "name": "cluster-api-provider-openstack",
   "registrant": {
    "created_at": "0001-01-01T00:00:00Z",
    "credential_id": "00000000-0000-0000-0000-000000000000",
    "deleted_at": "0001-01-01T00:00:00Z",
    "id": "00000000-0000-0000-0000-000000000000",
    "kind": "github",
    "name": "Github",
    "status": "discovered",
    "sub_type": "",
    "type": "registry",
    "updated_at": "0001-01-01T00:00:00Z",
    "user_id": "00000000-0000-0000-0000-000000000000"
   },
   "connection_id": "00000000-0000-0000-0000-000000000000",
   "schemaVersion": "models.meshery.io/v1beta1",
   "status": "enabled",
   "subCategory": "Provisioning",
   "version": "v1.0.0",
   "components": null,
   "relationships": null,
   "components_count": 0,
   "relationships_count": 0
  },
  "schemaVersion": "components.meshery.io/v1beta1",
  "status": "enabled",
  "styles": {
   "primaryColor": "#DA1A32",
   "shape": "round-rectangle",
   "svgColor": "\u003csvg width=\"800px\" height=\"800px\" viewBox=\"0 -2.5 256 256\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" preserveAspectRatio=\"xMidYMid\"\u003e\n    \u003cg\u003e\n        \u003cpath d=\"M57.8196917,170.722795 L57.8196917,179.878808 C57.8196917,186.98261 63.5764029,192.739322 70.6802055,192.739322 L70.6802055,192.739322 L185.330319,192.739322 C192.434121,192.739322 198.190832,186.98261 198.190832,179.878808 L198.190832,179.878808 L198.190832,170.722795 L256,170.722795 L256,226.77443 C256,239.855951 245.296937,250.559013 232.215416,250.559013 L232.215416,250.559013 L23.7845838,250.559013 C10.7030627,250.559013 0,239.855951 0,226.77443 L0,226.77443 L0,170.722795 L57.8196917,170.722795 Z M57.8091675,96.3696608 L57.8091675,154.178828 L0,154.178828 L0,96.3696608 L57.8091675,96.3696608 Z M256,96.3696608 L256,154.178828 L198.190832,154.178828 L198.190832,96.3696608 L256,96.3696608 Z M232.215416,0 C245.296937,0 256,10.7030627 256,23.7951079 L256,23.7951079 L256,79.8362179 L198.190832,79.8362179 L198.190832,70.6802055 C198.190832,63.5764029 192.434121,57.8196917 185.330319,57.8196917 L185.330319,57.8196917 L70.6696814,57.8196917 C63.5658787,57.8196917 57.8091675,63.5764029 57.8091675,70.6802055 L57.8091675,70.6802055 L57.8091675,79.8362179 L0,79.8362179 L0,23.7845838 C0,10.7030627 10.7030627,0 23.7845838,0 L23.7845838,0 Z\" fill=\"#DA1A32\"\u003e\n\n\u003c/path\u003e\n    \u003c/g\u003e\n\u003c/svg\u003e",
   "svgWhite": "\u003csvg width=\"800px\" height=\"800px\" viewBox=\"0 -2.5 256 256\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" preserveAspectRatio=\"xMidYMid\"\u003e\n    \u003cg\u003e\n        \u003cpath d=\"M57.8196917,170.722795 L57.8196917,179.878808 C57.8196917,186.98261 63.5764029,192.739322 70.6802055,192.739322 L70.6802055,192.739322 L185.330319,192.739322 C192.434121,192.739322 198.190832,186.98261 198.190832,179.878808 L198.190832,179.878808 L198.190832,170.722795 L256,170.722795 L256,226.77443 C256,239.855951 245.296937,250.559013 232.215416,250.559013 L232.215416,250.559013 L23.7845838,250.559013 C10.7030627,250.559013 0,239.855951 0,226.77443 L0,226.77443 L0,170.722795 L57.8196917,170.722795 Z M57.8091675,96.3696608 L57.8091675,154.178828 L0,154.178828 L0,96.3696608 L57.8091675,96.3696608 Z M256,96.3696608 L256,154.178828 L198.190832,154.178828 L198.190832,96.3696608 L256,96.3696608 Z M232.215416,0 C245.296937,0 256,10.7030627 256,23.7951079 L256,23.7951079 L256,79.8362179 L198.190832,79.8362179 L198.190832,70.6802055 C198.190832,63.5764029 192.434121,57.8196917 185.330319,57.8196917 L185.330319,57.8196917 L70.6696814,57.8196917 C63.5658787,57.8196917 57.8091675,63.5764029 57.8091675,70.6802055 L57.8091675,70.6802055 L57.8091675,79.8362179 L0,79.8362179 L0,23.7845838 C0,10.7030627 10.7030627,0 23.7845838,0 L23.7845838,0 Z\" fill=\"#fff\"\u003e\n\u003c/path\u003e\n    \u003c/g\u003e\n\u003c/svg\u003e"
  },
  "version": "v1.0.0"
 }