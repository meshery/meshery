{
  "id": "00000000-0000-0000-0000-000000000000",
  "schemaVersion": "components.meshery.io/v1beta1",
  "version": "v1.0.0",
  "displayName": "Provider Config",
  "description": "",
  "format": "JSON",
  "model": {
    "id": "00000000-0000-0000-0000-000000000000",
    "schemaVersion": "models.meshery.io/v1beta1",
    "version": "v1.0.0",
    "name": "crossplane-provider-exoscale",
    "displayName": "Exoscale (Crossplane)",
    "status": "ignored",
    "registrant": {
      "id": "00000000-0000-0000-0000-000000000000",
      "name": "Github",
      "credential_id": "00000000-0000-0000-0000-000000000000",
      "type": "registry",
      "sub_type": "",
      "kind": "github",
      "status": "discovered",
      "user_id": "00000000-0000-0000-0000-000000000000",
      "created_at": "0001-01-01T00:00:00Z",
      "updated_at": "0001-01-01T00:00:00Z",
      "deleted_at": "0001-01-01T00:00:00Z"
    },
    "connection_id": "00000000-0000-0000-0000-000000000000",
    "category": {
      "id": "00000000-0000-0000-0000-000000000000",
      "name": "Orchestration \u0026 Management"
    },
    "subCategory": "Cloud Provider",
    "metadata": {
      "isAnnotation": false,
      "primaryColor": "#DA291C",
      "secondaryColor": "#000000",
      "shape": "circle",
      "source_uri": "git://github.com/vshn/provider-exoscale/master/package/crds",
      "styleOverrides": "",
      "svgColor": "\u003c?xml version=\"1.0\" encoding=\"UTF-8\"?\u003e\u003c!DOCTYPE svg\u003e\u003csvg xmlns=\"http://www.w3.org/2000/svg\" id=\"Layer_1\" version=\"1.1\" viewBox=\"0 0 64 55.4\" height=\"20\" width=\"20\"\u003e\n\u003cpath xmlns=\"http://www.w3.org/2000/svg\" d=\"M32,0L0,55.4h4.4L32,8v7.8L9,55.4h4.6l18.4-31.7v8l-13.8,23.7h4.6l9.2-15.8v7.8l-4.6,8h36.6L32,0Z\" fill=\"#da291c\"\u003e\u003c/path\u003e\n\u003c/svg\u003e",
      "svgComplete": "",
      "svgWhite": "\u003c?xml version=\"1.0\" encoding=\"UTF-8\"?\u003e\u003c!DOCTYPE svg\u003e\u003csvg xmlns=\"http://www.w3.org/2000/svg\" id=\"Layer_1\" version=\"1.1\" viewBox=\"0 0 64 55.4\" height=\"20\" width=\"20\"\u003e\n\u003cpath xmlns=\"http://www.w3.org/2000/svg\" d=\"M32,0L0,55.4h4.4L32,8v7.8L9,55.4h4.6l18.4-31.7v8l-13.8,23.7h4.6l9.2-15.8v7.8l-4.6,8h36.6L32,0Z\" fill=\"#ffffff\"\u003e\u003c/path\u003e\n\u003c/svg\u003e"
    },
    "model": {
      "version": "v1.0.0"
    },
    "components_count": 0,
    "relationships_count": 0,
    "components": null,
    "relationships": null
  },
  "styles": {
    "primaryColor": "#DA291C",
    "secondaryColor": "#000000",
    "shape": "circle",
    "svgColor": "\u003csvg id=\"Layer_1\" xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\" viewBox=\"0 0 64 55.4\"\u003e\n\u003cpath d=\"M32,0L0,55.4h4.4L32,8v7.8L9,55.4h4.6l18.4-31.7v8l-13.8,23.7h4.6l9.2-15.8v7.8l-4.6,8h36.6L32,0Z\" fill=\"#da291c\"/\u003e\n\u003c/svg\u003e",
    "svgComplete": "",
    "svgWhite": "\u003csvg id=\"Layer_1\" xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\" viewBox=\"0 0 64 55.4\"\u003e\n\u003cpath d=\"M32,0L0,55.4h4.4L32,8v7.8L9,55.4h4.6l18.4-31.7v8l-13.8,23.7h4.6l9.2-15.8v7.8l-4.6,8h36.6L32,0Z\" fill=\"#ffffff\"/\u003e\n\u003c/svg\u003e"
  },
  "capabilities": [
    {
      "description": "Initiate a performance test. Meshery will execute the load generation, collect metrics, and present the results.",
      "displayName": "Performance Test",
      "entityState": [
        "instance"
      ],
      "key": "",
      "kind": "action",
      "schemaVersion": "capability.meshery.io/v1alpha1",
      "status": "enabled",
      "subType": "perf-test",
      "type": "operator",
      "version": "0.7.0"
    },
    {
      "description": "Configure the workload specific setting of a component",
      "displayName": "Workload Configuration",
      "entityState": [
        "declaration"
      ],
      "key": "",
      "kind": "mutate",
      "schemaVersion": "capability.meshery.io/v1alpha1",
      "status": "enabled",
      "subType": "config",
      "type": "configuration",
      "version": "0.7.0"
    },
    {
      "description": "Configure Labels And Annotations for  the component ",
      "displayName": "Labels and Annotations Configuration",
      "entityState": [
        "declaration"
      ],
      "key": "",
      "kind": "mutate",
      "schemaVersion": "capability.meshery.io/v1alpha1",
      "status": "enabled",
      "subType": "labels-and-annotations",
      "type": "configuration",
      "version": "0.7.0"
    },
    {
      "description": "View relationships for the component",
      "displayName": "Relationships",
      "entityState": [
        "declaration",
        "instance"
      ],
      "key": "",
      "kind": "view",
      "schemaVersion": "capability.meshery.io/v1alpha1",
      "status": "enabled",
      "subType": "relationship",
      "type": "configuration",
      "version": "0.7.0"
    },
    {
      "description": "View Component Definition ",
      "displayName": "Json Schema",
      "entityState": [
        "declaration",
        "instance"
      ],
      "key": "",
      "kind": "view",
      "schemaVersion": "capability.meshery.io/v1alpha1",
      "status": "enabled",
      "subType": "definition",
      "type": "configuration",
      "version": "0.7.0"
    },
    {
      "description": "Configure the visual styles for the component",
      "displayName": "Styling",
      "entityState": [
        "declaration"
      ],
      "key": "",
      "kind": "mutate",
      "schemaVersion": "capability.meshery.io/v1alpha1",
      "status": "enabled",
      "subType": "",
      "type": "style",
      "version": "0.7.0"
    },
    {
      "description": "Change the shape of the component",
      "displayName": "Change Shape",
      "entityState": [
        "declaration"
      ],
      "key": "",
      "kind": "mutate",
      "schemaVersion": "capability.meshery.io/v1alpha1",
      "status": "enabled",
      "subType": "shape",
      "type": "style",
      "version": "0.7.0"
    },
    {
      "description": "Drag and Drop a component into a parent component in graph view",
      "displayName": "Compound Drag And Drop",
      "entityState": [
        "declaration"
      ],
      "key": "",
      "kind": "interaction",
      "schemaVersion": "capability.meshery.io/v1alpha1",
      "status": "enabled",
      "subType": "compoundDnd",
      "type": "graph",
      "version": "0.7.0"
    }
  ],
  "status": "enabled",
  "metadata": {
    "configurationUISchema": "",
    "genealogy": "",
    "instanceDetails": null,
    "isAnnotation": false,
    "isNamespaced": false,
    "published": false,
    "source_uri": "git://github.com/vshn/provider-exoscale/master/package/crds"
  },
  "configuration": null,
  "component": {
    "version": "exoscale.crossplane.io/v1",
    "kind": "ProviderConfig",
    "schema": "{\n \"description\": \"A ProviderConfig configures a Template provider.\",\n \"properties\": {\n  \"spec\": {\n   \"description\": \"A ProviderConfigSpec defines the desired state of a ProviderConfig.\",\n   \"properties\": {\n    \"credentials\": {\n     \"description\": \"Credentials required to authenticate to this provider.\",\n     \"properties\": {\n      \"apiSecretRef\": {\n       \"description\": \"APISecretRef is the reference to the secret with the exoscale API Key and Secret.\",\n       \"properties\": {\n        \"name\": {\n         \"description\": \"name is unique within a namespace to reference a secret resource.\",\n         \"type\": \"string\"\n        },\n        \"namespace\": {\n         \"description\": \"namespace defines the space within which the secret name must be unique.\",\n         \"type\": \"string\"\n        }\n       },\n       \"type\": \"object\",\n       \"x-kubernetes-map-type\": \"atomic\"\n      },\n      \"env\": {\n       \"description\": \"Env is a reference to an environment variable that contains credentials\\nthat must be used to connect to the provider.\",\n       \"properties\": {\n        \"name\": {\n         \"description\": \"Name is the name of an environment variable.\",\n         \"type\": \"string\"\n        }\n       },\n       \"required\": [\n        \"name\"\n       ],\n       \"type\": \"object\"\n      },\n      \"fs\": {\n       \"description\": \"Fs is a reference to a filesystem location that contains credentials that\\nmust be used to connect to the provider.\",\n       \"properties\": {\n        \"path\": {\n         \"description\": \"Path is a filesystem path.\",\n         \"type\": \"string\"\n        }\n       },\n       \"required\": [\n        \"path\"\n       ],\n       \"type\": \"object\"\n      },\n      \"secretRef\": {\n       \"description\": \"A SecretRef is a reference to a secret key that contains the credentials\\nthat must be used to connect to the provider.\",\n       \"properties\": {\n        \"key\": {\n         \"description\": \"The key to select.\",\n         \"type\": \"string\"\n        },\n        \"name\": {\n         \"description\": \"Name of the secret.\",\n         \"type\": \"string\"\n        },\n        \"namespace\": {\n         \"description\": \"Namespace of the secret.\",\n         \"type\": \"string\"\n        }\n       },\n       \"required\": [\n        \"key\",\n        \"name\",\n        \"namespace\"\n       ],\n       \"type\": \"object\"\n      },\n      \"source\": {\n       \"description\": \"Source represents location of the cluster token.\",\n       \"enum\": [\n        \"None\",\n        \"Secret\",\n        \"InjectedIdentity\",\n        \"Environment\",\n        \"Filesystem\"\n       ],\n       \"type\": \"string\"\n      }\n     },\n     \"required\": [\n      \"source\"\n     ],\n     \"type\": \"object\"\n    }\n   },\n   \"required\": [\n    \"credentials\"\n   ],\n   \"type\": \"object\"\n  }\n },\n \"required\": [\n  \"spec\"\n ],\n \"title\": \"Provider Config\",\n \"type\": \"object\"\n}"
  }
}