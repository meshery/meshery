{
  "id": "00000000-0000-0000-0000-000000000000",
  "schemaVersion": "components.meshery.io/v1beta1",
  "version": "v1.0.0",
  "displayName": "Redis",
  "description": "",
  "format": "JSON",
  "model": {
    "id": "00000000-0000-0000-0000-000000000000",
    "schemaVersion": "models.meshery.io/v1beta1",
    "version": "v1.0.0",
    "name": "crossplane-provider-exoscale",
    "displayName": "Exoscale (Crossplane)",
    "status": "ignored",
    "registrant": {
      "id": "00000000-0000-0000-0000-000000000000",
      "name": "Github",
      "credential_id": "00000000-0000-0000-0000-000000000000",
      "type": "registry",
      "sub_type": "",
      "kind": "github",
      "status": "discovered",
      "user_id": "00000000-0000-0000-0000-000000000000",
      "created_at": "0001-01-01T00:00:00Z",
      "updated_at": "0001-01-01T00:00:00Z",
      "deleted_at": "0001-01-01T00:00:00Z"
    },
    "connection_id": "00000000-0000-0000-0000-000000000000",
    "category": {
      "id": "00000000-0000-0000-0000-000000000000",
      "name": "Orchestration \u0026 Management"
    },
    "subCategory": "Cloud Provider",
    "metadata": {
      "isAnnotation": false,
      "primaryColor": "#DA291C",
      "secondaryColor": "#000000",
      "shape": "circle",
      "source_uri": "git://github.com/vshn/provider-exoscale/master/package/crds",
      "styleOverrides": "",
      "svgColor": "\u003c?xml version=\"1.0\" encoding=\"UTF-8\"?\u003e\u003c!DOCTYPE svg\u003e\u003csvg xmlns=\"http://www.w3.org/2000/svg\" id=\"Layer_1\" version=\"1.1\" viewBox=\"0 0 64 55.4\" height=\"20\" width=\"20\"\u003e\n\u003cpath xmlns=\"http://www.w3.org/2000/svg\" d=\"M32,0L0,55.4h4.4L32,8v7.8L9,55.4h4.6l18.4-31.7v8l-13.8,23.7h4.6l9.2-15.8v7.8l-4.6,8h36.6L32,0Z\" fill=\"#da291c\"\u003e\u003c/path\u003e\n\u003c/svg\u003e",
      "svgComplete": "",
      "svgWhite": "\u003c?xml version=\"1.0\" encoding=\"UTF-8\"?\u003e\u003c!DOCTYPE svg\u003e\u003csvg xmlns=\"http://www.w3.org/2000/svg\" id=\"Layer_1\" version=\"1.1\" viewBox=\"0 0 64 55.4\" height=\"20\" width=\"20\"\u003e\n\u003cpath xmlns=\"http://www.w3.org/2000/svg\" d=\"M32,0L0,55.4h4.4L32,8v7.8L9,55.4h4.6l18.4-31.7v8l-13.8,23.7h4.6l9.2-15.8v7.8l-4.6,8h36.6L32,0Z\" fill=\"#ffffff\"\u003e\u003c/path\u003e\n\u003c/svg\u003e"
    },
    "model": {
      "version": "v1.0.0"
    },
    "components_count": 0,
    "relationships_count": 0,
    "components": null,
    "relationships": null
  },
  "styles": {
    "primaryColor": "#DA291C",
    "secondaryColor": "#000000",
    "shape": "circle",
    "svgColor": "\u003csvg id=\"Layer_1\" xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\" viewBox=\"0 0 64 55.4\"\u003e\n\u003cpath d=\"M32,0L0,55.4h4.4L32,8v7.8L9,55.4h4.6l18.4-31.7v8l-13.8,23.7h4.6l9.2-15.8v7.8l-4.6,8h36.6L32,0Z\" fill=\"#da291c\"/\u003e\n\u003c/svg\u003e",
    "svgComplete": "",
    "svgWhite": "\u003csvg id=\"Layer_1\" xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\" viewBox=\"0 0 64 55.4\"\u003e\n\u003cpath d=\"M32,0L0,55.4h4.4L32,8v7.8L9,55.4h4.6l18.4-31.7v8l-13.8,23.7h4.6l9.2-15.8v7.8l-4.6,8h36.6L32,0Z\" fill=\"#ffffff\"/\u003e\n\u003c/svg\u003e"
  },
  "capabilities": [
    {
      "description": "Initiate a performance test. Meshery will execute the load generation, collect metrics, and present the results.",
      "displayName": "Performance Test",
      "entityState": [
        "instance"
      ],
      "key": "",
      "kind": "action",
      "schemaVersion": "capability.meshery.io/v1alpha1",
      "status": "enabled",
      "subType": "perf-test",
      "type": "operator",
      "version": "0.7.0"
    },
    {
      "description": "Configure the workload specific setting of a component",
      "displayName": "Workload Configuration",
      "entityState": [
        "declaration"
      ],
      "key": "",
      "kind": "mutate",
      "schemaVersion": "capability.meshery.io/v1alpha1",
      "status": "enabled",
      "subType": "config",
      "type": "configuration",
      "version": "0.7.0"
    },
    {
      "description": "Configure Labels And Annotations for  the component ",
      "displayName": "Labels and Annotations Configuration",
      "entityState": [
        "declaration"
      ],
      "key": "",
      "kind": "mutate",
      "schemaVersion": "capability.meshery.io/v1alpha1",
      "status": "enabled",
      "subType": "labels-and-annotations",
      "type": "configuration",
      "version": "0.7.0"
    },
    {
      "description": "View relationships for the component",
      "displayName": "Relationships",
      "entityState": [
        "declaration",
        "instance"
      ],
      "key": "",
      "kind": "view",
      "schemaVersion": "capability.meshery.io/v1alpha1",
      "status": "enabled",
      "subType": "relationship",
      "type": "configuration",
      "version": "0.7.0"
    },
    {
      "description": "View Component Definition ",
      "displayName": "Json Schema",
      "entityState": [
        "declaration",
        "instance"
      ],
      "key": "",
      "kind": "view",
      "schemaVersion": "capability.meshery.io/v1alpha1",
      "status": "enabled",
      "subType": "definition",
      "type": "configuration",
      "version": "0.7.0"
    },
    {
      "description": "Configure the visual styles for the component",
      "displayName": "Styling",
      "entityState": [
        "declaration"
      ],
      "key": "",
      "kind": "mutate",
      "schemaVersion": "capability.meshery.io/v1alpha1",
      "status": "enabled",
      "subType": "",
      "type": "style",
      "version": "0.7.0"
    },
    {
      "description": "Change the shape of the component",
      "displayName": "Change Shape",
      "entityState": [
        "declaration"
      ],
      "key": "",
      "kind": "mutate",
      "schemaVersion": "capability.meshery.io/v1alpha1",
      "status": "enabled",
      "subType": "shape",
      "type": "style",
      "version": "0.7.0"
    },
    {
      "description": "Drag and Drop a component into a parent component in graph view",
      "displayName": "Compound Drag And Drop",
      "entityState": [
        "declaration"
      ],
      "key": "",
      "kind": "interaction",
      "schemaVersion": "capability.meshery.io/v1alpha1",
      "status": "enabled",
      "subType": "compoundDnd",
      "type": "graph",
      "version": "0.7.0"
    }
  ],
  "status": "enabled",
  "metadata": {
    "configurationUISchema": "",
    "genealogy": "",
    "instanceDetails": null,
    "isAnnotation": false,
    "isNamespaced": false,
    "published": false,
    "source_uri": "git://github.com/vshn/provider-exoscale/master/package/crds"
  },
  "configuration": null,
  "component": {
    "version": "exoscale.crossplane.io/v1",
    "kind": "Redis",
    "schema": "{\n \"description\": \"Redis is the API for creating Redis.\",\n \"properties\": {\n  \"spec\": {\n   \"description\": \"RedisSpec defines the desired state of a Redis.\",\n   \"properties\": {\n    \"deletionPolicy\": {\n     \"default\": \"Delete\",\n     \"description\": \"DeletionPolicy specifies what will happen to the underlying external\\nwhen this managed resource is deleted - either \\\"Delete\\\" or \\\"Orphan\\\" the\\nexternal resource.\\nThis field is planned to be deprecated in favor of the ManagementPolicies\\nfield in a future release. Currently, both could be set independently and\\nnon-default values would be honored if the feature flag is enabled.\\nSee the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223\",\n     \"enum\": [\n      \"Orphan\",\n      \"Delete\"\n     ],\n     \"type\": \"string\"\n    },\n    \"forProvider\": {\n     \"description\": \"RedisParameters are the configurable fields of a Redis instance.\",\n     \"properties\": {\n      \"ipFilter\": {\n       \"description\": \"IPFilter is a list of allowed IPv4 CIDR ranges that can access the service.\\nIf no IP Filter is set, you may not be able to reach the service.\\nA value of `0.0.0.0/0` will open the service to all addresses on the public internet.\",\n       \"items\": {\n        \"type\": \"string\"\n       },\n       \"type\": \"array\"\n      },\n      \"maintenance\": {\n       \"description\": \"MaintenanceSpec contains settings to control the maintenance of an instance.\",\n       \"properties\": {\n        \"dayOfWeek\": {\n         \"description\": \"DayOfWeek specifies at which weekday the maintenance is held place.\\nAllowed values are [monday, tuesday, wednesday, thursday, friday, saturday, sunday, never]\",\n         \"enum\": [\n          \"monday\",\n          \"tuesday\",\n          \"wednesday\",\n          \"thursday\",\n          \"friday\",\n          \"saturday\",\n          \"sunday\",\n          \"never\"\n         ],\n         \"type\": \"string\"\n        },\n        \"timeOfDay\": {\n         \"description\": \"TimeOfDay for installing updates in UTC.\\nFormat: \\\"hh:mm:ss\\\".\",\n         \"pattern\": \"^([0-1]?[0-9]|2[0-3]):([0-5][0-9]):([0-5][0-9])$\",\n         \"type\": \"string\"\n        }\n       },\n       \"type\": \"object\"\n      },\n      \"redisSettings\": {\n       \"description\": \"RedisSettings contains additional Redis settings.\",\n       \"format\": \"textarea\",\n       \"type\": \"string\"\n      },\n      \"size\": {\n       \"description\": \"Size contains the service capacity settings.\",\n       \"properties\": {\n        \"plan\": {\n         \"type\": \"string\"\n        }\n       },\n       \"type\": \"object\"\n      },\n      \"terminationProtection\": {\n       \"description\": \"TerminationProtection protects against termination and powering off.\",\n       \"type\": \"boolean\"\n      },\n      \"zone\": {\n       \"description\": \"Zone is the datacenter identifier in which the instance runs in.\",\n       \"enum\": [\n        \"ch-gva-2\",\n        \"ch-dk-2\",\n        \"de-fra-1\",\n        \"de-muc-1\",\n        \"at-vie-1\",\n        \"bg-sof-1\"\n       ],\n       \"type\": \"string\"\n      }\n     },\n     \"required\": [\n      \"zone\"\n     ],\n     \"type\": \"object\"\n    },\n    \"managementPolicies\": {\n     \"default\": [\n      \"*\"\n     ],\n     \"description\": \"THIS IS A BETA FIELD. It is on by default but can be opted out\\nthrough a Crossplane feature flag.\\nManagementPolicies specify the array of actions Crossplane is allowed to\\ntake on the managed and external resources.\\nThis field is planned to replace the DeletionPolicy field in a future\\nrelease. Currently, both could be set independently and non-default\\nvalues would be honored if the feature flag is enabled. If both are\\ncustom, the DeletionPolicy field will be ignored.\\nSee the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223\\nand this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md\",\n     \"items\": {\n      \"description\": \"A ManagementAction represents an action that the Crossplane controllers\\ncan take on an external resource.\",\n      \"enum\": [\n       \"Observe\",\n       \"Create\",\n       \"Update\",\n       \"Delete\",\n       \"LateInitialize\",\n       \"*\"\n      ],\n      \"type\": \"string\"\n     },\n     \"type\": \"array\"\n    },\n    \"providerConfigRef\": {\n     \"default\": {\n      \"name\": \"default\"\n     },\n     \"description\": \"ProviderConfigReference specifies how the provider that will be used to\\ncreate, observe, update, and delete this managed resource should be\\nconfigured.\",\n     \"properties\": {\n      \"name\": {\n       \"description\": \"Name of the referenced object.\",\n       \"type\": \"string\"\n      },\n      \"policy\": {\n       \"description\": \"Policies for referencing.\",\n       \"properties\": {\n        \"resolution\": {\n         \"default\": \"Required\",\n         \"description\": \"Resolution specifies whether resolution of this reference is required.\\nThe default is 'Required', which means the reconcile will fail if the\\nreference cannot be resolved. 'Optional' means this reference will be\\na no-op if it cannot be resolved.\",\n         \"enum\": [\n          \"Required\",\n          \"Optional\"\n         ],\n         \"type\": \"string\"\n        },\n        \"resolve\": {\n         \"description\": \"Resolve specifies when this reference should be resolved. The default\\nis 'IfNotPresent', which will attempt to resolve the reference only when\\nthe corresponding field is not present. Use 'Always' to resolve the\\nreference on every reconcile.\",\n         \"enum\": [\n          \"Always\",\n          \"IfNotPresent\"\n         ],\n         \"type\": \"string\"\n        }\n       },\n       \"type\": \"object\"\n      }\n     },\n     \"required\": [\n      \"name\"\n     ],\n     \"type\": \"object\"\n    },\n    \"publishConnectionDetailsTo\": {\n     \"description\": \"PublishConnectionDetailsTo specifies the connection secret config which\\ncontains a name, metadata and a reference to secret store config to\\nwhich any connection details for this managed resource should be written.\\nConnection details frequently include the endpoint, username,\\nand password required to connect to the managed resource.\",\n     \"properties\": {\n      \"configRef\": {\n       \"default\": {\n        \"name\": \"default\"\n       },\n       \"description\": \"SecretStoreConfigRef specifies which secret store config should be used\\nfor this ConnectionSecret.\",\n       \"properties\": {\n        \"name\": {\n         \"description\": \"Name of the referenced object.\",\n         \"type\": \"string\"\n        },\n        \"policy\": {\n         \"description\": \"Policies for referencing.\",\n         \"properties\": {\n          \"resolution\": {\n           \"default\": \"Required\",\n           \"description\": \"Resolution specifies whether resolution of this reference is required.\\nThe default is 'Required', which means the reconcile will fail if the\\nreference cannot be resolved. 'Optional' means this reference will be\\na no-op if it cannot be resolved.\",\n           \"enum\": [\n            \"Required\",\n            \"Optional\"\n           ],\n           \"type\": \"string\"\n          },\n          \"resolve\": {\n           \"description\": \"Resolve specifies when this reference should be resolved. The default\\nis 'IfNotPresent', which will attempt to resolve the reference only when\\nthe corresponding field is not present. Use 'Always' to resolve the\\nreference on every reconcile.\",\n           \"enum\": [\n            \"Always\",\n            \"IfNotPresent\"\n           ],\n           \"type\": \"string\"\n          }\n         },\n         \"type\": \"object\"\n        }\n       },\n       \"required\": [\n        \"name\"\n       ],\n       \"type\": \"object\"\n      },\n      \"metadata\": {\n       \"description\": \"Metadata is the metadata for connection secret.\",\n       \"properties\": {\n        \"annotations\": {\n         \"additionalProperties\": {\n          \"type\": \"string\"\n         },\n         \"description\": \"Annotations are the annotations to be added to connection secret.\\n- For Kubernetes secrets, this will be used as \\\"metadata.annotations\\\".\\n- It is up to Secret Store implementation for others store types.\",\n         \"type\": \"object\"\n        },\n        \"labels\": {\n         \"additionalProperties\": {\n          \"type\": \"string\"\n         },\n         \"description\": \"Labels are the labels/tags to be added to connection secret.\\n- For Kubernetes secrets, this will be used as \\\"metadata.labels\\\".\\n- It is up to Secret Store implementation for others store types.\",\n         \"type\": \"object\"\n        },\n        \"type\": {\n         \"description\": \"Type is the SecretType for the connection secret.\\n- Only valid for Kubernetes Secret Stores.\",\n         \"type\": \"string\"\n        }\n       },\n       \"type\": \"object\"\n      },\n      \"name\": {\n       \"description\": \"Name is the name of the connection secret.\",\n       \"type\": \"string\"\n      }\n     },\n     \"required\": [\n      \"name\"\n     ],\n     \"type\": \"object\"\n    },\n    \"writeConnectionSecretToRef\": {\n     \"description\": \"WriteConnectionSecretToReference specifies the namespace and name of a\\nSecret to which any connection details for this managed resource should\\nbe written. Connection details frequently include the endpoint, username,\\nand password required to connect to the managed resource.\\nThis field is planned to be replaced in a future release in favor of\\nPublishConnectionDetailsTo. Currently, both could be set independently\\nand connection details would be published to both without affecting\\neach other.\",\n     \"properties\": {\n      \"name\": {\n       \"description\": \"Name of the secret.\",\n       \"type\": \"string\"\n      },\n      \"namespace\": {\n       \"description\": \"Namespace of the secret.\",\n       \"type\": \"string\"\n      }\n     },\n     \"required\": [\n      \"name\",\n      \"namespace\"\n     ],\n     \"type\": \"object\"\n    }\n   },\n   \"required\": [\n    \"forProvider\"\n   ],\n   \"type\": \"object\"\n  }\n },\n \"required\": [\n  \"spec\"\n ],\n \"title\": \"Redis\",\n \"type\": \"object\"\n}"
  }
}