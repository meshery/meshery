{
  "id": "00000000-0000-0000-0000-000000000000",
  "schemaVersion": "components.meshery.io/v1beta1",
  "version": "v1.0.0",
  "displayName": "Provider Config Usage",
  "description": "",
  "format": "JSON",
  "model": {
    "id": "00000000-0000-0000-0000-000000000000",
    "schemaVersion": "models.meshery.io/v1beta1",
    "version": "v1.0.0",
    "name": "crossplane-provider-exoscale",
    "displayName": "Exoscale (Crossplane)",
    "status": "ignored",
    "registrant": {
      "id": "00000000-0000-0000-0000-000000000000",
      "name": "Github",
      "credential_id": "00000000-0000-0000-0000-000000000000",
      "type": "registry",
      "sub_type": "",
      "kind": "github",
      "status": "discovered",
      "user_id": "00000000-0000-0000-0000-000000000000",
      "created_at": "0001-01-01T00:00:00Z",
      "updated_at": "0001-01-01T00:00:00Z",
      "deleted_at": "0001-01-01T00:00:00Z"
    },
    "connection_id": "00000000-0000-0000-0000-000000000000",
    "category": {
      "id": "00000000-0000-0000-0000-000000000000",
      "name": "Orchestration \u0026 Management"
    },
    "subCategory": "Cloud Provider",
    "metadata": {
      "isAnnotation": false,
      "primaryColor": "#DA291C",
      "secondaryColor": "#000000",
      "shape": "circle",
      "source_uri": "git://github.com/vshn/provider-exoscale/master/package/crds",
      "styleOverrides": "",
      "svgColor": "\u003c?xml version=\"1.0\" encoding=\"UTF-8\"?\u003e\u003c!DOCTYPE svg\u003e\u003csvg xmlns=\"http://www.w3.org/2000/svg\" id=\"Layer_1\" version=\"1.1\" viewBox=\"0 0 64 55.4\" height=\"20\" width=\"20\"\u003e\n\u003cpath xmlns=\"http://www.w3.org/2000/svg\" d=\"M32,0L0,55.4h4.4L32,8v7.8L9,55.4h4.6l18.4-31.7v8l-13.8,23.7h4.6l9.2-15.8v7.8l-4.6,8h36.6L32,0Z\" fill=\"#da291c\"\u003e\u003c/path\u003e\n\u003c/svg\u003e",
      "svgComplete": "",
      "svgWhite": "\u003c?xml version=\"1.0\" encoding=\"UTF-8\"?\u003e\u003c!DOCTYPE svg\u003e\u003csvg xmlns=\"http://www.w3.org/2000/svg\" id=\"Layer_1\" version=\"1.1\" viewBox=\"0 0 64 55.4\" height=\"20\" width=\"20\"\u003e\n\u003cpath xmlns=\"http://www.w3.org/2000/svg\" d=\"M32,0L0,55.4h4.4L32,8v7.8L9,55.4h4.6l18.4-31.7v8l-13.8,23.7h4.6l9.2-15.8v7.8l-4.6,8h36.6L32,0Z\" fill=\"#ffffff\"\u003e\u003c/path\u003e\n\u003c/svg\u003e"
    },
    "model": {
      "version": "v1.0.0"
    },
    "components_count": 0,
    "relationships_count": 0,
    "components": null,
    "relationships": null
  },
  "styles": {
    "primaryColor": "#DA291C",
    "secondaryColor": "#000000",
    "shape": "circle",
    "svgColor": "\u003csvg id=\"Layer_1\" xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\" viewBox=\"0 0 64 55.4\"\u003e\n\u003cpath d=\"M32,0L0,55.4h4.4L32,8v7.8L9,55.4h4.6l18.4-31.7v8l-13.8,23.7h4.6l9.2-15.8v7.8l-4.6,8h36.6L32,0Z\" fill=\"#da291c\"/\u003e\n\u003c/svg\u003e",
    "svgComplete": "",
    "svgWhite": "\u003csvg id=\"Layer_1\" xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\" viewBox=\"0 0 64 55.4\"\u003e\n\u003cpath d=\"M32,0L0,55.4h4.4L32,8v7.8L9,55.4h4.6l18.4-31.7v8l-13.8,23.7h4.6l9.2-15.8v7.8l-4.6,8h36.6L32,0Z\" fill=\"#ffffff\"/\u003e\n\u003c/svg\u003e"
  },
  "capabilities": [
    {
      "description": "Initiate a performance test. Meshery will execute the load generation, collect metrics, and present the results.",
      "displayName": "Performance Test",
      "entityState": [
        "instance"
      ],
      "key": "",
      "kind": "action",
      "schemaVersion": "capability.meshery.io/v1alpha1",
      "status": "enabled",
      "subType": "perf-test",
      "type": "operator",
      "version": "0.7.0"
    },
    {
      "description": "Configure the workload specific setting of a component",
      "displayName": "Workload Configuration",
      "entityState": [
        "declaration"
      ],
      "key": "",
      "kind": "mutate",
      "schemaVersion": "capability.meshery.io/v1alpha1",
      "status": "enabled",
      "subType": "config",
      "type": "configuration",
      "version": "0.7.0"
    },
    {
      "description": "Configure Labels And Annotations for  the component ",
      "displayName": "Labels and Annotations Configuration",
      "entityState": [
        "declaration"
      ],
      "key": "",
      "kind": "mutate",
      "schemaVersion": "capability.meshery.io/v1alpha1",
      "status": "enabled",
      "subType": "labels-and-annotations",
      "type": "configuration",
      "version": "0.7.0"
    },
    {
      "description": "View relationships for the component",
      "displayName": "Relationships",
      "entityState": [
        "declaration",
        "instance"
      ],
      "key": "",
      "kind": "view",
      "schemaVersion": "capability.meshery.io/v1alpha1",
      "status": "enabled",
      "subType": "relationship",
      "type": "configuration",
      "version": "0.7.0"
    },
    {
      "description": "View Component Definition ",
      "displayName": "Json Schema",
      "entityState": [
        "declaration",
        "instance"
      ],
      "key": "",
      "kind": "view",
      "schemaVersion": "capability.meshery.io/v1alpha1",
      "status": "enabled",
      "subType": "definition",
      "type": "configuration",
      "version": "0.7.0"
    },
    {
      "description": "Configure the visual styles for the component",
      "displayName": "Styling",
      "entityState": [
        "declaration"
      ],
      "key": "",
      "kind": "mutate",
      "schemaVersion": "capability.meshery.io/v1alpha1",
      "status": "enabled",
      "subType": "",
      "type": "style",
      "version": "0.7.0"
    },
    {
      "description": "Change the shape of the component",
      "displayName": "Change Shape",
      "entityState": [
        "declaration"
      ],
      "key": "",
      "kind": "mutate",
      "schemaVersion": "capability.meshery.io/v1alpha1",
      "status": "enabled",
      "subType": "shape",
      "type": "style",
      "version": "0.7.0"
    },
    {
      "description": "Drag and Drop a component into a parent component in graph view",
      "displayName": "Compound Drag And Drop",
      "entityState": [
        "declaration"
      ],
      "key": "",
      "kind": "interaction",
      "schemaVersion": "capability.meshery.io/v1alpha1",
      "status": "enabled",
      "subType": "compoundDnd",
      "type": "graph",
      "version": "0.7.0"
    }
  ],
  "status": "enabled",
  "metadata": {
    "configurationUISchema": "",
    "genealogy": "",
    "instanceDetails": null,
    "isAnnotation": false,
    "isNamespaced": false,
    "published": false,
    "source_uri": "git://github.com/vshn/provider-exoscale/master/package/crds"
  },
  "configuration": null,
  "component": {
    "version": "exoscale.crossplane.io/v1",
    "kind": "ProviderConfigUsage",
    "schema": "{\n \"description\": \"A ProviderConfigUsage indicates that a resource is using a ProviderConfig.\",\n \"properties\": {\n  \"providerConfigRef\": {\n   \"description\": \"ProviderConfigReference to the provider config being used.\",\n   \"properties\": {\n    \"name\": {\n     \"description\": \"Name of the referenced object.\",\n     \"type\": \"string\"\n    },\n    \"policy\": {\n     \"description\": \"Policies for referencing.\",\n     \"properties\": {\n      \"resolution\": {\n       \"default\": \"Required\",\n       \"description\": \"Resolution specifies whether resolution of this reference is required.\\nThe default is 'Required', which means the reconcile will fail if the\\nreference cannot be resolved. 'Optional' means this reference will be\\na no-op if it cannot be resolved.\",\n       \"enum\": [\n        \"Required\",\n        \"Optional\"\n       ],\n       \"type\": \"string\"\n      },\n      \"resolve\": {\n       \"description\": \"Resolve specifies when this reference should be resolved. The default\\nis 'IfNotPresent', which will attempt to resolve the reference only when\\nthe corresponding field is not present. Use 'Always' to resolve the\\nreference on every reconcile.\",\n       \"enum\": [\n        \"Always\",\n        \"IfNotPresent\"\n       ],\n       \"type\": \"string\"\n      }\n     },\n     \"type\": \"object\"\n    }\n   },\n   \"required\": [\n    \"name\"\n   ],\n   \"type\": \"object\"\n  },\n  \"resourceRef\": {\n   \"description\": \"ResourceReference to the managed resource using the provider config.\",\n   \"properties\": {\n    \"apiVersion\": {\n     \"description\": \"APIVersion of the referenced object.\",\n     \"type\": \"string\"\n    },\n    \"kind\": {\n     \"description\": \"Kind of the referenced object.\",\n     \"type\": \"string\"\n    },\n    \"name\": {\n     \"description\": \"Name of the referenced object.\",\n     \"type\": \"string\"\n    },\n    \"uid\": {\n     \"description\": \"UID of the referenced object.\",\n     \"type\": \"string\"\n    }\n   },\n   \"required\": [\n    \"apiVersion\",\n    \"kind\",\n    \"name\"\n   ],\n   \"type\": \"object\"\n  }\n },\n \"required\": [\n  \"providerConfigRef\",\n  \"resourceRef\"\n ],\n \"title\": \"Provider Config Usage\",\n \"type\": \"object\"\n}"
  }
}