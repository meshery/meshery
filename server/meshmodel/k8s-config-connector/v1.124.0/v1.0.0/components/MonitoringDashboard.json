{
  "capabilities": [
   {
    "description": "Initiate a performance test. Meshery will execute the load generation, collect metrics, and present the results.",
    "displayName": "Performance Test",
    "entityState": [
     "instance"
    ],
    "key": "",
    "kind": "action",
    "metadata": null,
    "schemaVersion": "capability.meshery.io/v1alpha1",
    "status": "enabled",
    "subType": "perf-test",
    "type": "operator",
    "version": "0.7.0"
   },
   {
    "description": "Configure the workload specific setting of a component",
    "displayName": "Workload Configuration",
    "entityState": [
     "declaration"
    ],
    "key": "",
    "kind": "mutate",
    "metadata": null,
    "schemaVersion": "capability.meshery.io/v1alpha1",
    "status": "enabled",
    "subType": "config",
    "type": "configuration",
    "version": "0.7.0"
   },
   {
    "description": "Configure Labels And Annotations for  the component ",
    "displayName": "Labels and Annotations Configuration",
    "entityState": [
     "declaration"
    ],
    "key": "",
    "kind": "mutate",
    "metadata": null,
    "schemaVersion": "capability.meshery.io/v1alpha1",
    "status": "enabled",
    "subType": "labels-and-annotations",
    "type": "configuration",
    "version": "0.7.0"
   },
   {
    "description": "View relationships for the component",
    "displayName": "Relationships",
    "entityState": [
     "declaration",
     "instance"
    ],
    "key": "",
    "kind": "view",
    "metadata": null,
    "schemaVersion": "capability.meshery.io/v1alpha1",
    "status": "enabled",
    "subType": "relationship",
    "type": "configuration",
    "version": "0.7.0"
   },
   {
    "description": "View Component Definition ",
    "displayName": "Json Schema",
    "entityState": [
     "declaration",
     "instance"
    ],
    "key": "",
    "kind": "view",
    "metadata": null,
    "schemaVersion": "capability.meshery.io/v1alpha1",
    "status": "enabled",
    "subType": "definition",
    "type": "configuration",
    "version": "0.7.0"
   },
   {
    "description": "Configure the visual styles for the component",
    "displayName": "Styling",
    "entityState": [
     "declaration"
    ],
    "key": "",
    "kind": "mutate",
    "metadata": null,
    "schemaVersion": "capability.meshery.io/v1alpha1",
    "status": "enabled",
    "subType": "",
    "type": "style",
    "version": "0.7.0"
   },
   {
    "description": "Change the shape of the component",
    "displayName": "Change Shape",
    "entityState": [
     "declaration"
    ],
    "key": "",
    "kind": "mutate",
    "metadata": null,
    "schemaVersion": "capability.meshery.io/v1alpha1",
    "status": "enabled",
    "subType": "shape",
    "type": "style",
    "version": "0.7.0"
   },
   {
    "description": "Drag and Drop a component into a parent component in graph view",
    "displayName": "Compound Drag And Drop",
    "entityState": [
     "declaration"
    ],
    "key": "",
    "kind": "interaction",
    "metadata": null,
    "schemaVersion": "capability.meshery.io/v1alpha1",
    "status": "enabled",
    "subType": "compoundDnd",
    "type": "graph",
    "version": "0.7.0"
   }
  ],
  "component": {
   "kind": "MonitoringDashboard",
   "schema": "{\n \"description\": \"MonitoringDashboard is the Schema for the monitoring API\",\n \"properties\": {\n  \"spec\": {\n   \"properties\": {\n    \"columnLayout\": {\n     \"description\": \"The content is divided into equally spaced columns and the widgets are arranged vertically.\",\n     \"properties\": {\n      \"columns\": {\n       \"description\": \"The columns of content to display.\",\n       \"items\": {\n        \"properties\": {\n         \"weight\": {\n          \"description\": \"The relative weight of this column. The column weight is used to adjust the width of columns on the screen (relative to peers).\",\n          \"format\": \"int64\",\n          \"type\": \"integer\"\n         },\n         \"widgets\": {\n          \"description\": \"The display widgets arranged vertically in this column.\",\n          \"items\": {\n           \"properties\": {\n            \"alertChart\": {\n             \"description\": \"A chart of alert policy data.\",\n             \"properties\": {\n              \"alertPolicyRef\": {\n               \"description\": \"Required. A reference to the MonitoringAlertPolicy.\",\n               \"oneOf\": [\n                {\n                 \"not\": {\n                  \"required\": [\n                   \"external\"\n                  ]\n                 },\n                 \"required\": [\n                  \"name\"\n                 ]\n                },\n                {\n                 \"not\": {\n                  \"anyOf\": [\n                   {\n                    \"required\": [\n                     \"name\"\n                    ]\n                   },\n                   {\n                    \"required\": [\n                     \"namespace\"\n                    ]\n                   }\n                  ]\n                 },\n                 \"required\": [\n                  \"external\"\n                 ]\n                }\n               ],\n               \"properties\": {\n                \"external\": {\n                 \"description\": \"The MonitoringAlertPolicy link in the form \\\"projects/[PROJECT_ID_OR_NUMBER]/alertPolicies/[ALERT_POLICY_ID]\\\", when not managed by Config Connector.\",\n                 \"type\": \"string\"\n                },\n                \"name\": {\n                 \"description\": \"The `name` field of a `MonitoringAlertPolicy` resource.\",\n                 \"type\": \"string\"\n                },\n                \"namespace\": {\n                 \"description\": \"The `namespace` field of a `MonitoringAlertPolicy` resource.\",\n                 \"type\": \"string\"\n                }\n               },\n               \"type\": \"object\"\n              }\n             },\n             \"required\": [\n              \"alertPolicyRef\"\n             ],\n             \"type\": \"object\"\n            },\n            \"blank\": {\n             \"description\": \"A blank space.\",\n             \"type\": \"object\"\n            },\n            \"collapsibleGroup\": {\n             \"description\": \"A widget that groups the other widgets. All widgets that are within the area spanned by the grouping widget are considered member widgets.\",\n             \"properties\": {\n              \"collapsed\": {\n               \"description\": \"The collapsed state of the widget on first page load.\",\n               \"type\": \"boolean\"\n              }\n             },\n             \"type\": \"object\"\n            },\n            \"errorReportingPanel\": {\n             \"description\": \"A widget that displays a list of error groups.\",\n             \"properties\": {\n              \"projectRefs\": {\n               \"description\": \"The projects from which to gather errors.\",\n               \"items\": {\n                \"description\": \"The Project that this resource belongs to.\",\n                \"oneOf\": [\n                 {\n                  \"not\": {\n                   \"required\": [\n                    \"external\"\n                   ]\n                  },\n                  \"required\": [\n                   \"name\",\n                   \"kind\"\n                  ]\n                 },\n                 {\n                  \"not\": {\n                   \"anyOf\": [\n                    {\n                     \"required\": [\n                      \"name\"\n                     ]\n                    },\n                    {\n                     \"required\": [\n                      \"namespace\"\n                     ]\n                    },\n                    {\n                     \"required\": [\n                      \"kind\"\n                     ]\n                    }\n                   ]\n                  },\n                  \"required\": [\n                   \"external\"\n                  ]\n                 }\n                ],\n                \"properties\": {\n                 \"external\": {\n                  \"description\": \"The `projectID` field of a project, when not managed by Config Connector.\",\n                  \"type\": \"string\"\n                 },\n                 \"kind\": {\n                  \"description\": \"The kind of the Project resource; optional but must be `Project` if provided.\",\n                  \"type\": \"string\"\n                 },\n                 \"name\": {\n                  \"description\": \"The `name` field of a `Project` resource.\",\n                  \"type\": \"string\"\n                 },\n                 \"namespace\": {\n                  \"description\": \"The `namespace` field of a `Project` resource.\",\n                  \"type\": \"string\"\n                 }\n                },\n                \"type\": \"object\"\n               },\n               \"type\": \"array\"\n              },\n              \"services\": {\n               \"description\": \"An identifier of the service, such as the name of the executable, job, or Google App Engine service name. This field is expected to have a low number of values that are relatively stable over time, as opposed to `version`, which can be changed whenever new code is deployed.\",\n               \"items\": {\n                \"type\": \"string\"\n               },\n               \"type\": \"array\"\n              },\n              \"versions\": {\n               \"description\": \"Represents the source code version that the developer provided, which could represent a version label or a Git SHA-1 hash, for example. For App Engine standard environment, the version is set to the version of the app.\",\n               \"items\": {\n                \"type\": \"string\"\n               },\n               \"type\": \"array\"\n              }\n             },\n             \"type\": \"object\"\n            },\n            \"id\": {\n             \"description\": \"Optional. The widget id. Ids may be made up of alphanumerics, dashes and underscores. Widget ids are optional.\",\n             \"type\": \"string\"\n            },\n            \"incidentList\": {\n             \"description\": \"A widget that shows list of incidents.\",\n             \"properties\": {\n              \"monitoredResources\": {\n               \"description\": \"Optional. The monitored resource for which incidents are listed.\",\n               \"items\": {\n                \"properties\": {\n                 \"labels\": {\n                  \"additionalProperties\": {\n                   \"type\": \"string\"\n                  },\n                  \"description\": \"Required. Values for all of the labels listed in the associated monitored resource descriptor.\",\n                  \"type\": \"object\"\n                 },\n                 \"type\": {\n                  \"description\": \"Required. The monitored resource type. This field must match the `type` field of a [MonitoredResourceDescriptor][google.api.MonitoredResourceDescriptor] object.\",\n                  \"type\": \"string\"\n                 }\n                },\n                \"type\": \"object\"\n               },\n               \"type\": \"array\"\n              },\n              \"policyRefs\": {\n               \"description\": \"Optional. A list of alert policies to filter the incident list by.\",\n               \"items\": {\n                \"oneOf\": [\n                 {\n                  \"not\": {\n                   \"required\": [\n                    \"external\"\n                   ]\n                  },\n                  \"required\": [\n                   \"name\"\n                  ]\n                 },\n                 {\n                  \"not\": {\n                   \"anyOf\": [\n                    {\n                     \"required\": [\n                      \"name\"\n                     ]\n                    },\n                    {\n                     \"required\": [\n                      \"namespace\"\n                     ]\n                    }\n                   ]\n                  },\n                  \"required\": [\n                   \"external\"\n                  ]\n                 }\n                ],\n                \"properties\": {\n                 \"external\": {\n                  \"description\": \"The MonitoringAlertPolicy link in the form \\\"projects/[PROJECT_ID_OR_NUMBER]/alertPolicies/[ALERT_POLICY_ID]\\\", when not managed by Config Connector.\",\n                  \"type\": \"string\"\n                 },\n                 \"name\": {\n                  \"description\": \"The `name` field of a `MonitoringAlertPolicy` resource.\",\n                  \"type\": \"string\"\n                 },\n                 \"namespace\": {\n                  \"description\": \"The `namespace` field of a `MonitoringAlertPolicy` resource.\",\n                  \"type\": \"string\"\n                 }\n                },\n                \"type\": \"object\"\n               },\n               \"type\": \"array\"\n              }\n             },\n             \"type\": \"object\"\n            },\n            \"logsPanel\": {\n             \"description\": \"A widget that shows a stream of logs.\",\n             \"properties\": {\n              \"filter\": {\n               \"description\": \"A filter that chooses which log entries to return.  See [Advanced Logs Queries](https://cloud.google.com/logging/docs/view/advanced-queries).\",\n               \"type\": \"string\"\n              },\n              \"resourceNames\": {\n               \"description\": \"The names of logging resources to collect logs for.\",\n               \"items\": {\n                \"oneOf\": [\n                 {\n                  \"not\": {\n                   \"required\": [\n                    \"external\"\n                   ]\n                  },\n                  \"required\": [\n                   \"name\",\n                   \"kind\"\n                  ]\n                 },\n                 {\n                  \"not\": {\n                   \"anyOf\": [\n                    {\n                     \"required\": [\n                      \"name\"\n                     ]\n                    },\n                    {\n                     \"required\": [\n                      \"namespace\"\n                     ]\n                    },\n                    {\n                     \"required\": [\n                      \"kind\"\n                     ]\n                    }\n                   ]\n                  },\n                  \"required\": [\n                   \"external\"\n                  ]\n                 }\n                ],\n                \"properties\": {\n                 \"external\": {\n                  \"description\": \"The external name of the referenced resource\",\n                  \"type\": \"string\"\n                 },\n                 \"kind\": {\n                  \"description\": \"Kind of the referent.\",\n                  \"type\": \"string\"\n                 },\n                 \"name\": {\n                  \"description\": \"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\",\n                  \"type\": \"string\"\n                 },\n                 \"namespace\": {\n                  \"description\": \"Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/\",\n                  \"type\": \"string\"\n                 }\n                },\n                \"type\": \"object\"\n               },\n               \"type\": \"array\"\n              }\n             },\n             \"type\": \"object\"\n            },\n            \"pieChart\": {\n             \"description\": \"A widget that displays timeseries data as a pie chart.\",\n             \"properties\": {\n              \"chartType\": {\n               \"description\": \"Required. Indicates the visualization type for the PieChart.\",\n               \"type\": \"string\"\n              },\n              \"dataSets\": {\n               \"description\": \"Required. The queries for the chart's data.\",\n               \"items\": {\n                \"properties\": {\n                 \"minAlignmentPeriod\": {\n                  \"description\": \"Optional. The lower bound on data point frequency for this data set.\",\n                  \"type\": \"string\"\n                 },\n                 \"sliceNameTemplate\": {\n                  \"description\": \"Optional. A template for the name of the slice.\",\n                  \"type\": \"string\"\n                 },\n                 \"timeSeriesQuery\": {\n                  \"description\": \"Required. The query for the PieChart. See, `google.monitoring.dashboard.v1.TimeSeriesQuery`.\",\n                  \"properties\": {\n                   \"outputFullDuration\": {\n                    \"description\": \"Optional. If set, Cloud Monitoring will treat the full query duration as the alignment period so that there will be only 1 output value.\",\n                    \"type\": \"boolean\"\n                   },\n                   \"prometheusQuery\": {\n                    \"description\": \"A query used to fetch time series with PromQL.\",\n                    \"type\": \"string\"\n                   },\n                   \"timeSeriesFilter\": {\n                    \"description\": \"Filter parameters to fetch time series.\",\n                    \"properties\": {\n                     \"aggregation\": {\n                      \"description\": \"By default, the raw time series data is returned. Use this field to combine multiple time series for different views of the data.\",\n                      \"properties\": {\n                       \"alignmentPeriod\": {\n                        \"description\": \"The `alignment_period` specifies a time interval, in seconds, that is used to divide the data in all the [time series][google.monitoring.v3.TimeSeries] into consistent blocks of time. This will be done before the per-series aligner can be applied to the data.\",\n                        \"type\": \"string\"\n                       },\n                       \"crossSeriesReducer\": {\n                        \"description\": \"The reduction operation to be used to combine time series into a single time series, where the value of each data point in the resulting series is a function of all the already aligned values in the input time series.\",\n                        \"type\": \"string\"\n                       },\n                       \"groupByFields\": {\n                        \"description\": \"The set of fields to preserve when `cross_series_reducer` is specified.\",\n                        \"items\": {\n                         \"type\": \"string\"\n                        },\n                        \"type\": \"array\"\n                       },\n                       \"perSeriesAligner\": {\n                        \"description\": \"An `Aligner` describes how to bring the data points in a single time series into temporal alignment. Except for `ALIGN_NONE`, all alignments cause all the data points in an `alignment_period` to be mathematically grouped together, resulting in a single data point for each `alignment_period` with end timestamp at the end of the period.\",\n                        \"type\": \"string\"\n                       }\n                      },\n                      \"type\": \"object\"\n                     },\n                     \"filter\": {\n                      \"description\": \"Required. The [monitoring filter](https://cloud.google.com/monitoring/api/v3/filters) that identifies the metric types, resources, and projects to query.\",\n                      \"type\": \"string\"\n                     },\n                     \"pickTimeSeriesFilter\": {\n                      \"description\": \"Ranking based time series filter.\",\n                      \"properties\": {\n                       \"direction\": {\n                        \"description\": \"How to use the ranking to select time series that pass through the filter.\",\n                        \"type\": \"string\"\n                       },\n                       \"numTimeSeries\": {\n                        \"description\": \"How many time series to allow to pass through the filter.\",\n                        \"format\": \"int32\",\n                        \"type\": \"integer\"\n                       },\n                       \"rankingMethod\": {\n                        \"description\": \"`ranking_method` is applied to each time series independently to produce the value which will be used to compare the time series to other time series.\",\n                        \"type\": \"string\"\n                       }\n                      },\n                      \"type\": \"object\"\n                     },\n                     \"secondaryAggregation\": {\n                      \"description\": \"Apply a second aggregation after `aggregation` is applied.\",\n                      \"properties\": {\n                       \"alignmentPeriod\": {\n                        \"description\": \"The `alignment_period` specifies a time interval, in seconds, that is used to divide the data in all the [time series][google.monitoring.v3.TimeSeries] into consistent blocks of time. This will be done before the per-series aligner can be applied to the data.\",\n                        \"type\": \"string\"\n                       },\n                       \"crossSeriesReducer\": {\n                        \"description\": \"The reduction operation to be used to combine time series into a single time series, where the value of each data point in the resulting series is a function of all the already aligned values in the input time series.\",\n                        \"type\": \"string\"\n                       },\n                       \"groupByFields\": {\n                        \"description\": \"The set of fields to preserve when `cross_series_reducer` is specified.\",\n                        \"items\": {\n                         \"type\": \"string\"\n                        },\n                        \"type\": \"array\"\n                       },\n                       \"perSeriesAligner\": {\n                        \"description\": \"An `Aligner` describes how to bring the data points in a single time series into temporal alignment. Except for `ALIGN_NONE`, all alignments cause all the data points in an `alignment_period` to be mathematically grouped together, resulting in a single data point for each `alignment_period` with end timestamp at the end of the period.\",\n                        \"type\": \"string\"\n                       }\n                      },\n                      \"type\": \"object\"\n                     }\n                    },\n                    \"required\": [\n                     \"filter\"\n                    ],\n                    \"type\": \"object\"\n                   },\n                   \"timeSeriesFilterRatio\": {\n                    \"description\": \"Parameters to fetch a ratio between two time series filters.\",\n                    \"properties\": {\n                     \"denominator\": {\n                      \"description\": \"The denominator of the ratio.\",\n                      \"properties\": {\n                       \"aggregation\": {\n                        \"description\": \"By default, the raw time series data is returned.\",\n                        \"properties\": {\n                         \"alignmentPeriod\": {\n                          \"description\": \"The `alignment_period` specifies a time interval, in seconds, that is used to divide the data in all the [time series][google.monitoring.v3.TimeSeries] into consistent blocks of time. This will be done before the per-series aligner can be applied to the data.\",\n                          \"type\": \"string\"\n                         },\n                         \"crossSeriesReducer\": {\n                          \"description\": \"The reduction operation to be used to combine time series into a single time series, where the value of each data point in the resulting series is a function of all the already aligned values in the input time series.\",\n                          \"type\": \"string\"\n                         },\n                         \"groupByFields\": {\n                          \"description\": \"The set of fields to preserve when `cross_series_reducer` is specified.\",\n                          \"items\": {\n                           \"type\": \"string\"\n                          },\n                          \"type\": \"array\"\n                         },\n                         \"perSeriesAligner\": {\n                          \"description\": \"An `Aligner` describes how to bring the data points in a single time series into temporal alignment. Except for `ALIGN_NONE`, all alignments cause all the data points in an `alignment_period` to be mathematically grouped together, resulting in a single data point for each `alignment_period` with end timestamp at the end of the period.\",\n                          \"type\": \"string\"\n                         }\n                        },\n                        \"type\": \"object\"\n                       },\n                       \"filter\": {\n                        \"description\": \"The [monitoring filter](https://cloud.google.com/monitoring/api/v3/filters) that identifies the metric types, resources, and projects to query.\",\n                        \"type\": \"string\"\n                       }\n                      },\n                      \"required\": [\n                       \"filter\"\n                      ],\n                      \"type\": \"object\"\n                     },\n                     \"numerator\": {\n                      \"description\": \"The numerator of the ratio.\",\n                      \"properties\": {\n                       \"aggregation\": {\n                        \"description\": \"By default, the raw time series data is returned.\",\n                        \"properties\": {\n                         \"alignmentPeriod\": {\n                          \"description\": \"The `alignment_period` specifies a time interval, in seconds, that is used to divide the data in all the [time series][google.monitoring.v3.TimeSeries] into consistent blocks of time. This will be done before the per-series aligner can be applied to the data.\",\n                          \"type\": \"string\"\n                         },\n                         \"crossSeriesReducer\": {\n                          \"description\": \"The reduction operation to be used to combine time series into a single time series, where the value of each data point in the resulting series is a function of all the already aligned values in the input time series.\",\n                          \"type\": \"string\"\n                         },\n                         \"groupByFields\": {\n                          \"description\": \"The set of fields to preserve when `cross_series_reducer` is specified.\",\n                          \"items\": {\n                           \"type\": \"string\"\n                          },\n                          \"type\": \"array\"\n                         },\n                         \"perSeriesAligner\": {\n                          \"description\": \"An `Aligner` describes how to bring the data points in a single time series into temporal alignment. Except for `ALIGN_NONE`, all alignments cause all the data points in an `alignment_period` to be mathematically grouped together, resulting in a single data point for each `alignment_period` with end timestamp at the end of the period.\",\n                          \"type\": \"string\"\n                         }\n                        },\n                        \"type\": \"object\"\n                       },\n                       \"filter\": {\n                        \"description\": \"The [monitoring filter](https://cloud.google.com/monitoring/api/v3/filters) that identifies the metric types, resources, and projects to query.\",\n                        \"type\": \"string\"\n                       }\n                      },\n                      \"required\": [\n                       \"filter\"\n                      ],\n                      \"type\": \"object\"\n                     },\n                     \"pickTimeSeriesFilter\": {\n                      \"description\": \"Ranking based time series filter.\",\n                      \"properties\": {\n                       \"direction\": {\n                        \"description\": \"How to use the ranking to select time series that pass through the filter.\",\n                        \"type\": \"string\"\n                       },\n                       \"numTimeSeries\": {\n                        \"description\": \"How many time series to allow to pass through the filter.\",\n                        \"format\": \"int32\",\n                        \"type\": \"integer\"\n                       },\n                       \"rankingMethod\": {\n                        \"description\": \"`ranking_method` is applied to each time series independently to produce the value which will be used to compare the time series to other time series.\",\n                        \"type\": \"string\"\n                       }\n                      },\n                      \"type\": \"object\"\n                     },\n                     \"secondaryAggregation\": {\n                      \"description\": \"Apply a second aggregation after the ratio is computed.\",\n                      \"properties\": {\n                       \"alignmentPeriod\": {\n                        \"description\": \"The `alignment_period` specifies a time interval, in seconds, that is used to divide the data in all the [time series][google.monitoring.v3.TimeSeries] into consistent blocks of time. This will be done before the per-series aligner can be applied to the data.\",\n                        \"type\": \"string\"\n                       },\n                       \"crossSeriesReducer\": {\n                        \"description\": \"The reduction operation to be used to combine time series into a single time series, where the value of each data point in the resulting series is a function of all the already aligned values in the input time series.\",\n                        \"type\": \"string\"\n                       },\n                       \"groupByFields\": {\n                        \"description\": \"The set of fields to preserve when `cross_series_reducer` is specified.\",\n                        \"items\": {\n                         \"type\": \"string\"\n                        },\n                        \"type\": \"array\"\n                       },\n                       \"perSeriesAligner\": {\n                        \"description\": \"An `Aligner` describes how to bring the data points in a single time series into temporal alignment. Except for `ALIGN_NONE`, all alignments cause all the data points in an `alignment_period` to be mathematically grouped together, resulting in a single data point for each `alignment_period` with end timestamp at the end of the period.\",\n                        \"type\": \"string\"\n                       }\n                      },\n                      \"type\": \"object\"\n                     }\n                    },\n                    \"type\": \"object\"\n                   },\n                   \"timeSeriesQueryLanguage\": {\n                    \"description\": \"A query used to fetch time series with MQL.\",\n                    \"type\": \"string\"\n                   },\n                   \"unitOverride\": {\n                    \"description\": \"The unit of data contained in fetched time series. If non-empty, this unit will override any unit that accompanies fetched data. The format is the same as the [`unit`](https://cloud.google.com/monitoring/api/ref_v3/rest/v3/projects.metricDescriptors) field in `MetricDescriptor`.\",\n                    \"type\": \"string\"\n                   }\n                  },\n                  \"type\": \"object\"\n                 }\n                },\n                \"required\": [\n                 \"timeSeriesQuery\"\n                ],\n                \"type\": \"object\"\n               },\n               \"type\": \"array\"\n              },\n              \"showLabels\": {\n               \"description\": \"Optional. Indicates whether or not the pie chart should show slices' labels\",\n               \"type\": \"boolean\"\n              }\n             },\n             \"required\": [\n              \"chartType\",\n              \"dataSets\"\n             ],\n             \"type\": \"object\"\n            },\n            \"scorecard\": {\n             \"description\": \"A scorecard summarizing time series data.\",\n             \"properties\": {\n              \"blankView\": {\n               \"description\": \"Will cause the `Scorecard` to show only the value, with no indicator to its value relative to its thresholds.\",\n               \"type\": \"object\"\n              },\n              \"gaugeView\": {\n               \"description\": \"Will cause the scorecard to show a gauge chart.\",\n               \"properties\": {\n                \"lowerBound\": {\n                 \"description\": \"The lower bound for this gauge chart. The value of the chart should always be greater than or equal to this.\",\n                 \"format\": \"double\",\n                 \"type\": \"number\"\n                },\n                \"upperBound\": {\n                 \"description\": \"The upper bound for this gauge chart. The value of the chart should always be less than or equal to this.\",\n                 \"format\": \"double\",\n                 \"type\": \"number\"\n                }\n               },\n               \"type\": \"object\"\n              },\n              \"sparkChartView\": {\n               \"description\": \"Will cause the scorecard to show a spark chart.\",\n               \"properties\": {\n                \"minAlignmentPeriod\": {\n                 \"description\": \"The lower bound on data point frequency in the chart implemented by specifying the minimum alignment period to use in a time series query.\",\n                 \"type\": \"string\"\n                },\n                \"sparkChartType\": {\n                 \"description\": \"Required. The type of sparkchart to show in this chartView.\",\n                 \"type\": \"string\"\n                }\n               },\n               \"required\": [\n                \"sparkChartType\"\n               ],\n               \"type\": \"object\"\n              },\n              \"thresholds\": {\n               \"description\": \"The thresholds used to determine the state of the scorecard given the time series' current value.\",\n               \"items\": {\n                \"properties\": {\n                 \"color\": {\n                  \"description\": \"The state color for this threshold. Color is not allowed in a XyChart.\",\n                  \"type\": \"string\"\n                 },\n                 \"direction\": {\n                  \"description\": \"The direction for the current threshold. Direction is not allowed in a XyChart.\",\n                  \"type\": \"string\"\n                 },\n                 \"label\": {\n                  \"description\": \"A label for the threshold.\",\n                  \"type\": \"string\"\n                 },\n                 \"targetAxis\": {\n                  \"description\": \"The target axis to use for plotting the threshold. Target axis is not allowed in a Scorecard.\",\n                  \"type\": \"string\"\n                 },\n                 \"value\": {\n                  \"description\": \"The value of the threshold. The value should be defined in the native scale of the metric.\",\n                  \"format\": \"double\",\n                  \"type\": \"number\"\n                 }\n                },\n                \"type\": \"object\"\n               },\n               \"type\": \"array\"\n              },\n              \"timeSeriesQuery\": {\n               \"description\": \"Required. Fields for querying time series data from the Stackdriver metrics API.\",\n               \"properties\": {\n                \"outputFullDuration\": {\n                 \"description\": \"Optional. If set, Cloud Monitoring will treat the full query duration as the alignment period so that there will be only 1 output value.\",\n                 \"type\": \"boolean\"\n                },\n                \"prometheusQuery\": {\n                 \"description\": \"A query used to fetch time series with PromQL.\",\n                 \"type\": \"string\"\n                },\n                \"timeSeriesFilter\": {\n                 \"description\": \"Filter parameters to fetch time series.\",\n                 \"properties\": {\n                  \"aggregation\": {\n                   \"description\": \"By default, the raw time series data is returned. Use this field to combine multiple time series for different views of the data.\",\n                   \"properties\": {\n                    \"alignmentPeriod\": {\n                     \"description\": \"The `alignment_period` specifies a time interval, in seconds, that is used to divide the data in all the [time series][google.monitoring.v3.TimeSeries] into consistent blocks of time. This will be done before the per-series aligner can be applied to the data.\",\n                     \"type\": \"string\"\n                    },\n                    \"crossSeriesReducer\": {\n                     \"description\": \"The reduction operation to be used to combine time series into a single time series, where the value of each data point in the resulting series is a function of all the already aligned values in the input time series.\",\n                     \"type\": \"string\"\n                    },\n                    \"groupByFields\": {\n                     \"description\": \"The set of fields to preserve when `cross_series_reducer` is specified.\",\n                     \"items\": {\n                      \"type\": \"string\"\n                     },\n                     \"type\": \"array\"\n                    },\n                    \"perSeriesAligner\": {\n                     \"description\": \"An `Aligner` describes how to bring the data points in a single time series into temporal alignment. Except for `ALIGN_NONE`, all alignments cause all the data points in an `alignment_period` to be mathematically grouped together, resulting in a single data point for each `alignment_period` with end timestamp at the end of the period.\",\n                     \"type\": \"string\"\n                    }\n                   },\n                   \"type\": \"object\"\n                  },\n                  \"filter\": {\n                   \"description\": \"Required. The [monitoring filter](https://cloud.google.com/monitoring/api/v3/filters) that identifies the metric types, resources, and projects to query.\",\n                   \"type\": \"string\"\n                  },\n                  \"pickTimeSeriesFilter\": {\n                   \"description\": \"Ranking based time series filter.\",\n                   \"properties\": {\n                    \"direction\": {\n                     \"description\": \"How to use the ranking to select time series that pass through the filter.\",\n                     \"type\": \"string\"\n                    },\n                    \"numTimeSeries\": {\n                     \"description\": \"How many time series to allow to pass through the filter.\",\n                     \"format\": \"int32\",\n                     \"type\": \"integer\"\n                    },\n                    \"rankingMethod\": {\n                     \"description\": \"`ranking_method` is applied to each time series independently to produce the value which will be used to compare the time series to other time series.\",\n                     \"type\": \"string\"\n                    }\n                   },\n                   \"type\": \"object\"\n                  },\n                  \"secondaryAggregation\": {\n                   \"description\": \"Apply a second aggregation after `aggregation` is applied.\",\n                   \"properties\": {\n                    \"alignmentPeriod\": {\n                     \"description\": \"The `alignment_period` specifies a time interval, in seconds, that is used to divide the data in all the [time series][google.monitoring.v3.TimeSeries] into consistent blocks of time. This will be done before the per-series aligner can be applied to the data.\",\n                     \"type\": \"string\"\n                    },\n                    \"crossSeriesReducer\": {\n                     \"description\": \"The reduction operation to be used to combine time series into a single time series, where the value of each data point in the resulting series is a function of all the already aligned values in the input time series.\",\n                     \"type\": \"string\"\n                    },\n                    \"groupByFields\": {\n                     \"description\": \"The set of fields to preserve when `cross_series_reducer` is specified.\",\n                     \"items\": {\n                      \"type\": \"string\"\n                     },\n                     \"type\": \"array\"\n                    },\n                    \"perSeriesAligner\": {\n                     \"description\": \"An `Aligner` describes how to bring the data points in a single time series into temporal alignment. Except for `ALIGN_NONE`, all alignments cause all the data points in an `alignment_period` to be mathematically grouped together, resulting in a single data point for each `alignment_period` with end timestamp at the end of the period.\",\n                     \"type\": \"string\"\n                    }\n                   },\n                   \"type\": \"object\"\n                  }\n                 },\n                 \"required\": [\n                  \"filter\"\n                 ],\n                 \"type\": \"object\"\n                },\n                \"timeSeriesFilterRatio\": {\n                 \"description\": \"Parameters to fetch a ratio between two time series filters.\",\n                 \"properties\": {\n                  \"denominator\": {\n                   \"description\": \"The denominator of the ratio.\",\n                   \"properties\": {\n                    \"aggregation\": {\n                     \"description\": \"By default, the raw time series data is returned.\",\n                     \"properties\": {\n                      \"alignmentPeriod\": {\n                       \"description\": \"The `alignment_period` specifies a time interval, in seconds, that is used to divide the data in all the [time series][google.monitoring.v3.TimeSeries] into consistent blocks of time. This will be done before the per-series aligner can be applied to the data.\",\n                       \"type\": \"string\"\n                      },\n                      \"crossSeriesReducer\": {\n                       \"description\": \"The reduction operation to be used to combine time series into a single time series, where the value of each data point in the resulting series is a function of all the already aligned values in the input time series.\",\n                       \"type\": \"string\"\n                      },\n                      \"groupByFields\": {\n                       \"description\": \"The set of fields to preserve when `cross_series_reducer` is specified.\",\n                       \"items\": {\n                        \"type\": \"string\"\n                       },\n                       \"type\": \"array\"\n                      },\n                      \"perSeriesAligner\": {\n                       \"description\": \"An `Aligner` describes how to bring the data points in a single time series into temporal alignment. Except for `ALIGN_NONE`, all alignments cause all the data points in an `alignment_period` to be mathematically grouped together, resulting in a single data point for each `alignment_period` with end timestamp at the end of the period.\",\n                       \"type\": \"string\"\n                      }\n                     },\n                     \"type\": \"object\"\n                    },\n                    \"filter\": {\n                     \"description\": \"The [monitoring filter](https://cloud.google.com/monitoring/api/v3/filters) that identifies the metric types, resources, and projects to query.\",\n                     \"type\": \"string\"\n                    }\n                   },\n                   \"required\": [\n                    \"filter\"\n                   ],\n                   \"type\": \"object\"\n                  },\n                  \"numerator\": {\n                   \"description\": \"The numerator of the ratio.\",\n                   \"properties\": {\n                    \"aggregation\": {\n                     \"description\": \"By default, the raw time series data is returned.\",\n                     \"properties\": {\n                      \"alignmentPeriod\": {\n                       \"description\": \"The `alignment_period` specifies a time interval, in seconds, that is used to divide the data in all the [time series][google.monitoring.v3.TimeSeries] into consistent blocks of time. This will be done before the per-series aligner can be applied to the data.\",\n                       \"type\": \"string\"\n                      },\n                      \"crossSeriesReducer\": {\n                       \"description\": \"The reduction operation to be used to combine time series into a single time series, where the value of each data point in the resulting series is a function of all the already aligned values in the input time series.\",\n                       \"type\": \"string\"\n                      },\n                      \"groupByFields\": {\n                       \"description\": \"The set of fields to preserve when `cross_series_reducer` is specified.\",\n                       \"items\": {\n                        \"type\": \"string\"\n                       },\n                       \"type\": \"array\"\n                      },\n                      \"perSeriesAligner\": {\n                       \"description\": \"An `Aligner` describes how to bring the data points in a single time series into temporal alignment. Except for `ALIGN_NONE`, all alignments cause all the data points in an `alignment_period` to be mathematically grouped together, resulting in a single data point for each `alignment_period` with end timestamp at the end of the period.\",\n                       \"type\": \"string\"\n                      }\n                     },\n                     \"type\": \"object\"\n                    },\n                    \"filter\": {\n                     \"description\": \"The [monitoring filter](https://cloud.google.com/monitoring/api/v3/filters) that identifies the metric types, resources, and projects to query.\",\n                     \"type\": \"string\"\n                    }\n                   },\n                   \"required\": [\n                    \"filter\"\n                   ],\n                   \"type\": \"object\"\n                  },\n                  \"pickTimeSeriesFilter\": {\n                   \"description\": \"Ranking based time series filter.\",\n                   \"properties\": {\n                    \"direction\": {\n                     \"description\": \"How to use the ranking to select time series that pass through the filter.\",\n                     \"type\": \"string\"\n                    },\n                    \"numTimeSeries\": {\n                     \"description\": \"How many time series to allow to pass through the filter.\",\n                     \"format\": \"int32\",\n                     \"type\": \"integer\"\n                    },\n                    \"rankingMethod\": {\n                     \"description\": \"`ranking_method` is applied to each time series independently to produce the value which will be used to compare the time series to other time series.\",\n                     \"type\": \"string\"\n                    }\n                   },\n                   \"type\": \"object\"\n                  },\n                  \"secondaryAggregation\": {\n                   \"description\": \"Apply a second aggregation after the ratio is computed.\",\n                   \"properties\": {\n                    \"alignmentPeriod\": {\n                     \"description\": \"The `alignment_period` specifies a time interval, in seconds, that is used to divide the data in all the [time series][google.monitoring.v3.TimeSeries] into consistent blocks of time. This will be done before the per-series aligner can be applied to the data.\",\n                     \"type\": \"string\"\n                    },\n                    \"crossSeriesReducer\": {\n                     \"description\": \"The reduction operation to be used to combine time series into a single time series, where the value of each data point in the resulting series is a function of all the already aligned values in the input time series.\",\n                     \"type\": \"string\"\n                    },\n                    \"groupByFields\": {\n                     \"description\": \"The set of fields to preserve when `cross_series_reducer` is specified.\",\n                     \"items\": {\n                      \"type\": \"string\"\n                     },\n                     \"type\": \"array\"\n                    },\n                    \"perSeriesAligner\": {\n                     \"description\": \"An `Aligner` describes how to bring the data points in a single time series into temporal alignment. Except for `ALIGN_NONE`, all alignments cause all the data points in an `alignment_period` to be mathematically grouped together, resulting in a single data point for each `alignment_period` with end timestamp at the end of the period.\",\n                     \"type\": \"string\"\n                    }\n                   },\n                   \"type\": \"object\"\n                  }\n                 },\n                 \"type\": \"object\"\n                },\n                \"timeSeriesQueryLanguage\": {\n                 \"description\": \"A query used to fetch time series with MQL.\",\n                 \"type\": \"string\"\n                },\n                \"unitOverride\": {\n                 \"description\": \"The unit of data contained in fetched time series. If non-empty, this unit will override any unit that accompanies fetched data. The format is the same as the [`unit`](https://cloud.google.com/monitoring/api/ref_v3/rest/v3/projects.metricDescriptors) field in `MetricDescriptor`.\",\n                 \"type\": \"string\"\n                }\n               },\n               \"type\": \"object\"\n              }\n             },\n             \"required\": [\n              \"timeSeriesQuery\"\n             ],\n             \"type\": \"object\"\n            },\n            \"sectionHeader\": {\n             \"description\": \"A widget that defines a section header for easier navigation of the dashboard.\",\n             \"properties\": {\n              \"dividerBelow\": {\n               \"description\": \"Whether to insert a divider below the section in the table of contents\",\n               \"type\": \"boolean\"\n              },\n              \"subtitle\": {\n               \"description\": \"The subtitle of the section\",\n               \"type\": \"string\"\n              }\n             },\n             \"type\": \"object\"\n            },\n            \"singleViewGroup\": {\n             \"description\": \"A widget that groups the other widgets by using a dropdown menu.\",\n             \"type\": \"object\"\n            },\n            \"text\": {\n             \"description\": \"A raw string or markdown displaying textual content.\",\n             \"properties\": {\n              \"content\": {\n               \"description\": \"The text content to be displayed.\",\n               \"type\": \"string\"\n              },\n              \"format\": {\n               \"description\": \"How the text content is formatted.\",\n               \"type\": \"string\"\n              },\n              \"style\": {\n               \"description\": \"How the text is styled\",\n               \"properties\": {\n                \"backgroundColor\": {\n                 \"description\": \"The background color as a hex string. \\\"#RRGGBB\\\" or \\\"#RGB\\\"\",\n                 \"type\": \"string\"\n                },\n                \"fontSize\": {\n                 \"description\": \"Font sizes for both the title and content. The title will still be larger relative to the content.\",\n                 \"type\": \"string\"\n                },\n                \"horizontalAlignment\": {\n                 \"description\": \"The horizontal alignment of both the title and content\",\n                 \"type\": \"string\"\n                },\n                \"padding\": {\n                 \"description\": \"The amount of padding around the widget\",\n                 \"type\": \"string\"\n                },\n                \"pointerLocation\": {\n                 \"description\": \"The pointer location for this widget (also sometimes called a \\\"tail\\\")\",\n                 \"type\": \"string\"\n                },\n                \"textColor\": {\n                 \"description\": \"The text color as a hex string. \\\"#RRGGBB\\\" or \\\"#RGB\\\"\",\n                 \"type\": \"string\"\n                },\n                \"verticalAlignment\": {\n                 \"description\": \"The vertical alignment of both the title and content\",\n                 \"type\": \"string\"\n                }\n               },\n               \"type\": \"object\"\n              }\n             },\n             \"type\": \"object\"\n            },\n            \"timeSeriesTable\": {\n             \"description\": \"A widget that displays time series data in a tabular format.\",\n             \"properties\": {\n              \"columnSettings\": {\n               \"description\": \"Optional. The list of the persistent column settings for the table.\",\n               \"items\": {\n                \"properties\": {\n                 \"column\": {\n                  \"description\": \"Required. The id of the column.\",\n                  \"type\": \"string\"\n                 },\n                 \"visible\": {\n                  \"description\": \"Required. Whether the column should be visible on page load.\",\n                  \"type\": \"boolean\"\n                 }\n                },\n                \"required\": [\n                 \"column\",\n                 \"visible\"\n                ],\n                \"type\": \"object\"\n               },\n               \"type\": \"array\"\n              },\n              \"dataSets\": {\n               \"description\": \"Required. The data displayed in this table.\",\n               \"items\": {\n                \"properties\": {\n                 \"minAlignmentPeriod\": {\n                  \"description\": \"Optional. The lower bound on data point frequency for this data set.\",\n                  \"type\": \"string\"\n                 },\n                 \"tableDisplayOptions\": {\n                  \"description\": \"Optional. Table display options for configuring how the table is rendered.\",\n                  \"properties\": {\n                   \"shownColumns\": {\n                    \"description\": \"Optional. This field is unused and has been replaced by TimeSeriesTable.column_settings\",\n                    \"items\": {\n                     \"type\": \"string\"\n                    },\n                    \"type\": \"array\"\n                   }\n                  },\n                  \"type\": \"object\"\n                 },\n                 \"tableTemplate\": {\n                  \"description\": \"Optional. A template string for naming `TimeSeries` in the resulting data set.\",\n                  \"type\": \"string\"\n                 },\n                 \"timeSeriesQuery\": {\n                  \"description\": \"Required. Fields for querying time series data from the Stackdriver metrics API.\",\n                  \"properties\": {\n                   \"outputFullDuration\": {\n                    \"description\": \"Optional. If set, Cloud Monitoring will treat the full query duration as the alignment period so that there will be only 1 output value.\",\n                    \"type\": \"boolean\"\n                   },\n                   \"prometheusQuery\": {\n                    \"description\": \"A query used to fetch time series with PromQL.\",\n                    \"type\": \"string\"\n                   },\n                   \"timeSeriesFilter\": {\n                    \"description\": \"Filter parameters to fetch time series.\",\n                    \"properties\": {\n                     \"aggregation\": {\n                      \"description\": \"By default, the raw time series data is returned. Use this field to combine multiple time series for different views of the data.\",\n                      \"properties\": {\n                       \"alignmentPeriod\": {\n                        \"description\": \"The `alignment_period` specifies a time interval, in seconds, that is used to divide the data in all the [time series][google.monitoring.v3.TimeSeries] into consistent blocks of time. This will be done before the per-series aligner can be applied to the data.\",\n                        \"type\": \"string\"\n                       },\n                       \"crossSeriesReducer\": {\n                        \"description\": \"The reduction operation to be used to combine time series into a single time series, where the value of each data point in the resulting series is a function of all the already aligned values in the input time series.\",\n                        \"type\": \"string\"\n                       },\n                       \"groupByFields\": {\n                        \"description\": \"The set of fields to preserve when `cross_series_reducer` is specified.\",\n                        \"items\": {\n                         \"type\": \"string\"\n                        },\n                        \"type\": \"array\"\n                       },\n                       \"perSeriesAligner\": {\n                        \"description\": \"An `Aligner` describes how to bring the data points in a single time series into temporal alignment. Except for `ALIGN_NONE`, all alignments cause all the data points in an `alignment_period` to be mathematically grouped together, resulting in a single data point for each `alignment_period` with end timestamp at the end of the period.\",\n                        \"type\": \"string\"\n                       }\n                      },\n                      \"type\": \"object\"\n                     },\n                     \"filter\": {\n                      \"description\": \"Required. The [monitoring filter](https://cloud.google.com/monitoring/api/v3/filters) that identifies the metric types, resources, and projects to query.\",\n                      \"type\": \"string\"\n                     },\n                     \"pickTimeSeriesFilter\": {\n                      \"description\": \"Ranking based time series filter.\",\n                      \"properties\": {\n                       \"direction\": {\n                        \"description\": \"How to use the ranking to select time series that pass through the filter.\",\n                        \"type\": \"string\"\n                       },\n                       \"numTimeSeries\": {\n                        \"description\": \"How many time series to allow to pass through the filter.\",\n                        \"format\": \"int32\",\n                        \"type\": \"integer\"\n                       },\n                       \"rankingMethod\": {\n                        \"description\": \"`ranking_method` is applied to each time series independently to produce the value which will be used to compare the time series to other time series.\",\n                        \"type\": \"string\"\n                       }\n                      },\n                      \"type\": \"object\"\n                     },\n                     \"secondaryAggregation\": {\n                      \"description\": \"Apply a second aggregation after `aggregation` is applied.\",\n                      \"properties\": {\n                       \"alignmentPeriod\": {\n                        \"description\": \"The `alignment_period` specifies a time interval, in seconds, that is used to divide the data in all the [time series][google.monitoring.v3.TimeSeries] into consistent blocks of time. This will be done before the per-series aligner can be applied to the data.\",\n                        \"type\": \"string\"\n                       },\n                       \"crossSeriesReducer\": {\n                        \"description\": \"The reduction operation to be used to combine time series into a single time series, where the value of each data point in the resulting series is a function of all the already aligned values in the input time series.\",\n                        \"type\": \"string\"\n                       },\n                       \"groupByFields\": {\n                        \"description\": \"The set of fields to preserve when `cross_series_reducer` is specified.\",\n                        \"items\": {\n                         \"type\": \"string\"\n                        },\n                        \"type\": \"array\"\n                       },\n                       \"perSeriesAligner\": {\n                        \"description\": \"An `Aligner` describes how to bring the data points in a single time series into temporal alignment. Except for `ALIGN_NONE`, all alignments cause all the data points in an `alignment_period` to be mathematically grouped together, resulting in a single data point for each `alignment_period` with end timestamp at the end of the period.\",\n                        \"type\": \"string\"\n                       }\n                      },\n                      \"type\": \"object\"\n                     }\n                    },\n                    \"required\": [\n                     \"filter\"\n                    ],\n                    \"type\": \"object\"\n                   },\n                   \"timeSeriesFilterRatio\": {\n                    \"description\": \"Parameters to fetch a ratio between two time series filters.\",\n                    \"properties\": {\n                     \"denominator\": {\n                      \"description\": \"The denominator of the ratio.\",\n                      \"properties\": {\n                       \"aggregation\": {\n                        \"description\": \"By default, the raw time series data is returned.\",\n                        \"properties\": {\n                         \"alignmentPeriod\": {\n                          \"description\": \"The `alignment_period` specifies a time interval, in seconds, that is used to divide the data in all the [time series][google.monitoring.v3.TimeSeries] into consistent blocks of time. This will be done before the per-series aligner can be applied to the data.\",\n                          \"type\": \"string\"\n                         },\n                         \"crossSeriesReducer\": {\n                          \"description\": \"The reduction operation to be used to combine time series into a single time series, where the value of each data point in the resulting series is a function of all the already aligned values in the input time series.\",\n                          \"type\": \"string\"\n                         },\n                         \"groupByFields\": {\n                          \"description\": \"The set of fields to preserve when `cross_series_reducer` is specified.\",\n                          \"items\": {\n                           \"type\": \"string\"\n                          },\n                          \"type\": \"array\"\n                         },\n                         \"perSeriesAligner\": {\n                          \"description\": \"An `Aligner` describes how to bring the data points in a single time series into temporal alignment. Except for `ALIGN_NONE`, all alignments cause all the data points in an `alignment_period` to be mathematically grouped together, resulting in a single data point for each `alignment_period` with end timestamp at the end of the period.\",\n                          \"type\": \"string\"\n                         }\n                        },\n                        \"type\": \"object\"\n                       },\n                       \"filter\": {\n                        \"description\": \"The [monitoring filter](https://cloud.google.com/monitoring/api/v3/filters) that identifies the metric types, resources, and projects to query.\",\n                        \"type\": \"string\"\n                       }\n                      },\n                      \"required\": [\n                       \"filter\"\n                      ],\n                      \"type\": \"object\"\n                     },\n                     \"numerator\": {\n                      \"description\": \"The numerator of the ratio.\",\n                      \"properties\": {\n                       \"aggregation\": {\n                        \"description\": \"By default, the raw time series data is returned.\",\n                        \"properties\": {\n                         \"alignmentPeriod\": {\n                          \"description\": \"The `alignment_period` specifies a time interval, in seconds, that is used to divide the data in all the [time series][google.monitoring.v3.TimeSeries] into consistent blocks of time. This will be done before the per-series aligner can be applied to the data.\",\n                          \"type\": \"string\"\n                         },\n                         \"crossSeriesReducer\": {\n                          \"description\": \"The reduction operation to be used to combine time series into a single time series, where the value of each data point in the resulting series is a function of all the already aligned values in the input time series.\",\n                          \"type\": \"string\"\n                         },\n                         \"groupByFields\": {\n                          \"description\": \"The set of fields to preserve when `cross_series_reducer` is specified.\",\n                          \"items\": {\n                           \"type\": \"string\"\n                          },\n                          \"type\": \"array\"\n                         },\n                         \"perSeriesAligner\": {\n                          \"description\": \"An `Aligner` describes how to bring the data points in a single time series into temporal alignment. Except for `ALIGN_NONE`, all alignments cause all the data points in an `alignment_period` to be mathematically grouped together, resulting in a single data point for each `alignment_period` with end timestamp at the end of the period.\",\n                          \"type\": \"string\"\n                         }\n                        },\n                        \"type\": \"object\"\n                       },\n                       \"filter\": {\n                        \"description\": \"The [monitoring filter](https://cloud.google.com/monitoring/api/v3/filters) that identifies the metric types, resources, and projects to query.\",\n                        \"type\": \"string\"\n                       }\n                      },\n                      \"required\": [\n                       \"filter\"\n                      ],\n                      \"type\": \"object\"\n                     },\n                     \"pickTimeSeriesFilter\": {\n                      \"description\": \"Ranking based time series filter.\",\n                      \"properties\": {\n                       \"direction\": {\n                        \"description\": \"How to use the ranking to select time series that pass through the filter.\",\n                        \"type\": \"string\"\n                       },\n                       \"numTimeSeries\": {\n                        \"description\": \"How many time series to allow to pass through the filter.\",\n                        \"format\": \"int32\",\n                        \"type\": \"integer\"\n                       },\n                       \"rankingMethod\": {\n                        \"description\": \"`ranking_method` is applied to each time series independently to produce the value which will be used to compare the time series to other time series.\",\n                        \"type\": \"string\"\n                       }\n                      },\n                      \"type\": \"object\"\n                     },\n                     \"secondaryAggregation\": {\n                      \"description\": \"Apply a second aggregation after the ratio is computed.\",\n                      \"properties\": {\n                       \"alignmentPeriod\": {\n                        \"description\": \"The `alignment_period` specifies a time interval, in seconds, that is used to divide the data in all the [time series][google.monitoring.v3.TimeSeries] into consistent blocks of time. This will be done before the per-series aligner can be applied to the data.\",\n                        \"type\": \"string\"\n                       },\n                       \"crossSeriesReducer\": {\n                        \"description\": \"The reduction operation to be used to combine time series into a single time series, where the value of each data point in the resulting series is a function of all the already aligned values in the input time series.\",\n                        \"type\": \"string\"\n                       },\n                       \"groupByFields\": {\n                        \"description\": \"The set of fields to preserve when `cross_series_reducer` is specified.\",\n                        \"items\": {\n                         \"type\": \"string\"\n                        },\n                        \"type\": \"array\"\n                       },\n                       \"perSeriesAligner\": {\n                        \"description\": \"An `Aligner` describes how to bring the data points in a single time series into temporal alignment. Except for `ALIGN_NONE`, all alignments cause all the data points in an `alignment_period` to be mathematically grouped together, resulting in a single data point for each `alignment_period` with end timestamp at the end of the period.\",\n                        \"type\": \"string\"\n                       }\n                      },\n                      \"type\": \"object\"\n                     }\n                    },\n                    \"type\": \"object\"\n                   },\n                   \"timeSeriesQueryLanguage\": {\n                    \"description\": \"A query used to fetch time series with MQL.\",\n                    \"type\": \"string\"\n                   },\n                   \"unitOverride\": {\n                    \"description\": \"The unit of data contained in fetched time series. If non-empty, this unit will override any unit that accompanies fetched data. The format is the same as the [`unit`](https://cloud.google.com/monitoring/api/ref_v3/rest/v3/projects.metricDescriptors) field in `MetricDescriptor`.\",\n                    \"type\": \"string\"\n                   }\n                  },\n                  \"type\": \"object\"\n                 }\n                },\n                \"type\": \"object\"\n               },\n               \"type\": \"array\"\n              },\n              \"metricVisualization\": {\n               \"description\": \"Optional. Store rendering strategy\",\n               \"type\": \"string\"\n              }\n             },\n             \"required\": [\n              \"dataSets\"\n             ],\n             \"type\": \"object\"\n            },\n            \"title\": {\n             \"description\": \"Optional. The title of the widget.\",\n             \"type\": \"string\"\n            },\n            \"xyChart\": {\n             \"description\": \"A chart of time series data.\",\n             \"properties\": {\n              \"chartOptions\": {\n               \"description\": \"Display options for the chart.\",\n               \"properties\": {\n                \"mode\": {\n                 \"description\": \"The chart mode.\",\n                 \"type\": \"string\"\n                }\n               },\n               \"type\": \"object\"\n              },\n              \"dataSets\": {\n               \"description\": \"Required. The data displayed in this chart.\",\n               \"items\": {\n                \"properties\": {\n                 \"legendTemplate\": {\n                  \"description\": \"A template string for naming `TimeSeries` in the resulting data set.\",\n                  \"type\": \"string\"\n                 },\n                 \"minAlignmentPeriod\": {\n                  \"description\": \"Optional. The lower bound on data point frequency for this data set.\",\n                  \"type\": \"string\"\n                 },\n                 \"plotType\": {\n                  \"description\": \"How this data should be plotted on the chart.\",\n                  \"type\": \"string\"\n                 },\n                 \"targetAxis\": {\n                  \"description\": \"Optional. The target axis to use for plotting the metric.\",\n                  \"type\": \"string\"\n                 },\n                 \"timeSeriesQuery\": {\n                  \"description\": \"Fields for querying time series data from the Stackdriver metrics API.\",\n                  \"properties\": {\n                   \"outputFullDuration\": {\n                    \"description\": \"Optional. If set, Cloud Monitoring will treat the full query duration as the alignment period so that there will be only 1 output value.\",\n                    \"type\": \"boolean\"\n                   },\n                   \"prometheusQuery\": {\n                    \"description\": \"A query used to fetch time series with PromQL.\",\n                    \"type\": \"string\"\n                   },\n                   \"timeSeriesFilter\": {\n                    \"description\": \"Filter parameters to fetch time series.\",\n                    \"properties\": {\n                     \"aggregation\": {\n                      \"description\": \"By default, the raw time series data is returned. Use this field to combine multiple time series for different views of the data.\",\n                      \"properties\": {\n                       \"alignmentPeriod\": {\n                        \"description\": \"The `alignment_period` specifies a time interval, in seconds, that is used to divide the data in all the [time series][google.monitoring.v3.TimeSeries] into consistent blocks of time. This will be done before the per-series aligner can be applied to the data.\",\n                        \"type\": \"string\"\n                       },\n                       \"crossSeriesReducer\": {\n                        \"description\": \"The reduction operation to be used to combine time series into a single time series, where the value of each data point in the resulting series is a function of all the already aligned values in the input time series.\",\n                        \"type\": \"string\"\n                       },\n                       \"groupByFields\": {\n                        \"description\": \"The set of fields to preserve when `cross_series_reducer` is specified.\",\n                        \"items\": {\n                         \"type\": \"string\"\n                        },\n                        \"type\": \"array\"\n                       },\n                       \"perSeriesAligner\": {\n                        \"description\": \"An `Aligner` describes how to bring the data points in a single time series into temporal alignment. Except for `ALIGN_NONE`, all alignments cause all the data points in an `alignment_period` to be mathematically grouped together, resulting in a single data point for each `alignment_period` with end timestamp at the end of the period.\",\n                        \"type\": \"string\"\n                       }\n                      },\n                      \"type\": \"object\"\n                     },\n                     \"filter\": {\n                      \"description\": \"Required. The [monitoring filter](https://cloud.google.com/monitoring/api/v3/filters) that identifies the metric types, resources, and projects to query.\",\n                      \"type\": \"string\"\n                     },\n                     \"pickTimeSeriesFilter\": {\n                      \"description\": \"Ranking based time series filter.\",\n                      \"properties\": {\n                       \"direction\": {\n                        \"description\": \"How to use the ranking to select time series that pass through the filter.\",\n                        \"type\": \"string\"\n                       },\n                       \"numTimeSeries\": {\n                        \"description\": \"How many time series to allow to pass through the filter.\",\n                        \"format\": \"int32\",\n                        \"type\": \"integer\"\n                       },\n                       \"rankingMethod\": {\n                        \"description\": \"`ranking_method` is applied to each time series independently to produce the value which will be used to compare the time series to other time series.\",\n                        \"type\": \"string\"\n                       }\n                      },\n                      \"type\": \"object\"\n                     },\n                     \"secondaryAggregation\": {\n                      \"description\": \"Apply a second aggregation after `aggregation` is applied.\",\n                      \"properties\": {\n                       \"alignmentPeriod\": {\n                        \"description\": \"The `alignment_period` specifies a time interval, in seconds, that is used to divide the data in all the [time series][google.monitoring.v3.TimeSeries] into consistent blocks of time. This will be done before the per-series aligner can be applied to the data.\",\n                        \"type\": \"string\"\n                       },\n                       \"crossSeriesReducer\": {\n                        \"description\": \"The reduction operation to be used to combine time series into a single time series, where the value of each data point in the resulting series is a function of all the already aligned values in the input time series.\",\n                        \"type\": \"string\"\n                       },\n                       \"groupByFields\": {\n                        \"description\": \"The set of fields to preserve when `cross_series_reducer` is specified.\",\n                        \"items\": {\n                         \"type\": \"string\"\n                        },\n                        \"type\": \"array\"\n                       },\n                       \"perSeriesAligner\": {\n                        \"description\": \"An `Aligner` describes how to bring the data points in a single time series into temporal alignment. Except for `ALIGN_NONE`, all alignments cause all the data points in an `alignment_period` to be mathematically grouped together, resulting in a single data point for each `alignment_period` with end timestamp at the end of the period.\",\n                        \"type\": \"string\"\n                       }\n                      },\n                      \"type\": \"object\"\n                     }\n                    },\n                    \"required\": [\n                     \"filter\"\n                    ],\n                    \"type\": \"object\"\n                   },\n                   \"timeSeriesFilterRatio\": {\n                    \"description\": \"Parameters to fetch a ratio between two time series filters.\",\n                    \"properties\": {\n                     \"denominator\": {\n                      \"description\": \"The denominator of the ratio.\",\n                      \"properties\": {\n                       \"aggregation\": {\n                        \"description\": \"By default, the raw time series data is returned.\",\n                        \"properties\": {\n                         \"alignmentPeriod\": {\n                          \"description\": \"The `alignment_period` specifies a time interval, in seconds, that is used to divide the data in all the [time series][google.monitoring.v3.TimeSeries] into consistent blocks of time. This will be done before the per-series aligner can be applied to the data.\",\n                          \"type\": \"string\"\n                         },\n                         \"crossSeriesReducer\": {\n                          \"description\": \"The reduction operation to be used to combine time series into a single time series, where the value of each data point in the resulting series is a function of all the already aligned values in the input time series.\",\n                          \"type\": \"string\"\n                         },\n                         \"groupByFields\": {\n                          \"description\": \"The set of fields to preserve when `cross_series_reducer` is specified.\",\n                          \"items\": {\n                           \"type\": \"string\"\n                          },\n                          \"type\": \"array\"\n                         },\n                         \"perSeriesAligner\": {\n                          \"description\": \"An `Aligner` describes how to bring the data points in a single time series into temporal alignment. Except for `ALIGN_NONE`, all alignments cause all the data points in an `alignment_period` to be mathematically grouped together, resulting in a single data point for each `alignment_period` with end timestamp at the end of the period.\",\n                          \"type\": \"string\"\n                         }\n                        },\n                        \"type\": \"object\"\n                       },\n                       \"filter\": {\n                        \"description\": \"The [monitoring filter](https://cloud.google.com/monitoring/api/v3/filters) that identifies the metric types, resources, and projects to query.\",\n                        \"type\": \"string\"\n                       }\n                      },\n                      \"required\": [\n                       \"filter\"\n                      ],\n                      \"type\": \"object\"\n                     },\n                     \"numerator\": {\n                      \"description\": \"The numerator of the ratio.\",\n                      \"properties\": {\n                       \"aggregation\": {\n                        \"description\": \"By default, the raw time series data is returned.\",\n                        \"properties\": {\n                         \"alignmentPeriod\": {\n                          \"description\": \"The `alignment_period` specifies a time interval, in seconds, that is used to divide the data in all the [time series][google.monitoring.v3.TimeSeries] into consistent blocks of time. This will be done before the per-series aligner can be applied to the data.\",\n                          \"type\": \"string\"\n                         },\n                         \"crossSeriesReducer\": {\n                          \"description\": \"The reduction operation to be used to combine time series into a single time series, where the value of each data point in the resulting series is a function of all the already aligned values in the input time series.\",\n                          \"type\": \"string\"\n                         },\n                         \"groupByFields\": {\n                          \"description\": \"The set of fields to preserve when `cross_series_reducer` is specified.\",\n                          \"items\": {\n                           \"type\": \"string\"\n                          },\n                          \"type\": \"array\"\n                         },\n                         \"perSeriesAligner\": {\n                          \"description\": \"An `Aligner` describes how to bring the data points in a single time series into temporal alignment. Except for `ALIGN_NONE`, all alignments cause all the data points in an `alignment_period` to be mathematically grouped together, resulting in a single data point for each `alignment_period` with end timestamp at the end of the period.\",\n                          \"type\": \"string\"\n                         }\n                        },\n                        \"type\": \"object\"\n                       },\n                       \"filter\": {\n                        \"description\": \"The [monitoring filter](https://cloud.google.com/monitoring/api/v3/filters) that identifies the metric types, resources, and projects to query.\",\n                        \"type\": \"string\"\n                       }\n                      },\n                      \"required\": [\n                       \"filter\"\n                      ],\n                      \"type\": \"object\"\n                     },\n                     \"pickTimeSeriesFilter\": {\n                      \"description\": \"Ranking based time series filter.\",\n                      \"properties\": {\n                       \"direction\": {\n                        \"description\": \"How to use the ranking to select time series that pass through the filter.\",\n                        \"type\": \"string\"\n                       },\n                       \"numTimeSeries\": {\n                        \"description\": \"How many time series to allow to pass through the filter.\",\n                        \"format\": \"int32\",\n                        \"type\": \"integer\"\n                       },\n                       \"rankingMethod\": {\n                        \"description\": \"`ranking_method` is applied to each time series independently to produce the value which will be used to compare the time series to other time series.\",\n                        \"type\": \"string\"\n                       }\n                      },\n                      \"type\": \"object\"\n                     },\n                     \"secondaryAggregation\": {\n                      \"description\": \"Apply a second aggregation after the ratio is computed.\",\n                      \"properties\": {\n                       \"alignmentPeriod\": {\n                        \"description\": \"The `alignment_period` specifies a time interval, in seconds, that is used to divide the data in all the [time series][google.monitoring.v3.TimeSeries] into consistent blocks of time. This will be done before the per-series aligner can be applied to the data.\",\n                        \"type\": \"string\"\n                       },\n                       \"crossSeriesReducer\": {\n                        \"description\": \"The reduction operation to be used to combine time series into a single time series, where the value of each data point in the resulting series is a function of all the already aligned values in the input time series.\",\n                        \"type\": \"string\"\n                       },\n                       \"groupByFields\": {\n                        \"description\": \"The set of fields to preserve when `cross_series_reducer` is specified.\",\n                        \"items\": {\n                         \"type\": \"string\"\n                        },\n                        \"type\": \"array\"\n                       },\n                       \"perSeriesAligner\": {\n                        \"description\": \"An `Aligner` describes how to bring the data points in a single time series into temporal alignment. Except for `ALIGN_NONE`, all alignments cause all the data points in an `alignment_period` to be mathematically grouped together, resulting in a single data point for each `alignment_period` with end timestamp at the end of the period.\",\n                        \"type\": \"string\"\n                       }\n                      },\n                      \"type\": \"object\"\n                     }\n                    },\n                    \"type\": \"object\"\n                   },\n                   \"timeSeriesQueryLanguage\": {\n                    \"description\": \"A query used to fetch time series with MQL.\",\n                    \"type\": \"string\"\n                   },\n                   \"unitOverride\": {\n                    \"description\": \"The unit of data contained in fetched time series. If non-empty, this unit will override any unit that accompanies fetched data. The format is the same as the [`unit`](https://cloud.google.com/monitoring/api/ref_v3/rest/v3/projects.metricDescriptors) field in `MetricDescriptor`.\",\n                    \"type\": \"string\"\n                   }\n                  },\n                  \"type\": \"object\"\n                 }\n                },\n                \"required\": [\n                 \"timeSeriesQuery\"\n                ],\n                \"type\": \"object\"\n               },\n               \"type\": \"array\"\n              },\n              \"thresholds\": {\n               \"description\": \"Threshold lines drawn horizontally across the chart.\",\n               \"items\": {\n                \"properties\": {\n                 \"color\": {\n                  \"description\": \"The state color for this threshold. Color is not allowed in a XyChart.\",\n                  \"type\": \"string\"\n                 },\n                 \"direction\": {\n                  \"description\": \"The direction for the current threshold. Direction is not allowed in a XyChart.\",\n                  \"type\": \"string\"\n                 },\n                 \"label\": {\n                  \"description\": \"A label for the threshold.\",\n                  \"type\": \"string\"\n                 },\n                 \"targetAxis\": {\n                  \"description\": \"The target axis to use for plotting the threshold. Target axis is not allowed in a Scorecard.\",\n                  \"type\": \"string\"\n                 },\n                 \"value\": {\n                  \"description\": \"The value of the threshold. The value should be defined in the native scale of the metric.\",\n                  \"format\": \"double\",\n                  \"type\": \"number\"\n                 }\n                },\n                \"type\": \"object\"\n               },\n               \"type\": \"array\"\n              },\n              \"timeshiftDuration\": {\n               \"description\": \"The duration used to display a comparison chart.\",\n               \"type\": \"string\"\n              },\n              \"xAxis\": {\n               \"description\": \"The properties applied to the x-axis.\",\n               \"properties\": {\n                \"label\": {\n                 \"description\": \"The label of the axis.\",\n                 \"type\": \"string\"\n                },\n                \"scale\": {\n                 \"description\": \"The axis scale. By default, a linear scale is used.\",\n                 \"type\": \"string\"\n                }\n               },\n               \"type\": \"object\"\n              },\n              \"y2Axis\": {\n               \"description\": \"The properties applied to the y2-axis.\",\n               \"properties\": {\n                \"label\": {\n                 \"description\": \"The label of the axis.\",\n                 \"type\": \"string\"\n                },\n                \"scale\": {\n                 \"description\": \"The axis scale. By default, a linear scale is used.\",\n                 \"type\": \"string\"\n                }\n               },\n               \"type\": \"object\"\n              },\n              \"yAxis\": {\n               \"description\": \"The properties applied to the y-axis.\",\n               \"properties\": {\n                \"label\": {\n                 \"description\": \"The label of the axis.\",\n                 \"type\": \"string\"\n                },\n                \"scale\": {\n                 \"description\": \"The axis scale. By default, a linear scale is used.\",\n                 \"type\": \"string\"\n                }\n               },\n               \"type\": \"object\"\n              }\n             },\n             \"required\": [\n              \"dataSets\"\n             ],\n             \"type\": \"object\"\n            }\n           },\n           \"type\": \"object\"\n          },\n          \"type\": \"array\"\n         }\n        },\n        \"type\": \"object\"\n       },\n       \"type\": \"array\"\n      }\n     },\n     \"type\": \"object\"\n    },\n    \"dashboardFilters\": {\n     \"description\": \"Filters to reduce the amount of data charted based on the filter criteria.\",\n     \"items\": {\n      \"properties\": {\n       \"filterType\": {\n        \"description\": \"The specified filter type\",\n        \"type\": \"string\"\n       },\n       \"labelKey\": {\n        \"description\": \"Required. The key for the label\",\n        \"type\": \"string\"\n       },\n       \"stringValue\": {\n        \"description\": \"A variable-length string value.\",\n        \"type\": \"string\"\n       },\n       \"templateVariable\": {\n        \"description\": \"The placeholder text that can be referenced in a filter string or MQL query. If omitted, the dashboard filter will be applied to all relevant widgets in the dashboard.\",\n        \"type\": \"string\"\n       }\n      },\n      \"required\": [\n       \"labelKey\"\n      ],\n      \"type\": \"object\"\n     },\n     \"type\": \"array\"\n    },\n    \"displayName\": {\n     \"description\": \"Required. The mutable, human-readable name.\",\n     \"type\": \"string\"\n    },\n    \"gridLayout\": {\n     \"description\": \"Content is arranged with a basic layout that re-flows a simple list of informational elements like widgets or tiles.\",\n     \"properties\": {\n      \"columns\": {\n       \"description\": \"The number of columns into which the view's width is divided. If omitted or set to zero, a system default will be used while rendering.\",\n       \"format\": \"int64\",\n       \"type\": \"integer\"\n      },\n      \"widgets\": {\n       \"description\": \"The informational elements that are arranged into the columns row-first.\",\n       \"items\": {\n        \"properties\": {\n         \"alertChart\": {\n          \"description\": \"A chart of alert policy data.\",\n          \"properties\": {\n           \"alertPolicyRef\": {\n            \"description\": \"Required. A reference to the MonitoringAlertPolicy.\",\n            \"oneOf\": [\n             {\n              \"not\": {\n               \"required\": [\n                \"external\"\n               ]\n              },\n              \"required\": [\n               \"name\"\n              ]\n             },\n             {\n              \"not\": {\n               \"anyOf\": [\n                {\n                 \"required\": [\n                  \"name\"\n                 ]\n                },\n                {\n                 \"required\": [\n                  \"namespace\"\n                 ]\n                }\n               ]\n              },\n              \"required\": [\n               \"external\"\n              ]\n             }\n            ],\n            \"properties\": {\n             \"external\": {\n              \"description\": \"The MonitoringAlertPolicy link in the form \\\"projects/[PROJECT_ID_OR_NUMBER]/alertPolicies/[ALERT_POLICY_ID]\\\", when not managed by Config Connector.\",\n              \"type\": \"string\"\n             },\n             \"name\": {\n              \"description\": \"The `name` field of a `MonitoringAlertPolicy` resource.\",\n              \"type\": \"string\"\n             },\n             \"namespace\": {\n              \"description\": \"The `namespace` field of a `MonitoringAlertPolicy` resource.\",\n              \"type\": \"string\"\n             }\n            },\n            \"type\": \"object\"\n           }\n          },\n          \"required\": [\n           \"alertPolicyRef\"\n          ],\n          \"type\": \"object\"\n         },\n         \"blank\": {\n          \"description\": \"A blank space.\",\n          \"type\": \"object\"\n         },\n         \"collapsibleGroup\": {\n          \"description\": \"A widget that groups the other widgets. All widgets that are within the area spanned by the grouping widget are considered member widgets.\",\n          \"properties\": {\n           \"collapsed\": {\n            \"description\": \"The collapsed state of the widget on first page load.\",\n            \"type\": \"boolean\"\n           }\n          },\n          \"type\": \"object\"\n         },\n         \"errorReportingPanel\": {\n          \"description\": \"A widget that displays a list of error groups.\",\n          \"properties\": {\n           \"projectRefs\": {\n            \"description\": \"The projects from which to gather errors.\",\n            \"items\": {\n             \"description\": \"The Project that this resource belongs to.\",\n             \"oneOf\": [\n              {\n               \"not\": {\n                \"required\": [\n                 \"external\"\n                ]\n               },\n               \"required\": [\n                \"name\",\n                \"kind\"\n               ]\n              },\n              {\n               \"not\": {\n                \"anyOf\": [\n                 {\n                  \"required\": [\n                   \"name\"\n                  ]\n                 },\n                 {\n                  \"required\": [\n                   \"namespace\"\n                  ]\n                 },\n                 {\n                  \"required\": [\n                   \"kind\"\n                  ]\n                 }\n                ]\n               },\n               \"required\": [\n                \"external\"\n               ]\n              }\n             ],\n             \"properties\": {\n              \"external\": {\n               \"description\": \"The `projectID` field of a project, when not managed by Config Connector.\",\n               \"type\": \"string\"\n              },\n              \"kind\": {\n               \"description\": \"The kind of the Project resource; optional but must be `Project` if provided.\",\n               \"type\": \"string\"\n              },\n              \"name\": {\n               \"description\": \"The `name` field of a `Project` resource.\",\n               \"type\": \"string\"\n              },\n              \"namespace\": {\n               \"description\": \"The `namespace` field of a `Project` resource.\",\n               \"type\": \"string\"\n              }\n             },\n             \"type\": \"object\"\n            },\n            \"type\": \"array\"\n           },\n           \"services\": {\n            \"description\": \"An identifier of the service, such as the name of the executable, job, or Google App Engine service name. This field is expected to have a low number of values that are relatively stable over time, as opposed to `version`, which can be changed whenever new code is deployed.\",\n            \"items\": {\n             \"type\": \"string\"\n            },\n            \"type\": \"array\"\n           },\n           \"versions\": {\n            \"description\": \"Represents the source code version that the developer provided, which could represent a version label or a Git SHA-1 hash, for example. For App Engine standard environment, the version is set to the version of the app.\",\n            \"items\": {\n             \"type\": \"string\"\n            },\n            \"type\": \"array\"\n           }\n          },\n          \"type\": \"object\"\n         },\n         \"id\": {\n          \"description\": \"Optional. The widget id. Ids may be made up of alphanumerics, dashes and underscores. Widget ids are optional.\",\n          \"type\": \"string\"\n         },\n         \"incidentList\": {\n          \"description\": \"A widget that shows list of incidents.\",\n          \"properties\": {\n           \"monitoredResources\": {\n            \"description\": \"Optional. The monitored resource for which incidents are listed.\",\n            \"items\": {\n             \"properties\": {\n              \"labels\": {\n               \"additionalProperties\": {\n                \"type\": \"string\"\n               },\n               \"description\": \"Required. Values for all of the labels listed in the associated monitored resource descriptor.\",\n               \"type\": \"object\"\n              },\n              \"type\": {\n               \"description\": \"Required. The monitored resource type. This field must match the `type` field of a [MonitoredResourceDescriptor][google.api.MonitoredResourceDescriptor] object.\",\n               \"type\": \"string\"\n              }\n             },\n             \"type\": \"object\"\n            },\n            \"type\": \"array\"\n           },\n           \"policyRefs\": {\n            \"description\": \"Optional. A list of alert policies to filter the incident list by.\",\n            \"items\": {\n             \"oneOf\": [\n              {\n               \"not\": {\n                \"required\": [\n                 \"external\"\n                ]\n               },\n               \"required\": [\n                \"name\"\n               ]\n              },\n              {\n               \"not\": {\n                \"anyOf\": [\n                 {\n                  \"required\": [\n                   \"name\"\n                  ]\n                 },\n                 {\n                  \"required\": [\n                   \"namespace\"\n                  ]\n                 }\n                ]\n               },\n               \"required\": [\n                \"external\"\n               ]\n              }\n             ],\n             \"properties\": {\n              \"external\": {\n               \"description\": \"The MonitoringAlertPolicy link in the form \\\"projects/[PROJECT_ID_OR_NUMBER]/alertPolicies/[ALERT_POLICY_ID]\\\", when not managed by Config Connector.\",\n               \"type\": \"string\"\n              },\n              \"name\": {\n               \"description\": \"The `name` field of a `MonitoringAlertPolicy` resource.\",\n               \"type\": \"string\"\n              },\n              \"namespace\": {\n               \"description\": \"The `namespace` field of a `MonitoringAlertPolicy` resource.\",\n               \"type\": \"string\"\n              }\n             },\n             \"type\": \"object\"\n            },\n            \"type\": \"array\"\n           }\n          },\n          \"type\": \"object\"\n         },\n         \"logsPanel\": {\n          \"description\": \"A widget that shows a stream of logs.\",\n          \"properties\": {\n           \"filter\": {\n            \"description\": \"A filter that chooses which log entries to return.  See [Advanced Logs Queries](https://cloud.google.com/logging/docs/view/advanced-queries).\",\n            \"type\": \"string\"\n           },\n           \"resourceNames\": {\n            \"description\": \"The names of logging resources to collect logs for.\",\n            \"items\": {\n             \"oneOf\": [\n              {\n               \"not\": {\n                \"required\": [\n                 \"external\"\n                ]\n               },\n               \"required\": [\n                \"name\",\n                \"kind\"\n               ]\n              },\n              {\n               \"not\": {\n                \"anyOf\": [\n                 {\n                  \"required\": [\n                   \"name\"\n                  ]\n                 },\n                 {\n                  \"required\": [\n                   \"namespace\"\n                  ]\n                 },\n                 {\n                  \"required\": [\n                   \"kind\"\n                  ]\n                 }\n                ]\n               },\n               \"required\": [\n                \"external\"\n               ]\n              }\n             ],\n             \"properties\": {\n              \"external\": {\n               \"description\": \"The external name of the referenced resource\",\n               \"type\": \"string\"\n              },\n              \"kind\": {\n               \"description\": \"Kind of the referent.\",\n               \"type\": \"string\"\n              },\n              \"name\": {\n               \"description\": \"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\",\n               \"type\": \"string\"\n              },\n              \"namespace\": {\n               \"description\": \"Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/\",\n               \"type\": \"string\"\n              }\n             },\n             \"type\": \"object\"\n            },\n            \"type\": \"array\"\n           }\n          },\n          \"type\": \"object\"\n         },\n         \"pieChart\": {\n          \"description\": \"A widget that displays timeseries data as a pie chart.\",\n          \"properties\": {\n           \"chartType\": {\n            \"description\": \"Required. Indicates the visualization type for the PieChart.\",\n            \"type\": \"string\"\n           },\n           \"dataSets\": {\n            \"description\": \"Required. The queries for the chart's data.\",\n            \"items\": {\n             \"properties\": {\n              \"minAlignmentPeriod\": {\n               \"description\": \"Optional. The lower bound on data point frequency for this data set.\",\n               \"type\": \"string\"\n              },\n              \"sliceNameTemplate\": {\n               \"description\": \"Optional. A template for the name of the slice.\",\n               \"type\": \"string\"\n              },\n              \"timeSeriesQuery\": {\n               \"description\": \"Required. The query for the PieChart. See, `google.monitoring.dashboard.v1.TimeSeriesQuery`.\",\n               \"properties\": {\n                \"outputFullDuration\": {\n                 \"description\": \"Optional. If set, Cloud Monitoring will treat the full query duration as the alignment period so that there will be only 1 output value.\",\n                 \"type\": \"boolean\"\n                },\n                \"prometheusQuery\": {\n                 \"description\": \"A query used to fetch time series with PromQL.\",\n                 \"type\": \"string\"\n                },\n                \"timeSeriesFilter\": {\n                 \"description\": \"Filter parameters to fetch time series.\",\n                 \"properties\": {\n                  \"aggregation\": {\n                   \"description\": \"By default, the raw time series data is returned. Use this field to combine multiple time series for different views of the data.\",\n                   \"properties\": {\n                    \"alignmentPeriod\": {\n                     \"description\": \"The `alignment_period` specifies a time interval, in seconds, that is used to divide the data in all the [time series][google.monitoring.v3.TimeSeries] into consistent blocks of time. This will be done before the per-series aligner can be applied to the data.\",\n                     \"type\": \"string\"\n                    },\n                    \"crossSeriesReducer\": {\n                     \"description\": \"The reduction operation to be used to combine time series into a single time series, where the value of each data point in the resulting series is a function of all the already aligned values in the input time series.\",\n                     \"type\": \"string\"\n                    },\n                    \"groupByFields\": {\n                     \"description\": \"The set of fields to preserve when `cross_series_reducer` is specified.\",\n                     \"items\": {\n                      \"type\": \"string\"\n                     },\n                     \"type\": \"array\"\n                    },\n                    \"perSeriesAligner\": {\n                     \"description\": \"An `Aligner` describes how to bring the data points in a single time series into temporal alignment. Except for `ALIGN_NONE`, all alignments cause all the data points in an `alignment_period` to be mathematically grouped together, resulting in a single data point for each `alignment_period` with end timestamp at the end of the period.\",\n                     \"type\": \"string\"\n                    }\n                   },\n                   \"type\": \"object\"\n                  },\n                  \"filter\": {\n                   \"description\": \"Required. The [monitoring filter](https://cloud.google.com/monitoring/api/v3/filters) that identifies the metric types, resources, and projects to query.\",\n                   \"type\": \"string\"\n                  },\n                  \"pickTimeSeriesFilter\": {\n                   \"description\": \"Ranking based time series filter.\",\n                   \"properties\": {\n                    \"direction\": {\n                     \"description\": \"How to use the ranking to select time series that pass through the filter.\",\n                     \"type\": \"string\"\n                    },\n                    \"numTimeSeries\": {\n                     \"description\": \"How many time series to allow to pass through the filter.\",\n                     \"format\": \"int32\",\n                     \"type\": \"integer\"\n                    },\n                    \"rankingMethod\": {\n                     \"description\": \"`ranking_method` is applied to each time series independently to produce the value which will be used to compare the time series to other time series.\",\n                     \"type\": \"string\"\n                    }\n                   },\n                   \"type\": \"object\"\n                  },\n                  \"secondaryAggregation\": {\n                   \"description\": \"Apply a second aggregation after `aggregation` is applied.\",\n                   \"properties\": {\n                    \"alignmentPeriod\": {\n                     \"description\": \"The `alignment_period` specifies a time interval, in seconds, that is used to divide the data in all the [time series][google.monitoring.v3.TimeSeries] into consistent blocks of time. This will be done before the per-series aligner can be applied to the data.\",\n                     \"type\": \"string\"\n                    },\n                    \"crossSeriesReducer\": {\n                     \"description\": \"The reduction operation to be used to combine time series into a single time series, where the value of each data point in the resulting series is a function of all the already aligned values in the input time series.\",\n                     \"type\": \"string\"\n                    },\n                    \"groupByFields\": {\n                     \"description\": \"The set of fields to preserve when `cross_series_reducer` is specified.\",\n                     \"items\": {\n                      \"type\": \"string\"\n                     },\n                     \"type\": \"array\"\n                    },\n                    \"perSeriesAligner\": {\n                     \"description\": \"An `Aligner` describes how to bring the data points in a single time series into temporal alignment. Except for `ALIGN_NONE`, all alignments cause all the data points in an `alignment_period` to be mathematically grouped together, resulting in a single data point for each `alignment_period` with end timestamp at the end of the period.\",\n                     \"type\": \"string\"\n                    }\n                   },\n                   \"type\": \"object\"\n                  }\n                 },\n                 \"required\": [\n                  \"filter\"\n                 ],\n                 \"type\": \"object\"\n                },\n                \"timeSeriesFilterRatio\": {\n                 \"description\": \"Parameters to fetch a ratio between two time series filters.\",\n                 \"properties\": {\n                  \"denominator\": {\n                   \"description\": \"The denominator of the ratio.\",\n                   \"properties\": {\n                    \"aggregation\": {\n                     \"description\": \"By default, the raw time series data is returned.\",\n                     \"properties\": {\n                      \"alignmentPeriod\": {\n                       \"description\": \"The `alignment_period` specifies a time interval, in seconds, that is used to divide the data in all the [time series][google.monitoring.v3.TimeSeries] into consistent blocks of time. This will be done before the per-series aligner can be applied to the data.\",\n                       \"type\": \"string\"\n                      },\n                      \"crossSeriesReducer\": {\n                       \"description\": \"The reduction operation to be used to combine time series into a single time series, where the value of each data point in the resulting series is a function of all the already aligned values in the input time series.\",\n                       \"type\": \"string\"\n                      },\n                      \"groupByFields\": {\n                       \"description\": \"The set of fields to preserve when `cross_series_reducer` is specified.\",\n                       \"items\": {\n                        \"type\": \"string\"\n                       },\n                       \"type\": \"array\"\n                      },\n                      \"perSeriesAligner\": {\n                       \"description\": \"An `Aligner` describes how to bring the data points in a single time series into temporal alignment. Except for `ALIGN_NONE`, all alignments cause all the data points in an `alignment_period` to be mathematically grouped together, resulting in a single data point for each `alignment_period` with end timestamp at the end of the period.\",\n                       \"type\": \"string\"\n                      }\n                     },\n                     \"type\": \"object\"\n                    },\n                    \"filter\": {\n                     \"description\": \"The [monitoring filter](https://cloud.google.com/monitoring/api/v3/filters) that identifies the metric types, resources, and projects to query.\",\n                     \"type\": \"string\"\n                    }\n                   },\n                   \"required\": [\n                    \"filter\"\n                   ],\n                   \"type\": \"object\"\n                  },\n                  \"numerator\": {\n                   \"description\": \"The numerator of the ratio.\",\n                   \"properties\": {\n                    \"aggregation\": {\n                     \"description\": \"By default, the raw time series data is returned.\",\n                     \"properties\": {\n                      \"alignmentPeriod\": {\n                       \"description\": \"The `alignment_period` specifies a time interval, in seconds, that is used to divide the data in all the [time series][google.monitoring.v3.TimeSeries] into consistent blocks of time. This will be done before the per-series aligner can be applied to the data.\",\n                       \"type\": \"string\"\n                      },\n                      \"crossSeriesReducer\": {\n                       \"description\": \"The reduction operation to be used to combine time series into a single time series, where the value of each data point in the resulting series is a function of all the already aligned values in the input time series.\",\n                       \"type\": \"string\"\n                      },\n                      \"groupByFields\": {\n                       \"description\": \"The set of fields to preserve when `cross_series_reducer` is specified.\",\n                       \"items\": {\n                        \"type\": \"string\"\n                       },\n                       \"type\": \"array\"\n                      },\n                      \"perSeriesAligner\": {\n                       \"description\": \"An `Aligner` describes how to bring the data points in a single time series into temporal alignment. Except for `ALIGN_NONE`, all alignments cause all the data points in an `alignment_period` to be mathematically grouped together, resulting in a single data point for each `alignment_period` with end timestamp at the end of the period.\",\n                       \"type\": \"string\"\n                      }\n                     },\n                     \"type\": \"object\"\n                    },\n                    \"filter\": {\n                     \"description\": \"The [monitoring filter](https://cloud.google.com/monitoring/api/v3/filters) that identifies the metric types, resources, and projects to query.\",\n                     \"type\": \"string\"\n                    }\n                   },\n                   \"required\": [\n                    \"filter\"\n                   ],\n                   \"type\": \"object\"\n                  },\n                  \"pickTimeSeriesFilter\": {\n                   \"description\": \"Ranking based time series filter.\",\n                   \"properties\": {\n                    \"direction\": {\n                     \"description\": \"How to use the ranking to select time series that pass through the filter.\",\n                     \"type\": \"string\"\n                    },\n                    \"numTimeSeries\": {\n                     \"description\": \"How many time series to allow to pass through the filter.\",\n                     \"format\": \"int32\",\n                     \"type\": \"integer\"\n                    },\n                    \"rankingMethod\": {\n                     \"description\": \"`ranking_method` is applied to each time series independently to produce the value which will be used to compare the time series to other time series.\",\n                     \"type\": \"string\"\n                    }\n                   },\n                   \"type\": \"object\"\n                  },\n                  \"secondaryAggregation\": {\n                   \"description\": \"Apply a second aggregation after the ratio is computed.\",\n                   \"properties\": {\n                    \"alignmentPeriod\": {\n                     \"description\": \"The `alignment_period` specifies a time interval, in seconds, that is used to divide the data in all the [time series][google.monitoring.v3.TimeSeries] into consistent blocks of time. This will be done before the per-series aligner can be applied to the data.\",\n                     \"type\": \"string\"\n                    },\n                    \"crossSeriesReducer\": {\n                     \"description\": \"The reduction operation to be used to combine time series into a single time series, where the value of each data point in the resulting series is a function of all the already aligned values in the input time series.\",\n                     \"type\": \"string\"\n                    },\n                    \"groupByFields\": {\n                     \"description\": \"The set of fields to preserve when `cross_series_reducer` is specified.\",\n                     \"items\": {\n                      \"type\": \"string\"\n                     },\n                     \"type\": \"array\"\n                    },\n                    \"perSeriesAligner\": {\n                     \"description\": \"An `Aligner` describes how to bring the data points in a single time series into temporal alignment. Except for `ALIGN_NONE`, all alignments cause all the data points in an `alignment_period` to be mathematically grouped together, resulting in a single data point for each `alignment_period` with end timestamp at the end of the period.\",\n                     \"type\": \"string\"\n                    }\n                   },\n                   \"type\": \"object\"\n                  }\n                 },\n                 \"type\": \"object\"\n                },\n                \"timeSeriesQueryLanguage\": {\n                 \"description\": \"A query used to fetch time series with MQL.\",\n                 \"type\": \"string\"\n                },\n                \"unitOverride\": {\n                 \"description\": \"The unit of data contained in fetched time series. If non-empty, this unit will override any unit that accompanies fetched data. The format is the same as the [`unit`](https://cloud.google.com/monitoring/api/ref_v3/rest/v3/projects.metricDescriptors) field in `MetricDescriptor`.\",\n                 \"type\": \"string\"\n                }\n               },\n               \"type\": \"object\"\n              }\n             },\n             \"required\": [\n              \"timeSeriesQuery\"\n             ],\n             \"type\": \"object\"\n            },\n            \"type\": \"array\"\n           },\n           \"showLabels\": {\n            \"description\": \"Optional. Indicates whether or not the pie chart should show slices' labels\",\n            \"type\": \"boolean\"\n           }\n          },\n          \"required\": [\n           \"chartType\",\n           \"dataSets\"\n          ],\n          \"type\": \"object\"\n         },\n         \"scorecard\": {\n          \"description\": \"A scorecard summarizing time series data.\",\n          \"properties\": {\n           \"blankView\": {\n            \"description\": \"Will cause the `Scorecard` to show only the value, with no indicator to its value relative to its thresholds.\",\n            \"type\": \"object\"\n           },\n           \"gaugeView\": {\n            \"description\": \"Will cause the scorecard to show a gauge chart.\",\n            \"properties\": {\n             \"lowerBound\": {\n              \"description\": \"The lower bound for this gauge chart. The value of the chart should always be greater than or equal to this.\",\n              \"format\": \"double\",\n              \"type\": \"number\"\n             },\n             \"upperBound\": {\n              \"description\": \"The upper bound for this gauge chart. The value of the chart should always be less than or equal to this.\",\n              \"format\": \"double\",\n              \"type\": \"number\"\n             }\n            },\n            \"type\": \"object\"\n           },\n           \"sparkChartView\": {\n            \"description\": \"Will cause the scorecard to show a spark chart.\",\n            \"properties\": {\n             \"minAlignmentPeriod\": {\n              \"description\": \"The lower bound on data point frequency in the chart implemented by specifying the minimum alignment period to use in a time series query.\",\n              \"type\": \"string\"\n             },\n             \"sparkChartType\": {\n              \"description\": \"Required. The type of sparkchart to show in this chartView.\",\n              \"type\": \"string\"\n             }\n            },\n            \"required\": [\n             \"sparkChartType\"\n            ],\n            \"type\": \"object\"\n           },\n           \"thresholds\": {\n            \"description\": \"The thresholds used to determine the state of the scorecard given the time series' current value.\",\n            \"items\": {\n             \"properties\": {\n              \"color\": {\n               \"description\": \"The state color for this threshold. Color is not allowed in a XyChart.\",\n               \"type\": \"string\"\n              },\n              \"direction\": {\n               \"description\": \"The direction for the current threshold. Direction is not allowed in a XyChart.\",\n               \"type\": \"string\"\n              },\n              \"label\": {\n               \"description\": \"A label for the threshold.\",\n               \"type\": \"string\"\n              },\n              \"targetAxis\": {\n               \"description\": \"The target axis to use for plotting the threshold. Target axis is not allowed in a Scorecard.\",\n               \"type\": \"string\"\n              },\n              \"value\": {\n               \"description\": \"The value of the threshold. The value should be defined in the native scale of the metric.\",\n               \"format\": \"double\",\n               \"type\": \"number\"\n              }\n             },\n             \"type\": \"object\"\n            },\n            \"type\": \"array\"\n           },\n           \"timeSeriesQuery\": {\n            \"description\": \"Required. Fields for querying time series data from the Stackdriver metrics API.\",\n            \"properties\": {\n             \"outputFullDuration\": {\n              \"description\": \"Optional. If set, Cloud Monitoring will treat the full query duration as the alignment period so that there will be only 1 output value.\",\n              \"type\": \"boolean\"\n             },\n             \"prometheusQuery\": {\n              \"description\": \"A query used to fetch time series with PromQL.\",\n              \"type\": \"string\"\n             },\n             \"timeSeriesFilter\": {\n              \"description\": \"Filter parameters to fetch time series.\",\n              \"properties\": {\n               \"aggregation\": {\n                \"description\": \"By default, the raw time series data is returned. Use this field to combine multiple time series for different views of the data.\",\n                \"properties\": {\n                 \"alignmentPeriod\": {\n                  \"description\": \"The `alignment_period` specifies a time interval, in seconds, that is used to divide the data in all the [time series][google.monitoring.v3.TimeSeries] into consistent blocks of time. This will be done before the per-series aligner can be applied to the data.\",\n                  \"type\": \"string\"\n                 },\n                 \"crossSeriesReducer\": {\n                  \"description\": \"The reduction operation to be used to combine time series into a single time series, where the value of each data point in the resulting series is a function of all the already aligned values in the input time series.\",\n                  \"type\": \"string\"\n                 },\n                 \"groupByFields\": {\n                  \"description\": \"The set of fields to preserve when `cross_series_reducer` is specified.\",\n                  \"items\": {\n                   \"type\": \"string\"\n                  },\n                  \"type\": \"array\"\n                 },\n                 \"perSeriesAligner\": {\n                  \"description\": \"An `Aligner` describes how to bring the data points in a single time series into temporal alignment. Except for `ALIGN_NONE`, all alignments cause all the data points in an `alignment_period` to be mathematically grouped together, resulting in a single data point for each `alignment_period` with end timestamp at the end of the period.\",\n                  \"type\": \"string\"\n                 }\n                },\n                \"type\": \"object\"\n               },\n               \"filter\": {\n                \"description\": \"Required. The [monitoring filter](https://cloud.google.com/monitoring/api/v3/filters) that identifies the metric types, resources, and projects to query.\",\n                \"type\": \"string\"\n               },\n               \"pickTimeSeriesFilter\": {\n                \"description\": \"Ranking based time series filter.\",\n                \"properties\": {\n                 \"direction\": {\n                  \"description\": \"How to use the ranking to select time series that pass through the filter.\",\n                  \"type\": \"string\"\n                 },\n                 \"numTimeSeries\": {\n                  \"description\": \"How many time series to allow to pass through the filter.\",\n                  \"format\": \"int32\",\n                  \"type\": \"integer\"\n                 },\n                 \"rankingMethod\": {\n                  \"description\": \"`ranking_method` is applied to each time series independently to produce the value which will be used to compare the time series to other time series.\",\n                  \"type\": \"string\"\n                 }\n                },\n                \"type\": \"object\"\n               },\n               \"secondaryAggregation\": {\n                \"description\": \"Apply a second aggregation after `aggregation` is applied.\",\n                \"properties\": {\n                 \"alignmentPeriod\": {\n                  \"description\": \"The `alignment_period` specifies a time interval, in seconds, that is used to divide the data in all the [time series][google.monitoring.v3.TimeSeries] into consistent blocks of time. This will be done before the per-series aligner can be applied to the data.\",\n                  \"type\": \"string\"\n                 },\n                 \"crossSeriesReducer\": {\n                  \"description\": \"The reduction operation to be used to combine time series into a single time series, where the value of each data point in the resulting series is a function of all the already aligned values in the input time series.\",\n                  \"type\": \"string\"\n                 },\n                 \"groupByFields\": {\n                  \"description\": \"The set of fields to preserve when `cross_series_reducer` is specified.\",\n                  \"items\": {\n                   \"type\": \"string\"\n                  },\n                  \"type\": \"array\"\n                 },\n                 \"perSeriesAligner\": {\n                  \"description\": \"An `Aligner` describes how to bring the data points in a single time series into temporal alignment. Except for `ALIGN_NONE`, all alignments cause all the data points in an `alignment_period` to be mathematically grouped together, resulting in a single data point for each `alignment_period` with end timestamp at the end of the period.\",\n                  \"type\": \"string\"\n                 }\n                },\n                \"type\": \"object\"\n               }\n              },\n              \"required\": [\n               \"filter\"\n              ],\n              \"type\": \"object\"\n             },\n             \"timeSeriesFilterRatio\": {\n              \"description\": \"Parameters to fetch a ratio between two time series filters.\",\n              \"properties\": {\n               \"denominator\": {\n                \"description\": \"The denominator of the ratio.\",\n                \"properties\": {\n                 \"aggregation\": {\n                  \"description\": \"By default, the raw time series data is returned.\",\n                  \"properties\": {\n                   \"alignmentPeriod\": {\n                    \"description\": \"The `alignment_period` specifies a time interval, in seconds, that is used to divide the data in all the [time series][google.monitoring.v3.TimeSeries] into consistent blocks of time. This will be done before the per-series aligner can be applied to the data.\",\n                    \"type\": \"string\"\n                   },\n                   \"crossSeriesReducer\": {\n                    \"description\": \"The reduction operation to be used to combine time series into a single time series, where the value of each data point in the resulting series is a function of all the already aligned values in the input time series.\",\n                    \"type\": \"string\"\n                   },\n                   \"groupByFields\": {\n                    \"description\": \"The set of fields to preserve when `cross_series_reducer` is specified.\",\n                    \"items\": {\n                     \"type\": \"string\"\n                    },\n                    \"type\": \"array\"\n                   },\n                   \"perSeriesAligner\": {\n                    \"description\": \"An `Aligner` describes how to bring the data points in a single time series into temporal alignment. Except for `ALIGN_NONE`, all alignments cause all the data points in an `alignment_period` to be mathematically grouped together, resulting in a single data point for each `alignment_period` with end timestamp at the end of the period.\",\n                    \"type\": \"string\"\n                   }\n                  },\n                  \"type\": \"object\"\n                 },\n                 \"filter\": {\n                  \"description\": \"The [monitoring filter](https://cloud.google.com/monitoring/api/v3/filters) that identifies the metric types, resources, and projects to query.\",\n                  \"type\": \"string\"\n                 }\n                },\n                \"required\": [\n                 \"filter\"\n                ],\n                \"type\": \"object\"\n               },\n               \"numerator\": {\n                \"description\": \"The numerator of the ratio.\",\n                \"properties\": {\n                 \"aggregation\": {\n                  \"description\": \"By default, the raw time series data is returned.\",\n                  \"properties\": {\n                   \"alignmentPeriod\": {\n                    \"description\": \"The `alignment_period` specifies a time interval, in seconds, that is used to divide the data in all the [time series][google.monitoring.v3.TimeSeries] into consistent blocks of time. This will be done before the per-series aligner can be applied to the data.\",\n                    \"type\": \"string\"\n                   },\n                   \"crossSeriesReducer\": {\n                    \"description\": \"The reduction operation to be used to combine time series into a single time series, where the value of each data point in the resulting series is a function of all the already aligned values in the input time series.\",\n                    \"type\": \"string\"\n                   },\n                   \"groupByFields\": {\n                    \"description\": \"The set of fields to preserve when `cross_series_reducer` is specified.\",\n                    \"items\": {\n                     \"type\": \"string\"\n                    },\n                    \"type\": \"array\"\n                   },\n                   \"perSeriesAligner\": {\n                    \"description\": \"An `Aligner` describes how to bring the data points in a single time series into temporal alignment. Except for `ALIGN_NONE`, all alignments cause all the data points in an `alignment_period` to be mathematically grouped together, resulting in a single data point for each `alignment_period` with end timestamp at the end of the period.\",\n                    \"type\": \"string\"\n                   }\n                  },\n                  \"type\": \"object\"\n                 },\n                 \"filter\": {\n                  \"description\": \"The [monitoring filter](https://cloud.google.com/monitoring/api/v3/filters) that identifies the metric types, resources, and projects to query.\",\n                  \"type\": \"string\"\n                 }\n                },\n                \"required\": [\n                 \"filter\"\n                ],\n                \"type\": \"object\"\n               },\n               \"pickTimeSeriesFilter\": {\n                \"description\": \"Ranking based time series filter.\",\n                \"properties\": {\n                 \"direction\": {\n                  \"description\": \"How to use the ranking to select time series that pass through the filter.\",\n                  \"type\": \"string\"\n                 },\n                 \"numTimeSeries\": {\n                  \"description\": \"How many time series to allow to pass through the filter.\",\n                  \"format\": \"int32\",\n                  \"type\": \"integer\"\n                 },\n                 \"rankingMethod\": {\n                  \"description\": \"`ranking_method` is applied to each time series independently to produce the value which will be used to compare the time series to other time series.\",\n                  \"type\": \"string\"\n                 }\n                },\n                \"type\": \"object\"\n               },\n               \"secondaryAggregation\": {\n                \"description\": \"Apply a second aggregation after the ratio is computed.\",\n                \"properties\": {\n                 \"alignmentPeriod\": {\n                  \"description\": \"The `alignment_period` specifies a time interval, in seconds, that is used to divide the data in all the [time series][google.monitoring.v3.TimeSeries] into consistent blocks of time. This will be done before the per-series aligner can be applied to the data.\",\n                  \"type\": \"string\"\n                 },\n                 \"crossSeriesReducer\": {\n                  \"description\": \"The reduction operation to be used to combine time series into a single time series, where the value of each data point in the resulting series is a function of all the already aligned values in the input time series.\",\n                  \"type\": \"string\"\n                 },\n                 \"groupByFields\": {\n                  \"description\": \"The set of fields to preserve when `cross_series_reducer` is specified.\",\n                  \"items\": {\n                   \"type\": \"string\"\n                  },\n                  \"type\": \"array\"\n                 },\n                 \"perSeriesAligner\": {\n                  \"description\": \"An `Aligner` describes how to bring the data points in a single time series into temporal alignment. Except for `ALIGN_NONE`, all alignments cause all the data points in an `alignment_period` to be mathematically grouped together, resulting in a single data point for each `alignment_period` with end timestamp at the end of the period.\",\n                  \"type\": \"string\"\n                 }\n                },\n                \"type\": \"object\"\n               }\n              },\n              \"type\": \"object\"\n             },\n             \"timeSeriesQueryLanguage\": {\n              \"description\": \"A query used to fetch time series with MQL.\",\n              \"type\": \"string\"\n             },\n             \"unitOverride\": {\n              \"description\": \"The unit of data contained in fetched time series. If non-empty, this unit will override any unit that accompanies fetched data. The format is the same as the [`unit`](https://cloud.google.com/monitoring/api/ref_v3/rest/v3/projects.metricDescriptors) field in `MetricDescriptor`.\",\n              \"type\": \"string\"\n             }\n            },\n            \"type\": \"object\"\n           }\n          },\n          \"required\": [\n           \"timeSeriesQuery\"\n          ],\n          \"type\": \"object\"\n         },\n         \"sectionHeader\": {\n          \"description\": \"A widget that defines a section header for easier navigation of the dashboard.\",\n          \"properties\": {\n           \"dividerBelow\": {\n            \"description\": \"Whether to insert a divider below the section in the table of contents\",\n            \"type\": \"boolean\"\n           },\n           \"subtitle\": {\n            \"description\": \"The subtitle of the section\",\n            \"type\": \"string\"\n           }\n          },\n          \"type\": \"object\"\n         },\n         \"singleViewGroup\": {\n          \"description\": \"A widget that groups the other widgets by using a dropdown menu.\",\n          \"type\": \"object\"\n         },\n         \"text\": {\n          \"description\": \"A raw string or markdown displaying textual content.\",\n          \"properties\": {\n           \"content\": {\n            \"description\": \"The text content to be displayed.\",\n            \"type\": \"string\"\n           },\n           \"format\": {\n            \"description\": \"How the text content is formatted.\",\n            \"type\": \"string\"\n           },\n           \"style\": {\n            \"description\": \"How the text is styled\",\n            \"properties\": {\n             \"backgroundColor\": {\n              \"description\": \"The background color as a hex string. \\\"#RRGGBB\\\" or \\\"#RGB\\\"\",\n              \"type\": \"string\"\n             },\n             \"fontSize\": {\n              \"description\": \"Font sizes for both the title and content. The title will still be larger relative to the content.\",\n              \"type\": \"string\"\n             },\n             \"horizontalAlignment\": {\n              \"description\": \"The horizontal alignment of both the title and content\",\n              \"type\": \"string\"\n             },\n             \"padding\": {\n              \"description\": \"The amount of padding around the widget\",\n              \"type\": \"string\"\n             },\n             \"pointerLocation\": {\n              \"description\": \"The pointer location for this widget (also sometimes called a \\\"tail\\\")\",\n              \"type\": \"string\"\n             },\n             \"textColor\": {\n              \"description\": \"The text color as a hex string. \\\"#RRGGBB\\\" or \\\"#RGB\\\"\",\n              \"type\": \"string\"\n             },\n             \"verticalAlignment\": {\n              \"description\": \"The vertical alignment of both the title and content\",\n              \"type\": \"string\"\n             }\n            },\n            \"type\": \"object\"\n           }\n          },\n          \"type\": \"object\"\n         },\n         \"timeSeriesTable\": {\n          \"description\": \"A widget that displays time series data in a tabular format.\",\n          \"properties\": {\n           \"columnSettings\": {\n            \"description\": \"Optional. The list of the persistent column settings for the table.\",\n            \"items\": {\n             \"properties\": {\n              \"column\": {\n               \"description\": \"Required. The id of the column.\",\n               \"type\": \"string\"\n              },\n              \"visible\": {\n               \"description\": \"Required. Whether the column should be visible on page load.\",\n               \"type\": \"boolean\"\n              }\n             },\n             \"required\": [\n              \"column\",\n              \"visible\"\n             ],\n             \"type\": \"object\"\n            },\n            \"type\": \"array\"\n           },\n           \"dataSets\": {\n            \"description\": \"Required. The data displayed in this table.\",\n            \"items\": {\n             \"properties\": {\n              \"minAlignmentPeriod\": {\n               \"description\": \"Optional. The lower bound on data point frequency for this data set.\",\n               \"type\": \"string\"\n              },\n              \"tableDisplayOptions\": {\n               \"description\": \"Optional. Table display options for configuring how the table is rendered.\",\n               \"properties\": {\n                \"shownColumns\": {\n                 \"description\": \"Optional. This field is unused and has been replaced by TimeSeriesTable.column_settings\",\n                 \"items\": {\n                  \"type\": \"string\"\n                 },\n                 \"type\": \"array\"\n                }\n               },\n               \"type\": \"object\"\n              },\n              \"tableTemplate\": {\n               \"description\": \"Optional. A template string for naming `TimeSeries` in the resulting data set.\",\n               \"type\": \"string\"\n              },\n              \"timeSeriesQuery\": {\n               \"description\": \"Required. Fields for querying time series data from the Stackdriver metrics API.\",\n               \"properties\": {\n                \"outputFullDuration\": {\n                 \"description\": \"Optional. If set, Cloud Monitoring will treat the full query duration as the alignment period so that there will be only 1 output value.\",\n                 \"type\": \"boolean\"\n                },\n                \"prometheusQuery\": {\n                 \"description\": \"A query used to fetch time series with PromQL.\",\n                 \"type\": \"string\"\n                },\n                \"timeSeriesFilter\": {\n                 \"description\": \"Filter parameters to fetch time series.\",\n                 \"properties\": {\n                  \"aggregation\": {\n                   \"description\": \"By default, the raw time series data is returned. Use this field to combine multiple time series for different views of the data.\",\n                   \"properties\": {\n                    \"alignmentPeriod\": {\n                     \"description\": \"The `alignment_period` specifies a time interval, in seconds, that is used to divide the data in all the [time series][google.monitoring.v3.TimeSeries] into consistent blocks of time. This will be done before the per-series aligner can be applied to the data.\",\n                     \"type\": \"string\"\n                    },\n                    \"crossSeriesReducer\": {\n                     \"description\": \"The reduction operation to be used to combine time series into a single time series, where the value of each data point in the resulting series is a function of all the already aligned values in the input time series.\",\n                     \"type\": \"string\"\n                    },\n                    \"groupByFields\": {\n                     \"description\": \"The set of fields to preserve when `cross_series_reducer` is specified.\",\n                     \"items\": {\n                      \"type\": \"string\"\n                     },\n                     \"type\": \"array\"\n                    },\n                    \"perSeriesAligner\": {\n                     \"description\": \"An `Aligner` describes how to bring the data points in a single time series into temporal alignment. Except for `ALIGN_NONE`, all alignments cause all the data points in an `alignment_period` to be mathematically grouped together, resulting in a single data point for each `alignment_period` with end timestamp at the end of the period.\",\n                     \"type\": \"string\"\n                    }\n                   },\n                   \"type\": \"object\"\n                  },\n                  \"filter\": {\n                   \"description\": \"Required. The [monitoring filter](https://cloud.google.com/monitoring/api/v3/filters) that identifies the metric types, resources, and projects to query.\",\n                   \"type\": \"string\"\n                  },\n                  \"pickTimeSeriesFilter\": {\n                   \"description\": \"Ranking based time series filter.\",\n                   \"properties\": {\n                    \"direction\": {\n                     \"description\": \"How to use the ranking to select time series that pass through the filter.\",\n                     \"type\": \"string\"\n                    },\n                    \"numTimeSeries\": {\n                     \"description\": \"How many time series to allow to pass through the filter.\",\n                     \"format\": \"int32\",\n                     \"type\": \"integer\"\n                    },\n                    \"rankingMethod\": {\n                     \"description\": \"`ranking_method` is applied to each time series independently to produce the value which will be used to compare the time series to other time series.\",\n                     \"type\": \"string\"\n                    }\n                   },\n                   \"type\": \"object\"\n                  },\n                  \"secondaryAggregation\": {\n                   \"description\": \"Apply a second aggregation after `aggregation` is applied.\",\n                   \"properties\": {\n                    \"alignmentPeriod\": {\n                     \"description\": \"The `alignment_period` specifies a time interval, in seconds, that is used to divide the data in all the [time series][google.monitoring.v3.TimeSeries] into consistent blocks of time. This will be done before the per-series aligner can be applied to the data.\",\n                     \"type\": \"string\"\n                    },\n                    \"crossSeriesReducer\": {\n                     \"description\": \"The reduction operation to be used to combine time series into a single time series, where the value of each data point in the resulting series is a function of all the already aligned values in the input time series.\",\n                     \"type\": \"string\"\n                    },\n                    \"groupByFields\": {\n                     \"description\": \"The set of fields to preserve when `cross_series_reducer` is specified.\",\n                     \"items\": {\n                      \"type\": \"string\"\n                     },\n                     \"type\": \"array\"\n                    },\n                    \"perSeriesAligner\": {\n                     \"description\": \"An `Aligner` describes how to bring the data points in a single time series into temporal alignment. Except for `ALIGN_NONE`, all alignments cause all the data points in an `alignment_period` to be mathematically grouped together, resulting in a single data point for each `alignment_period` with end timestamp at the end of the period.\",\n                     \"type\": \"string\"\n                    }\n                   },\n                   \"type\": \"object\"\n                  }\n                 },\n                 \"required\": [\n                  \"filter\"\n                 ],\n                 \"type\": \"object\"\n                },\n                \"timeSeriesFilterRatio\": {\n                 \"description\": \"Parameters to fetch a ratio between two time series filters.\",\n                 \"properties\": {\n                  \"denominator\": {\n                   \"description\": \"The denominator of the ratio.\",\n                   \"properties\": {\n                    \"aggregation\": {\n                     \"description\": \"By default, the raw time series data is returned.\",\n                     \"properties\": {\n                      \"alignmentPeriod\": {\n                       \"description\": \"The `alignment_period` specifies a time interval, in seconds, that is used to divide the data in all the [time series][google.monitoring.v3.TimeSeries] into consistent blocks of time. This will be done before the per-series aligner can be applied to the data.\",\n                       \"type\": \"string\"\n                      },\n                      \"crossSeriesReducer\": {\n                       \"description\": \"The reduction operation to be used to combine time series into a single time series, where the value of each data point in the resulting series is a function of all the already aligned values in the input time series.\",\n                       \"type\": \"string\"\n                      },\n                      \"groupByFields\": {\n                       \"description\": \"The set of fields to preserve when `cross_series_reducer` is specified.\",\n                       \"items\": {\n                        \"type\": \"string\"\n                       },\n                       \"type\": \"array\"\n                      },\n                      \"perSeriesAligner\": {\n                       \"description\": \"An `Aligner` describes how to bring the data points in a single time series into temporal alignment. Except for `ALIGN_NONE`, all alignments cause all the data points in an `alignment_period` to be mathematically grouped together, resulting in a single data point for each `alignment_period` with end timestamp at the end of the period.\",\n                       \"type\": \"string\"\n                      }\n                     },\n                     \"type\": \"object\"\n                    },\n                    \"filter\": {\n                     \"description\": \"The [monitoring filter](https://cloud.google.com/monitoring/api/v3/filters) that identifies the metric types, resources, and projects to query.\",\n                     \"type\": \"string\"\n                    }\n                   },\n                   \"required\": [\n                    \"filter\"\n                   ],\n                   \"type\": \"object\"\n                  },\n                  \"numerator\": {\n                   \"description\": \"The numerator of the ratio.\",\n                   \"properties\": {\n                    \"aggregation\": {\n                     \"description\": \"By default, the raw time series data is returned.\",\n                     \"properties\": {\n                      \"alignmentPeriod\": {\n                       \"description\": \"The `alignment_period` specifies a time interval, in seconds, that is used to divide the data in all the [time series][google.monitoring.v3.TimeSeries] into consistent blocks of time. This will be done before the per-series aligner can be applied to the data.\",\n                       \"type\": \"string\"\n                      },\n                      \"crossSeriesReducer\": {\n                       \"description\": \"The reduction operation to be used to combine time series into a single time series, where the value of each data point in the resulting series is a function of all the already aligned values in the input time series.\",\n                       \"type\": \"string\"\n                      },\n                      \"groupByFields\": {\n                       \"description\": \"The set of fields to preserve when `cross_series_reducer` is specified.\",\n                       \"items\": {\n                        \"type\": \"string\"\n                       },\n                       \"type\": \"array\"\n                      },\n                      \"perSeriesAligner\": {\n                       \"description\": \"An `Aligner` describes how to bring the data points in a single time series into temporal alignment. Except for `ALIGN_NONE`, all alignments cause all the data points in an `alignment_period` to be mathematically grouped together, resulting in a single data point for each `alignment_period` with end timestamp at the end of the period.\",\n                       \"type\": \"string\"\n                      }\n                     },\n                     \"type\": \"object\"\n                    },\n                    \"filter\": {\n                     \"description\": \"The [monitoring filter](https://cloud.google.com/monitoring/api/v3/filters) that identifies the metric types, resources, and projects to query.\",\n                     \"type\": \"string\"\n                    }\n                   },\n                   \"required\": [\n                    \"filter\"\n                   ],\n                   \"type\": \"object\"\n                  },\n                  \"pickTimeSeriesFilter\": {\n                   \"description\": \"Ranking based time series filter.\",\n                   \"properties\": {\n                    \"direction\": {\n                     \"description\": \"How to use the ranking to select time series that pass through the filter.\",\n                     \"type\": \"string\"\n                    },\n                    \"numTimeSeries\": {\n                     \"description\": \"How many time series to allow to pass through the filter.\",\n                     \"format\": \"int32\",\n                     \"type\": \"integer\"\n                    },\n                    \"rankingMethod\": {\n                     \"description\": \"`ranking_method` is applied to each time series independently to produce the value which will be used to compare the time series to other time series.\",\n                     \"type\": \"string\"\n                    }\n                   },\n                   \"type\": \"object\"\n                  },\n                  \"secondaryAggregation\": {\n                   \"description\": \"Apply a second aggregation after the ratio is computed.\",\n                   \"properties\": {\n                    \"alignmentPeriod\": {\n                     \"description\": \"The `alignment_period` specifies a time interval, in seconds, that is used to divide the data in all the [time series][google.monitoring.v3.TimeSeries] into consistent blocks of time. This will be done before the per-series aligner can be applied to the data.\",\n                     \"type\": \"string\"\n                    },\n                    \"crossSeriesReducer\": {\n                     \"description\": \"The reduction operation to be used to combine time series into a single time series, where the value of each data point in the resulting series is a function of all the already aligned values in the input time series.\",\n                     \"type\": \"string\"\n                    },\n                    \"groupByFields\": {\n                     \"description\": \"The set of fields to preserve when `cross_series_reducer` is specified.\",\n                     \"items\": {\n                      \"type\": \"string\"\n                     },\n                     \"type\": \"array\"\n                    },\n                    \"perSeriesAligner\": {\n                     \"description\": \"An `Aligner` describes how to bring the data points in a single time series into temporal alignment. Except for `ALIGN_NONE`, all alignments cause all the data points in an `alignment_period` to be mathematically grouped together, resulting in a single data point for each `alignment_period` with end timestamp at the end of the period.\",\n                     \"type\": \"string\"\n                    }\n                   },\n                   \"type\": \"object\"\n                  }\n                 },\n                 \"type\": \"object\"\n                },\n                \"timeSeriesQueryLanguage\": {\n                 \"description\": \"A query used to fetch time series with MQL.\",\n                 \"type\": \"string\"\n                },\n                \"unitOverride\": {\n                 \"description\": \"The unit of data contained in fetched time series. If non-empty, this unit will override any unit that accompanies fetched data. The format is the same as the [`unit`](https://cloud.google.com/monitoring/api/ref_v3/rest/v3/projects.metricDescriptors) field in `MetricDescriptor`.\",\n                 \"type\": \"string\"\n                }\n               },\n               \"type\": \"object\"\n              }\n             },\n             \"type\": \"object\"\n            },\n            \"type\": \"array\"\n           },\n           \"metricVisualization\": {\n            \"description\": \"Optional. Store rendering strategy\",\n            \"type\": \"string\"\n           }\n          },\n          \"required\": [\n           \"dataSets\"\n          ],\n          \"type\": \"object\"\n         },\n         \"title\": {\n          \"description\": \"Optional. The title of the widget.\",\n          \"type\": \"string\"\n         },\n         \"xyChart\": {\n          \"description\": \"A chart of time series data.\",\n          \"properties\": {\n           \"chartOptions\": {\n            \"description\": \"Display options for the chart.\",\n            \"properties\": {\n             \"mode\": {\n              \"description\": \"The chart mode.\",\n              \"type\": \"string\"\n             }\n            },\n            \"type\": \"object\"\n           },\n           \"dataSets\": {\n            \"description\": \"Required. The data displayed in this chart.\",\n            \"items\": {\n             \"properties\": {\n              \"legendTemplate\": {\n               \"description\": \"A template string for naming `TimeSeries` in the resulting data set.\",\n               \"type\": \"string\"\n              },\n              \"minAlignmentPeriod\": {\n               \"description\": \"Optional. The lower bound on data point frequency for this data set.\",\n               \"type\": \"string\"\n              },\n              \"plotType\": {\n               \"description\": \"How this data should be plotted on the chart.\",\n               \"type\": \"string\"\n              },\n              \"targetAxis\": {\n               \"description\": \"Optional. The target axis to use for plotting the metric.\",\n               \"type\": \"string\"\n              },\n              \"timeSeriesQuery\": {\n               \"description\": \"Fields for querying time series data from the Stackdriver metrics API.\",\n               \"properties\": {\n                \"outputFullDuration\": {\n                 \"description\": \"Optional. If set, Cloud Monitoring will treat the full query duration as the alignment period so that there will be only 1 output value.\",\n                 \"type\": \"boolean\"\n                },\n                \"prometheusQuery\": {\n                 \"description\": \"A query used to fetch time series with PromQL.\",\n                 \"type\": \"string\"\n                },\n                \"timeSeriesFilter\": {\n                 \"description\": \"Filter parameters to fetch time series.\",\n                 \"properties\": {\n                  \"aggregation\": {\n                   \"description\": \"By default, the raw time series data is returned. Use this field to combine multiple time series for different views of the data.\",\n                   \"properties\": {\n                    \"alignmentPeriod\": {\n                     \"description\": \"The `alignment_period` specifies a time interval, in seconds, that is used to divide the data in all the [time series][google.monitoring.v3.TimeSeries] into consistent blocks of time. This will be done before the per-series aligner can be applied to the data.\",\n                     \"type\": \"string\"\n                    },\n                    \"crossSeriesReducer\": {\n                     \"description\": \"The reduction operation to be used to combine time series into a single time series, where the value of each data point in the resulting series is a function of all the already aligned values in the input time series.\",\n                     \"type\": \"string\"\n                    },\n                    \"groupByFields\": {\n                     \"description\": \"The set of fields to preserve when `cross_series_reducer` is specified.\",\n                     \"items\": {\n                      \"type\": \"string\"\n                     },\n                     \"type\": \"array\"\n                    },\n                    \"perSeriesAligner\": {\n                     \"description\": \"An `Aligner` describes how to bring the data points in a single time series into temporal alignment. Except for `ALIGN_NONE`, all alignments cause all the data points in an `alignment_period` to be mathematically grouped together, resulting in a single data point for each `alignment_period` with end timestamp at the end of the period.\",\n                     \"type\": \"string\"\n                    }\n                   },\n                   \"type\": \"object\"\n                  },\n                  \"filter\": {\n                   \"description\": \"Required. The [monitoring filter](https://cloud.google.com/monitoring/api/v3/filters) that identifies the metric types, resources, and projects to query.\",\n                   \"type\": \"string\"\n                  },\n                  \"pickTimeSeriesFilter\": {\n                   \"description\": \"Ranking based time series filter.\",\n                   \"properties\": {\n                    \"direction\": {\n                     \"description\": \"How to use the ranking to select time series that pass through the filter.\",\n                     \"type\": \"string\"\n                    },\n                    \"numTimeSeries\": {\n                     \"description\": \"How many time series to allow to pass through the filter.\",\n                     \"format\": \"int32\",\n                     \"type\": \"integer\"\n                    },\n                    \"rankingMethod\": {\n                     \"description\": \"`ranking_method` is applied to each time series independently to produce the value which will be used to compare the time series to other time series.\",\n                     \"type\": \"string\"\n                    }\n                   },\n                   \"type\": \"object\"\n                  },\n                  \"secondaryAggregation\": {\n                   \"description\": \"Apply a second aggregation after `aggregation` is applied.\",\n                   \"properties\": {\n                    \"alignmentPeriod\": {\n                     \"description\": \"The `alignment_period` specifies a time interval, in seconds, that is used to divide the data in all the [time series][google.monitoring.v3.TimeSeries] into consistent blocks of time. This will be done before the per-series aligner can be applied to the data.\",\n                     \"type\": \"string\"\n                    },\n                    \"crossSeriesReducer\": {\n                     \"description\": \"The reduction operation to be used to combine time series into a single time series, where the value of each data point in the resulting series is a function of all the already aligned values in the input time series.\",\n                     \"type\": \"string\"\n                    },\n                    \"groupByFields\": {\n                     \"description\": \"The set of fields to preserve when `cross_series_reducer` is specified.\",\n                     \"items\": {\n                      \"type\": \"string\"\n                     },\n                     \"type\": \"array\"\n                    },\n                    \"perSeriesAligner\": {\n                     \"description\": \"An `Aligner` describes how to bring the data points in a single time series into temporal alignment. Except for `ALIGN_NONE`, all alignments cause all the data points in an `alignment_period` to be mathematically grouped together, resulting in a single data point for each `alignment_period` with end timestamp at the end of the period.\",\n                     \"type\": \"string\"\n                    }\n                   },\n                   \"type\": \"object\"\n                  }\n                 },\n                 \"required\": [\n                  \"filter\"\n                 ],\n                 \"type\": \"object\"\n                },\n                \"timeSeriesFilterRatio\": {\n                 \"description\": \"Parameters to fetch a ratio between two time series filters.\",\n                 \"properties\": {\n                  \"denominator\": {\n                   \"description\": \"The denominator of the ratio.\",\n                   \"properties\": {\n                    \"aggregation\": {\n                     \"description\": \"By default, the raw time series data is returned.\",\n                     \"properties\": {\n                      \"alignmentPeriod\": {\n                       \"description\": \"The `alignment_period` specifies a time interval, in seconds, that is used to divide the data in all the [time series][google.monitoring.v3.TimeSeries] into consistent blocks of time. This will be done before the per-series aligner can be applied to the data.\",\n                       \"type\": \"string\"\n                      },\n                      \"crossSeriesReducer\": {\n                       \"description\": \"The reduction operation to be used to combine time series into a single time series, where the value of each data point in the resulting series is a function of all the already aligned values in the input time series.\",\n                       \"type\": \"string\"\n                      },\n                      \"groupByFields\": {\n                       \"description\": \"The set of fields to preserve when `cross_series_reducer` is specified.\",\n                       \"items\": {\n                        \"type\": \"string\"\n                       },\n                       \"type\": \"array\"\n                      },\n                      \"perSeriesAligner\": {\n                       \"description\": \"An `Aligner` describes how to bring the data points in a single time series into temporal alignment. Except for `ALIGN_NONE`, all alignments cause all the data points in an `alignment_period` to be mathematically grouped together, resulting in a single data point for each `alignment_period` with end timestamp at the end of the period.\",\n                       \"type\": \"string\"\n                      }\n                     },\n                     \"type\": \"object\"\n                    },\n                    \"filter\": {\n                     \"description\": \"The [monitoring filter](https://cloud.google.com/monitoring/api/v3/filters) that identifies the metric types, resources, and projects to query.\",\n                     \"type\": \"string\"\n                    }\n                   },\n                   \"required\": [\n                    \"filter\"\n                   ],\n                   \"type\": \"object\"\n                  },\n                  \"numerator\": {\n                   \"description\": \"The numerator of the ratio.\",\n                   \"properties\": {\n                    \"aggregation\": {\n                     \"description\": \"By default, the raw time series data is returned.\",\n                     \"properties\": {\n                      \"alignmentPeriod\": {\n                       \"description\": \"The `alignment_period` specifies a time interval, in seconds, that is used to divide the data in all the [time series][google.monitoring.v3.TimeSeries] into consistent blocks of time. This will be done before the per-series aligner can be applied to the data.\",\n                       \"type\": \"string\"\n                      },\n                      \"crossSeriesReducer\": {\n                       \"description\": \"The reduction operation to be used to combine time series into a single time series, where the value of each data point in the resulting series is a function of all the already aligned values in the input time series.\",\n                       \"type\": \"string\"\n                      },\n                      \"groupByFields\": {\n                       \"description\": \"The set of fields to preserve when `cross_series_reducer` is specified.\",\n                       \"items\": {\n                        \"type\": \"string\"\n                       },\n                       \"type\": \"array\"\n                      },\n                      \"perSeriesAligner\": {\n                       \"description\": \"An `Aligner` describes how to bring the data points in a single time series into temporal alignment. Except for `ALIGN_NONE`, all alignments cause all the data points in an `alignment_period` to be mathematically grouped together, resulting in a single data point for each `alignment_period` with end timestamp at the end of the period.\",\n                       \"type\": \"string\"\n                      }\n                     },\n                     \"type\": \"object\"\n                    },\n                    \"filter\": {\n                     \"description\": \"The [monitoring filter](https://cloud.google.com/monitoring/api/v3/filters) that identifies the metric types, resources, and projects to query.\",\n                     \"type\": \"string\"\n                    }\n                   },\n                   \"required\": [\n                    \"filter\"\n                   ],\n                   \"type\": \"object\"\n                  },\n                  \"pickTimeSeriesFilter\": {\n                   \"description\": \"Ranking based time series filter.\",\n                   \"properties\": {\n                    \"direction\": {\n                     \"description\": \"How to use the ranking to select time series that pass through the filter.\",\n                     \"type\": \"string\"\n                    },\n                    \"numTimeSeries\": {\n                     \"description\": \"How many time series to allow to pass through the filter.\",\n                     \"format\": \"int32\",\n                     \"type\": \"integer\"\n                    },\n                    \"rankingMethod\": {\n                     \"description\": \"`ranking_method` is applied to each time series independently to produce the value which will be used to compare the time series to other time series.\",\n                     \"type\": \"string\"\n                    }\n                   },\n                   \"type\": \"object\"\n                  },\n                  \"secondaryAggregation\": {\n                   \"description\": \"Apply a second aggregation after the ratio is computed.\",\n                   \"properties\": {\n                    \"alignmentPeriod\": {\n                     \"description\": \"The `alignment_period` specifies a time interval, in seconds, that is used to divide the data in all the [time series][google.monitoring.v3.TimeSeries] into consistent blocks of time. This will be done before the per-series aligner can be applied to the data.\",\n                     \"type\": \"string\"\n                    },\n                    \"crossSeriesReducer\": {\n                     \"description\": \"The reduction operation to be used to combine time series into a single time series, where the value of each data point in the resulting series is a function of all the already aligned values in the input time series.\",\n                     \"type\": \"string\"\n                    },\n                    \"groupByFields\": {\n                     \"description\": \"The set of fields to preserve when `cross_series_reducer` is specified.\",\n                     \"items\": {\n                      \"type\": \"string\"\n                     },\n                     \"type\": \"array\"\n                    },\n                    \"perSeriesAligner\": {\n                     \"description\": \"An `Aligner` describes how to bring the data points in a single time series into temporal alignment. Except for `ALIGN_NONE`, all alignments cause all the data points in an `alignment_period` to be mathematically grouped together, resulting in a single data point for each `alignment_period` with end timestamp at the end of the period.\",\n                     \"type\": \"string\"\n                    }\n                   },\n                   \"type\": \"object\"\n                  }\n                 },\n                 \"type\": \"object\"\n                },\n                \"timeSeriesQueryLanguage\": {\n                 \"description\": \"A query used to fetch time series with MQL.\",\n                 \"type\": \"string\"\n                },\n                \"unitOverride\": {\n                 \"description\": \"The unit of data contained in fetched time series. If non-empty, this unit will override any unit that accompanies fetched data. The format is the same as the [`unit`](https://cloud.google.com/monitoring/api/ref_v3/rest/v3/projects.metricDescriptors) field in `MetricDescriptor`.\",\n                 \"type\": \"string\"\n                }\n               },\n               \"type\": \"object\"\n              }\n             },\n             \"required\": [\n              \"timeSeriesQuery\"\n             ],\n             \"type\": \"object\"\n            },\n            \"type\": \"array\"\n           },\n           \"thresholds\": {\n            \"description\": \"Threshold lines drawn horizontally across the chart.\",\n            \"items\": {\n             \"properties\": {\n              \"color\": {\n               \"description\": \"The state color for this threshold. Color is not allowed in a XyChart.\",\n               \"type\": \"string\"\n              },\n              \"direction\": {\n               \"description\": \"The direction for the current threshold. Direction is not allowed in a XyChart.\",\n               \"type\": \"string\"\n              },\n              \"label\": {\n               \"description\": \"A label for the threshold.\",\n               \"type\": \"string\"\n              },\n              \"targetAxis\": {\n               \"description\": \"The target axis to use for plotting the threshold. Target axis is not allowed in a Scorecard.\",\n               \"type\": \"string\"\n              },\n              \"value\": {\n               \"description\": \"The value of the threshold. The value should be defined in the native scale of the metric.\",\n               \"format\": \"double\",\n               \"type\": \"number\"\n              }\n             },\n             \"type\": \"object\"\n            },\n            \"type\": \"array\"\n           },\n           \"timeshiftDuration\": {\n            \"description\": \"The duration used to display a comparison chart.\",\n            \"type\": \"string\"\n           },\n           \"xAxis\": {\n            \"description\": \"The properties applied to the x-axis.\",\n            \"properties\": {\n             \"label\": {\n              \"description\": \"The label of the axis.\",\n              \"type\": \"string\"\n             },\n             \"scale\": {\n              \"description\": \"The axis scale. By default, a linear scale is used.\",\n              \"type\": \"string\"\n             }\n            },\n            \"type\": \"object\"\n           },\n           \"y2Axis\": {\n            \"description\": \"The properties applied to the y2-axis.\",\n            \"properties\": {\n             \"label\": {\n              \"description\": \"The label of the axis.\",\n              \"type\": \"string\"\n             },\n             \"scale\": {\n              \"description\": \"The axis scale. By default, a linear scale is used.\",\n              \"type\": \"string\"\n             }\n            },\n            \"type\": \"object\"\n           },\n           \"yAxis\": {\n            \"description\": \"The properties applied to the y-axis.\",\n            \"properties\": {\n             \"label\": {\n              \"description\": \"The label of the axis.\",\n              \"type\": \"string\"\n             },\n             \"scale\": {\n              \"description\": \"The axis scale. By default, a linear scale is used.\",\n              \"type\": \"string\"\n             }\n            },\n            \"type\": \"object\"\n           }\n          },\n          \"required\": [\n           \"dataSets\"\n          ],\n          \"type\": \"object\"\n         }\n        },\n        \"type\": \"object\"\n       },\n       \"type\": \"array\"\n      }\n     },\n     \"type\": \"object\"\n    },\n    \"mosaicLayout\": {\n     \"description\": \"The content is arranged as a grid of tiles, with each content widget occupying one or more grid blocks.\",\n     \"properties\": {\n      \"columns\": {\n       \"description\": \"The number of columns in the mosaic grid. The number of columns must be between 1 and 12, inclusive.\",\n       \"format\": \"int32\",\n       \"type\": \"integer\"\n      },\n      \"tiles\": {\n       \"description\": \"The tiles to display.\",\n       \"items\": {\n        \"properties\": {\n         \"height\": {\n          \"description\": \"The height of the tile, measured in grid blocks. Tiles must have a minimum height of 1.\",\n          \"format\": \"int32\",\n          \"type\": \"integer\"\n         },\n         \"widget\": {\n          \"description\": \"The informational widget contained in the tile. For example an `XyChart`.\",\n          \"properties\": {\n           \"alertChart\": {\n            \"description\": \"A chart of alert policy data.\",\n            \"properties\": {\n             \"alertPolicyRef\": {\n              \"description\": \"Required. A reference to the MonitoringAlertPolicy.\",\n              \"oneOf\": [\n               {\n                \"not\": {\n                 \"required\": [\n                  \"external\"\n                 ]\n                },\n                \"required\": [\n                 \"name\"\n                ]\n               },\n               {\n                \"not\": {\n                 \"anyOf\": [\n                  {\n                   \"required\": [\n                    \"name\"\n                   ]\n                  },\n                  {\n                   \"required\": [\n                    \"namespace\"\n                   ]\n                  }\n                 ]\n                },\n                \"required\": [\n                 \"external\"\n                ]\n               }\n              ],\n              \"properties\": {\n               \"external\": {\n                \"description\": \"The MonitoringAlertPolicy link in the form \\\"projects/[PROJECT_ID_OR_NUMBER]/alertPolicies/[ALERT_POLICY_ID]\\\", when not managed by Config Connector.\",\n                \"type\": \"string\"\n               },\n               \"name\": {\n                \"description\": \"The `name` field of a `MonitoringAlertPolicy` resource.\",\n                \"type\": \"string\"\n               },\n               \"namespace\": {\n                \"description\": \"The `namespace` field of a `MonitoringAlertPolicy` resource.\",\n                \"type\": \"string\"\n               }\n              },\n              \"type\": \"object\"\n             }\n            },\n            \"required\": [\n             \"alertPolicyRef\"\n            ],\n            \"type\": \"object\"\n           },\n           \"blank\": {\n            \"description\": \"A blank space.\",\n            \"type\": \"object\"\n           },\n           \"collapsibleGroup\": {\n            \"description\": \"A widget that groups the other widgets. All widgets that are within the area spanned by the grouping widget are considered member widgets.\",\n            \"properties\": {\n             \"collapsed\": {\n              \"description\": \"The collapsed state of the widget on first page load.\",\n              \"type\": \"boolean\"\n             }\n            },\n            \"type\": \"object\"\n           },\n           \"errorReportingPanel\": {\n            \"description\": \"A widget that displays a list of error groups.\",\n            \"properties\": {\n             \"projectRefs\": {\n              \"description\": \"The projects from which to gather errors.\",\n              \"items\": {\n               \"description\": \"The Project that this resource belongs to.\",\n               \"oneOf\": [\n                {\n                 \"not\": {\n                  \"required\": [\n                   \"external\"\n                  ]\n                 },\n                 \"required\": [\n                  \"name\",\n                  \"kind\"\n                 ]\n                },\n                {\n                 \"not\": {\n                  \"anyOf\": [\n                   {\n                    \"required\": [\n                     \"name\"\n                    ]\n                   },\n                   {\n                    \"required\": [\n                     \"namespace\"\n                    ]\n                   },\n                   {\n                    \"required\": [\n                     \"kind\"\n                    ]\n                   }\n                  ]\n                 },\n                 \"required\": [\n                  \"external\"\n                 ]\n                }\n               ],\n               \"properties\": {\n                \"external\": {\n                 \"description\": \"The `projectID` field of a project, when not managed by Config Connector.\",\n                 \"type\": \"string\"\n                },\n                \"kind\": {\n                 \"description\": \"The kind of the Project resource; optional but must be `Project` if provided.\",\n                 \"type\": \"string\"\n                },\n                \"name\": {\n                 \"description\": \"The `name` field of a `Project` resource.\",\n                 \"type\": \"string\"\n                },\n                \"namespace\": {\n                 \"description\": \"The `namespace` field of a `Project` resource.\",\n                 \"type\": \"string\"\n                }\n               },\n               \"type\": \"object\"\n              },\n              \"type\": \"array\"\n             },\n             \"services\": {\n              \"description\": \"An identifier of the service, such as the name of the executable, job, or Google App Engine service name. This field is expected to have a low number of values that are relatively stable over time, as opposed to `version`, which can be changed whenever new code is deployed.\",\n              \"items\": {\n               \"type\": \"string\"\n              },\n              \"type\": \"array\"\n             },\n             \"versions\": {\n              \"description\": \"Represents the source code version that the developer provided, which could represent a version label or a Git SHA-1 hash, for example. For App Engine standard environment, the version is set to the version of the app.\",\n              \"items\": {\n               \"type\": \"string\"\n              },\n              \"type\": \"array\"\n             }\n            },\n            \"type\": \"object\"\n           },\n           \"id\": {\n            \"description\": \"Optional. The widget id. Ids may be made up of alphanumerics, dashes and underscores. Widget ids are optional.\",\n            \"type\": \"string\"\n           },\n           \"incidentList\": {\n            \"description\": \"A widget that shows list of incidents.\",\n            \"properties\": {\n             \"monitoredResources\": {\n              \"description\": \"Optional. The monitored resource for which incidents are listed.\",\n              \"items\": {\n               \"properties\": {\n                \"labels\": {\n                 \"additionalProperties\": {\n                  \"type\": \"string\"\n                 },\n                 \"description\": \"Required. Values for all of the labels listed in the associated monitored resource descriptor.\",\n                 \"type\": \"object\"\n                },\n                \"type\": {\n                 \"description\": \"Required. The monitored resource type. This field must match the `type` field of a [MonitoredResourceDescriptor][google.api.MonitoredResourceDescriptor] object.\",\n                 \"type\": \"string\"\n                }\n               },\n               \"type\": \"object\"\n              },\n              \"type\": \"array\"\n             },\n             \"policyRefs\": {\n              \"description\": \"Optional. A list of alert policies to filter the incident list by.\",\n              \"items\": {\n               \"oneOf\": [\n                {\n                 \"not\": {\n                  \"required\": [\n                   \"external\"\n                  ]\n                 },\n                 \"required\": [\n                  \"name\"\n                 ]\n                },\n                {\n                 \"not\": {\n                  \"anyOf\": [\n                   {\n                    \"required\": [\n                     \"name\"\n                    ]\n                   },\n                   {\n                    \"required\": [\n                     \"namespace\"\n                    ]\n                   }\n                  ]\n                 },\n                 \"required\": [\n                  \"external\"\n                 ]\n                }\n               ],\n               \"properties\": {\n                \"external\": {\n                 \"description\": \"The MonitoringAlertPolicy link in the form \\\"projects/[PROJECT_ID_OR_NUMBER]/alertPolicies/[ALERT_POLICY_ID]\\\", when not managed by Config Connector.\",\n                 \"type\": \"string\"\n                },\n                \"name\": {\n                 \"description\": \"The `name` field of a `MonitoringAlertPolicy` resource.\",\n                 \"type\": \"string\"\n                },\n                \"namespace\": {\n                 \"description\": \"The `namespace` field of a `MonitoringAlertPolicy` resource.\",\n                 \"type\": \"string\"\n                }\n               },\n               \"type\": \"object\"\n              },\n              \"type\": \"array\"\n             }\n            },\n            \"type\": \"object\"\n           },\n           \"logsPanel\": {\n            \"description\": \"A widget that shows a stream of logs.\",\n            \"properties\": {\n             \"filter\": {\n              \"description\": \"A filter that chooses which log entries to return.  See [Advanced Logs Queries](https://cloud.google.com/logging/docs/view/advanced-queries).\",\n              \"type\": \"string\"\n             },\n             \"resourceNames\": {\n              \"description\": \"The names of logging resources to collect logs for.\",\n              \"items\": {\n               \"oneOf\": [\n                {\n                 \"not\": {\n                  \"required\": [\n                   \"external\"\n                  ]\n                 },\n                 \"required\": [\n                  \"name\",\n                  \"kind\"\n                 ]\n                },\n                {\n                 \"not\": {\n                  \"anyOf\": [\n                   {\n                    \"required\": [\n                     \"name\"\n                    ]\n                   },\n                   {\n                    \"required\": [\n                     \"namespace\"\n                    ]\n                   },\n                   {\n                    \"required\": [\n                     \"kind\"\n                    ]\n                   }\n                  ]\n                 },\n                 \"required\": [\n                  \"external\"\n                 ]\n                }\n               ],\n               \"properties\": {\n                \"external\": {\n                 \"description\": \"The external name of the referenced resource\",\n                 \"type\": \"string\"\n                },\n                \"kind\": {\n                 \"description\": \"Kind of the referent.\",\n                 \"type\": \"string\"\n                },\n                \"name\": {\n                 \"description\": \"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\",\n                 \"type\": \"string\"\n                },\n                \"namespace\": {\n                 \"description\": \"Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/\",\n                 \"type\": \"string\"\n                }\n               },\n               \"type\": \"object\"\n              },\n              \"type\": \"array\"\n             }\n            },\n            \"type\": \"object\"\n           },\n           \"pieChart\": {\n            \"description\": \"A widget that displays timeseries data as a pie chart.\",\n            \"properties\": {\n             \"chartType\": {\n              \"description\": \"Required. Indicates the visualization type for the PieChart.\",\n              \"type\": \"string\"\n             },\n             \"dataSets\": {\n              \"description\": \"Required. The queries for the chart's data.\",\n              \"items\": {\n               \"properties\": {\n                \"minAlignmentPeriod\": {\n                 \"description\": \"Optional. The lower bound on data point frequency for this data set.\",\n                 \"type\": \"string\"\n                },\n                \"sliceNameTemplate\": {\n                 \"description\": \"Optional. A template for the name of the slice.\",\n                 \"type\": \"string\"\n                },\n                \"timeSeriesQuery\": {\n                 \"description\": \"Required. The query for the PieChart. See, `google.monitoring.dashboard.v1.TimeSeriesQuery`.\",\n                 \"properties\": {\n                  \"outputFullDuration\": {\n                   \"description\": \"Optional. If set, Cloud Monitoring will treat the full query duration as the alignment period so that there will be only 1 output value.\",\n                   \"type\": \"boolean\"\n                  },\n                  \"prometheusQuery\": {\n                   \"description\": \"A query used to fetch time series with PromQL.\",\n                   \"type\": \"string\"\n                  },\n                  \"timeSeriesFilter\": {\n                   \"description\": \"Filter parameters to fetch time series.\",\n                   \"properties\": {\n                    \"aggregation\": {\n                     \"description\": \"By default, the raw time series data is returned. Use this field to combine multiple time series for different views of the data.\",\n                     \"properties\": {\n                      \"alignmentPeriod\": {\n                       \"description\": \"The `alignment_period` specifies a time interval, in seconds, that is used to divide the data in all the [time series][google.monitoring.v3.TimeSeries] into consistent blocks of time. This will be done before the per-series aligner can be applied to the data.\",\n                       \"type\": \"string\"\n                      },\n                      \"crossSeriesReducer\": {\n                       \"description\": \"The reduction operation to be used to combine time series into a single time series, where the value of each data point in the resulting series is a function of all the already aligned values in the input time series.\",\n                       \"type\": \"string\"\n                      },\n                      \"groupByFields\": {\n                       \"description\": \"The set of fields to preserve when `cross_series_reducer` is specified.\",\n                       \"items\": {\n                        \"type\": \"string\"\n                       },\n                       \"type\": \"array\"\n                      },\n                      \"perSeriesAligner\": {\n                       \"description\": \"An `Aligner` describes how to bring the data points in a single time series into temporal alignment. Except for `ALIGN_NONE`, all alignments cause all the data points in an `alignment_period` to be mathematically grouped together, resulting in a single data point for each `alignment_period` with end timestamp at the end of the period.\",\n                       \"type\": \"string\"\n                      }\n                     },\n                     \"type\": \"object\"\n                    },\n                    \"filter\": {\n                     \"description\": \"Required. The [monitoring filter](https://cloud.google.com/monitoring/api/v3/filters) that identifies the metric types, resources, and projects to query.\",\n                     \"type\": \"string\"\n                    },\n                    \"pickTimeSeriesFilter\": {\n                     \"description\": \"Ranking based time series filter.\",\n                     \"properties\": {\n                      \"direction\": {\n                       \"description\": \"How to use the ranking to select time series that pass through the filter.\",\n                       \"type\": \"string\"\n                      },\n                      \"numTimeSeries\": {\n                       \"description\": \"How many time series to allow to pass through the filter.\",\n                       \"format\": \"int32\",\n                       \"type\": \"integer\"\n                      },\n                      \"rankingMethod\": {\n                       \"description\": \"`ranking_method` is applied to each time series independently to produce the value which will be used to compare the time series to other time series.\",\n                       \"type\": \"string\"\n                      }\n                     },\n                     \"type\": \"object\"\n                    },\n                    \"secondaryAggregation\": {\n                     \"description\": \"Apply a second aggregation after `aggregation` is applied.\",\n                     \"properties\": {\n                      \"alignmentPeriod\": {\n                       \"description\": \"The `alignment_period` specifies a time interval, in seconds, that is used to divide the data in all the [time series][google.monitoring.v3.TimeSeries] into consistent blocks of time. This will be done before the per-series aligner can be applied to the data.\",\n                       \"type\": \"string\"\n                      },\n                      \"crossSeriesReducer\": {\n                       \"description\": \"The reduction operation to be used to combine time series into a single time series, where the value of each data point in the resulting series is a function of all the already aligned values in the input time series.\",\n                       \"type\": \"string\"\n                      },\n                      \"groupByFields\": {\n                       \"description\": \"The set of fields to preserve when `cross_series_reducer` is specified.\",\n                       \"items\": {\n                        \"type\": \"string\"\n                       },\n                       \"type\": \"array\"\n                      },\n                      \"perSeriesAligner\": {\n                       \"description\": \"An `Aligner` describes how to bring the data points in a single time series into temporal alignment. Except for `ALIGN_NONE`, all alignments cause all the data points in an `alignment_period` to be mathematically grouped together, resulting in a single data point for each `alignment_period` with end timestamp at the end of the period.\",\n                       \"type\": \"string\"\n                      }\n                     },\n                     \"type\": \"object\"\n                    }\n                   },\n                   \"required\": [\n                    \"filter\"\n                   ],\n                   \"type\": \"object\"\n                  },\n                  \"timeSeriesFilterRatio\": {\n                   \"description\": \"Parameters to fetch a ratio between two time series filters.\",\n                   \"properties\": {\n                    \"denominator\": {\n                     \"description\": \"The denominator of the ratio.\",\n                     \"properties\": {\n                      \"aggregation\": {\n                       \"description\": \"By default, the raw time series data is returned.\",\n                       \"properties\": {\n                        \"alignmentPeriod\": {\n                         \"description\": \"The `alignment_period` specifies a time interval, in seconds, that is used to divide the data in all the [time series][google.monitoring.v3.TimeSeries] into consistent blocks of time. This will be done before the per-series aligner can be applied to the data.\",\n                         \"type\": \"string\"\n                        },\n                        \"crossSeriesReducer\": {\n                         \"description\": \"The reduction operation to be used to combine time series into a single time series, where the value of each data point in the resulting series is a function of all the already aligned values in the input time series.\",\n                         \"type\": \"string\"\n                        },\n                        \"groupByFields\": {\n                         \"description\": \"The set of fields to preserve when `cross_series_reducer` is specified.\",\n                         \"items\": {\n                          \"type\": \"string\"\n                         },\n                         \"type\": \"array\"\n                        },\n                        \"perSeriesAligner\": {\n                         \"description\": \"An `Aligner` describes how to bring the data points in a single time series into temporal alignment. Except for `ALIGN_NONE`, all alignments cause all the data points in an `alignment_period` to be mathematically grouped together, resulting in a single data point for each `alignment_period` with end timestamp at the end of the period.\",\n                         \"type\": \"string\"\n                        }\n                       },\n                       \"type\": \"object\"\n                      },\n                      \"filter\": {\n                       \"description\": \"The [monitoring filter](https://cloud.google.com/monitoring/api/v3/filters) that identifies the metric types, resources, and projects to query.\",\n                       \"type\": \"string\"\n                      }\n                     },\n                     \"required\": [\n                      \"filter\"\n                     ],\n                     \"type\": \"object\"\n                    },\n                    \"numerator\": {\n                     \"description\": \"The numerator of the ratio.\",\n                     \"properties\": {\n                      \"aggregation\": {\n                       \"description\": \"By default, the raw time series data is returned.\",\n                       \"properties\": {\n                        \"alignmentPeriod\": {\n                         \"description\": \"The `alignment_period` specifies a time interval, in seconds, that is used to divide the data in all the [time series][google.monitoring.v3.TimeSeries] into consistent blocks of time. This will be done before the per-series aligner can be applied to the data.\",\n                         \"type\": \"string\"\n                        },\n                        \"crossSeriesReducer\": {\n                         \"description\": \"The reduction operation to be used to combine time series into a single time series, where the value of each data point in the resulting series is a function of all the already aligned values in the input time series.\",\n                         \"type\": \"string\"\n                        },\n                        \"groupByFields\": {\n                         \"description\": \"The set of fields to preserve when `cross_series_reducer` is specified.\",\n                         \"items\": {\n                          \"type\": \"string\"\n                         },\n                         \"type\": \"array\"\n                        },\n                        \"perSeriesAligner\": {\n                         \"description\": \"An `Aligner` describes how to bring the data points in a single time series into temporal alignment. Except for `ALIGN_NONE`, all alignments cause all the data points in an `alignment_period` to be mathematically grouped together, resulting in a single data point for each `alignment_period` with end timestamp at the end of the period.\",\n                         \"type\": \"string\"\n                        }\n                       },\n                       \"type\": \"object\"\n                      },\n                      \"filter\": {\n                       \"description\": \"The [monitoring filter](https://cloud.google.com/monitoring/api/v3/filters) that identifies the metric types, resources, and projects to query.\",\n                       \"type\": \"string\"\n                      }\n                     },\n                     \"required\": [\n                      \"filter\"\n                     ],\n                     \"type\": \"object\"\n                    },\n                    \"pickTimeSeriesFilter\": {\n                     \"description\": \"Ranking based time series filter.\",\n                     \"properties\": {\n                      \"direction\": {\n                       \"description\": \"How to use the ranking to select time series that pass through the filter.\",\n                       \"type\": \"string\"\n                      },\n                      \"numTimeSeries\": {\n                       \"description\": \"How many time series to allow to pass through the filter.\",\n                       \"format\": \"int32\",\n                       \"type\": \"integer\"\n                      },\n                      \"rankingMethod\": {\n                       \"description\": \"`ranking_method` is applied to each time series independently to produce the value which will be used to compare the time series to other time series.\",\n                       \"type\": \"string\"\n                      }\n                     },\n                     \"type\": \"object\"\n                    },\n                    \"secondaryAggregation\": {\n                     \"description\": \"Apply a second aggregation after the ratio is computed.\",\n                     \"properties\": {\n                      \"alignmentPeriod\": {\n                       \"description\": \"The `alignment_period` specifies a time interval, in seconds, that is used to divide the data in all the [time series][google.monitoring.v3.TimeSeries] into consistent blocks of time. This will be done before the per-series aligner can be applied to the data.\",\n                       \"type\": \"string\"\n                      },\n                      \"crossSeriesReducer\": {\n                       \"description\": \"The reduction operation to be used to combine time series into a single time series, where the value of each data point in the resulting series is a function of all the already aligned values in the input time series.\",\n                       \"type\": \"string\"\n                      },\n                      \"groupByFields\": {\n                       \"description\": \"The set of fields to preserve when `cross_series_reducer` is specified.\",\n                       \"items\": {\n                        \"type\": \"string\"\n                       },\n                       \"type\": \"array\"\n                      },\n                      \"perSeriesAligner\": {\n                       \"description\": \"An `Aligner` describes how to bring the data points in a single time series into temporal alignment. Except for `ALIGN_NONE`, all alignments cause all the data points in an `alignment_period` to be mathematically grouped together, resulting in a single data point for each `alignment_period` with end timestamp at the end of the period.\",\n                       \"type\": \"string\"\n                      }\n                     },\n                     \"type\": \"object\"\n                    }\n                   },\n                   \"type\": \"object\"\n                  },\n                  \"timeSeriesQueryLanguage\": {\n                   \"description\": \"A query used to fetch time series with MQL.\",\n                   \"type\": \"string\"\n                  },\n                  \"unitOverride\": {\n                   \"description\": \"The unit of data contained in fetched time series. If non-empty, this unit will override any unit that accompanies fetched data. The format is the same as the [`unit`](https://cloud.google.com/monitoring/api/ref_v3/rest/v3/projects.metricDescriptors) field in `MetricDescriptor`.\",\n                   \"type\": \"string\"\n                  }\n                 },\n                 \"type\": \"object\"\n                }\n               },\n               \"required\": [\n                \"timeSeriesQuery\"\n               ],\n               \"type\": \"object\"\n              },\n              \"type\": \"array\"\n             },\n             \"showLabels\": {\n              \"description\": \"Optional. Indicates whether or not the pie chart should show slices' labels\",\n              \"type\": \"boolean\"\n             }\n            },\n            \"required\": [\n             \"chartType\",\n             \"dataSets\"\n            ],\n            \"type\": \"object\"\n           },\n           \"scorecard\": {\n            \"description\": \"A scorecard summarizing time series data.\",\n            \"properties\": {\n             \"blankView\": {\n              \"description\": \"Will cause the `Scorecard` to show only the value, with no indicator to its value relative to its thresholds.\",\n              \"type\": \"object\"\n             },\n             \"gaugeView\": {\n              \"description\": \"Will cause the scorecard to show a gauge chart.\",\n              \"properties\": {\n               \"lowerBound\": {\n                \"description\": \"The lower bound for this gauge chart. The value of the chart should always be greater than or equal to this.\",\n                \"format\": \"double\",\n                \"type\": \"number\"\n               },\n               \"upperBound\": {\n                \"description\": \"The upper bound for this gauge chart. The value of the chart should always be less than or equal to this.\",\n                \"format\": \"double\",\n                \"type\": \"number\"\n               }\n              },\n              \"type\": \"object\"\n             },\n             \"sparkChartView\": {\n              \"description\": \"Will cause the scorecard to show a spark chart.\",\n              \"properties\": {\n               \"minAlignmentPeriod\": {\n                \"description\": \"The lower bound on data point frequency in the chart implemented by specifying the minimum alignment period to use in a time series query.\",\n                \"type\": \"string\"\n               },\n               \"sparkChartType\": {\n                \"description\": \"Required. The type of sparkchart to show in this chartView.\",\n                \"type\": \"string\"\n               }\n              },\n              \"required\": [\n               \"sparkChartType\"\n              ],\n              \"type\": \"object\"\n             },\n             \"thresholds\": {\n              \"description\": \"The thresholds used to determine the state of the scorecard given the time series' current value.\",\n              \"items\": {\n               \"properties\": {\n                \"color\": {\n                 \"description\": \"The state color for this threshold. Color is not allowed in a XyChart.\",\n                 \"type\": \"string\"\n                },\n                \"direction\": {\n                 \"description\": \"The direction for the current threshold. Direction is not allowed in a XyChart.\",\n                 \"type\": \"string\"\n                },\n                \"label\": {\n                 \"description\": \"A label for the threshold.\",\n                 \"type\": \"string\"\n                },\n                \"targetAxis\": {\n                 \"description\": \"The target axis to use for plotting the threshold. Target axis is not allowed in a Scorecard.\",\n                 \"type\": \"string\"\n                },\n                \"value\": {\n                 \"description\": \"The value of the threshold. The value should be defined in the native scale of the metric.\",\n                 \"format\": \"double\",\n                 \"type\": \"number\"\n                }\n               },\n               \"type\": \"object\"\n              },\n              \"type\": \"array\"\n             },\n             \"timeSeriesQuery\": {\n              \"description\": \"Required. Fields for querying time series data from the Stackdriver metrics API.\",\n              \"properties\": {\n               \"outputFullDuration\": {\n                \"description\": \"Optional. If set, Cloud Monitoring will treat the full query duration as the alignment period so that there will be only 1 output value.\",\n                \"type\": \"boolean\"\n               },\n               \"prometheusQuery\": {\n                \"description\": \"A query used to fetch time series with PromQL.\",\n                \"type\": \"string\"\n               },\n               \"timeSeriesFilter\": {\n                \"description\": \"Filter parameters to fetch time series.\",\n                \"properties\": {\n                 \"aggregation\": {\n                  \"description\": \"By default, the raw time series data is returned. Use this field to combine multiple time series for different views of the data.\",\n                  \"properties\": {\n                   \"alignmentPeriod\": {\n                    \"description\": \"The `alignment_period` specifies a time interval, in seconds, that is used to divide the data in all the [time series][google.monitoring.v3.TimeSeries] into consistent blocks of time. This will be done before the per-series aligner can be applied to the data.\",\n                    \"type\": \"string\"\n                   },\n                   \"crossSeriesReducer\": {\n                    \"description\": \"The reduction operation to be used to combine time series into a single time series, where the value of each data point in the resulting series is a function of all the already aligned values in the input time series.\",\n                    \"type\": \"string\"\n                   },\n                   \"groupByFields\": {\n                    \"description\": \"The set of fields to preserve when `cross_series_reducer` is specified.\",\n                    \"items\": {\n                     \"type\": \"string\"\n                    },\n                    \"type\": \"array\"\n                   },\n                   \"perSeriesAligner\": {\n                    \"description\": \"An `Aligner` describes how to bring the data points in a single time series into temporal alignment. Except for `ALIGN_NONE`, all alignments cause all the data points in an `alignment_period` to be mathematically grouped together, resulting in a single data point for each `alignment_period` with end timestamp at the end of the period.\",\n                    \"type\": \"string\"\n                   }\n                  },\n                  \"type\": \"object\"\n                 },\n                 \"filter\": {\n                  \"description\": \"Required. The [monitoring filter](https://cloud.google.com/monitoring/api/v3/filters) that identifies the metric types, resources, and projects to query.\",\n                  \"type\": \"string\"\n                 },\n                 \"pickTimeSeriesFilter\": {\n                  \"description\": \"Ranking based time series filter.\",\n                  \"properties\": {\n                   \"direction\": {\n                    \"description\": \"How to use the ranking to select time series that pass through the filter.\",\n                    \"type\": \"string\"\n                   },\n                   \"numTimeSeries\": {\n                    \"description\": \"How many time series to allow to pass through the filter.\",\n                    \"format\": \"int32\",\n                    \"type\": \"integer\"\n                   },\n                   \"rankingMethod\": {\n                    \"description\": \"`ranking_method` is applied to each time series independently to produce the value which will be used to compare the time series to other time series.\",\n                    \"type\": \"string\"\n                   }\n                  },\n                  \"type\": \"object\"\n                 },\n                 \"secondaryAggregation\": {\n                  \"description\": \"Apply a second aggregation after `aggregation` is applied.\",\n                  \"properties\": {\n                   \"alignmentPeriod\": {\n                    \"description\": \"The `alignment_period` specifies a time interval, in seconds, that is used to divide the data in all the [time series][google.monitoring.v3.TimeSeries] into consistent blocks of time. This will be done before the per-series aligner can be applied to the data.\",\n                    \"type\": \"string\"\n                   },\n                   \"crossSeriesReducer\": {\n                    \"description\": \"The reduction operation to be used to combine time series into a single time series, where the value of each data point in the resulting series is a function of all the already aligned values in the input time series.\",\n                    \"type\": \"string\"\n                   },\n                   \"groupByFields\": {\n                    \"description\": \"The set of fields to preserve when `cross_series_reducer` is specified.\",\n                    \"items\": {\n                     \"type\": \"string\"\n                    },\n                    \"type\": \"array\"\n                   },\n                   \"perSeriesAligner\": {\n                    \"description\": \"An `Aligner` describes how to bring the data points in a single time series into temporal alignment. Except for `ALIGN_NONE`, all alignments cause all the data points in an `alignment_period` to be mathematically grouped together, resulting in a single data point for each `alignment_period` with end timestamp at the end of the period.\",\n                    \"type\": \"string\"\n                   }\n                  },\n                  \"type\": \"object\"\n                 }\n                },\n                \"required\": [\n                 \"filter\"\n                ],\n                \"type\": \"object\"\n               },\n               \"timeSeriesFilterRatio\": {\n                \"description\": \"Parameters to fetch a ratio between two time series filters.\",\n                \"properties\": {\n                 \"denominator\": {\n                  \"description\": \"The denominator of the ratio.\",\n                  \"properties\": {\n                   \"aggregation\": {\n                    \"description\": \"By default, the raw time series data is returned.\",\n                    \"properties\": {\n                     \"alignmentPeriod\": {\n                      \"description\": \"The `alignment_period` specifies a time interval, in seconds, that is used to divide the data in all the [time series][google.monitoring.v3.TimeSeries] into consistent blocks of time. This will be done before the per-series aligner can be applied to the data.\",\n                      \"type\": \"string\"\n                     },\n                     \"crossSeriesReducer\": {\n                      \"description\": \"The reduction operation to be used to combine time series into a single time series, where the value of each data point in the resulting series is a function of all the already aligned values in the input time series.\",\n                      \"type\": \"string\"\n                     },\n                     \"groupByFields\": {\n                      \"description\": \"The set of fields to preserve when `cross_series_reducer` is specified.\",\n                      \"items\": {\n                       \"type\": \"string\"\n                      },\n                      \"type\": \"array\"\n                     },\n                     \"perSeriesAligner\": {\n                      \"description\": \"An `Aligner` describes how to bring the data points in a single time series into temporal alignment. Except for `ALIGN_NONE`, all alignments cause all the data points in an `alignment_period` to be mathematically grouped together, resulting in a single data point for each `alignment_period` with end timestamp at the end of the period.\",\n                      \"type\": \"string\"\n                     }\n                    },\n                    \"type\": \"object\"\n                   },\n                   \"filter\": {\n                    \"description\": \"The [monitoring filter](https://cloud.google.com/monitoring/api/v3/filters) that identifies the metric types, resources, and projects to query.\",\n                    \"type\": \"string\"\n                   }\n                  },\n                  \"required\": [\n                   \"filter\"\n                  ],\n                  \"type\": \"object\"\n                 },\n                 \"numerator\": {\n                  \"description\": \"The numerator of the ratio.\",\n                  \"properties\": {\n                   \"aggregation\": {\n                    \"description\": \"By default, the raw time series data is returned.\",\n                    \"properties\": {\n                     \"alignmentPeriod\": {\n                      \"description\": \"The `alignment_period` specifies a time interval, in seconds, that is used to divide the data in all the [time series][google.monitoring.v3.TimeSeries] into consistent blocks of time. This will be done before the per-series aligner can be applied to the data.\",\n                      \"type\": \"string\"\n                     },\n                     \"crossSeriesReducer\": {\n                      \"description\": \"The reduction operation to be used to combine time series into a single time series, where the value of each data point in the resulting series is a function of all the already aligned values in the input time series.\",\n                      \"type\": \"string\"\n                     },\n                     \"groupByFields\": {\n                      \"description\": \"The set of fields to preserve when `cross_series_reducer` is specified.\",\n                      \"items\": {\n                       \"type\": \"string\"\n                      },\n                      \"type\": \"array\"\n                     },\n                     \"perSeriesAligner\": {\n                      \"description\": \"An `Aligner` describes how to bring the data points in a single time series into temporal alignment. Except for `ALIGN_NONE`, all alignments cause all the data points in an `alignment_period` to be mathematically grouped together, resulting in a single data point for each `alignment_period` with end timestamp at the end of the period.\",\n                      \"type\": \"string\"\n                     }\n                    },\n                    \"type\": \"object\"\n                   },\n                   \"filter\": {\n                    \"description\": \"The [monitoring filter](https://cloud.google.com/monitoring/api/v3/filters) that identifies the metric types, resources, and projects to query.\",\n                    \"type\": \"string\"\n                   }\n                  },\n                  \"required\": [\n                   \"filter\"\n                  ],\n                  \"type\": \"object\"\n                 },\n                 \"pickTimeSeriesFilter\": {\n                  \"description\": \"Ranking based time series filter.\",\n                  \"properties\": {\n                   \"direction\": {\n                    \"description\": \"How to use the ranking to select time series that pass through the filter.\",\n                    \"type\": \"string\"\n                   },\n                   \"numTimeSeries\": {\n                    \"description\": \"How many time series to allow to pass through the filter.\",\n                    \"format\": \"int32\",\n                    \"type\": \"integer\"\n                   },\n                   \"rankingMethod\": {\n                    \"description\": \"`ranking_method` is applied to each time series independently to produce the value which will be used to compare the time series to other time series.\",\n                    \"type\": \"string\"\n                   }\n                  },\n                  \"type\": \"object\"\n                 },\n                 \"secondaryAggregation\": {\n                  \"description\": \"Apply a second aggregation after the ratio is computed.\",\n                  \"properties\": {\n                   \"alignmentPeriod\": {\n                    \"description\": \"The `alignment_period` specifies a time interval, in seconds, that is used to divide the data in all the [time series][google.monitoring.v3.TimeSeries] into consistent blocks of time. This will be done before the per-series aligner can be applied to the data.\",\n                    \"type\": \"string\"\n                   },\n                   \"crossSeriesReducer\": {\n                    \"description\": \"The reduction operation to be used to combine time series into a single time series, where the value of each data point in the resulting series is a function of all the already aligned values in the input time series.\",\n                    \"type\": \"string\"\n                   },\n                   \"groupByFields\": {\n                    \"description\": \"The set of fields to preserve when `cross_series_reducer` is specified.\",\n                    \"items\": {\n                     \"type\": \"string\"\n                    },\n                    \"type\": \"array\"\n                   },\n                   \"perSeriesAligner\": {\n                    \"description\": \"An `Aligner` describes how to bring the data points in a single time series into temporal alignment. Except for `ALIGN_NONE`, all alignments cause all the data points in an `alignment_period` to be mathematically grouped together, resulting in a single data point for each `alignment_period` with end timestamp at the end of the period.\",\n                    \"type\": \"string\"\n                   }\n                  },\n                  \"type\": \"object\"\n                 }\n                },\n                \"type\": \"object\"\n               },\n               \"timeSeriesQueryLanguage\": {\n                \"description\": \"A query used to fetch time series with MQL.\",\n                \"type\": \"string\"\n               },\n               \"unitOverride\": {\n                \"description\": \"The unit of data contained in fetched time series. If non-empty, this unit will override any unit that accompanies fetched data. The format is the same as the [`unit`](https://cloud.google.com/monitoring/api/ref_v3/rest/v3/projects.metricDescriptors) field in `MetricDescriptor`.\",\n                \"type\": \"string\"\n               }\n              },\n              \"type\": \"object\"\n             }\n            },\n            \"required\": [\n             \"timeSeriesQuery\"\n            ],\n            \"type\": \"object\"\n           },\n           \"sectionHeader\": {\n            \"description\": \"A widget that defines a section header for easier navigation of the dashboard.\",\n            \"properties\": {\n             \"dividerBelow\": {\n              \"description\": \"Whether to insert a divider below the section in the table of contents\",\n              \"type\": \"boolean\"\n             },\n             \"subtitle\": {\n              \"description\": \"The subtitle of the section\",\n              \"type\": \"string\"\n             }\n            },\n            \"type\": \"object\"\n           },\n           \"singleViewGroup\": {\n            \"description\": \"A widget that groups the other widgets by using a dropdown menu.\",\n            \"type\": \"object\"\n           },\n           \"text\": {\n            \"description\": \"A raw string or markdown displaying textual content.\",\n            \"properties\": {\n             \"content\": {\n              \"description\": \"The text content to be displayed.\",\n              \"type\": \"string\"\n             },\n             \"format\": {\n              \"description\": \"How the text content is formatted.\",\n              \"type\": \"string\"\n             },\n             \"style\": {\n              \"description\": \"How the text is styled\",\n              \"properties\": {\n               \"backgroundColor\": {\n                \"description\": \"The background color as a hex string. \\\"#RRGGBB\\\" or \\\"#RGB\\\"\",\n                \"type\": \"string\"\n               },\n               \"fontSize\": {\n                \"description\": \"Font sizes for both the title and content. The title will still be larger relative to the content.\",\n                \"type\": \"string\"\n               },\n               \"horizontalAlignment\": {\n                \"description\": \"The horizontal alignment of both the title and content\",\n                \"type\": \"string\"\n               },\n               \"padding\": {\n                \"description\": \"The amount of padding around the widget\",\n                \"type\": \"string\"\n               },\n               \"pointerLocation\": {\n                \"description\": \"The pointer location for this widget (also sometimes called a \\\"tail\\\")\",\n                \"type\": \"string\"\n               },\n               \"textColor\": {\n                \"description\": \"The text color as a hex string. \\\"#RRGGBB\\\" or \\\"#RGB\\\"\",\n                \"type\": \"string\"\n               },\n               \"verticalAlignment\": {\n                \"description\": \"The vertical alignment of both the title and content\",\n                \"type\": \"string\"\n               }\n              },\n              \"type\": \"object\"\n             }\n            },\n            \"type\": \"object\"\n           },\n           \"timeSeriesTable\": {\n            \"description\": \"A widget that displays time series data in a tabular format.\",\n            \"properties\": {\n             \"columnSettings\": {\n              \"description\": \"Optional. The list of the persistent column settings for the table.\",\n              \"items\": {\n               \"properties\": {\n                \"column\": {\n                 \"description\": \"Required. The id of the column.\",\n                 \"type\": \"string\"\n                },\n                \"visible\": {\n                 \"description\": \"Required. Whether the column should be visible on page load.\",\n                 \"type\": \"boolean\"\n                }\n               },\n               \"required\": [\n                \"column\",\n                \"visible\"\n               ],\n               \"type\": \"object\"\n              },\n              \"type\": \"array\"\n             },\n             \"dataSets\": {\n              \"description\": \"Required. The data displayed in this table.\",\n              \"items\": {\n               \"properties\": {\n                \"minAlignmentPeriod\": {\n                 \"description\": \"Optional. The lower bound on data point frequency for this data set.\",\n                 \"type\": \"string\"\n                },\n                \"tableDisplayOptions\": {\n                 \"description\": \"Optional. Table display options for configuring how the table is rendered.\",\n                 \"properties\": {\n                  \"shownColumns\": {\n                   \"description\": \"Optional. This field is unused and has been replaced by TimeSeriesTable.column_settings\",\n                   \"items\": {\n                    \"type\": \"string\"\n                   },\n                   \"type\": \"array\"\n                  }\n                 },\n                 \"type\": \"object\"\n                },\n                \"tableTemplate\": {\n                 \"description\": \"Optional. A template string for naming `TimeSeries` in the resulting data set.\",\n                 \"type\": \"string\"\n                },\n                \"timeSeriesQuery\": {\n                 \"description\": \"Required. Fields for querying time series data from the Stackdriver metrics API.\",\n                 \"properties\": {\n                  \"outputFullDuration\": {\n                   \"description\": \"Optional. If set, Cloud Monitoring will treat the full query duration as the alignment period so that there will be only 1 output value.\",\n                   \"type\": \"boolean\"\n                  },\n                  \"prometheusQuery\": {\n                   \"description\": \"A query used to fetch time series with PromQL.\",\n                   \"type\": \"string\"\n                  },\n                  \"timeSeriesFilter\": {\n                   \"description\": \"Filter parameters to fetch time series.\",\n                   \"properties\": {\n                    \"aggregation\": {\n                     \"description\": \"By default, the raw time series data is returned. Use this field to combine multiple time series for different views of the data.\",\n                     \"properties\": {\n                      \"alignmentPeriod\": {\n                       \"description\": \"The `alignment_period` specifies a time interval, in seconds, that is used to divide the data in all the [time series][google.monitoring.v3.TimeSeries] into consistent blocks of time. This will be done before the per-series aligner can be applied to the data.\",\n                       \"type\": \"string\"\n                      },\n                      \"crossSeriesReducer\": {\n                       \"description\": \"The reduction operation to be used to combine time series into a single time series, where the value of each data point in the resulting series is a function of all the already aligned values in the input time series.\",\n                       \"type\": \"string\"\n                      },\n                      \"groupByFields\": {\n                       \"description\": \"The set of fields to preserve when `cross_series_reducer` is specified.\",\n                       \"items\": {\n                        \"type\": \"string\"\n                       },\n                       \"type\": \"array\"\n                      },\n                      \"perSeriesAligner\": {\n                       \"description\": \"An `Aligner` describes how to bring the data points in a single time series into temporal alignment. Except for `ALIGN_NONE`, all alignments cause all the data points in an `alignment_period` to be mathematically grouped together, resulting in a single data point for each `alignment_period` with end timestamp at the end of the period.\",\n                       \"type\": \"string\"\n                      }\n                     },\n                     \"type\": \"object\"\n                    },\n                    \"filter\": {\n                     \"description\": \"Required. The [monitoring filter](https://cloud.google.com/monitoring/api/v3/filters) that identifies the metric types, resources, and projects to query.\",\n                     \"type\": \"string\"\n                    },\n                    \"pickTimeSeriesFilter\": {\n                     \"description\": \"Ranking based time series filter.\",\n                     \"properties\": {\n                      \"direction\": {\n                       \"description\": \"How to use the ranking to select time series that pass through the filter.\",\n                       \"type\": \"string\"\n                      },\n                      \"numTimeSeries\": {\n                       \"description\": \"How many time series to allow to pass through the filter.\",\n                       \"format\": \"int32\",\n                       \"type\": \"integer\"\n                      },\n                      \"rankingMethod\": {\n                       \"description\": \"`ranking_method` is applied to each time series independently to produce the value which will be used to compare the time series to other time series.\",\n                       \"type\": \"string\"\n                      }\n                     },\n                     \"type\": \"object\"\n                    },\n                    \"secondaryAggregation\": {\n                     \"description\": \"Apply a second aggregation after `aggregation` is applied.\",\n                     \"properties\": {\n                      \"alignmentPeriod\": {\n                       \"description\": \"The `alignment_period` specifies a time interval, in seconds, that is used to divide the data in all the [time series][google.monitoring.v3.TimeSeries] into consistent blocks of time. This will be done before the per-series aligner can be applied to the data.\",\n                       \"type\": \"string\"\n                      },\n                      \"crossSeriesReducer\": {\n                       \"description\": \"The reduction operation to be used to combine time series into a single time series, where the value of each data point in the resulting series is a function of all the already aligned values in the input time series.\",\n                       \"type\": \"string\"\n                      },\n                      \"groupByFields\": {\n                       \"description\": \"The set of fields to preserve when `cross_series_reducer` is specified.\",\n                       \"items\": {\n                        \"type\": \"string\"\n                       },\n                       \"type\": \"array\"\n                      },\n                      \"perSeriesAligner\": {\n                       \"description\": \"An `Aligner` describes how to bring the data points in a single time series into temporal alignment. Except for `ALIGN_NONE`, all alignments cause all the data points in an `alignment_period` to be mathematically grouped together, resulting in a single data point for each `alignment_period` with end timestamp at the end of the period.\",\n                       \"type\": \"string\"\n                      }\n                     },\n                     \"type\": \"object\"\n                    }\n                   },\n                   \"required\": [\n                    \"filter\"\n                   ],\n                   \"type\": \"object\"\n                  },\n                  \"timeSeriesFilterRatio\": {\n                   \"description\": \"Parameters to fetch a ratio between two time series filters.\",\n                   \"properties\": {\n                    \"denominator\": {\n                     \"description\": \"The denominator of the ratio.\",\n                     \"properties\": {\n                      \"aggregation\": {\n                       \"description\": \"By default, the raw time series data is returned.\",\n                       \"properties\": {\n                        \"alignmentPeriod\": {\n                         \"description\": \"The `alignment_period` specifies a time interval, in seconds, that is used to divide the data in all the [time series][google.monitoring.v3.TimeSeries] into consistent blocks of time. This will be done before the per-series aligner can be applied to the data.\",\n                         \"type\": \"string\"\n                        },\n                        \"crossSeriesReducer\": {\n                         \"description\": \"The reduction operation to be used to combine time series into a single time series, where the value of each data point in the resulting series is a function of all the already aligned values in the input time series.\",\n                         \"type\": \"string\"\n                        },\n                        \"groupByFields\": {\n                         \"description\": \"The set of fields to preserve when `cross_series_reducer` is specified.\",\n                         \"items\": {\n                          \"type\": \"string\"\n                         },\n                         \"type\": \"array\"\n                        },\n                        \"perSeriesAligner\": {\n                         \"description\": \"An `Aligner` describes how to bring the data points in a single time series into temporal alignment. Except for `ALIGN_NONE`, all alignments cause all the data points in an `alignment_period` to be mathematically grouped together, resulting in a single data point for each `alignment_period` with end timestamp at the end of the period.\",\n                         \"type\": \"string\"\n                        }\n                       },\n                       \"type\": \"object\"\n                      },\n                      \"filter\": {\n                       \"description\": \"The [monitoring filter](https://cloud.google.com/monitoring/api/v3/filters) that identifies the metric types, resources, and projects to query.\",\n                       \"type\": \"string\"\n                      }\n                     },\n                     \"required\": [\n                      \"filter\"\n                     ],\n                     \"type\": \"object\"\n                    },\n                    \"numerator\": {\n                     \"description\": \"The numerator of the ratio.\",\n                     \"properties\": {\n                      \"aggregation\": {\n                       \"description\": \"By default, the raw time series data is returned.\",\n                       \"properties\": {\n                        \"alignmentPeriod\": {\n                         \"description\": \"The `alignment_period` specifies a time interval, in seconds, that is used to divide the data in all the [time series][google.monitoring.v3.TimeSeries] into consistent blocks of time. This will be done before the per-series aligner can be applied to the data.\",\n                         \"type\": \"string\"\n                        },\n                        \"crossSeriesReducer\": {\n                         \"description\": \"The reduction operation to be used to combine time series into a single time series, where the value of each data point in the resulting series is a function of all the already aligned values in the input time series.\",\n                         \"type\": \"string\"\n                        },\n                        \"groupByFields\": {\n                         \"description\": \"The set of fields to preserve when `cross_series_reducer` is specified.\",\n                         \"items\": {\n                          \"type\": \"string\"\n                         },\n                         \"type\": \"array\"\n                        },\n                        \"perSeriesAligner\": {\n                         \"description\": \"An `Aligner` describes how to bring the data points in a single time series into temporal alignment. Except for `ALIGN_NONE`, all alignments cause all the data points in an `alignment_period` to be mathematically grouped together, resulting in a single data point for each `alignment_period` with end timestamp at the end of the period.\",\n                         \"type\": \"string\"\n                        }\n                       },\n                       \"type\": \"object\"\n                      },\n                      \"filter\": {\n                       \"description\": \"The [monitoring filter](https://cloud.google.com/monitoring/api/v3/filters) that identifies the metric types, resources, and projects to query.\",\n                       \"type\": \"string\"\n                      }\n                     },\n                     \"required\": [\n                      \"filter\"\n                     ],\n                     \"type\": \"object\"\n                    },\n                    \"pickTimeSeriesFilter\": {\n                     \"description\": \"Ranking based time series filter.\",\n                     \"properties\": {\n                      \"direction\": {\n                       \"description\": \"How to use the ranking to select time series that pass through the filter.\",\n                       \"type\": \"string\"\n                      },\n                      \"numTimeSeries\": {\n                       \"description\": \"How many time series to allow to pass through the filter.\",\n                       \"format\": \"int32\",\n                       \"type\": \"integer\"\n                      },\n                      \"rankingMethod\": {\n                       \"description\": \"`ranking_method` is applied to each time series independently to produce the value which will be used to compare the time series to other time series.\",\n                       \"type\": \"string\"\n                      }\n                     },\n                     \"type\": \"object\"\n                    },\n                    \"secondaryAggregation\": {\n                     \"description\": \"Apply a second aggregation after the ratio is computed.\",\n                     \"properties\": {\n                      \"alignmentPeriod\": {\n                       \"description\": \"The `alignment_period` specifies a time interval, in seconds, that is used to divide the data in all the [time series][google.monitoring.v3.TimeSeries] into consistent blocks of time. This will be done before the per-series aligner can be applied to the data.\",\n                       \"type\": \"string\"\n                      },\n                      \"crossSeriesReducer\": {\n                       \"description\": \"The reduction operation to be used to combine time series into a single time series, where the value of each data point in the resulting series is a function of all the already aligned values in the input time series.\",\n                       \"type\": \"string\"\n                      },\n                      \"groupByFields\": {\n                       \"description\": \"The set of fields to preserve when `cross_series_reducer` is specified.\",\n                       \"items\": {\n                        \"type\": \"string\"\n                       },\n                       \"type\": \"array\"\n                      },\n                      \"perSeriesAligner\": {\n                       \"description\": \"An `Aligner` describes how to bring the data points in a single time series into temporal alignment. Except for `ALIGN_NONE`, all alignments cause all the data points in an `alignment_period` to be mathematically grouped together, resulting in a single data point for each `alignment_period` with end timestamp at the end of the period.\",\n                       \"type\": \"string\"\n                      }\n                     },\n                     \"type\": \"object\"\n                    }\n                   },\n                   \"type\": \"object\"\n                  },\n                  \"timeSeriesQueryLanguage\": {\n                   \"description\": \"A query used to fetch time series with MQL.\",\n                   \"type\": \"string\"\n                  },\n                  \"unitOverride\": {\n                   \"description\": \"The unit of data contained in fetched time series. If non-empty, this unit will override any unit that accompanies fetched data. The format is the same as the [`unit`](https://cloud.google.com/monitoring/api/ref_v3/rest/v3/projects.metricDescriptors) field in `MetricDescriptor`.\",\n                   \"type\": \"string\"\n                  }\n                 },\n                 \"type\": \"object\"\n                }\n               },\n               \"type\": \"object\"\n              },\n              \"type\": \"array\"\n             },\n             \"metricVisualization\": {\n              \"description\": \"Optional. Store rendering strategy\",\n              \"type\": \"string\"\n             }\n            },\n            \"required\": [\n             \"dataSets\"\n            ],\n            \"type\": \"object\"\n           },\n           \"title\": {\n            \"description\": \"Optional. The title of the widget.\",\n            \"type\": \"string\"\n           },\n           \"xyChart\": {\n            \"description\": \"A chart of time series data.\",\n            \"properties\": {\n             \"chartOptions\": {\n              \"description\": \"Display options for the chart.\",\n              \"properties\": {\n               \"mode\": {\n                \"description\": \"The chart mode.\",\n                \"type\": \"string\"\n               }\n              },\n              \"type\": \"object\"\n             },\n             \"dataSets\": {\n              \"description\": \"Required. The data displayed in this chart.\",\n              \"items\": {\n               \"properties\": {\n                \"legendTemplate\": {\n                 \"description\": \"A template string for naming `TimeSeries` in the resulting data set.\",\n                 \"type\": \"string\"\n                },\n                \"minAlignmentPeriod\": {\n                 \"description\": \"Optional. The lower bound on data point frequency for this data set.\",\n                 \"type\": \"string\"\n                },\n                \"plotType\": {\n                 \"description\": \"How this data should be plotted on the chart.\",\n                 \"type\": \"string\"\n                },\n                \"targetAxis\": {\n                 \"description\": \"Optional. The target axis to use for plotting the metric.\",\n                 \"type\": \"string\"\n                },\n                \"timeSeriesQuery\": {\n                 \"description\": \"Fields for querying time series data from the Stackdriver metrics API.\",\n                 \"properties\": {\n                  \"outputFullDuration\": {\n                   \"description\": \"Optional. If set, Cloud Monitoring will treat the full query duration as the alignment period so that there will be only 1 output value.\",\n                   \"type\": \"boolean\"\n                  },\n                  \"prometheusQuery\": {\n                   \"description\": \"A query used to fetch time series with PromQL.\",\n                   \"type\": \"string\"\n                  },\n                  \"timeSeriesFilter\": {\n                   \"description\": \"Filter parameters to fetch time series.\",\n                   \"properties\": {\n                    \"aggregation\": {\n                     \"description\": \"By default, the raw time series data is returned. Use this field to combine multiple time series for different views of the data.\",\n                     \"properties\": {\n                      \"alignmentPeriod\": {\n                       \"description\": \"The `alignment_period` specifies a time interval, in seconds, that is used to divide the data in all the [time series][google.monitoring.v3.TimeSeries] into consistent blocks of time. This will be done before the per-series aligner can be applied to the data.\",\n                       \"type\": \"string\"\n                      },\n                      \"crossSeriesReducer\": {\n                       \"description\": \"The reduction operation to be used to combine time series into a single time series, where the value of each data point in the resulting series is a function of all the already aligned values in the input time series.\",\n                       \"type\": \"string\"\n                      },\n                      \"groupByFields\": {\n                       \"description\": \"The set of fields to preserve when `cross_series_reducer` is specified.\",\n                       \"items\": {\n                        \"type\": \"string\"\n                       },\n                       \"type\": \"array\"\n                      },\n                      \"perSeriesAligner\": {\n                       \"description\": \"An `Aligner` describes how to bring the data points in a single time series into temporal alignment. Except for `ALIGN_NONE`, all alignments cause all the data points in an `alignment_period` to be mathematically grouped together, resulting in a single data point for each `alignment_period` with end timestamp at the end of the period.\",\n                       \"type\": \"string\"\n                      }\n                     },\n                     \"type\": \"object\"\n                    },\n                    \"filter\": {\n                     \"description\": \"Required. The [monitoring filter](https://cloud.google.com/monitoring/api/v3/filters) that identifies the metric types, resources, and projects to query.\",\n                     \"type\": \"string\"\n                    },\n                    \"pickTimeSeriesFilter\": {\n                     \"description\": \"Ranking based time series filter.\",\n                     \"properties\": {\n                      \"direction\": {\n                       \"description\": \"How to use the ranking to select time series that pass through the filter.\",\n                       \"type\": \"string\"\n                      },\n                      \"numTimeSeries\": {\n                       \"description\": \"How many time series to allow to pass through the filter.\",\n                       \"format\": \"int32\",\n                       \"type\": \"integer\"\n                      },\n                      \"rankingMethod\": {\n                       \"description\": \"`ranking_method` is applied to each time series independently to produce the value which will be used to compare the time series to other time series.\",\n                       \"type\": \"string\"\n                      }\n                     },\n                     \"type\": \"object\"\n                    },\n                    \"secondaryAggregation\": {\n                     \"description\": \"Apply a second aggregation after `aggregation` is applied.\",\n                     \"properties\": {\n                      \"alignmentPeriod\": {\n                       \"description\": \"The `alignment_period` specifies a time interval, in seconds, that is used to divide the data in all the [time series][google.monitoring.v3.TimeSeries] into consistent blocks of time. This will be done before the per-series aligner can be applied to the data.\",\n                       \"type\": \"string\"\n                      },\n                      \"crossSeriesReducer\": {\n                       \"description\": \"The reduction operation to be used to combine time series into a single time series, where the value of each data point in the resulting series is a function of all the already aligned values in the input time series.\",\n                       \"type\": \"string\"\n                      },\n                      \"groupByFields\": {\n                       \"description\": \"The set of fields to preserve when `cross_series_reducer` is specified.\",\n                       \"items\": {\n                        \"type\": \"string\"\n                       },\n                       \"type\": \"array\"\n                      },\n                      \"perSeriesAligner\": {\n                       \"description\": \"An `Aligner` describes how to bring the data points in a single time series into temporal alignment. Except for `ALIGN_NONE`, all alignments cause all the data points in an `alignment_period` to be mathematically grouped together, resulting in a single data point for each `alignment_period` with end timestamp at the end of the period.\",\n                       \"type\": \"string\"\n                      }\n                     },\n                     \"type\": \"object\"\n                    }\n                   },\n                   \"required\": [\n                    \"filter\"\n                   ],\n                   \"type\": \"object\"\n                  },\n                  \"timeSeriesFilterRatio\": {\n                   \"description\": \"Parameters to fetch a ratio between two time series filters.\",\n                   \"properties\": {\n                    \"denominator\": {\n                     \"description\": \"The denominator of the ratio.\",\n                     \"properties\": {\n                      \"aggregation\": {\n                       \"description\": \"By default, the raw time series data is returned.\",\n                       \"properties\": {\n                        \"alignmentPeriod\": {\n                         \"description\": \"The `alignment_period` specifies a time interval, in seconds, that is used to divide the data in all the [time series][google.monitoring.v3.TimeSeries] into consistent blocks of time. This will be done before the per-series aligner can be applied to the data.\",\n                         \"type\": \"string\"\n                        },\n                        \"crossSeriesReducer\": {\n                         \"description\": \"The reduction operation to be used to combine time series into a single time series, where the value of each data point in the resulting series is a function of all the already aligned values in the input time series.\",\n                         \"type\": \"string\"\n                        },\n                        \"groupByFields\": {\n                         \"description\": \"The set of fields to preserve when `cross_series_reducer` is specified.\",\n                         \"items\": {\n                          \"type\": \"string\"\n                         },\n                         \"type\": \"array\"\n                        },\n                        \"perSeriesAligner\": {\n                         \"description\": \"An `Aligner` describes how to bring the data points in a single time series into temporal alignment. Except for `ALIGN_NONE`, all alignments cause all the data points in an `alignment_period` to be mathematically grouped together, resulting in a single data point for each `alignment_period` with end timestamp at the end of the period.\",\n                         \"type\": \"string\"\n                        }\n                       },\n                       \"type\": \"object\"\n                      },\n                      \"filter\": {\n                       \"description\": \"The [monitoring filter](https://cloud.google.com/monitoring/api/v3/filters) that identifies the metric types, resources, and projects to query.\",\n                       \"type\": \"string\"\n                      }\n                     },\n                     \"required\": [\n                      \"filter\"\n                     ],\n                     \"type\": \"object\"\n                    },\n                    \"numerator\": {\n                     \"description\": \"The numerator of the ratio.\",\n                     \"properties\": {\n                      \"aggregation\": {\n                       \"description\": \"By default, the raw time series data is returned.\",\n                       \"properties\": {\n                        \"alignmentPeriod\": {\n                         \"description\": \"The `alignment_period` specifies a time interval, in seconds, that is used to divide the data in all the [time series][google.monitoring.v3.TimeSeries] into consistent blocks of time. This will be done before the per-series aligner can be applied to the data.\",\n                         \"type\": \"string\"\n                        },\n                        \"crossSeriesReducer\": {\n                         \"description\": \"The reduction operation to be used to combine time series into a single time series, where the value of each data point in the resulting series is a function of all the already aligned values in the input time series.\",\n                         \"type\": \"string\"\n                        },\n                        \"groupByFields\": {\n                         \"description\": \"The set of fields to preserve when `cross_series_reducer` is specified.\",\n                         \"items\": {\n                          \"type\": \"string\"\n                         },\n                         \"type\": \"array\"\n                        },\n                        \"perSeriesAligner\": {\n                         \"description\": \"An `Aligner` describes how to bring the data points in a single time series into temporal alignment. Except for `ALIGN_NONE`, all alignments cause all the data points in an `alignment_period` to be mathematically grouped together, resulting in a single data point for each `alignment_period` with end timestamp at the end of the period.\",\n                         \"type\": \"string\"\n                        }\n                       },\n                       \"type\": \"object\"\n                      },\n                      \"filter\": {\n                       \"description\": \"The [monitoring filter](https://cloud.google.com/monitoring/api/v3/filters) that identifies the metric types, resources, and projects to query.\",\n                       \"type\": \"string\"\n                      }\n                     },\n                     \"required\": [\n                      \"filter\"\n                     ],\n                     \"type\": \"object\"\n                    },\n                    \"pickTimeSeriesFilter\": {\n                     \"description\": \"Ranking based time series filter.\",\n                     \"properties\": {\n                      \"direction\": {\n                       \"description\": \"How to use the ranking to select time series that pass through the filter.\",\n                       \"type\": \"string\"\n                      },\n                      \"numTimeSeries\": {\n                       \"description\": \"How many time series to allow to pass through the filter.\",\n                       \"format\": \"int32\",\n                       \"type\": \"integer\"\n                      },\n                      \"rankingMethod\": {\n                       \"description\": \"`ranking_method` is applied to each time series independently to produce the value which will be used to compare the time series to other time series.\",\n                       \"type\": \"string\"\n                      }\n                     },\n                     \"type\": \"object\"\n                    },\n                    \"secondaryAggregation\": {\n                     \"description\": \"Apply a second aggregation after the ratio is computed.\",\n                     \"properties\": {\n                      \"alignmentPeriod\": {\n                       \"description\": \"The `alignment_period` specifies a time interval, in seconds, that is used to divide the data in all the [time series][google.monitoring.v3.TimeSeries] into consistent blocks of time. This will be done before the per-series aligner can be applied to the data.\",\n                       \"type\": \"string\"\n                      },\n                      \"crossSeriesReducer\": {\n                       \"description\": \"The reduction operation to be used to combine time series into a single time series, where the value of each data point in the resulting series is a function of all the already aligned values in the input time series.\",\n                       \"type\": \"string\"\n                      },\n                      \"groupByFields\": {\n                       \"description\": \"The set of fields to preserve when `cross_series_reducer` is specified.\",\n                       \"items\": {\n                        \"type\": \"string\"\n                       },\n                       \"type\": \"array\"\n                      },\n                      \"perSeriesAligner\": {\n                       \"description\": \"An `Aligner` describes how to bring the data points in a single time series into temporal alignment. Except for `ALIGN_NONE`, all alignments cause all the data points in an `alignment_period` to be mathematically grouped together, resulting in a single data point for each `alignment_period` with end timestamp at the end of the period.\",\n                       \"type\": \"string\"\n                      }\n                     },\n                     \"type\": \"object\"\n                    }\n                   },\n                   \"type\": \"object\"\n                  },\n                  \"timeSeriesQueryLanguage\": {\n                   \"description\": \"A query used to fetch time series with MQL.\",\n                   \"type\": \"string\"\n                  },\n                  \"unitOverride\": {\n                   \"description\": \"The unit of data contained in fetched time series. If non-empty, this unit will override any unit that accompanies fetched data. The format is the same as the [`unit`](https://cloud.google.com/monitoring/api/ref_v3/rest/v3/projects.metricDescriptors) field in `MetricDescriptor`.\",\n                   \"type\": \"string\"\n                  }\n                 },\n                 \"type\": \"object\"\n                }\n               },\n               \"required\": [\n                \"timeSeriesQuery\"\n               ],\n               \"type\": \"object\"\n              },\n              \"type\": \"array\"\n             },\n             \"thresholds\": {\n              \"description\": \"Threshold lines drawn horizontally across the chart.\",\n              \"items\": {\n               \"properties\": {\n                \"color\": {\n                 \"description\": \"The state color for this threshold. Color is not allowed in a XyChart.\",\n                 \"type\": \"string\"\n                },\n                \"direction\": {\n                 \"description\": \"The direction for the current threshold. Direction is not allowed in a XyChart.\",\n                 \"type\": \"string\"\n                },\n                \"label\": {\n                 \"description\": \"A label for the threshold.\",\n                 \"type\": \"string\"\n                },\n                \"targetAxis\": {\n                 \"description\": \"The target axis to use for plotting the threshold. Target axis is not allowed in a Scorecard.\",\n                 \"type\": \"string\"\n                },\n                \"value\": {\n                 \"description\": \"The value of the threshold. The value should be defined in the native scale of the metric.\",\n                 \"format\": \"double\",\n                 \"type\": \"number\"\n                }\n               },\n               \"type\": \"object\"\n              },\n              \"type\": \"array\"\n             },\n             \"timeshiftDuration\": {\n              \"description\": \"The duration used to display a comparison chart.\",\n              \"type\": \"string\"\n             },\n             \"xAxis\": {\n              \"description\": \"The properties applied to the x-axis.\",\n              \"properties\": {\n               \"label\": {\n                \"description\": \"The label of the axis.\",\n                \"type\": \"string\"\n               },\n               \"scale\": {\n                \"description\": \"The axis scale. By default, a linear scale is used.\",\n                \"type\": \"string\"\n               }\n              },\n              \"type\": \"object\"\n             },\n             \"y2Axis\": {\n              \"description\": \"The properties applied to the y2-axis.\",\n              \"properties\": {\n               \"label\": {\n                \"description\": \"The label of the axis.\",\n                \"type\": \"string\"\n               },\n               \"scale\": {\n                \"description\": \"The axis scale. By default, a linear scale is used.\",\n                \"type\": \"string\"\n               }\n              },\n              \"type\": \"object\"\n             },\n             \"yAxis\": {\n              \"description\": \"The properties applied to the y-axis.\",\n              \"properties\": {\n               \"label\": {\n                \"description\": \"The label of the axis.\",\n                \"type\": \"string\"\n               },\n               \"scale\": {\n                \"description\": \"The axis scale. By default, a linear scale is used.\",\n                \"type\": \"string\"\n               }\n              },\n              \"type\": \"object\"\n             }\n            },\n            \"required\": [\n             \"dataSets\"\n            ],\n            \"type\": \"object\"\n           }\n          },\n          \"type\": \"object\"\n         },\n         \"width\": {\n          \"description\": \"The width of the tile, measured in grid blocks. Tiles must have a minimum width of 1.\",\n          \"format\": \"int32\",\n          \"type\": \"integer\"\n         },\n         \"xPos\": {\n          \"description\": \"The zero-indexed position of the tile in grid blocks relative to the left edge of the grid. Tiles must be contained within the specified number of columns. `x_pos` cannot be negative.\",\n          \"format\": \"int32\",\n          \"type\": \"integer\"\n         },\n         \"yPos\": {\n          \"description\": \"The zero-indexed position of the tile in grid blocks relative to the top edge of the grid. `y_pos` cannot be negative.\",\n          \"format\": \"int32\",\n          \"type\": \"integer\"\n         }\n        },\n        \"type\": \"object\"\n       },\n       \"type\": \"array\"\n      }\n     },\n     \"type\": \"object\"\n    },\n    \"projectRef\": {\n     \"description\": \"Immutable. The Project that this resource belongs to.\",\n     \"oneOf\": [\n      {\n       \"not\": {\n        \"required\": [\n         \"external\"\n        ]\n       },\n       \"required\": [\n        \"name\"\n       ]\n      },\n      {\n       \"not\": {\n        \"anyOf\": [\n         {\n          \"required\": [\n           \"name\"\n          ]\n         },\n         {\n          \"required\": [\n           \"namespace\"\n          ]\n         }\n        ]\n       },\n       \"required\": [\n        \"external\"\n       ]\n      }\n     ],\n     \"properties\": {\n      \"external\": {\n       \"description\": \"The `projectID` field of a project, when not managed by Config Connector.\",\n       \"type\": \"string\"\n      },\n      \"kind\": {\n       \"description\": \"The kind of the Project resource; optional but must be `Project` if provided.\",\n       \"type\": \"string\"\n      },\n      \"name\": {\n       \"description\": \"The `name` field of a `Project` resource.\",\n       \"type\": \"string\"\n      },\n      \"namespace\": {\n       \"description\": \"The `namespace` field of a `Project` resource.\",\n       \"type\": \"string\"\n      }\n     },\n     \"type\": \"object\"\n    },\n    \"resourceID\": {\n     \"description\": \"Immutable. Optional. The name of the resource. Used for creation and acquisition.\",\n     \"type\": \"string\"\n    },\n    \"rowLayout\": {\n     \"description\": \"The content is divided into equally spaced rows and the widgets are arranged horizontally.\",\n     \"properties\": {\n      \"rows\": {\n       \"description\": \"The rows of content to display.\",\n       \"items\": {\n        \"properties\": {\n         \"weight\": {\n          \"description\": \"The relative weight of this row. The row weight is used to adjust the height of rows on the screen (relative to peers).\",\n          \"format\": \"int64\",\n          \"type\": \"integer\"\n         },\n         \"widgets\": {\n          \"description\": \"The display widgets arranged horizontally in this row.\",\n          \"items\": {\n           \"properties\": {\n            \"alertChart\": {\n             \"description\": \"A chart of alert policy data.\",\n             \"properties\": {\n              \"alertPolicyRef\": {\n               \"description\": \"Required. A reference to the MonitoringAlertPolicy.\",\n               \"oneOf\": [\n                {\n                 \"not\": {\n                  \"required\": [\n                   \"external\"\n                  ]\n                 },\n                 \"required\": [\n                  \"name\"\n                 ]\n                },\n                {\n                 \"not\": {\n                  \"anyOf\": [\n                   {\n                    \"required\": [\n                     \"name\"\n                    ]\n                   },\n                   {\n                    \"required\": [\n                     \"namespace\"\n                    ]\n                   }\n                  ]\n                 },\n                 \"required\": [\n                  \"external\"\n                 ]\n                }\n               ],\n               \"properties\": {\n                \"external\": {\n                 \"description\": \"The MonitoringAlertPolicy link in the form \\\"projects/[PROJECT_ID_OR_NUMBER]/alertPolicies/[ALERT_POLICY_ID]\\\", when not managed by Config Connector.\",\n                 \"type\": \"string\"\n                },\n                \"name\": {\n                 \"description\": \"The `name` field of a `MonitoringAlertPolicy` resource.\",\n                 \"type\": \"string\"\n                },\n                \"namespace\": {\n                 \"description\": \"The `namespace` field of a `MonitoringAlertPolicy` resource.\",\n                 \"type\": \"string\"\n                }\n               },\n               \"type\": \"object\"\n              }\n             },\n             \"required\": [\n              \"alertPolicyRef\"\n             ],\n             \"type\": \"object\"\n            },\n            \"blank\": {\n             \"description\": \"A blank space.\",\n             \"type\": \"object\"\n            },\n            \"collapsibleGroup\": {\n             \"description\": \"A widget that groups the other widgets. All widgets that are within the area spanned by the grouping widget are considered member widgets.\",\n             \"properties\": {\n              \"collapsed\": {\n               \"description\": \"The collapsed state of the widget on first page load.\",\n               \"type\": \"boolean\"\n              }\n             },\n             \"type\": \"object\"\n            },\n            \"errorReportingPanel\": {\n             \"description\": \"A widget that displays a list of error groups.\",\n             \"properties\": {\n              \"projectRefs\": {\n               \"description\": \"The projects from which to gather errors.\",\n               \"items\": {\n                \"description\": \"The Project that this resource belongs to.\",\n                \"oneOf\": [\n                 {\n                  \"not\": {\n                   \"required\": [\n                    \"external\"\n                   ]\n                  },\n                  \"required\": [\n                   \"name\",\n                   \"kind\"\n                  ]\n                 },\n                 {\n                  \"not\": {\n                   \"anyOf\": [\n                    {\n                     \"required\": [\n                      \"name\"\n                     ]\n                    },\n                    {\n                     \"required\": [\n                      \"namespace\"\n                     ]\n                    },\n                    {\n                     \"required\": [\n                      \"kind\"\n                     ]\n                    }\n                   ]\n                  },\n                  \"required\": [\n                   \"external\"\n                  ]\n                 }\n                ],\n                \"properties\": {\n                 \"external\": {\n                  \"description\": \"The `projectID` field of a project, when not managed by Config Connector.\",\n                  \"type\": \"string\"\n                 },\n                 \"kind\": {\n                  \"description\": \"The kind of the Project resource; optional but must be `Project` if provided.\",\n                  \"type\": \"string\"\n                 },\n                 \"name\": {\n                  \"description\": \"The `name` field of a `Project` resource.\",\n                  \"type\": \"string\"\n                 },\n                 \"namespace\": {\n                  \"description\": \"The `namespace` field of a `Project` resource.\",\n                  \"type\": \"string\"\n                 }\n                },\n                \"type\": \"object\"\n               },\n               \"type\": \"array\"\n              },\n              \"services\": {\n               \"description\": \"An identifier of the service, such as the name of the executable, job, or Google App Engine service name. This field is expected to have a low number of values that are relatively stable over time, as opposed to `version`, which can be changed whenever new code is deployed.\",\n               \"items\": {\n                \"type\": \"string\"\n               },\n               \"type\": \"array\"\n              },\n              \"versions\": {\n               \"description\": \"Represents the source code version that the developer provided, which could represent a version label or a Git SHA-1 hash, for example. For App Engine standard environment, the version is set to the version of the app.\",\n               \"items\": {\n                \"type\": \"string\"\n               },\n               \"type\": \"array\"\n              }\n             },\n             \"type\": \"object\"\n            },\n            \"id\": {\n             \"description\": \"Optional. The widget id. Ids may be made up of alphanumerics, dashes and underscores. Widget ids are optional.\",\n             \"type\": \"string\"\n            },\n            \"incidentList\": {\n             \"description\": \"A widget that shows list of incidents.\",\n             \"properties\": {\n              \"monitoredResources\": {\n               \"description\": \"Optional. The monitored resource for which incidents are listed.\",\n               \"items\": {\n                \"properties\": {\n                 \"labels\": {\n                  \"additionalProperties\": {\n                   \"type\": \"string\"\n                  },\n                  \"description\": \"Required. Values for all of the labels listed in the associated monitored resource descriptor.\",\n                  \"type\": \"object\"\n                 },\n                 \"type\": {\n                  \"description\": \"Required. The monitored resource type. This field must match the `type` field of a [MonitoredResourceDescriptor][google.api.MonitoredResourceDescriptor] object.\",\n                  \"type\": \"string\"\n                 }\n                },\n                \"type\": \"object\"\n               },\n               \"type\": \"array\"\n              },\n              \"policyRefs\": {\n               \"description\": \"Optional. A list of alert policies to filter the incident list by.\",\n               \"items\": {\n                \"oneOf\": [\n                 {\n                  \"not\": {\n                   \"required\": [\n                    \"external\"\n                   ]\n                  },\n                  \"required\": [\n                   \"name\"\n                  ]\n                 },\n                 {\n                  \"not\": {\n                   \"anyOf\": [\n                    {\n                     \"required\": [\n                      \"name\"\n                     ]\n                    },\n                    {\n                     \"required\": [\n                      \"namespace\"\n                     ]\n                    }\n                   ]\n                  },\n                  \"required\": [\n                   \"external\"\n                  ]\n                 }\n                ],\n                \"properties\": {\n                 \"external\": {\n                  \"description\": \"The MonitoringAlertPolicy link in the form \\\"projects/[PROJECT_ID_OR_NUMBER]/alertPolicies/[ALERT_POLICY_ID]\\\", when not managed by Config Connector.\",\n                  \"type\": \"string\"\n                 },\n                 \"name\": {\n                  \"description\": \"The `name` field of a `MonitoringAlertPolicy` resource.\",\n                  \"type\": \"string\"\n                 },\n                 \"namespace\": {\n                  \"description\": \"The `namespace` field of a `MonitoringAlertPolicy` resource.\",\n                  \"type\": \"string\"\n                 }\n                },\n                \"type\": \"object\"\n               },\n               \"type\": \"array\"\n              }\n             },\n             \"type\": \"object\"\n            },\n            \"logsPanel\": {\n             \"description\": \"A widget that shows a stream of logs.\",\n             \"properties\": {\n              \"filter\": {\n               \"description\": \"A filter that chooses which log entries to return.  See [Advanced Logs Queries](https://cloud.google.com/logging/docs/view/advanced-queries).\",\n               \"type\": \"string\"\n              },\n              \"resourceNames\": {\n               \"description\": \"The names of logging resources to collect logs for.\",\n               \"items\": {\n                \"oneOf\": [\n                 {\n                  \"not\": {\n                   \"required\": [\n                    \"external\"\n                   ]\n                  },\n                  \"required\": [\n                   \"name\",\n                   \"kind\"\n                  ]\n                 },\n                 {\n                  \"not\": {\n                   \"anyOf\": [\n                    {\n                     \"required\": [\n                      \"name\"\n                     ]\n                    },\n                    {\n                     \"required\": [\n                      \"namespace\"\n                     ]\n                    },\n                    {\n                     \"required\": [\n                      \"kind\"\n                     ]\n                    }\n                   ]\n                  },\n                  \"required\": [\n                   \"external\"\n                  ]\n                 }\n                ],\n                \"properties\": {\n                 \"external\": {\n                  \"description\": \"The external name of the referenced resource\",\n                  \"type\": \"string\"\n                 },\n                 \"kind\": {\n                  \"description\": \"Kind of the referent.\",\n                  \"type\": \"string\"\n                 },\n                 \"name\": {\n                  \"description\": \"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\",\n                  \"type\": \"string\"\n                 },\n                 \"namespace\": {\n                  \"description\": \"Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/\",\n                  \"type\": \"string\"\n                 }\n                },\n                \"type\": \"object\"\n               },\n               \"type\": \"array\"\n              }\n             },\n             \"type\": \"object\"\n            },\n            \"pieChart\": {\n             \"description\": \"A widget that displays timeseries data as a pie chart.\",\n             \"properties\": {\n              \"chartType\": {\n               \"description\": \"Required. Indicates the visualization type for the PieChart.\",\n               \"type\": \"string\"\n              },\n              \"dataSets\": {\n               \"description\": \"Required. The queries for the chart's data.\",\n               \"items\": {\n                \"properties\": {\n                 \"minAlignmentPeriod\": {\n                  \"description\": \"Optional. The lower bound on data point frequency for this data set.\",\n                  \"type\": \"string\"\n                 },\n                 \"sliceNameTemplate\": {\n                  \"description\": \"Optional. A template for the name of the slice.\",\n                  \"type\": \"string\"\n                 },\n                 \"timeSeriesQuery\": {\n                  \"description\": \"Required. The query for the PieChart. See, `google.monitoring.dashboard.v1.TimeSeriesQuery`.\",\n                  \"properties\": {\n                   \"outputFullDuration\": {\n                    \"description\": \"Optional. If set, Cloud Monitoring will treat the full query duration as the alignment period so that there will be only 1 output value.\",\n                    \"type\": \"boolean\"\n                   },\n                   \"prometheusQuery\": {\n                    \"description\": \"A query used to fetch time series with PromQL.\",\n                    \"type\": \"string\"\n                   },\n                   \"timeSeriesFilter\": {\n                    \"description\": \"Filter parameters to fetch time series.\",\n                    \"properties\": {\n                     \"aggregation\": {\n                      \"description\": \"By default, the raw time series data is returned. Use this field to combine multiple time series for different views of the data.\",\n                      \"properties\": {\n                       \"alignmentPeriod\": {\n                        \"description\": \"The `alignment_period` specifies a time interval, in seconds, that is used to divide the data in all the [time series][google.monitoring.v3.TimeSeries] into consistent blocks of time. This will be done before the per-series aligner can be applied to the data.\",\n                        \"type\": \"string\"\n                       },\n                       \"crossSeriesReducer\": {\n                        \"description\": \"The reduction operation to be used to combine time series into a single time series, where the value of each data point in the resulting series is a function of all the already aligned values in the input time series.\",\n                        \"type\": \"string\"\n                       },\n                       \"groupByFields\": {\n                        \"description\": \"The set of fields to preserve when `cross_series_reducer` is specified.\",\n                        \"items\": {\n                         \"type\": \"string\"\n                        },\n                        \"type\": \"array\"\n                       },\n                       \"perSeriesAligner\": {\n                        \"description\": \"An `Aligner` describes how to bring the data points in a single time series into temporal alignment. Except for `ALIGN_NONE`, all alignments cause all the data points in an `alignment_period` to be mathematically grouped together, resulting in a single data point for each `alignment_period` with end timestamp at the end of the period.\",\n                        \"type\": \"string\"\n                       }\n                      },\n                      \"type\": \"object\"\n                     },\n                     \"filter\": {\n                      \"description\": \"Required. The [monitoring filter](https://cloud.google.com/monitoring/api/v3/filters) that identifies the metric types, resources, and projects to query.\",\n                      \"type\": \"string\"\n                     },\n                     \"pickTimeSeriesFilter\": {\n                      \"description\": \"Ranking based time series filter.\",\n                      \"properties\": {\n                       \"direction\": {\n                        \"description\": \"How to use the ranking to select time series that pass through the filter.\",\n                        \"type\": \"string\"\n                       },\n                       \"numTimeSeries\": {\n                        \"description\": \"How many time series to allow to pass through the filter.\",\n                        \"format\": \"int32\",\n                        \"type\": \"integer\"\n                       },\n                       \"rankingMethod\": {\n                        \"description\": \"`ranking_method` is applied to each time series independently to produce the value which will be used to compare the time series to other time series.\",\n                        \"type\": \"string\"\n                       }\n                      },\n                      \"type\": \"object\"\n                     },\n                     \"secondaryAggregation\": {\n                      \"description\": \"Apply a second aggregation after `aggregation` is applied.\",\n                      \"properties\": {\n                       \"alignmentPeriod\": {\n                        \"description\": \"The `alignment_period` specifies a time interval, in seconds, that is used to divide the data in all the [time series][google.monitoring.v3.TimeSeries] into consistent blocks of time. This will be done before the per-series aligner can be applied to the data.\",\n                        \"type\": \"string\"\n                       },\n                       \"crossSeriesReducer\": {\n                        \"description\": \"The reduction operation to be used to combine time series into a single time series, where the value of each data point in the resulting series is a function of all the already aligned values in the input time series.\",\n                        \"type\": \"string\"\n                       },\n                       \"groupByFields\": {\n                        \"description\": \"The set of fields to preserve when `cross_series_reducer` is specified.\",\n                        \"items\": {\n                         \"type\": \"string\"\n                        },\n                        \"type\": \"array\"\n                       },\n                       \"perSeriesAligner\": {\n                        \"description\": \"An `Aligner` describes how to bring the data points in a single time series into temporal alignment. Except for `ALIGN_NONE`, all alignments cause all the data points in an `alignment_period` to be mathematically grouped together, resulting in a single data point for each `alignment_period` with end timestamp at the end of the period.\",\n                        \"type\": \"string\"\n                       }\n                      },\n                      \"type\": \"object\"\n                     }\n                    },\n                    \"required\": [\n                     \"filter\"\n                    ],\n                    \"type\": \"object\"\n                   },\n                   \"timeSeriesFilterRatio\": {\n                    \"description\": \"Parameters to fetch a ratio between two time series filters.\",\n                    \"properties\": {\n                     \"denominator\": {\n                      \"description\": \"The denominator of the ratio.\",\n                      \"properties\": {\n                       \"aggregation\": {\n                        \"description\": \"By default, the raw time series data is returned.\",\n                        \"properties\": {\n                         \"alignmentPeriod\": {\n                          \"description\": \"The `alignment_period` specifies a time interval, in seconds, that is used to divide the data in all the [time series][google.monitoring.v3.TimeSeries] into consistent blocks of time. This will be done before the per-series aligner can be applied to the data.\",\n                          \"type\": \"string\"\n                         },\n                         \"crossSeriesReducer\": {\n                          \"description\": \"The reduction operation to be used to combine time series into a single time series, where the value of each data point in the resulting series is a function of all the already aligned values in the input time series.\",\n                          \"type\": \"string\"\n                         },\n                         \"groupByFields\": {\n                          \"description\": \"The set of fields to preserve when `cross_series_reducer` is specified.\",\n                          \"items\": {\n                           \"type\": \"string\"\n                          },\n                          \"type\": \"array\"\n                         },\n                         \"perSeriesAligner\": {\n                          \"description\": \"An `Aligner` describes how to bring the data points in a single time series into temporal alignment. Except for `ALIGN_NONE`, all alignments cause all the data points in an `alignment_period` to be mathematically grouped together, resulting in a single data point for each `alignment_period` with end timestamp at the end of the period.\",\n                          \"type\": \"string\"\n                         }\n                        },\n                        \"type\": \"object\"\n                       },\n                       \"filter\": {\n                        \"description\": \"The [monitoring filter](https://cloud.google.com/monitoring/api/v3/filters) that identifies the metric types, resources, and projects to query.\",\n                        \"type\": \"string\"\n                       }\n                      },\n                      \"required\": [\n                       \"filter\"\n                      ],\n                      \"type\": \"object\"\n                     },\n                     \"numerator\": {\n                      \"description\": \"The numerator of the ratio.\",\n                      \"properties\": {\n                       \"aggregation\": {\n                        \"description\": \"By default, the raw time series data is returned.\",\n                        \"properties\": {\n                         \"alignmentPeriod\": {\n                          \"description\": \"The `alignment_period` specifies a time interval, in seconds, that is used to divide the data in all the [time series][google.monitoring.v3.TimeSeries] into consistent blocks of time. This will be done before the per-series aligner can be applied to the data.\",\n                          \"type\": \"string\"\n                         },\n                         \"crossSeriesReducer\": {\n                          \"description\": \"The reduction operation to be used to combine time series into a single time series, where the value of each data point in the resulting series is a function of all the already aligned values in the input time series.\",\n                          \"type\": \"string\"\n                         },\n                         \"groupByFields\": {\n                          \"description\": \"The set of fields to preserve when `cross_series_reducer` is specified.\",\n                          \"items\": {\n                           \"type\": \"string\"\n                          },\n                          \"type\": \"array\"\n                         },\n                         \"perSeriesAligner\": {\n                          \"description\": \"An `Aligner` describes how to bring the data points in a single time series into temporal alignment. Except for `ALIGN_NONE`, all alignments cause all the data points in an `alignment_period` to be mathematically grouped together, resulting in a single data point for each `alignment_period` with end timestamp at the end of the period.\",\n                          \"type\": \"string\"\n                         }\n                        },\n                        \"type\": \"object\"\n                       },\n                       \"filter\": {\n                        \"description\": \"The [monitoring filter](https://cloud.google.com/monitoring/api/v3/filters) that identifies the metric types, resources, and projects to query.\",\n                        \"type\": \"string\"\n                       }\n                      },\n                      \"required\": [\n                       \"filter\"\n                      ],\n                      \"type\": \"object\"\n                     },\n                     \"pickTimeSeriesFilter\": {\n                      \"description\": \"Ranking based time series filter.\",\n                      \"properties\": {\n                       \"direction\": {\n                        \"description\": \"How to use the ranking to select time series that pass through the filter.\",\n                        \"type\": \"string\"\n                       },\n                       \"numTimeSeries\": {\n                        \"description\": \"How many time series to allow to pass through the filter.\",\n                        \"format\": \"int32\",\n                        \"type\": \"integer\"\n                       },\n                       \"rankingMethod\": {\n                        \"description\": \"`ranking_method` is applied to each time series independently to produce the value which will be used to compare the time series to other time series.\",\n                        \"type\": \"string\"\n                       }\n                      },\n                      \"type\": \"object\"\n                     },\n                     \"secondaryAggregation\": {\n                      \"description\": \"Apply a second aggregation after the ratio is computed.\",\n                      \"properties\": {\n                       \"alignmentPeriod\": {\n                        \"description\": \"The `alignment_period` specifies a time interval, in seconds, that is used to divide the data in all the [time series][google.monitoring.v3.TimeSeries] into consistent blocks of time. This will be done before the per-series aligner can be applied to the data.\",\n                        \"type\": \"string\"\n                       },\n                       \"crossSeriesReducer\": {\n                        \"description\": \"The reduction operation to be used to combine time series into a single time series, where the value of each data point in the resulting series is a function of all the already aligned values in the input time series.\",\n                        \"type\": \"string\"\n                       },\n                       \"groupByFields\": {\n                        \"description\": \"The set of fields to preserve when `cross_series_reducer` is specified.\",\n                        \"items\": {\n                         \"type\": \"string\"\n                        },\n                        \"type\": \"array\"\n                       },\n                       \"perSeriesAligner\": {\n                        \"description\": \"An `Aligner` describes how to bring the data points in a single time series into temporal alignment. Except for `ALIGN_NONE`, all alignments cause all the data points in an `alignment_period` to be mathematically grouped together, resulting in a single data point for each `alignment_period` with end timestamp at the end of the period.\",\n                        \"type\": \"string\"\n                       }\n                      },\n                      \"type\": \"object\"\n                     }\n                    },\n                    \"type\": \"object\"\n                   },\n                   \"timeSeriesQueryLanguage\": {\n                    \"description\": \"A query used to fetch time series with MQL.\",\n                    \"type\": \"string\"\n                   },\n                   \"unitOverride\": {\n                    \"description\": \"The unit of data contained in fetched time series. If non-empty, this unit will override any unit that accompanies fetched data. The format is the same as the [`unit`](https://cloud.google.com/monitoring/api/ref_v3/rest/v3/projects.metricDescriptors) field in `MetricDescriptor`.\",\n                    \"type\": \"string\"\n                   }\n                  },\n                  \"type\": \"object\"\n                 }\n                },\n                \"required\": [\n                 \"timeSeriesQuery\"\n                ],\n                \"type\": \"object\"\n               },\n               \"type\": \"array\"\n              },\n              \"showLabels\": {\n               \"description\": \"Optional. Indicates whether or not the pie chart should show slices' labels\",\n               \"type\": \"boolean\"\n              }\n             },\n             \"required\": [\n              \"chartType\",\n              \"dataSets\"\n             ],\n             \"type\": \"object\"\n            },\n            \"scorecard\": {\n             \"description\": \"A scorecard summarizing time series data.\",\n             \"properties\": {\n              \"blankView\": {\n               \"description\": \"Will cause the `Scorecard` to show only the value, with no indicator to its value relative to its thresholds.\",\n               \"type\": \"object\"\n              },\n              \"gaugeView\": {\n               \"description\": \"Will cause the scorecard to show a gauge chart.\",\n               \"properties\": {\n                \"lowerBound\": {\n                 \"description\": \"The lower bound for this gauge chart. The value of the chart should always be greater than or equal to this.\",\n                 \"format\": \"double\",\n                 \"type\": \"number\"\n                },\n                \"upperBound\": {\n                 \"description\": \"The upper bound for this gauge chart. The value of the chart should always be less than or equal to this.\",\n                 \"format\": \"double\",\n                 \"type\": \"number\"\n                }\n               },\n               \"type\": \"object\"\n              },\n              \"sparkChartView\": {\n               \"description\": \"Will cause the scorecard to show a spark chart.\",\n               \"properties\": {\n                \"minAlignmentPeriod\": {\n                 \"description\": \"The lower bound on data point frequency in the chart implemented by specifying the minimum alignment period to use in a time series query.\",\n                 \"type\": \"string\"\n                },\n                \"sparkChartType\": {\n                 \"description\": \"Required. The type of sparkchart to show in this chartView.\",\n                 \"type\": \"string\"\n                }\n               },\n               \"required\": [\n                \"sparkChartType\"\n               ],\n               \"type\": \"object\"\n              },\n              \"thresholds\": {\n               \"description\": \"The thresholds used to determine the state of the scorecard given the time series' current value.\",\n               \"items\": {\n                \"properties\": {\n                 \"color\": {\n                  \"description\": \"The state color for this threshold. Color is not allowed in a XyChart.\",\n                  \"type\": \"string\"\n                 },\n                 \"direction\": {\n                  \"description\": \"The direction for the current threshold. Direction is not allowed in a XyChart.\",\n                  \"type\": \"string\"\n                 },\n                 \"label\": {\n                  \"description\": \"A label for the threshold.\",\n                  \"type\": \"string\"\n                 },\n                 \"targetAxis\": {\n                  \"description\": \"The target axis to use for plotting the threshold. Target axis is not allowed in a Scorecard.\",\n                  \"type\": \"string\"\n                 },\n                 \"value\": {\n                  \"description\": \"The value of the threshold. The value should be defined in the native scale of the metric.\",\n                  \"format\": \"double\",\n                  \"type\": \"number\"\n                 }\n                },\n                \"type\": \"object\"\n               },\n               \"type\": \"array\"\n              },\n              \"timeSeriesQuery\": {\n               \"description\": \"Required. Fields for querying time series data from the Stackdriver metrics API.\",\n               \"properties\": {\n                \"outputFullDuration\": {\n                 \"description\": \"Optional. If set, Cloud Monitoring will treat the full query duration as the alignment period so that there will be only 1 output value.\",\n                 \"type\": \"boolean\"\n                },\n                \"prometheusQuery\": {\n                 \"description\": \"A query used to fetch time series with PromQL.\",\n                 \"type\": \"string\"\n                },\n                \"timeSeriesFilter\": {\n                 \"description\": \"Filter parameters to fetch time series.\",\n                 \"properties\": {\n                  \"aggregation\": {\n                   \"description\": \"By default, the raw time series data is returned. Use this field to combine multiple time series for different views of the data.\",\n                   \"properties\": {\n                    \"alignmentPeriod\": {\n                     \"description\": \"The `alignment_period` specifies a time interval, in seconds, that is used to divide the data in all the [time series][google.monitoring.v3.TimeSeries] into consistent blocks of time. This will be done before the per-series aligner can be applied to the data.\",\n                     \"type\": \"string\"\n                    },\n                    \"crossSeriesReducer\": {\n                     \"description\": \"The reduction operation to be used to combine time series into a single time series, where the value of each data point in the resulting series is a function of all the already aligned values in the input time series.\",\n                     \"type\": \"string\"\n                    },\n                    \"groupByFields\": {\n                     \"description\": \"The set of fields to preserve when `cross_series_reducer` is specified.\",\n                     \"items\": {\n                      \"type\": \"string\"\n                     },\n                     \"type\": \"array\"\n                    },\n                    \"perSeriesAligner\": {\n                     \"description\": \"An `Aligner` describes how to bring the data points in a single time series into temporal alignment. Except for `ALIGN_NONE`, all alignments cause all the data points in an `alignment_period` to be mathematically grouped together, resulting in a single data point for each `alignment_period` with end timestamp at the end of the period.\",\n                     \"type\": \"string\"\n                    }\n                   },\n                   \"type\": \"object\"\n                  },\n                  \"filter\": {\n                   \"description\": \"Required. The [monitoring filter](https://cloud.google.com/monitoring/api/v3/filters) that identifies the metric types, resources, and projects to query.\",\n                   \"type\": \"string\"\n                  },\n                  \"pickTimeSeriesFilter\": {\n                   \"description\": \"Ranking based time series filter.\",\n                   \"properties\": {\n                    \"direction\": {\n                     \"description\": \"How to use the ranking to select time series that pass through the filter.\",\n                     \"type\": \"string\"\n                    },\n                    \"numTimeSeries\": {\n                     \"description\": \"How many time series to allow to pass through the filter.\",\n                     \"format\": \"int32\",\n                     \"type\": \"integer\"\n                    },\n                    \"rankingMethod\": {\n                     \"description\": \"`ranking_method` is applied to each time series independently to produce the value which will be used to compare the time series to other time series.\",\n                     \"type\": \"string\"\n                    }\n                   },\n                   \"type\": \"object\"\n                  },\n                  \"secondaryAggregation\": {\n                   \"description\": \"Apply a second aggregation after `aggregation` is applied.\",\n                   \"properties\": {\n                    \"alignmentPeriod\": {\n                     \"description\": \"The `alignment_period` specifies a time interval, in seconds, that is used to divide the data in all the [time series][google.monitoring.v3.TimeSeries] into consistent blocks of time. This will be done before the per-series aligner can be applied to the data.\",\n                     \"type\": \"string\"\n                    },\n                    \"crossSeriesReducer\": {\n                     \"description\": \"The reduction operation to be used to combine time series into a single time series, where the value of each data point in the resulting series is a function of all the already aligned values in the input time series.\",\n                     \"type\": \"string\"\n                    },\n                    \"groupByFields\": {\n                     \"description\": \"The set of fields to preserve when `cross_series_reducer` is specified.\",\n                     \"items\": {\n                      \"type\": \"string\"\n                     },\n                     \"type\": \"array\"\n                    },\n                    \"perSeriesAligner\": {\n                     \"description\": \"An `Aligner` describes how to bring the data points in a single time series into temporal alignment. Except for `ALIGN_NONE`, all alignments cause all the data points in an `alignment_period` to be mathematically grouped together, resulting in a single data point for each `alignment_period` with end timestamp at the end of the period.\",\n                     \"type\": \"string\"\n                    }\n                   },\n                   \"type\": \"object\"\n                  }\n                 },\n                 \"required\": [\n                  \"filter\"\n                 ],\n                 \"type\": \"object\"\n                },\n                \"timeSeriesFilterRatio\": {\n                 \"description\": \"Parameters to fetch a ratio between two time series filters.\",\n                 \"properties\": {\n                  \"denominator\": {\n                   \"description\": \"The denominator of the ratio.\",\n                   \"properties\": {\n                    \"aggregation\": {\n                     \"description\": \"By default, the raw time series data is returned.\",\n                     \"properties\": {\n                      \"alignmentPeriod\": {\n                       \"description\": \"The `alignment_period` specifies a time interval, in seconds, that is used to divide the data in all the [time series][google.monitoring.v3.TimeSeries] into consistent blocks of time. This will be done before the per-series aligner can be applied to the data.\",\n                       \"type\": \"string\"\n                      },\n                      \"crossSeriesReducer\": {\n                       \"description\": \"The reduction operation to be used to combine time series into a single time series, where the value of each data point in the resulting series is a function of all the already aligned values in the input time series.\",\n                       \"type\": \"string\"\n                      },\n                      \"groupByFields\": {\n                       \"description\": \"The set of fields to preserve when `cross_series_reducer` is specified.\",\n                       \"items\": {\n                        \"type\": \"string\"\n                       },\n                       \"type\": \"array\"\n                      },\n                      \"perSeriesAligner\": {\n                       \"description\": \"An `Aligner` describes how to bring the data points in a single time series into temporal alignment. Except for `ALIGN_NONE`, all alignments cause all the data points in an `alignment_period` to be mathematically grouped together, resulting in a single data point for each `alignment_period` with end timestamp at the end of the period.\",\n                       \"type\": \"string\"\n                      }\n                     },\n                     \"type\": \"object\"\n                    },\n                    \"filter\": {\n                     \"description\": \"The [monitoring filter](https://cloud.google.com/monitoring/api/v3/filters) that identifies the metric types, resources, and projects to query.\",\n                     \"type\": \"string\"\n                    }\n                   },\n                   \"required\": [\n                    \"filter\"\n                   ],\n                   \"type\": \"object\"\n                  },\n                  \"numerator\": {\n                   \"description\": \"The numerator of the ratio.\",\n                   \"properties\": {\n                    \"aggregation\": {\n                     \"description\": \"By default, the raw time series data is returned.\",\n                     \"properties\": {\n                      \"alignmentPeriod\": {\n                       \"description\": \"The `alignment_period` specifies a time interval, in seconds, that is used to divide the data in all the [time series][google.monitoring.v3.TimeSeries] into consistent blocks of time. This will be done before the per-series aligner can be applied to the data.\",\n                       \"type\": \"string\"\n                      },\n                      \"crossSeriesReducer\": {\n                       \"description\": \"The reduction operation to be used to combine time series into a single time series, where the value of each data point in the resulting series is a function of all the already aligned values in the input time series.\",\n                       \"type\": \"string\"\n                      },\n                      \"groupByFields\": {\n                       \"description\": \"The set of fields to preserve when `cross_series_reducer` is specified.\",\n                       \"items\": {\n                        \"type\": \"string\"\n                       },\n                       \"type\": \"array\"\n                      },\n                      \"perSeriesAligner\": {\n                       \"description\": \"An `Aligner` describes how to bring the data points in a single time series into temporal alignment. Except for `ALIGN_NONE`, all alignments cause all the data points in an `alignment_period` to be mathematically grouped together, resulting in a single data point for each `alignment_period` with end timestamp at the end of the period.\",\n                       \"type\": \"string\"\n                      }\n                     },\n                     \"type\": \"object\"\n                    },\n                    \"filter\": {\n                     \"description\": \"The [monitoring filter](https://cloud.google.com/monitoring/api/v3/filters) that identifies the metric types, resources, and projects to query.\",\n                     \"type\": \"string\"\n                    }\n                   },\n                   \"required\": [\n                    \"filter\"\n                   ],\n                   \"type\": \"object\"\n                  },\n                  \"pickTimeSeriesFilter\": {\n                   \"description\": \"Ranking based time series filter.\",\n                   \"properties\": {\n                    \"direction\": {\n                     \"description\": \"How to use the ranking to select time series that pass through the filter.\",\n                     \"type\": \"string\"\n                    },\n                    \"numTimeSeries\": {\n                     \"description\": \"How many time series to allow to pass through the filter.\",\n                     \"format\": \"int32\",\n                     \"type\": \"integer\"\n                    },\n                    \"rankingMethod\": {\n                     \"description\": \"`ranking_method` is applied to each time series independently to produce the value which will be used to compare the time series to other time series.\",\n                     \"type\": \"string\"\n                    }\n                   },\n                   \"type\": \"object\"\n                  },\n                  \"secondaryAggregation\": {\n                   \"description\": \"Apply a second aggregation after the ratio is computed.\",\n                   \"properties\": {\n                    \"alignmentPeriod\": {\n                     \"description\": \"The `alignment_period` specifies a time interval, in seconds, that is used to divide the data in all the [time series][google.monitoring.v3.TimeSeries] into consistent blocks of time. This will be done before the per-series aligner can be applied to the data.\",\n                     \"type\": \"string\"\n                    },\n                    \"crossSeriesReducer\": {\n                     \"description\": \"The reduction operation to be used to combine time series into a single time series, where the value of each data point in the resulting series is a function of all the already aligned values in the input time series.\",\n                     \"type\": \"string\"\n                    },\n                    \"groupByFields\": {\n                     \"description\": \"The set of fields to preserve when `cross_series_reducer` is specified.\",\n                     \"items\": {\n                      \"type\": \"string\"\n                     },\n                     \"type\": \"array\"\n                    },\n                    \"perSeriesAligner\": {\n                     \"description\": \"An `Aligner` describes how to bring the data points in a single time series into temporal alignment. Except for `ALIGN_NONE`, all alignments cause all the data points in an `alignment_period` to be mathematically grouped together, resulting in a single data point for each `alignment_period` with end timestamp at the end of the period.\",\n                     \"type\": \"string\"\n                    }\n                   },\n                   \"type\": \"object\"\n                  }\n                 },\n                 \"type\": \"object\"\n                },\n                \"timeSeriesQueryLanguage\": {\n                 \"description\": \"A query used to fetch time series with MQL.\",\n                 \"type\": \"string\"\n                },\n                \"unitOverride\": {\n                 \"description\": \"The unit of data contained in fetched time series. If non-empty, this unit will override any unit that accompanies fetched data. The format is the same as the [`unit`](https://cloud.google.com/monitoring/api/ref_v3/rest/v3/projects.metricDescriptors) field in `MetricDescriptor`.\",\n                 \"type\": \"string\"\n                }\n               },\n               \"type\": \"object\"\n              }\n             },\n             \"required\": [\n              \"timeSeriesQuery\"\n             ],\n             \"type\": \"object\"\n            },\n            \"sectionHeader\": {\n             \"description\": \"A widget that defines a section header for easier navigation of the dashboard.\",\n             \"properties\": {\n              \"dividerBelow\": {\n               \"description\": \"Whether to insert a divider below the section in the table of contents\",\n               \"type\": \"boolean\"\n              },\n              \"subtitle\": {\n               \"description\": \"The subtitle of the section\",\n               \"type\": \"string\"\n              }\n             },\n             \"type\": \"object\"\n            },\n            \"singleViewGroup\": {\n             \"description\": \"A widget that groups the other widgets by using a dropdown menu.\",\n             \"type\": \"object\"\n            },\n            \"text\": {\n             \"description\": \"A raw string or markdown displaying textual content.\",\n             \"properties\": {\n              \"content\": {\n               \"description\": \"The text content to be displayed.\",\n               \"type\": \"string\"\n              },\n              \"format\": {\n               \"description\": \"How the text content is formatted.\",\n               \"type\": \"string\"\n              },\n              \"style\": {\n               \"description\": \"How the text is styled\",\n               \"properties\": {\n                \"backgroundColor\": {\n                 \"description\": \"The background color as a hex string. \\\"#RRGGBB\\\" or \\\"#RGB\\\"\",\n                 \"type\": \"string\"\n                },\n                \"fontSize\": {\n                 \"description\": \"Font sizes for both the title and content. The title will still be larger relative to the content.\",\n                 \"type\": \"string\"\n                },\n                \"horizontalAlignment\": {\n                 \"description\": \"The horizontal alignment of both the title and content\",\n                 \"type\": \"string\"\n                },\n                \"padding\": {\n                 \"description\": \"The amount of padding around the widget\",\n                 \"type\": \"string\"\n                },\n                \"pointerLocation\": {\n                 \"description\": \"The pointer location for this widget (also sometimes called a \\\"tail\\\")\",\n                 \"type\": \"string\"\n                },\n                \"textColor\": {\n                 \"description\": \"The text color as a hex string. \\\"#RRGGBB\\\" or \\\"#RGB\\\"\",\n                 \"type\": \"string\"\n                },\n                \"verticalAlignment\": {\n                 \"description\": \"The vertical alignment of both the title and content\",\n                 \"type\": \"string\"\n                }\n               },\n               \"type\": \"object\"\n              }\n             },\n             \"type\": \"object\"\n            },\n            \"timeSeriesTable\": {\n             \"description\": \"A widget that displays time series data in a tabular format.\",\n             \"properties\": {\n              \"columnSettings\": {\n               \"description\": \"Optional. The list of the persistent column settings for the table.\",\n               \"items\": {\n                \"properties\": {\n                 \"column\": {\n                  \"description\": \"Required. The id of the column.\",\n                  \"type\": \"string\"\n                 },\n                 \"visible\": {\n                  \"description\": \"Required. Whether the column should be visible on page load.\",\n                  \"type\": \"boolean\"\n                 }\n                },\n                \"required\": [\n                 \"column\",\n                 \"visible\"\n                ],\n                \"type\": \"object\"\n               },\n               \"type\": \"array\"\n              },\n              \"dataSets\": {\n               \"description\": \"Required. The data displayed in this table.\",\n               \"items\": {\n                \"properties\": {\n                 \"minAlignmentPeriod\": {\n                  \"description\": \"Optional. The lower bound on data point frequency for this data set.\",\n                  \"type\": \"string\"\n                 },\n                 \"tableDisplayOptions\": {\n                  \"description\": \"Optional. Table display options for configuring how the table is rendered.\",\n                  \"properties\": {\n                   \"shownColumns\": {\n                    \"description\": \"Optional. This field is unused and has been replaced by TimeSeriesTable.column_settings\",\n                    \"items\": {\n                     \"type\": \"string\"\n                    },\n                    \"type\": \"array\"\n                   }\n                  },\n                  \"type\": \"object\"\n                 },\n                 \"tableTemplate\": {\n                  \"description\": \"Optional. A template string for naming `TimeSeries` in the resulting data set.\",\n                  \"type\": \"string\"\n                 },\n                 \"timeSeriesQuery\": {\n                  \"description\": \"Required. Fields for querying time series data from the Stackdriver metrics API.\",\n                  \"properties\": {\n                   \"outputFullDuration\": {\n                    \"description\": \"Optional. If set, Cloud Monitoring will treat the full query duration as the alignment period so that there will be only 1 output value.\",\n                    \"type\": \"boolean\"\n                   },\n                   \"prometheusQuery\": {\n                    \"description\": \"A query used to fetch time series with PromQL.\",\n                    \"type\": \"string\"\n                   },\n                   \"timeSeriesFilter\": {\n                    \"description\": \"Filter parameters to fetch time series.\",\n                    \"properties\": {\n                     \"aggregation\": {\n                      \"description\": \"By default, the raw time series data is returned. Use this field to combine multiple time series for different views of the data.\",\n                      \"properties\": {\n                       \"alignmentPeriod\": {\n                        \"description\": \"The `alignment_period` specifies a time interval, in seconds, that is used to divide the data in all the [time series][google.monitoring.v3.TimeSeries] into consistent blocks of time. This will be done before the per-series aligner can be applied to the data.\",\n                        \"type\": \"string\"\n                       },\n                       \"crossSeriesReducer\": {\n                        \"description\": \"The reduction operation to be used to combine time series into a single time series, where the value of each data point in the resulting series is a function of all the already aligned values in the input time series.\",\n                        \"type\": \"string\"\n                       },\n                       \"groupByFields\": {\n                        \"description\": \"The set of fields to preserve when `cross_series_reducer` is specified.\",\n                        \"items\": {\n                         \"type\": \"string\"\n                        },\n                        \"type\": \"array\"\n                       },\n                       \"perSeriesAligner\": {\n                        \"description\": \"An `Aligner` describes how to bring the data points in a single time series into temporal alignment. Except for `ALIGN_NONE`, all alignments cause all the data points in an `alignment_period` to be mathematically grouped together, resulting in a single data point for each `alignment_period` with end timestamp at the end of the period.\",\n                        \"type\": \"string\"\n                       }\n                      },\n                      \"type\": \"object\"\n                     },\n                     \"filter\": {\n                      \"description\": \"Required. The [monitoring filter](https://cloud.google.com/monitoring/api/v3/filters) that identifies the metric types, resources, and projects to query.\",\n                      \"type\": \"string\"\n                     },\n                     \"pickTimeSeriesFilter\": {\n                      \"description\": \"Ranking based time series filter.\",\n                      \"properties\": {\n                       \"direction\": {\n                        \"description\": \"How to use the ranking to select time series that pass through the filter.\",\n                        \"type\": \"string\"\n                       },\n                       \"numTimeSeries\": {\n                        \"description\": \"How many time series to allow to pass through the filter.\",\n                        \"format\": \"int32\",\n                        \"type\": \"integer\"\n                       },\n                       \"rankingMethod\": {\n                        \"description\": \"`ranking_method` is applied to each time series independently to produce the value which will be used to compare the time series to other time series.\",\n                        \"type\": \"string\"\n                       }\n                      },\n                      \"type\": \"object\"\n                     },\n                     \"secondaryAggregation\": {\n                      \"description\": \"Apply a second aggregation after `aggregation` is applied.\",\n                      \"properties\": {\n                       \"alignmentPeriod\": {\n                        \"description\": \"The `alignment_period` specifies a time interval, in seconds, that is used to divide the data in all the [time series][google.monitoring.v3.TimeSeries] into consistent blocks of time. This will be done before the per-series aligner can be applied to the data.\",\n                        \"type\": \"string\"\n                       },\n                       \"crossSeriesReducer\": {\n                        \"description\": \"The reduction operation to be used to combine time series into a single time series, where the value of each data point in the resulting series is a function of all the already aligned values in the input time series.\",\n                        \"type\": \"string\"\n                       },\n                       \"groupByFields\": {\n                        \"description\": \"The set of fields to preserve when `cross_series_reducer` is specified.\",\n                        \"items\": {\n                         \"type\": \"string\"\n                        },\n                        \"type\": \"array\"\n                       },\n                       \"perSeriesAligner\": {\n                        \"description\": \"An `Aligner` describes how to bring the data points in a single time series into temporal alignment. Except for `ALIGN_NONE`, all alignments cause all the data points in an `alignment_period` to be mathematically grouped together, resulting in a single data point for each `alignment_period` with end timestamp at the end of the period.\",\n                        \"type\": \"string\"\n                       }\n                      },\n                      \"type\": \"object\"\n                     }\n                    },\n                    \"required\": [\n                     \"filter\"\n                    ],\n                    \"type\": \"object\"\n                   },\n                   \"timeSeriesFilterRatio\": {\n                    \"description\": \"Parameters to fetch a ratio between two time series filters.\",\n                    \"properties\": {\n                     \"denominator\": {\n                      \"description\": \"The denominator of the ratio.\",\n                      \"properties\": {\n                       \"aggregation\": {\n                        \"description\": \"By default, the raw time series data is returned.\",\n                        \"properties\": {\n                         \"alignmentPeriod\": {\n                          \"description\": \"The `alignment_period` specifies a time interval, in seconds, that is used to divide the data in all the [time series][google.monitoring.v3.TimeSeries] into consistent blocks of time. This will be done before the per-series aligner can be applied to the data.\",\n                          \"type\": \"string\"\n                         },\n                         \"crossSeriesReducer\": {\n                          \"description\": \"The reduction operation to be used to combine time series into a single time series, where the value of each data point in the resulting series is a function of all the already aligned values in the input time series.\",\n                          \"type\": \"string\"\n                         },\n                         \"groupByFields\": {\n                          \"description\": \"The set of fields to preserve when `cross_series_reducer` is specified.\",\n                          \"items\": {\n                           \"type\": \"string\"\n                          },\n                          \"type\": \"array\"\n                         },\n                         \"perSeriesAligner\": {\n                          \"description\": \"An `Aligner` describes how to bring the data points in a single time series into temporal alignment. Except for `ALIGN_NONE`, all alignments cause all the data points in an `alignment_period` to be mathematically grouped together, resulting in a single data point for each `alignment_period` with end timestamp at the end of the period.\",\n                          \"type\": \"string\"\n                         }\n                        },\n                        \"type\": \"object\"\n                       },\n                       \"filter\": {\n                        \"description\": \"The [monitoring filter](https://cloud.google.com/monitoring/api/v3/filters) that identifies the metric types, resources, and projects to query.\",\n                        \"type\": \"string\"\n                       }\n                      },\n                      \"required\": [\n                       \"filter\"\n                      ],\n                      \"type\": \"object\"\n                     },\n                     \"numerator\": {\n                      \"description\": \"The numerator of the ratio.\",\n                      \"properties\": {\n                       \"aggregation\": {\n                        \"description\": \"By default, the raw time series data is returned.\",\n                        \"properties\": {\n                         \"alignmentPeriod\": {\n                          \"description\": \"The `alignment_period` specifies a time interval, in seconds, that is used to divide the data in all the [time series][google.monitoring.v3.TimeSeries] into consistent blocks of time. This will be done before the per-series aligner can be applied to the data.\",\n                          \"type\": \"string\"\n                         },\n                         \"crossSeriesReducer\": {\n                          \"description\": \"The reduction operation to be used to combine time series into a single time series, where the value of each data point in the resulting series is a function of all the already aligned values in the input time series.\",\n                          \"type\": \"string\"\n                         },\n                         \"groupByFields\": {\n                          \"description\": \"The set of fields to preserve when `cross_series_reducer` is specified.\",\n                          \"items\": {\n                           \"type\": \"string\"\n                          },\n                          \"type\": \"array\"\n                         },\n                         \"perSeriesAligner\": {\n                          \"description\": \"An `Aligner` describes how to bring the data points in a single time series into temporal alignment. Except for `ALIGN_NONE`, all alignments cause all the data points in an `alignment_period` to be mathematically grouped together, resulting in a single data point for each `alignment_period` with end timestamp at the end of the period.\",\n                          \"type\": \"string\"\n                         }\n                        },\n                        \"type\": \"object\"\n                       },\n                       \"filter\": {\n                        \"description\": \"The [monitoring filter](https://cloud.google.com/monitoring/api/v3/filters) that identifies the metric types, resources, and projects to query.\",\n                        \"type\": \"string\"\n                       }\n                      },\n                      \"required\": [\n                       \"filter\"\n                      ],\n                      \"type\": \"object\"\n                     },\n                     \"pickTimeSeriesFilter\": {\n                      \"description\": \"Ranking based time series filter.\",\n                      \"properties\": {\n                       \"direction\": {\n                        \"description\": \"How to use the ranking to select time series that pass through the filter.\",\n                        \"type\": \"string\"\n                       },\n                       \"numTimeSeries\": {\n                        \"description\": \"How many time series to allow to pass through the filter.\",\n                        \"format\": \"int32\",\n                        \"type\": \"integer\"\n                       },\n                       \"rankingMethod\": {\n                        \"description\": \"`ranking_method` is applied to each time series independently to produce the value which will be used to compare the time series to other time series.\",\n                        \"type\": \"string\"\n                       }\n                      },\n                      \"type\": \"object\"\n                     },\n                     \"secondaryAggregation\": {\n                      \"description\": \"Apply a second aggregation after the ratio is computed.\",\n                      \"properties\": {\n                       \"alignmentPeriod\": {\n                        \"description\": \"The `alignment_period` specifies a time interval, in seconds, that is used to divide the data in all the [time series][google.monitoring.v3.TimeSeries] into consistent blocks of time. This will be done before the per-series aligner can be applied to the data.\",\n                        \"type\": \"string\"\n                       },\n                       \"crossSeriesReducer\": {\n                        \"description\": \"The reduction operation to be used to combine time series into a single time series, where the value of each data point in the resulting series is a function of all the already aligned values in the input time series.\",\n                        \"type\": \"string\"\n                       },\n                       \"groupByFields\": {\n                        \"description\": \"The set of fields to preserve when `cross_series_reducer` is specified.\",\n                        \"items\": {\n                         \"type\": \"string\"\n                        },\n                        \"type\": \"array\"\n                       },\n                       \"perSeriesAligner\": {\n                        \"description\": \"An `Aligner` describes how to bring the data points in a single time series into temporal alignment. Except for `ALIGN_NONE`, all alignments cause all the data points in an `alignment_period` to be mathematically grouped together, resulting in a single data point for each `alignment_period` with end timestamp at the end of the period.\",\n                        \"type\": \"string\"\n                       }\n                      },\n                      \"type\": \"object\"\n                     }\n                    },\n                    \"type\": \"object\"\n                   },\n                   \"timeSeriesQueryLanguage\": {\n                    \"description\": \"A query used to fetch time series with MQL.\",\n                    \"type\": \"string\"\n                   },\n                   \"unitOverride\": {\n                    \"description\": \"The unit of data contained in fetched time series. If non-empty, this unit will override any unit that accompanies fetched data. The format is the same as the [`unit`](https://cloud.google.com/monitoring/api/ref_v3/rest/v3/projects.metricDescriptors) field in `MetricDescriptor`.\",\n                    \"type\": \"string\"\n                   }\n                  },\n                  \"type\": \"object\"\n                 }\n                },\n                \"type\": \"object\"\n               },\n               \"type\": \"array\"\n              },\n              \"metricVisualization\": {\n               \"description\": \"Optional. Store rendering strategy\",\n               \"type\": \"string\"\n              }\n             },\n             \"required\": [\n              \"dataSets\"\n             ],\n             \"type\": \"object\"\n            },\n            \"title\": {\n             \"description\": \"Optional. The title of the widget.\",\n             \"type\": \"string\"\n            },\n            \"xyChart\": {\n             \"description\": \"A chart of time series data.\",\n             \"properties\": {\n              \"chartOptions\": {\n               \"description\": \"Display options for the chart.\",\n               \"properties\": {\n                \"mode\": {\n                 \"description\": \"The chart mode.\",\n                 \"type\": \"string\"\n                }\n               },\n               \"type\": \"object\"\n              },\n              \"dataSets\": {\n               \"description\": \"Required. The data displayed in this chart.\",\n               \"items\": {\n                \"properties\": {\n                 \"legendTemplate\": {\n                  \"description\": \"A template string for naming `TimeSeries` in the resulting data set.\",\n                  \"type\": \"string\"\n                 },\n                 \"minAlignmentPeriod\": {\n                  \"description\": \"Optional. The lower bound on data point frequency for this data set.\",\n                  \"type\": \"string\"\n                 },\n                 \"plotType\": {\n                  \"description\": \"How this data should be plotted on the chart.\",\n                  \"type\": \"string\"\n                 },\n                 \"targetAxis\": {\n                  \"description\": \"Optional. The target axis to use for plotting the metric.\",\n                  \"type\": \"string\"\n                 },\n                 \"timeSeriesQuery\": {\n                  \"description\": \"Fields for querying time series data from the Stackdriver metrics API.\",\n                  \"properties\": {\n                   \"outputFullDuration\": {\n                    \"description\": \"Optional. If set, Cloud Monitoring will treat the full query duration as the alignment period so that there will be only 1 output value.\",\n                    \"type\": \"boolean\"\n                   },\n                   \"prometheusQuery\": {\n                    \"description\": \"A query used to fetch time series with PromQL.\",\n                    \"type\": \"string\"\n                   },\n                   \"timeSeriesFilter\": {\n                    \"description\": \"Filter parameters to fetch time series.\",\n                    \"properties\": {\n                     \"aggregation\": {\n                      \"description\": \"By default, the raw time series data is returned. Use this field to combine multiple time series for different views of the data.\",\n                      \"properties\": {\n                       \"alignmentPeriod\": {\n                        \"description\": \"The `alignment_period` specifies a time interval, in seconds, that is used to divide the data in all the [time series][google.monitoring.v3.TimeSeries] into consistent blocks of time. This will be done before the per-series aligner can be applied to the data.\",\n                        \"type\": \"string\"\n                       },\n                       \"crossSeriesReducer\": {\n                        \"description\": \"The reduction operation to be used to combine time series into a single time series, where the value of each data point in the resulting series is a function of all the already aligned values in the input time series.\",\n                        \"type\": \"string\"\n                       },\n                       \"groupByFields\": {\n                        \"description\": \"The set of fields to preserve when `cross_series_reducer` is specified.\",\n                        \"items\": {\n                         \"type\": \"string\"\n                        },\n                        \"type\": \"array\"\n                       },\n                       \"perSeriesAligner\": {\n                        \"description\": \"An `Aligner` describes how to bring the data points in a single time series into temporal alignment. Except for `ALIGN_NONE`, all alignments cause all the data points in an `alignment_period` to be mathematically grouped together, resulting in a single data point for each `alignment_period` with end timestamp at the end of the period.\",\n                        \"type\": \"string\"\n                       }\n                      },\n                      \"type\": \"object\"\n                     },\n                     \"filter\": {\n                      \"description\": \"Required. The [monitoring filter](https://cloud.google.com/monitoring/api/v3/filters) that identifies the metric types, resources, and projects to query.\",\n                      \"type\": \"string\"\n                     },\n                     \"pickTimeSeriesFilter\": {\n                      \"description\": \"Ranking based time series filter.\",\n                      \"properties\": {\n                       \"direction\": {\n                        \"description\": \"How to use the ranking to select time series that pass through the filter.\",\n                        \"type\": \"string\"\n                       },\n                       \"numTimeSeries\": {\n                        \"description\": \"How many time series to allow to pass through the filter.\",\n                        \"format\": \"int32\",\n                        \"type\": \"integer\"\n                       },\n                       \"rankingMethod\": {\n                        \"description\": \"`ranking_method` is applied to each time series independently to produce the value which will be used to compare the time series to other time series.\",\n                        \"type\": \"string\"\n                       }\n                      },\n                      \"type\": \"object\"\n                     },\n                     \"secondaryAggregation\": {\n                      \"description\": \"Apply a second aggregation after `aggregation` is applied.\",\n                      \"properties\": {\n                       \"alignmentPeriod\": {\n                        \"description\": \"The `alignment_period` specifies a time interval, in seconds, that is used to divide the data in all the [time series][google.monitoring.v3.TimeSeries] into consistent blocks of time. This will be done before the per-series aligner can be applied to the data.\",\n                        \"type\": \"string\"\n                       },\n                       \"crossSeriesReducer\": {\n                        \"description\": \"The reduction operation to be used to combine time series into a single time series, where the value of each data point in the resulting series is a function of all the already aligned values in the input time series.\",\n                        \"type\": \"string\"\n                       },\n                       \"groupByFields\": {\n                        \"description\": \"The set of fields to preserve when `cross_series_reducer` is specified.\",\n                        \"items\": {\n                         \"type\": \"string\"\n                        },\n                        \"type\": \"array\"\n                       },\n                       \"perSeriesAligner\": {\n                        \"description\": \"An `Aligner` describes how to bring the data points in a single time series into temporal alignment. Except for `ALIGN_NONE`, all alignments cause all the data points in an `alignment_period` to be mathematically grouped together, resulting in a single data point for each `alignment_period` with end timestamp at the end of the period.\",\n                        \"type\": \"string\"\n                       }\n                      },\n                      \"type\": \"object\"\n                     }\n                    },\n                    \"required\": [\n                     \"filter\"\n                    ],\n                    \"type\": \"object\"\n                   },\n                   \"timeSeriesFilterRatio\": {\n                    \"description\": \"Parameters to fetch a ratio between two time series filters.\",\n                    \"properties\": {\n                     \"denominator\": {\n                      \"description\": \"The denominator of the ratio.\",\n                      \"properties\": {\n                       \"aggregation\": {\n                        \"description\": \"By default, the raw time series data is returned.\",\n                        \"properties\": {\n                         \"alignmentPeriod\": {\n                          \"description\": \"The `alignment_period` specifies a time interval, in seconds, that is used to divide the data in all the [time series][google.monitoring.v3.TimeSeries] into consistent blocks of time. This will be done before the per-series aligner can be applied to the data.\",\n                          \"type\": \"string\"\n                         },\n                         \"crossSeriesReducer\": {\n                          \"description\": \"The reduction operation to be used to combine time series into a single time series, where the value of each data point in the resulting series is a function of all the already aligned values in the input time series.\",\n                          \"type\": \"string\"\n                         },\n                         \"groupByFields\": {\n                          \"description\": \"The set of fields to preserve when `cross_series_reducer` is specified.\",\n                          \"items\": {\n                           \"type\": \"string\"\n                          },\n                          \"type\": \"array\"\n                         },\n                         \"perSeriesAligner\": {\n                          \"description\": \"An `Aligner` describes how to bring the data points in a single time series into temporal alignment. Except for `ALIGN_NONE`, all alignments cause all the data points in an `alignment_period` to be mathematically grouped together, resulting in a single data point for each `alignment_period` with end timestamp at the end of the period.\",\n                          \"type\": \"string\"\n                         }\n                        },\n                        \"type\": \"object\"\n                       },\n                       \"filter\": {\n                        \"description\": \"The [monitoring filter](https://cloud.google.com/monitoring/api/v3/filters) that identifies the metric types, resources, and projects to query.\",\n                        \"type\": \"string\"\n                       }\n                      },\n                      \"required\": [\n                       \"filter\"\n                      ],\n                      \"type\": \"object\"\n                     },\n                     \"numerator\": {\n                      \"description\": \"The numerator of the ratio.\",\n                      \"properties\": {\n                       \"aggregation\": {\n                        \"description\": \"By default, the raw time series data is returned.\",\n                        \"properties\": {\n                         \"alignmentPeriod\": {\n                          \"description\": \"The `alignment_period` specifies a time interval, in seconds, that is used to divide the data in all the [time series][google.monitoring.v3.TimeSeries] into consistent blocks of time. This will be done before the per-series aligner can be applied to the data.\",\n                          \"type\": \"string\"\n                         },\n                         \"crossSeriesReducer\": {\n                          \"description\": \"The reduction operation to be used to combine time series into a single time series, where the value of each data point in the resulting series is a function of all the already aligned values in the input time series.\",\n                          \"type\": \"string\"\n                         },\n                         \"groupByFields\": {\n                          \"description\": \"The set of fields to preserve when `cross_series_reducer` is specified.\",\n                          \"items\": {\n                           \"type\": \"string\"\n                          },\n                          \"type\": \"array\"\n                         },\n                         \"perSeriesAligner\": {\n                          \"description\": \"An `Aligner` describes how to bring the data points in a single time series into temporal alignment. Except for `ALIGN_NONE`, all alignments cause all the data points in an `alignment_period` to be mathematically grouped together, resulting in a single data point for each `alignment_period` with end timestamp at the end of the period.\",\n                          \"type\": \"string\"\n                         }\n                        },\n                        \"type\": \"object\"\n                       },\n                       \"filter\": {\n                        \"description\": \"The [monitoring filter](https://cloud.google.com/monitoring/api/v3/filters) that identifies the metric types, resources, and projects to query.\",\n                        \"type\": \"string\"\n                       }\n                      },\n                      \"required\": [\n                       \"filter\"\n                      ],\n                      \"type\": \"object\"\n                     },\n                     \"pickTimeSeriesFilter\": {\n                      \"description\": \"Ranking based time series filter.\",\n                      \"properties\": {\n                       \"direction\": {\n                        \"description\": \"How to use the ranking to select time series that pass through the filter.\",\n                        \"type\": \"string\"\n                       },\n                       \"numTimeSeries\": {\n                        \"description\": \"How many time series to allow to pass through the filter.\",\n                        \"format\": \"int32\",\n                        \"type\": \"integer\"\n                       },\n                       \"rankingMethod\": {\n                        \"description\": \"`ranking_method` is applied to each time series independently to produce the value which will be used to compare the time series to other time series.\",\n                        \"type\": \"string\"\n                       }\n                      },\n                      \"type\": \"object\"\n                     },\n                     \"secondaryAggregation\": {\n                      \"description\": \"Apply a second aggregation after the ratio is computed.\",\n                      \"properties\": {\n                       \"alignmentPeriod\": {\n                        \"description\": \"The `alignment_period` specifies a time interval, in seconds, that is used to divide the data in all the [time series][google.monitoring.v3.TimeSeries] into consistent blocks of time. This will be done before the per-series aligner can be applied to the data.\",\n                        \"type\": \"string\"\n                       },\n                       \"crossSeriesReducer\": {\n                        \"description\": \"The reduction operation to be used to combine time series into a single time series, where the value of each data point in the resulting series is a function of all the already aligned values in the input time series.\",\n                        \"type\": \"string\"\n                       },\n                       \"groupByFields\": {\n                        \"description\": \"The set of fields to preserve when `cross_series_reducer` is specified.\",\n                        \"items\": {\n                         \"type\": \"string\"\n                        },\n                        \"type\": \"array\"\n                       },\n                       \"perSeriesAligner\": {\n                        \"description\": \"An `Aligner` describes how to bring the data points in a single time series into temporal alignment. Except for `ALIGN_NONE`, all alignments cause all the data points in an `alignment_period` to be mathematically grouped together, resulting in a single data point for each `alignment_period` with end timestamp at the end of the period.\",\n                        \"type\": \"string\"\n                       }\n                      },\n                      \"type\": \"object\"\n                     }\n                    },\n                    \"type\": \"object\"\n                   },\n                   \"timeSeriesQueryLanguage\": {\n                    \"description\": \"A query used to fetch time series with MQL.\",\n                    \"type\": \"string\"\n                   },\n                   \"unitOverride\": {\n                    \"description\": \"The unit of data contained in fetched time series. If non-empty, this unit will override any unit that accompanies fetched data. The format is the same as the [`unit`](https://cloud.google.com/monitoring/api/ref_v3/rest/v3/projects.metricDescriptors) field in `MetricDescriptor`.\",\n                    \"type\": \"string\"\n                   }\n                  },\n                  \"type\": \"object\"\n                 }\n                },\n                \"required\": [\n                 \"timeSeriesQuery\"\n                ],\n                \"type\": \"object\"\n               },\n               \"type\": \"array\"\n              },\n              \"thresholds\": {\n               \"description\": \"Threshold lines drawn horizontally across the chart.\",\n               \"items\": {\n                \"properties\": {\n                 \"color\": {\n                  \"description\": \"The state color for this threshold. Color is not allowed in a XyChart.\",\n                  \"type\": \"string\"\n                 },\n                 \"direction\": {\n                  \"description\": \"The direction for the current threshold. Direction is not allowed in a XyChart.\",\n                  \"type\": \"string\"\n                 },\n                 \"label\": {\n                  \"description\": \"A label for the threshold.\",\n                  \"type\": \"string\"\n                 },\n                 \"targetAxis\": {\n                  \"description\": \"The target axis to use for plotting the threshold. Target axis is not allowed in a Scorecard.\",\n                  \"type\": \"string\"\n                 },\n                 \"value\": {\n                  \"description\": \"The value of the threshold. The value should be defined in the native scale of the metric.\",\n                  \"format\": \"double\",\n                  \"type\": \"number\"\n                 }\n                },\n                \"type\": \"object\"\n               },\n               \"type\": \"array\"\n              },\n              \"timeshiftDuration\": {\n               \"description\": \"The duration used to display a comparison chart.\",\n               \"type\": \"string\"\n              },\n              \"xAxis\": {\n               \"description\": \"The properties applied to the x-axis.\",\n               \"properties\": {\n                \"label\": {\n                 \"description\": \"The label of the axis.\",\n                 \"type\": \"string\"\n                },\n                \"scale\": {\n                 \"description\": \"The axis scale. By default, a linear scale is used.\",\n                 \"type\": \"string\"\n                }\n               },\n               \"type\": \"object\"\n              },\n              \"y2Axis\": {\n               \"description\": \"The properties applied to the y2-axis.\",\n               \"properties\": {\n                \"label\": {\n                 \"description\": \"The label of the axis.\",\n                 \"type\": \"string\"\n                },\n                \"scale\": {\n                 \"description\": \"The axis scale. By default, a linear scale is used.\",\n                 \"type\": \"string\"\n                }\n               },\n               \"type\": \"object\"\n              },\n              \"yAxis\": {\n               \"description\": \"The properties applied to the y-axis.\",\n               \"properties\": {\n                \"label\": {\n                 \"description\": \"The label of the axis.\",\n                 \"type\": \"string\"\n                },\n                \"scale\": {\n                 \"description\": \"The axis scale. By default, a linear scale is used.\",\n                 \"type\": \"string\"\n                }\n               },\n               \"type\": \"object\"\n              }\n             },\n             \"required\": [\n              \"dataSets\"\n             ],\n             \"type\": \"object\"\n            }\n           },\n           \"type\": \"object\"\n          },\n          \"type\": \"array\"\n         }\n        },\n        \"type\": \"object\"\n       },\n       \"type\": \"array\"\n      }\n     },\n     \"type\": \"object\"\n    }\n   },\n   \"required\": [\n    \"displayName\",\n    \"projectRef\"\n   ],\n   \"type\": \"object\"\n  }\n },\n \"required\": [\n  \"spec\"\n ],\n \"title\": \"Monitoring Dashboard\",\n \"type\": \"object\"\n}",
   "version": "monitoring.cnrm.cloud.google.com/v1beta1"
  },
  "configuration": null,
  "description": "",
  "displayName": "Monitoring Dashboard",
  "format": "JSON",
  "id": "00000000-0000-0000-0000-000000000000",
  "metadata": {
   "genealogy": "",
   "isAnnotation": false,
   "isNamespaced": true,
   "published": false,
   "source_uri": "git://github.com/GoogleCloudPlatform/k8s-config-connector/master/crds"
  },
  "model": {
   "category": {
    "name": "Orchestration \u0026 Management"
   },
   "displayName": "Google Cloud Platform",
   "id": "00000000-0000-0000-0000-000000000000",
   "metadata": {
    "isAnnotation": false,
    "primaryColor": "#4285F4",
    "shape": "rectangle",
    "source_uri": "git://github.com/GoogleCloudPlatform/k8s-config-connector/master/crds",
    "styleOverrides": "",
    "svgColor": "\u003c?xml version=\"1.0\" encoding=\"UTF-8\"?\u003e\u003c!DOCTYPE svg\u003e\u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" version=\"1.1\" xmlns:_xmlns=\"xmlns\" _xmlns:xlink=\"http://www.w3.org/1999/xlink\"\u003e\n    \u003cg xmlns=\"http://www.w3.org/2000/svg\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\"\u003e\n        \u003cpath xmlns=\"http://www.w3.org/2000/svg\" d=\"M10.1893938,2 C10.3728304,2.00077434 10.5258338,2.13095973 10.5618102,2.30439506 L10.5698113,2.38112124 L10.5698113,4.33245019 L12.6188242,4.33245019 L12.6185298,2.38171121 C12.6190451,2.19767714 12.7494087,2.04435844 12.9226324,2.00831145 L12.9992416,2.00029499 L13.6211004,2 C13.8047946,2.00077434 13.9578302,2.13118557 13.9936134,2.30467737 L14.0015178,2.38141623 L14.0015178,4.33245019 L16.0505308,4.33245019 L16.0502364,2.38171121 C16.0510093,2.19767714 16.1814051,2.04458429 16.3544356,2.00859376 L16.4309482,2.00058997 L17.0525126,2.00029499 C17.2362068,2.00106932 17.3892424,2.13125471 17.42542,2.30469004 L17.4335189,2.38141623 L17.4332244,4.33245019 L19.2543403,4.33245019 C19.46215,4.33349903 19.6348304,4.48348275 19.6714654,4.68150582 L19.6786294,4.75781925 L19.6786294,6.5749298 L21.6189937,6.5749298 C21.8026879,6.57544603 21.9559489,6.70605085 21.9919857,6.87979269 L22,6.95664102 L22,7.57876539 C21.9994847,7.76305757 21.8688957,7.91663439 21.6956156,7.95254426 L21.6189937,7.9604766 L19.6786294,7.9604766 L19.6786294,10.0129856 L21.6189937,10.0129856 C21.8029455,10.0135018 21.9564642,10.1441066 21.9921668,10.3180461 L22,10.3949918 L22,11.0168212 C21.9994847,11.2008552 21.8688957,11.3543998 21.6956156,11.390108 L21.6189937,11.3979424 L19.6786294,11.3982374 L19.6786294,13.4510413 L21.6189937,13.4510413 C21.8029455,13.4515576 21.9564642,13.5823882 21.9921668,13.7559889 L22,13.8327525 L22,14.4548769 C21.9994847,14.638911 21.8688957,14.7924555 21.6956156,14.8281638 L21.6189937,14.8359982 L19.6786294,14.8362931 L19.6783349,16.6539937 C19.6775497,16.8624501 19.5276394,17.0357122 19.3299336,17.0722629 L19.2537514,17.0793627 L17.4335189,17.0793627 L17.4332244,19.0295117 C17.4329668,19.2138039 17.3024099,19.3676066 17.1289366,19.4035729 L17.0522181,19.4115179 L16.4315371,19.4115179 C16.2475853,19.4110017 16.0940666,19.280171 16.058364,19.1063727 L16.0505308,19.0295117 L16.0502364,17.0793627 L14.0015178,17.0793627 L14.0012234,19.0295117 C14.0009658,19.2138039 13.8706343,19.3673807 13.6974146,19.4034882 L13.620806,19.4115179 L12.9995361,19.4115179 C12.8155842,19.4110017 12.662291,19.280171 12.6266447,19.1063727 L12.6188242,19.0295117 L12.6182353,17.0793627 L11.606,17.079 L11.6075624,17.1291822 C11.6075624,19.7465558 9.57152078,21.8817501 7.01776046,21.9952542 L6.80378122,22 C4.15072611,22 2,19.8192606 2,17.1291822 C2,14.4391039 4.15072611,12.2583645 6.80378122,12.2583645 C6.85035544,12.2583645 6.89677486,12.2590365 6.94303054,12.2603716 L6.94200715,11.3982374 L5.00193724,11.3982374 C4.81824304,11.3977212 4.66498204,11.2671163 4.62933976,11.0935721 L4.62151983,11.0168212 L4.62122539,10.3944018 C4.62174066,10.2103677 4.75187886,10.057049 4.92504623,10.021002 L5.0016428,10.0129856 L6.94200715,10.0132806 L6.94171271,7.9604766 L5.00193724,7.9604766 C4.81824304,7.95970227 4.66520747,7.82929103 4.6294243,7.65599685 L4.62151983,7.57935536 L4.62093095,6.95605104 C4.62170386,6.77227509 4.75187426,6.61898865 4.92484841,6.58274807 L5.00134836,6.57463482 L6.94171271,6.57463482 L6.94171271,4.75752426 C6.94249788,4.54906786 7.09264084,4.37603884 7.29039837,4.33953996 L7.36659066,4.33245019 L9.18711763,4.33245019 L9.18682319,2.38171121 C9.1875961,2.19767714 9.3177665,2.04435844 9.4909379,2.00831145 L9.56753504,2.00029499 L10.1893938,2 Z M6.72943699,14.4904938 L6.00155422,15.2285341 L7.54520096,16.7942708 L4.07020096,16.7941541 L4.07020096,17.8379007 L7.54520096,17.8382708 L6.00155422,19.4020024 L6.72921198,20.1402708 L9.51619567,17.3161415 L6.72943699,14.4904938 Z M18.2467641,5.76017991 L8.37416681,5.7604749 L8.37494037,12.5248503 C9.8017631,13.0253356 10.9235874,14.1884603 11.3824464,15.6512622 L18.2458808,15.651043 L18.2467641,5.76017991 Z M15.3046241,8.28260075 C15.5126956,8.28312517 15.6856377,8.43351678 15.7219141,8.63163695 L15.7289132,8.70796981 L15.7289132,12.7038431 C15.728128,12.9122995 15.5782177,13.0857947 15.3803051,13.1223972 L15.3040353,13.1295072 L11.3158357,13.1295072 C11.1077643,13.1284583 10.9348221,12.9782415 10.898339,12.7801667 L10.8912522,12.7038431 L10.8909577,8.70796981 C10.8917429,8.4995134 11.0416532,8.32625131 11.2393591,8.28990781 L11.3155413,8.28289573 L15.3046241,8.28260075 Z\" fill=\"#4285F4\"\u003e\u003c/path\u003e\n    \u003c/g\u003e\n\u003c/svg\u003e",
    "svgComplete": "",
    "svgWhite": "\u003c?xml version=\"1.0\" encoding=\"UTF-8\"?\u003e\u003c!DOCTYPE svg\u003e\u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\"\u003e\n\u003cpath xmlns=\"http://www.w3.org/2000/svg\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M10.1894 2C10.3728 2.00077 10.5258 2.13096 10.5618 2.30439L10.5698 2.38112V4.33245H12.6188L12.6185 2.38171C12.619 2.19768 12.7494 2.04436 12.9226 2.00831L12.9992 2.00029L13.6211 2C13.8048 2.00077 13.9578 2.13119 13.9936 2.30468L14.0015 2.38142V4.33245H16.0505L16.0502 2.38171C16.051 2.19768 16.1814 2.04458 16.3544 2.00859L16.4309 2.00059L17.0525 2.00029C17.2362 2.00107 17.3892 2.13125 17.4254 2.30469L17.4335 2.38142L17.4332 4.33245H19.2543C19.4622 4.3335 19.6348 4.48348 19.6715 4.68151L19.6786 4.75782V6.57493H21.619C21.8027 6.57545 21.9559 6.70605 21.992 6.87979L22 6.95664V7.57877C21.9995 7.76306 21.8689 7.91663 21.6956 7.95254L21.619 7.96048H19.6786V10.013H21.619C21.8029 10.0135 21.9565 10.1441 21.9922 10.318L22 10.395V11.0168C21.9995 11.2009 21.8689 11.3544 21.6956 11.3901L21.619 11.3979L19.6786 11.3982V13.451H21.619C21.8029 13.4516 21.9565 13.5824 21.9922 13.756L22 13.8328V14.4549C21.9995 14.6389 21.8689 14.7925 21.6956 14.8282L21.619 14.836L19.6786 14.8363L19.6783 16.654C19.6775 16.8625 19.5276 17.0357 19.3299 17.0723L19.2538 17.0794H17.4335L17.4332 19.0295C17.433 19.2138 17.3024 19.3676 17.1289 19.4036L17.0522 19.4115H16.4315C16.2476 19.411 16.0941 19.2802 16.0584 19.1064L16.0505 19.0295L16.0502 17.0794H14.0015L14.0012 19.0295C14.001 19.2138 13.8706 19.3674 13.6974 19.4035L13.6208 19.4115H12.9995C12.8156 19.411 12.6623 19.2802 12.6266 19.1064L12.6188 19.0295L12.6182 17.0794L11.606 17.079L11.6076 17.1292C11.6076 19.7466 9.57152 21.8818 7.01776 21.9953L6.80378 22C4.15073 22 2 19.8193 2 17.1292C2 14.4391 4.15073 12.2584 6.80378 12.2584C6.85036 12.2584 6.89677 12.259 6.94303 12.2604L6.94201 11.3982H5.00194C4.81824 11.3977 4.66498 11.2671 4.62934 11.0936L4.62152 11.0168L4.62123 10.3944C4.62174 10.2104 4.75188 10.057 4.92505 10.021L5.00164 10.013L6.94201 10.0133L6.94171 7.96048H5.00194C4.81824 7.9597 4.66521 7.82929 4.62942 7.656L4.62152 7.57936L4.62093 6.95605C4.6217 6.77227 4.75187 6.61899 4.92485 6.58275L5.00135 6.57464H6.94171V4.75752C6.9425 4.54907 7.09264 4.37604 7.2904 4.33954L7.36659 4.33245H9.18712L9.18682 2.38171C9.1876 2.19768 9.31777 2.04436 9.49094 2.00831L9.56754 2.00029L10.1894 2ZM6.72944 14.4905L6.00155 15.2285L7.5452 16.7943L4.0702 16.7942V17.8379L7.5452 17.8383L6.00155 19.402L6.72921 20.1403L9.5162 17.3161L6.72944 14.4905ZM18.2468 5.76018L8.37417 5.76047L8.37494 12.5248C9.80176 13.0253 10.9236 14.1885 11.3824 15.6513L18.2459 15.651L18.2468 5.76018ZM15.3046 8.2826C15.5127 8.28312 15.6856 8.43352 15.7219 8.63164L15.7289 8.70797V12.7038C15.7281 12.9123 15.5782 13.0858 15.3803 13.1224L15.304 13.1295H11.3158C11.1078 13.1285 10.9348 12.9782 10.8983 12.7802L10.8913 12.7038L10.891 8.70797C10.8917 8.49951 11.0417 8.32625 11.2394 8.28991L11.3155 8.2829L15.3046 8.2826Z\" fill=\"white\"\u003e\u003c/path\u003e\n\u003c/svg\u003e\n"
   },
   "model": {
    "version": "v1.124.0"
   },
   "name": "k8s-config-connector",
   "registrant": {
    "created_at": "0001-01-01T00:00:00Z",
    "credential_id": "00000000-0000-0000-0000-000000000000",
    "deleted_at": "0001-01-01T00:00:00Z",
    "id": "00000000-0000-0000-0000-000000000000",
    "kind": "github",
    "name": "Github",
    "status": "discovered",
    "sub_type": "",
    "type": "registry",
    "updated_at": "0001-01-01T00:00:00Z",
    "user_id": "00000000-0000-0000-0000-000000000000"
   },
   "connection_id": "00000000-0000-0000-0000-000000000000",
   "schemaVersion": "models.meshery.io/v1beta1",
   "status": "enabled",
   "subCategory": "Provisioning",
   "version": "v1.0.0",
   "components": null,
   "relationships": null,
   "components_count": 0,
   "relationships_count": 0
  },
  "schemaVersion": "components.meshery.io/v1beta1",
  "status": "enabled",
  "styles": {
   "primaryColor": "#4285F4",
   "shape": "rectangle",
   "svgColor": "\u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"24px\" height=\"24px\" viewBox=\"0 0 24 24\"\u003e\u003cdefs\u003e\u003cstyle\u003e.cls-1{fill:#669df6;}.cls-2{fill:#4285f4;}\u003c/style\u003e\u003c/defs\u003e\u003cg data-name=\"Product Icons\"\u003e\u003crect class=\"cls-1\" x=\"10.83\" y=\"15.84\" width=\"2.33\" height=\"2.64\"/\u003e\u003cpath class=\"cls-2\" d=\"M18.48,13.87a.56.56,0,0,1-.4-.17L14,9.47l-2.74,2.89a.57.57,0,0,1-.76.05L8.42,10.73l-2.2,2.92a.56.56,0,0,1-.45.22H2v1.71a.75.75,0,0,0,.74.75H21.26a.75.75,0,0,0,.74-.75V13.87Z\"/\u003e\u003cpath class=\"cls-1\" d=\"M5.5,12.76,7.88,9.6a.55.55,0,0,1,.37-.22.63.63,0,0,1,.42.12l2.12,1.72,2.8-2.94a.54.54,0,0,1,.4-.17h0a.54.54,0,0,1,.4.17l4.33,4.48H22V6a.74.74,0,0,0-.74-.74H2.74A.74.74,0,0,0,2,6v6.81Z\"/\u003e\u003crect class=\"cls-2\" x=\"8.67\" y=\"18.18\" width=\"6.67\" height=\"0.61\" rx=\"0.3\"/\u003e\u003c/g\u003e\u003c/svg\u003e",
   "svgWhite": "\u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"24px\" height=\"24px\" viewBox=\"0 0 24 24\"\u003e\u003cdefs\u003e\u003cstyle\u003e.cls-1{fill:#fff;}.cls-2{fill:#fff;}\u003c/style\u003e\u003c/defs\u003e\u003cg data-name=\"Product Icons\"\u003e\u003crect class=\"cls-1\" x=\"10.83\" y=\"15.84\" width=\"2.33\" height=\"2.64\"/\u003e\u003cpath class=\"cls-2\" d=\"M18.48,13.87a.56.56,0,0,1-.4-.17L14,9.47l-2.74,2.89a.57.57,0,0,1-.76.05L8.42,10.73l-2.2,2.92a.56.56,0,0,1-.45.22H2v1.71a.75.75,0,0,0,.74.75H21.26a.75.75,0,0,0,.74-.75V13.87Z\"/\u003e\u003cpath class=\"cls-1\" d=\"M5.5,12.76,7.88,9.6a.55.55,0,0,1,.37-.22.63.63,0,0,1,.42.12l2.12,1.72,2.8-2.94a.54.54,0,0,1,.4-.17h0a.54.54,0,0,1,.4.17l4.33,4.48H22V6a.74.74,0,0,0-.74-.74H2.74A.74.74,0,0,0,2,6v6.81Z\"/\u003e\u003crect class=\"cls-2\" x=\"8.67\" y=\"18.18\" width=\"6.67\" height=\"0.61\" rx=\"0.3\"/\u003e\u003c/g\u003e\u003c/svg\u003e\n"
  },
  "version": "v1.0.0"
 }