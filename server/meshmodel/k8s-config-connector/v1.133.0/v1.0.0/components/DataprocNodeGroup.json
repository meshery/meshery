{
  "id": "00000000-0000-0000-0000-000000000000",
  "schemaVersion": "components.meshery.io/v1beta1",
  "version": "v1.0.0",
  "displayName": "Dataproc Node Group",
  "description": "",
  "format": "JSON",
  "model": {
    "id": "00000000-0000-0000-0000-000000000000",
    "schemaVersion": "models.meshery.io/v1beta1",
    "version": "v1.0.0",
    "name": "k8s-config-connector",
    "displayName": "Google Cloud Platform",
    "status": "enabled",
    "registrant": {
      "id": "00000000-0000-0000-0000-000000000000",
      "name": "Github",
      "type": "registry",
      "sub_type": "",
      "kind": "github",
      "status": "discovered",
      "created_at": "0001-01-01T00:00:00Z",
      "updated_at": "0001-01-01T00:00:00Z",
      "deleted_at": null,
      "schemaVersion": ""
    },
    "connection_id": "00000000-0000-0000-0000-000000000000",
    "category": {
      "id": "00000000-0000-0000-0000-000000000000",
      "name": "Orchestration \u0026 Management"
    },
    "subCategory": "Provisioning",
    "metadata": {
      "isAnnotation": false,
      "primaryColor": "#4285F4",
      "shape": "rectangle",
      "source_uri": "git://github.com/GoogleCloudPlatform/k8s-config-connector/master/crds",
      "styleOverrides": "",
      "svgColor": "\u003c?xml version=\"1.0\" encoding=\"UTF-8\"?\u003e\u003c!DOCTYPE svg\u003e\u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" version=\"1.1\" xmlns:_xmlns=\"xmlns\" _xmlns:xlink=\"http://www.w3.org/1999/xlink\"\u003e\n\u003cg xmlns=\"http://www.w3.org/2000/svg\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\"\u003e\n\u003cpath xmlns=\"http://www.w3.org/2000/svg\" d=\"M10.1893938,2 C10.3728304,2.00077434 10.5258338,2.13095973 10.5618102,2.30439506 L10.5698113,2.38112124 L10.5698113,4.33245019 L12.6188242,4.33245019 L12.6185298,2.38171121 C12.6190451,2.19767714 12.7494087,2.04435844 12.9226324,2.00831145 L12.9992416,2.00029499 L13.6211004,2 C13.8047946,2.00077434 13.9578302,2.13118557 13.9936134,2.30467737 L14.0015178,2.38141623 L14.0015178,4.33245019 L16.0505308,4.33245019 L16.0502364,2.38171121 C16.0510093,2.19767714 16.1814051,2.04458429 16.3544356,2.00859376 L16.4309482,2.00058997 L17.0525126,2.00029499 C17.2362068,2.00106932 17.3892424,2.13125471 17.42542,2.30469004 L17.4335189,2.38141623 L17.4332244,4.33245019 L19.2543403,4.33245019 C19.46215,4.33349903 19.6348304,4.48348275 19.6714654,4.68150582 L19.6786294,4.75781925 L19.6786294,6.5749298 L21.6189937,6.5749298 C21.8026879,6.57544603 21.9559489,6.70605085 21.9919857,6.87979269 L22,6.95664102 L22,7.57876539 C21.9994847,7.76305757 21.8688957,7.91663439 21.6956156,7.95254426 L21.6189937,7.9604766 L19.6786294,7.9604766 L19.6786294,10.0129856 L21.6189937,10.0129856 C21.8029455,10.0135018 21.9564642,10.1441066 21.9921668,10.3180461 L22,10.3949918 L22,11.0168212 C21.9994847,11.2008552 21.8688957,11.3543998 21.6956156,11.390108 L21.6189937,11.3979424 L19.6786294,11.3982374 L19.6786294,13.4510413 L21.6189937,13.4510413 C21.8029455,13.4515576 21.9564642,13.5823882 21.9921668,13.7559889 L22,13.8327525 L22,14.4548769 C21.9994847,14.638911 21.8688957,14.7924555 21.6956156,14.8281638 L21.6189937,14.8359982 L19.6786294,14.8362931 L19.6783349,16.6539937 C19.6775497,16.8624501 19.5276394,17.0357122 19.3299336,17.0722629 L19.2537514,17.0793627 L17.4335189,17.0793627 L17.4332244,19.0295117 C17.4329668,19.2138039 17.3024099,19.3676066 17.1289366,19.4035729 L17.0522181,19.4115179 L16.4315371,19.4115179 C16.2475853,19.4110017 16.0940666,19.280171 16.058364,19.1063727 L16.0505308,19.0295117 L16.0502364,17.0793627 L14.0015178,17.0793627 L14.0012234,19.0295117 C14.0009658,19.2138039 13.8706343,19.3673807 13.6974146,19.4034882 L13.620806,19.4115179 L12.9995361,19.4115179 C12.8155842,19.4110017 12.662291,19.280171 12.6266447,19.1063727 L12.6188242,19.0295117 L12.6182353,17.0793627 L11.606,17.079 L11.6075624,17.1291822 C11.6075624,19.7465558 9.57152078,21.8817501 7.01776046,21.9952542 L6.80378122,22 C4.15072611,22 2,19.8192606 2,17.1291822 C2,14.4391039 4.15072611,12.2583645 6.80378122,12.2583645 C6.85035544,12.2583645 6.89677486,12.2590365 6.94303054,12.2603716 L6.94200715,11.3982374 L5.00193724,11.3982374 C4.81824304,11.3977212 4.66498204,11.2671163 4.62933976,11.0935721 L4.62151983,11.0168212 L4.62122539,10.3944018 C4.62174066,10.2103677 4.75187886,10.057049 4.92504623,10.021002 L5.0016428,10.0129856 L6.94200715,10.0132806 L6.94171271,7.9604766 L5.00193724,7.9604766 C4.81824304,7.95970227 4.66520747,7.82929103 4.6294243,7.65599685 L4.62151983,7.57935536 L4.62093095,6.95605104 C4.62170386,6.77227509 4.75187426,6.61898865 4.92484841,6.58274807 L5.00134836,6.57463482 L6.94171271,6.57463482 L6.94171271,4.75752426 C6.94249788,4.54906786 7.09264084,4.37603884 7.29039837,4.33953996 L7.36659066,4.33245019 L9.18711763,4.33245019 L9.18682319,2.38171121 C9.1875961,2.19767714 9.3177665,2.04435844 9.4909379,2.00831145 L9.56753504,2.00029499 L10.1893938,2 Z M6.72943699,14.4904938 L6.00155422,15.2285341 L7.54520096,16.7942708 L4.07020096,16.7941541 L4.07020096,17.8379007 L7.54520096,17.8382708 L6.00155422,19.4020024 L6.72921198,20.1402708 L9.51619567,17.3161415 L6.72943699,14.4904938 Z M18.2467641,5.76017991 L8.37416681,5.7604749 L8.37494037,12.5248503 C9.8017631,13.0253356 10.9235874,14.1884603 11.3824464,15.6512622 L18.2458808,15.651043 L18.2467641,5.76017991 Z M15.3046241,8.28260075 C15.5126956,8.28312517 15.6856377,8.43351678 15.7219141,8.63163695 L15.7289132,8.70796981 L15.7289132,12.7038431 C15.728128,12.9122995 15.5782177,13.0857947 15.3803051,13.1223972 L15.3040353,13.1295072 L11.3158357,13.1295072 C11.1077643,13.1284583 10.9348221,12.9782415 10.898339,12.7801667 L10.8912522,12.7038431 L10.8909577,8.70796981 C10.8917429,8.4995134 11.0416532,8.32625131 11.2393591,8.28990781 L11.3155413,8.28289573 L15.3046241,8.28260075 Z\" fill=\"#4285F4\"\u003e\u003c/path\u003e\n\u003c/g\u003e\n\u003c/svg\u003e",
      "svgComplete": "",
      "svgWhite": "\u003c?xml version=\"1.0\" encoding=\"UTF-8\"?\u003e\u003c!DOCTYPE svg\u003e\u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\"\u003e\n\u003cpath xmlns=\"http://www.w3.org/2000/svg\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M10.1894 2C10.3728 2.00077 10.5258 2.13096 10.5618 2.30439L10.5698 2.38112V4.33245H12.6188L12.6185 2.38171C12.619 2.19768 12.7494 2.04436 12.9226 2.00831L12.9992 2.00029L13.6211 2C13.8048 2.00077 13.9578 2.13119 13.9936 2.30468L14.0015 2.38142V4.33245H16.0505L16.0502 2.38171C16.051 2.19768 16.1814 2.04458 16.3544 2.00859L16.4309 2.00059L17.0525 2.00029C17.2362 2.00107 17.3892 2.13125 17.4254 2.30469L17.4335 2.38142L17.4332 4.33245H19.2543C19.4622 4.3335 19.6348 4.48348 19.6715 4.68151L19.6786 4.75782V6.57493H21.619C21.8027 6.57545 21.9559 6.70605 21.992 6.87979L22 6.95664V7.57877C21.9995 7.76306 21.8689 7.91663 21.6956 7.95254L21.619 7.96048H19.6786V10.013H21.619C21.8029 10.0135 21.9565 10.1441 21.9922 10.318L22 10.395V11.0168C21.9995 11.2009 21.8689 11.3544 21.6956 11.3901L21.619 11.3979L19.6786 11.3982V13.451H21.619C21.8029 13.4516 21.9565 13.5824 21.9922 13.756L22 13.8328V14.4549C21.9995 14.6389 21.8689 14.7925 21.6956 14.8282L21.619 14.836L19.6786 14.8363L19.6783 16.654C19.6775 16.8625 19.5276 17.0357 19.3299 17.0723L19.2538 17.0794H17.4335L17.4332 19.0295C17.433 19.2138 17.3024 19.3676 17.1289 19.4036L17.0522 19.4115H16.4315C16.2476 19.411 16.0941 19.2802 16.0584 19.1064L16.0505 19.0295L16.0502 17.0794H14.0015L14.0012 19.0295C14.001 19.2138 13.8706 19.3674 13.6974 19.4035L13.6208 19.4115H12.9995C12.8156 19.411 12.6623 19.2802 12.6266 19.1064L12.6188 19.0295L12.6182 17.0794L11.606 17.079L11.6076 17.1292C11.6076 19.7466 9.57152 21.8818 7.01776 21.9953L6.80378 22C4.15073 22 2 19.8193 2 17.1292C2 14.4391 4.15073 12.2584 6.80378 12.2584C6.85036 12.2584 6.89677 12.259 6.94303 12.2604L6.94201 11.3982H5.00194C4.81824 11.3977 4.66498 11.2671 4.62934 11.0936L4.62152 11.0168L4.62123 10.3944C4.62174 10.2104 4.75188 10.057 4.92505 10.021L5.00164 10.013L6.94201 10.0133L6.94171 7.96048H5.00194C4.81824 7.9597 4.66521 7.82929 4.62942 7.656L4.62152 7.57936L4.62093 6.95605C4.6217 6.77227 4.75187 6.61899 4.92485 6.58275L5.00135 6.57464H6.94171V4.75752C6.9425 4.54907 7.09264 4.37604 7.2904 4.33954L7.36659 4.33245H9.18712L9.18682 2.38171C9.1876 2.19768 9.31777 2.04436 9.49094 2.00831L9.56754 2.00029L10.1894 2ZM6.72944 14.4905L6.00155 15.2285L7.5452 16.7943L4.0702 16.7942V17.8379L7.5452 17.8383L6.00155 19.402L6.72921 20.1403L9.5162 17.3161L6.72944 14.4905ZM18.2468 5.76018L8.37417 5.76047L8.37494 12.5248C9.80176 13.0253 10.9236 14.1885 11.3824 15.6513L18.2459 15.651L18.2468 5.76018ZM15.3046 8.2826C15.5127 8.28312 15.6856 8.43352 15.7219 8.63164L15.7289 8.70797V12.7038C15.7281 12.9123 15.5782 13.0858 15.3803 13.1224L15.304 13.1295H11.3158C11.1078 13.1285 10.9348 12.9782 10.8983 12.7802L10.8913 12.7038L10.891 8.70797C10.8917 8.49951 11.0417 8.32625 11.2394 8.28991L11.3155 8.2829L15.3046 8.2826Z\" fill=\"white\"\u003e\u003c/path\u003e\n\u003c/svg\u003e"
    },
    "model": {
      "version": "v1.133.0"
    },
    "components_count": 0,
    "relationships_count": 0,
    "components": null,
    "relationships": null
  },
  "styles": {
    "primaryColor": "#4285F4",
    "shape": "rectangle",
    "svgColor": "\u003csvg width=\"24px\" height=\"24px\" viewBox=\"0 0 24 24\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"\u003e\n\u003cg stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\"\u003e\n\u003cpath d=\"M10.1893938,2 C10.3728304,2.00077434 10.5258338,2.13095973 10.5618102,2.30439506 L10.5698113,2.38112124 L10.5698113,4.33245019 L12.6188242,4.33245019 L12.6185298,2.38171121 C12.6190451,2.19767714 12.7494087,2.04435844 12.9226324,2.00831145 L12.9992416,2.00029499 L13.6211004,2 C13.8047946,2.00077434 13.9578302,2.13118557 13.9936134,2.30467737 L14.0015178,2.38141623 L14.0015178,4.33245019 L16.0505308,4.33245019 L16.0502364,2.38171121 C16.0510093,2.19767714 16.1814051,2.04458429 16.3544356,2.00859376 L16.4309482,2.00058997 L17.0525126,2.00029499 C17.2362068,2.00106932 17.3892424,2.13125471 17.42542,2.30469004 L17.4335189,2.38141623 L17.4332244,4.33245019 L19.2543403,4.33245019 C19.46215,4.33349903 19.6348304,4.48348275 19.6714654,4.68150582 L19.6786294,4.75781925 L19.6786294,6.5749298 L21.6189937,6.5749298 C21.8026879,6.57544603 21.9559489,6.70605085 21.9919857,6.87979269 L22,6.95664102 L22,7.57876539 C21.9994847,7.76305757 21.8688957,7.91663439 21.6956156,7.95254426 L21.6189937,7.9604766 L19.6786294,7.9604766 L19.6786294,10.0129856 L21.6189937,10.0129856 C21.8029455,10.0135018 21.9564642,10.1441066 21.9921668,10.3180461 L22,10.3949918 L22,11.0168212 C21.9994847,11.2008552 21.8688957,11.3543998 21.6956156,11.390108 L21.6189937,11.3979424 L19.6786294,11.3982374 L19.6786294,13.4510413 L21.6189937,13.4510413 C21.8029455,13.4515576 21.9564642,13.5823882 21.9921668,13.7559889 L22,13.8327525 L22,14.4548769 C21.9994847,14.638911 21.8688957,14.7924555 21.6956156,14.8281638 L21.6189937,14.8359982 L19.6786294,14.8362931 L19.6783349,16.6539937 C19.6775497,16.8624501 19.5276394,17.0357122 19.3299336,17.0722629 L19.2537514,17.0793627 L17.4335189,17.0793627 L17.4332244,19.0295117 C17.4329668,19.2138039 17.3024099,19.3676066 17.1289366,19.4035729 L17.0522181,19.4115179 L16.4315371,19.4115179 C16.2475853,19.4110017 16.0940666,19.280171 16.058364,19.1063727 L16.0505308,19.0295117 L16.0502364,17.0793627 L14.0015178,17.0793627 L14.0012234,19.0295117 C14.0009658,19.2138039 13.8706343,19.3673807 13.6974146,19.4034882 L13.620806,19.4115179 L12.9995361,19.4115179 C12.8155842,19.4110017 12.662291,19.280171 12.6266447,19.1063727 L12.6188242,19.0295117 L12.6182353,17.0793627 L11.606,17.079 L11.6075624,17.1291822 C11.6075624,19.7465558 9.57152078,21.8817501 7.01776046,21.9952542 L6.80378122,22 C4.15072611,22 2,19.8192606 2,17.1291822 C2,14.4391039 4.15072611,12.2583645 6.80378122,12.2583645 C6.85035544,12.2583645 6.89677486,12.2590365 6.94303054,12.2603716 L6.94200715,11.3982374 L5.00193724,11.3982374 C4.81824304,11.3977212 4.66498204,11.2671163 4.62933976,11.0935721 L4.62151983,11.0168212 L4.62122539,10.3944018 C4.62174066,10.2103677 4.75187886,10.057049 4.92504623,10.021002 L5.0016428,10.0129856 L6.94200715,10.0132806 L6.94171271,7.9604766 L5.00193724,7.9604766 C4.81824304,7.95970227 4.66520747,7.82929103 4.6294243,7.65599685 L4.62151983,7.57935536 L4.62093095,6.95605104 C4.62170386,6.77227509 4.75187426,6.61898865 4.92484841,6.58274807 L5.00134836,6.57463482 L6.94171271,6.57463482 L6.94171271,4.75752426 C6.94249788,4.54906786 7.09264084,4.37603884 7.29039837,4.33953996 L7.36659066,4.33245019 L9.18711763,4.33245019 L9.18682319,2.38171121 C9.1875961,2.19767714 9.3177665,2.04435844 9.4909379,2.00831145 L9.56753504,2.00029499 L10.1893938,2 Z M6.72943699,14.4904938 L6.00155422,15.2285341 L7.54520096,16.7942708 L4.07020096,16.7941541 L4.07020096,17.8379007 L7.54520096,17.8382708 L6.00155422,19.4020024 L6.72921198,20.1402708 L9.51619567,17.3161415 L6.72943699,14.4904938 Z M18.2467641,5.76017991 L8.37416681,5.7604749 L8.37494037,12.5248503 C9.8017631,13.0253356 10.9235874,14.1884603 11.3824464,15.6512622 L18.2458808,15.651043 L18.2467641,5.76017991 Z M15.3046241,8.28260075 C15.5126956,8.28312517 15.6856377,8.43351678 15.7219141,8.63163695 L15.7289132,8.70796981 L15.7289132,12.7038431 C15.728128,12.9122995 15.5782177,13.0857947 15.3803051,13.1223972 L15.3040353,13.1295072 L11.3158357,13.1295072 C11.1077643,13.1284583 10.9348221,12.9782415 10.898339,12.7801667 L10.8912522,12.7038431 L10.8909577,8.70796981 C10.8917429,8.4995134 11.0416532,8.32625131 11.2393591,8.28990781 L11.3155413,8.28289573 L15.3046241,8.28260075 Z\" fill=\"#4285F4\"\u003e\u003c/path\u003e\n\u003c/g\u003e\n\u003c/svg\u003e",
    "svgComplete": "",
    "svgWhite": "\u003csvg width=\"24px\" height=\"24px\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"\u003e\n\u003cpath fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M10.1894 2C10.3728 2.00077 10.5258 2.13096 10.5618 2.30439L10.5698 2.38112V4.33245H12.6188L12.6185 2.38171C12.619 2.19768 12.7494 2.04436 12.9226 2.00831L12.9992 2.00029L13.6211 2C13.8048 2.00077 13.9578 2.13119 13.9936 2.30468L14.0015 2.38142V4.33245H16.0505L16.0502 2.38171C16.051 2.19768 16.1814 2.04458 16.3544 2.00859L16.4309 2.00059L17.0525 2.00029C17.2362 2.00107 17.3892 2.13125 17.4254 2.30469L17.4335 2.38142L17.4332 4.33245H19.2543C19.4622 4.3335 19.6348 4.48348 19.6715 4.68151L19.6786 4.75782V6.57493H21.619C21.8027 6.57545 21.9559 6.70605 21.992 6.87979L22 6.95664V7.57877C21.9995 7.76306 21.8689 7.91663 21.6956 7.95254L21.619 7.96048H19.6786V10.013H21.619C21.8029 10.0135 21.9565 10.1441 21.9922 10.318L22 10.395V11.0168C21.9995 11.2009 21.8689 11.3544 21.6956 11.3901L21.619 11.3979L19.6786 11.3982V13.451H21.619C21.8029 13.4516 21.9565 13.5824 21.9922 13.756L22 13.8328V14.4549C21.9995 14.6389 21.8689 14.7925 21.6956 14.8282L21.619 14.836L19.6786 14.8363L19.6783 16.654C19.6775 16.8625 19.5276 17.0357 19.3299 17.0723L19.2538 17.0794H17.4335L17.4332 19.0295C17.433 19.2138 17.3024 19.3676 17.1289 19.4036L17.0522 19.4115H16.4315C16.2476 19.411 16.0941 19.2802 16.0584 19.1064L16.0505 19.0295L16.0502 17.0794H14.0015L14.0012 19.0295C14.001 19.2138 13.8706 19.3674 13.6974 19.4035L13.6208 19.4115H12.9995C12.8156 19.411 12.6623 19.2802 12.6266 19.1064L12.6188 19.0295L12.6182 17.0794L11.606 17.079L11.6076 17.1292C11.6076 19.7466 9.57152 21.8818 7.01776 21.9953L6.80378 22C4.15073 22 2 19.8193 2 17.1292C2 14.4391 4.15073 12.2584 6.80378 12.2584C6.85036 12.2584 6.89677 12.259 6.94303 12.2604L6.94201 11.3982H5.00194C4.81824 11.3977 4.66498 11.2671 4.62934 11.0936L4.62152 11.0168L4.62123 10.3944C4.62174 10.2104 4.75188 10.057 4.92505 10.021L5.00164 10.013L6.94201 10.0133L6.94171 7.96048H5.00194C4.81824 7.9597 4.66521 7.82929 4.62942 7.656L4.62152 7.57936L4.62093 6.95605C4.6217 6.77227 4.75187 6.61899 4.92485 6.58275L5.00135 6.57464H6.94171V4.75752C6.9425 4.54907 7.09264 4.37604 7.2904 4.33954L7.36659 4.33245H9.18712L9.18682 2.38171C9.1876 2.19768 9.31777 2.04436 9.49094 2.00831L9.56754 2.00029L10.1894 2ZM6.72944 14.4905L6.00155 15.2285L7.5452 16.7943L4.0702 16.7942V17.8379L7.5452 17.8383L6.00155 19.402L6.72921 20.1403L9.5162 17.3161L6.72944 14.4905ZM18.2468 5.76018L8.37417 5.76047L8.37494 12.5248C9.80176 13.0253 10.9236 14.1885 11.3824 15.6513L18.2459 15.651L18.2468 5.76018ZM15.3046 8.2826C15.5127 8.28312 15.6856 8.43352 15.7219 8.63164L15.7289 8.70797V12.7038C15.7281 12.9123 15.5782 13.0858 15.3803 13.1224L15.304 13.1295H11.3158C11.1078 13.1285 10.9348 12.9782 10.8983 12.7802L10.8913 12.7038L10.891 8.70797C10.8917 8.49951 11.0417 8.32625 11.2394 8.28991L11.3155 8.2829L15.3046 8.2826Z\" fill=\"white\"/\u003e\n\u003c/svg\u003e"
  },
  "capabilities": [
    {
      "description": "Configure the visual styles for the component",
      "displayName": "Styling",
      "entityState": [
        "declaration"
      ],
      "key": "",
      "kind": "mutate",
      "schemaVersion": "capability.meshery.io/v1alpha1",
      "status": "enabled",
      "subType": "",
      "type": "style",
      "version": "0.7.0"
    },
    {
      "description": "Change the shape of the component",
      "displayName": "Change Shape",
      "entityState": [
        "declaration"
      ],
      "key": "",
      "kind": "mutate",
      "schemaVersion": "capability.meshery.io/v1alpha1",
      "status": "enabled",
      "subType": "shape",
      "type": "style",
      "version": "0.7.0"
    },
    {
      "description": "Drag and Drop a component into a parent component in graph view",
      "displayName": "Compound Drag And Drop",
      "entityState": [
        "declaration"
      ],
      "key": "",
      "kind": "interaction",
      "schemaVersion": "capability.meshery.io/v1alpha1",
      "status": "enabled",
      "subType": "compoundDnd",
      "type": "graph",
      "version": "0.7.0"
    }
  ],
  "status": "enabled",
  "metadata": {
    "configurationUISchema": "",
    "genealogy": "",
    "instanceDetails": null,
    "isAnnotation": false,
    "isNamespaced": true,
    "published": false,
    "source_uri": "git://github.com/GoogleCloudPlatform/k8s-config-connector/master/crds"
  },
  "configuration": null,
  "component": {
    "version": "dataproc.cnrm.cloud.google.com/v1alpha1",
    "kind": "DataprocNodeGroup",
    "schema": "{\n \"description\": \"DataprocNodeGroup is the Schema for the DataprocNodeGroup API\",\n \"properties\": {\n  \"spec\": {\n   \"description\": \"DataprocNodeGroupSpec defines the desired state of DataprocNodeGroup\",\n   \"properties\": {\n    \"labels\": {\n     \"additionalProperties\": {\n      \"type\": \"string\"\n     },\n     \"description\": \"Optional. Node group labels.\\n\\n * Label **keys** must consist of from 1 to 63 characters and conform to\\n   [RFC 1035](https://www.ietf.org/rfc/rfc1035.txt).\\n * Label **values** can be empty. If specified, they must consist of from\\n   1 to 63 characters and conform to [RFC 1035]\\n   (https://www.ietf.org/rfc/rfc1035.txt).\\n * The node group must have no more than 32 labels.\",\n     \"type\": \"object\"\n    },\n    \"location\": {\n     \"description\": \"Required.\",\n     \"type\": \"string\"\n    },\n    \"nodeGroupConfig\": {\n     \"description\": \"Optional. The node group instance group configuration.\",\n     \"properties\": {\n      \"accelerators\": {\n       \"description\": \"Optional. The Compute Engine accelerator configuration for these instances.\",\n       \"items\": {\n        \"properties\": {\n         \"acceleratorCount\": {\n          \"description\": \"The number of the accelerator cards of this type exposed to this instance.\",\n          \"format\": \"int32\",\n          \"type\": \"integer\"\n         },\n         \"acceleratorTypeURI\": {\n          \"description\": \"Full URL, partial URI, or short name of the accelerator type resource to\\n expose to this instance. See\\n [Compute Engine\\n AcceleratorTypes](https://cloud.google.com/compute/docs/reference/v1/acceleratorTypes).\\n\\n Examples:\\n\\n * `https://www.googleapis.com/compute/v1/projects/[project_id]/zones/[zone]/acceleratorTypes/nvidia-tesla-t4`\\n * `projects/[project_id]/zones/[zone]/acceleratorTypes/nvidia-tesla-t4`\\n * `nvidia-tesla-t4`\\n\\n **Auto Zone Exception**: If you are using the Dataproc\\n [Auto Zone\\n Placement](https://cloud.google.com/dataproc/docs/concepts/configuring-clusters/auto-zone#using_auto_zone_placement)\\n feature, you must use the short name of the accelerator type\\n resource, for example, `nvidia-tesla-t4`.\",\n          \"type\": \"string\"\n         }\n        },\n        \"type\": \"object\"\n       },\n       \"type\": \"array\"\n      },\n      \"diskConfig\": {\n       \"description\": \"Optional. Disk option config settings.\",\n       \"properties\": {\n        \"bootDiskProvisionedIOPs\": {\n         \"description\": \"Optional. Indicates how many IOPS to provision for the disk. This sets the number of I/O operations per second that the disk can handle. Note: This field is only supported if boot_disk_type is hyperdisk-balanced.\",\n         \"format\": \"int64\",\n         \"type\": \"integer\"\n        },\n        \"bootDiskProvisionedThroughput\": {\n         \"description\": \"Optional. Indicates how much throughput to provision for the disk. This sets the number of throughput mb per second that the disk can handle. Values must be greater than or equal to 1. Note: This field is only supported if boot_disk_type is hyperdisk-balanced.\",\n         \"format\": \"int64\",\n         \"type\": \"integer\"\n        },\n        \"bootDiskSizeGB\": {\n         \"description\": \"Optional. Size in GB of the boot disk (default is 500GB).\",\n         \"format\": \"int32\",\n         \"type\": \"integer\"\n        },\n        \"bootDiskType\": {\n         \"description\": \"Optional. Type of the boot disk (default is \\\"pd-standard\\\"). Valid values: \\\"pd-balanced\\\" (Persistent Disk Balanced Solid State Drive), \\\"pd-ssd\\\" (Persistent Disk Solid State Drive), or \\\"pd-standard\\\" (Persistent Disk Hard Disk Drive). See [Disk types](https://cloud.google.com/compute/docs/disks#disk-types).\",\n         \"type\": \"string\"\n        },\n        \"localSSDInterface\": {\n         \"description\": \"Optional. Interface type of local SSDs (default is \\\"scsi\\\"). Valid values: \\\"scsi\\\" (Small Computer System Interface), \\\"nvme\\\" (Non-Volatile Memory Express). See [local SSD performance](https://cloud.google.com/compute/docs/disks/local-ssd#performance).\",\n         \"type\": \"string\"\n        },\n        \"numLocalSSDs\": {\n         \"description\": \"Optional. Number of attached SSDs, from 0 to 8 (default is 0).\\n If SSDs are not attached, the boot disk is used to store runtime logs and\\n [HDFS](https://hadoop.apache.org/docs/r1.2.1/hdfs_user_guide.html) data.\\n If one or more SSDs are attached, this runtime bulk\\n data is spread across them, and the boot disk contains only basic\\n config and installed binaries.\\n\\n Note: Local SSD options may vary by machine type and number of vCPUs\\n selected.\",\n         \"format\": \"int32\",\n         \"type\": \"integer\"\n        }\n       },\n       \"type\": \"object\"\n      },\n      \"imageURI\": {\n       \"description\": \"Optional. The Compute Engine image resource used for cluster instances.\\n\\n The URI can represent an image or image family.\\n\\n Image examples:\\n\\n * `https://www.googleapis.com/compute/v1/projects/[project_id]/global/images/[image-id]`\\n * `projects/[project_id]/global/images/[image-id]`\\n * `image-id`\\n\\n Image family examples. Dataproc will use the most recent\\n image from the family:\\n\\n * `https://www.googleapis.com/compute/v1/projects/[project_id]/global/images/family/[custom-image-family-name]`\\n * `projects/[project_id]/global/images/family/[custom-image-family-name]`\\n\\n If the URI is unspecified, it will be inferred from\\n `SoftwareConfig.image_version` or the system default.\",\n       \"type\": \"string\"\n      },\n      \"instanceFlexibilityPolicy\": {\n       \"description\": \"Optional. Instance flexibility Policy allowing a mixture of VM shapes and provisioning models.\",\n       \"properties\": {\n        \"instanceSelectionList\": {\n         \"description\": \"Optional. List of instance selection options that the group will use when creating new VMs.\",\n         \"items\": {\n          \"properties\": {\n           \"machineTypes\": {\n            \"description\": \"Optional. Full machine-type names, e.g. \\\"n1-standard-16\\\".\",\n            \"items\": {\n             \"type\": \"string\"\n            },\n            \"type\": \"array\"\n           },\n           \"rank\": {\n            \"description\": \"Optional. Preference of this instance selection. Lower number means higher preference. Dataproc will first try to create a VM based on the machine-type with priority rank and fallback to next rank based on availability. Machine types and instance selections with the same priority have the same preference.\",\n            \"format\": \"int32\",\n            \"type\": \"integer\"\n           }\n          },\n          \"type\": \"object\"\n         },\n         \"type\": \"array\"\n        },\n        \"provisioningModelMix\": {\n         \"description\": \"Optional. Defines how the Group selects the provisioning model to ensure required reliability.\",\n         \"properties\": {\n          \"standardCapacityBase\": {\n           \"description\": \"Optional. The base capacity that will always use Standard VMs to avoid risk of more preemption than the minimum capacity you need. Dataproc will create only standard VMs until it reaches standard_capacity_base, then it will start using standard_capacity_percent_above_base to mix Spot with Standard VMs. eg. If 15 instances are requested and standard_capacity_base is 5, Dataproc will create 5 standard VMs and then start mixing spot and standard VMs for remaining 10 instances.\",\n           \"format\": \"int32\",\n           \"type\": \"integer\"\n          },\n          \"standardCapacityPercentAboveBase\": {\n           \"description\": \"Optional. The percentage of target capacity that should use Standard VM. The remaining percentage will use Spot VMs. The percentage applies only to the capacity above standard_capacity_base. eg. If 15 instances are requested and standard_capacity_base is 5 and standard_capacity_percent_above_base is 30, Dataproc will create 5 standard VMs and then start mixing spot and standard VMs for remaining 10 instances. The mix will be 30% standard and 70% spot.\",\n           \"format\": \"int32\",\n           \"type\": \"integer\"\n          }\n         },\n         \"type\": \"object\"\n        }\n       },\n       \"type\": \"object\"\n      },\n      \"machineTypeURI\": {\n       \"description\": \"Optional. The Compute Engine machine type used for cluster instances.\\n\\n A full URL, partial URI, or short name are valid. Examples:\\n\\n * `https://www.googleapis.com/compute/v1/projects/[project_id]/zones/[zone]/machineTypes/n1-standard-2`\\n * `projects/[project_id]/zones/[zone]/machineTypes/n1-standard-2`\\n * `n1-standard-2`\\n\\n **Auto Zone Exception**: If you are using the Dataproc\\n [Auto Zone\\n Placement](https://cloud.google.com/dataproc/docs/concepts/configuring-clusters/auto-zone#using_auto_zone_placement)\\n feature, you must use the short name of the machine type\\n resource, for example, `n1-standard-2`.\",\n       \"type\": \"string\"\n      },\n      \"minCPUPlatform\": {\n       \"description\": \"Optional. Specifies the minimum cpu platform for the Instance Group. See [Dataproc -\\u003e Minimum CPU Platform](https://cloud.google.com/dataproc/docs/concepts/compute/dataproc-min-cpu).\",\n       \"type\": \"string\"\n      },\n      \"minNumInstances\": {\n       \"description\": \"Optional. The minimum number of primary worker instances to create.\\n If `min_num_instances` is set, cluster creation will succeed if\\n the number of primary workers created is at least equal to the\\n `min_num_instances` number.\\n\\n Example: Cluster creation request with `num_instances` = `5` and\\n `min_num_instances` = `3`:\\n\\n *  If 4 VMs are created and 1 instance fails,\\n    the failed VM is deleted. The cluster is\\n    resized to 4 instances and placed in a `RUNNING` state.\\n *  If 2 instances are created and 3 instances fail,\\n    the cluster in placed in an `ERROR` state. The failed VMs\\n    are not deleted.\",\n       \"format\": \"int32\",\n       \"type\": \"integer\"\n      },\n      \"numInstances\": {\n       \"description\": \"Optional. The number of VM instances in the instance group. For [HA cluster](/dataproc/docs/concepts/configuring-clusters/high-availability) [master_config](#FIELDS.master_config) groups, **must be set to 3**. For standard cluster [master_config](#FIELDS.master_config) groups, **must be set to 1**.\",\n       \"format\": \"int32\",\n       \"type\": \"integer\"\n      },\n      \"preemptibility\": {\n       \"description\": \"Optional. Specifies the preemptibility of the instance group.\\n\\n The default value for master and worker groups is\\n `NON_PREEMPTIBLE`. This default cannot be changed.\\n\\n The default value for secondary instances is\\n `PREEMPTIBLE`.\",\n       \"type\": \"string\"\n      },\n      \"startupConfig\": {\n       \"description\": \"Optional. Configuration to handle the startup of instances during cluster create and update process.\",\n       \"properties\": {\n        \"requiredRegistrationFraction\": {\n         \"description\": \"Optional. The config setting to enable cluster creation/ updation to be successful only after required_registration_fraction of instances are up and running. This configuration is applicable to only secondary workers for now. The cluster will fail if required_registration_fraction of instances are not available. This will include instance creation, agent registration, and service registration (if enabled).\",\n         \"type\": \"number\"\n        }\n       },\n       \"type\": \"object\"\n      }\n     },\n     \"type\": \"object\"\n    },\n    \"projectRef\": {\n     \"description\": \"Required.\",\n     \"oneOf\": [\n      {\n       \"not\": {\n        \"required\": [\n         \"external\"\n        ]\n       },\n       \"required\": [\n        \"name\"\n       ]\n      },\n      {\n       \"not\": {\n        \"anyOf\": [\n         {\n          \"required\": [\n           \"name\"\n          ]\n         },\n         {\n          \"required\": [\n           \"namespace\"\n          ]\n         }\n        ]\n       },\n       \"required\": [\n        \"external\"\n       ]\n      }\n     ],\n     \"properties\": {\n      \"external\": {\n       \"description\": \"The `projectID` field of a project, when not managed by Config Connector.\",\n       \"type\": \"string\"\n      },\n      \"kind\": {\n       \"description\": \"The kind of the Project resource; optional but must be `Project` if provided.\",\n       \"type\": \"string\"\n      },\n      \"name\": {\n       \"description\": \"The `name` field of a `Project` resource.\",\n       \"type\": \"string\"\n      },\n      \"namespace\": {\n       \"description\": \"The `namespace` field of a `Project` resource.\",\n       \"type\": \"string\"\n      }\n     },\n     \"type\": \"object\"\n    },\n    \"resourceID\": {\n     \"description\": \"The DataprocNodeGroup name. If not given, the metadata.name will be used.\",\n     \"type\": \"string\"\n    },\n    \"roles\": {\n     \"description\": \"Required. Node group roles.\",\n     \"items\": {\n      \"type\": \"string\"\n     },\n     \"type\": \"array\"\n    }\n   },\n   \"type\": \"object\"\n  }\n },\n \"required\": [\n  \"spec\"\n ],\n \"title\": \"Dataproc Node Group\",\n \"type\": \"object\"\n}"
  }
}