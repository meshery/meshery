{
  "id": "00000000-0000-0000-0000-000000000000",
  "schemaVersion": "core.meshery.io/v1beta1",
  "version": "v1.0.0",
  "displayName": "Monitoring Alert Policy",
  "description": "",
  "format": "JSON",
  "model": {
   "id": "00000000-0000-0000-0000-000000000000",
   "schemaVersion": "core.meshery.io/v1beta1",
   "version": "v1.0.0",
   "name": "k8s-config-connector",
   "displayName": "Google Cloud Platform",
   "description": "",
   "status": "enabled",
   "hostID": "00000000-0000-0000-0000-000000000000",
   "registrant": {
    "hostname": "github"
   },
   "category": {
    "name": "Orchestration \u0026 Management",
    "metadata": null
   },
   "subCategory": "Google Cloud Platform",
   "metadata": {
    "capabilities": "",
    "defaultData": "",
    "isAnnotation": false,
    "primaryColor": "#4285F4",
    "secondaryColor": "",
    "shape": "rectangle",
    "shapePolygonPoints": "",
    "styleOverrides": "",
    "styles": "",
    "svgColor": "\u003csvg width=\"24px\" height=\"24px\" viewBox=\"0 0 24 24\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"\u003e\n    \u003cg stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\"\u003e\n        \u003cpath d=\"M10.1893938,2 C10.3728304,2.00077434 10.5258338,2.13095973 10.5618102,2.30439506 L10.5698113,2.38112124 L10.5698113,4.33245019 L12.6188242,4.33245019 L12.6185298,2.38171121 C12.6190451,2.19767714 12.7494087,2.04435844 12.9226324,2.00831145 L12.9992416,2.00029499 L13.6211004,2 C13.8047946,2.00077434 13.9578302,2.13118557 13.9936134,2.30467737 L14.0015178,2.38141623 L14.0015178,4.33245019 L16.0505308,4.33245019 L16.0502364,2.38171121 C16.0510093,2.19767714 16.1814051,2.04458429 16.3544356,2.00859376 L16.4309482,2.00058997 L17.0525126,2.00029499 C17.2362068,2.00106932 17.3892424,2.13125471 17.42542,2.30469004 L17.4335189,2.38141623 L17.4332244,4.33245019 L19.2543403,4.33245019 C19.46215,4.33349903 19.6348304,4.48348275 19.6714654,4.68150582 L19.6786294,4.75781925 L19.6786294,6.5749298 L21.6189937,6.5749298 C21.8026879,6.57544603 21.9559489,6.70605085 21.9919857,6.87979269 L22,6.95664102 L22,7.57876539 C21.9994847,7.76305757 21.8688957,7.91663439 21.6956156,7.95254426 L21.6189937,7.9604766 L19.6786294,7.9604766 L19.6786294,10.0129856 L21.6189937,10.0129856 C21.8029455,10.0135018 21.9564642,10.1441066 21.9921668,10.3180461 L22,10.3949918 L22,11.0168212 C21.9994847,11.2008552 21.8688957,11.3543998 21.6956156,11.390108 L21.6189937,11.3979424 L19.6786294,11.3982374 L19.6786294,13.4510413 L21.6189937,13.4510413 C21.8029455,13.4515576 21.9564642,13.5823882 21.9921668,13.7559889 L22,13.8327525 L22,14.4548769 C21.9994847,14.638911 21.8688957,14.7924555 21.6956156,14.8281638 L21.6189937,14.8359982 L19.6786294,14.8362931 L19.6783349,16.6539937 C19.6775497,16.8624501 19.5276394,17.0357122 19.3299336,17.0722629 L19.2537514,17.0793627 L17.4335189,17.0793627 L17.4332244,19.0295117 C17.4329668,19.2138039 17.3024099,19.3676066 17.1289366,19.4035729 L17.0522181,19.4115179 L16.4315371,19.4115179 C16.2475853,19.4110017 16.0940666,19.280171 16.058364,19.1063727 L16.0505308,19.0295117 L16.0502364,17.0793627 L14.0015178,17.0793627 L14.0012234,19.0295117 C14.0009658,19.2138039 13.8706343,19.3673807 13.6974146,19.4034882 L13.620806,19.4115179 L12.9995361,19.4115179 C12.8155842,19.4110017 12.662291,19.280171 12.6266447,19.1063727 L12.6188242,19.0295117 L12.6182353,17.0793627 L11.606,17.079 L11.6075624,17.1291822 C11.6075624,19.7465558 9.57152078,21.8817501 7.01776046,21.9952542 L6.80378122,22 C4.15072611,22 2,19.8192606 2,17.1291822 C2,14.4391039 4.15072611,12.2583645 6.80378122,12.2583645 C6.85035544,12.2583645 6.89677486,12.2590365 6.94303054,12.2603716 L6.94200715,11.3982374 L5.00193724,11.3982374 C4.81824304,11.3977212 4.66498204,11.2671163 4.62933976,11.0935721 L4.62151983,11.0168212 L4.62122539,10.3944018 C4.62174066,10.2103677 4.75187886,10.057049 4.92504623,10.021002 L5.0016428,10.0129856 L6.94200715,10.0132806 L6.94171271,7.9604766 L5.00193724,7.9604766 C4.81824304,7.95970227 4.66520747,7.82929103 4.6294243,7.65599685 L4.62151983,7.57935536 L4.62093095,6.95605104 C4.62170386,6.77227509 4.75187426,6.61898865 4.92484841,6.58274807 L5.00134836,6.57463482 L6.94171271,6.57463482 L6.94171271,4.75752426 C6.94249788,4.54906786 7.09264084,4.37603884 7.29039837,4.33953996 L7.36659066,4.33245019 L9.18711763,4.33245019 L9.18682319,2.38171121 C9.1875961,2.19767714 9.3177665,2.04435844 9.4909379,2.00831145 L9.56753504,2.00029499 L10.1893938,2 Z M6.72943699,14.4904938 L6.00155422,15.2285341 L7.54520096,16.7942708 L4.07020096,16.7941541 L4.07020096,17.8379007 L7.54520096,17.8382708 L6.00155422,19.4020024 L6.72921198,20.1402708 L9.51619567,17.3161415 L6.72943699,14.4904938 Z M18.2467641,5.76017991 L8.37416681,5.7604749 L8.37494037,12.5248503 C9.8017631,13.0253356 10.9235874,14.1884603 11.3824464,15.6512622 L18.2458808,15.651043 L18.2467641,5.76017991 Z M15.3046241,8.28260075 C15.5126956,8.28312517 15.6856377,8.43351678 15.7219141,8.63163695 L15.7289132,8.70796981 L15.7289132,12.7038431 C15.728128,12.9122995 15.5782177,13.0857947 15.3803051,13.1223972 L15.3040353,13.1295072 L11.3158357,13.1295072 C11.1077643,13.1284583 10.9348221,12.9782415 10.898339,12.7801667 L10.8912522,12.7038431 L10.8909577,8.70796981 C10.8917429,8.4995134 11.0416532,8.32625131 11.2393591,8.28990781 L11.3155413,8.28289573 L15.3046241,8.28260075 Z\" fill=\"#4285F4\"\u003e\u003c/path\u003e\n    \u003c/g\u003e\n\u003c/svg\u003e",
    "svgComplete": "",
    "svgWhite": "\u003csvg width=\"24px\" height=\"24px\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"\u003e\n\u003cpath fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M10.1894 2C10.3728 2.00077 10.5258 2.13096 10.5618 2.30439L10.5698 2.38112V4.33245H12.6188L12.6185 2.38171C12.619 2.19768 12.7494 2.04436 12.9226 2.00831L12.9992 2.00029L13.6211 2C13.8048 2.00077 13.9578 2.13119 13.9936 2.30468L14.0015 2.38142V4.33245H16.0505L16.0502 2.38171C16.051 2.19768 16.1814 2.04458 16.3544 2.00859L16.4309 2.00059L17.0525 2.00029C17.2362 2.00107 17.3892 2.13125 17.4254 2.30469L17.4335 2.38142L17.4332 4.33245H19.2543C19.4622 4.3335 19.6348 4.48348 19.6715 4.68151L19.6786 4.75782V6.57493H21.619C21.8027 6.57545 21.9559 6.70605 21.992 6.87979L22 6.95664V7.57877C21.9995 7.76306 21.8689 7.91663 21.6956 7.95254L21.619 7.96048H19.6786V10.013H21.619C21.8029 10.0135 21.9565 10.1441 21.9922 10.318L22 10.395V11.0168C21.9995 11.2009 21.8689 11.3544 21.6956 11.3901L21.619 11.3979L19.6786 11.3982V13.451H21.619C21.8029 13.4516 21.9565 13.5824 21.9922 13.756L22 13.8328V14.4549C21.9995 14.6389 21.8689 14.7925 21.6956 14.8282L21.619 14.836L19.6786 14.8363L19.6783 16.654C19.6775 16.8625 19.5276 17.0357 19.3299 17.0723L19.2538 17.0794H17.4335L17.4332 19.0295C17.433 19.2138 17.3024 19.3676 17.1289 19.4036L17.0522 19.4115H16.4315C16.2476 19.411 16.0941 19.2802 16.0584 19.1064L16.0505 19.0295L16.0502 17.0794H14.0015L14.0012 19.0295C14.001 19.2138 13.8706 19.3674 13.6974 19.4035L13.6208 19.4115H12.9995C12.8156 19.411 12.6623 19.2802 12.6266 19.1064L12.6188 19.0295L12.6182 17.0794L11.606 17.079L11.6076 17.1292C11.6076 19.7466 9.57152 21.8818 7.01776 21.9953L6.80378 22C4.15073 22 2 19.8193 2 17.1292C2 14.4391 4.15073 12.2584 6.80378 12.2584C6.85036 12.2584 6.89677 12.259 6.94303 12.2604L6.94201 11.3982H5.00194C4.81824 11.3977 4.66498 11.2671 4.62934 11.0936L4.62152 11.0168L4.62123 10.3944C4.62174 10.2104 4.75188 10.057 4.92505 10.021L5.00164 10.013L6.94201 10.0133L6.94171 7.96048H5.00194C4.81824 7.9597 4.66521 7.82929 4.62942 7.656L4.62152 7.57936L4.62093 6.95605C4.6217 6.77227 4.75187 6.61899 4.92485 6.58275L5.00135 6.57464H6.94171V4.75752C6.9425 4.54907 7.09264 4.37604 7.2904 4.33954L7.36659 4.33245H9.18712L9.18682 2.38171C9.1876 2.19768 9.31777 2.04436 9.49094 2.00831L9.56754 2.00029L10.1894 2ZM6.72944 14.4905L6.00155 15.2285L7.5452 16.7943L4.0702 16.7942V17.8379L7.5452 17.8383L6.00155 19.402L6.72921 20.1403L9.5162 17.3161L6.72944 14.4905ZM18.2468 5.76018L8.37417 5.76047L8.37494 12.5248C9.80176 13.0253 10.9236 14.1885 11.3824 15.6513L18.2459 15.651L18.2468 5.76018ZM15.3046 8.2826C15.5127 8.28312 15.6856 8.43352 15.7219 8.63164L15.7289 8.70797V12.7038C15.7281 12.9123 15.5782 13.0858 15.3803 13.1224L15.304 13.1295H11.3158C11.1078 13.1285 10.9348 12.9782 10.8983 12.7802L10.8913 12.7038L10.891 8.70797C10.8917 8.49951 11.0417 8.32625 11.2394 8.28991L11.3155 8.2829L15.3046 8.2826Z\" fill=\"white\"/\u003e\n\u003c/svg\u003e\n"
   },
   "model": {
    "version": "v1.118.1"
   },
   "components": null,
   "relationships": null
  },
  "metadata": {
   "capabilities": "",
   "defaultData": "",
   "genealogy": "",
   "isAnnotation": false,
   "isNamespaced": true,
   "primaryColor": "#4285F4",
   "secondaryColor": "",
   "shape": "rectangle",
   "shapePolygonPoints": "",
   "status": "enabled",
   "styleOverrides": "",
   "styles": "",
   "subCategory": "",
   "svgColor": "\u003csvg width=\"24px\" height=\"24px\" viewBox=\"0 0 24 24\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"\u003e\n    \u003cg stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\"\u003e\n        \u003cpath d=\"M12.3008862,4.00003179 L18.9908678,7.90329279 L19,11.4442164 L14.973309,9.0680926 L14.973309,10.8562526 L16.9806355,12.0276231 L16.9918433,15.1064843 L14.973309,13.9136004 L14.973309,18.415105 L12.3008862,20 L12.3008862,4.00003179 Z M11.6991138,4 L11.6991138,19.9999682 L9.02669102,18.4150732 L9.02669102,9.06816678 L5,11.4441846 L5.00913223,7.903261 L11.6991138,4 Z\" fill=\"#4285F4\"\u003e\u003c/path\u003e\n    \u003c/g\u003e\n\u003c/svg\u003e",
   "svgComplete": "",
   "svgWhite": "\u003csvg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"\u003e\n\u003cpath fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M12.3009 4.00003L18.9909 7.90329L19 11.4442L14.9733 9.06809V10.8563L16.9806 12.0276L16.9918 15.1065L14.9733 13.9136V18.4151L12.3009 20V4.00003ZM11.6991 4V20L9.02669 18.4151V9.06817L5 11.4442L5.00913 7.90326L11.6991 4Z\" fill=\"white\"/\u003e\n\u003c/svg\u003e\n"
  },
  "component": {
   "kind": "MonitoringAlertPolicy",
   "version": "monitoring.cnrm.cloud.google.com/v1beta1",
   "schema": "{\n \"properties\": {\n  \"spec\": {\n   \"properties\": {\n    \"alertStrategy\": {\n     \"description\": \"Control over how this alert policy's notification channels are notified.\",\n     \"properties\": {\n      \"autoClose\": {\n       \"description\": \"If an alert policy that was active has no data for this long, any open incidents will close.\",\n       \"type\": \"string\"\n      },\n      \"notificationChannelStrategy\": {\n       \"description\": \"Control over how the notification channels in 'notification_channels'\\nare notified when this alert fires, on a per-channel basis.\",\n       \"items\": {\n        \"properties\": {\n         \"notificationChannelNames\": {\n          \"description\": \"The notification channels that these settings apply to. Each of these\\ncorrespond to the name field in one of the NotificationChannel objects\\nreferenced in the notification_channels field of this AlertPolicy. The format is\\n'projects/[PROJECT_ID_OR_NUMBER]/notificationChannels/[CHANNEL_ID]'.\",\n          \"items\": {\n           \"type\": \"string\"\n          },\n          \"type\": \"array\"\n         },\n         \"renotifyInterval\": {\n          \"description\": \"The frequency at which to send reminder notifications for open incidents.\",\n          \"type\": \"string\"\n         }\n        },\n        \"type\": \"object\"\n       },\n       \"type\": \"array\"\n      },\n      \"notificationRateLimit\": {\n       \"description\": \"Required for alert policies with a LogMatch condition.\\nThis limit is not implemented for alert policies that are not log-based.\",\n       \"properties\": {\n        \"period\": {\n         \"description\": \"Not more than one notification per period.\",\n         \"type\": \"string\"\n        }\n       },\n       \"type\": \"object\"\n      }\n     },\n     \"type\": \"object\"\n    },\n    \"combiner\": {\n     \"description\": \"How to combine the results of multiple conditions to\\ndetermine if an incident should be opened. Possible values: [\\\"AND\\\", \\\"OR\\\", \\\"AND_WITH_MATCHING_RESOURCE\\\"].\",\n     \"type\": \"string\"\n    },\n    \"conditions\": {\n     \"description\": \"A list of conditions for the policy. The conditions are combined by\\nAND or OR according to the combiner field. If the combined conditions\\nevaluate to true, then an incident is created. A policy can have from\\none to six conditions.\",\n     \"items\": {\n      \"properties\": {\n       \"conditionAbsent\": {\n        \"description\": \"A condition that checks that a time series\\ncontinues to receive new data points.\",\n        \"properties\": {\n         \"aggregations\": {\n          \"description\": \"Specifies the alignment of data points in\\nindividual time series as well as how to\\ncombine the retrieved time series together\\n(such as when aggregating multiple streams\\non each resource to a single stream for each\\nresource or when aggregating streams across\\nall members of a group of resources).\\nMultiple aggregations are applied in the\\norder specified.\",\n          \"items\": {\n           \"properties\": {\n            \"alignmentPeriod\": {\n             \"description\": \"The alignment period for per-time\\nseries alignment. If present,\\nalignmentPeriod must be at least\\n60 seconds. After per-time series\\nalignment, each time series will\\ncontain data points only on the\\nperiod boundaries. If\\nperSeriesAligner is not specified\\nor equals ALIGN_NONE, then this\\nfield is ignored. If\\nperSeriesAligner is specified and\\ndoes not equal ALIGN_NONE, then\\nthis field must be defined;\\notherwise an error is returned.\",\n             \"type\": \"string\"\n            },\n            \"crossSeriesReducer\": {\n             \"description\": \"The approach to be used to combine\\ntime series. Not all reducer\\nfunctions may be applied to all\\ntime series, depending on the\\nmetric type and the value type of\\nthe original time series.\\nReduction may change the metric\\ntype of value type of the time\\nseries.Time series data must be\\naligned in order to perform cross-\\ntime series reduction. If\\ncrossSeriesReducer is specified,\\nthen perSeriesAligner must be\\nspecified and not equal ALIGN_NONE\\nand alignmentPeriod must be\\nspecified; otherwise, an error is\\nreturned. Possible values: [\\\"REDUCE_NONE\\\", \\\"REDUCE_MEAN\\\", \\\"REDUCE_MIN\\\", \\\"REDUCE_MAX\\\", \\\"REDUCE_SUM\\\", \\\"REDUCE_STDDEV\\\", \\\"REDUCE_COUNT\\\", \\\"REDUCE_COUNT_TRUE\\\", \\\"REDUCE_COUNT_FALSE\\\", \\\"REDUCE_FRACTION_TRUE\\\", \\\"REDUCE_PERCENTILE_99\\\", \\\"REDUCE_PERCENTILE_95\\\", \\\"REDUCE_PERCENTILE_50\\\", \\\"REDUCE_PERCENTILE_05\\\"].\",\n             \"type\": \"string\"\n            },\n            \"groupByFields\": {\n             \"description\": \"The set of fields to preserve when\\ncrossSeriesReducer is specified.\\nThe groupByFields determine how\\nthe time series are partitioned\\ninto subsets prior to applying the\\naggregation function. Each subset\\ncontains time series that have the\\nsame value for each of the\\ngrouping fields. Each individual\\ntime series is a member of exactly\\none subset. The crossSeriesReducer\\nis applied to each subset of time\\nseries. It is not possible to\\nreduce across different resource\\ntypes, so this field implicitly\\ncontains resource.type. Fields not\\nspecified in groupByFields are\\naggregated away. If groupByFields\\nis not specified and all the time\\nseries have the same resource\\ntype, then the time series are\\naggregated into a single output\\ntime series. If crossSeriesReducer\\nis not defined, this field is\\nignored.\",\n             \"items\": {\n              \"type\": \"string\"\n             },\n             \"type\": \"array\"\n            },\n            \"perSeriesAligner\": {\n             \"description\": \"The approach to be used to align\\nindividual time series. Not all\\nalignment functions may be applied\\nto all time series, depending on\\nthe metric type and value type of\\nthe original time series.\\nAlignment may change the metric\\ntype or the value type of the time\\nseries.Time series data must be\\naligned in order to perform cross-\\ntime series reduction. If\\ncrossSeriesReducer is specified,\\nthen perSeriesAligner must be\\nspecified and not equal ALIGN_NONE\\nand alignmentPeriod must be\\nspecified; otherwise, an error is\\nreturned. Possible values: [\\\"ALIGN_NONE\\\", \\\"ALIGN_DELTA\\\", \\\"ALIGN_RATE\\\", \\\"ALIGN_INTERPOLATE\\\", \\\"ALIGN_NEXT_OLDER\\\", \\\"ALIGN_MIN\\\", \\\"ALIGN_MAX\\\", \\\"ALIGN_MEAN\\\", \\\"ALIGN_COUNT\\\", \\\"ALIGN_SUM\\\", \\\"ALIGN_STDDEV\\\", \\\"ALIGN_COUNT_TRUE\\\", \\\"ALIGN_COUNT_FALSE\\\", \\\"ALIGN_FRACTION_TRUE\\\", \\\"ALIGN_PERCENTILE_99\\\", \\\"ALIGN_PERCENTILE_95\\\", \\\"ALIGN_PERCENTILE_50\\\", \\\"ALIGN_PERCENTILE_05\\\", \\\"ALIGN_PERCENT_CHANGE\\\"].\",\n             \"type\": \"string\"\n            }\n           },\n           \"type\": \"object\"\n          },\n          \"type\": \"array\"\n         },\n         \"duration\": {\n          \"description\": \"The amount of time that a time series must\\nfail to report new data to be considered\\nfailing. Currently, only values that are a\\nmultiple of a minute--e.g. 60s, 120s, or 300s\\n--are supported.\",\n          \"type\": \"string\"\n         },\n         \"filter\": {\n          \"description\": \"A filter that identifies which time series\\nshould be compared with the threshold.The\\nfilter is similar to the one that is\\nspecified in the\\nMetricService.ListTimeSeries request (that\\ncall is useful to verify the time series\\nthat will be retrieved / processed) and must\\nspecify the metric type and optionally may\\ncontain restrictions on resource type,\\nresource labels, and metric labels. This\\nfield may not exceed 2048 Unicode characters\\nin length.\",\n          \"type\": \"string\"\n         },\n         \"trigger\": {\n          \"description\": \"The number/percent of time series for which\\nthe comparison must hold in order for the\\ncondition to trigger. If unspecified, then\\nthe condition will trigger if the comparison\\nis true for any of the time series that have\\nbeen identified by filter and aggregations.\",\n          \"properties\": {\n           \"count\": {\n            \"description\": \"The absolute number of time series\\nthat must fail the predicate for the\\ncondition to be triggered.\",\n            \"type\": \"integer\"\n           },\n           \"percent\": {\n            \"description\": \"The percentage of time series that\\nmust fail the predicate for the\\ncondition to be triggered.\",\n            \"type\": \"number\"\n           }\n          },\n          \"type\": \"object\"\n         }\n        },\n        \"required\": [\n         \"duration\"\n        ],\n        \"type\": \"object\"\n       },\n       \"conditionMatchedLog\": {\n        \"description\": \"A condition that checks for log messages matching given constraints.\\nIf set, no other conditions can be present.\",\n        \"properties\": {\n         \"filter\": {\n          \"description\": \"A logs-based filter.\",\n          \"type\": \"string\"\n         },\n         \"labelExtractors\": {\n          \"additionalProperties\": {\n           \"type\": \"string\"\n          },\n          \"description\": \"A map from a label key to an extractor expression, which is used to\\nextract the value for this label key. Each entry in this map is\\na specification for how data should be extracted from log entries that\\nmatch filter. Each combination of extracted values is treated as\\na separate rule for the purposes of triggering notifications.\\nLabel keys and corresponding values can be used in notifications\\ngenerated by this condition.\",\n          \"type\": \"object\"\n         }\n        },\n        \"required\": [\n         \"filter\"\n        ],\n        \"type\": \"object\"\n       },\n       \"conditionMonitoringQueryLanguage\": {\n        \"description\": \"A Monitoring Query Language query that outputs a boolean stream.\",\n        \"properties\": {\n         \"duration\": {\n          \"description\": \"The amount of time that a time series must\\nviolate the threshold to be considered\\nfailing. Currently, only values that are a\\nmultiple of a minute--e.g., 0, 60, 120, or\\n300 seconds--are supported. If an invalid\\nvalue is given, an error will be returned.\\nWhen choosing a duration, it is useful to\\nkeep in mind the frequency of the underlying\\ntime series data (which may also be affected\\nby any alignments specified in the\\naggregations field); a good duration is long\\nenough so that a single outlier does not\\ngenerate spurious alerts, but short enough\\nthat unhealthy states are detected and\\nalerted on quickly.\",\n          \"type\": \"string\"\n         },\n         \"evaluationMissingData\": {\n          \"description\": \"A condition control that determines how\\nmetric-threshold conditions are evaluated when\\ndata stops arriving. Possible values: [\\\"EVALUATION_MISSING_DATA_INACTIVE\\\", \\\"EVALUATION_MISSING_DATA_ACTIVE\\\", \\\"EVALUATION_MISSING_DATA_NO_OP\\\"].\",\n          \"type\": \"string\"\n         },\n         \"query\": {\n          \"description\": \"Monitoring Query Language query that outputs a boolean stream.\",\n          \"type\": \"string\"\n         },\n         \"trigger\": {\n          \"description\": \"The number/percent of time series for which\\nthe comparison must hold in order for the\\ncondition to trigger. If unspecified, then\\nthe condition will trigger if the comparison\\nis true for any of the time series that have\\nbeen identified by filter and aggregations,\\nor by the ratio, if denominator_filter and\\ndenominator_aggregations are specified.\",\n          \"properties\": {\n           \"count\": {\n            \"description\": \"The absolute number of time series\\nthat must fail the predicate for the\\ncondition to be triggered.\",\n            \"type\": \"integer\"\n           },\n           \"percent\": {\n            \"description\": \"The percentage of time series that\\nmust fail the predicate for the\\ncondition to be triggered.\",\n            \"type\": \"number\"\n           }\n          },\n          \"type\": \"object\"\n         }\n        },\n        \"required\": [\n         \"duration\",\n         \"query\"\n        ],\n        \"type\": \"object\"\n       },\n       \"conditionPrometheusQueryLanguage\": {\n        \"description\": \"A Monitoring Query Language query that outputs a boolean stream\\n\\nA condition type that allows alert policies to be defined using\\nPrometheus Query Language (PromQL).\\n\\nThe PrometheusQueryLanguageCondition message contains information\\nfrom a Prometheus alerting rule and its associated rule group.\",\n        \"properties\": {\n         \"alertRule\": {\n          \"description\": \"The alerting rule name of this alert in the corresponding Prometheus\\nconfiguration file.\\n\\nSome external tools may require this field to be populated correctly\\nin order to refer to the original Prometheus configuration file.\\nThe rule group name and the alert name are necessary to update the\\nrelevant AlertPolicies in case the definition of the rule group changes\\nin the future.\\n\\nThis field is optional. If this field is not empty, then it must be a\\nvalid Prometheus label name.\",\n          \"type\": \"string\"\n         },\n         \"duration\": {\n          \"description\": \"Alerts are considered firing once their PromQL expression evaluated\\nto be \\\"true\\\" for this long. Alerts whose PromQL expression was not\\nevaluated to be \\\"true\\\" for long enough are considered pending. The\\ndefault value is zero. Must be zero or positive.\",\n          \"type\": \"string\"\n         },\n         \"evaluationInterval\": {\n          \"description\": \"How often this rule should be evaluated. Must be a positive multiple\\nof 30 seconds or missing. The default value is 30 seconds. If this\\nPrometheusQueryLanguageCondition was generated from a Prometheus\\nalerting rule, then this value should be taken from the enclosing\\nrule group.\",\n          \"type\": \"string\"\n         },\n         \"labels\": {\n          \"additionalProperties\": {\n           \"type\": \"string\"\n          },\n          \"description\": \"Labels to add to or overwrite in the PromQL query result. Label names\\nmust be valid.\\n\\nLabel values can be templatized by using variables. The only available\\nvariable names are the names of the labels in the PromQL result, including\\n\\\"__name__\\\" and \\\"value\\\". \\\"labels\\\" may be empty. This field is intended to be\\nused for organizing and identifying the AlertPolicy.\",\n          \"type\": \"object\"\n         },\n         \"query\": {\n          \"description\": \"The PromQL expression to evaluate. Every evaluation cycle this\\nexpression is evaluated at the current time, and all resultant time\\nseries become pending/firing alerts. This field must not be empty.\",\n          \"type\": \"string\"\n         },\n         \"ruleGroup\": {\n          \"description\": \"The rule group name of this alert in the corresponding Prometheus\\nconfiguration file.\\n\\nSome external tools may require this field to be populated correctly\\nin order to refer to the original Prometheus configuration file.\\nThe rule group name and the alert name are necessary to update the\\nrelevant AlertPolicies in case the definition of the rule group changes\\nin the future.\\n\\nThis field is optional. If this field is not empty, then it must be a\\nvalid Prometheus label name.\",\n          \"type\": \"string\"\n         }\n        },\n        \"required\": [\n         \"query\"\n        ],\n        \"type\": \"object\"\n       },\n       \"conditionThreshold\": {\n        \"description\": \"A condition that compares a time series against a\\nthreshold.\",\n        \"properties\": {\n         \"aggregations\": {\n          \"description\": \"Specifies the alignment of data points in\\nindividual time series as well as how to\\ncombine the retrieved time series together\\n(such as when aggregating multiple streams\\non each resource to a single stream for each\\nresource or when aggregating streams across\\nall members of a group of resources).\\nMultiple aggregations are applied in the\\norder specified.This field is similar to the\\none in the MetricService.ListTimeSeries\\nrequest. It is advisable to use the\\nListTimeSeries method when debugging this\\nfield.\",\n          \"items\": {\n           \"properties\": {\n            \"alignmentPeriod\": {\n             \"description\": \"The alignment period for per-time\\nseries alignment. If present,\\nalignmentPeriod must be at least\\n60 seconds. After per-time series\\nalignment, each time series will\\ncontain data points only on the\\nperiod boundaries. If\\nperSeriesAligner is not specified\\nor equals ALIGN_NONE, then this\\nfield is ignored. If\\nperSeriesAligner is specified and\\ndoes not equal ALIGN_NONE, then\\nthis field must be defined;\\notherwise an error is returned.\",\n             \"type\": \"string\"\n            },\n            \"crossSeriesReducer\": {\n             \"description\": \"The approach to be used to combine\\ntime series. Not all reducer\\nfunctions may be applied to all\\ntime series, depending on the\\nmetric type and the value type of\\nthe original time series.\\nReduction may change the metric\\ntype of value type of the time\\nseries.Time series data must be\\naligned in order to perform cross-\\ntime series reduction. If\\ncrossSeriesReducer is specified,\\nthen perSeriesAligner must be\\nspecified and not equal ALIGN_NONE\\nand alignmentPeriod must be\\nspecified; otherwise, an error is\\nreturned. Possible values: [\\\"REDUCE_NONE\\\", \\\"REDUCE_MEAN\\\", \\\"REDUCE_MIN\\\", \\\"REDUCE_MAX\\\", \\\"REDUCE_SUM\\\", \\\"REDUCE_STDDEV\\\", \\\"REDUCE_COUNT\\\", \\\"REDUCE_COUNT_TRUE\\\", \\\"REDUCE_COUNT_FALSE\\\", \\\"REDUCE_FRACTION_TRUE\\\", \\\"REDUCE_PERCENTILE_99\\\", \\\"REDUCE_PERCENTILE_95\\\", \\\"REDUCE_PERCENTILE_50\\\", \\\"REDUCE_PERCENTILE_05\\\"].\",\n             \"type\": \"string\"\n            },\n            \"groupByFields\": {\n             \"description\": \"The set of fields to preserve when\\ncrossSeriesReducer is specified.\\nThe groupByFields determine how\\nthe time series are partitioned\\ninto subsets prior to applying the\\naggregation function. Each subset\\ncontains time series that have the\\nsame value for each of the\\ngrouping fields. Each individual\\ntime series is a member of exactly\\none subset. The crossSeriesReducer\\nis applied to each subset of time\\nseries. It is not possible to\\nreduce across different resource\\ntypes, so this field implicitly\\ncontains resource.type. Fields not\\nspecified in groupByFields are\\naggregated away. If groupByFields\\nis not specified and all the time\\nseries have the same resource\\ntype, then the time series are\\naggregated into a single output\\ntime series. If crossSeriesReducer\\nis not defined, this field is\\nignored.\",\n             \"items\": {\n              \"type\": \"string\"\n             },\n             \"type\": \"array\"\n            },\n            \"perSeriesAligner\": {\n             \"description\": \"The approach to be used to align\\nindividual time series. Not all\\nalignment functions may be applied\\nto all time series, depending on\\nthe metric type and value type of\\nthe original time series.\\nAlignment may change the metric\\ntype or the value type of the time\\nseries.Time series data must be\\naligned in order to perform cross-\\ntime series reduction. If\\ncrossSeriesReducer is specified,\\nthen perSeriesAligner must be\\nspecified and not equal ALIGN_NONE\\nand alignmentPeriod must be\\nspecified; otherwise, an error is\\nreturned. Possible values: [\\\"ALIGN_NONE\\\", \\\"ALIGN_DELTA\\\", \\\"ALIGN_RATE\\\", \\\"ALIGN_INTERPOLATE\\\", \\\"ALIGN_NEXT_OLDER\\\", \\\"ALIGN_MIN\\\", \\\"ALIGN_MAX\\\", \\\"ALIGN_MEAN\\\", \\\"ALIGN_COUNT\\\", \\\"ALIGN_SUM\\\", \\\"ALIGN_STDDEV\\\", \\\"ALIGN_COUNT_TRUE\\\", \\\"ALIGN_COUNT_FALSE\\\", \\\"ALIGN_FRACTION_TRUE\\\", \\\"ALIGN_PERCENTILE_99\\\", \\\"ALIGN_PERCENTILE_95\\\", \\\"ALIGN_PERCENTILE_50\\\", \\\"ALIGN_PERCENTILE_05\\\", \\\"ALIGN_PERCENT_CHANGE\\\"].\",\n             \"type\": \"string\"\n            }\n           },\n           \"type\": \"object\"\n          },\n          \"type\": \"array\"\n         },\n         \"comparison\": {\n          \"description\": \"The comparison to apply between the time\\nseries (indicated by filter and aggregation)\\nand the threshold (indicated by\\nthreshold_value). The comparison is applied\\non each time series, with the time series on\\nthe left-hand side and the threshold on the\\nright-hand side. Only COMPARISON_LT and\\nCOMPARISON_GT are supported currently. Possible values: [\\\"COMPARISON_GT\\\", \\\"COMPARISON_GE\\\", \\\"COMPARISON_LT\\\", \\\"COMPARISON_LE\\\", \\\"COMPARISON_EQ\\\", \\\"COMPARISON_NE\\\"].\",\n          \"type\": \"string\"\n         },\n         \"denominatorAggregations\": {\n          \"description\": \"Specifies the alignment of data points in\\nindividual time series selected by\\ndenominatorFilter as well as how to combine\\nthe retrieved time series together (such as\\nwhen aggregating multiple streams on each\\nresource to a single stream for each\\nresource or when aggregating streams across\\nall members of a group of resources).When\\ncomputing ratios, the aggregations and\\ndenominator_aggregations fields must use the\\nsame alignment period and produce time\\nseries that have the same periodicity and\\nlabels.This field is similar to the one in\\nthe MetricService.ListTimeSeries request. It\\nis advisable to use the ListTimeSeries\\nmethod when debugging this field.\",\n          \"items\": {\n           \"properties\": {\n            \"alignmentPeriod\": {\n             \"description\": \"The alignment period for per-time\\nseries alignment. If present,\\nalignmentPeriod must be at least\\n60 seconds. After per-time series\\nalignment, each time series will\\ncontain data points only on the\\nperiod boundaries. If\\nperSeriesAligner is not specified\\nor equals ALIGN_NONE, then this\\nfield is ignored. If\\nperSeriesAligner is specified and\\ndoes not equal ALIGN_NONE, then\\nthis field must be defined;\\notherwise an error is returned.\",\n             \"type\": \"string\"\n            },\n            \"crossSeriesReducer\": {\n             \"description\": \"The approach to be used to combine\\ntime series. Not all reducer\\nfunctions may be applied to all\\ntime series, depending on the\\nmetric type and the value type of\\nthe original time series.\\nReduction may change the metric\\ntype of value type of the time\\nseries.Time series data must be\\naligned in order to perform cross-\\ntime series reduction. If\\ncrossSeriesReducer is specified,\\nthen perSeriesAligner must be\\nspecified and not equal ALIGN_NONE\\nand alignmentPeriod must be\\nspecified; otherwise, an error is\\nreturned. Possible values: [\\\"REDUCE_NONE\\\", \\\"REDUCE_MEAN\\\", \\\"REDUCE_MIN\\\", \\\"REDUCE_MAX\\\", \\\"REDUCE_SUM\\\", \\\"REDUCE_STDDEV\\\", \\\"REDUCE_COUNT\\\", \\\"REDUCE_COUNT_TRUE\\\", \\\"REDUCE_COUNT_FALSE\\\", \\\"REDUCE_FRACTION_TRUE\\\", \\\"REDUCE_PERCENTILE_99\\\", \\\"REDUCE_PERCENTILE_95\\\", \\\"REDUCE_PERCENTILE_50\\\", \\\"REDUCE_PERCENTILE_05\\\"].\",\n             \"type\": \"string\"\n            },\n            \"groupByFields\": {\n             \"description\": \"The set of fields to preserve when\\ncrossSeriesReducer is specified.\\nThe groupByFields determine how\\nthe time series are partitioned\\ninto subsets prior to applying the\\naggregation function. Each subset\\ncontains time series that have the\\nsame value for each of the\\ngrouping fields. Each individual\\ntime series is a member of exactly\\none subset. The crossSeriesReducer\\nis applied to each subset of time\\nseries. It is not possible to\\nreduce across different resource\\ntypes, so this field implicitly\\ncontains resource.type. Fields not\\nspecified in groupByFields are\\naggregated away. If groupByFields\\nis not specified and all the time\\nseries have the same resource\\ntype, then the time series are\\naggregated into a single output\\ntime series. If crossSeriesReducer\\nis not defined, this field is\\nignored.\",\n             \"items\": {\n              \"type\": \"string\"\n             },\n             \"type\": \"array\"\n            },\n            \"perSeriesAligner\": {\n             \"description\": \"The approach to be used to align\\nindividual time series. Not all\\nalignment functions may be applied\\nto all time series, depending on\\nthe metric type and value type of\\nthe original time series.\\nAlignment may change the metric\\ntype or the value type of the time\\nseries.Time series data must be\\naligned in order to perform cross-\\ntime series reduction. If\\ncrossSeriesReducer is specified,\\nthen perSeriesAligner must be\\nspecified and not equal ALIGN_NONE\\nand alignmentPeriod must be\\nspecified; otherwise, an error is\\nreturned. Possible values: [\\\"ALIGN_NONE\\\", \\\"ALIGN_DELTA\\\", \\\"ALIGN_RATE\\\", \\\"ALIGN_INTERPOLATE\\\", \\\"ALIGN_NEXT_OLDER\\\", \\\"ALIGN_MIN\\\", \\\"ALIGN_MAX\\\", \\\"ALIGN_MEAN\\\", \\\"ALIGN_COUNT\\\", \\\"ALIGN_SUM\\\", \\\"ALIGN_STDDEV\\\", \\\"ALIGN_COUNT_TRUE\\\", \\\"ALIGN_COUNT_FALSE\\\", \\\"ALIGN_FRACTION_TRUE\\\", \\\"ALIGN_PERCENTILE_99\\\", \\\"ALIGN_PERCENTILE_95\\\", \\\"ALIGN_PERCENTILE_50\\\", \\\"ALIGN_PERCENTILE_05\\\", \\\"ALIGN_PERCENT_CHANGE\\\"].\",\n             \"type\": \"string\"\n            }\n           },\n           \"type\": \"object\"\n          },\n          \"type\": \"array\"\n         },\n         \"denominatorFilter\": {\n          \"description\": \"A filter that identifies a time series that\\nshould be used as the denominator of a ratio\\nthat will be compared with the threshold. If\\na denominator_filter is specified, the time\\nseries specified by the filter field will be\\nused as the numerator.The filter is similar\\nto the one that is specified in the\\nMetricService.ListTimeSeries request (that\\ncall is useful to verify the time series\\nthat will be retrieved / processed) and must\\nspecify the metric type and optionally may\\ncontain restrictions on resource type,\\nresource labels, and metric labels. This\\nfield may not exceed 2048 Unicode characters\\nin length.\",\n          \"type\": \"string\"\n         },\n         \"duration\": {\n          \"description\": \"The amount of time that a time series must\\nviolate the threshold to be considered\\nfailing. Currently, only values that are a\\nmultiple of a minute--e.g., 0, 60, 120, or\\n300 seconds--are supported. If an invalid\\nvalue is given, an error will be returned.\\nWhen choosing a duration, it is useful to\\nkeep in mind the frequency of the underlying\\ntime series data (which may also be affected\\nby any alignments specified in the\\naggregations field); a good duration is long\\nenough so that a single outlier does not\\ngenerate spurious alerts, but short enough\\nthat unhealthy states are detected and\\nalerted on quickly.\",\n          \"type\": \"string\"\n         },\n         \"evaluationMissingData\": {\n          \"description\": \"A condition control that determines how\\nmetric-threshold conditions are evaluated when\\ndata stops arriving. Possible values: [\\\"EVALUATION_MISSING_DATA_INACTIVE\\\", \\\"EVALUATION_MISSING_DATA_ACTIVE\\\", \\\"EVALUATION_MISSING_DATA_NO_OP\\\"].\",\n          \"type\": \"string\"\n         },\n         \"filter\": {\n          \"description\": \"A filter that identifies which time series\\nshould be compared with the threshold.The\\nfilter is similar to the one that is\\nspecified in the\\nMetricService.ListTimeSeries request (that\\ncall is useful to verify the time series\\nthat will be retrieved / processed) and must\\nspecify the metric type and optionally may\\ncontain restrictions on resource type,\\nresource labels, and metric labels. This\\nfield may not exceed 2048 Unicode characters\\nin length.\",\n          \"type\": \"string\"\n         },\n         \"forecastOptions\": {\n          \"description\": \"When this field is present, the 'MetricThreshold'\\ncondition forecasts whether the time series is\\npredicted to violate the threshold within the\\n'forecastHorizon'. When this field is not set, the\\n'MetricThreshold' tests the current value of the\\ntimeseries against the threshold.\",\n          \"properties\": {\n           \"forecastHorizon\": {\n            \"description\": \"The length of time into the future to forecast\\nwhether a timeseries will violate the threshold.\\nIf the predicted value is found to violate the\\nthreshold, and the violation is observed in all\\nforecasts made for the Configured 'duration',\\nthen the timeseries is considered to be failing.\",\n            \"type\": \"string\"\n           }\n          },\n          \"required\": [\n           \"forecastHorizon\"\n          ],\n          \"type\": \"object\"\n         },\n         \"thresholdValue\": {\n          \"description\": \"A value against which to compare the time\\nseries.\",\n          \"type\": \"number\"\n         },\n         \"trigger\": {\n          \"description\": \"The number/percent of time series for which\\nthe comparison must hold in order for the\\ncondition to trigger. If unspecified, then\\nthe condition will trigger if the comparison\\nis true for any of the time series that have\\nbeen identified by filter and aggregations,\\nor by the ratio, if denominator_filter and\\ndenominator_aggregations are specified.\",\n          \"properties\": {\n           \"count\": {\n            \"description\": \"The absolute number of time series\\nthat must fail the predicate for the\\ncondition to be triggered.\",\n            \"type\": \"integer\"\n           },\n           \"percent\": {\n            \"description\": \"The percentage of time series that\\nmust fail the predicate for the\\ncondition to be triggered.\",\n            \"type\": \"number\"\n           }\n          },\n          \"type\": \"object\"\n         }\n        },\n        \"required\": [\n         \"comparison\",\n         \"duration\"\n        ],\n        \"type\": \"object\"\n       },\n       \"displayName\": {\n        \"description\": \"A short name or phrase used to identify the\\ncondition in dashboards, notifications, and\\nincidents. To avoid confusion, don't use the same\\ndisplay name for multiple conditions in the same\\npolicy.\",\n        \"type\": \"string\"\n       },\n       \"name\": {\n        \"description\": \"The unique resource name for this condition.\\nIts syntax is:\\nprojects/[PROJECT_ID]/alertPolicies/[POLICY_ID]/conditions/[CONDITION_ID]\\n[CONDITION_ID] is assigned by Stackdriver Monitoring when\\nthe condition is created as part of a new or updated alerting\\npolicy.\",\n        \"type\": \"string\"\n       }\n      },\n      \"required\": [\n       \"displayName\"\n      ],\n      \"type\": \"object\"\n     },\n     \"type\": \"array\"\n    },\n    \"displayName\": {\n     \"description\": \"A short name or phrase used to identify the policy in\\ndashboards, notifications, and incidents. To avoid confusion, don't use\\nthe same display name for multiple policies in the same project. The\\nname is limited to 512 Unicode characters.\",\n     \"type\": \"string\"\n    },\n    \"documentation\": {\n     \"description\": \"Documentation that is included with notifications and incidents related\\nto this policy. Best practice is for the documentation to include information\\nto help responders understand, mitigate, escalate, and correct the underlying\\nproblems detected by the alerting policy. Notification channels that have\\nlimited capacity might not show this documentation.\",\n     \"properties\": {\n      \"content\": {\n       \"description\": \"The text of the documentation, interpreted according to mimeType.\\nThe content may not exceed 8,192 Unicode characters and may not\\nexceed more than 10,240 bytes when encoded in UTF-8 format,\\nwhichever is smaller.\",\n       \"type\": \"string\"\n      },\n      \"mimeType\": {\n       \"description\": \"The format of the content field. Presently, only the value\\n\\\"text/markdown\\\" is supported.\",\n       \"type\": \"string\"\n      }\n     },\n     \"type\": \"object\"\n    },\n    \"enabled\": {\n     \"description\": \"Whether or not the policy is enabled. The default is true.\",\n     \"type\": \"boolean\"\n    },\n    \"notificationChannels\": {\n     \"items\": {\n      \"description\": \"Identifies the notification channels to which notifications should be sent when incidents are opened or closed or when new violations occur on an already opened incident.\",\n      \"oneOf\": [\n       {\n        \"not\": {\n         \"required\": [\n          \"external\"\n         ]\n        },\n        \"required\": [\n         \"name\"\n        ]\n       },\n       {\n        \"not\": {\n         \"anyOf\": [\n          {\n           \"required\": [\n            \"name\"\n           ]\n          },\n          {\n           \"required\": [\n            \"namespace\"\n           ]\n          }\n         ]\n        },\n        \"required\": [\n         \"external\"\n        ]\n       }\n      ],\n      \"properties\": {\n       \"external\": {\n        \"description\": \"Allowed value: The `name` field of a `MonitoringNotificationChannel` resource.\",\n        \"type\": \"string\"\n       },\n       \"name\": {\n        \"description\": \"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\",\n        \"type\": \"string\"\n       },\n       \"namespace\": {\n        \"description\": \"Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/\",\n        \"type\": \"string\"\n       }\n      },\n      \"type\": \"object\"\n     },\n     \"type\": \"array\"\n    },\n    \"resourceID\": {\n     \"description\": \"Immutable. Optional. The service-generated name of the resource. Used for acquisition only. Leave unset to create a new resource.\",\n     \"type\": \"string\"\n    }\n   },\n   \"required\": [\n    \"combiner\",\n    \"conditions\",\n    \"displayName\"\n   ],\n   \"type\": \"object\"\n  }\n },\n \"required\": [\n  \"spec\"\n ],\n \"title\": \"Monitoring Alert Policy\",\n \"type\": \"object\"\n}"
  }
 }