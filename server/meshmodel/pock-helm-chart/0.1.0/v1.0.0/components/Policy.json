{
  "capabilities": null,
  "component": {
   "kind": "Policy",
   "schema": "{\n \"description\": \"Policy defines a Policy for VirtualServer and VirtualServerRoute resources.\",\n \"properties\": {\n  \"spec\": {\n   \"description\": \"PolicySpec is the spec of the Policy resource. The spec includes multiple fields, where each field represents a different policy. Only one policy (field) is allowed.\",\n   \"properties\": {\n    \"accessControl\": {\n     \"description\": \"AccessControl defines an access policy based on the source IP of a request. policy status: production-ready\",\n     \"properties\": {\n      \"allow\": {\n       \"items\": {\n        \"type\": \"string\"\n       },\n       \"type\": \"array\"\n      },\n      \"deny\": {\n       \"items\": {\n        \"type\": \"string\"\n       },\n       \"type\": \"array\"\n      }\n     },\n     \"type\": \"object\"\n    },\n    \"egressMTLS\": {\n     \"description\": \"EgressMTLS defines an Egress MTLS policy. policy status: preview\",\n     \"properties\": {\n      \"ciphers\": {\n       \"type\": \"string\"\n      },\n      \"protocols\": {\n       \"type\": \"string\"\n      },\n      \"serverName\": {\n       \"type\": \"boolean\"\n      },\n      \"sessionReuse\": {\n       \"type\": \"boolean\"\n      },\n      \"sslName\": {\n       \"type\": \"string\"\n      },\n      \"tlsSecret\": {\n       \"type\": \"string\"\n      },\n      \"trustedCertSecret\": {\n       \"type\": \"string\"\n      },\n      \"verifyDepth\": {\n       \"type\": \"integer\"\n      },\n      \"verifyServer\": {\n       \"type\": \"boolean\"\n      }\n     },\n     \"type\": \"object\"\n    },\n    \"ingressMTLS\": {\n     \"description\": \"IngressMTLS defines an Ingress MTLS policy. policy status: preview\",\n     \"properties\": {\n      \"clientCertSecret\": {\n       \"type\": \"string\"\n      },\n      \"verifyClient\": {\n       \"type\": \"string\"\n      },\n      \"verifyDepth\": {\n       \"type\": \"integer\"\n      }\n     },\n     \"type\": \"object\"\n    },\n    \"jwt\": {\n     \"description\": \"JWTAuth holds JWT authentication configuration. policy status: preview\",\n     \"properties\": {\n      \"realm\": {\n       \"type\": \"string\"\n      },\n      \"secret\": {\n       \"type\": \"string\"\n      },\n      \"token\": {\n       \"type\": \"string\"\n      }\n     },\n     \"type\": \"object\"\n    },\n    \"oidc\": {\n     \"description\": \"OIDC defines an Open ID Connect policy.\",\n     \"properties\": {\n      \"authEndpoint\": {\n       \"type\": \"string\"\n      },\n      \"clientID\": {\n       \"type\": \"string\"\n      },\n      \"clientSecret\": {\n       \"type\": \"string\"\n      },\n      \"jwksURI\": {\n       \"type\": \"string\"\n      },\n      \"redirectURI\": {\n       \"type\": \"string\"\n      },\n      \"scope\": {\n       \"type\": \"string\"\n      },\n      \"tokenEndpoint\": {\n       \"type\": \"string\"\n      }\n     },\n     \"type\": \"object\"\n    },\n    \"rateLimit\": {\n     \"description\": \"RateLimit defines a rate limit policy. policy status: preview\",\n     \"properties\": {\n      \"burst\": {\n       \"type\": \"integer\"\n      },\n      \"delay\": {\n       \"type\": \"integer\"\n      },\n      \"dryRun\": {\n       \"type\": \"boolean\"\n      },\n      \"key\": {\n       \"type\": \"string\"\n      },\n      \"logLevel\": {\n       \"type\": \"string\"\n      },\n      \"noDelay\": {\n       \"type\": \"boolean\"\n      },\n      \"rate\": {\n       \"type\": \"string\"\n      },\n      \"rejectCode\": {\n       \"type\": \"integer\"\n      },\n      \"zoneSize\": {\n       \"type\": \"string\"\n      }\n     },\n     \"type\": \"object\"\n    },\n    \"waf\": {\n     \"description\": \"WAF defines an WAF policy. policy status: preview\",\n     \"properties\": {\n      \"apPolicy\": {\n       \"type\": \"string\"\n      },\n      \"enable\": {\n       \"type\": \"boolean\"\n      },\n      \"securityLog\": {\n       \"description\": \"SecurityLog defines the security log of a WAF policy.\",\n       \"properties\": {\n        \"apLogConf\": {\n         \"type\": \"string\"\n        },\n        \"enable\": {\n         \"type\": \"boolean\"\n        },\n        \"logDest\": {\n         \"type\": \"string\"\n        }\n       },\n       \"type\": \"object\"\n      }\n     },\n     \"type\": \"object\"\n    }\n   },\n   \"type\": \"object\"\n  }\n },\n \"title\": \"Policy\",\n \"type\": \"object\"\n}",
   "version": "k8s.nginx.org/v1"
  },
  "configuration": null,
  "description": "",
  "displayName": "Policy",
  "format": "JSON",
  "id": "00000000-0000-0000-0000-000000000000",
  "metadata": {
   "defaultData": "",
   "genealogy": "",
   "isAnnotation": false,
   "published": false,
   "shapePolygonPoints": "",
   "styleOverrides": "",
   "styles": ""
  },
  "model": {
   "category": {
    "name": "Uncategorized"
   },
   "displayName": "Pock Helm Chart",
   "id": "00000000-0000-0000-0000-000000000000",
   "metadata": {
    "defaultData": "",
    "isAnnotation": false,
    "primaryColor": "#00B39F",
    "secondaryColor": "#00D3A9",
    "shape": "circle",
    "shapePolygonPoints": "",
    "styleOverrides": "",
    "styles": "",
    "svgColor": "",
    "svgComplete": "",
    "svgWhite": ""
   },
   "model": {
    "version": "0.1.0"
   },
   "name": "pock-helm-chart",
   "registrant": {
    "created_at": "0001-01-01T00:00:00Z",
    "credential_id": "00000000-0000-0000-0000-000000000000",
    "deleted_at": "0001-01-01T00:00:00Z",
    "id": "00000000-0000-0000-0000-000000000000",
    "kind": "artifacthub",
    "name": "Artifact Hub",
    "status": "discovered",
    "sub_type": "",
    "type": "registry",
    "updated_at": "0001-01-01T00:00:00Z",
    "user_id": "00000000-0000-0000-0000-000000000000"
   },
   "connection_id": "00000000-0000-0000-0000-000000000000",
   "schemaVersion": "models.meshery.io/v1beta1",
   "status": "ignored",
   "subCategory": "Uncategorized",
   "version": "v1.0.0",
   "components": null,
   "relationships": null
  },
  "schemaVersion": "components.meshery.io/v1beta1",
  "status": "ignored",
  "styles": {
   "primaryColor": "#00B39F",
   "secondaryColor": "#00D3A9",
   "shape": "circle",
   "svgColor": "",
   "svgWhite": ""
  },
  "version": "v1.0.0"
 }