{
  "capabilities": [
   {
    "description": "Initiate a performance test. Meshery will execute the load generation, collect metrics, and present the results.",
    "displayName": "Performance Test",
    "entityState": [
     "instance"
    ],
    "key": "",
    "kind": "action",
    "metadata": null,
    "schemaVersion": "capability.meshery.io/v1alpha1",
    "status": "enabled",
    "subType": "perf-test",
    "type": "operator",
    "version": "0.7.0"
   },
   {
    "description": "Configure the workload specific setting of a component",
    "displayName": "Workload Configuration",
    "entityState": [
     "declaration"
    ],
    "key": "",
    "kind": "mutate",
    "metadata": null,
    "schemaVersion": "capability.meshery.io/v1alpha1",
    "status": "enabled",
    "subType": "config",
    "type": "configuration",
    "version": "0.7.0"
   },
   {
    "description": "Configure Labels And Annotations for  the component ",
    "displayName": "Labels and Annotations Configuration",
    "entityState": [
     "declaration"
    ],
    "key": "",
    "kind": "mutate",
    "metadata": null,
    "schemaVersion": "capability.meshery.io/v1alpha1",
    "status": "enabled",
    "subType": "labels-and-annotations",
    "type": "configuration",
    "version": "0.7.0"
   },
   {
    "description": "View relationships for the component",
    "displayName": "Relationships",
    "entityState": [
     "declaration",
     "instance"
    ],
    "key": "",
    "kind": "view",
    "metadata": null,
    "schemaVersion": "capability.meshery.io/v1alpha1",
    "status": "enabled",
    "subType": "relationship",
    "type": "configuration",
    "version": "0.7.0"
   },
   {
    "description": "View Component Definition ",
    "displayName": "Json Schema",
    "entityState": [
     "declaration",
     "instance"
    ],
    "key": "",
    "kind": "view",
    "metadata": null,
    "schemaVersion": "capability.meshery.io/v1alpha1",
    "status": "enabled",
    "subType": "definition",
    "type": "configuration",
    "version": "0.7.0"
   },
   {
    "description": "Configure the visual styles for the component",
    "displayName": "Styling",
    "entityState": [
     "declaration"
    ],
    "key": "",
    "kind": "mutate",
    "metadata": null,
    "schemaVersion": "capability.meshery.io/v1alpha1",
    "status": "enabled",
    "subType": "",
    "type": "style",
    "version": "0.7.0"
   },
   {
    "description": "Change the shape of the component",
    "displayName": "Change Shape",
    "entityState": [
     "declaration"
    ],
    "key": "",
    "kind": "mutate",
    "metadata": null,
    "schemaVersion": "capability.meshery.io/v1alpha1",
    "status": "enabled",
    "subType": "shape",
    "type": "style",
    "version": "0.7.0"
   },
   {
    "description": "Drag and Drop a component into a parent component in graph view",
    "displayName": "Compound Drag And Drop",
    "entityState": [
     "declaration"
    ],
    "key": "",
    "kind": "interaction",
    "metadata": null,
    "schemaVersion": "capability.meshery.io/v1alpha1",
    "status": "enabled",
    "subType": "compoundDnd",
    "type": "graph",
    "version": "0.7.0"
   }
  ],
  "component": {
   "kind": "NodeFeatureRule",
   "schema": "{\n \"description\": \"NodeFeatureRule resource specifies a configuration for feature-based\\ncustomization of node objects, such as node labeling.\",\n \"properties\": {\n  \"spec\": {\n   \"description\": \"Spec defines the rules to be evaluated.\",\n   \"properties\": {\n    \"rules\": {\n     \"description\": \"Rules is a list of node customization rules.\",\n     \"items\": {\n      \"description\": \"Rule defines a rule for node customization such as labeling.\",\n      \"properties\": {\n       \"annotations\": {\n        \"additionalProperties\": {\n         \"type\": \"string\"\n        },\n        \"description\": \"Annotations to create if the rule matches.\",\n        \"type\": \"object\"\n       },\n       \"extendedResources\": {\n        \"additionalProperties\": {\n         \"type\": \"string\"\n        },\n        \"description\": \"ExtendedResources to create if the rule matches.\",\n        \"type\": \"object\"\n       },\n       \"labels\": {\n        \"additionalProperties\": {\n         \"type\": \"string\"\n        },\n        \"description\": \"Labels to create if the rule matches.\",\n        \"type\": \"object\"\n       },\n       \"labelsTemplate\": {\n        \"description\": \"LabelsTemplate specifies a template to expand for dynamically generating\\nmultiple labels. Data (after template expansion) must be keys with an\\noptional value (\\u003ckey\\u003e[=\\u003cvalue\\u003e]) separated by newlines.\",\n        \"type\": \"string\"\n       },\n       \"matchAny\": {\n        \"description\": \"MatchAny specifies a list of matchers one of which must match.\",\n        \"items\": {\n         \"description\": \"MatchAnyElem specifies one sub-matcher of MatchAny.\",\n         \"properties\": {\n          \"matchFeatures\": {\n           \"description\": \"MatchFeatures specifies a set of matcher terms all of which must match.\",\n           \"items\": {\n            \"description\": \"FeatureMatcherTerm defines requirements against one feature set. All\\nrequirements (specified as MatchExpressions) are evaluated against each\\nelement in the feature set.\",\n            \"properties\": {\n             \"feature\": {\n              \"description\": \"Feature is the name of the feature set to match against.\",\n              \"type\": \"string\"\n             },\n             \"matchExpressions\": {\n              \"additionalProperties\": {\n               \"description\": \"MatchExpression specifies an expression to evaluate against a set of input\\nvalues. It contains an operator that is applied when matching the input and\\nan array of values that the operator evaluates the input against.\",\n               \"properties\": {\n                \"op\": {\n                 \"description\": \"Op is the operator to be applied.\",\n                 \"enum\": [\n                  \"In\",\n                  \"NotIn\",\n                  \"InRegexp\",\n                  \"Exists\",\n                  \"DoesNotExist\",\n                  \"Gt\",\n                  \"Lt\",\n                  \"GtLt\",\n                  \"IsTrue\",\n                  \"IsFalse\"\n                 ],\n                 \"type\": \"string\"\n                },\n                \"value\": {\n                 \"description\": \"Value is the list of values that the operand evaluates the input\\nagainst. Value should be empty if the operator is Exists, DoesNotExist,\\nIsTrue or IsFalse. Value should contain exactly one element if the\\noperator is Gt or Lt and exactly two elements if the operator is GtLt.\\nIn other cases Value should contain at least one element.\",\n                 \"items\": {\n                  \"type\": \"string\"\n                 },\n                 \"type\": \"array\"\n                }\n               },\n               \"required\": [\n                \"op\"\n               ],\n               \"type\": \"object\"\n              },\n              \"description\": \"MatchExpressions is the set of per-element expressions evaluated. These\\nmatch against the value of the specified elements.\",\n              \"type\": \"object\"\n             },\n             \"matchName\": {\n              \"description\": \"MatchName in an expression that is matched against the name of each\\nelement in the feature set.\",\n              \"properties\": {\n               \"op\": {\n                \"description\": \"Op is the operator to be applied.\",\n                \"enum\": [\n                 \"In\",\n                 \"NotIn\",\n                 \"InRegexp\",\n                 \"Exists\",\n                 \"DoesNotExist\",\n                 \"Gt\",\n                 \"Lt\",\n                 \"GtLt\",\n                 \"IsTrue\",\n                 \"IsFalse\"\n                ],\n                \"type\": \"string\"\n               },\n               \"value\": {\n                \"description\": \"Value is the list of values that the operand evaluates the input\\nagainst. Value should be empty if the operator is Exists, DoesNotExist,\\nIsTrue or IsFalse. Value should contain exactly one element if the\\noperator is Gt or Lt and exactly two elements if the operator is GtLt.\\nIn other cases Value should contain at least one element.\",\n                \"items\": {\n                 \"type\": \"string\"\n                },\n                \"type\": \"array\"\n               }\n              },\n              \"required\": [\n               \"op\"\n              ],\n              \"type\": \"object\"\n             }\n            },\n            \"required\": [\n             \"feature\"\n            ],\n            \"type\": \"object\"\n           },\n           \"type\": \"array\"\n          }\n         },\n         \"required\": [\n          \"matchFeatures\"\n         ],\n         \"type\": \"object\"\n        },\n        \"type\": \"array\"\n       },\n       \"matchFeatures\": {\n        \"description\": \"MatchFeatures specifies a set of matcher terms all of which must match.\",\n        \"items\": {\n         \"description\": \"FeatureMatcherTerm defines requirements against one feature set. All\\nrequirements (specified as MatchExpressions) are evaluated against each\\nelement in the feature set.\",\n         \"properties\": {\n          \"feature\": {\n           \"description\": \"Feature is the name of the feature set to match against.\",\n           \"type\": \"string\"\n          },\n          \"matchExpressions\": {\n           \"additionalProperties\": {\n            \"description\": \"MatchExpression specifies an expression to evaluate against a set of input\\nvalues. It contains an operator that is applied when matching the input and\\nan array of values that the operator evaluates the input against.\",\n            \"properties\": {\n             \"op\": {\n              \"description\": \"Op is the operator to be applied.\",\n              \"enum\": [\n               \"In\",\n               \"NotIn\",\n               \"InRegexp\",\n               \"Exists\",\n               \"DoesNotExist\",\n               \"Gt\",\n               \"Lt\",\n               \"GtLt\",\n               \"IsTrue\",\n               \"IsFalse\"\n              ],\n              \"type\": \"string\"\n             },\n             \"value\": {\n              \"description\": \"Value is the list of values that the operand evaluates the input\\nagainst. Value should be empty if the operator is Exists, DoesNotExist,\\nIsTrue or IsFalse. Value should contain exactly one element if the\\noperator is Gt or Lt and exactly two elements if the operator is GtLt.\\nIn other cases Value should contain at least one element.\",\n              \"items\": {\n               \"type\": \"string\"\n              },\n              \"type\": \"array\"\n             }\n            },\n            \"required\": [\n             \"op\"\n            ],\n            \"type\": \"object\"\n           },\n           \"description\": \"MatchExpressions is the set of per-element expressions evaluated. These\\nmatch against the value of the specified elements.\",\n           \"type\": \"object\"\n          },\n          \"matchName\": {\n           \"description\": \"MatchName in an expression that is matched against the name of each\\nelement in the feature set.\",\n           \"properties\": {\n            \"op\": {\n             \"description\": \"Op is the operator to be applied.\",\n             \"enum\": [\n              \"In\",\n              \"NotIn\",\n              \"InRegexp\",\n              \"Exists\",\n              \"DoesNotExist\",\n              \"Gt\",\n              \"Lt\",\n              \"GtLt\",\n              \"IsTrue\",\n              \"IsFalse\"\n             ],\n             \"type\": \"string\"\n            },\n            \"value\": {\n             \"description\": \"Value is the list of values that the operand evaluates the input\\nagainst. Value should be empty if the operator is Exists, DoesNotExist,\\nIsTrue or IsFalse. Value should contain exactly one element if the\\noperator is Gt or Lt and exactly two elements if the operator is GtLt.\\nIn other cases Value should contain at least one element.\",\n             \"items\": {\n              \"type\": \"string\"\n             },\n             \"type\": \"array\"\n            }\n           },\n           \"required\": [\n            \"op\"\n           ],\n           \"type\": \"object\"\n          }\n         },\n         \"required\": [\n          \"feature\"\n         ],\n         \"type\": \"object\"\n        },\n        \"type\": \"array\"\n       },\n       \"name\": {\n        \"description\": \"Name of the rule.\",\n        \"type\": \"string\"\n       },\n       \"taints\": {\n        \"description\": \"Taints to create if the rule matches.\",\n        \"items\": {\n         \"description\": \"The node this Taint is attached to has the \\\"effect\\\" on\\nany pod that does not tolerate the Taint.\",\n         \"properties\": {\n          \"effect\": {\n           \"description\": \"Required. The effect of the taint on pods\\nthat do not tolerate the taint.\\nValid effects are NoSchedule, PreferNoSchedule and NoExecute.\",\n           \"type\": \"string\"\n          },\n          \"key\": {\n           \"description\": \"Required. The taint key to be applied to a node.\",\n           \"type\": \"string\"\n          },\n          \"timeAdded\": {\n           \"description\": \"TimeAdded represents the time at which the taint was added.\\nIt is only written for NoExecute taints.\",\n           \"format\": \"date-time\",\n           \"type\": \"string\"\n          },\n          \"value\": {\n           \"description\": \"The taint value corresponding to the taint key.\",\n           \"type\": \"string\"\n          }\n         },\n         \"required\": [\n          \"effect\",\n          \"key\"\n         ],\n         \"type\": \"object\"\n        },\n        \"type\": \"array\"\n       },\n       \"vars\": {\n        \"additionalProperties\": {\n         \"type\": \"string\"\n        },\n        \"description\": \"Vars is the variables to store if the rule matches. Variables do not\\ndirectly inflict any changes in the node object. However, they can be\\nreferenced from other rules enabling more complex rule hierarchies,\\nwithout exposing intermediary output values as labels.\",\n        \"type\": \"object\"\n       },\n       \"varsTemplate\": {\n        \"description\": \"VarsTemplate specifies a template to expand for dynamically generating\\nmultiple variables. Data (after template expansion) must be keys with an\\noptional value (\\u003ckey\\u003e[=\\u003cvalue\\u003e]) separated by newlines.\",\n        \"type\": \"string\"\n       }\n      },\n      \"required\": [\n       \"name\"\n      ],\n      \"type\": \"object\"\n     },\n     \"type\": \"array\"\n    }\n   },\n   \"required\": [\n    \"rules\"\n   ],\n   \"type\": \"object\"\n  }\n },\n \"required\": [\n  \"spec\"\n ],\n \"title\": \"Node Feature Rule\",\n \"type\": \"object\"\n}",
   "version": "nfd.k8s-sigs.io/v1alpha1"
  },
  "configuration": null,
  "description": "",
  "displayName": "Node Feature Rule",
  "format": "JSON",
  "id": "00000000-0000-0000-0000-000000000000",
  "metadata": {
   "genealogy": "",
   "isAnnotation": false,
   "isNamespaced": false,
   "published": false,
   "source_uri": "https://github.com/ROCm/k8s-device-plugin/releases/download/amd-gpu-helm-0.14.0/amd-gpu-0.14.0.tgz"
  },
  "model": {
   "category": {
    "name": "Provisioning"
   },
   "displayName": "AMD GPU",
   "id": "00000000-0000-0000-0000-000000000000",
   "metadata": {
    "isAnnotation": false,
    "primaryColor": "#000",
    "secondaryColor": "#fff",
    "shape": "circle",
    "source_uri": "https://github.com/ROCm/k8s-device-plugin/releases/download/amd-gpu-helm-0.14.0/amd-gpu-0.14.0.tgz",
    "styleOverrides": "",
    "svgColor": "\u003c?xml version=\"1.0\" encoding=\"UTF-8\"?\u003e\u003c!DOCTYPE svg\u003e\u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 150 150\" fill=\"none\"\u003e\n\u003crect xmlns=\"http://www.w3.org/2000/svg\" width=\"150\" height=\"150\" rx=\"75\" fill=\"black\"\u003e\u003c/rect\u003e\n\u003cpath xmlns=\"http://www.w3.org/2000/svg\" d=\"M43.7135 87.1392H37.1692L35.1672 82.335H24.2604L22.4365 87.1392H16L25.8334 62.8749H32.8781L43.7135 87.1392ZM29.4454 68.6729L25.8695 78.1007H33.3792L29.4454 68.6729ZM67.4858 62.8749H72.7781V87.1392H66.6983V71.983L60.1186 79.5959H59.1892L52.6099 71.983V87.1389H46.5301V62.8749H51.8224L59.6535 71.8759L67.4858 62.8749ZM88.1828 62.8749C97.0865 62.8749 101.663 68.3887 101.663 75.0417C101.663 82.0147 97.2294 87.1392 87.503 87.1392H77.4186V62.8749H88.1828ZM83.4979 82.692H87.4666C93.5815 82.692 95.4054 78.5641 95.4054 75.0057C95.4054 70.8427 93.1522 67.3215 87.395 67.3215H83.4978L83.4979 82.692ZM113.758 68.6282L106.093 61H134V88.7664L126.334 81.1391V68.6282H113.758ZM113.749 70.1567L105.857 78.0086V89H116.903L124.795 81.1481H113.749V70.1567Z\" fill=\"white\"\u003e\u003c/path\u003e\n\u003c/svg\u003e\n",
    "svgComplete": "",
    "svgWhite": "\u003c?xml version=\"1.0\" encoding=\"UTF-8\"?\u003e\u003c!DOCTYPE svg\u003e\u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\"\u003e\u003cpath xmlns=\"http://www.w3.org/2000/svg\" fill=\"#fff\" d=\"M187.888 178.122H143.52l-13.573-32.738H56.003l-12.366 32.738H0L66.667 12.776h47.761zM91.155 52.286L66.912 116.53h50.913zm257.901-39.51h35.88v165.346h-41.219V74.842l-44.608 51.877h-6.301l-44.605-51.877V178.12h-41.219V12.776h35.88l53.092 61.336zm140.319 0c60.364 0 91.391 37.573 91.391 82.909 0 47.517-30.058 82.437-96 82.437h-68.369V12.776zm-31.762 135.041h26.906c41.457 0 53.823-28.129 53.823-52.377 0-28.368-15.276-52.363-54.308-52.363h-26.422v104.74zm205.156-95.836L610.797 0H800v189.21l-51.972-51.975V51.981zm-.061 10.416L609.2 115.903v74.899h74.889l53.505-53.506h-74.886z\"\u003e\u003c/path\u003e\u003c/svg\u003e"
   },
   "model": {
    "version": "0.14.0"
   },
   "name": "amd-gpu",
   "registrant": {
    "created_at": "0001-01-01T00:00:00Z",
    "credential_id": "00000000-0000-0000-0000-000000000000",
    "deleted_at": "0001-01-01T00:00:00Z",
    "id": "00000000-0000-0000-0000-000000000000",
    "kind": "artifacthub",
    "name": "Artifact Hub",
    "status": "discovered",
    "sub_type": "",
    "type": "registry",
    "updated_at": "0001-01-01T00:00:00Z",
    "user_id": "00000000-0000-0000-0000-000000000000"
   },
   "connection_id": "00000000-0000-0000-0000-000000000000",
   "schemaVersion": "models.meshery.io/v1beta1",
   "status": "enabled",
   "subCategory": "Automation \u0026 Configuration",
   "version": "v1.0.0",
   "components": null,
   "relationships": null,
   "components_count": 0,
   "relationships_count": 0
  },
  "schemaVersion": "components.meshery.io/v1beta1",
  "status": "enabled",
  "styles": {
   "primaryColor": "#000",
   "secondaryColor": "#fff",
   "shape": "circle",
   "svgColor": "\u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"800\" height=\"190.803\"\u003e\u003cpath fill=\"#000\" d=\"M187.888 178.122H143.52l-13.573-32.738H56.003l-12.366 32.738H0L66.667 12.776h47.761zM91.155 52.286L66.912 116.53h50.913zm257.901-39.51h35.88v165.346h-41.219V74.842l-44.608 51.877h-6.301l-44.605-51.877V178.12h-41.219V12.776h35.88l53.092 61.336zm140.319 0c60.364 0 91.391 37.573 91.391 82.909 0 47.517-30.058 82.437-96 82.437h-68.369V12.776zm-31.762 135.041h26.906c41.457 0 53.823-28.129 53.823-52.377 0-28.368-15.276-52.363-54.308-52.363h-26.422v104.74zm205.156-95.836L610.797 0H800v189.21l-51.972-51.975V51.981zm-.061 10.416L609.2 115.903v74.899h74.889l53.505-53.506h-74.886z\"/\u003e\u003c/svg\u003e",
   "svgWhite": "\u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"800\" height=\"190.803\"\u003e\u003cpath fill=\"#fff\" d=\"M187.888 178.122H143.52l-13.573-32.738H56.003l-12.366 32.738H0L66.667 12.776h47.761zM91.155 52.286L66.912 116.53h50.913zm257.901-39.51h35.88v165.346h-41.219V74.842l-44.608 51.877h-6.301l-44.605-51.877V178.12h-41.219V12.776h35.88l53.092 61.336zm140.319 0c60.364 0 91.391 37.573 91.391 82.909 0 47.517-30.058 82.437-96 82.437h-68.369V12.776zm-31.762 135.041h26.906c41.457 0 53.823-28.129 53.823-52.377 0-28.368-15.276-52.363-54.308-52.363h-26.422v104.74zm205.156-95.836L610.797 0H800v189.21l-51.972-51.975V51.981zm-.061 10.416L609.2 115.903v74.899h74.889l53.505-53.506h-74.886z\"/\u003e\u003c/svg\u003e"
  },
  "version": "v1.0.0"
 }