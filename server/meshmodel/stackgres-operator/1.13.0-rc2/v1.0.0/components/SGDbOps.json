{
  "capabilities": [
   {
    "description": "Initiate a performance test. Meshery will execute the load generation, collect metrics, and present the results.",
    "displayName": "Performance Test",
    "entityState": [
     "instance"
    ],
    "key": "",
    "kind": "action",
    "metadata": null,
    "schemaVersion": "capability.meshery.io/v1alpha1",
    "status": "enabled",
    "subType": "perf-test",
    "type": "operator",
    "version": "0.7.0"
   },
   {
    "description": "Configure the workload specific setting of a component",
    "displayName": "Workload Configuration",
    "entityState": [
     "declaration"
    ],
    "key": "",
    "kind": "mutate",
    "metadata": null,
    "schemaVersion": "capability.meshery.io/v1alpha1",
    "status": "enabled",
    "subType": "config",
    "type": "configuration",
    "version": "0.7.0"
   },
   {
    "description": "Configure Labels And Annotations for  the component ",
    "displayName": "Labels and Annotations Configuration",
    "entityState": [
     "declaration"
    ],
    "key": "",
    "kind": "mutate",
    "metadata": null,
    "schemaVersion": "capability.meshery.io/v1alpha1",
    "status": "enabled",
    "subType": "labels-and-annotations",
    "type": "configuration",
    "version": "0.7.0"
   },
   {
    "description": "View relationships for the component",
    "displayName": "Relationships",
    "entityState": [
     "declaration",
     "instance"
    ],
    "key": "",
    "kind": "view",
    "metadata": null,
    "schemaVersion": "capability.meshery.io/v1alpha1",
    "status": "enabled",
    "subType": "relationship",
    "type": "configuration",
    "version": "0.7.0"
   },
   {
    "description": "View Component Definition ",
    "displayName": "Json Schema",
    "entityState": [
     "declaration",
     "instance"
    ],
    "key": "",
    "kind": "view",
    "metadata": null,
    "schemaVersion": "capability.meshery.io/v1alpha1",
    "status": "enabled",
    "subType": "definition",
    "type": "configuration",
    "version": "0.7.0"
   },
   {
    "description": "Configure the visual styles for the component",
    "displayName": "Styling",
    "entityState": [
     "declaration"
    ],
    "key": "",
    "kind": "mutate",
    "metadata": null,
    "schemaVersion": "capability.meshery.io/v1alpha1",
    "status": "enabled",
    "subType": "",
    "type": "style",
    "version": "0.7.0"
   },
   {
    "description": "Change the shape of the component",
    "displayName": "Change Shape",
    "entityState": [
     "declaration"
    ],
    "key": "",
    "kind": "mutate",
    "metadata": null,
    "schemaVersion": "capability.meshery.io/v1alpha1",
    "status": "enabled",
    "subType": "shape",
    "type": "style",
    "version": "0.7.0"
   },
   {
    "description": "Drag and Drop a component into a parent component in graph view",
    "displayName": "Compound Drag And Drop",
    "entityState": [
     "declaration"
    ],
    "key": "",
    "kind": "interaction",
    "metadata": null,
    "schemaVersion": "capability.meshery.io/v1alpha1",
    "status": "enabled",
    "subType": "compoundDnd",
    "type": "graph",
    "version": "0.7.0"
   }
  ],
  "component": {
   "kind": "SGDbOps",
   "schema": "{\n \"properties\": {\n  \"spec\": {\n   \"properties\": {\n    \"benchmark\": {\n     \"description\": \"Configuration of the benchmark\\n\",\n     \"properties\": {\n      \"connectionType\": {\n       \"description\": \"Specify the service where the benchmark will connect to:\\n\\n* `primary-service`: Connect to the primary service\\n* `replicas-service`: Connect to the replicas service\\n\",\n       \"type\": \"string\"\n      },\n      \"credentials\": {\n       \"description\": \"The credentials of the user that will be used by the benchmark\",\n       \"properties\": {\n        \"password\": {\n         \"description\": \"The password that will be used by the benchmark\\n\\nIf not specified the default superuser password will be used.\\n\",\n         \"properties\": {\n          \"key\": {\n           \"description\": \"The Secret key where the password is stored.\\n\",\n           \"type\": \"string\"\n          },\n          \"name\": {\n           \"description\": \"The Secret name where the password is stored.\\n\",\n           \"type\": \"string\"\n          }\n         },\n         \"required\": [\n          \"name\",\n          \"key\"\n         ],\n         \"type\": \"object\"\n        },\n        \"username\": {\n         \"description\": \"The username that will be used by the benchmark.\\n\\nIf not specified the default superuser username (by default postgres) will be used.\\n\",\n         \"properties\": {\n          \"key\": {\n           \"description\": \"The Secret key where the username is stored.\\n\",\n           \"type\": \"string\"\n          },\n          \"name\": {\n           \"description\": \"The Secret name where the username is stored.\\n\",\n           \"type\": \"string\"\n          }\n         },\n         \"required\": [\n          \"name\",\n          \"key\"\n         ],\n         \"type\": \"object\"\n        }\n       },\n       \"required\": [\n        \"username\",\n        \"password\"\n       ],\n       \"type\": \"object\"\n      },\n      \"database\": {\n       \"description\": \"When specified will indicate the database where the benchmark will run upon.\\n\\nIf not specified a target database with a random name will be created and removed after the benchmark completes.\\n\",\n       \"type\": \"string\"\n      },\n      \"pgbench\": {\n       \"description\": \"Configuration of [pgbench](https://www.postgresql.org/docs/current/pgbench.html) benchmark\\n\",\n       \"properties\": {\n        \"concurrentClients\": {\n         \"description\": \"Number of clients simulated, that is, number of concurrent database sessions. Defaults to: `1`.\\n\",\n         \"type\": \"integer\"\n        },\n        \"custom\": {\n         \"description\": \"This section allow to configure custom SQL for initialization and scripts used by pgbench.\",\n         \"properties\": {\n          \"initialization\": {\n           \"description\": \"The custom SQL for initialization that will be executed in place of pgbench default initialization.\\n\\nIf not specified the default pgbench initialization will be performed instead.\\n\",\n           \"properties\": {\n            \"script\": {\n             \"description\": \"Raw SQL script to execute. This field is mutually exclusive with `scriptFrom` field.\\n\",\n             \"type\": \"string\"\n            },\n            \"scriptFrom\": {\n             \"description\": \"Reference to either a Kubernetes [Secret](https://kubernetes.io/docs/concepts/configuration/secret/) or a [ConfigMap](https://kubernetes.io/docs/concepts/configuration/configmap/) that contains the SQL script to execute. This field is mutually exclusive with `script` field.\\n\\nFields `secretKeyRef` and `configMapKeyRef` are mutually exclusive, and one of them is required.\\n\",\n             \"properties\": {\n              \"configMapKeyRef\": {\n               \"description\": \"A [ConfigMap](https://kubernetes.io/docs/concepts/configuration/configmap/) reference that contains the SQL script to execute. This field is mutually exclusive with `secretKeyRef` field.\\n\",\n               \"properties\": {\n                \"key\": {\n                 \"description\": \"The key name within the ConfigMap that contains the SQL script to execute.\\n\",\n                 \"type\": \"string\"\n                },\n                \"name\": {\n                 \"description\": \"The name of the ConfigMap that contains the SQL script to execute.\\n\",\n                 \"type\": \"string\"\n                }\n               },\n               \"type\": \"object\"\n              },\n              \"secretKeyRef\": {\n               \"description\": \"A Kubernetes [SecretKeySelector](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.29/#secretkeyselector-v1-core) that contains the SQL script to execute. This field is mutually exclusive with `configMapKeyRef` field.\\n\",\n               \"properties\": {\n                \"key\": {\n                 \"description\": \"The key of the secret to select from. Must be a valid secret key.\",\n                 \"type\": \"string\"\n                },\n                \"name\": {\n                 \"description\": \"Name of the referent. [More information](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).\",\n                 \"type\": \"string\"\n                }\n               },\n               \"type\": \"object\"\n              }\n             },\n             \"type\": \"object\"\n            }\n           },\n           \"type\": \"object\"\n          },\n          \"scripts\": {\n           \"description\": \"The custom SQL scripts that will be executed by pgbench during the benchmark instead of default pgbench scripts\",\n           \"items\": {\n            \"description\": \"A custom SQL script that will be executed by pgbench during the benchmark instead of default pgbench scripts\",\n            \"properties\": {\n             \"builtin\": {\n              \"description\": \"The name of the builtin script to use. See https://www.postgresql.org/docs/current/pgbench.html#PGBENCH-OPTION-BUILTIN\\n\\nWhen specified fields `replay`, `script` and `scriptFrom` must not be set.\\n\",\n              \"type\": \"string\"\n             },\n             \"replay\": {\n              \"description\": \"The index of the query in the sampling benchmark SGDbOps's status (index start from 0).\\n\\nWhen specified fields `builtin`, `script` and `scriptFrom` must not be set.\\n\",\n              \"type\": \"integer\"\n             },\n             \"script\": {\n              \"description\": \"Raw SQL script to execute. This field is mutually exclusive with `scriptFrom` field.\\n\",\n              \"type\": \"string\"\n             },\n             \"scriptFrom\": {\n              \"description\": \"Reference to either a Kubernetes [Secret](https://kubernetes.io/docs/concepts/configuration/secret/) or a [ConfigMap](https://kubernetes.io/docs/concepts/configuration/configmap/) that contains the SQL script to execute. This field is mutually exclusive with `script` field.\\n\\nFields `secretKeyRef` and `configMapKeyRef` are mutually exclusive, and one of them is required.\\n\",\n              \"properties\": {\n               \"configMapKeyRef\": {\n                \"description\": \"A [ConfigMap](https://kubernetes.io/docs/concepts/configuration/configmap/) reference that contains the SQL script to execute. This field is mutually exclusive with `secretKeyRef` field.\\n\",\n                \"properties\": {\n                 \"key\": {\n                  \"description\": \"The key name within the ConfigMap that contains the SQL script to execute.\\n\",\n                  \"type\": \"string\"\n                 },\n                 \"name\": {\n                  \"description\": \"The name of the ConfigMap that contains the SQL script to execute.\\n\",\n                  \"type\": \"string\"\n                 }\n                },\n                \"type\": \"object\"\n               },\n               \"secretKeyRef\": {\n                \"description\": \"A Kubernetes [SecretKeySelector](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.29/#secretkeyselector-v1-core) that contains the SQL script to execute. This field is mutually exclusive with `configMapKeyRef` field.\\n\",\n                \"properties\": {\n                 \"key\": {\n                  \"description\": \"The key of the secret to select from. Must be a valid secret key.\",\n                  \"type\": \"string\"\n                 },\n                 \"name\": {\n                  \"description\": \"Name of the referent. [More information](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).\",\n                  \"type\": \"string\"\n                 }\n                },\n                \"type\": \"object\"\n               }\n              },\n              \"type\": \"object\"\n             },\n             \"weight\": {\n              \"description\": \"The weight of this custom SQL script.\",\n              \"type\": \"integer\"\n             }\n            },\n            \"type\": \"object\"\n           },\n           \"minItems\": 1,\n           \"type\": \"array\"\n          }\n         },\n         \"type\": \"object\"\n        },\n        \"databaseSize\": {\n         \"description\": \"Size of the database to generate. This size is specified either in Mebibytes, Gibibytes or Tebibytes (multiples of 2^20, 2^30 or 2^40, respectively).\\n\",\n         \"pattern\": \"^[0-9]+(\\\\.[0-9]+)?(Mi|Gi|Ti)$\",\n         \"type\": \"string\"\n        },\n        \"duration\": {\n         \"description\": \"An ISO 8601 duration in the format `PnDTnHnMn.nS`, that specifies how long the benchmark will run.\\n\",\n         \"type\": \"string\"\n        },\n        \"fillfactor\": {\n         \"description\": \"Create the pgbench_accounts, pgbench_tellers and pgbench_branches tables with the given fillfactor. Default is 100.\\n\",\n         \"type\": \"integer\"\n        },\n        \"foreignKeys\": {\n         \"description\": \"Create foreign key constraints between the standard tables. (This option only take effect if `custom.initiailization` is not specified).\\n\",\n         \"type\": \"boolean\"\n        },\n        \"initSteps\": {\n         \"description\": \"Perform just a selected set of the normal initialization steps. init_steps specifies the initialization steps to be performed, using one character per step. Each step is invoked in the specified order. The default is dtgvp. The available steps are:\\n\\n* `d` (Drop): Drop any existing pgbench tables.\\n* `t` (create Tables): Create the tables used by the standard pgbench scenario, namely pgbench_accounts, pgbench_branches, pgbench_history, and pgbench_tellers.\\n* `g` or `G` (Generate data, client-side or server-side): Generate data and load it into the standard tables, replacing any data already present.\\n  With `g` (client-side data generation), data is generated in pgbench client and then sent to the server. This uses the client/server bandwidth extensively through a COPY. pgbench uses the FREEZE option with version 14 or later of PostgreSQL to speed up subsequent VACUUM, unless partitions are enabled. Using g causes logging to print one message every 100,000 rows while generating data for the pgbench_accounts table.\\n  With `G` (server-side data generation), only small queries are sent from the pgbench client and then data is actually generated in the server. No significant bandwidth is required for this variant, but the server will do more work. Using G causes logging not to print any progress message while generating data.\\n  The default initialization behavior uses client-side data generation (equivalent to g).\\n* `v` (Vacuum): Invoke VACUUM on the standard tables.\\n* `p` (create Primary keys): Create primary key indexes on the standard tables.\\n* `f` (create Foreign keys): Create foreign key constraints between the standard tables. (Note that this step is not performed by default.)\\n\",\n         \"type\": \"string\"\n        },\n        \"mode\": {\n         \"description\": \"The pgbench benchmark type:\\n\\n* `tpcb-like`: The benchmark is inspired by the [TPC-B benchmark](https://www.tpc.org/TPC_Documents_Latest_Versions/TPC-B_v2.0.0.pdf). It is the default mode when `connectionType` is set to `primary-service`.\\n* `select-only`: The `tpcb-like` but only using SELECTs commands. It is the default mode when `connectionType` is set to `replicas-service`.\\n* `custom`: will use the scripts in the `custom` section to initialize and and run commands for the benchmark.\\n* `replay`: will replay the sampled queries of a sampling benchmark SGDbOps. If the `custom` section is specified it will be used instead. Queries can be referenced setting `custom.scripts.replay` to the index of the query in the sampling benchmark SGDbOps's status (index start from 0).\\n\\nSee also https://www.postgresql.org/docs/current/pgbench.html#TRANSACTIONS-AND-SCRIPTS\\n\",\n         \"type\": \"string\"\n        },\n        \"noVacuum\": {\n         \"description\": \"Perform no vacuuming during initialization. (This option suppresses the `v` initialization step, even if it was specified in `initSteps`.)\\n\",\n         \"type\": \"boolean\"\n        },\n        \"partitionMethod\": {\n         \"description\": \"Create a partitioned pgbench_accounts table with the specified method. Expected values are `range` or `hash`. This option requires that partitions is set to non-zero. If unspecified, default is `range`. (This option only take effect if `custom.initiailization` is not specified).\\n\",\n         \"type\": \"string\"\n        },\n        \"partitions\": {\n         \"description\": \"Create a partitioned pgbench_accounts table with the specified number of partitions of nearly equal size for the scaled number of accounts. Default is 0, meaning no partitioning. (This option only take effect if `custom.initiailization` is not specified).\\n\",\n         \"type\": \"integer\"\n        },\n        \"queryMode\": {\n         \"description\": \"Protocol to use for submitting queries to the server:\\n\\n* `simple`: use simple query protocol.\\n* `extended`: use extended query protocol.\\n* `prepared`: use extended query protocol with prepared statements.\\n\\nIn the prepared mode, pgbench reuses the parse analysis result starting from the second query iteration, so pgbench runs faster than in other modes.\\n\\nThe default is `simple` query protocol. See also https://www.postgresql.org/docs/current/protocol.html\\n\",\n         \"type\": \"string\"\n        },\n        \"samplingRate\": {\n         \"description\": \"Sampling rate, used when collecting data, to reduce the amount of collected data. If this option is given, only the specified fraction of transactions are collected. 1.0 means all transactions will be logged, 0.05 means only 5% of the transactions will be logged.\\n\",\n         \"type\": \"number\"\n        },\n        \"samplingSGDbOps\": {\n         \"description\": \"benchmark SGDbOps of type sampling that will be used to replay sampled queries.\",\n         \"type\": \"string\"\n        },\n        \"threads\": {\n         \"description\": \"Number of worker threads within pgbench. Using more than one thread can be helpful on multi-CPU machines. Clients are distributed as evenly as possible among available threads. Default is `1`.\\n\",\n         \"type\": \"integer\"\n        },\n        \"unloggedTables\": {\n         \"description\": \"Create all tables as unlogged tables, rather than permanent tables. (This option only take effect if `custom.initiailization` is not specified).\\n\",\n         \"type\": \"boolean\"\n        },\n        \"usePreparedStatements\": {\n         \"description\": \"**Deprecated** this field is ignored, use `queryMode` instead.\\n\\nUse extended query protocol with prepared statements. Defaults to: `false`.\\n\",\n         \"type\": \"boolean\"\n        }\n       },\n       \"required\": [\n        \"databaseSize\",\n        \"duration\"\n       ],\n       \"type\": \"object\"\n      },\n      \"sampling\": {\n       \"description\": \"Configuration of sampling benchmark.\\n\",\n       \"properties\": {\n        \"customTopQueriesQuery\": {\n         \"description\": \"The query used to select top queries. Will be ignored if `mode` is not set to `custom`.\\n\\nThe query must return at most 2 columns:\\n\\n* First column returned by the query must be a column holding the query identifier, also available in pg_stat_activity (column `query_id`) and pg_stat_statements (column `queryid`).\\n* Second column is optional and, if returned, must hold a json object containing only text keys and values stat will be used to generate the stats.\\n\\nSee also:\\n\\n* https://www.postgresql.org/docs/current/monitoring-stats.html#MONITORING-PG-STAT-ACTIVITY-VIEW\\n* https://www.postgresql.org/docs/current/pgstatstatements.html#PGSTATSTATEMENTS-PG-STAT-STATEMENTS\\n\",\n         \"type\": \"string\"\n        },\n        \"mode\": {\n         \"description\": \"The mode used to select the top queries used for sampling:\\n\\n* `time`: The top queries will be selected among the most slow queries.\\n* `calls`: The top queries will be selected among the most called queries.\\n* `custom`: The `customTopQueriesQuery` will be used to select top queries.\\n\",\n         \"type\": \"string\"\n        },\n        \"omitTopQueriesInStatus\": {\n         \"description\": \"When `true` omit to include the top queries stats in the SGDbOps status. By default `false`.\",\n         \"type\": \"boolean\"\n        },\n        \"queries\": {\n         \"description\": \"Number of sampled queries to include in the result. By default `10`.\",\n         \"type\": \"integer\"\n        },\n        \"samplingDuration\": {\n         \"description\": \"An ISO 8601 duration in the format `PnDTnHnMn.nS`, that specifies how long will last the sampling of real queries that will be replayed later.\",\n         \"type\": \"string\"\n        },\n        \"samplingMinInterval\": {\n         \"description\": \"Minimum number of microseconds the sampler will wait between each sample is taken. By default `10000` (10 milliseconds).\",\n         \"type\": \"integer\"\n        },\n        \"targetDatabase\": {\n         \"description\": \"The target database to be sampled. By default `postgres`.\\n\\nThe benchmark database will be used to store the sampled queries but user must specify a target database to be sampled in the `sampling` section.\\n\",\n         \"type\": \"string\"\n        },\n        \"topQueriesCollectDuration\": {\n         \"description\": \"An ISO 8601 duration in the format `PnDTnHnMn.nS`, that specifies how long the to wait before selecting top queries in order to collect enough stats.\",\n         \"type\": \"string\"\n        },\n        \"topQueriesFilter\": {\n         \"description\": \"Regular expression for filtering representative statements when selecting top queries. Will be ignored if `mode` is set to `custom`. By default is `^ *(with|select) `. See https://www.postgresql.org/docs/current/functions-matching.html#FUNCTIONS-POSIX-REGEXP\",\n         \"type\": \"string\"\n        },\n        \"topQueriesMin\": {\n         \"description\": \"Minimum number of queries to consider as part of the top queries. By default `5`.\",\n         \"type\": \"integer\"\n        },\n        \"topQueriesPercentile\": {\n         \"description\": \"Percentile of queries to consider as part of the top queries. Will be ignored if `mode` is set to `custom`. By default `95`.\",\n         \"type\": \"integer\"\n        }\n       },\n       \"required\": [\n        \"targetDatabase\",\n        \"topQueriesCollectDuration\",\n        \"samplingDuration\"\n       ],\n       \"type\": \"object\"\n      },\n      \"type\": {\n       \"description\": \"The type of benchmark that will be performed on the SGCluster. Available benchmarks are:\\n\\n* `pgbench`: run [pgbench](https://www.postgresql.org/docs/current/pgbench.html) on the specified SGCluster and report the results in the status.\\n* `sampling`: samples real queries and store them in the SGDbOps status in order to be used by a `pgbench` benchmark using `replay` mode.\\n\",\n       \"type\": \"string\"\n      }\n     },\n     \"required\": [\n      \"type\"\n     ],\n     \"type\": \"object\"\n    },\n    \"majorVersionUpgrade\": {\n     \"description\": \"Configuration of major version upgrade (see also [`pg_upgrade`](https://www.postgresql.org/docs/current/pgupgrade.html) command)\\n\",\n     \"properties\": {\n      \"backupPath\": {\n       \"description\": \"The path were the backup is stored. If not set this field is filled up by the operator.\\n\\nWhen provided will indicate were the backups and WAL files will be stored.\\n\\nThe path should be different from the current `.spec.configurations.backups[].path` value for the target `SGCluster`\\n  in order to avoid mixing WAL files of two distinct major versions of postgres.\\n\",\n       \"type\": \"string\"\n      },\n      \"check\": {\n       \"description\": \"If true does some checks to see if the cluster can perform a major version upgrade without changing any data. Defaults to: `false`.\\n\",\n       \"type\": \"boolean\"\n      },\n      \"clone\": {\n       \"description\": \"If true use efficient file cloning (also known as \\\"reflinks\\\" on some systems) instead of copying files to the new cluster.\\nThis can result in near-instantaneous copying of the data files, giving the speed advantages of `link` while leaving the old\\n  cluster untouched. This option is mutually exclusive with `link`. Defaults to: `false`.\\n\\nFile cloning is only supported on some operating systems and file systems. If it is selected but not supported, the pg_upgrade\\n  run will error. At present, it is supported on Linux (kernel 4.5 or later) with Btrfs and XFS (on file systems created with\\n  reflink support), and on macOS with APFS.\\n\",\n       \"type\": \"boolean\"\n      },\n      \"link\": {\n       \"description\": \"If true use hard links instead of copying files to the new cluster. This option is mutually exclusive with `clone`. Defaults to: `false`.\\n\",\n       \"type\": \"boolean\"\n      },\n      \"postgresExtensions\": {\n       \"description\": \"A major version upgrade can not be performed if a required extension is not present for the target major version of the upgrade.\\nIn those cases you will have to provide the target extension version of the extension for the target major version of postgres.\\nBeware that in some cases it is not possible to upgrade an extension alongside postgres. This is the case for PostGIS or timescaledb.\\n In such cases you will have to upgrade the extension before or after the major version upgrade. Please make sure you read the\\n documentation of each extension in order to understand if it is possible to upgrade it during a major version upgrade of postgres.\\n\",\n       \"items\": {\n        \"properties\": {\n         \"name\": {\n          \"description\": \"The name of the extension to deploy.\",\n          \"type\": \"string\"\n         },\n         \"publisher\": {\n          \"default\": \"com.ongres\",\n          \"description\": \"The id of the publisher of the extension to deploy. If not specified `com.ongres` will be used by default.\",\n          \"type\": \"string\"\n         },\n         \"repository\": {\n          \"description\": \"The repository base URL from where to obtain the extension to deploy.\\n\\n**This section is filled by the operator.**\\n\",\n          \"type\": \"string\"\n         },\n         \"version\": {\n          \"description\": \"The version of the extension to deploy. If not specified version of `stable` channel will be used by default and if only a version is available that one will be used.\",\n          \"type\": \"string\"\n         }\n        },\n        \"required\": [\n         \"name\"\n        ],\n        \"type\": \"object\"\n       },\n       \"type\": \"array\"\n      },\n      \"postgresVersion\": {\n       \"description\": \"The target postgres version that must have the same major version of the target SGCluster.\\n\",\n       \"type\": \"string\"\n      },\n      \"sgPostgresConfig\": {\n       \"description\": \"The postgres config that must have the same major version of the target postgres version.\\n\",\n       \"type\": \"string\"\n      },\n      \"toInstallPostgresExtensions\": {\n       \"description\": \"The list of Postgres extensions to install.\\n\\n**This section is filled by the operator.**\\n\",\n       \"items\": {\n        \"properties\": {\n         \"build\": {\n          \"description\": \"The build version of the extension to install.\",\n          \"type\": \"string\"\n         },\n         \"extraMounts\": {\n          \"description\": \"The extra mounts of the extension to install.\",\n          \"items\": {\n           \"description\": \"The extra mount of the installed extension.\",\n           \"type\": \"string\"\n          },\n          \"type\": \"array\"\n         },\n         \"name\": {\n          \"description\": \"The name of the extension to install.\",\n          \"type\": \"string\"\n         },\n         \"postgresVersion\": {\n          \"description\": \"The postgres major version of the extension to install.\",\n          \"type\": \"string\"\n         },\n         \"publisher\": {\n          \"description\": \"The id of the publisher of the extension to install.\",\n          \"type\": \"string\"\n         },\n         \"repository\": {\n          \"description\": \"The repository base URL from where the extension will be installed from.\",\n          \"type\": \"string\"\n         },\n         \"version\": {\n          \"description\": \"The version of the extension to install.\",\n          \"type\": \"string\"\n         }\n        },\n        \"required\": [\n         \"name\",\n         \"publisher\",\n         \"version\",\n         \"repository\",\n         \"postgresVersion\"\n        ],\n        \"type\": \"object\"\n       },\n       \"type\": \"array\"\n      }\n     },\n     \"type\": \"object\"\n    },\n    \"maxRetries\": {\n     \"description\": \"The maximum number of retries the operation is allowed to do after a failure.\\n\\nA value of `0` (zero) means no retries are made. Defaults to: `0`.\\n\",\n     \"type\": \"integer\"\n    },\n    \"minorVersionUpgrade\": {\n     \"description\": \"Configuration of minor version upgrade\\n\",\n     \"properties\": {\n      \"method\": {\n       \"description\": \"The method used to perform the minor version upgrade operation. Available methods are:\\n\\n* `InPlace`: the in-place method does not require more resources than those that are available.\\n  In case only an instance of the StackGres cluster is present this mean the service disruption will\\n  last longer so we encourage use the reduced impact restart and especially for a production environment.\\n* `ReducedImpact`: this procedure is the same as the in-place method but require additional\\n  resources in order to spawn a new updated replica that will be removed when the procedure completes.\\n\",\n       \"type\": \"string\"\n      },\n      \"postgresVersion\": {\n       \"description\": \"The target postgres version that must have the same major version of the target SGCluster.\\n\",\n       \"type\": \"string\"\n      }\n     },\n     \"type\": \"object\"\n    },\n    \"op\": {\n     \"description\": \"The kind of operation that will be performed on the SGCluster. Available operations are:\\n\\n* `benchmark`: run a benchmark on the specified SGCluster and report the results in the status.\\n* `vacuum`: perform a [vacuum](https://www.postgresql.org/docs/current/sql-vacuum.html) operation on the specified SGCluster.\\n* `repack`: run [`pg_repack`](https://github.com/reorg/pg_repack) command on the specified SGCluster.\\n* `majorVersionUpgrade`: perform a major version upgrade of PostgreSQL using [`pg_upgrade`](https://www.postgresql.org/docs/current/pgupgrade.html) command.\\n* `restart`: perform a restart of the cluster.\\n* `minorVersionUpgrade`: perform a minor version upgrade of PostgreSQL.\\n* `securityUpgrade`: perform a security upgrade of the cluster.\\n\",\n     \"type\": \"string\"\n    },\n    \"repack\": {\n     \"description\": \"Configuration of [`pg_repack`](https://github.com/reorg/pg_repack) command\\n\",\n     \"properties\": {\n      \"databases\": {\n       \"description\": \"List of database to vacuum or repack, don't specify to select all databases\\n\",\n       \"items\": {\n        \"properties\": {\n         \"excludeExtension\": {\n          \"description\": \"If true don't repack tables which belong to specific extension. Defaults to: `false`.\\n\",\n          \"type\": \"boolean\"\n         },\n         \"name\": {\n          \"description\": \"the name of the database\",\n          \"type\": \"string\"\n         },\n         \"noAnalyze\": {\n          \"description\": \"If true don't analyze at end. Defaults to: `false`.\\n\",\n          \"type\": \"boolean\"\n         },\n         \"noKillBackend\": {\n          \"description\": \"If true don't kill other backends when timed out. Defaults to: `false`.\\n\",\n          \"type\": \"boolean\"\n         },\n         \"noOrder\": {\n          \"description\": \"If true do vacuum full instead of cluster. Defaults to: `false`.\\n\",\n          \"type\": \"boolean\"\n         },\n         \"waitTimeout\": {\n          \"description\": \"If specified, an ISO 8601 duration format `PnDTnHnMn.nS` to set a timeout to cancel other backends on conflict.\\n\",\n          \"type\": \"string\"\n         }\n        },\n        \"required\": [\n         \"name\"\n        ],\n        \"type\": \"object\"\n       },\n       \"type\": \"array\"\n      },\n      \"excludeExtension\": {\n       \"description\": \"If true don't repack tables which belong to specific extension. Defaults to: `false`.\\n\",\n       \"type\": \"boolean\"\n      },\n      \"noAnalyze\": {\n       \"description\": \"If true don't analyze at end. Defaults to: `false`.\\n\",\n       \"type\": \"boolean\"\n      },\n      \"noKillBackend\": {\n       \"description\": \"If true don't kill other backends when timed out. Defaults to: `false`.\\n\",\n       \"type\": \"boolean\"\n      },\n      \"noOrder\": {\n       \"description\": \"If true do vacuum full instead of cluster. Defaults to: `false`.\\n\",\n       \"type\": \"boolean\"\n      },\n      \"waitTimeout\": {\n       \"description\": \"If specified, an ISO 8601 duration format `PnDTnHnMn.nS` to set a timeout to cancel other backends on conflict.\\n\",\n       \"type\": \"string\"\n      }\n     },\n     \"type\": \"object\"\n    },\n    \"restart\": {\n     \"description\": \"Configuration of restart\\n\",\n     \"properties\": {\n      \"method\": {\n       \"description\": \"The method used to perform the restart operation. Available methods are:\\n\\n* `InPlace`: the in-place method does not require more resources than those that are available.\\n  In case only an instance of the StackGres cluster is present this mean the service disruption will\\n  last longer so we encourage use the reduced impact restart and especially for a production environment.\\n* `ReducedImpact`: this procedure is the same as the in-place method but require additional\\n  resources in order to spawn a new updated replica that will be removed when the procedure completes.\\n\",\n       \"type\": \"string\"\n      },\n      \"onlyPendingRestart\": {\n       \"description\": \"By default all Pods are restarted. Setting this option to `true` allow to restart only those Pods which\\n  are in pending restart state as detected by the operation. Defaults to: `false`.\\n\",\n       \"type\": \"boolean\"\n      }\n     },\n     \"type\": \"object\"\n    },\n    \"runAt\": {\n     \"description\": \"An ISO 8601 date, that holds UTC scheduled date of the operation execution.\\n\\nIf not specified or if the date it's in the past, it will be interpreted ASAP.\\n\",\n     \"type\": \"string\"\n    },\n    \"scheduling\": {\n     \"description\": \"Pod custom node scheduling and affinity configuration\",\n     \"properties\": {\n      \"nodeAffinity\": {\n       \"description\": \"Node affinity is a group of node affinity scheduling rules.\\n\\nSee https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.29/#nodeaffinity-v1-core\",\n       \"properties\": {\n        \"preferredDuringSchedulingIgnoredDuringExecution\": {\n         \"description\": \"The scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding \\\"weight\\\" to the sum if the node matches the corresponding matchExpressions; the node(s) with the highest sum are the most preferred.\",\n         \"items\": {\n          \"description\": \"An empty preferred scheduling term matches all objects with implicit weight 0 (i.e. it's a no-op). A null preferred scheduling term matches no objects (i.e. is also a no-op).\",\n          \"properties\": {\n           \"preference\": {\n            \"description\": \"A null or empty node selector term matches no objects. The requirements of them are ANDed. The TopologySelectorTerm type implements a subset of the NodeSelectorTerm.\",\n            \"properties\": {\n             \"matchExpressions\": {\n              \"description\": \"A list of node selector requirements by node's labels.\",\n              \"items\": {\n               \"description\": \"A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.\",\n               \"properties\": {\n                \"key\": {\n                 \"description\": \"The label key that the selector applies to.\",\n                 \"type\": \"string\"\n                },\n                \"operator\": {\n                 \"description\": \"Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.\",\n                 \"type\": \"string\"\n                },\n                \"values\": {\n                 \"description\": \"An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.\",\n                 \"items\": {\n                  \"type\": \"string\"\n                 },\n                 \"type\": \"array\"\n                }\n               },\n               \"required\": [\n                \"key\",\n                \"operator\"\n               ],\n               \"type\": \"object\"\n              },\n              \"type\": \"array\"\n             },\n             \"matchFields\": {\n              \"description\": \"A list of node selector requirements by node's fields.\",\n              \"items\": {\n               \"description\": \"A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.\",\n               \"properties\": {\n                \"key\": {\n                 \"description\": \"The label key that the selector applies to.\",\n                 \"type\": \"string\"\n                },\n                \"operator\": {\n                 \"description\": \"Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.\",\n                 \"type\": \"string\"\n                },\n                \"values\": {\n                 \"description\": \"An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.\",\n                 \"items\": {\n                  \"type\": \"string\"\n                 },\n                 \"type\": \"array\"\n                }\n               },\n               \"required\": [\n                \"key\",\n                \"operator\"\n               ],\n               \"type\": \"object\"\n              },\n              \"type\": \"array\"\n             }\n            },\n            \"type\": \"object\"\n           },\n           \"weight\": {\n            \"description\": \"Weight associated with matching the corresponding nodeSelectorTerm, in the range 1-100.\",\n            \"format\": \"int32\",\n            \"type\": \"integer\"\n           }\n          },\n          \"required\": [\n           \"weight\",\n           \"preference\"\n          ],\n          \"type\": \"object\"\n         },\n         \"type\": \"array\"\n        },\n        \"requiredDuringSchedulingIgnoredDuringExecution\": {\n         \"description\": \"A node selector represents the union of the results of one or more label queries over a set of nodes; that is, it represents the OR of the selectors represented by the node selector terms.\",\n         \"properties\": {\n          \"nodeSelectorTerms\": {\n           \"description\": \"Required. A list of node selector terms. The terms are ORed.\",\n           \"items\": {\n            \"description\": \"A null or empty node selector term matches no objects. The requirements of them are ANDed. The TopologySelectorTerm type implements a subset of the NodeSelectorTerm.\",\n            \"properties\": {\n             \"matchExpressions\": {\n              \"description\": \"A list of node selector requirements by node's labels.\",\n              \"items\": {\n               \"description\": \"A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.\",\n               \"properties\": {\n                \"key\": {\n                 \"description\": \"The label key that the selector applies to.\",\n                 \"type\": \"string\"\n                },\n                \"operator\": {\n                 \"description\": \"Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.\",\n                 \"type\": \"string\"\n                },\n                \"values\": {\n                 \"description\": \"An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.\",\n                 \"items\": {\n                  \"type\": \"string\"\n                 },\n                 \"type\": \"array\"\n                }\n               },\n               \"required\": [\n                \"key\",\n                \"operator\"\n               ],\n               \"type\": \"object\"\n              },\n              \"type\": \"array\"\n             },\n             \"matchFields\": {\n              \"description\": \"A list of node selector requirements by node's fields.\",\n              \"items\": {\n               \"description\": \"A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.\",\n               \"properties\": {\n                \"key\": {\n                 \"description\": \"The label key that the selector applies to.\",\n                 \"type\": \"string\"\n                },\n                \"operator\": {\n                 \"description\": \"Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.\",\n                 \"type\": \"string\"\n                },\n                \"values\": {\n                 \"description\": \"An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.\",\n                 \"items\": {\n                  \"type\": \"string\"\n                 },\n                 \"type\": \"array\"\n                }\n               },\n               \"required\": [\n                \"key\",\n                \"operator\"\n               ],\n               \"type\": \"object\"\n              },\n              \"type\": \"array\"\n             }\n            },\n            \"type\": \"object\"\n           },\n           \"type\": \"array\"\n          }\n         },\n         \"required\": [\n          \"nodeSelectorTerms\"\n         ],\n         \"type\": \"object\"\n        }\n       },\n       \"type\": \"object\"\n      },\n      \"nodeSelector\": {\n       \"additionalProperties\": {\n        \"type\": \"string\"\n       },\n       \"description\": \"NodeSelector is a selector which must be true for the pod to fit on a node. Selector which must match a node's labels for the pod to be scheduled on that node. More info: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/\\n\",\n       \"type\": \"object\"\n      },\n      \"podAffinity\": {\n       \"description\": \"Pod affinity is a group of inter pod affinity scheduling rules.\\n\\nSee https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.29/#podaffinity-v1-core\",\n       \"properties\": {\n        \"preferredDuringSchedulingIgnoredDuringExecution\": {\n         \"description\": \"The scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding \\\"weight\\\" to the sum if the node has pods which matches the corresponding podAffinityTerm; the node(s) with the highest sum are the most preferred.\",\n         \"items\": {\n          \"description\": \"The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)\",\n          \"properties\": {\n           \"podAffinityTerm\": {\n            \"description\": \"Defines a set of pods (namely those matching the labelSelector relative to the given namespace(s)) that this pod should be co-located (affinity) or not co-located (anti-affinity) with, where co-located is defined as running on a node whose value of the label with key \\u003ctopologyKey\\u003e matches that of any node on which a pod of the set of pods is running\",\n            \"properties\": {\n             \"labelSelector\": {\n              \"description\": \"A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.\",\n              \"properties\": {\n               \"matchExpressions\": {\n                \"description\": \"matchExpressions is a list of label selector requirements. The requirements are ANDed.\",\n                \"items\": {\n                 \"description\": \"A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.\",\n                 \"properties\": {\n                  \"key\": {\n                   \"description\": \"key is the label key that the selector applies to.\",\n                   \"type\": \"string\"\n                  },\n                  \"operator\": {\n                   \"description\": \"operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.\",\n                   \"type\": \"string\"\n                  },\n                  \"values\": {\n                   \"description\": \"values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.\",\n                   \"items\": {\n                    \"type\": \"string\"\n                   },\n                   \"type\": \"array\"\n                  }\n                 },\n                 \"required\": [\n                  \"key\",\n                  \"operator\"\n                 ],\n                 \"type\": \"object\"\n                },\n                \"type\": \"array\"\n               },\n               \"matchLabels\": {\n                \"additionalProperties\": {\n                 \"type\": \"string\"\n                },\n                \"description\": \"matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \\\"key\\\", the operator is \\\"In\\\", and the values array contains only \\\"value\\\". The requirements are ANDed.\",\n                \"type\": \"object\"\n               }\n              },\n              \"type\": \"object\"\n             },\n             \"matchLabelKeys\": {\n              \"description\": \"MatchLabelKeys is a set of pod label keys to select which pods will be taken into consideration. The keys are used to lookup values from the incoming pod labels, those key-value labels are merged with `LabelSelector` as `key in (value)` to select the group of existing pods which pods will be taken into consideration for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming pod labels will be ignored. The default value is empty. The same key is forbidden to exist in both MatchLabelKeys and LabelSelector. Also, MatchLabelKeys cannot be set when LabelSelector isn't set. This is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate.\",\n              \"items\": {\n               \"type\": \"string\"\n              },\n              \"type\": \"array\"\n             },\n             \"mismatchLabelKeys\": {\n              \"description\": \"MismatchLabelKeys is a set of pod label keys to select which pods will be taken into consideration. The keys are used to lookup values from the incoming pod labels, those key-value labels are merged with `LabelSelector` as `key notin (value)` to select the group of existing pods which pods will be taken into consideration for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming pod labels will be ignored. The default value is empty. The same key is forbidden to exist in both MismatchLabelKeys and LabelSelector. Also, MismatchLabelKeys cannot be set when LabelSelector isn't set. This is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate.\",\n              \"items\": {\n               \"type\": \"string\"\n              },\n              \"type\": \"array\"\n             },\n             \"namespaceSelector\": {\n              \"description\": \"A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.\",\n              \"properties\": {\n               \"matchExpressions\": {\n                \"description\": \"matchExpressions is a list of label selector requirements. The requirements are ANDed.\",\n                \"items\": {\n                 \"description\": \"A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.\",\n                 \"properties\": {\n                  \"key\": {\n                   \"description\": \"key is the label key that the selector applies to.\",\n                   \"type\": \"string\"\n                  },\n                  \"operator\": {\n                   \"description\": \"operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.\",\n                   \"type\": \"string\"\n                  },\n                  \"values\": {\n                   \"description\": \"values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.\",\n                   \"items\": {\n                    \"type\": \"string\"\n                   },\n                   \"type\": \"array\"\n                  }\n                 },\n                 \"required\": [\n                  \"key\",\n                  \"operator\"\n                 ],\n                 \"type\": \"object\"\n                },\n                \"type\": \"array\"\n               },\n               \"matchLabels\": {\n                \"additionalProperties\": {\n                 \"type\": \"string\"\n                },\n                \"description\": \"matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \\\"key\\\", the operator is \\\"In\\\", and the values array contains only \\\"value\\\". The requirements are ANDed.\",\n                \"type\": \"object\"\n               }\n              },\n              \"type\": \"object\"\n             },\n             \"namespaces\": {\n              \"description\": \"namespaces specifies a static list of namespace names that the term applies to. The term is applied to the union of the namespaces listed in this field and the ones selected by namespaceSelector. null or empty namespaces list and null namespaceSelector means \\\"this pod's namespace\\\".\",\n              \"items\": {\n               \"type\": \"string\"\n              },\n              \"type\": \"array\"\n             },\n             \"topologyKey\": {\n              \"description\": \"This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.\",\n              \"type\": \"string\"\n             }\n            },\n            \"required\": [\n             \"topologyKey\"\n            ],\n            \"type\": \"object\"\n           },\n           \"weight\": {\n            \"description\": \"weight associated with matching the corresponding podAffinityTerm, in the range 1-100.\",\n            \"format\": \"int32\",\n            \"type\": \"integer\"\n           }\n          },\n          \"required\": [\n           \"weight\",\n           \"podAffinityTerm\"\n          ],\n          \"type\": \"object\"\n         },\n         \"type\": \"array\"\n        },\n        \"requiredDuringSchedulingIgnoredDuringExecution\": {\n         \"description\": \"If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to a pod label update), the system may or may not try to eventually evict the pod from its node. When there are multiple elements, the lists of nodes corresponding to each podAffinityTerm are intersected, i.e. all terms must be satisfied.\",\n         \"items\": {\n          \"description\": \"Defines a set of pods (namely those matching the labelSelector relative to the given namespace(s)) that this pod should be co-located (affinity) or not co-located (anti-affinity) with, where co-located is defined as running on a node whose value of the label with key \\u003ctopologyKey\\u003e matches that of any node on which a pod of the set of pods is running\",\n          \"properties\": {\n           \"labelSelector\": {\n            \"description\": \"A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.\",\n            \"properties\": {\n             \"matchExpressions\": {\n              \"description\": \"matchExpressions is a list of label selector requirements. The requirements are ANDed.\",\n              \"items\": {\n               \"description\": \"A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.\",\n               \"properties\": {\n                \"key\": {\n                 \"description\": \"key is the label key that the selector applies to.\",\n                 \"type\": \"string\"\n                },\n                \"operator\": {\n                 \"description\": \"operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.\",\n                 \"type\": \"string\"\n                },\n                \"values\": {\n                 \"description\": \"values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.\",\n                 \"items\": {\n                  \"type\": \"string\"\n                 },\n                 \"type\": \"array\"\n                }\n               },\n               \"required\": [\n                \"key\",\n                \"operator\"\n               ],\n               \"type\": \"object\"\n              },\n              \"type\": \"array\"\n             },\n             \"matchLabels\": {\n              \"additionalProperties\": {\n               \"type\": \"string\"\n              },\n              \"description\": \"matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \\\"key\\\", the operator is \\\"In\\\", and the values array contains only \\\"value\\\". The requirements are ANDed.\",\n              \"type\": \"object\"\n             }\n            },\n            \"type\": \"object\"\n           },\n           \"matchLabelKeys\": {\n            \"description\": \"MatchLabelKeys is a set of pod label keys to select which pods will be taken into consideration. The keys are used to lookup values from the incoming pod labels, those key-value labels are merged with `LabelSelector` as `key in (value)` to select the group of existing pods which pods will be taken into consideration for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming pod labels will be ignored. The default value is empty. The same key is forbidden to exist in both MatchLabelKeys and LabelSelector. Also, MatchLabelKeys cannot be set when LabelSelector isn't set. This is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate.\",\n            \"items\": {\n             \"type\": \"string\"\n            },\n            \"type\": \"array\"\n           },\n           \"mismatchLabelKeys\": {\n            \"description\": \"MismatchLabelKeys is a set of pod label keys to select which pods will be taken into consideration. The keys are used to lookup values from the incoming pod labels, those key-value labels are merged with `LabelSelector` as `key notin (value)` to select the group of existing pods which pods will be taken into consideration for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming pod labels will be ignored. The default value is empty. The same key is forbidden to exist in both MismatchLabelKeys and LabelSelector. Also, MismatchLabelKeys cannot be set when LabelSelector isn't set. This is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate.\",\n            \"items\": {\n             \"type\": \"string\"\n            },\n            \"type\": \"array\"\n           },\n           \"namespaceSelector\": {\n            \"description\": \"A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.\",\n            \"properties\": {\n             \"matchExpressions\": {\n              \"description\": \"matchExpressions is a list of label selector requirements. The requirements are ANDed.\",\n              \"items\": {\n               \"description\": \"A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.\",\n               \"properties\": {\n                \"key\": {\n                 \"description\": \"key is the label key that the selector applies to.\",\n                 \"type\": \"string\"\n                },\n                \"operator\": {\n                 \"description\": \"operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.\",\n                 \"type\": \"string\"\n                },\n                \"values\": {\n                 \"description\": \"values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.\",\n                 \"items\": {\n                  \"type\": \"string\"\n                 },\n                 \"type\": \"array\"\n                }\n               },\n               \"required\": [\n                \"key\",\n                \"operator\"\n               ],\n               \"type\": \"object\"\n              },\n              \"type\": \"array\"\n             },\n             \"matchLabels\": {\n              \"additionalProperties\": {\n               \"type\": \"string\"\n              },\n              \"description\": \"matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \\\"key\\\", the operator is \\\"In\\\", and the values array contains only \\\"value\\\". The requirements are ANDed.\",\n              \"type\": \"object\"\n             }\n            },\n            \"type\": \"object\"\n           },\n           \"namespaces\": {\n            \"description\": \"namespaces specifies a static list of namespace names that the term applies to. The term is applied to the union of the namespaces listed in this field and the ones selected by namespaceSelector. null or empty namespaces list and null namespaceSelector means \\\"this pod's namespace\\\".\",\n            \"items\": {\n             \"type\": \"string\"\n            },\n            \"type\": \"array\"\n           },\n           \"topologyKey\": {\n            \"description\": \"This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.\",\n            \"type\": \"string\"\n           }\n          },\n          \"required\": [\n           \"topologyKey\"\n          ],\n          \"type\": \"object\"\n         },\n         \"type\": \"array\"\n        }\n       },\n       \"type\": \"object\"\n      },\n      \"podAntiAffinity\": {\n       \"description\": \"Pod anti affinity is a group of inter pod anti affinity scheduling rules.\\n\\nSee https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.29/#podantiaffinity-v1-core\",\n       \"properties\": {\n        \"preferredDuringSchedulingIgnoredDuringExecution\": {\n         \"description\": \"The scheduler will prefer to schedule pods to nodes that satisfy the anti-affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling anti-affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding \\\"weight\\\" to the sum if the node has pods which matches the corresponding podAffinityTerm; the node(s) with the highest sum are the most preferred.\",\n         \"items\": {\n          \"description\": \"The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)\",\n          \"properties\": {\n           \"podAffinityTerm\": {\n            \"description\": \"Defines a set of pods (namely those matching the labelSelector relative to the given namespace(s)) that this pod should be co-located (affinity) or not co-located (anti-affinity) with, where co-located is defined as running on a node whose value of the label with key \\u003ctopologyKey\\u003e matches that of any node on which a pod of the set of pods is running\",\n            \"properties\": {\n             \"labelSelector\": {\n              \"description\": \"A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.\",\n              \"properties\": {\n               \"matchExpressions\": {\n                \"description\": \"matchExpressions is a list of label selector requirements. The requirements are ANDed.\",\n                \"items\": {\n                 \"description\": \"A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.\",\n                 \"properties\": {\n                  \"key\": {\n                   \"description\": \"key is the label key that the selector applies to.\",\n                   \"type\": \"string\"\n                  },\n                  \"operator\": {\n                   \"description\": \"operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.\",\n                   \"type\": \"string\"\n                  },\n                  \"values\": {\n                   \"description\": \"values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.\",\n                   \"items\": {\n                    \"type\": \"string\"\n                   },\n                   \"type\": \"array\"\n                  }\n                 },\n                 \"required\": [\n                  \"key\",\n                  \"operator\"\n                 ],\n                 \"type\": \"object\"\n                },\n                \"type\": \"array\"\n               },\n               \"matchLabels\": {\n                \"additionalProperties\": {\n                 \"type\": \"string\"\n                },\n                \"description\": \"matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \\\"key\\\", the operator is \\\"In\\\", and the values array contains only \\\"value\\\". The requirements are ANDed.\",\n                \"type\": \"object\"\n               }\n              },\n              \"type\": \"object\"\n             },\n             \"matchLabelKeys\": {\n              \"description\": \"MatchLabelKeys is a set of pod label keys to select which pods will be taken into consideration. The keys are used to lookup values from the incoming pod labels, those key-value labels are merged with `LabelSelector` as `key in (value)` to select the group of existing pods which pods will be taken into consideration for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming pod labels will be ignored. The default value is empty. The same key is forbidden to exist in both MatchLabelKeys and LabelSelector. Also, MatchLabelKeys cannot be set when LabelSelector isn't set. This is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate.\",\n              \"items\": {\n               \"type\": \"string\"\n              },\n              \"type\": \"array\"\n             },\n             \"mismatchLabelKeys\": {\n              \"description\": \"MismatchLabelKeys is a set of pod label keys to select which pods will be taken into consideration. The keys are used to lookup values from the incoming pod labels, those key-value labels are merged with `LabelSelector` as `key notin (value)` to select the group of existing pods which pods will be taken into consideration for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming pod labels will be ignored. The default value is empty. The same key is forbidden to exist in both MismatchLabelKeys and LabelSelector. Also, MismatchLabelKeys cannot be set when LabelSelector isn't set. This is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate.\",\n              \"items\": {\n               \"type\": \"string\"\n              },\n              \"type\": \"array\"\n             },\n             \"namespaceSelector\": {\n              \"description\": \"A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.\",\n              \"properties\": {\n               \"matchExpressions\": {\n                \"description\": \"matchExpressions is a list of label selector requirements. The requirements are ANDed.\",\n                \"items\": {\n                 \"description\": \"A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.\",\n                 \"properties\": {\n                  \"key\": {\n                   \"description\": \"key is the label key that the selector applies to.\",\n                   \"type\": \"string\"\n                  },\n                  \"operator\": {\n                   \"description\": \"operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.\",\n                   \"type\": \"string\"\n                  },\n                  \"values\": {\n                   \"description\": \"values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.\",\n                   \"items\": {\n                    \"type\": \"string\"\n                   },\n                   \"type\": \"array\"\n                  }\n                 },\n                 \"required\": [\n                  \"key\",\n                  \"operator\"\n                 ],\n                 \"type\": \"object\"\n                },\n                \"type\": \"array\"\n               },\n               \"matchLabels\": {\n                \"additionalProperties\": {\n                 \"type\": \"string\"\n                },\n                \"description\": \"matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \\\"key\\\", the operator is \\\"In\\\", and the values array contains only \\\"value\\\". The requirements are ANDed.\",\n                \"type\": \"object\"\n               }\n              },\n              \"type\": \"object\"\n             },\n             \"namespaces\": {\n              \"description\": \"namespaces specifies a static list of namespace names that the term applies to. The term is applied to the union of the namespaces listed in this field and the ones selected by namespaceSelector. null or empty namespaces list and null namespaceSelector means \\\"this pod's namespace\\\".\",\n              \"items\": {\n               \"type\": \"string\"\n              },\n              \"type\": \"array\"\n             },\n             \"topologyKey\": {\n              \"description\": \"This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.\",\n              \"type\": \"string\"\n             }\n            },\n            \"required\": [\n             \"topologyKey\"\n            ],\n            \"type\": \"object\"\n           },\n           \"weight\": {\n            \"description\": \"weight associated with matching the corresponding podAffinityTerm, in the range 1-100.\",\n            \"format\": \"int32\",\n            \"type\": \"integer\"\n           }\n          },\n          \"required\": [\n           \"weight\",\n           \"podAffinityTerm\"\n          ],\n          \"type\": \"object\"\n         },\n         \"type\": \"array\"\n        },\n        \"requiredDuringSchedulingIgnoredDuringExecution\": {\n         \"description\": \"If the anti-affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the anti-affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to a pod label update), the system may or may not try to eventually evict the pod from its node. When there are multiple elements, the lists of nodes corresponding to each podAffinityTerm are intersected, i.e. all terms must be satisfied.\",\n         \"items\": {\n          \"description\": \"Defines a set of pods (namely those matching the labelSelector relative to the given namespace(s)) that this pod should be co-located (affinity) or not co-located (anti-affinity) with, where co-located is defined as running on a node whose value of the label with key \\u003ctopologyKey\\u003e matches that of any node on which a pod of the set of pods is running\",\n          \"properties\": {\n           \"labelSelector\": {\n            \"description\": \"A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.\",\n            \"properties\": {\n             \"matchExpressions\": {\n              \"description\": \"matchExpressions is a list of label selector requirements. The requirements are ANDed.\",\n              \"items\": {\n               \"description\": \"A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.\",\n               \"properties\": {\n                \"key\": {\n                 \"description\": \"key is the label key that the selector applies to.\",\n                 \"type\": \"string\"\n                },\n                \"operator\": {\n                 \"description\": \"operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.\",\n                 \"type\": \"string\"\n                },\n                \"values\": {\n                 \"description\": \"values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.\",\n                 \"items\": {\n                  \"type\": \"string\"\n                 },\n                 \"type\": \"array\"\n                }\n               },\n               \"required\": [\n                \"key\",\n                \"operator\"\n               ],\n               \"type\": \"object\"\n              },\n              \"type\": \"array\"\n             },\n             \"matchLabels\": {\n              \"additionalProperties\": {\n               \"type\": \"string\"\n              },\n              \"description\": \"matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \\\"key\\\", the operator is \\\"In\\\", and the values array contains only \\\"value\\\". The requirements are ANDed.\",\n              \"type\": \"object\"\n             }\n            },\n            \"type\": \"object\"\n           },\n           \"matchLabelKeys\": {\n            \"description\": \"MatchLabelKeys is a set of pod label keys to select which pods will be taken into consideration. The keys are used to lookup values from the incoming pod labels, those key-value labels are merged with `LabelSelector` as `key in (value)` to select the group of existing pods which pods will be taken into consideration for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming pod labels will be ignored. The default value is empty. The same key is forbidden to exist in both MatchLabelKeys and LabelSelector. Also, MatchLabelKeys cannot be set when LabelSelector isn't set. This is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate.\",\n            \"items\": {\n             \"type\": \"string\"\n            },\n            \"type\": \"array\"\n           },\n           \"mismatchLabelKeys\": {\n            \"description\": \"MismatchLabelKeys is a set of pod label keys to select which pods will be taken into consideration. The keys are used to lookup values from the incoming pod labels, those key-value labels are merged with `LabelSelector` as `key notin (value)` to select the group of existing pods which pods will be taken into consideration for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming pod labels will be ignored. The default value is empty. The same key is forbidden to exist in both MismatchLabelKeys and LabelSelector. Also, MismatchLabelKeys cannot be set when LabelSelector isn't set. This is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate.\",\n            \"items\": {\n             \"type\": \"string\"\n            },\n            \"type\": \"array\"\n           },\n           \"namespaceSelector\": {\n            \"description\": \"A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.\",\n            \"properties\": {\n             \"matchExpressions\": {\n              \"description\": \"matchExpressions is a list of label selector requirements. The requirements are ANDed.\",\n              \"items\": {\n               \"description\": \"A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.\",\n               \"properties\": {\n                \"key\": {\n                 \"description\": \"key is the label key that the selector applies to.\",\n                 \"type\": \"string\"\n                },\n                \"operator\": {\n                 \"description\": \"operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.\",\n                 \"type\": \"string\"\n                },\n                \"values\": {\n                 \"description\": \"values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.\",\n                 \"items\": {\n                  \"type\": \"string\"\n                 },\n                 \"type\": \"array\"\n                }\n               },\n               \"required\": [\n                \"key\",\n                \"operator\"\n               ],\n               \"type\": \"object\"\n              },\n              \"type\": \"array\"\n             },\n             \"matchLabels\": {\n              \"additionalProperties\": {\n               \"type\": \"string\"\n              },\n              \"description\": \"matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \\\"key\\\", the operator is \\\"In\\\", and the values array contains only \\\"value\\\". The requirements are ANDed.\",\n              \"type\": \"object\"\n             }\n            },\n            \"type\": \"object\"\n           },\n           \"namespaces\": {\n            \"description\": \"namespaces specifies a static list of namespace names that the term applies to. The term is applied to the union of the namespaces listed in this field and the ones selected by namespaceSelector. null or empty namespaces list and null namespaceSelector means \\\"this pod's namespace\\\".\",\n            \"items\": {\n             \"type\": \"string\"\n            },\n            \"type\": \"array\"\n           },\n           \"topologyKey\": {\n            \"description\": \"This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.\",\n            \"type\": \"string\"\n           }\n          },\n          \"required\": [\n           \"topologyKey\"\n          ],\n          \"type\": \"object\"\n         },\n         \"type\": \"array\"\n        }\n       },\n       \"type\": \"object\"\n      },\n      \"priorityClassName\": {\n       \"description\": \"If specified, indicates the pod's priority. \\\"system-node-critical\\\" and \\\"system-cluster-critical\\\" are two special keywords which indicate the highest priorities with the former being the highest priority. Any other name must be defined by creating a PriorityClass object with that name. If not specified, the pod priority will be default or zero if there is no default.\",\n       \"type\": \"string\"\n      },\n      \"tolerations\": {\n       \"description\": \"If specified, the pod's tolerations.\\n\\nSee https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.29/#toleration-v1-core\",\n       \"items\": {\n        \"description\": \"The pod this Toleration is attached to tolerates any taint that matches the triple \\u003ckey,value,effect\\u003e using the matching operator \\u003coperator\\u003e.\",\n        \"properties\": {\n         \"effect\": {\n          \"description\": \"Effect indicates the taint effect to match. Empty means match all taint effects. When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.\",\n          \"type\": \"string\"\n         },\n         \"key\": {\n          \"description\": \"Key is the taint key that the toleration applies to. Empty means match all taint keys. If the key is empty, operator must be Exists; this combination means to match all values and all keys.\",\n          \"type\": \"string\"\n         },\n         \"operator\": {\n          \"description\": \"Operator represents a key's relationship to the value. Valid operators are Exists and Equal. Defaults to Equal. Exists is equivalent to wildcard for value, so that a pod can tolerate all taints of a particular category.\",\n          \"type\": \"string\"\n         },\n         \"tolerationSeconds\": {\n          \"description\": \"TolerationSeconds represents the period of time the toleration (which must be of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default, it is not set, which means tolerate the taint forever (do not evict). Zero and negative values will be treated as 0 (evict immediately) by the system.\",\n          \"format\": \"int64\",\n          \"type\": \"integer\"\n         },\n         \"value\": {\n          \"description\": \"Value is the taint value the toleration matches to. If the operator is Exists, the value should be empty, otherwise just a regular string.\",\n          \"type\": \"string\"\n         }\n        },\n        \"type\": \"object\"\n       },\n       \"type\": \"array\"\n      }\n     },\n     \"type\": \"object\"\n    },\n    \"securityUpgrade\": {\n     \"description\": \"Configuration of security upgrade\\n\",\n     \"properties\": {\n      \"method\": {\n       \"description\": \"The method used to perform the security upgrade operation. Available methods are:\\n\\n* `InPlace`: the in-place method does not require more resources than those that are available.\\n  In case only an instance of the StackGres cluster is present this mean the service disruption will\\n  last longer so we encourage use the reduced impact restart and especially for a production environment.\\n* `ReducedImpact`: this procedure is the same as the in-place method but require additional\\n  resources in order to spawn a new updated replica that will be removed when the procedure completes.\\n\",\n       \"type\": \"string\"\n      }\n     },\n     \"type\": \"object\"\n    },\n    \"sgCluster\": {\n     \"description\": \"The name of SGCluster on which the operation will be performed.\\n\",\n     \"type\": \"string\"\n    },\n    \"timeout\": {\n     \"description\": \"An ISO 8601 duration in the format `PnDTnHnMn.nS`, that specifies a timeout after which the operation execution will be canceled.\\n\\nIf the operation can not be performed due to timeout expiration, the condition `Failed` will have a status of `True` and the reason will be `OperationTimedOut`.\\n\\nIf not specified the operation will never fail for timeout expiration.\\n\",\n     \"type\": \"string\"\n    },\n    \"vacuum\": {\n     \"description\": \"Configuration of [vacuum](https://www.postgresql.org/docs/current/sql-vacuum.html) operation\\n\",\n     \"properties\": {\n      \"analyze\": {\n       \"description\": \"If true, updates statistics used by the planner to determine the most efficient way to execute a query. Defaults to: `true`.\\n\",\n       \"type\": \"boolean\"\n      },\n      \"databases\": {\n       \"description\": \"List of databases to vacuum or repack, don't specify to select all databases\\n\",\n       \"items\": {\n        \"properties\": {\n         \"analyze\": {\n          \"description\": \"If true, updates statistics used by the planner to determine the most efficient way to execute a query. Defaults to: `true`.\\n\",\n          \"type\": \"boolean\"\n         },\n         \"disablePageSkipping\": {\n          \"description\": \"Normally, VACUUM will skip pages based on the visibility map. Pages where all tuples are known to be frozen can always be\\n  skipped, and those where all tuples are known to be visible to all transactions may be skipped except when performing an\\n  aggressive vacuum. Furthermore, except when performing an aggressive vacuum, some pages may be skipped in order to avoid\\n  waiting for other sessions to finish using them. This option disables all page-skipping behavior, and is intended to be\\n  used only when the contents of the visibility map are suspect, which should happen only if there is a hardware or\\n  software issue causing database corruption. Defaults to: `false`.\\n\",\n          \"type\": \"boolean\"\n         },\n         \"freeze\": {\n          \"description\": \"If true selects aggressive \\\"freezing\\\" of tuples. Specifying FREEZE is equivalent to performing VACUUM with the\\n  vacuum_freeze_min_age and vacuum_freeze_table_age parameters set to zero. Aggressive freezing is always performed\\n  when the table is rewritten, so this option is redundant when FULL is specified. Defaults to: `false`.\\n\",\n          \"type\": \"boolean\"\n         },\n         \"full\": {\n          \"description\": \"If true selects \\\"full\\\" vacuum, which can reclaim more space, but takes much longer and exclusively locks the table.\\nThis method also requires extra disk space, since it writes a new copy of the table and doesn't release the old copy\\n  until the operation is complete. Usually this should only be used when a significant amount of space needs to be\\n  reclaimed from within the table. Defaults to: `false`.\\n\",\n          \"type\": \"boolean\"\n         },\n         \"name\": {\n          \"description\": \"the name of the database\",\n          \"type\": \"string\"\n         }\n        },\n        \"required\": [\n         \"name\"\n        ],\n        \"type\": \"object\"\n       },\n       \"type\": \"array\"\n      },\n      \"disablePageSkipping\": {\n       \"description\": \"Normally, VACUUM will skip pages based on the visibility map. Pages where all tuples are known to be frozen can always be\\n  skipped, and those where all tuples are known to be visible to all transactions may be skipped except when performing an\\n  aggressive vacuum. Furthermore, except when performing an aggressive vacuum, some pages may be skipped in order to avoid\\n  waiting for other sessions to finish using them. This option disables all page-skipping behavior, and is intended to be\\n  used only when the contents of the visibility map are suspect, which should happen only if there is a hardware or\\n  software issue causing database corruption. Defaults to: `false`.\\n\",\n       \"type\": \"boolean\"\n      },\n      \"freeze\": {\n       \"description\": \"If true selects aggressive \\\"freezing\\\" of tuples. Specifying FREEZE is equivalent to performing VACUUM with the\\n  vacuum_freeze_min_age and vacuum_freeze_table_age parameters set to zero. Aggressive freezing is always performed\\n  when the table is rewritten, so this option is redundant when FULL is specified. Defaults to: `false`.\\n\",\n       \"type\": \"boolean\"\n      },\n      \"full\": {\n       \"description\": \"If true selects \\\"full\\\" vacuum, which can reclaim more space, but takes much longer and exclusively locks the table.\\nThis method also requires extra disk space, since it writes a new copy of the table and doesn't release the old copy\\n  until the operation is complete. Usually this should only be used when a significant amount of space needs to be\\n  reclaimed from within the table. Defaults to: `false`.\\n\",\n       \"type\": \"boolean\"\n      }\n     },\n     \"type\": \"object\"\n    }\n   },\n   \"required\": [\n    \"sgCluster\",\n    \"op\"\n   ],\n   \"type\": \"object\"\n  }\n },\n \"required\": [\n  \"metadata\",\n  \"spec\"\n ],\n \"title\": \"SGDb Ops\",\n \"type\": \"object\"\n}",
   "version": "stackgres.io/v1"
  },
  "configuration": null,
  "description": "",
  "displayName": "SGDb Ops",
  "format": "JSON",
  "id": "00000000-0000-0000-0000-000000000000",
  "metadata": {
   "genealogy": "",
   "isAnnotation": false,
   "isNamespaced": true,
   "published": false,
   "source_uri": "https://stackgres.io/downloads/stackgres-k8s/stackgres/1.13.0-rc2/helm/stackgres-operator.tgz"
  },
  "model": {
   "category": {
    "name": "App Definition and Development"
   },
   "displayName": "Stackgres Operator",
   "id": "00000000-0000-0000-0000-000000000000",
   "metadata": {
    "isAnnotation": false,
    "primaryColor": "#426d88",
    "secondaryColor": "#00D3A9",
    "shape": "circle",
    "source_uri": "https://stackgres.io/downloads/stackgres-k8s/stackgres/1.13.0-rc2/helm/stackgres-operator.tgz",
    "styleOverrides": "",
    "svgColor": "\u003c?xml version=\"1.0\" encoding=\"UTF-8\"?\u003e\u003c!DOCTYPE svg\u003e\u003csvg xmlns=\"http://www.w3.org/2000/svg\" id=\"Capa_2\" viewBox=\"0 0 500 500\" height=\"20\" width=\"20\"\u003e\u003cstyle xmlns=\"http://www.w3.org/2000/svg\"\u003e.st0{fill:#42a8c8}.st1{fill:#426d88}.st2{fill:#428bb4}.st3{fill:#16657c}.st4{fill:#39b54a}.st5{fill:#009245}.st6{fill:#f2c63f}.st7{fill:#f2b136}.st8{fill:#f2a130}.st9{fill:#ff7124}.st10{fill:#d93d1b}\u003c/style\u003e\u003cswitch xmlns=\"http://www.w3.org/2000/svg\"\u003e\u003cg xmlns=\"http://www.w3.org/2000/svg\"\u003e\u003cpath xmlns=\"http://www.w3.org/2000/svg\" class=\"st0\" d=\"M5.2 273.7l110.7 126.8h268.2l110.7-126.8-110.7-126.8H115.9z\"\u003e\u003c/path\u003e\u003cpath xmlns=\"http://www.w3.org/2000/svg\" class=\"st1\" d=\"M115.9 400.5h268.4v56.4H115.9z\"\u003e\u003c/path\u003e\u003cpath xmlns=\"http://www.w3.org/2000/svg\" class=\"st2\" d=\"M115.9 456.8L5.2 330v-56.3l110.7 126.8z\"\u003e\u003c/path\u003e\u003cpath xmlns=\"http://www.w3.org/2000/svg\" class=\"st3\" d=\"M384.1 456.8L494.8 330v-56.3L384.1 400.5z\"\u003e\u003c/path\u003e\u003cpath xmlns=\"http://www.w3.org/2000/svg\" class=\"st4\" d=\"M465.7 253.4c0-47-96.6-85.2-215.7-85.2S34.4 206.3 34.4 253.4s96.5 85.2 215.6 85.2 215.7-38.2 215.7-85.2z\"\u003e\u003c/path\u003e\u003cpath xmlns=\"http://www.w3.org/2000/svg\" class=\"st5\" d=\"M465.7 253.4c0 47-96.6 85.2-215.7 85.2S34.4 300.4 34.4 253.4v46.9c14.9 41.3 106.5 85.2 215.6 85.2s200.8-43.9 215.7-85.2v-46.9z\"\u003e\u003c/path\u003e\u003cpath xmlns=\"http://www.w3.org/2000/svg\" class=\"st6\" d=\"M16.3 178.6L250 314.1l233.8-135.5L250 43.2z\"\u003e\u003c/path\u003e\u003cpath xmlns=\"http://www.w3.org/2000/svg\" class=\"st7\" d=\"M16.3 178.6v52.8L250 366.9v-52.8z\"\u003e\u003c/path\u003e\u003cpath xmlns=\"http://www.w3.org/2000/svg\" class=\"st8\" d=\"M483.8 178.6L250 314.1v52.8l233.8-135.5z\"\u003e\u003c/path\u003e\u003cpath xmlns=\"http://www.w3.org/2000/svg\" class=\"st9\" d=\"M68 212.4l364.1-53-92.4-106z\"\u003e\u003c/path\u003e\u003cpath xmlns=\"http://www.w3.org/2000/svg\" class=\"st10\" d=\"M68 212.4l364.1-53v47.8L68 260.1z\"\u003e\u003c/path\u003e\u003c/g\u003e\u003c/switch\u003e\u003c/svg\u003e",
    "svgComplete": "",
    "svgWhite": "\u003c?xml version=\"1.0\" encoding=\"UTF-8\"?\u003e\u003c!DOCTYPE svg\u003e\u003csvg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\" id=\"Capa_2\" xmlns:_xmlns=\"xmlns\" _xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" viewBox=\"0 0 500 500\" style=\"enable-background:new 0 0 500 500;\" xml:space=\"preserve\" height=\"20\" width=\"20\"\u003e\n\u003cstyle xmlns=\"http://www.w3.org/2000/svg\" type=\"text/css\"\u003e\n        .st0{fill:#FFFFFF;}\n        .st1{opacity:0.8;fill:#FFFFFF;}\n        .st2{opacity:0.9;fill:#FFFFFF;}\n\u003c/style\u003e\n\u003cg xmlns=\"http://www.w3.org/2000/svg\"\u003e\n        \u003cpath xmlns=\"http://www.w3.org/2000/svg\" class=\"st0\" d=\"M5.2,273.7l110.7,126.8h268.2l110.7-126.8L384.1,146.9H115.9L5.2,273.7z\"\u003e\u003c/path\u003e\n        \u003cpath xmlns=\"http://www.w3.org/2000/svg\" class=\"st1\" d=\"M115.9,400.5h268.4v56.4H115.9V400.5z\"\u003e\u003c/path\u003e\n        \u003cpath xmlns=\"http://www.w3.org/2000/svg\" class=\"st2\" d=\"M115.9,456.8L5.2,330v-56.3l110.7,126.8L115.9,456.8z\"\u003e\u003c/path\u003e\n        \u003cpath xmlns=\"http://www.w3.org/2000/svg\" class=\"st2\" d=\"M384.1,456.8L494.8,330v-56.3L384.1,400.5V456.8z\"\u003e\u003c/path\u003e\n        \u003cpath xmlns=\"http://www.w3.org/2000/svg\" class=\"st0\" d=\"M465.7,253.4c0-47-96.6-85.2-215.7-85.2S34.4,206.3,34.4,253.4s96.5,85.2,215.6,85.2S465.7,300.4,465.7,253.4\u0026#xA;                L465.7,253.4z\"\u003e\u003c/path\u003e\n        \u003cpath xmlns=\"http://www.w3.org/2000/svg\" class=\"st1\" d=\"M465.7,253.4c0,47-96.6,85.2-215.7,85.2S34.4,300.4,34.4,253.4v46.9c14.9,41.3,106.5,85.2,215.6,85.2\u0026#xA;                s200.8-43.9,215.7-85.2V253.4z\"\u003e\u003c/path\u003e\n        \u003cpath xmlns=\"http://www.w3.org/2000/svg\" class=\"st0\" d=\"M16.3,178.6L250,314.1l233.8-135.5L250,43.2L16.3,178.6z\"\u003e\u003c/path\u003e\n        \u003cpath xmlns=\"http://www.w3.org/2000/svg\" class=\"st2\" d=\"M16.3,178.6v52.8L250,366.9v-52.8L16.3,178.6z\"\u003e\u003c/path\u003e\n        \u003cpath xmlns=\"http://www.w3.org/2000/svg\" class=\"st1\" d=\"M483.8,178.6L250,314.1v52.8l233.8-135.5V178.6z\"\u003e\u003c/path\u003e\n        \u003cpath xmlns=\"http://www.w3.org/2000/svg\" class=\"st0\" d=\"M68,212.4l364.1-53l-92.4-106L68,212.4z\"\u003e\u003c/path\u003e\n        \u003cpath xmlns=\"http://www.w3.org/2000/svg\" class=\"st1\" d=\"M68,212.4l364.1-53v47.8L68,260.1V212.4z\"\u003e\u003c/path\u003e\n\u003c/g\u003e\n\u003c/svg\u003e"
   },
   "model": {
    "version": "1.13.0-rc2"
   },
   "name": "stackgres-operator",
   "registrant": {
    "created_at": "0001-01-01T00:00:00Z",
    "credential_id": "00000000-0000-0000-0000-000000000000",
    "deleted_at": "0001-01-01T00:00:00Z",
    "id": "00000000-0000-0000-0000-000000000000",
    "kind": "artifacthub",
    "name": "Artifact Hub",
    "status": "discovered",
    "sub_type": "",
    "type": "registry",
    "updated_at": "0001-01-01T00:00:00Z",
    "user_id": "00000000-0000-0000-0000-000000000000"
   },
   "connection_id": "00000000-0000-0000-0000-000000000000",
   "schemaVersion": "models.meshery.io/v1beta1",
   "status": "enabled",
   "subCategory": "Database",
   "version": "v1.0.0",
   "components": null,
   "relationships": null
  },
  "schemaVersion": "components.meshery.io/v1beta1",
  "status": "enabled",
  "styles": {
   "primaryColor": "#426d88",
   "secondaryColor": "#00D3A9",
   "shape": "circle",
   "svgColor": "\u003csvg id=\"Capa_2\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 500 500\"\u003e\u003cstyle\u003e.st0{fill:#42a8c8}.st1{fill:#426d88}.st2{fill:#428bb4}.st3{fill:#16657c}.st4{fill:#39b54a}.st5{fill:#009245}.st6{fill:#f2c63f}.st7{fill:#f2b136}.st8{fill:#f2a130}.st9{fill:#ff7124}.st10{fill:#d93d1b}\u003c/style\u003e\u003cswitch\u003e\u003cg\u003e\u003cpath class=\"st0\" d=\"M5.2 273.7l110.7 126.8h268.2l110.7-126.8-110.7-126.8H115.9z\"\u003e\u003c/path\u003e\u003cpath class=\"st1\" d=\"M115.9 400.5h268.4v56.4H115.9z\"\u003e\u003c/path\u003e\u003cpath class=\"st2\" d=\"M115.9 456.8L5.2 330v-56.3l110.7 126.8z\"\u003e\u003c/path\u003e\u003cpath class=\"st3\" d=\"M384.1 456.8L494.8 330v-56.3L384.1 400.5z\"\u003e\u003c/path\u003e\u003cpath class=\"st4\" d=\"M465.7 253.4c0-47-96.6-85.2-215.7-85.2S34.4 206.3 34.4 253.4s96.5 85.2 215.6 85.2 215.7-38.2 215.7-85.2z\"\u003e\u003c/path\u003e\u003cpath class=\"st5\" d=\"M465.7 253.4c0 47-96.6 85.2-215.7 85.2S34.4 300.4 34.4 253.4v46.9c14.9 41.3 106.5 85.2 215.6 85.2s200.8-43.9 215.7-85.2v-46.9z\"\u003e\u003c/path\u003e\u003cpath class=\"st6\" d=\"M16.3 178.6L250 314.1l233.8-135.5L250 43.2z\"\u003e\u003c/path\u003e\u003cpath class=\"st7\" d=\"M16.3 178.6v52.8L250 366.9v-52.8z\"\u003e\u003c/path\u003e\u003cpath class=\"st8\" d=\"M483.8 178.6L250 314.1v52.8l233.8-135.5z\"\u003e\u003c/path\u003e\u003cpath class=\"st9\" d=\"M68 212.4l364.1-53-92.4-106z\"\u003e\u003c/path\u003e\u003cpath class=\"st10\" d=\"M68 212.4l364.1-53v47.8L68 260.1z\"\u003e\u003c/path\u003e\u003c/g\u003e\u003c/switch\u003e\u003c/svg\u003e",
   "svgWhite": "\u003csvg version=\"1.1\" id=\"Capa_2\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\"\n         viewBox=\"0 0 500 500\" style=\"enable-background:new 0 0 500 500;\" xml:space=\"preserve\" width='500' height='500'\u003e\n\u003cstyle type=\"text/css\"\u003e\n        .st0{fill:#FFFFFF;}\n        .st1{opacity:0.8;fill:#FFFFFF;}\n        .st2{opacity:0.9;fill:#FFFFFF;}\n\u003c/style\u003e\n\u003cg\u003e\n        \u003cpath class=\"st0\" d=\"M5.2,273.7l110.7,126.8h268.2l110.7-126.8L384.1,146.9H115.9L5.2,273.7z\"/\u003e\n        \u003cpath class=\"st1\" d=\"M115.9,400.5h268.4v56.4H115.9V400.5z\"/\u003e\n        \u003cpath class=\"st2\" d=\"M115.9,456.8L5.2,330v-56.3l110.7,126.8L115.9,456.8z\"/\u003e\n        \u003cpath class=\"st2\" d=\"M384.1,456.8L494.8,330v-56.3L384.1,400.5V456.8z\"/\u003e\n        \u003cpath class=\"st0\" d=\"M465.7,253.4c0-47-96.6-85.2-215.7-85.2S34.4,206.3,34.4,253.4s96.5,85.2,215.6,85.2S465.7,300.4,465.7,253.4\n                L465.7,253.4z\"/\u003e\n        \u003cpath class=\"st1\" d=\"M465.7,253.4c0,47-96.6,85.2-215.7,85.2S34.4,300.4,34.4,253.4v46.9c14.9,41.3,106.5,85.2,215.6,85.2\n                s200.8-43.9,215.7-85.2V253.4z\"/\u003e\n        \u003cpath class=\"st0\" d=\"M16.3,178.6L250,314.1l233.8-135.5L250,43.2L16.3,178.6z\"/\u003e\n        \u003cpath class=\"st2\" d=\"M16.3,178.6v52.8L250,366.9v-52.8L16.3,178.6z\"/\u003e\n        \u003cpath class=\"st1\" d=\"M483.8,178.6L250,314.1v52.8l233.8-135.5V178.6z\"/\u003e\n        \u003cpath class=\"st0\" d=\"M68,212.4l364.1-53l-92.4-106L68,212.4z\"/\u003e\n        \u003cpath class=\"st1\" d=\"M68,212.4l364.1-53v47.8L68,260.1V212.4z\"/\u003e\n\u003c/g\u003e\n\u003c/svg\u003e"
  },
  "version": "v1.0.0"
 }