{
  "id": "00000000-0000-0000-0000-000000000000",
  "schemaVersion": "components.meshery.io/v1beta1",
  "version": "v1.0.0",
  "displayName": "LB Node Agent",
  "description": "",
  "format": "JSON",
  "model": {
    "id": "00000000-0000-0000-0000-000000000000",
    "schemaVersion": "models.meshery.io/v1beta1",
    "version": "v1.0.0",
    "name": "purelb",
    "displayName": "Purelb",
    "status": "ignored",
    "registrant": {
      "id": "00000000-0000-0000-0000-000000000000",
      "name": "Artifact Hub",
      "credential_id": "00000000-0000-0000-0000-000000000000",
      "type": "registry",
      "sub_type": "",
      "kind": "artifacthub",
      "status": "discovered",
      "user_id": "00000000-0000-0000-0000-000000000000",
      "created_at": "0001-01-01T00:00:00Z",
      "updated_at": "0001-01-01T00:00:00Z",
      "deleted_at": "0001-01-01T00:00:00Z"
    },
    "connection_id": "00000000-0000-0000-0000-000000000000",
    "category": {
      "id": "00000000-0000-0000-0000-000000000000",
      "name": "Uncategorized"
    },
    "subCategory": "Uncategorized",
    "metadata": {
      "isAnnotation": false,
      "primaryColor": "#00B39F",
      "secondaryColor": "#00D3A9",
      "shape": "circle",
      "source_uri": "https://gitlab.com/api/v4/projects/20400619/packages/helm/stable/charts/purelb-v0.12.0.tgz",
      "styleOverrides": "",
      "svgColor": "",
      "svgComplete": "",
      "svgWhite": ""
    },
    "model": {
      "version": "0.12.0"
    },
    "components_count": 0,
    "relationships_count": 0,
    "components": null,
    "relationships": null
  },
  "styles": {
    "primaryColor": "#00B39F",
    "secondaryColor": "#00D3A9",
    "shape": "circle",
    "svgColor": "",
    "svgComplete": "",
    "svgWhite": ""
  },
  "capabilities": [
    {
      "description": "Initiate a performance test. Meshery will execute the load generation, collect metrics, and present the results.",
      "displayName": "Performance Test",
      "entityState": [
        "instance"
      ],
      "key": "",
      "kind": "action",
      "schemaVersion": "capability.meshery.io/v1alpha1",
      "status": "enabled",
      "subType": "perf-test",
      "type": "operator",
      "version": "0.7.0"
    },
    {
      "description": "Configure the workload specific setting of a component",
      "displayName": "Workload Configuration",
      "entityState": [
        "declaration"
      ],
      "key": "",
      "kind": "mutate",
      "schemaVersion": "capability.meshery.io/v1alpha1",
      "status": "enabled",
      "subType": "config",
      "type": "configuration",
      "version": "0.7.0"
    },
    {
      "description": "Configure Labels And Annotations for  the component ",
      "displayName": "Labels and Annotations Configuration",
      "entityState": [
        "declaration"
      ],
      "key": "",
      "kind": "mutate",
      "schemaVersion": "capability.meshery.io/v1alpha1",
      "status": "enabled",
      "subType": "labels-and-annotations",
      "type": "configuration",
      "version": "0.7.0"
    },
    {
      "description": "View relationships for the component",
      "displayName": "Relationships",
      "entityState": [
        "declaration",
        "instance"
      ],
      "key": "",
      "kind": "view",
      "schemaVersion": "capability.meshery.io/v1alpha1",
      "status": "enabled",
      "subType": "relationship",
      "type": "configuration",
      "version": "0.7.0"
    },
    {
      "description": "View Component Definition ",
      "displayName": "Json Schema",
      "entityState": [
        "declaration",
        "instance"
      ],
      "key": "",
      "kind": "view",
      "schemaVersion": "capability.meshery.io/v1alpha1",
      "status": "enabled",
      "subType": "definition",
      "type": "configuration",
      "version": "0.7.0"
    },
    {
      "description": "Configure the visual styles for the component",
      "displayName": "Styling",
      "entityState": [
        "declaration"
      ],
      "key": "",
      "kind": "mutate",
      "schemaVersion": "capability.meshery.io/v1alpha1",
      "status": "enabled",
      "subType": "",
      "type": "style",
      "version": "0.7.0"
    },
    {
      "description": "Change the shape of the component",
      "displayName": "Change Shape",
      "entityState": [
        "declaration"
      ],
      "key": "",
      "kind": "mutate",
      "schemaVersion": "capability.meshery.io/v1alpha1",
      "status": "enabled",
      "subType": "shape",
      "type": "style",
      "version": "0.7.0"
    },
    {
      "description": "Drag and Drop a component into a parent component in graph view",
      "displayName": "Compound Drag And Drop",
      "entityState": [
        "declaration"
      ],
      "key": "",
      "kind": "interaction",
      "schemaVersion": "capability.meshery.io/v1alpha1",
      "status": "enabled",
      "subType": "compoundDnd",
      "type": "graph",
      "version": "0.7.0"
    }
  ],
  "status": "enabled",
  "metadata": {
    "configurationUISchema": "",
    "genealogy": "",
    "instanceDetails": null,
    "isAnnotation": false,
    "isNamespaced": true,
    "published": false,
    "source_uri": "https://gitlab.com/api/v4/projects/20400619/packages/helm/stable/charts/purelb-v0.12.0.tgz"
  },
  "configuration": null,
  "component": {
    "version": "purelb.io/v1",
    "kind": "LBNodeAgent",
    "schema": "{\n \"description\": \"LBNodeAgent is the top-level custom resource for configuring node\\nagents. It contains the usual CRD metadata, and the agent spec and\\nstatus.\",\n \"properties\": {\n  \"spec\": {\n   \"description\": \"LBNodeAgentSpec configures the node agents.  It will have one Local\\nconfiguration to announce service addresses locally. For examples,\\nsee the \\\"config/\\\" directory in the PureLB source tree.\",\n   \"properties\": {\n    \"local\": {\n     \"description\": \"LBNodeAgentLocalSpec configures the announcers to announce service\\naddresses by configuring the underlying operating\\nsystem. LocalInterface is unimplemented but will be optional. If it\\nis not provided then the agents will add the service address to\\nwhichever interface carries the default route. ExtLBInterface is\\nalso unimplemented.\",\n     \"properties\": {\n      \"extlbint\": {\n       \"default\": \"kube-lb0\",\n       \"description\": \"ExtLBInterface specifies the name of the interface to use for\\nannouncement of non-local routes. This field is optional but the\\ndefault is \\\"kube-lb0\\\" which works in most cases.\",\n       \"type\": \"string\"\n      },\n      \"localint\": {\n       \"default\": \"default\",\n       \"description\": \"LocalInterface allows the user to specify the interface to use\\nfor announcement of local addresses. This field is optional but\\nthe default is \\\"default\\\" which will make PureLB use the interface\\nthat has the default route, which works in most cases.\",\n       \"type\": \"string\"\n      },\n      \"sendgarp\": {\n       \"default\": false,\n       \"description\": \"SendGratuitousARP determines whether or not the node agent should\\nsend Gratuitous ARP messages when it adds an IP address to the\\nlocal interface. This can be used to alert network equipment that\\nthe IP-to-MAC binding has changed.\",\n       \"type\": \"boolean\"\n      }\n     },\n     \"required\": [\n      \"sendgarp\"\n     ],\n     \"type\": \"object\"\n    }\n   },\n   \"required\": [\n    \"local\"\n   ],\n   \"type\": \"object\"\n  }\n },\n \"required\": [\n  \"spec\"\n ],\n \"title\": \"LB Node Agent\",\n \"type\": \"object\"\n}"
  }
}