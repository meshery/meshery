{
  "capabilities": [
   {
    "description": "Initiate a performance test. Meshery will execute the load generation, collect metrics, and present the results.",
    "displayName": "Performance Test",
    "entityState": [
     "instance"
    ],
    "key": "",
    "kind": "action",
    "metadata": null,
    "schemaVersion": "capability.meshery.io/v1alpha1",
    "status": "enabled",
    "subType": "perf-test",
    "type": "operator",
    "version": "0.7.0"
   },
   {
    "description": "Configure the workload specific setting of a component",
    "displayName": "Workload Configuration",
    "entityState": [
     "declaration"
    ],
    "key": "",
    "kind": "mutate",
    "metadata": null,
    "schemaVersion": "capability.meshery.io/v1alpha1",
    "status": "enabled",
    "subType": "config",
    "type": "configuration",
    "version": "0.7.0"
   },
   {
    "description": "Configure Labels And Annotations for  the component ",
    "displayName": "Labels and Annotations Configuration",
    "entityState": [
     "declaration"
    ],
    "key": "",
    "kind": "mutate",
    "metadata": null,
    "schemaVersion": "capability.meshery.io/v1alpha1",
    "status": "enabled",
    "subType": "labels-and-annotations",
    "type": "configuration",
    "version": "0.7.0"
   },
   {
    "description": "View relationships for the component",
    "displayName": "Relationships",
    "entityState": [
     "declaration",
     "instance"
    ],
    "key": "",
    "kind": "view",
    "metadata": null,
    "schemaVersion": "capability.meshery.io/v1alpha1",
    "status": "enabled",
    "subType": "relationship",
    "type": "configuration",
    "version": "0.7.0"
   },
   {
    "description": "View Component Definition ",
    "displayName": "Json Schema",
    "entityState": [
     "declaration",
     "instance"
    ],
    "key": "",
    "kind": "view",
    "metadata": null,
    "schemaVersion": "capability.meshery.io/v1alpha1",
    "status": "enabled",
    "subType": "definition",
    "type": "configuration",
    "version": "0.7.0"
   },
   {
    "description": "Configure the visual styles for the component",
    "displayName": "Styling",
    "entityState": [
     "declaration"
    ],
    "key": "",
    "kind": "mutate",
    "metadata": null,
    "schemaVersion": "capability.meshery.io/v1alpha1",
    "status": "enabled",
    "subType": "",
    "type": "style",
    "version": "0.7.0"
   },
   {
    "description": "Change the shape of the component",
    "displayName": "Change Shape",
    "entityState": [
     "declaration"
    ],
    "key": "",
    "kind": "mutate",
    "metadata": null,
    "schemaVersion": "capability.meshery.io/v1alpha1",
    "status": "enabled",
    "subType": "shape",
    "type": "style",
    "version": "0.7.0"
   },
   {
    "description": "Drag and Drop a component into a parent component in graph view",
    "displayName": "Compound Drag And Drop",
    "entityState": [
     "declaration"
    ],
    "key": "",
    "kind": "interaction",
    "metadata": null,
    "schemaVersion": "capability.meshery.io/v1alpha1",
    "status": "enabled",
    "subType": "compoundDnd",
    "type": "graph",
    "version": "0.7.0"
   }
  ],
  "component": {
   "kind": "EventLogger",
   "schema": "{\n \"description\": \"EventLogger is the Schema for the eventloggers API\",\n \"properties\": {\n  \"spec\": {\n   \"description\": \"EventLoggerSpec defines the desired state of EventLogger\",\n   \"properties\": {\n    \"annotations\": {\n     \"additionalProperties\": {\n      \"type\": \"string\"\n     },\n     \"description\": \"Labels additional annotations for the logger pod\",\n     \"type\": \"object\"\n    },\n    \"eventTypes\": {\n     \"description\": \"EventTypes the event types to log. If empty all events are logged.\",\n     \"items\": {\n      \"type\": \"string\"\n     },\n     \"minItems\": 0,\n     \"type\": \"array\"\n    },\n    \"imagePullSecrets\": {\n     \"description\": \"ImagePullSecrets is an optional list of references to secrets in the same namespace to use for pulling any of the images used by this EventLoggerSpec.\\nIf specified, these secrets will be passed to individual puller implementations for them to use.\",\n     \"items\": {\n      \"description\": \"LocalObjectReference contains enough information to let you locate the\\nreferenced object inside the same namespace.\",\n      \"properties\": {\n       \"name\": {\n        \"default\": \"\",\n        \"description\": \"Name of the referent.\",\n        \"type\": \"string\"\n       }\n      },\n      \"type\": \"object\",\n      \"x-kubernetes-map-type\": \"atomic\"\n     },\n     \"type\": \"array\"\n    },\n    \"kinds\": {\n     \"description\": \"Kinds the kinds to log the events for\",\n     \"items\": {\n      \"description\": \"Kind defines a kind to log events for\",\n      \"properties\": {\n       \"apiGroup\": {\n        \"nullable\": true,\n        \"type\": \"string\"\n       },\n       \"eventTypes\": {\n        \"description\": \"EventTypes the event types to log. If empty events are logged as defined in spec.\",\n        \"items\": {\n         \"type\": \"string\"\n        },\n        \"minItems\": 0,\n        \"type\": \"array\"\n       },\n       \"matchingPatterns\": {\n        \"description\": \"MatchingPatterns optional regex pattern that must be contained in the message to be logged\",\n        \"items\": {\n         \"type\": \"string\"\n        },\n        \"minItems\": 0,\n        \"type\": \"array\"\n       },\n       \"name\": {\n        \"minLength\": 3,\n        \"type\": \"string\"\n       },\n       \"reasons\": {\n        \"description\": \"Reasons the event reasons to log. If empty events with any reasons are logged.\",\n        \"items\": {\n         \"type\": \"string\"\n        },\n        \"minItems\": 0,\n        \"type\": \"array\"\n       },\n       \"skipOnMatch\": {\n        \"description\": \"SkipOnMatch skip the entry if matched\",\n        \"type\": \"boolean\"\n       },\n       \"skipReasons\": {\n        \"description\": \"SkipReasons event reasons to log to skip. If empty events with any reasons are logged.\",\n        \"items\": {\n         \"type\": \"string\"\n        },\n        \"minItems\": 0,\n        \"type\": \"array\"\n       }\n      },\n      \"required\": [\n       \"name\"\n      ],\n      \"type\": \"object\"\n     },\n     \"minItems\": 1,\n     \"type\": \"array\"\n    },\n    \"labels\": {\n     \"additionalProperties\": {\n      \"type\": \"string\"\n     },\n     \"description\": \"Labels additional labels for the logger pod\",\n     \"type\": \"object\"\n    },\n    \"logFields\": {\n     \"description\": \"LogFields fields ot the event to be logged.\",\n     \"items\": {\n      \"description\": \"LogField defines a log field\",\n      \"properties\": {\n       \"name\": {\n        \"description\": \"name of the log field\",\n        \"type\": \"string\"\n       },\n       \"path\": {\n        \"description\": \"Path within the corev1.Event struct https://github.com/kubernetes/api/blob/master/core/v1/types.go\",\n        \"items\": {\n         \"type\": \"string\"\n        },\n        \"minItems\": 1,\n        \"type\": \"array\"\n       },\n       \"value\": {\n        \"description\": \"Value a static value of the log field. Can be uses to add static log fields\",\n        \"nullable\": true,\n        \"type\": \"string\"\n       }\n      },\n      \"required\": [\n       \"name\"\n      ],\n      \"type\": \"object\"\n     },\n     \"type\": \"array\"\n    },\n    \"namespace\": {\n     \"description\": \"namespace the namespace to watch on, may be an empty string\",\n     \"nullable\": true,\n     \"type\": \"string\"\n    },\n    \"nodeSelector\": {\n     \"additionalProperties\": {\n      \"type\": \"string\"\n     },\n     \"description\": \"NodeSelector is a selector which must be true for the pod to fit on a node.\\nSelector which must match a node's labels for the pod to be scheduled on that node.\\nMore info: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/\",\n     \"type\": \"object\"\n    },\n    \"scrapeMetrics\": {\n     \"description\": \"ScrapeMetrics if true, prometheus scrape annotations are added to the pod\",\n     \"type\": \"boolean\"\n    },\n    \"serviceAccount\": {\n     \"description\": \"ServiceAccount the service account to use for the logger pod\",\n     \"type\": \"string\"\n    }\n   },\n   \"type\": \"object\"\n  }\n },\n \"title\": \"Event Logger\",\n \"type\": \"object\"\n}",
   "version": "eventlogger.bakito.ch/v1"
  },
  "configuration": null,
  "description": "",
  "displayName": "Event Logger",
  "format": "JSON",
  "id": "00000000-0000-0000-0000-000000000000",
  "metadata": {
   "genealogy": "",
   "isAnnotation": false,
   "isNamespaced": true,
   "published": false
  },
  "model": {
   "category": {
    "name": "Uncategorized"
   },
   "displayName": "K8s Event Logger Operator",
   "id": "00000000-0000-0000-0000-000000000000",
   "metadata": {
    "defaultData": "",
    "isAnnotation": false,
    "primaryColor": "#00B39F",
    "secondaryColor": "#00D3A9",
    "shape": "circle",
    "shapePolygonPoints": "",
    "styleOverrides": "",
    "styles": "",
    "svgColor": "",
    "svgComplete": "",
    "svgWhite": ""
   },
   "model": {
    "version": "1.13.11"
   },
   "name": "k8s-event-logger-operator",
   "registrant": {
    "created_at": "0001-01-01T00:00:00Z",
    "credential_id": "00000000-0000-0000-0000-000000000000",
    "deleted_at": "0001-01-01T00:00:00Z",
    "id": "00000000-0000-0000-0000-000000000000",
    "kind": "artifacthub",
    "name": "Artifact Hub",
    "status": "discovered",
    "sub_type": "",
    "type": "registry",
    "updated_at": "0001-01-01T00:00:00Z",
    "user_id": "00000000-0000-0000-0000-000000000000"
   },
   "connection_id": "00000000-0000-0000-0000-000000000000",
   "schemaVersion": "models.meshery.io/v1beta1",
   "status": "ignored",
   "subCategory": "Uncategorized",
   "version": "v1.0.0",
   "components": null,
   "relationships": null
  },
  "schemaVersion": "components.meshery.io/v1beta1",
  "status": "ignored",
  "styles": {
   "primaryColor": "#00B39F",
   "secondaryColor": "#00D3A9",
   "shape": "circle",
   "svgColor": "",
   "svgWhite": ""
  },
  "version": "v1.0.0"
 }