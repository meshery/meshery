{"kind":"EventLogger","apiVersion":"eventlogger.bakito.ch/v1","displayName":"Event Logger","format":"JSON","hostname":"","hostID":"00000000-0000-0000-0000-000000000000","displayhostname":"","metadata":{"capabilities":"","genealogy":"","isAnnotation":false,"isModelAnnotation":"FALSE","isNamespaced":true,"logoURL":"","model":"k8s-event-logger-operator","modelDisplayName":"K8s Event Logger Operator","primaryColor":"#00B39F","published":false,"secondaryColor":"#00D3A9","shape":"circle","styleOverrides":"","subCategory":"Uncategorized","svgColor":"","svgComplete":"","svgWhite":""},"model":{"name":"k8s-event-logger-operator","version":"1.13.4","displayName":"K8s Event Logger Operator","hostname":"","hostID":"00000000-0000-0000-0000-000000000000","displayhostname":"","category":{"name":"Uncategorized","metadata":null},"metadata":{"source_uri":"https://github.com/bakito/helm-charts/releases/download/k8s-event-logger-operator-1.13.7-rc1/k8s-event-logger-operator-1.13.7-rc1.tgz"},"components":null,"relationships":null},"schema":"{\n \"description\": \"EventLogger is the Schema for the eventloggers API\",\n \"properties\": {\n  \"spec\": {\n   \"description\": \"EventLoggerSpec defines the desired state of EventLogger\",\n   \"properties\": {\n    \"annotations\": {\n     \"additionalProperties\": {\n      \"type\": \"string\"\n     },\n     \"description\": \"Labels additional annotations for the logger pod\",\n     \"type\": \"object\"\n    },\n    \"eventTypes\": {\n     \"description\": \"EventTypes the event types to log. If empty all events are logged.\",\n     \"items\": {\n      \"type\": \"string\"\n     },\n     \"minItems\": 0,\n     \"type\": \"array\"\n    },\n    \"kinds\": {\n     \"description\": \"Kinds the kinds to log the events for\",\n     \"items\": {\n      \"description\": \"Kind defines a kind to log events for\",\n      \"properties\": {\n       \"apiGroup\": {\n        \"nullable\": true,\n        \"type\": \"string\"\n       },\n       \"eventTypes\": {\n        \"description\": \"EventTypes the event types to log. If empty events are logged as defined in spec.\",\n        \"items\": {\n         \"type\": \"string\"\n        },\n        \"minItems\": 0,\n        \"type\": \"array\"\n       },\n       \"matchingPatterns\": {\n        \"description\": \"MatchingPatterns optional regex pattern that must be contained in the message to be logged\",\n        \"items\": {\n         \"type\": \"string\"\n        },\n        \"minItems\": 0,\n        \"type\": \"array\"\n       },\n       \"name\": {\n        \"minLength\": 3,\n        \"type\": \"string\"\n       },\n       \"reasons\": {\n        \"description\": \"Reasons the event reasons to log. If empty events with any reasons are logged.\",\n        \"items\": {\n         \"type\": \"string\"\n        },\n        \"minItems\": 0,\n        \"type\": \"array\"\n       },\n       \"skipOnMatch\": {\n        \"description\": \"SkipOnMatch skip the entry if matched\",\n        \"type\": \"boolean\"\n       },\n       \"skipReasons\": {\n        \"description\": \"SkipReasons event reasons to log to skip. If empty events with any reasons are logged.\",\n        \"items\": {\n         \"type\": \"string\"\n        },\n        \"minItems\": 0,\n        \"type\": \"array\"\n       }\n      },\n      \"required\": [\n       \"name\"\n      ],\n      \"type\": \"object\"\n     },\n     \"minItems\": 1,\n     \"type\": \"array\"\n    },\n    \"labels\": {\n     \"additionalProperties\": {\n      \"type\": \"string\"\n     },\n     \"description\": \"Labels additional labels for the logger pod\",\n     \"type\": \"object\"\n    },\n    \"logFields\": {\n     \"description\": \"LogFields fields ot the event to be logged.\",\n     \"items\": {\n      \"description\": \"LogField defines a log field\",\n      \"properties\": {\n       \"name\": {\n        \"description\": \"name of the log field\",\n        \"type\": \"string\"\n       },\n       \"path\": {\n        \"description\": \"Path within the corev1.Event struct https://github.com/kubernetes/api/blob/master/core/v1/types.go\",\n        \"items\": {\n         \"type\": \"string\"\n        },\n        \"minItems\": 1,\n        \"type\": \"array\"\n       },\n       \"value\": {\n        \"description\": \"Value a static value of the log field. Can be uses to add static log fields\",\n        \"nullable\": true,\n        \"type\": \"string\"\n       }\n      },\n      \"required\": [\n       \"name\"\n      ],\n      \"type\": \"object\"\n     },\n     \"type\": \"array\"\n    },\n    \"namespace\": {\n     \"description\": \"namespace the namespace to watch on, may be an empty string\",\n     \"nullable\": true,\n     \"type\": \"string\"\n    },\n    \"nodeSelector\": {\n     \"additionalProperties\": {\n      \"type\": \"string\"\n     },\n     \"description\": \"NodeSelector is a selector which must be true for the pod to fit on a node. Selector which must match a node's labels for the pod to be scheduled on that node. More info: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/\",\n     \"type\": \"object\"\n    },\n    \"scrapeMetrics\": {\n     \"description\": \"ScrapeMetrics if true, prometheus scrape annotations are added to the pod\",\n     \"type\": \"boolean\"\n    },\n    \"serviceAccount\": {\n     \"description\": \"ServiceAccount the service account to use for the logger pod\",\n     \"type\": \"string\"\n    }\n   },\n   \"type\": \"object\"\n  }\n },\n \"title\": \"Event Logger\",\n \"type\": \"object\"\n}"}