{
  "id": "00000000-0000-0000-0000-000000000000",
  "schemaVersion": "components.meshery.io/v1beta1",
  "version": "v1.0.0",
  "displayName": "Pod Logs",
  "description": "",
  "format": "JSON",
  "model": {
    "id": "00000000-0000-0000-0000-000000000000",
    "schemaVersion": "models.meshery.io/v1beta1",
    "version": "v1.0.0",
    "name": "verticadb-operator",
    "displayName": "Verticadb Operator",
    "status": "ignored",
    "registrant": {
      "id": "00000000-0000-0000-0000-000000000000",
      "name": "Artifact Hub",
      "type": "registry",
      "sub_type": "",
      "kind": "artifacthub",
      "status": "discovered",
      "created_at": "0001-01-01T00:00:00Z",
      "updated_at": "0001-01-01T00:00:00Z",
      "deleted_at": null,
      "schemaVersion": ""
    },
    "connection_id": "00000000-0000-0000-0000-000000000000",
    "category": {
      "id": "00000000-0000-0000-0000-000000000000",
      "name": "App Definition and Development"
    },
    "subCategory": "Database",
    "metadata": {
      "isAnnotation": false,
      "primaryColor": "#00B39F",
      "secondaryColor": "#00D3A9",
      "shape": "circle",
      "source_uri": "https://github.com/vertica/vertica-kubernetes/releases/download/v25.4.0-0/verticadb-operator-25.4.0-0.tgz",
      "styleOverrides": "",
      "svgColor": "",
      "svgComplete": "",
      "svgWhite": ""
    },
    "model": {
      "version": "25.4.0"
    },
    "components_count": 0,
    "relationships_count": 0,
    "components": null,
    "relationships": null
  },
  "styles": {
    "primaryColor": "#00B39F",
    "secondaryColor": "#00D3A9",
    "shape": "circle",
    "svgColor": "",
    "svgComplete": "",
    "svgWhite": ""
  },
  "capabilities": [
    {
      "description": "Configure the visual styles for the component",
      "displayName": "Styling",
      "entityState": [
        "declaration"
      ],
      "key": "",
      "kind": "mutate",
      "schemaVersion": "capability.meshery.io/v1alpha1",
      "status": "enabled",
      "subType": "",
      "type": "style",
      "version": "0.7.0"
    },
    {
      "description": "Change the shape of the component",
      "displayName": "Change Shape",
      "entityState": [
        "declaration"
      ],
      "key": "",
      "kind": "mutate",
      "schemaVersion": "capability.meshery.io/v1alpha1",
      "status": "enabled",
      "subType": "shape",
      "type": "style",
      "version": "0.7.0"
    },
    {
      "description": "Drag and Drop a component into a parent component in graph view",
      "displayName": "Compound Drag And Drop",
      "entityState": [
        "declaration"
      ],
      "key": "",
      "kind": "interaction",
      "schemaVersion": "capability.meshery.io/v1alpha1",
      "status": "enabled",
      "subType": "compoundDnd",
      "type": "graph",
      "version": "0.7.0"
    }
  ],
  "status": "enabled",
  "metadata": {
    "configurationUISchema": "",
    "genealogy": "",
    "instanceDetails": null,
    "isAnnotation": false,
    "isNamespaced": true,
    "published": false,
    "source_uri": "https://github.com/vertica/vertica-kubernetes/releases/download/v25.4.0-0/verticadb-operator-25.4.0-0.tgz"
  },
  "configuration": null,
  "component": {
    "version": "monitoring.grafana.com/v1alpha2",
    "kind": "PodLogs",
    "schema": "{\n \"description\": \"PodLogs defines how to collect logs for a Pod.\",\n \"properties\": {\n  \"spec\": {\n   \"description\": \"PodLogsSpec defines how to collect logs for a Pod.\",\n   \"properties\": {\n    \"namespaceSelector\": {\n     \"description\": \"Selector to select which namespaces the Pod objects are discovered from.\",\n     \"properties\": {\n      \"matchExpressions\": {\n       \"description\": \"matchExpressions is a list of label selector requirements. The requirements are ANDed.\",\n       \"items\": {\n        \"description\": \"A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.\",\n        \"properties\": {\n         \"key\": {\n          \"description\": \"key is the label key that the selector applies to.\",\n          \"type\": \"string\"\n         },\n         \"operator\": {\n          \"description\": \"operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.\",\n          \"type\": \"string\"\n         },\n         \"values\": {\n          \"description\": \"values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.\",\n          \"items\": {\n           \"type\": \"string\"\n          },\n          \"type\": \"array\"\n         }\n        },\n        \"required\": [\n         \"key\",\n         \"operator\"\n        ],\n        \"type\": \"object\"\n       },\n       \"type\": \"array\"\n      },\n      \"matchLabels\": {\n       \"additionalProperties\": {\n        \"type\": \"string\"\n       },\n       \"description\": \"matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \\\"key\\\", the operator is \\\"In\\\", and the values array contains only \\\"value\\\". The requirements are ANDed.\",\n       \"type\": \"object\"\n      }\n     },\n     \"type\": \"object\",\n     \"x-kubernetes-map-type\": \"atomic\"\n    },\n    \"relabelings\": {\n     \"description\": \"RelabelConfigs to apply to logs before delivering.\",\n     \"items\": {\n      \"description\": \"RelabelConfig allows dynamic rewriting of the label set, being applied to samples before ingestion. It defines `\\u003cmetric_relabel_configs\\u003e`-section of Prometheus configuration. More info: https://prometheus.io/docs/prometheus/latest/configuration/configuration/#metric_relabel_configs\",\n      \"properties\": {\n       \"action\": {\n        \"default\": \"replace\",\n        \"description\": \"Action to perform based on regex matching. Default is 'replace'. uppercase and lowercase actions require Prometheus \\u003e= 2.36.\",\n        \"enum\": [\n         \"replace\",\n         \"Replace\",\n         \"keep\",\n         \"Keep\",\n         \"drop\",\n         \"Drop\",\n         \"hashmod\",\n         \"HashMod\",\n         \"labelmap\",\n         \"LabelMap\",\n         \"labeldrop\",\n         \"LabelDrop\",\n         \"labelkeep\",\n         \"LabelKeep\",\n         \"lowercase\",\n         \"Lowercase\",\n         \"uppercase\",\n         \"Uppercase\"\n        ],\n        \"type\": \"string\"\n       },\n       \"modulus\": {\n        \"description\": \"Modulus to take of the hash of the source label values.\",\n        \"format\": \"int64\",\n        \"type\": \"integer\"\n       },\n       \"regex\": {\n        \"description\": \"Regular expression against which the extracted value is matched. Default is '(.*)'\",\n        \"type\": \"string\"\n       },\n       \"replacement\": {\n        \"description\": \"Replacement value against which a regex replace is performed if the regular expression matches. Regex capture groups are available. Default is '$1'\",\n        \"type\": \"string\"\n       },\n       \"separator\": {\n        \"description\": \"Separator placed between concatenated source label values. default is ';'.\",\n        \"type\": \"string\"\n       },\n       \"sourceLabels\": {\n        \"description\": \"The source labels select values from existing labels. Their content is concatenated using the configured separator and matched against the configured regular expression for the replace, keep, and drop actions.\",\n        \"items\": {\n         \"description\": \"LabelName is a valid Prometheus label name which may only contain ASCII letters, numbers, as well as underscores.\",\n         \"pattern\": \"^[a-zA-Z_][a-zA-Z0-9_]*$\",\n         \"type\": \"string\"\n        },\n        \"type\": \"array\"\n       },\n       \"targetLabel\": {\n        \"description\": \"Label to which the resulting value is written in a replace action. It is mandatory for replace actions. Regex capture groups are available.\",\n        \"type\": \"string\"\n       }\n      },\n      \"type\": \"object\"\n     },\n     \"type\": \"array\"\n    },\n    \"selector\": {\n     \"description\": \"Selector to select Pod objects. Required.\",\n     \"properties\": {\n      \"matchExpressions\": {\n       \"description\": \"matchExpressions is a list of label selector requirements. The requirements are ANDed.\",\n       \"items\": {\n        \"description\": \"A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.\",\n        \"properties\": {\n         \"key\": {\n          \"description\": \"key is the label key that the selector applies to.\",\n          \"type\": \"string\"\n         },\n         \"operator\": {\n          \"description\": \"operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.\",\n          \"type\": \"string\"\n         },\n         \"values\": {\n          \"description\": \"values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.\",\n          \"items\": {\n           \"type\": \"string\"\n          },\n          \"type\": \"array\"\n         }\n        },\n        \"required\": [\n         \"key\",\n         \"operator\"\n        ],\n        \"type\": \"object\"\n       },\n       \"type\": \"array\"\n      },\n      \"matchLabels\": {\n       \"additionalProperties\": {\n        \"type\": \"string\"\n       },\n       \"description\": \"matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \\\"key\\\", the operator is \\\"In\\\", and the values array contains only \\\"value\\\". The requirements are ANDed.\",\n       \"type\": \"object\"\n      }\n     },\n     \"type\": \"object\",\n     \"x-kubernetes-map-type\": \"atomic\"\n    }\n   },\n   \"required\": [\n    \"selector\"\n   ],\n   \"type\": \"object\"\n  }\n },\n \"title\": \"Pod Logs\",\n \"type\": \"object\"\n}"
  }
}