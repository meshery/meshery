{
  "id": "00000000-0000-0000-0000-000000000000",
  "schemaVersion": "core.meshery.io/v1beta1",
  "version": "v1.0.0",
  "displayName": "Instance V1",
  "description": "",
  "format": "JSON",
  "model": {
   "id": "00000000-0000-0000-0000-000000000000",
   "schemaVersion": "core.meshery.io/v1beta1",
   "version": "v1.0.0",
   "name": "crossplane-provider-openstack",
   "displayName": "OpenStack (Crossplane)",
   "description": "",
   "status": "enabled",
   "hostID": "00000000-0000-0000-0000-000000000000",
   "registrant": {
    "hostname": "github"
   },
   "category": {
    "name": "Orchestration \u0026 Management",
    "metadata": null
   },
   "subCategory": "OpenStack",
   "metadata": {
    "isAnnotation": false,
    "svgColor": "\u003c?xml version=\"1.0\" encoding=\"UTF-8\"?\u003e\u003c!DOCTYPE svg\u003e\u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 -2.5 256 256\" version=\"1.1\" xmlns:_xmlns=\"xmlns\" _xmlns:xlink=\"http://www.w3.org/1999/xlink\" preserveAspectRatio=\"xMidYMid\"\u003e\n    \u003cg xmlns=\"http://www.w3.org/2000/svg\"\u003e\n        \u003cpath xmlns=\"http://www.w3.org/2000/svg\" d=\"M57.8196917,170.722795 L57.8196917,179.878808 C57.8196917,186.98261 63.5764029,192.739322 70.6802055,192.739322 L70.6802055,192.739322 L185.330319,192.739322 C192.434121,192.739322 198.190832,186.98261 198.190832,179.878808 L198.190832,179.878808 L198.190832,170.722795 L256,170.722795 L256,226.77443 C256,239.855951 245.296937,250.559013 232.215416,250.559013 L232.215416,250.559013 L23.7845838,250.559013 C10.7030627,250.559013 0,239.855951 0,226.77443 L0,226.77443 L0,170.722795 L57.8196917,170.722795 Z M57.8091675,96.3696608 L57.8091675,154.178828 L0,154.178828 L0,96.3696608 L57.8091675,96.3696608 Z M256,96.3696608 L256,154.178828 L198.190832,154.178828 L198.190832,96.3696608 L256,96.3696608 Z M232.215416,0 C245.296937,0 256,10.7030627 256,23.7951079 L256,23.7951079 L256,79.8362179 L198.190832,79.8362179 L198.190832,70.6802055 C198.190832,63.5764029 192.434121,57.8196917 185.330319,57.8196917 L185.330319,57.8196917 L70.6696814,57.8196917 C63.5658787,57.8196917 57.8091675,63.5764029 57.8091675,70.6802055 L57.8091675,70.6802055 L57.8091675,79.8362179 L0,79.8362179 L0,23.7845838 C0,10.7030627 10.7030627,0 23.7845838,0 L23.7845838,0 Z\" fill=\"#DA1A32\"\u003e\n\n\u003c/path\u003e\n    \u003c/g\u003e\n\u003c/svg\u003e",
    "svgComplete": "",
    "svgWhite": "\u003c?xml version=\"1.0\" encoding=\"UTF-8\"?\u003e\u003c!DOCTYPE svg\u003e\u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 -2.5 256 256\" version=\"1.1\" xmlns:_xmlns=\"xmlns\" _xmlns:xlink=\"http://www.w3.org/1999/xlink\" preserveAspectRatio=\"xMidYMid\"\u003e\n    \u003cg xmlns=\"http://www.w3.org/2000/svg\"\u003e\n        \u003cpath xmlns=\"http://www.w3.org/2000/svg\" d=\"M57.8196917,170.722795 L57.8196917,179.878808 C57.8196917,186.98261 63.5764029,192.739322 70.6802055,192.739322 L70.6802055,192.739322 L185.330319,192.739322 C192.434121,192.739322 198.190832,186.98261 198.190832,179.878808 L198.190832,179.878808 L198.190832,170.722795 L256,170.722795 L256,226.77443 C256,239.855951 245.296937,250.559013 232.215416,250.559013 L232.215416,250.559013 L23.7845838,250.559013 C10.7030627,250.559013 0,239.855951 0,226.77443 L0,226.77443 L0,170.722795 L57.8196917,170.722795 Z M57.8091675,96.3696608 L57.8091675,154.178828 L0,154.178828 L0,96.3696608 L57.8091675,96.3696608 Z M256,96.3696608 L256,154.178828 L198.190832,154.178828 L198.190832,96.3696608 L256,96.3696608 Z M232.215416,0 C245.296937,0 256,10.7030627 256,23.7951079 L256,23.7951079 L256,79.8362179 L198.190832,79.8362179 L198.190832,70.6802055 C198.190832,63.5764029 192.434121,57.8196917 185.330319,57.8196917 L185.330319,57.8196917 L70.6696814,57.8196917 C63.5658787,57.8196917 57.8091675,63.5764029 57.8091675,70.6802055 L57.8091675,70.6802055 L57.8091675,79.8362179 L0,79.8362179 L0,23.7845838 C0,10.7030627 10.7030627,0 23.7845838,0 L23.7845838,0 Z\" fill=\"#fff\"\u003e\n\u003c/path\u003e\n    \u003c/g\u003e\n\u003c/svg\u003e"
   },
   "model": {
    "version": "v0.3.0"
   },
   "components": null,
   "relationships": null
  },
  "metadata": {
   "capabilities": "",
   "defaultData": "",
   "genealogy": "",
   "isAnnotation": false,
   "isNamespaced": false,
   "primaryColor": "#DA1A32",
   "secondaryColor": "",
   "shape": "circle",
   "shapePolygonPoints": "",
   "styleOverrides": "",
   "styles": "",
   "subCategory": "",
   "svgColor": "\u003csvg width=\"800px\" height=\"800px\" viewBox=\"0 -2.5 256 256\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" preserveAspectRatio=\"xMidYMid\"\u003e\n    \u003cg\u003e\n        \u003cpath d=\"M57.8196917,170.722795 L57.8196917,179.878808 C57.8196917,186.98261 63.5764029,192.739322 70.6802055,192.739322 L70.6802055,192.739322 L185.330319,192.739322 C192.434121,192.739322 198.190832,186.98261 198.190832,179.878808 L198.190832,179.878808 L198.190832,170.722795 L256,170.722795 L256,226.77443 C256,239.855951 245.296937,250.559013 232.215416,250.559013 L232.215416,250.559013 L23.7845838,250.559013 C10.7030627,250.559013 0,239.855951 0,226.77443 L0,226.77443 L0,170.722795 L57.8196917,170.722795 Z M57.8091675,96.3696608 L57.8091675,154.178828 L0,154.178828 L0,96.3696608 L57.8091675,96.3696608 Z M256,96.3696608 L256,154.178828 L198.190832,154.178828 L198.190832,96.3696608 L256,96.3696608 Z M232.215416,0 C245.296937,0 256,10.7030627 256,23.7951079 L256,23.7951079 L256,79.8362179 L198.190832,79.8362179 L198.190832,70.6802055 C198.190832,63.5764029 192.434121,57.8196917 185.330319,57.8196917 L185.330319,57.8196917 L70.6696814,57.8196917 C63.5658787,57.8196917 57.8091675,63.5764029 57.8091675,70.6802055 L57.8091675,70.6802055 L57.8091675,79.8362179 L0,79.8362179 L0,23.7845838 C0,10.7030627 10.7030627,0 23.7845838,0 L23.7845838,0 Z\" fill=\"#DA1A32\"\u003e\n\n\u003c/path\u003e\n    \u003c/g\u003e\n\u003c/svg\u003e",
   "svgComplete": "",
   "svgWhite": "\u003csvg width=\"800px\" height=\"800px\" viewBox=\"0 -2.5 256 256\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" preserveAspectRatio=\"xMidYMid\"\u003e\n    \u003cg\u003e\n        \u003cpath d=\"M57.8196917,170.722795 L57.8196917,179.878808 C57.8196917,186.98261 63.5764029,192.739322 70.6802055,192.739322 L70.6802055,192.739322 L185.330319,192.739322 C192.434121,192.739322 198.190832,186.98261 198.190832,179.878808 L198.190832,179.878808 L198.190832,170.722795 L256,170.722795 L256,226.77443 C256,239.855951 245.296937,250.559013 232.215416,250.559013 L232.215416,250.559013 L23.7845838,250.559013 C10.7030627,250.559013 0,239.855951 0,226.77443 L0,226.77443 L0,170.722795 L57.8196917,170.722795 Z M57.8091675,96.3696608 L57.8091675,154.178828 L0,154.178828 L0,96.3696608 L57.8091675,96.3696608 Z M256,96.3696608 L256,154.178828 L198.190832,154.178828 L198.190832,96.3696608 L256,96.3696608 Z M232.215416,0 C245.296937,0 256,10.7030627 256,23.7951079 L256,23.7951079 L256,79.8362179 L198.190832,79.8362179 L198.190832,70.6802055 C198.190832,63.5764029 192.434121,57.8196917 185.330319,57.8196917 L185.330319,57.8196917 L70.6696814,57.8196917 C63.5658787,57.8196917 57.8091675,63.5764029 57.8091675,70.6802055 L57.8091675,70.6802055 L57.8091675,79.8362179 L0,79.8362179 L0,23.7845838 C0,10.7030627 10.7030627,0 23.7845838,0 L23.7845838,0 Z\" fill=\"#fff\"\u003e\n\u003c/path\u003e\n    \u003c/g\u003e\n\u003c/svg\u003e"
  },
  "component": {
   "kind": "InstanceV1",
   "version": "db.openstack.crossplane.io/v1alpha1",
   "schema": "{\n \"description\": \"InstanceV1 is the Schema for the InstanceV1s API. Manages a V1 DB instance resource within OpenStack.\",\n \"properties\": {\n  \"spec\": {\n   \"description\": \"InstanceV1Spec defines the desired state of InstanceV1\",\n   \"properties\": {\n    \"deletionPolicy\": {\n     \"default\": \"Delete\",\n     \"description\": \"DeletionPolicy specifies what will happen to the underlying external when this managed resource is deleted - either \\\"Delete\\\" or \\\"Orphan\\\" the external resource. This field is planned to be deprecated in favor of the ManagementPolicies field in a future release. Currently, both could be set independently and non-default values would be honored if the feature flag is enabled. See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223\",\n     \"enum\": [\n      \"Orphan\",\n      \"Delete\"\n     ],\n     \"type\": \"string\"\n    },\n    \"forProvider\": {\n     \"properties\": {\n      \"configurationId\": {\n       \"description\": \"Configuration ID to be attached to the instance. Database instance will be rebooted when configuration is detached.\",\n       \"type\": \"string\"\n      },\n      \"database\": {\n       \"description\": \"An array of database name, charset and collate. The database object structure is documented below.\",\n       \"items\": {\n        \"properties\": {\n         \"charset\": {\n          \"description\": \"Database character set. Changing this creates a new instance.\",\n          \"type\": \"string\"\n         },\n         \"collate\": {\n          \"description\": \"Database collation. Changing this creates a new instance.\",\n          \"type\": \"string\"\n         },\n         \"name\": {\n          \"description\": \"Database to be created on new instance. Changing this creates a new instance.\",\n          \"type\": \"string\"\n         }\n        },\n        \"type\": \"object\"\n       },\n       \"type\": \"array\"\n      },\n      \"datastore\": {\n       \"description\": \"An array of database engine type and version. The datastore object structure is documented below. Changing this creates a new instance.\",\n       \"items\": {\n        \"properties\": {\n         \"type\": {\n          \"description\": \"Database engine type to be used in new instance. Changing this creates a new instance.\",\n          \"type\": \"string\"\n         },\n         \"version\": {\n          \"description\": \"Version of database engine type to be used in new instance. Changing this creates a new instance.\",\n          \"type\": \"string\"\n         }\n        },\n        \"type\": \"object\"\n       },\n       \"type\": \"array\"\n      },\n      \"flavorId\": {\n       \"description\": \"The flavor ID of the desired flavor for the instance. Changing this creates new instance.\",\n       \"type\": \"string\"\n      },\n      \"name\": {\n       \"description\": \"A unique name for the resource.\",\n       \"type\": \"string\"\n      },\n      \"network\": {\n       \"description\": \"An array of one or more networks to attach to the instance. The network object structure is documented below. Changing this creates a new instance.\",\n       \"items\": {\n        \"properties\": {\n         \"fixedIpV4\": {\n          \"description\": \"Specifies a fixed IPv4 address to be used on this network. Changing this creates a new instance.\",\n          \"type\": \"string\"\n         },\n         \"fixedIpV6\": {\n          \"description\": \"Specifies a fixed IPv6 address to be used on this network. Changing this creates a new instance.\",\n          \"type\": \"string\"\n         },\n         \"port\": {\n          \"description\": \"The port UUID of a network to attach to the instance. Changing this creates a new instance.\",\n          \"type\": \"string\"\n         },\n         \"uuid\": {\n          \"description\": \"The network UUID to attach to the instance. Changing this creates a new instance.\",\n          \"type\": \"string\"\n         }\n        },\n        \"type\": \"object\"\n       },\n       \"type\": \"array\"\n      },\n      \"region\": {\n       \"description\": \"The region in which to create the db instance. Changing this creates a new instance.\",\n       \"type\": \"string\"\n      },\n      \"size\": {\n       \"description\": \"Specifies the volume size in GB. Changing this creates new instance.\",\n       \"type\": \"number\"\n      },\n      \"user\": {\n       \"description\": \"An array of username, password, host and databases. The user object structure is documented below.\",\n       \"items\": {\n        \"properties\": {\n         \"databases\": {\n          \"description\": \"A list of databases that user will have access to. If not specified, user has access to all databases on th einstance. Changing this creates a new instance.\",\n          \"items\": {\n           \"type\": \"string\"\n          },\n          \"type\": \"array\"\n         },\n         \"host\": {\n          \"description\": \"An ip address or % sign indicating what ip addresses can connect with this user credentials. Changing this creates a new instance.\",\n          \"type\": \"string\"\n         },\n         \"name\": {\n          \"description\": \"Username to be created on new instance. Changing this creates a new instance.\",\n          \"type\": \"string\"\n         },\n         \"passwordSecretRef\": {\n          \"description\": \"User's password. Changing this creates a new instance.\",\n          \"properties\": {\n           \"key\": {\n            \"description\": \"The key to select.\",\n            \"type\": \"string\"\n           },\n           \"name\": {\n            \"description\": \"Name of the secret.\",\n            \"type\": \"string\"\n           },\n           \"namespace\": {\n            \"description\": \"Namespace of the secret.\",\n            \"type\": \"string\"\n           }\n          },\n          \"required\": [\n           \"key\",\n           \"name\",\n           \"namespace\"\n          ],\n          \"type\": \"object\"\n         }\n        },\n        \"type\": \"object\"\n       },\n       \"type\": \"array\"\n      }\n     },\n     \"type\": \"object\"\n    },\n    \"initProvider\": {\n     \"description\": \"THIS IS A BETA FIELD. It will be honored unless the Management Policies feature flag is disabled. InitProvider holds the same fields as ForProvider, with the exception of Identifier and other resource reference fields. The fields that are in InitProvider are merged into ForProvider when the resource is created. The same fields are also added to the terraform ignore_changes hook, to avoid updating them after creation. This is useful for fields that are required on creation, but we do not desire to update them after creation, for example because of an external controller is managing them, like an autoscaler.\",\n     \"properties\": {\n      \"configurationId\": {\n       \"description\": \"Configuration ID to be attached to the instance. Database instance will be rebooted when configuration is detached.\",\n       \"type\": \"string\"\n      },\n      \"database\": {\n       \"description\": \"An array of database name, charset and collate. The database object structure is documented below.\",\n       \"items\": {\n        \"properties\": {\n         \"charset\": {\n          \"description\": \"Database character set. Changing this creates a new instance.\",\n          \"type\": \"string\"\n         },\n         \"collate\": {\n          \"description\": \"Database collation. Changing this creates a new instance.\",\n          \"type\": \"string\"\n         },\n         \"name\": {\n          \"description\": \"Database to be created on new instance. Changing this creates a new instance.\",\n          \"type\": \"string\"\n         }\n        },\n        \"type\": \"object\"\n       },\n       \"type\": \"array\"\n      },\n      \"datastore\": {\n       \"description\": \"An array of database engine type and version. The datastore object structure is documented below. Changing this creates a new instance.\",\n       \"items\": {\n        \"properties\": {\n         \"type\": {\n          \"description\": \"Database engine type to be used in new instance. Changing this creates a new instance.\",\n          \"type\": \"string\"\n         },\n         \"version\": {\n          \"description\": \"Version of database engine type to be used in new instance. Changing this creates a new instance.\",\n          \"type\": \"string\"\n         }\n        },\n        \"type\": \"object\"\n       },\n       \"type\": \"array\"\n      },\n      \"flavorId\": {\n       \"description\": \"The flavor ID of the desired flavor for the instance. Changing this creates new instance.\",\n       \"type\": \"string\"\n      },\n      \"name\": {\n       \"description\": \"A unique name for the resource.\",\n       \"type\": \"string\"\n      },\n      \"network\": {\n       \"description\": \"An array of one or more networks to attach to the instance. The network object structure is documented below. Changing this creates a new instance.\",\n       \"items\": {\n        \"properties\": {\n         \"fixedIpV4\": {\n          \"description\": \"Specifies a fixed IPv4 address to be used on this network. Changing this creates a new instance.\",\n          \"type\": \"string\"\n         },\n         \"fixedIpV6\": {\n          \"description\": \"Specifies a fixed IPv6 address to be used on this network. Changing this creates a new instance.\",\n          \"type\": \"string\"\n         },\n         \"port\": {\n          \"description\": \"The port UUID of a network to attach to the instance. Changing this creates a new instance.\",\n          \"type\": \"string\"\n         },\n         \"uuid\": {\n          \"description\": \"The network UUID to attach to the instance. Changing this creates a new instance.\",\n          \"type\": \"string\"\n         }\n        },\n        \"type\": \"object\"\n       },\n       \"type\": \"array\"\n      },\n      \"region\": {\n       \"description\": \"The region in which to create the db instance. Changing this creates a new instance.\",\n       \"type\": \"string\"\n      },\n      \"size\": {\n       \"description\": \"Specifies the volume size in GB. Changing this creates new instance.\",\n       \"type\": \"number\"\n      },\n      \"user\": {\n       \"description\": \"An array of username, password, host and databases. The user object structure is documented below.\",\n       \"items\": {\n        \"properties\": {\n         \"databases\": {\n          \"description\": \"A list of databases that user will have access to. If not specified, user has access to all databases on th einstance. Changing this creates a new instance.\",\n          \"items\": {\n           \"type\": \"string\"\n          },\n          \"type\": \"array\"\n         },\n         \"host\": {\n          \"description\": \"An ip address or % sign indicating what ip addresses can connect with this user credentials. Changing this creates a new instance.\",\n          \"type\": \"string\"\n         },\n         \"name\": {\n          \"description\": \"Username to be created on new instance. Changing this creates a new instance.\",\n          \"type\": \"string\"\n         }\n        },\n        \"type\": \"object\"\n       },\n       \"type\": \"array\"\n      }\n     },\n     \"type\": \"object\"\n    },\n    \"managementPolicies\": {\n     \"default\": [\n      \"*\"\n     ],\n     \"description\": \"THIS IS A BETA FIELD. It is on by default but can be opted out through a Crossplane feature flag. ManagementPolicies specify the array of actions Crossplane is allowed to take on the managed and external resources. This field is planned to replace the DeletionPolicy field in a future release. Currently, both could be set independently and non-default values would be honored if the feature flag is enabled. If both are custom, the DeletionPolicy field will be ignored. See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223 and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md\",\n     \"items\": {\n      \"description\": \"A ManagementAction represents an action that the Crossplane controllers can take on an external resource.\",\n      \"enum\": [\n       \"Observe\",\n       \"Create\",\n       \"Update\",\n       \"Delete\",\n       \"LateInitialize\",\n       \"*\"\n      ],\n      \"type\": \"string\"\n     },\n     \"type\": \"array\"\n    },\n    \"providerConfigRef\": {\n     \"default\": {\n      \"name\": \"default\"\n     },\n     \"description\": \"ProviderConfigReference specifies how the provider that will be used to create, observe, update, and delete this managed resource should be configured.\",\n     \"properties\": {\n      \"name\": {\n       \"description\": \"Name of the referenced object.\",\n       \"type\": \"string\"\n      },\n      \"policy\": {\n       \"description\": \"Policies for referencing.\",\n       \"properties\": {\n        \"resolution\": {\n         \"default\": \"Required\",\n         \"description\": \"Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.\",\n         \"enum\": [\n          \"Required\",\n          \"Optional\"\n         ],\n         \"type\": \"string\"\n        },\n        \"resolve\": {\n         \"description\": \"Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.\",\n         \"enum\": [\n          \"Always\",\n          \"IfNotPresent\"\n         ],\n         \"type\": \"string\"\n        }\n       },\n       \"type\": \"object\"\n      }\n     },\n     \"required\": [\n      \"name\"\n     ],\n     \"type\": \"object\"\n    },\n    \"publishConnectionDetailsTo\": {\n     \"description\": \"PublishConnectionDetailsTo specifies the connection secret config which contains a name, metadata and a reference to secret store config to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource.\",\n     \"properties\": {\n      \"configRef\": {\n       \"default\": {\n        \"name\": \"default\"\n       },\n       \"description\": \"SecretStoreConfigRef specifies which secret store config should be used for this ConnectionSecret.\",\n       \"properties\": {\n        \"name\": {\n         \"description\": \"Name of the referenced object.\",\n         \"type\": \"string\"\n        },\n        \"policy\": {\n         \"description\": \"Policies for referencing.\",\n         \"properties\": {\n          \"resolution\": {\n           \"default\": \"Required\",\n           \"description\": \"Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.\",\n           \"enum\": [\n            \"Required\",\n            \"Optional\"\n           ],\n           \"type\": \"string\"\n          },\n          \"resolve\": {\n           \"description\": \"Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.\",\n           \"enum\": [\n            \"Always\",\n            \"IfNotPresent\"\n           ],\n           \"type\": \"string\"\n          }\n         },\n         \"type\": \"object\"\n        }\n       },\n       \"required\": [\n        \"name\"\n       ],\n       \"type\": \"object\"\n      },\n      \"metadata\": {\n       \"description\": \"Metadata is the metadata for connection secret.\",\n       \"properties\": {\n        \"annotations\": {\n         \"additionalProperties\": {\n          \"type\": \"string\"\n         },\n         \"description\": \"Annotations are the annotations to be added to connection secret. - For Kubernetes secrets, this will be used as \\\"metadata.annotations\\\". - It is up to Secret Store implementation for others store types.\",\n         \"type\": \"object\"\n        },\n        \"labels\": {\n         \"additionalProperties\": {\n          \"type\": \"string\"\n         },\n         \"description\": \"Labels are the labels/tags to be added to connection secret. - For Kubernetes secrets, this will be used as \\\"metadata.labels\\\". - It is up to Secret Store implementation for others store types.\",\n         \"type\": \"object\"\n        },\n        \"type\": {\n         \"description\": \"Type is the SecretType for the connection secret. - Only valid for Kubernetes Secret Stores.\",\n         \"type\": \"string\"\n        }\n       },\n       \"type\": \"object\"\n      },\n      \"name\": {\n       \"description\": \"Name is the name of the connection secret.\",\n       \"type\": \"string\"\n      }\n     },\n     \"required\": [\n      \"name\"\n     ],\n     \"type\": \"object\"\n    },\n    \"writeConnectionSecretToRef\": {\n     \"description\": \"WriteConnectionSecretToReference specifies the namespace and name of a Secret to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource. This field is planned to be replaced in a future release in favor of PublishConnectionDetailsTo. Currently, both could be set independently and connection details would be published to both without affecting each other.\",\n     \"properties\": {\n      \"name\": {\n       \"description\": \"Name of the secret.\",\n       \"type\": \"string\"\n      },\n      \"namespace\": {\n       \"description\": \"Namespace of the secret.\",\n       \"type\": \"string\"\n      }\n     },\n     \"required\": [\n      \"name\",\n      \"namespace\"\n     ],\n     \"type\": \"object\"\n    }\n   },\n   \"required\": [\n    \"forProvider\"\n   ],\n   \"type\": \"object\",\n   \"x-kubernetes-validations\": [\n    {\n     \"message\": \"spec.forProvider.datastore is a required parameter\",\n     \"rule\": \"!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.datastore) || (has(self.initProvider) \\u0026\\u0026 has(self.initProvider.datastore))\"\n    },\n    {\n     \"message\": \"spec.forProvider.name is a required parameter\",\n     \"rule\": \"!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.name) || (has(self.initProvider) \\u0026\\u0026 has(self.initProvider.name))\"\n    },\n    {\n     \"message\": \"spec.forProvider.size is a required parameter\",\n     \"rule\": \"!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.size) || (has(self.initProvider) \\u0026\\u0026 has(self.initProvider.size))\"\n    }\n   ]\n  }\n },\n \"required\": [\n  \"spec\"\n ],\n \"title\": \"Instance V1\",\n \"type\": \"object\"\n}"
  }
 }