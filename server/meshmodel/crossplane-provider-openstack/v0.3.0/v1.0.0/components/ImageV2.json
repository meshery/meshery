{
  "id": "00000000-0000-0000-0000-000000000000",
  "schemaVersion": "core.meshery.io/v1beta1",
  "version": "v1.0.0",
  "displayName": "Image V2",
  "description": "",
  "format": "JSON",
  "model": {
   "id": "00000000-0000-0000-0000-000000000000",
   "schemaVersion": "core.meshery.io/v1beta1",
   "version": "v1.0.0",
   "name": "crossplane-provider-openstack",
   "displayName": "OpenStack (Crossplane)",
   "description": "",
   "status": "enabled",
   "hostID": "00000000-0000-0000-0000-000000000000",
   "registrant": {
    "hostname": "github"
   },
   "category": {
    "name": "Orchestration \u0026 Management",
    "metadata": null
   },
   "subCategory": "OpenStack",
   "metadata": {
    "isAnnotation": false,
    "svgColor": "\u003c?xml version=\"1.0\" encoding=\"UTF-8\"?\u003e\u003c!DOCTYPE svg\u003e\u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 -2.5 256 256\" version=\"1.1\" xmlns:_xmlns=\"xmlns\" _xmlns:xlink=\"http://www.w3.org/1999/xlink\" preserveAspectRatio=\"xMidYMid\"\u003e\n    \u003cg xmlns=\"http://www.w3.org/2000/svg\"\u003e\n        \u003cpath xmlns=\"http://www.w3.org/2000/svg\" d=\"M57.8196917,170.722795 L57.8196917,179.878808 C57.8196917,186.98261 63.5764029,192.739322 70.6802055,192.739322 L70.6802055,192.739322 L185.330319,192.739322 C192.434121,192.739322 198.190832,186.98261 198.190832,179.878808 L198.190832,179.878808 L198.190832,170.722795 L256,170.722795 L256,226.77443 C256,239.855951 245.296937,250.559013 232.215416,250.559013 L232.215416,250.559013 L23.7845838,250.559013 C10.7030627,250.559013 0,239.855951 0,226.77443 L0,226.77443 L0,170.722795 L57.8196917,170.722795 Z M57.8091675,96.3696608 L57.8091675,154.178828 L0,154.178828 L0,96.3696608 L57.8091675,96.3696608 Z M256,96.3696608 L256,154.178828 L198.190832,154.178828 L198.190832,96.3696608 L256,96.3696608 Z M232.215416,0 C245.296937,0 256,10.7030627 256,23.7951079 L256,23.7951079 L256,79.8362179 L198.190832,79.8362179 L198.190832,70.6802055 C198.190832,63.5764029 192.434121,57.8196917 185.330319,57.8196917 L185.330319,57.8196917 L70.6696814,57.8196917 C63.5658787,57.8196917 57.8091675,63.5764029 57.8091675,70.6802055 L57.8091675,70.6802055 L57.8091675,79.8362179 L0,79.8362179 L0,23.7845838 C0,10.7030627 10.7030627,0 23.7845838,0 L23.7845838,0 Z\" fill=\"#DA1A32\"\u003e\n\n\u003c/path\u003e\n    \u003c/g\u003e\n\u003c/svg\u003e",
    "svgComplete": "",
    "svgWhite": "\u003c?xml version=\"1.0\" encoding=\"UTF-8\"?\u003e\u003c!DOCTYPE svg\u003e\u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 -2.5 256 256\" version=\"1.1\" xmlns:_xmlns=\"xmlns\" _xmlns:xlink=\"http://www.w3.org/1999/xlink\" preserveAspectRatio=\"xMidYMid\"\u003e\n    \u003cg xmlns=\"http://www.w3.org/2000/svg\"\u003e\n        \u003cpath xmlns=\"http://www.w3.org/2000/svg\" d=\"M57.8196917,170.722795 L57.8196917,179.878808 C57.8196917,186.98261 63.5764029,192.739322 70.6802055,192.739322 L70.6802055,192.739322 L185.330319,192.739322 C192.434121,192.739322 198.190832,186.98261 198.190832,179.878808 L198.190832,179.878808 L198.190832,170.722795 L256,170.722795 L256,226.77443 C256,239.855951 245.296937,250.559013 232.215416,250.559013 L232.215416,250.559013 L23.7845838,250.559013 C10.7030627,250.559013 0,239.855951 0,226.77443 L0,226.77443 L0,170.722795 L57.8196917,170.722795 Z M57.8091675,96.3696608 L57.8091675,154.178828 L0,154.178828 L0,96.3696608 L57.8091675,96.3696608 Z M256,96.3696608 L256,154.178828 L198.190832,154.178828 L198.190832,96.3696608 L256,96.3696608 Z M232.215416,0 C245.296937,0 256,10.7030627 256,23.7951079 L256,23.7951079 L256,79.8362179 L198.190832,79.8362179 L198.190832,70.6802055 C198.190832,63.5764029 192.434121,57.8196917 185.330319,57.8196917 L185.330319,57.8196917 L70.6696814,57.8196917 C63.5658787,57.8196917 57.8091675,63.5764029 57.8091675,70.6802055 L57.8091675,70.6802055 L57.8091675,79.8362179 L0,79.8362179 L0,23.7845838 C0,10.7030627 10.7030627,0 23.7845838,0 L23.7845838,0 Z\" fill=\"#fff\"\u003e\n\u003c/path\u003e\n    \u003c/g\u003e\n\u003c/svg\u003e"
   },
   "model": {
    "version": "v0.3.0"
   },
   "components": null,
   "relationships": null
  },
  "metadata": {
   "capabilities": "",
   "defaultData": "",
   "genealogy": "",
   "isAnnotation": false,
   "isNamespaced": false,
   "primaryColor": "#DA1A32",
   "secondaryColor": "",
   "shape": "circle",
   "shapePolygonPoints": "",
   "styleOverrides": "",
   "styles": "",
   "subCategory": "",
   "svgColor": "\u003csvg width=\"800px\" height=\"800px\" viewBox=\"0 -2.5 256 256\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" preserveAspectRatio=\"xMidYMid\"\u003e\n    \u003cg\u003e\n        \u003cpath d=\"M57.8196917,170.722795 L57.8196917,179.878808 C57.8196917,186.98261 63.5764029,192.739322 70.6802055,192.739322 L70.6802055,192.739322 L185.330319,192.739322 C192.434121,192.739322 198.190832,186.98261 198.190832,179.878808 L198.190832,179.878808 L198.190832,170.722795 L256,170.722795 L256,226.77443 C256,239.855951 245.296937,250.559013 232.215416,250.559013 L232.215416,250.559013 L23.7845838,250.559013 C10.7030627,250.559013 0,239.855951 0,226.77443 L0,226.77443 L0,170.722795 L57.8196917,170.722795 Z M57.8091675,96.3696608 L57.8091675,154.178828 L0,154.178828 L0,96.3696608 L57.8091675,96.3696608 Z M256,96.3696608 L256,154.178828 L198.190832,154.178828 L198.190832,96.3696608 L256,96.3696608 Z M232.215416,0 C245.296937,0 256,10.7030627 256,23.7951079 L256,23.7951079 L256,79.8362179 L198.190832,79.8362179 L198.190832,70.6802055 C198.190832,63.5764029 192.434121,57.8196917 185.330319,57.8196917 L185.330319,57.8196917 L70.6696814,57.8196917 C63.5658787,57.8196917 57.8091675,63.5764029 57.8091675,70.6802055 L57.8091675,70.6802055 L57.8091675,79.8362179 L0,79.8362179 L0,23.7845838 C0,10.7030627 10.7030627,0 23.7845838,0 L23.7845838,0 Z\" fill=\"#DA1A32\"\u003e\n\n\u003c/path\u003e\n    \u003c/g\u003e\n\u003c/svg\u003e",
   "svgComplete": "",
   "svgWhite": "\u003csvg width=\"800px\" height=\"800px\" viewBox=\"0 -2.5 256 256\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" preserveAspectRatio=\"xMidYMid\"\u003e\n    \u003cg\u003e\n        \u003cpath d=\"M57.8196917,170.722795 L57.8196917,179.878808 C57.8196917,186.98261 63.5764029,192.739322 70.6802055,192.739322 L70.6802055,192.739322 L185.330319,192.739322 C192.434121,192.739322 198.190832,186.98261 198.190832,179.878808 L198.190832,179.878808 L198.190832,170.722795 L256,170.722795 L256,226.77443 C256,239.855951 245.296937,250.559013 232.215416,250.559013 L232.215416,250.559013 L23.7845838,250.559013 C10.7030627,250.559013 0,239.855951 0,226.77443 L0,226.77443 L0,170.722795 L57.8196917,170.722795 Z M57.8091675,96.3696608 L57.8091675,154.178828 L0,154.178828 L0,96.3696608 L57.8091675,96.3696608 Z M256,96.3696608 L256,154.178828 L198.190832,154.178828 L198.190832,96.3696608 L256,96.3696608 Z M232.215416,0 C245.296937,0 256,10.7030627 256,23.7951079 L256,23.7951079 L256,79.8362179 L198.190832,79.8362179 L198.190832,70.6802055 C198.190832,63.5764029 192.434121,57.8196917 185.330319,57.8196917 L185.330319,57.8196917 L70.6696814,57.8196917 C63.5658787,57.8196917 57.8091675,63.5764029 57.8091675,70.6802055 L57.8091675,70.6802055 L57.8091675,79.8362179 L0,79.8362179 L0,23.7845838 C0,10.7030627 10.7030627,0 23.7845838,0 L23.7845838,0 Z\" fill=\"#fff\"\u003e\n\u003c/path\u003e\n    \u003c/g\u003e\n\u003c/svg\u003e"
  },
  "component": {
   "kind": "ImageV2",
   "version": "images.openstack.crossplane.io/v1alpha1",
   "schema": "{\n \"description\": \"ImageV2 is the Schema for the ImageV2s API. Manages a V2 Image resource within OpenStack Glance.\",\n \"properties\": {\n  \"spec\": {\n   \"description\": \"ImageV2Spec defines the desired state of ImageV2\",\n   \"properties\": {\n    \"deletionPolicy\": {\n     \"default\": \"Delete\",\n     \"description\": \"DeletionPolicy specifies what will happen to the underlying external when this managed resource is deleted - either \\\"Delete\\\" or \\\"Orphan\\\" the external resource. This field is planned to be deprecated in favor of the ManagementPolicies field in a future release. Currently, both could be set independently and non-default values would be honored if the feature flag is enabled. See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223\",\n     \"enum\": [\n      \"Orphan\",\n      \"Delete\"\n     ],\n     \"type\": \"string\"\n    },\n    \"forProvider\": {\n     \"properties\": {\n      \"containerFormat\": {\n       \"description\": \"The container format. Must be one of \\\"ami\\\", \\\"ari\\\", \\\"aki\\\", \\\"bare\\\", \\\"ovf\\\".\",\n       \"type\": \"string\"\n      },\n      \"decompress\": {\n       \"description\": \"If true, this provider will decompress downloaded image before uploading it to OpenStack. Decompression algorithm is chosen by checking \\\"Content-Type\\\" header, supported algorithm are: gzip, bzip2 and xz. Defaults to false. Changing this creates a new Image.\",\n       \"type\": \"boolean\"\n      },\n      \"diskFormat\": {\n       \"description\": \"The disk format. Must be one of \\\"ami\\\", \\\"ari\\\", \\\"aki\\\", \\\"vhd\\\", \\\"vmdk\\\", \\\"raw\\\", \\\"qcow2\\\", \\\"vdi\\\", \\\"iso\\\".\",\n       \"type\": \"string\"\n      },\n      \"hidden\": {\n       \"description\": \"If true, image will be hidden from public list. Defaults to false.\",\n       \"type\": \"boolean\"\n      },\n      \"imageCachePath\": {\n       \"description\": \"This is the directory where the images will be downloaded. Images will be stored with a filename corresponding to the url's md5 hash. Defaults to \\\"$HOME/\",\n       \"type\": \"string\"\n      },\n      \"imageId\": {\n       \"description\": \"Unique ID (valid UUID) of image to create. Changing this creates a new image.\",\n       \"type\": \"string\"\n      },\n      \"imageSourcePasswordSecretRef\": {\n       \"description\": \"The password of basic auth to download image_source_url.\",\n       \"properties\": {\n        \"key\": {\n         \"description\": \"The key to select.\",\n         \"type\": \"string\"\n        },\n        \"name\": {\n         \"description\": \"Name of the secret.\",\n         \"type\": \"string\"\n        },\n        \"namespace\": {\n         \"description\": \"Namespace of the secret.\",\n         \"type\": \"string\"\n        }\n       },\n       \"required\": [\n        \"key\",\n        \"name\",\n        \"namespace\"\n       ],\n       \"type\": \"object\"\n      },\n      \"imageSourceUrl\": {\n       \"description\": \"This is the url of the raw image. If web_download is not used, then the image will be downloaded in the image_cache_path before being uploaded to Glance. Conflicts with local_file_path.\",\n       \"type\": \"string\"\n      },\n      \"imageSourceUsername\": {\n       \"description\": \"The username of basic auth to download image_source_url.\",\n       \"type\": \"string\"\n      },\n      \"localFilePath\": {\n       \"description\": \"This is the filepath of the raw image file that will be uploaded to Glance. Conflicts with image_source_url and web_download.\",\n       \"type\": \"string\"\n      },\n      \"minDiskGb\": {\n       \"description\": \"Amount of disk space (in GB) required to boot image. Defaults to 0.\",\n       \"type\": \"number\"\n      },\n      \"minRamMb\": {\n       \"description\": \"Amount of ram (in MB) required to boot image. Defauts to 0.\",\n       \"type\": \"number\"\n      },\n      \"name\": {\n       \"description\": \"The name of the image.\",\n       \"type\": \"string\"\n      },\n      \"properties\": {\n       \"additionalProperties\": {\n        \"type\": \"string\"\n       },\n       \"description\": \"A map of key/value pairs to set freeform information about an image. See the \\\"Notes\\\" section for further information about properties.\",\n       \"type\": \"object\"\n      },\n      \"protected\": {\n       \"description\": \"If true, image will not be deletable. Defaults to false.\",\n       \"type\": \"boolean\"\n      },\n      \"region\": {\n       \"description\": \"The region in which to obtain the V2 Glance client. A Glance client is needed to create an Image that can be used with a compute instance. If omitted, the region argument of the provider is used. Changing this creates a new Image.\",\n       \"type\": \"string\"\n      },\n      \"tags\": {\n       \"description\": \"The tags of the image. It must be a list of strings. At this time, it is not possible to delete all tags of an image.\",\n       \"items\": {\n        \"type\": \"string\"\n       },\n       \"type\": \"array\"\n      },\n      \"verifyChecksum\": {\n       \"description\": \"If false, the checksum will not be verified once the image is finished uploading. Conflicts with web_download. Defaults to true when not using web_download.\",\n       \"type\": \"boolean\"\n      },\n      \"visibility\": {\n       \"description\": \"The visibility of the image. Must be one of \\\"public\\\", \\\"private\\\", \\\"community\\\", or \\\"shared\\\". The ability to set the visibility depends upon the configuration of the OpenStack cloud.\",\n       \"type\": \"string\"\n      },\n      \"webDownload\": {\n       \"description\": \"If true, the \\\"web-download\\\" import method will be used to let Openstack download the image directly from the remote source. Conflicts with local_file_path. Defaults to false.\",\n       \"type\": \"boolean\"\n      }\n     },\n     \"type\": \"object\"\n    },\n    \"initProvider\": {\n     \"description\": \"THIS IS A BETA FIELD. It will be honored unless the Management Policies feature flag is disabled. InitProvider holds the same fields as ForProvider, with the exception of Identifier and other resource reference fields. The fields that are in InitProvider are merged into ForProvider when the resource is created. The same fields are also added to the terraform ignore_changes hook, to avoid updating them after creation. This is useful for fields that are required on creation, but we do not desire to update them after creation, for example because of an external controller is managing them, like an autoscaler.\",\n     \"properties\": {\n      \"containerFormat\": {\n       \"description\": \"The container format. Must be one of \\\"ami\\\", \\\"ari\\\", \\\"aki\\\", \\\"bare\\\", \\\"ovf\\\".\",\n       \"type\": \"string\"\n      },\n      \"decompress\": {\n       \"description\": \"If true, this provider will decompress downloaded image before uploading it to OpenStack. Decompression algorithm is chosen by checking \\\"Content-Type\\\" header, supported algorithm are: gzip, bzip2 and xz. Defaults to false. Changing this creates a new Image.\",\n       \"type\": \"boolean\"\n      },\n      \"diskFormat\": {\n       \"description\": \"The disk format. Must be one of \\\"ami\\\", \\\"ari\\\", \\\"aki\\\", \\\"vhd\\\", \\\"vmdk\\\", \\\"raw\\\", \\\"qcow2\\\", \\\"vdi\\\", \\\"iso\\\".\",\n       \"type\": \"string\"\n      },\n      \"hidden\": {\n       \"description\": \"If true, image will be hidden from public list. Defaults to false.\",\n       \"type\": \"boolean\"\n      },\n      \"imageCachePath\": {\n       \"description\": \"This is the directory where the images will be downloaded. Images will be stored with a filename corresponding to the url's md5 hash. Defaults to \\\"$HOME/\",\n       \"type\": \"string\"\n      },\n      \"imageId\": {\n       \"description\": \"Unique ID (valid UUID) of image to create. Changing this creates a new image.\",\n       \"type\": \"string\"\n      },\n      \"imageSourceUrl\": {\n       \"description\": \"This is the url of the raw image. If web_download is not used, then the image will be downloaded in the image_cache_path before being uploaded to Glance. Conflicts with local_file_path.\",\n       \"type\": \"string\"\n      },\n      \"imageSourceUsername\": {\n       \"description\": \"The username of basic auth to download image_source_url.\",\n       \"type\": \"string\"\n      },\n      \"localFilePath\": {\n       \"description\": \"This is the filepath of the raw image file that will be uploaded to Glance. Conflicts with image_source_url and web_download.\",\n       \"type\": \"string\"\n      },\n      \"minDiskGb\": {\n       \"description\": \"Amount of disk space (in GB) required to boot image. Defaults to 0.\",\n       \"type\": \"number\"\n      },\n      \"minRamMb\": {\n       \"description\": \"Amount of ram (in MB) required to boot image. Defauts to 0.\",\n       \"type\": \"number\"\n      },\n      \"name\": {\n       \"description\": \"The name of the image.\",\n       \"type\": \"string\"\n      },\n      \"properties\": {\n       \"additionalProperties\": {\n        \"type\": \"string\"\n       },\n       \"description\": \"A map of key/value pairs to set freeform information about an image. See the \\\"Notes\\\" section for further information about properties.\",\n       \"type\": \"object\"\n      },\n      \"protected\": {\n       \"description\": \"If true, image will not be deletable. Defaults to false.\",\n       \"type\": \"boolean\"\n      },\n      \"region\": {\n       \"description\": \"The region in which to obtain the V2 Glance client. A Glance client is needed to create an Image that can be used with a compute instance. If omitted, the region argument of the provider is used. Changing this creates a new Image.\",\n       \"type\": \"string\"\n      },\n      \"tags\": {\n       \"description\": \"The tags of the image. It must be a list of strings. At this time, it is not possible to delete all tags of an image.\",\n       \"items\": {\n        \"type\": \"string\"\n       },\n       \"type\": \"array\"\n      },\n      \"verifyChecksum\": {\n       \"description\": \"If false, the checksum will not be verified once the image is finished uploading. Conflicts with web_download. Defaults to true when not using web_download.\",\n       \"type\": \"boolean\"\n      },\n      \"visibility\": {\n       \"description\": \"The visibility of the image. Must be one of \\\"public\\\", \\\"private\\\", \\\"community\\\", or \\\"shared\\\". The ability to set the visibility depends upon the configuration of the OpenStack cloud.\",\n       \"type\": \"string\"\n      },\n      \"webDownload\": {\n       \"description\": \"If true, the \\\"web-download\\\" import method will be used to let Openstack download the image directly from the remote source. Conflicts with local_file_path. Defaults to false.\",\n       \"type\": \"boolean\"\n      }\n     },\n     \"type\": \"object\"\n    },\n    \"managementPolicies\": {\n     \"default\": [\n      \"*\"\n     ],\n     \"description\": \"THIS IS A BETA FIELD. It is on by default but can be opted out through a Crossplane feature flag. ManagementPolicies specify the array of actions Crossplane is allowed to take on the managed and external resources. This field is planned to replace the DeletionPolicy field in a future release. Currently, both could be set independently and non-default values would be honored if the feature flag is enabled. If both are custom, the DeletionPolicy field will be ignored. See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223 and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md\",\n     \"items\": {\n      \"description\": \"A ManagementAction represents an action that the Crossplane controllers can take on an external resource.\",\n      \"enum\": [\n       \"Observe\",\n       \"Create\",\n       \"Update\",\n       \"Delete\",\n       \"LateInitialize\",\n       \"*\"\n      ],\n      \"type\": \"string\"\n     },\n     \"type\": \"array\"\n    },\n    \"providerConfigRef\": {\n     \"default\": {\n      \"name\": \"default\"\n     },\n     \"description\": \"ProviderConfigReference specifies how the provider that will be used to create, observe, update, and delete this managed resource should be configured.\",\n     \"properties\": {\n      \"name\": {\n       \"description\": \"Name of the referenced object.\",\n       \"type\": \"string\"\n      },\n      \"policy\": {\n       \"description\": \"Policies for referencing.\",\n       \"properties\": {\n        \"resolution\": {\n         \"default\": \"Required\",\n         \"description\": \"Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.\",\n         \"enum\": [\n          \"Required\",\n          \"Optional\"\n         ],\n         \"type\": \"string\"\n        },\n        \"resolve\": {\n         \"description\": \"Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.\",\n         \"enum\": [\n          \"Always\",\n          \"IfNotPresent\"\n         ],\n         \"type\": \"string\"\n        }\n       },\n       \"type\": \"object\"\n      }\n     },\n     \"required\": [\n      \"name\"\n     ],\n     \"type\": \"object\"\n    },\n    \"publishConnectionDetailsTo\": {\n     \"description\": \"PublishConnectionDetailsTo specifies the connection secret config which contains a name, metadata and a reference to secret store config to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource.\",\n     \"properties\": {\n      \"configRef\": {\n       \"default\": {\n        \"name\": \"default\"\n       },\n       \"description\": \"SecretStoreConfigRef specifies which secret store config should be used for this ConnectionSecret.\",\n       \"properties\": {\n        \"name\": {\n         \"description\": \"Name of the referenced object.\",\n         \"type\": \"string\"\n        },\n        \"policy\": {\n         \"description\": \"Policies for referencing.\",\n         \"properties\": {\n          \"resolution\": {\n           \"default\": \"Required\",\n           \"description\": \"Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.\",\n           \"enum\": [\n            \"Required\",\n            \"Optional\"\n           ],\n           \"type\": \"string\"\n          },\n          \"resolve\": {\n           \"description\": \"Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.\",\n           \"enum\": [\n            \"Always\",\n            \"IfNotPresent\"\n           ],\n           \"type\": \"string\"\n          }\n         },\n         \"type\": \"object\"\n        }\n       },\n       \"required\": [\n        \"name\"\n       ],\n       \"type\": \"object\"\n      },\n      \"metadata\": {\n       \"description\": \"Metadata is the metadata for connection secret.\",\n       \"properties\": {\n        \"annotations\": {\n         \"additionalProperties\": {\n          \"type\": \"string\"\n         },\n         \"description\": \"Annotations are the annotations to be added to connection secret. - For Kubernetes secrets, this will be used as \\\"metadata.annotations\\\". - It is up to Secret Store implementation for others store types.\",\n         \"type\": \"object\"\n        },\n        \"labels\": {\n         \"additionalProperties\": {\n          \"type\": \"string\"\n         },\n         \"description\": \"Labels are the labels/tags to be added to connection secret. - For Kubernetes secrets, this will be used as \\\"metadata.labels\\\". - It is up to Secret Store implementation for others store types.\",\n         \"type\": \"object\"\n        },\n        \"type\": {\n         \"description\": \"Type is the SecretType for the connection secret. - Only valid for Kubernetes Secret Stores.\",\n         \"type\": \"string\"\n        }\n       },\n       \"type\": \"object\"\n      },\n      \"name\": {\n       \"description\": \"Name is the name of the connection secret.\",\n       \"type\": \"string\"\n      }\n     },\n     \"required\": [\n      \"name\"\n     ],\n     \"type\": \"object\"\n    },\n    \"writeConnectionSecretToRef\": {\n     \"description\": \"WriteConnectionSecretToReference specifies the namespace and name of a Secret to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource. This field is planned to be replaced in a future release in favor of PublishConnectionDetailsTo. Currently, both could be set independently and connection details would be published to both without affecting each other.\",\n     \"properties\": {\n      \"name\": {\n       \"description\": \"Name of the secret.\",\n       \"type\": \"string\"\n      },\n      \"namespace\": {\n       \"description\": \"Namespace of the secret.\",\n       \"type\": \"string\"\n      }\n     },\n     \"required\": [\n      \"name\",\n      \"namespace\"\n     ],\n     \"type\": \"object\"\n    }\n   },\n   \"required\": [\n    \"forProvider\"\n   ],\n   \"type\": \"object\",\n   \"x-kubernetes-validations\": [\n    {\n     \"message\": \"spec.forProvider.containerFormat is a required parameter\",\n     \"rule\": \"!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.containerFormat) || (has(self.initProvider) \\u0026\\u0026 has(self.initProvider.containerFormat))\"\n    },\n    {\n     \"message\": \"spec.forProvider.diskFormat is a required parameter\",\n     \"rule\": \"!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.diskFormat) || (has(self.initProvider) \\u0026\\u0026 has(self.initProvider.diskFormat))\"\n    },\n    {\n     \"message\": \"spec.forProvider.name is a required parameter\",\n     \"rule\": \"!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.name) || (has(self.initProvider) \\u0026\\u0026 has(self.initProvider.name))\"\n    }\n   ]\n  }\n },\n \"required\": [\n  \"spec\"\n ],\n \"title\": \"Image V2\",\n \"type\": \"object\"\n}"
  }
 }