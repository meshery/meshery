{
  "id": "00000000-0000-0000-0000-000000000000",
  "schemaVersion": "core.meshery.io/v1beta1",
  "version": "v1.0.0",
  "displayName": "Instance V2",
  "description": "",
  "format": "JSON",
  "model": {
   "id": "00000000-0000-0000-0000-000000000000",
   "schemaVersion": "core.meshery.io/v1beta1",
   "version": "v1.0.0",
   "name": "crossplane-provider-openstack",
   "displayName": "OpenStack (Crossplane)",
   "description": "",
   "status": "enabled",
   "hostID": "00000000-0000-0000-0000-000000000000",
   "registrant": {
    "hostname": "github"
   },
   "category": {
    "name": "Orchestration \u0026 Management",
    "metadata": null
   },
   "subCategory": "OpenStack",
   "metadata": {
    "isAnnotation": false,
    "svgColor": "\u003c?xml version=\"1.0\" encoding=\"UTF-8\"?\u003e\u003c!DOCTYPE svg\u003e\u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 -2.5 256 256\" version=\"1.1\" xmlns:_xmlns=\"xmlns\" _xmlns:xlink=\"http://www.w3.org/1999/xlink\" preserveAspectRatio=\"xMidYMid\"\u003e\n    \u003cg xmlns=\"http://www.w3.org/2000/svg\"\u003e\n        \u003cpath xmlns=\"http://www.w3.org/2000/svg\" d=\"M57.8196917,170.722795 L57.8196917,179.878808 C57.8196917,186.98261 63.5764029,192.739322 70.6802055,192.739322 L70.6802055,192.739322 L185.330319,192.739322 C192.434121,192.739322 198.190832,186.98261 198.190832,179.878808 L198.190832,179.878808 L198.190832,170.722795 L256,170.722795 L256,226.77443 C256,239.855951 245.296937,250.559013 232.215416,250.559013 L232.215416,250.559013 L23.7845838,250.559013 C10.7030627,250.559013 0,239.855951 0,226.77443 L0,226.77443 L0,170.722795 L57.8196917,170.722795 Z M57.8091675,96.3696608 L57.8091675,154.178828 L0,154.178828 L0,96.3696608 L57.8091675,96.3696608 Z M256,96.3696608 L256,154.178828 L198.190832,154.178828 L198.190832,96.3696608 L256,96.3696608 Z M232.215416,0 C245.296937,0 256,10.7030627 256,23.7951079 L256,23.7951079 L256,79.8362179 L198.190832,79.8362179 L198.190832,70.6802055 C198.190832,63.5764029 192.434121,57.8196917 185.330319,57.8196917 L185.330319,57.8196917 L70.6696814,57.8196917 C63.5658787,57.8196917 57.8091675,63.5764029 57.8091675,70.6802055 L57.8091675,70.6802055 L57.8091675,79.8362179 L0,79.8362179 L0,23.7845838 C0,10.7030627 10.7030627,0 23.7845838,0 L23.7845838,0 Z\" fill=\"#DA1A32\"\u003e\n\n\u003c/path\u003e\n    \u003c/g\u003e\n\u003c/svg\u003e",
    "svgComplete": "",
    "svgWhite": "\u003c?xml version=\"1.0\" encoding=\"UTF-8\"?\u003e\u003c!DOCTYPE svg\u003e\u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 -2.5 256 256\" version=\"1.1\" xmlns:_xmlns=\"xmlns\" _xmlns:xlink=\"http://www.w3.org/1999/xlink\" preserveAspectRatio=\"xMidYMid\"\u003e\n    \u003cg xmlns=\"http://www.w3.org/2000/svg\"\u003e\n        \u003cpath xmlns=\"http://www.w3.org/2000/svg\" d=\"M57.8196917,170.722795 L57.8196917,179.878808 C57.8196917,186.98261 63.5764029,192.739322 70.6802055,192.739322 L70.6802055,192.739322 L185.330319,192.739322 C192.434121,192.739322 198.190832,186.98261 198.190832,179.878808 L198.190832,179.878808 L198.190832,170.722795 L256,170.722795 L256,226.77443 C256,239.855951 245.296937,250.559013 232.215416,250.559013 L232.215416,250.559013 L23.7845838,250.559013 C10.7030627,250.559013 0,239.855951 0,226.77443 L0,226.77443 L0,170.722795 L57.8196917,170.722795 Z M57.8091675,96.3696608 L57.8091675,154.178828 L0,154.178828 L0,96.3696608 L57.8091675,96.3696608 Z M256,96.3696608 L256,154.178828 L198.190832,154.178828 L198.190832,96.3696608 L256,96.3696608 Z M232.215416,0 C245.296937,0 256,10.7030627 256,23.7951079 L256,23.7951079 L256,79.8362179 L198.190832,79.8362179 L198.190832,70.6802055 C198.190832,63.5764029 192.434121,57.8196917 185.330319,57.8196917 L185.330319,57.8196917 L70.6696814,57.8196917 C63.5658787,57.8196917 57.8091675,63.5764029 57.8091675,70.6802055 L57.8091675,70.6802055 L57.8091675,79.8362179 L0,79.8362179 L0,23.7845838 C0,10.7030627 10.7030627,0 23.7845838,0 L23.7845838,0 Z\" fill=\"#fff\"\u003e\n\u003c/path\u003e\n    \u003c/g\u003e\n\u003c/svg\u003e"
   },
   "model": {
    "version": "v0.3.0"
   },
   "components": null,
   "relationships": null
  },
  "metadata": {
   "capabilities": "",
   "defaultData": "",
   "genealogy": "",
   "isAnnotation": false,
   "isNamespaced": false,
   "primaryColor": "#DA1A32",
   "secondaryColor": "",
   "shape": "circle",
   "shapePolygonPoints": "",
   "styleOverrides": "",
   "styles": "",
   "subCategory": "",
   "svgColor": "\u003csvg width=\"800px\" height=\"800px\" viewBox=\"0 -2.5 256 256\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" preserveAspectRatio=\"xMidYMid\"\u003e\n    \u003cg\u003e\n        \u003cpath d=\"M57.8196917,170.722795 L57.8196917,179.878808 C57.8196917,186.98261 63.5764029,192.739322 70.6802055,192.739322 L70.6802055,192.739322 L185.330319,192.739322 C192.434121,192.739322 198.190832,186.98261 198.190832,179.878808 L198.190832,179.878808 L198.190832,170.722795 L256,170.722795 L256,226.77443 C256,239.855951 245.296937,250.559013 232.215416,250.559013 L232.215416,250.559013 L23.7845838,250.559013 C10.7030627,250.559013 0,239.855951 0,226.77443 L0,226.77443 L0,170.722795 L57.8196917,170.722795 Z M57.8091675,96.3696608 L57.8091675,154.178828 L0,154.178828 L0,96.3696608 L57.8091675,96.3696608 Z M256,96.3696608 L256,154.178828 L198.190832,154.178828 L198.190832,96.3696608 L256,96.3696608 Z M232.215416,0 C245.296937,0 256,10.7030627 256,23.7951079 L256,23.7951079 L256,79.8362179 L198.190832,79.8362179 L198.190832,70.6802055 C198.190832,63.5764029 192.434121,57.8196917 185.330319,57.8196917 L185.330319,57.8196917 L70.6696814,57.8196917 C63.5658787,57.8196917 57.8091675,63.5764029 57.8091675,70.6802055 L57.8091675,70.6802055 L57.8091675,79.8362179 L0,79.8362179 L0,23.7845838 C0,10.7030627 10.7030627,0 23.7845838,0 L23.7845838,0 Z\" fill=\"#DA1A32\"\u003e\n\n\u003c/path\u003e\n    \u003c/g\u003e\n\u003c/svg\u003e",
   "svgComplete": "",
   "svgWhite": "\u003csvg width=\"800px\" height=\"800px\" viewBox=\"0 -2.5 256 256\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" preserveAspectRatio=\"xMidYMid\"\u003e\n    \u003cg\u003e\n        \u003cpath d=\"M57.8196917,170.722795 L57.8196917,179.878808 C57.8196917,186.98261 63.5764029,192.739322 70.6802055,192.739322 L70.6802055,192.739322 L185.330319,192.739322 C192.434121,192.739322 198.190832,186.98261 198.190832,179.878808 L198.190832,179.878808 L198.190832,170.722795 L256,170.722795 L256,226.77443 C256,239.855951 245.296937,250.559013 232.215416,250.559013 L232.215416,250.559013 L23.7845838,250.559013 C10.7030627,250.559013 0,239.855951 0,226.77443 L0,226.77443 L0,170.722795 L57.8196917,170.722795 Z M57.8091675,96.3696608 L57.8091675,154.178828 L0,154.178828 L0,96.3696608 L57.8091675,96.3696608 Z M256,96.3696608 L256,154.178828 L198.190832,154.178828 L198.190832,96.3696608 L256,96.3696608 Z M232.215416,0 C245.296937,0 256,10.7030627 256,23.7951079 L256,23.7951079 L256,79.8362179 L198.190832,79.8362179 L198.190832,70.6802055 C198.190832,63.5764029 192.434121,57.8196917 185.330319,57.8196917 L185.330319,57.8196917 L70.6696814,57.8196917 C63.5658787,57.8196917 57.8091675,63.5764029 57.8091675,70.6802055 L57.8091675,70.6802055 L57.8091675,79.8362179 L0,79.8362179 L0,23.7845838 C0,10.7030627 10.7030627,0 23.7845838,0 L23.7845838,0 Z\" fill=\"#fff\"\u003e\n\u003c/path\u003e\n    \u003c/g\u003e\n\u003c/svg\u003e"
  },
  "component": {
   "kind": "InstanceV2",
   "version": "compute.openstack.crossplane.io/v1alpha1",
   "schema": "{\n \"description\": \"InstanceV2 is the Schema for the InstanceV2s API. Manages a V2 VM instance resource within OpenStack.\",\n \"properties\": {\n  \"spec\": {\n   \"description\": \"InstanceV2Spec defines the desired state of InstanceV2\",\n   \"properties\": {\n    \"deletionPolicy\": {\n     \"default\": \"Delete\",\n     \"description\": \"DeletionPolicy specifies what will happen to the underlying external when this managed resource is deleted - either \\\"Delete\\\" or \\\"Orphan\\\" the external resource. This field is planned to be deprecated in favor of the ManagementPolicies field in a future release. Currently, both could be set independently and non-default values would be honored if the feature flag is enabled. See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223\",\n     \"enum\": [\n      \"Orphan\",\n      \"Delete\"\n     ],\n     \"type\": \"string\"\n    },\n    \"forProvider\": {\n     \"properties\": {\n      \"accessIpV4\": {\n       \"description\": \"The first detected Fixed IPv4 address.\",\n       \"type\": \"string\"\n      },\n      \"accessIpV6\": {\n       \"description\": \"The first detected Fixed IPv6 address.\",\n       \"type\": \"string\"\n      },\n      \"adminPassSecretRef\": {\n       \"description\": \"The administrative password to assign to the server. Changing this changes the root password on the existing server.\",\n       \"properties\": {\n        \"key\": {\n         \"description\": \"The key to select.\",\n         \"type\": \"string\"\n        },\n        \"name\": {\n         \"description\": \"Name of the secret.\",\n         \"type\": \"string\"\n        },\n        \"namespace\": {\n         \"description\": \"Namespace of the secret.\",\n         \"type\": \"string\"\n        }\n       },\n       \"required\": [\n        \"key\",\n        \"name\",\n        \"namespace\"\n       ],\n       \"type\": \"object\"\n      },\n      \"availabilityZone\": {\n       \"description\": \"The availability zone in which to create the server. Conflicts with availability_zone_hints. Changing this creates a new server.\",\n       \"type\": \"string\"\n      },\n      \"availabilityZoneHints\": {\n       \"description\": \"The availability zone in which to create the server. This argument is preferred to availability_zone, when scheduling the server on a particular host or node. Conflicts with availability_zone. Changing this creates a new server.\",\n       \"type\": \"string\"\n      },\n      \"blockDevice\": {\n       \"description\": \"Configuration of block devices. The block_device structure is documented below. Changing this creates a new server. You can specify multiple block devices which will create an instance with multiple disks. This configuration is very flexible, so please see the following reference for more information.\",\n       \"items\": {\n        \"properties\": {\n         \"bootIndex\": {\n          \"description\": \"The boot index of the volume. It defaults to 0. Changing this creates a new server.\",\n          \"type\": \"number\"\n         },\n         \"deleteOnTermination\": {\n          \"description\": \"Delete the volume / block device upon termination of the instance. Defaults to false. Changing this creates a new server.\",\n          \"type\": \"boolean\"\n         },\n         \"destinationType\": {\n          \"description\": \"The type that gets created. Possible values are \\\"volume\\\" and \\\"local\\\". Changing this creates a new server.\",\n          \"type\": \"string\"\n         },\n         \"deviceType\": {\n          \"description\": \"The low-level device type that will be used. Most common thing is to leave this empty. Changing this creates a new server.\",\n          \"type\": \"string\"\n         },\n         \"diskBus\": {\n          \"description\": \"The low-level disk bus that will be used. Most common thing is to leave this empty. Changing this creates a new server.\",\n          \"type\": \"string\"\n         },\n         \"guestFormat\": {\n          \"description\": \"Specifies the guest server disk file system format, such as ext2, ext3, ext4, xfs or swap. Swap block device mappings have the following restrictions: source_type must be blank and destination_type must be local and only one swap disk per server and the size of the swap disk must be less than or equal to the swap size of the flavor. Changing this creates a new server.\",\n          \"type\": \"string\"\n         },\n         \"multiattach\": {\n          \"description\": \"Enable the attachment of multiattach-capable volumes.\",\n          \"type\": \"boolean\"\n         },\n         \"sourceType\": {\n          \"description\": \"The source type of the device. Must be one of \\\"blank\\\", \\\"image\\\", \\\"volume\\\", or \\\"snapshot\\\". Changing this creates a new server.\",\n          \"type\": \"string\"\n         },\n         \"uuid\": {\n          \"description\": \"The UUID of the image, volume, or snapshot. Changing this creates a new server.\",\n          \"type\": \"string\"\n         },\n         \"volumeSize\": {\n          \"description\": \"The size of the volume to create (in gigabytes). Required in the following combinations: source=image and destination=volume, source=blank and destination=local, and source=blank and destination=volume. Changing this creates a new server.\",\n          \"type\": \"number\"\n         },\n         \"volumeType\": {\n          \"description\": \"The volume type that will be used, for example SSD or HDD storage. The available options depend on how your specific OpenStack cloud is configured and what classes of storage are provided. Changing this creates a new server.\",\n          \"type\": \"string\"\n         }\n        },\n        \"type\": \"object\"\n       },\n       \"type\": \"array\"\n      },\n      \"configDrive\": {\n       \"description\": \"Whether to use the config_drive feature to configure the instance. Changing this creates a new server.\",\n       \"type\": \"boolean\"\n      },\n      \"flavorId\": {\n       \"description\": \"The flavor ID of the desired flavor for the server. Changing this resizes the existing server.\",\n       \"type\": \"string\"\n      },\n      \"flavorName\": {\n       \"description\": \"The name of the desired flavor for the server. Changing this resizes the existing server.\",\n       \"type\": \"string\"\n      },\n      \"floatingIp\": {\n       \"type\": \"string\"\n      },\n      \"forceDelete\": {\n       \"description\": \"Whether to force the OpenStack instance to be forcefully deleted. This is useful for environments that have reclaim / soft deletion enabled.\",\n       \"type\": \"boolean\"\n      },\n      \"imageId\": {\n       \"description\": \"The image ID of the desired image for the server. Changing this rebuilds the existing server.\",\n       \"type\": \"string\"\n      },\n      \"imageName\": {\n       \"description\": \"The name of the desired image for the server. Changing this rebuilds the existing server.\",\n       \"type\": \"string\"\n      },\n      \"keyPair\": {\n       \"description\": \"The name of a key pair to put on the server. The key pair must already be created and associated with the tenant's account. Changing this creates a new server.\",\n       \"type\": \"string\"\n      },\n      \"keyPairRef\": {\n       \"description\": \"Reference to a KeypairV2 to populate keyPair.\",\n       \"properties\": {\n        \"name\": {\n         \"description\": \"Name of the referenced object.\",\n         \"type\": \"string\"\n        },\n        \"policy\": {\n         \"description\": \"Policies for referencing.\",\n         \"properties\": {\n          \"resolution\": {\n           \"default\": \"Required\",\n           \"description\": \"Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.\",\n           \"enum\": [\n            \"Required\",\n            \"Optional\"\n           ],\n           \"type\": \"string\"\n          },\n          \"resolve\": {\n           \"description\": \"Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.\",\n           \"enum\": [\n            \"Always\",\n            \"IfNotPresent\"\n           ],\n           \"type\": \"string\"\n          }\n         },\n         \"type\": \"object\"\n        }\n       },\n       \"required\": [\n        \"name\"\n       ],\n       \"type\": \"object\"\n      },\n      \"keyPairSelector\": {\n       \"description\": \"Selector for a KeypairV2 to populate keyPair.\",\n       \"properties\": {\n        \"matchControllerRef\": {\n         \"description\": \"MatchControllerRef ensures an object with the same controller reference as the selecting object is selected.\",\n         \"type\": \"boolean\"\n        },\n        \"matchLabels\": {\n         \"additionalProperties\": {\n          \"type\": \"string\"\n         },\n         \"description\": \"MatchLabels ensures an object with matching labels is selected.\",\n         \"type\": \"object\"\n        },\n        \"policy\": {\n         \"description\": \"Policies for selection.\",\n         \"properties\": {\n          \"resolution\": {\n           \"default\": \"Required\",\n           \"description\": \"Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.\",\n           \"enum\": [\n            \"Required\",\n            \"Optional\"\n           ],\n           \"type\": \"string\"\n          },\n          \"resolve\": {\n           \"description\": \"Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.\",\n           \"enum\": [\n            \"Always\",\n            \"IfNotPresent\"\n           ],\n           \"type\": \"string\"\n          }\n         },\n         \"type\": \"object\"\n        }\n       },\n       \"type\": \"object\"\n      },\n      \"metadata\": {\n       \"additionalProperties\": {\n        \"type\": \"string\"\n       },\n       \"description\": \"Metadata key/value pairs to make available from within the instance. Changing this updates the existing server metadata.\",\n       \"type\": \"object\"\n      },\n      \"name\": {\n       \"description\": \"A unique name for the resource.\",\n       \"type\": \"string\"\n      },\n      \"network\": {\n       \"description\": \"An array of one or more networks to attach to the instance. The network object structure is documented below. Changing this creates a new server.\",\n       \"items\": {\n        \"properties\": {\n         \"accessNetwork\": {\n          \"description\": \"Specifies if this network should be used for provisioning access. Accepts true or false. Defaults to false.\",\n          \"type\": \"boolean\"\n         },\n         \"fixedIpV4\": {\n          \"description\": \"Specifies a fixed IPv4 address to be used on this network. Changing this creates a new server.\",\n          \"type\": \"string\"\n         },\n         \"fixedIpV6\": {\n          \"type\": \"string\"\n         },\n         \"floatingIp\": {\n          \"type\": \"string\"\n         },\n         \"name\": {\n          \"description\": \"The human-readable name of the network. Changing this creates a new server.\",\n          \"type\": \"string\"\n         },\n         \"port\": {\n          \"description\": \"The port UUID of a network to attach to the server. Changing this creates a new server.\",\n          \"type\": \"string\"\n         },\n         \"uuid\": {\n          \"description\": \"The network UUID to attach to the server. Changing this creates a new server.\",\n          \"type\": \"string\"\n         }\n        },\n        \"type\": \"object\"\n       },\n       \"type\": \"array\"\n      },\n      \"networkMode\": {\n       \"description\": \"Special string for network option to create the server. network_mode can be \\\"auto\\\" or \\\"none\\\". Please see the following reference for more information. Conflicts with network.\",\n       \"type\": \"string\"\n      },\n      \"personality\": {\n       \"description\": \"Customize the personality of an instance by defining one or more files and their contents. The personality structure is described below. Changing this rebuilds the existing server.\",\n       \"items\": {\n        \"properties\": {\n         \"content\": {\n          \"description\": \"The contents of the file. Limited to 255 bytes.\",\n          \"type\": \"string\"\n         },\n         \"file\": {\n          \"description\": \"The absolute path of the destination file.\",\n          \"type\": \"string\"\n         }\n        },\n        \"type\": \"object\"\n       },\n       \"type\": \"array\"\n      },\n      \"powerState\": {\n       \"description\": \"Provide the VM state. Only 'active', 'shutoff' and 'shelved_offloaded' are supported values. Note: If the initial power_state is the shutoff the VM will be stopped immediately after build and the provisioners like remote-exec or files are not supported.\",\n       \"type\": \"string\"\n      },\n      \"region\": {\n       \"description\": \"The region in which to create the server instance. If omitted, the region argument of the provider is used. Changing this creates a new server.\",\n       \"type\": \"string\"\n      },\n      \"schedulerHints\": {\n       \"description\": \"Provide the Nova scheduler with hints on how the instance should be launched. The available hints are described below.\",\n       \"items\": {\n        \"properties\": {\n         \"additionalProperties\": {\n          \"additionalProperties\": {\n           \"type\": \"string\"\n          },\n          \"description\": \"Arbitrary key/value pairs of additional properties to pass to the scheduler.\",\n          \"type\": \"object\"\n         },\n         \"buildNearHostIp\": {\n          \"description\": \"An IP Address in CIDR form. The instance will be placed on a compute node that is in the same subnet.\",\n          \"type\": \"string\"\n         },\n         \"differentCell\": {\n          \"description\": \"The names of cells where not to build the instance.\",\n          \"items\": {\n           \"type\": \"string\"\n          },\n          \"type\": \"array\"\n         },\n         \"differentHost\": {\n          \"description\": \"A list of instance UUIDs. The instance will be scheduled on a different host than all other instances.\",\n          \"items\": {\n           \"type\": \"string\"\n          },\n          \"type\": \"array\"\n         },\n         \"group\": {\n          \"description\": \"A UUID of a Server Group. The instance will be placed into that group.\",\n          \"type\": \"string\"\n         },\n         \"query\": {\n          \"description\": \"A conditional query that a compute node must pass in order to host an instance. The query must use the JsonFilter syntax which is described here. At this time, only simple queries are supported. Compound queries using and, or, or not are not supported. An example of a simple query is:\",\n          \"items\": {\n           \"type\": \"string\"\n          },\n          \"type\": \"array\"\n         },\n         \"sameHost\": {\n          \"description\": \"A list of instance UUIDs. The instance will be scheduled on the same host of those specified.\",\n          \"items\": {\n           \"type\": \"string\"\n          },\n          \"type\": \"array\"\n         },\n         \"targetCell\": {\n          \"description\": \"The name of a cell to host the instance.\",\n          \"type\": \"string\"\n         }\n        },\n        \"type\": \"object\"\n       },\n       \"type\": \"array\"\n      },\n      \"securityGroups\": {\n       \"description\": \"An array of one or more security group names to associate with the server. Changing this results in adding/removing security groups from the existing server. Note: When attaching the instance to networks using Ports, place the security groups on the Port and not the instance. Note: Names should be used and not ids, as ids trigger unnecessary updates.\",\n       \"items\": {\n        \"type\": \"string\"\n       },\n       \"type\": \"array\"\n      },\n      \"stopBeforeDestroy\": {\n       \"description\": \"Whether to try stop instance gracefully before destroying it, thus giving chance for guest OS daemons to stop correctly. If instance doesn't stop within timeout, it will be destroyed anyway.\",\n       \"type\": \"boolean\"\n      },\n      \"tags\": {\n       \"description\": \"A set of string tags for the instance. Changing this updates the existing instance tags.\",\n       \"items\": {\n        \"type\": \"string\"\n       },\n       \"type\": \"array\"\n      },\n      \"userData\": {\n       \"description\": \"The user data to provide when launching the instance. Changing this creates a new server.\",\n       \"type\": \"string\"\n      },\n      \"vendorOptions\": {\n       \"description\": \"Map of additional vendor-specific options. Supported options are described below.\",\n       \"items\": {\n        \"properties\": {\n         \"detachPortsBeforeDestroy\": {\n          \"description\": \"Whether to try to detach all attached ports to the vm before destroying it to make sure the port state is correct after the vm destruction. This is helpful when the port is not deleted.\",\n          \"type\": \"boolean\"\n         },\n         \"ignoreResizeConfirmation\": {\n          \"description\": \"Boolean to control whether to ignore manual confirmation of the instance resizing. This can be helpful to work with some OpenStack clouds which automatically confirm resizing of instances after some timeout.\",\n          \"type\": \"boolean\"\n         }\n        },\n        \"type\": \"object\"\n       },\n       \"type\": \"array\"\n      },\n      \"volume\": {\n       \"items\": {\n        \"properties\": {\n         \"device\": {\n          \"type\": \"string\"\n         },\n         \"id\": {\n          \"type\": \"string\"\n         },\n         \"volumeId\": {\n          \"type\": \"string\"\n         }\n        },\n        \"type\": \"object\"\n       },\n       \"type\": \"array\"\n      }\n     },\n     \"type\": \"object\"\n    },\n    \"initProvider\": {\n     \"description\": \"THIS IS A BETA FIELD. It will be honored unless the Management Policies feature flag is disabled. InitProvider holds the same fields as ForProvider, with the exception of Identifier and other resource reference fields. The fields that are in InitProvider are merged into ForProvider when the resource is created. The same fields are also added to the terraform ignore_changes hook, to avoid updating them after creation. This is useful for fields that are required on creation, but we do not desire to update them after creation, for example because of an external controller is managing them, like an autoscaler.\",\n     \"properties\": {\n      \"accessIpV4\": {\n       \"description\": \"The first detected Fixed IPv4 address.\",\n       \"type\": \"string\"\n      },\n      \"accessIpV6\": {\n       \"description\": \"The first detected Fixed IPv6 address.\",\n       \"type\": \"string\"\n      },\n      \"availabilityZone\": {\n       \"description\": \"The availability zone in which to create the server. Conflicts with availability_zone_hints. Changing this creates a new server.\",\n       \"type\": \"string\"\n      },\n      \"availabilityZoneHints\": {\n       \"description\": \"The availability zone in which to create the server. This argument is preferred to availability_zone, when scheduling the server on a particular host or node. Conflicts with availability_zone. Changing this creates a new server.\",\n       \"type\": \"string\"\n      },\n      \"blockDevice\": {\n       \"description\": \"Configuration of block devices. The block_device structure is documented below. Changing this creates a new server. You can specify multiple block devices which will create an instance with multiple disks. This configuration is very flexible, so please see the following reference for more information.\",\n       \"items\": {\n        \"properties\": {\n         \"bootIndex\": {\n          \"description\": \"The boot index of the volume. It defaults to 0. Changing this creates a new server.\",\n          \"type\": \"number\"\n         },\n         \"deleteOnTermination\": {\n          \"description\": \"Delete the volume / block device upon termination of the instance. Defaults to false. Changing this creates a new server.\",\n          \"type\": \"boolean\"\n         },\n         \"destinationType\": {\n          \"description\": \"The type that gets created. Possible values are \\\"volume\\\" and \\\"local\\\". Changing this creates a new server.\",\n          \"type\": \"string\"\n         },\n         \"deviceType\": {\n          \"description\": \"The low-level device type that will be used. Most common thing is to leave this empty. Changing this creates a new server.\",\n          \"type\": \"string\"\n         },\n         \"diskBus\": {\n          \"description\": \"The low-level disk bus that will be used. Most common thing is to leave this empty. Changing this creates a new server.\",\n          \"type\": \"string\"\n         },\n         \"guestFormat\": {\n          \"description\": \"Specifies the guest server disk file system format, such as ext2, ext3, ext4, xfs or swap. Swap block device mappings have the following restrictions: source_type must be blank and destination_type must be local and only one swap disk per server and the size of the swap disk must be less than or equal to the swap size of the flavor. Changing this creates a new server.\",\n          \"type\": \"string\"\n         },\n         \"multiattach\": {\n          \"description\": \"Enable the attachment of multiattach-capable volumes.\",\n          \"type\": \"boolean\"\n         },\n         \"sourceType\": {\n          \"description\": \"The source type of the device. Must be one of \\\"blank\\\", \\\"image\\\", \\\"volume\\\", or \\\"snapshot\\\". Changing this creates a new server.\",\n          \"type\": \"string\"\n         },\n         \"uuid\": {\n          \"description\": \"The UUID of the image, volume, or snapshot. Changing this creates a new server.\",\n          \"type\": \"string\"\n         },\n         \"volumeSize\": {\n          \"description\": \"The size of the volume to create (in gigabytes). Required in the following combinations: source=image and destination=volume, source=blank and destination=local, and source=blank and destination=volume. Changing this creates a new server.\",\n          \"type\": \"number\"\n         },\n         \"volumeType\": {\n          \"description\": \"The volume type that will be used, for example SSD or HDD storage. The available options depend on how your specific OpenStack cloud is configured and what classes of storage are provided. Changing this creates a new server.\",\n          \"type\": \"string\"\n         }\n        },\n        \"type\": \"object\"\n       },\n       \"type\": \"array\"\n      },\n      \"configDrive\": {\n       \"description\": \"Whether to use the config_drive feature to configure the instance. Changing this creates a new server.\",\n       \"type\": \"boolean\"\n      },\n      \"flavorId\": {\n       \"description\": \"The flavor ID of the desired flavor for the server. Changing this resizes the existing server.\",\n       \"type\": \"string\"\n      },\n      \"flavorName\": {\n       \"description\": \"The name of the desired flavor for the server. Changing this resizes the existing server.\",\n       \"type\": \"string\"\n      },\n      \"floatingIp\": {\n       \"type\": \"string\"\n      },\n      \"forceDelete\": {\n       \"description\": \"Whether to force the OpenStack instance to be forcefully deleted. This is useful for environments that have reclaim / soft deletion enabled.\",\n       \"type\": \"boolean\"\n      },\n      \"imageId\": {\n       \"description\": \"The image ID of the desired image for the server. Changing this rebuilds the existing server.\",\n       \"type\": \"string\"\n      },\n      \"imageName\": {\n       \"description\": \"The name of the desired image for the server. Changing this rebuilds the existing server.\",\n       \"type\": \"string\"\n      },\n      \"metadata\": {\n       \"additionalProperties\": {\n        \"type\": \"string\"\n       },\n       \"description\": \"Metadata key/value pairs to make available from within the instance. Changing this updates the existing server metadata.\",\n       \"type\": \"object\"\n      },\n      \"name\": {\n       \"description\": \"A unique name for the resource.\",\n       \"type\": \"string\"\n      },\n      \"network\": {\n       \"description\": \"An array of one or more networks to attach to the instance. The network object structure is documented below. Changing this creates a new server.\",\n       \"items\": {\n        \"properties\": {\n         \"accessNetwork\": {\n          \"description\": \"Specifies if this network should be used for provisioning access. Accepts true or false. Defaults to false.\",\n          \"type\": \"boolean\"\n         },\n         \"fixedIpV4\": {\n          \"description\": \"Specifies a fixed IPv4 address to be used on this network. Changing this creates a new server.\",\n          \"type\": \"string\"\n         },\n         \"fixedIpV6\": {\n          \"type\": \"string\"\n         },\n         \"floatingIp\": {\n          \"type\": \"string\"\n         },\n         \"name\": {\n          \"description\": \"The human-readable name of the network. Changing this creates a new server.\",\n          \"type\": \"string\"\n         },\n         \"port\": {\n          \"description\": \"The port UUID of a network to attach to the server. Changing this creates a new server.\",\n          \"type\": \"string\"\n         },\n         \"uuid\": {\n          \"description\": \"The network UUID to attach to the server. Changing this creates a new server.\",\n          \"type\": \"string\"\n         }\n        },\n        \"type\": \"object\"\n       },\n       \"type\": \"array\"\n      },\n      \"networkMode\": {\n       \"description\": \"Special string for network option to create the server. network_mode can be \\\"auto\\\" or \\\"none\\\". Please see the following reference for more information. Conflicts with network.\",\n       \"type\": \"string\"\n      },\n      \"personality\": {\n       \"description\": \"Customize the personality of an instance by defining one or more files and their contents. The personality structure is described below. Changing this rebuilds the existing server.\",\n       \"items\": {\n        \"properties\": {\n         \"content\": {\n          \"description\": \"The contents of the file. Limited to 255 bytes.\",\n          \"type\": \"string\"\n         },\n         \"file\": {\n          \"description\": \"The absolute path of the destination file.\",\n          \"type\": \"string\"\n         }\n        },\n        \"type\": \"object\"\n       },\n       \"type\": \"array\"\n      },\n      \"powerState\": {\n       \"description\": \"Provide the VM state. Only 'active', 'shutoff' and 'shelved_offloaded' are supported values. Note: If the initial power_state is the shutoff the VM will be stopped immediately after build and the provisioners like remote-exec or files are not supported.\",\n       \"type\": \"string\"\n      },\n      \"region\": {\n       \"description\": \"The region in which to create the server instance. If omitted, the region argument of the provider is used. Changing this creates a new server.\",\n       \"type\": \"string\"\n      },\n      \"schedulerHints\": {\n       \"description\": \"Provide the Nova scheduler with hints on how the instance should be launched. The available hints are described below.\",\n       \"items\": {\n        \"properties\": {\n         \"additionalProperties\": {\n          \"additionalProperties\": {\n           \"type\": \"string\"\n          },\n          \"description\": \"Arbitrary key/value pairs of additional properties to pass to the scheduler.\",\n          \"type\": \"object\"\n         },\n         \"buildNearHostIp\": {\n          \"description\": \"An IP Address in CIDR form. The instance will be placed on a compute node that is in the same subnet.\",\n          \"type\": \"string\"\n         },\n         \"differentCell\": {\n          \"description\": \"The names of cells where not to build the instance.\",\n          \"items\": {\n           \"type\": \"string\"\n          },\n          \"type\": \"array\"\n         },\n         \"differentHost\": {\n          \"description\": \"A list of instance UUIDs. The instance will be scheduled on a different host than all other instances.\",\n          \"items\": {\n           \"type\": \"string\"\n          },\n          \"type\": \"array\"\n         },\n         \"group\": {\n          \"description\": \"A UUID of a Server Group. The instance will be placed into that group.\",\n          \"type\": \"string\"\n         },\n         \"query\": {\n          \"description\": \"A conditional query that a compute node must pass in order to host an instance. The query must use the JsonFilter syntax which is described here. At this time, only simple queries are supported. Compound queries using and, or, or not are not supported. An example of a simple query is:\",\n          \"items\": {\n           \"type\": \"string\"\n          },\n          \"type\": \"array\"\n         },\n         \"sameHost\": {\n          \"description\": \"A list of instance UUIDs. The instance will be scheduled on the same host of those specified.\",\n          \"items\": {\n           \"type\": \"string\"\n          },\n          \"type\": \"array\"\n         },\n         \"targetCell\": {\n          \"description\": \"The name of a cell to host the instance.\",\n          \"type\": \"string\"\n         }\n        },\n        \"type\": \"object\"\n       },\n       \"type\": \"array\"\n      },\n      \"securityGroups\": {\n       \"description\": \"An array of one or more security group names to associate with the server. Changing this results in adding/removing security groups from the existing server. Note: When attaching the instance to networks using Ports, place the security groups on the Port and not the instance. Note: Names should be used and not ids, as ids trigger unnecessary updates.\",\n       \"items\": {\n        \"type\": \"string\"\n       },\n       \"type\": \"array\"\n      },\n      \"stopBeforeDestroy\": {\n       \"description\": \"Whether to try stop instance gracefully before destroying it, thus giving chance for guest OS daemons to stop correctly. If instance doesn't stop within timeout, it will be destroyed anyway.\",\n       \"type\": \"boolean\"\n      },\n      \"tags\": {\n       \"description\": \"A set of string tags for the instance. Changing this updates the existing instance tags.\",\n       \"items\": {\n        \"type\": \"string\"\n       },\n       \"type\": \"array\"\n      },\n      \"userData\": {\n       \"description\": \"The user data to provide when launching the instance. Changing this creates a new server.\",\n       \"type\": \"string\"\n      },\n      \"vendorOptions\": {\n       \"description\": \"Map of additional vendor-specific options. Supported options are described below.\",\n       \"items\": {\n        \"properties\": {\n         \"detachPortsBeforeDestroy\": {\n          \"description\": \"Whether to try to detach all attached ports to the vm before destroying it to make sure the port state is correct after the vm destruction. This is helpful when the port is not deleted.\",\n          \"type\": \"boolean\"\n         },\n         \"ignoreResizeConfirmation\": {\n          \"description\": \"Boolean to control whether to ignore manual confirmation of the instance resizing. This can be helpful to work with some OpenStack clouds which automatically confirm resizing of instances after some timeout.\",\n          \"type\": \"boolean\"\n         }\n        },\n        \"type\": \"object\"\n       },\n       \"type\": \"array\"\n      },\n      \"volume\": {\n       \"items\": {\n        \"properties\": {\n         \"device\": {\n          \"type\": \"string\"\n         },\n         \"id\": {\n          \"type\": \"string\"\n         },\n         \"volumeId\": {\n          \"type\": \"string\"\n         }\n        },\n        \"type\": \"object\"\n       },\n       \"type\": \"array\"\n      }\n     },\n     \"type\": \"object\"\n    },\n    \"managementPolicies\": {\n     \"default\": [\n      \"*\"\n     ],\n     \"description\": \"THIS IS A BETA FIELD. It is on by default but can be opted out through a Crossplane feature flag. ManagementPolicies specify the array of actions Crossplane is allowed to take on the managed and external resources. This field is planned to replace the DeletionPolicy field in a future release. Currently, both could be set independently and non-default values would be honored if the feature flag is enabled. If both are custom, the DeletionPolicy field will be ignored. See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223 and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md\",\n     \"items\": {\n      \"description\": \"A ManagementAction represents an action that the Crossplane controllers can take on an external resource.\",\n      \"enum\": [\n       \"Observe\",\n       \"Create\",\n       \"Update\",\n       \"Delete\",\n       \"LateInitialize\",\n       \"*\"\n      ],\n      \"type\": \"string\"\n     },\n     \"type\": \"array\"\n    },\n    \"providerConfigRef\": {\n     \"default\": {\n      \"name\": \"default\"\n     },\n     \"description\": \"ProviderConfigReference specifies how the provider that will be used to create, observe, update, and delete this managed resource should be configured.\",\n     \"properties\": {\n      \"name\": {\n       \"description\": \"Name of the referenced object.\",\n       \"type\": \"string\"\n      },\n      \"policy\": {\n       \"description\": \"Policies for referencing.\",\n       \"properties\": {\n        \"resolution\": {\n         \"default\": \"Required\",\n         \"description\": \"Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.\",\n         \"enum\": [\n          \"Required\",\n          \"Optional\"\n         ],\n         \"type\": \"string\"\n        },\n        \"resolve\": {\n         \"description\": \"Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.\",\n         \"enum\": [\n          \"Always\",\n          \"IfNotPresent\"\n         ],\n         \"type\": \"string\"\n        }\n       },\n       \"type\": \"object\"\n      }\n     },\n     \"required\": [\n      \"name\"\n     ],\n     \"type\": \"object\"\n    },\n    \"publishConnectionDetailsTo\": {\n     \"description\": \"PublishConnectionDetailsTo specifies the connection secret config which contains a name, metadata and a reference to secret store config to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource.\",\n     \"properties\": {\n      \"configRef\": {\n       \"default\": {\n        \"name\": \"default\"\n       },\n       \"description\": \"SecretStoreConfigRef specifies which secret store config should be used for this ConnectionSecret.\",\n       \"properties\": {\n        \"name\": {\n         \"description\": \"Name of the referenced object.\",\n         \"type\": \"string\"\n        },\n        \"policy\": {\n         \"description\": \"Policies for referencing.\",\n         \"properties\": {\n          \"resolution\": {\n           \"default\": \"Required\",\n           \"description\": \"Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.\",\n           \"enum\": [\n            \"Required\",\n            \"Optional\"\n           ],\n           \"type\": \"string\"\n          },\n          \"resolve\": {\n           \"description\": \"Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.\",\n           \"enum\": [\n            \"Always\",\n            \"IfNotPresent\"\n           ],\n           \"type\": \"string\"\n          }\n         },\n         \"type\": \"object\"\n        }\n       },\n       \"required\": [\n        \"name\"\n       ],\n       \"type\": \"object\"\n      },\n      \"metadata\": {\n       \"description\": \"Metadata is the metadata for connection secret.\",\n       \"properties\": {\n        \"annotations\": {\n         \"additionalProperties\": {\n          \"type\": \"string\"\n         },\n         \"description\": \"Annotations are the annotations to be added to connection secret. - For Kubernetes secrets, this will be used as \\\"metadata.annotations\\\". - It is up to Secret Store implementation for others store types.\",\n         \"type\": \"object\"\n        },\n        \"labels\": {\n         \"additionalProperties\": {\n          \"type\": \"string\"\n         },\n         \"description\": \"Labels are the labels/tags to be added to connection secret. - For Kubernetes secrets, this will be used as \\\"metadata.labels\\\". - It is up to Secret Store implementation for others store types.\",\n         \"type\": \"object\"\n        },\n        \"type\": {\n         \"description\": \"Type is the SecretType for the connection secret. - Only valid for Kubernetes Secret Stores.\",\n         \"type\": \"string\"\n        }\n       },\n       \"type\": \"object\"\n      },\n      \"name\": {\n       \"description\": \"Name is the name of the connection secret.\",\n       \"type\": \"string\"\n      }\n     },\n     \"required\": [\n      \"name\"\n     ],\n     \"type\": \"object\"\n    },\n    \"writeConnectionSecretToRef\": {\n     \"description\": \"WriteConnectionSecretToReference specifies the namespace and name of a Secret to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource. This field is planned to be replaced in a future release in favor of PublishConnectionDetailsTo. Currently, both could be set independently and connection details would be published to both without affecting each other.\",\n     \"properties\": {\n      \"name\": {\n       \"description\": \"Name of the secret.\",\n       \"type\": \"string\"\n      },\n      \"namespace\": {\n       \"description\": \"Namespace of the secret.\",\n       \"type\": \"string\"\n      }\n     },\n     \"required\": [\n      \"name\",\n      \"namespace\"\n     ],\n     \"type\": \"object\"\n    }\n   },\n   \"required\": [\n    \"forProvider\"\n   ],\n   \"type\": \"object\",\n   \"x-kubernetes-validations\": [\n    {\n     \"message\": \"spec.forProvider.name is a required parameter\",\n     \"rule\": \"!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.name) || (has(self.initProvider) \\u0026\\u0026 has(self.initProvider.name))\"\n    }\n   ]\n  }\n },\n \"required\": [\n  \"spec\"\n ],\n \"title\": \"Instance V2\",\n \"type\": \"object\"\n}"
  }
 }