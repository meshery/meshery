{"kind":"Probe","apiVersion":"monitoring.backyards.banzaicloud.io/v1","displayName":"Probe","format":"JSON","hostname":"","hostID":"00000000-0000-0000-0000-000000000000","displayhostname":"","metadata":{"capabilities":"","genealogy":"","isAnnotation":false,"isModelAnnotation":"FALSE","isNamespaced":true,"logoURL":"","model":"backyards-operator","modelDisplayName":"Backyards Operator","primaryColor":"#00B39F","published":false,"secondaryColor":"#00D3A9","shape":"circle","styleOverrides":"","subCategory":"Uncategorized","svgColor":"","svgComplete":"","svgWhite":""},"model":{"name":"backyards-operator","version":"1.5.5","displayName":"Backyards Operator","hostname":"","hostID":"00000000-0000-0000-0000-000000000000","displayhostname":"","category":{"name":"Uncategorized","metadata":null},"metadata":{"isAnnotation":false,"source_uri":"https://kubernetes-charts.banzaicloud.com/charts/backyards-operator-1.5.5.tgz"},"components":null,"relationships":null},"schema":"{\n \"description\": \"Probe defines monitoring for a set of static targets or ingresses.\",\n \"properties\": {\n  \"spec\": {\n   \"description\": \"Specification of desired Ingress selection for target discovery by Prometheus.\",\n   \"properties\": {\n    \"interval\": {\n     \"description\": \"Interval at which targets are probed using the configured prober. If not specified Prometheus' global scrape interval is used.\",\n     \"type\": \"string\"\n    },\n    \"jobName\": {\n     \"description\": \"The job name assigned to scraped metrics by default.\",\n     \"type\": \"string\"\n    },\n    \"module\": {\n     \"description\": \"The module to use for probing specifying how to probe the target. Example module configuring in the blackbox exporter: https://github.com/prometheus/blackbox_exporter/blob/master/example.yml\",\n     \"type\": \"string\"\n    },\n    \"prober\": {\n     \"description\": \"Specification for the prober to use for probing targets. The prober.URL parameter is required. Targets cannot be probed if left empty.\",\n     \"properties\": {\n      \"path\": {\n       \"description\": \"Path to collect metrics from. Defaults to `/probe`.\",\n       \"type\": \"string\"\n      },\n      \"scheme\": {\n       \"description\": \"HTTP scheme to use for scraping. Defaults to `http`.\",\n       \"type\": \"string\"\n      },\n      \"url\": {\n       \"description\": \"Mandatory URL of the prober.\",\n       \"type\": \"string\"\n      }\n     },\n     \"required\": [\n      \"url\"\n     ],\n     \"type\": \"object\"\n    },\n    \"scrapeTimeout\": {\n     \"description\": \"Timeout for scraping metrics from the Prometheus exporter.\",\n     \"type\": \"string\"\n    },\n    \"targets\": {\n     \"description\": \"Targets defines a set of static and/or dynamically discovered targets to be probed using the prober.\",\n     \"properties\": {\n      \"ingress\": {\n       \"description\": \"Ingress defines the set of dynamically discovered ingress objects which hosts are considered for probing.\",\n       \"properties\": {\n        \"namespaceSelector\": {\n         \"description\": \"Select Ingress objects by namespace.\",\n         \"properties\": {\n          \"any\": {\n           \"description\": \"Boolean describing whether all namespaces are selected in contrast to a list restricting them.\",\n           \"type\": \"boolean\"\n          },\n          \"matchNames\": {\n           \"description\": \"List of namespace names.\",\n           \"items\": {\n            \"type\": \"string\"\n           },\n           \"type\": \"array\"\n          }\n         },\n         \"type\": \"object\"\n        },\n        \"relabelingConfigs\": {\n         \"description\": \"RelabelConfigs to apply to samples before ingestion. More info: https://prometheus.io/docs/prometheus/latest/configuration/configuration/#relabel_config\",\n         \"items\": {\n          \"description\": \"RelabelConfig allows dynamic rewriting of the label set, being applied to samples before ingestion. It defines `\\u003cmetric_relabel_configs\\u003e`-section of Prometheus configuration. More info: https://prometheus.io/docs/prometheus/latest/configuration/configuration/#metric_relabel_configs\",\n          \"properties\": {\n           \"action\": {\n            \"description\": \"Action to perform based on regex matching. Default is 'replace'\",\n            \"type\": \"string\"\n           },\n           \"modulus\": {\n            \"description\": \"Modulus to take of the hash of the source label values.\",\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n           },\n           \"regex\": {\n            \"description\": \"Regular expression against which the extracted value is matched. Default is '(.*)'\",\n            \"type\": \"string\"\n           },\n           \"replacement\": {\n            \"description\": \"Replacement value against which a regex replace is performed if the regular expression matches. Regex capture groups are available. Default is '$1'\",\n            \"type\": \"string\"\n           },\n           \"separator\": {\n            \"description\": \"Separator placed between concatenated source label values. default is ';'.\",\n            \"type\": \"string\"\n           },\n           \"sourceLabels\": {\n            \"description\": \"The source labels select values from existing labels. Their content is concatenated using the configured separator and matched against the configured regular expression for the replace, keep, and drop actions.\",\n            \"items\": {\n             \"type\": \"string\"\n            },\n            \"type\": \"array\"\n           },\n           \"targetLabel\": {\n            \"description\": \"Label to which the resulting value is written in a replace action. It is mandatory for replace actions. Regex capture groups are available.\",\n            \"type\": \"string\"\n           }\n          },\n          \"type\": \"object\"\n         },\n         \"type\": \"array\"\n        },\n        \"selector\": {\n         \"description\": \"Select Ingress objects by labels.\",\n         \"properties\": {\n          \"matchExpressions\": {\n           \"description\": \"matchExpressions is a list of label selector requirements. The requirements are ANDed.\",\n           \"items\": {\n            \"description\": \"A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.\",\n            \"properties\": {\n             \"key\": {\n              \"description\": \"key is the label key that the selector applies to.\",\n              \"type\": \"string\"\n             },\n             \"operator\": {\n              \"description\": \"operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.\",\n              \"type\": \"string\"\n             },\n             \"values\": {\n              \"description\": \"values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.\",\n              \"items\": {\n               \"type\": \"string\"\n              },\n              \"type\": \"array\"\n             }\n            },\n            \"required\": [\n             \"key\",\n             \"operator\"\n            ],\n            \"type\": \"object\"\n           },\n           \"type\": \"array\"\n          },\n          \"matchLabels\": {\n           \"additionalProperties\": {\n            \"type\": \"string\"\n           },\n           \"description\": \"matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \\\"key\\\", the operator is \\\"In\\\", and the values array contains only \\\"value\\\". The requirements are ANDed.\",\n           \"type\": \"object\"\n          }\n         },\n         \"type\": \"object\"\n        }\n       },\n       \"type\": \"object\"\n      },\n      \"staticConfig\": {\n       \"description\": \"StaticConfig defines static targets which are considers for probing. More info: https://prometheus.io/docs/prometheus/latest/configuration/configuration/#static_config.\",\n       \"properties\": {\n        \"labels\": {\n         \"additionalProperties\": {\n          \"type\": \"string\"\n         },\n         \"description\": \"Labels assigned to all metrics scraped from the targets.\",\n         \"type\": \"object\"\n        },\n        \"static\": {\n         \"description\": \"Targets is a list of URLs to probe using the configured prober.\",\n         \"items\": {\n          \"type\": \"string\"\n         },\n         \"type\": \"array\"\n        }\n       },\n       \"type\": \"object\"\n      }\n     },\n     \"type\": \"object\"\n    }\n   },\n   \"type\": \"object\"\n  }\n },\n \"required\": [\n  \"spec\"\n ],\n \"title\": \"Probe\",\n \"type\": \"object\"\n}"}