{
  "capabilities": null,
  "component": {
   "kind": "IngressRouteTCP",
   "schema": "{\n \"description\": \"IngressRouteTCP is an Ingress CRD specification.\",\n \"properties\": {\n  \"spec\": {\n   \"description\": \"IngressRouteTCPSpec is a specification for a IngressRouteTCPSpec resource.\",\n   \"properties\": {\n    \"entryPoints\": {\n     \"items\": {\n      \"type\": \"string\"\n     },\n     \"type\": \"array\"\n    },\n    \"routes\": {\n     \"items\": {\n      \"description\": \"RouteTCP contains the set of routes.\",\n      \"properties\": {\n       \"match\": {\n        \"type\": \"string\"\n       },\n       \"middlewares\": {\n        \"description\": \"Middlewares contains references to MiddlewareTCP resources.\",\n        \"items\": {\n         \"description\": \"ObjectReference is a generic reference to a Traefik resource.\",\n         \"properties\": {\n          \"name\": {\n           \"type\": \"string\"\n          },\n          \"namespace\": {\n           \"type\": \"string\"\n          }\n         },\n         \"required\": [\n          \"name\"\n         ],\n         \"type\": \"object\"\n        },\n        \"type\": \"array\"\n       },\n       \"services\": {\n        \"items\": {\n         \"description\": \"ServiceTCP defines an upstream to proxy traffic.\",\n         \"properties\": {\n          \"name\": {\n           \"type\": \"string\"\n          },\n          \"namespace\": {\n           \"type\": \"string\"\n          },\n          \"port\": {\n           \"anyOf\": [\n            {\n             \"type\": \"integer\"\n            },\n            {\n             \"type\": \"string\"\n            }\n           ],\n           \"x-kubernetes-int-or-string\": true\n          },\n          \"proxyProtocol\": {\n           \"description\": \"ProxyProtocol holds the ProxyProtocol configuration.\",\n           \"properties\": {\n            \"version\": {\n             \"type\": \"integer\"\n            }\n           },\n           \"type\": \"object\"\n          },\n          \"terminationDelay\": {\n           \"type\": \"integer\"\n          },\n          \"weight\": {\n           \"type\": \"integer\"\n          }\n         },\n         \"required\": [\n          \"name\",\n          \"port\"\n         ],\n         \"type\": \"object\"\n        },\n        \"type\": \"array\"\n       }\n      },\n      \"required\": [\n       \"match\"\n      ],\n      \"type\": \"object\"\n     },\n     \"type\": \"array\"\n    },\n    \"tls\": {\n     \"description\": \"TLSTCP contains the TLS certificates configuration of the routes. To enable Let's Encrypt, use an empty TLS struct, e.g. in YAML: \\n \\t tls: {} # inline format \\n \\t tls: \\t   secretName: # block format\",\n     \"properties\": {\n      \"certResolver\": {\n       \"type\": \"string\"\n      },\n      \"domains\": {\n       \"items\": {\n        \"description\": \"Domain holds a domain name with SANs.\",\n        \"properties\": {\n         \"main\": {\n          \"type\": \"string\"\n         },\n         \"sans\": {\n          \"items\": {\n           \"type\": \"string\"\n          },\n          \"type\": \"array\"\n         }\n        },\n        \"type\": \"object\"\n       },\n       \"type\": \"array\"\n      },\n      \"options\": {\n       \"description\": \"Options is a reference to a TLSOption, that specifies the parameters of the TLS connection.\",\n       \"properties\": {\n        \"name\": {\n         \"type\": \"string\"\n        },\n        \"namespace\": {\n         \"type\": \"string\"\n        }\n       },\n       \"required\": [\n        \"name\"\n       ],\n       \"type\": \"object\"\n      },\n      \"passthrough\": {\n       \"type\": \"boolean\"\n      },\n      \"secretName\": {\n       \"description\": \"SecretName is the name of the referenced Kubernetes Secret to specify the certificate details.\",\n       \"type\": \"string\"\n      },\n      \"store\": {\n       \"description\": \"Store is a reference to a TLSStore, that specifies the parameters of the TLS store.\",\n       \"properties\": {\n        \"name\": {\n         \"type\": \"string\"\n        },\n        \"namespace\": {\n         \"type\": \"string\"\n        }\n       },\n       \"required\": [\n        \"name\"\n       ],\n       \"type\": \"object\"\n      }\n     },\n     \"type\": \"object\"\n    }\n   },\n   \"required\": [\n    \"routes\"\n   ],\n   \"type\": \"object\"\n  }\n },\n \"required\": [\n  \"metadata\",\n  \"spec\"\n ],\n \"title\": \"Ingress Route TCP\",\n \"type\": \"object\"\n}",
   "version": "traefik.containo.us/v1alpha1"
  },
  "configuration": null,
  "description": "",
  "displayName": "Ingress Route TCP",
  "format": "JSON",
  "id": "00000000-0000-0000-0000-000000000000",
  "metadata": {
   "defaultData": "",
   "genealogy": "",
   "isAnnotation": false,
   "published": false,
   "shapePolygonPoints": "",
   "styleOverrides": "",
   "styles": ""
  },
  "model": {
   "category": {
    "name": "Uncategorized"
   },
   "displayName": "Voice Biometrics",
   "id": "00000000-0000-0000-0000-000000000000",
   "metadata": {
    "defaultData": "",
    "isAnnotation": false,
    "primaryColor": "#00B39F",
    "secondaryColor": "#00D3A9",
    "shape": "circle",
    "shapePolygonPoints": "",
    "styleOverrides": "",
    "styles": "",
    "svgColor": "",
    "svgComplete": "",
    "svgWhite": ""
   },
   "model": {
    "version": "2.0.1"
   },
   "name": "voice-biometrics",
   "registrant": {
    "created_at": "0001-01-01T00:00:00Z",
    "credential_id": "00000000-0000-0000-0000-000000000000",
    "deleted_at": "0001-01-01T00:00:00Z",
    "id": "00000000-0000-0000-0000-000000000000",
    "kind": "artifacthub",
    "name": "Artifact Hub",
    "status": "discovered",
    "sub_type": "",
    "type": "registry",
    "updated_at": "0001-01-01T00:00:00Z",
    "user_id": "00000000-0000-0000-0000-000000000000"
   },
   "connection_id": "00000000-0000-0000-0000-000000000000",
   "schemaVersion": "models.meshery.io/v1beta1",
   "status": "ignored",
   "subCategory": "Uncategorized",
   "version": "v1.0.0",
   "components": null,
   "relationships": null
  },
  "schemaVersion": "components.meshery.io/v1beta1",
  "status": "ignored",
  "styles": {
   "primaryColor": "#00B39F",
   "secondaryColor": "#00D3A9",
   "shape": "circle",
   "svgColor": "",
   "svgWhite": ""
  },
  "version": "v1.0.0"
 }