{"kind":"Device","apiVersion":"devices.kubeedge.io/v1alpha2","displayName":"Device","format":"JSON","hostname":"","hostID":"00000000-0000-0000-0000-000000000000","displayhostname":"","metadata":{"capabilities":"","genealogy":"","isAnnotation":false,"isModelAnnotation":"FALSE","isNamespaced":true,"logoURL":"","model":"cloudcore","modelDisplayName":"Cloudcore","primaryColor":"#00B39F","published":false,"secondaryColor":"#00D3A9","shape":"circle","styleOverrides":"","subCategory":"Cloud Native Network","svgColor":"","svgComplete":"","svgWhite":""},"model":{"name":"cloudcore","version":"0.1.1","displayName":"Cloudcore","hostname":"","hostID":"00000000-0000-0000-0000-000000000000","displayhostname":"","category":{"name":"Cloud Native Network","metadata":null},"metadata":{"source_uri":"https://github.com/web-seven/kubeedge/releases/download/cloudcore-0.1.1/cloudcore-0.1.1.tgz"},"components":null,"relationships":null},"schema":"{\n \"description\": \"Device is the Schema for the devices API\",\n \"properties\": {\n  \"spec\": {\n   \"description\": \"DeviceSpec represents a single device instance. It is an instantation of a device model.\",\n   \"properties\": {\n    \"data\": {\n     \"description\": \"Data section describe a list of time-series properties which should be processed on edge node.\",\n     \"properties\": {\n      \"dataProperties\": {\n       \"description\": \"Required: A list of data properties, which are not required to be processed by edgecore\",\n       \"items\": {\n        \"description\": \"DataProperty represents the device property for external use.\",\n        \"properties\": {\n         \"metadata\": {\n          \"additionalProperties\": {\n           \"type\": \"string\"\n          },\n          \"description\": \"Additional metadata like timestamp when the value was reported etc.\",\n          \"type\": \"object\"\n         },\n         \"propertyName\": {\n          \"description\": \"Required: The property name for which should be processed by external apps. This property should be present in the device model.\",\n          \"type\": \"string\"\n         }\n        },\n        \"type\": \"object\"\n       },\n       \"type\": \"array\"\n      },\n      \"dataTopic\": {\n       \"description\": \"Topic used by mapper, all data collected from dataProperties should be published to this topic, the default value is $ke/events/device/+/data/update\",\n       \"type\": \"string\"\n      }\n     },\n     \"type\": \"object\"\n    },\n    \"deviceModelRef\": {\n     \"description\": \"Required: DeviceModelRef is reference to the device model used as a template to create the device instance.\",\n     \"properties\": {\n      \"name\": {\n       \"description\": \"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?\",\n       \"type\": \"string\"\n      }\n     },\n     \"type\": \"object\"\n    },\n    \"nodeSelector\": {\n     \"description\": \"NodeSelector indicates the binding preferences between devices and nodes. Refer to k8s.io/kubernetes/pkg/apis/core NodeSelector for more details\",\n     \"properties\": {\n      \"nodeSelectorTerms\": {\n       \"description\": \"Required. A list of node selector terms. The terms are ORed.\",\n       \"items\": {\n        \"description\": \"A null or empty node selector term matches no objects. The requirements of them are ANDed. The TopologySelectorTerm type implements a subset of the NodeSelectorTerm.\",\n        \"properties\": {\n         \"matchExpressions\": {\n          \"description\": \"A list of node selector requirements by node's labels.\",\n          \"items\": {\n           \"description\": \"A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.\",\n           \"properties\": {\n            \"key\": {\n             \"description\": \"The label key that the selector applies to.\",\n             \"type\": \"string\"\n            },\n            \"operator\": {\n             \"description\": \"Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.\",\n             \"type\": \"string\"\n            },\n            \"values\": {\n             \"description\": \"An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.\",\n             \"items\": {\n              \"type\": \"string\"\n             },\n             \"type\": \"array\"\n            }\n           },\n           \"required\": [\n            \"key\",\n            \"operator\"\n           ],\n           \"type\": \"object\"\n          },\n          \"type\": \"array\"\n         },\n         \"matchFields\": {\n          \"description\": \"A list of node selector requirements by node's fields.\",\n          \"items\": {\n           \"description\": \"A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.\",\n           \"properties\": {\n            \"key\": {\n             \"description\": \"The label key that the selector applies to.\",\n             \"type\": \"string\"\n            },\n            \"operator\": {\n             \"description\": \"Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.\",\n             \"type\": \"string\"\n            },\n            \"values\": {\n             \"description\": \"An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.\",\n             \"items\": {\n              \"type\": \"string\"\n             },\n             \"type\": \"array\"\n            }\n           },\n           \"required\": [\n            \"key\",\n            \"operator\"\n           ],\n           \"type\": \"object\"\n          },\n          \"type\": \"array\"\n         }\n        },\n        \"type\": \"object\"\n       },\n       \"type\": \"array\"\n      }\n     },\n     \"required\": [\n      \"nodeSelectorTerms\"\n     ],\n     \"type\": \"object\"\n    },\n    \"propertyVisitors\": {\n     \"description\": \"List of property visitors which describe how to access the device properties. PropertyVisitors must unique by propertyVisitor.propertyName.\",\n     \"items\": {\n      \"description\": \"DevicePropertyVisitor describes the specifics of accessing a particular device property. Visitors are intended to be consumed by device mappers which connect to devices and collect data / perform actions on the device.\",\n      \"properties\": {\n       \"bluetooth\": {\n        \"description\": \"Bluetooth represents a set of additional visitor config fields of bluetooth protocol.\",\n        \"properties\": {\n         \"characteristicUUID\": {\n          \"description\": \"Required: Unique ID of the corresponding operation\",\n          \"type\": \"string\"\n         },\n         \"dataConverter\": {\n          \"description\": \"Responsible for converting the data being read from the bluetooth device into a form that is understandable by the platform\",\n          \"properties\": {\n           \"endIndex\": {\n            \"description\": \"Required: Specifies the end index of incoming byte stream to be considered to convert the data the value specified should be inclusive for example if 3 is specified it includes the third index\",\n            \"type\": \"integer\"\n           },\n           \"orderOfOperations\": {\n            \"description\": \"Specifies in what order the operations(which are required to be performed to convert incoming data into understandable form) are performed\",\n            \"items\": {\n             \"description\": \"Specify the operation that should be performed to convert incoming data into understandable form\",\n             \"properties\": {\n              \"operationType\": {\n               \"description\": \"Required: Specifies the operation to be performed to convert incoming data\",\n               \"type\": \"string\"\n              },\n              \"operationValue\": {\n               \"description\": \"Required: Specifies with what value the operation is to be performed\",\n               \"type\": \"number\"\n              }\n             },\n             \"type\": \"object\"\n            },\n            \"type\": \"array\"\n           },\n           \"shiftLeft\": {\n            \"description\": \"Refers to the number of bits to shift left, if left-shift operation is necessary for conversion\",\n            \"type\": \"integer\"\n           },\n           \"shiftRight\": {\n            \"description\": \"Refers to the number of bits to shift right, if right-shift operation is necessary for conversion\",\n            \"type\": \"integer\"\n           },\n           \"startIndex\": {\n            \"description\": \"Required: Specifies the start index of the incoming byte stream to be considered to convert the data. For example: start-index:2, end-index:3 concatenates the value present at second and third index of the incoming byte stream. If we want to reverse the order we can give it as start-index:3, end-index:2\",\n            \"type\": \"integer\"\n           }\n          },\n          \"type\": \"object\"\n         },\n         \"dataWrite\": {\n          \"additionalProperties\": {\n           \"format\": \"byte\",\n           \"type\": \"string\"\n          },\n          \"description\": \"Responsible for converting the data coming from the platform into a form that is understood by the bluetooth device For example: \\\"ON\\\":[1], \\\"OFF\\\":[0]\",\n          \"type\": \"object\"\n         }\n        },\n        \"type\": \"object\"\n       },\n       \"collectCycle\": {\n        \"description\": \"Define how frequent mapper will collect from device.\",\n        \"format\": \"int64\",\n        \"type\": \"integer\"\n       },\n       \"customizedProtocol\": {\n        \"description\": \"CustomizedProtocol represents a set of visitor config fields of bluetooth protocol.\",\n        \"properties\": {\n         \"configData\": {\n          \"description\": \"Required: The configData of customized protocol\",\n          \"format\": \"textarea\",\n          \"type\": \"string\"\n         },\n         \"protocolName\": {\n          \"description\": \"Required: name of customized protocol\",\n          \"type\": \"string\"\n         }\n        },\n        \"type\": \"object\"\n       },\n       \"customizedValues\": {\n        \"description\": \"Customized values for visitor of provided protocols\",\n        \"format\": \"textarea\",\n        \"type\": \"string\"\n       },\n       \"modbus\": {\n        \"description\": \"Modbus represents a set of additional visitor config fields of modbus protocol.\",\n        \"properties\": {\n         \"isRegisterSwap\": {\n          \"description\": \"Indicates whether the high and low register swapped. Defaults to false.\",\n          \"type\": \"boolean\"\n         },\n         \"isSwap\": {\n          \"description\": \"Indicates whether the high and low byte swapped. Defaults to false.\",\n          \"type\": \"boolean\"\n         },\n         \"limit\": {\n          \"description\": \"Required: Limit number of registers to read/write.\",\n          \"format\": \"int64\",\n          \"type\": \"integer\"\n         },\n         \"offset\": {\n          \"description\": \"Required: Offset indicates the starting register number to read/write data.\",\n          \"format\": \"int64\",\n          \"type\": \"integer\"\n         },\n         \"register\": {\n          \"description\": \"Required: Type of register\",\n          \"enum\": [\n           \"CoilRegister\",\n           \"DiscreteInputRegister\",\n           \"InputRegister\",\n           \"HoldingRegister\"\n          ],\n          \"type\": \"string\"\n         },\n         \"scale\": {\n          \"description\": \"The scale to convert raw property data into final units. Defaults to 1.0\",\n          \"type\": \"number\"\n         }\n        },\n        \"type\": \"object\"\n       },\n       \"opcua\": {\n        \"description\": \"Opcua represents a set of additional visitor config fields of opc-ua protocol.\",\n        \"properties\": {\n         \"browseName\": {\n          \"description\": \"The name of opc-ua node\",\n          \"type\": \"string\"\n         },\n         \"nodeID\": {\n          \"description\": \"Required: The ID of opc-ua node, e.g. \\\"ns=1,i=1005\\\"\",\n          \"type\": \"string\"\n         }\n        },\n        \"type\": \"object\"\n       },\n       \"propertyName\": {\n        \"description\": \"Required: The device property name to be accessed. This should refer to one of the device properties defined in the device model.\",\n        \"type\": \"string\"\n       },\n       \"reportCycle\": {\n        \"description\": \"Define how frequent mapper will report the value.\",\n        \"format\": \"int64\",\n        \"type\": \"integer\"\n       }\n      },\n      \"type\": \"object\"\n     },\n     \"type\": \"array\"\n    },\n    \"protocol\": {\n     \"description\": \"Required: The protocol configuration used to connect to the device.\",\n     \"properties\": {\n      \"bluetooth\": {\n       \"description\": \"Protocol configuration for bluetooth\",\n       \"properties\": {\n        \"macAddress\": {\n         \"description\": \"Unique identifier assigned to the device.\",\n         \"type\": \"string\"\n        }\n       },\n       \"type\": \"object\"\n      },\n      \"common\": {\n       \"description\": \"Configuration for protocol common part\",\n       \"properties\": {\n        \"collectRetryTimes\": {\n         \"description\": \"Define retry times of mapper will collect from device.\",\n         \"format\": \"int64\",\n         \"type\": \"integer\"\n        },\n        \"collectTimeout\": {\n         \"description\": \"Define timeout of mapper collect from device.\",\n         \"format\": \"int64\",\n         \"type\": \"integer\"\n        },\n        \"collectType\": {\n         \"description\": \"Define collect type, sync or async.\",\n         \"enum\": [\n          \"sync\",\n          \"async\"\n         ],\n         \"type\": \"string\"\n        },\n        \"com\": {\n         \"properties\": {\n          \"baudRate\": {\n           \"description\": \"Required. BaudRate 115200|57600|38400|19200|9600|4800|2400|1800|1200|600|300|200|150|134|110|75|50\",\n           \"enum\": [\n            115200,\n            57600,\n            38400,\n            19200,\n            9600,\n            4800,\n            2400,\n            1800,\n            1200,\n            600,\n            300,\n            200,\n            150,\n            134,\n            110,\n            75,\n            50\n           ],\n           \"format\": \"int64\",\n           \"type\": \"integer\"\n          },\n          \"dataBits\": {\n           \"description\": \"Required. Valid values are 8, 7, 6, 5.\",\n           \"enum\": [\n            8,\n            7,\n            6,\n            5\n           ],\n           \"format\": \"int64\",\n           \"type\": \"integer\"\n          },\n          \"parity\": {\n           \"description\": \"Required. Valid options are \\\"none\\\", \\\"even\\\", \\\"odd\\\". Defaults to \\\"none\\\".\",\n           \"enum\": [\n            \"none\",\n            \"even\",\n            \"odd\"\n           ],\n           \"type\": \"string\"\n          },\n          \"serialPort\": {\n           \"description\": \"Required.\",\n           \"type\": \"string\"\n          },\n          \"stopBits\": {\n           \"description\": \"Required. Bit that stops 1|2\",\n           \"enum\": [\n            1,\n            2\n           ],\n           \"format\": \"int64\",\n           \"type\": \"integer\"\n          }\n         },\n         \"type\": \"object\"\n        },\n        \"commType\": {\n         \"description\": \"Communication type, like tcp client, tcp server or COM\",\n         \"type\": \"string\"\n        },\n        \"customizedValues\": {\n         \"description\": \"Customized values for provided protocol\",\n         \"format\": \"textarea\",\n         \"type\": \"string\"\n        },\n        \"reconnRetryTimes\": {\n         \"description\": \"Reconnecting retry times\",\n         \"format\": \"int64\",\n         \"type\": \"integer\"\n        },\n        \"reconnTimeout\": {\n         \"description\": \"Reconnection timeout\",\n         \"format\": \"int64\",\n         \"type\": \"integer\"\n        },\n        \"tcp\": {\n         \"properties\": {\n          \"ip\": {\n           \"description\": \"Required.\",\n           \"type\": \"string\"\n          },\n          \"port\": {\n           \"description\": \"Required.\",\n           \"format\": \"int64\",\n           \"type\": \"integer\"\n          }\n         },\n         \"type\": \"object\"\n        }\n       },\n       \"type\": \"object\"\n      },\n      \"customizedProtocol\": {\n       \"description\": \"Configuration for customized protocol\",\n       \"properties\": {\n        \"configData\": {\n         \"description\": \"Any config data\",\n         \"format\": \"textarea\",\n         \"type\": \"string\"\n        },\n        \"protocolName\": {\n         \"description\": \"Unique protocol name Required.\",\n         \"type\": \"string\"\n        }\n       },\n       \"type\": \"object\"\n      },\n      \"modbus\": {\n       \"description\": \"Protocol configuration for modbus\",\n       \"properties\": {\n        \"slaveID\": {\n         \"description\": \"Required. 0-255\",\n         \"format\": \"int64\",\n         \"type\": \"integer\"\n        }\n       },\n       \"type\": \"object\"\n      },\n      \"opcua\": {\n       \"description\": \"Protocol configuration for opc-ua\",\n       \"properties\": {\n        \"certificate\": {\n         \"description\": \"Certificate for access opc server.\",\n         \"type\": \"string\"\n        },\n        \"password\": {\n         \"description\": \"Password for access opc server.\",\n         \"type\": \"string\"\n        },\n        \"privateKey\": {\n         \"description\": \"PrivateKey for access opc server.\",\n         \"type\": \"string\"\n        },\n        \"securityMode\": {\n         \"description\": \"Defaults to \\\"none\\\".\",\n         \"type\": \"string\"\n        },\n        \"securityPolicy\": {\n         \"description\": \"Defaults to \\\"none\\\".\",\n         \"type\": \"string\"\n        },\n        \"timeout\": {\n         \"description\": \"Timeout seconds for the opc server connection.???\",\n         \"format\": \"int64\",\n         \"type\": \"integer\"\n        },\n        \"url\": {\n         \"description\": \"Required: The URL for opc server endpoint.\",\n         \"type\": \"string\"\n        },\n        \"userName\": {\n         \"description\": \"Username for access opc server.\",\n         \"type\": \"string\"\n        }\n       },\n       \"type\": \"object\"\n      }\n     },\n     \"type\": \"object\"\n    }\n   },\n   \"type\": \"object\"\n  }\n },\n \"title\": \"Device\",\n \"type\": \"object\"\n}"}