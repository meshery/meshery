{"kind":"EdgeApplication","apiVersion":"apps.kubeedge.io/v1alpha1","displayName":"Edge Application","format":"JSON","hostname":"","hostID":"00000000-0000-0000-0000-000000000000","displayhostname":"","metadata":{"capabilities":"","genealogy":"","isAnnotation":false,"isModelAnnotation":"FALSE","isNamespaced":true,"logoURL":"","model":"cloudcore","modelDisplayName":"Cloudcore","primaryColor":"#00B39F","published":false,"secondaryColor":"#00D3A9","shape":"circle","styleOverrides":"","subCategory":"Cloud Native Network","svgColor":"","svgComplete":"","svgWhite":""},"model":{"name":"cloudcore","version":"0.1.1","displayName":"Cloudcore","hostname":"","hostID":"00000000-0000-0000-0000-000000000000","displayhostname":"","category":{"name":"Cloud Native Network","metadata":null},"metadata":{"source_uri":"https://github.com/web-seven/kubeedge/releases/download/cloudcore-0.1.1/cloudcore-0.1.1.tgz"},"components":null,"relationships":null},"schema":"{\n \"description\": \"EdgeApplication is the Schema for the edgeapplications API\",\n \"properties\": {\n  \"spec\": {\n   \"description\": \"Spec represents the desired behavior of EdgeApplication.\",\n   \"properties\": {\n    \"workloadScope\": {\n     \"description\": \"WorkloadScope represents which node groups the workload will be deployed in.\",\n     \"properties\": {\n      \"targetNodeGroups\": {\n       \"description\": \"TargetNodeGroups represents the target node groups of workload to be deployed.\",\n       \"items\": {\n        \"description\": \"TargetNodeGroup represents the target node group of workload to be deployed, including override rules to apply for this node group.\",\n        \"properties\": {\n         \"name\": {\n          \"description\": \"Name represents the name of target node group\",\n          \"type\": \"string\"\n         },\n         \"overriders\": {\n          \"description\": \"Overriders represents the override rules that would apply on workload.\",\n          \"properties\": {\n           \"imageOverriders\": {\n            \"description\": \"ImageOverriders represents the rules dedicated to handling image overrides.\",\n            \"items\": {\n             \"description\": \"ImageOverrider represents the rules dedicated to handling image overrides.\",\n             \"properties\": {\n              \"component\": {\n               \"description\": \"Component is part of image name. Basically we presume an image can be made of '[registry/]repository[:tag]'. The registry could be: - k8s.gcr.io - fictional.registry.example:10443 The repository could be: - kube-apiserver - fictional/nginx The tag cloud be: - latest - v1.19.1 - @sha256:dbcc1c35ac38df41fd2f5e4130b32ffdb93ebae8b3dbe638c23575912276fc9c\",\n               \"enum\": [\n                \"Registry\",\n                \"Repository\",\n                \"Tag\"\n               ],\n               \"type\": \"string\"\n              },\n              \"operator\": {\n               \"description\": \"Operator represents the operator which will apply on the image.\",\n               \"enum\": [\n                \"add\",\n                \"remove\",\n                \"replace\"\n               ],\n               \"type\": \"string\"\n              },\n              \"predicate\": {\n               \"description\": \"Predicate filters images before applying the rule. \\n Defaults to nil, in that case, the system will automatically detect image fields if the resource type is Pod, ReplicaSet, Deployment or StatefulSet by following rule:   - Pod: spec/containers/\\u003cN\\u003e/image   - ReplicaSet: spec/template/spec/containers/\\u003cN\\u003e/image   - Deployment: spec/template/spec/containers/\\u003cN\\u003e/image   - StatefulSet: spec/template/spec/containers/\\u003cN\\u003e/image In addition, all images will be processed if the resource object has more than one containers. \\n If not nil, only images matches the filters will be processed.\",\n               \"properties\": {\n                \"path\": {\n                 \"description\": \"Path indicates the path of target field\",\n                 \"type\": \"string\"\n                }\n               },\n               \"required\": [\n                \"path\"\n               ],\n               \"type\": \"object\"\n              },\n              \"value\": {\n               \"description\": \"Value to be applied to image. Must not be empty when operator is 'add' or 'replace'. Defaults to empty and ignored when operator is 'remove'.\",\n               \"type\": \"string\"\n              }\n             },\n             \"required\": [\n              \"component\",\n              \"operator\"\n             ],\n             \"type\": \"object\"\n            },\n            \"type\": \"array\"\n           },\n           \"replicas\": {\n            \"description\": \"Replicas will override the replicas field of deployment\",\n            \"type\": \"integer\"\n           }\n          },\n          \"type\": \"object\"\n         }\n        },\n        \"required\": [\n         \"name\"\n        ],\n        \"type\": \"object\"\n       },\n       \"type\": \"array\"\n      }\n     },\n     \"type\": \"object\"\n    },\n    \"workloadTemplate\": {\n     \"description\": \"WorkloadTemplate contains original templates of resources to be deployed as an EdgeApplication.\",\n     \"properties\": {\n      \"manifests\": {\n       \"description\": \"Manifests represent a list of Kubernetes resources to be deployed on the managed node groups.\",\n       \"items\": {\n        \"description\": \"Manifest represents a resource to be deployed on managed node groups.\",\n        \"format\": \"textarea\",\n        \"type\": \"string\"\n       },\n       \"type\": \"array\"\n      }\n     },\n     \"type\": \"object\"\n    }\n   },\n   \"required\": [\n    \"workloadScope\"\n   ],\n   \"type\": \"object\"\n  }\n },\n \"title\": \"Edge Application\",\n \"type\": \"object\"\n}"}