{
  "capabilities": [
   {
    "description": "Initiate a performance test. Meshery will execute the load generation, collect metrics, and present the results.",
    "displayName": "Performance Test",
    "entityState": [
     "instance"
    ],
    "key": "",
    "kind": "action",
    "metadata": null,
    "schemaVersion": "capability.meshery.io/v1alpha1",
    "status": "enabled",
    "subType": "perf-test",
    "type": "operator",
    "version": "0.7.0"
   },
   {
    "description": "Configure the workload specific setting of a component",
    "displayName": "Workload Configuration",
    "entityState": [
     "declaration"
    ],
    "key": "",
    "kind": "mutate",
    "metadata": null,
    "schemaVersion": "capability.meshery.io/v1alpha1",
    "status": "enabled",
    "subType": "config",
    "type": "configuration",
    "version": "0.7.0"
   },
   {
    "description": "Configure Labels And Annotations for  the component ",
    "displayName": "Labels and Annotations Configuration",
    "entityState": [
     "declaration"
    ],
    "key": "",
    "kind": "mutate",
    "metadata": null,
    "schemaVersion": "capability.meshery.io/v1alpha1",
    "status": "enabled",
    "subType": "labels-and-annotations",
    "type": "configuration",
    "version": "0.7.0"
   },
   {
    "description": "View relationships for the component",
    "displayName": "Relationships",
    "entityState": [
     "declaration",
     "instance"
    ],
    "key": "",
    "kind": "view",
    "metadata": null,
    "schemaVersion": "capability.meshery.io/v1alpha1",
    "status": "enabled",
    "subType": "relationship",
    "type": "configuration",
    "version": "0.7.0"
   },
   {
    "description": "View Component Definition ",
    "displayName": "Json Schema",
    "entityState": [
     "declaration",
     "instance"
    ],
    "key": "",
    "kind": "view",
    "metadata": null,
    "schemaVersion": "capability.meshery.io/v1alpha1",
    "status": "enabled",
    "subType": "definition",
    "type": "configuration",
    "version": "0.7.0"
   },
   {
    "description": "Configure the visual styles for the component",
    "displayName": "Styling",
    "entityState": [
     "declaration"
    ],
    "key": "",
    "kind": "mutate",
    "metadata": null,
    "schemaVersion": "capability.meshery.io/v1alpha1",
    "status": "enabled",
    "subType": "",
    "type": "style",
    "version": "0.7.0"
   },
   {
    "description": "Change the shape of the component",
    "displayName": "Change Shape",
    "entityState": [
     "declaration"
    ],
    "key": "",
    "kind": "mutate",
    "metadata": null,
    "schemaVersion": "capability.meshery.io/v1alpha1",
    "status": "enabled",
    "subType": "shape",
    "type": "style",
    "version": "0.7.0"
   },
   {
    "description": "Drag and Drop a component into a parent component in graph view",
    "displayName": "Compound Drag And Drop",
    "entityState": [
     "declaration"
    ],
    "key": "",
    "kind": "interaction",
    "metadata": null,
    "schemaVersion": "capability.meshery.io/v1alpha1",
    "status": "enabled",
    "subType": "compoundDnd",
    "type": "graph",
    "version": "0.7.0"
   }
  ],
  "component": {
   "kind": "DataStore",
   "schema": "{\n \"description\": \"DataStore is the Schema for the datastores API.\",\n \"properties\": {\n  \"spec\": {\n   \"description\": \"DataStoreSpec defines the desired state of DataStore.\",\n   \"properties\": {\n    \"basicAuth\": {\n     \"description\": \"In case of authentication enabled for the given data store, specifies the username and password pair.\\nThis value is optional.\",\n     \"properties\": {\n      \"password\": {\n       \"properties\": {\n        \"content\": {\n         \"description\": \"Bare content of the file, base64 encoded.\\nIt has precedence over the SecretReference value.\",\n         \"format\": \"byte\",\n         \"type\": \"string\"\n        },\n        \"secretReference\": {\n         \"properties\": {\n          \"keyPath\": {\n           \"description\": \"Name of the key for the given Secret reference where the content is stored.\\nThis value is mandatory.\",\n           \"minLength\": 1,\n           \"type\": \"string\"\n          },\n          \"name\": {\n           \"description\": \"name is unique within a namespace to reference a secret resource.\",\n           \"type\": \"string\"\n          },\n          \"namespace\": {\n           \"description\": \"namespace defines the space within which the secret name must be unique.\",\n           \"type\": \"string\"\n          }\n         },\n         \"required\": [\n          \"keyPath\"\n         ],\n         \"type\": \"object\",\n         \"x-kubernetes-map-type\": \"atomic\"\n        }\n       },\n       \"type\": \"object\"\n      },\n      \"username\": {\n       \"properties\": {\n        \"content\": {\n         \"description\": \"Bare content of the file, base64 encoded.\\nIt has precedence over the SecretReference value.\",\n         \"format\": \"byte\",\n         \"type\": \"string\"\n        },\n        \"secretReference\": {\n         \"properties\": {\n          \"keyPath\": {\n           \"description\": \"Name of the key for the given Secret reference where the content is stored.\\nThis value is mandatory.\",\n           \"minLength\": 1,\n           \"type\": \"string\"\n          },\n          \"name\": {\n           \"description\": \"name is unique within a namespace to reference a secret resource.\",\n           \"type\": \"string\"\n          },\n          \"namespace\": {\n           \"description\": \"namespace defines the space within which the secret name must be unique.\",\n           \"type\": \"string\"\n          }\n         },\n         \"required\": [\n          \"keyPath\"\n         ],\n         \"type\": \"object\",\n         \"x-kubernetes-map-type\": \"atomic\"\n        }\n       },\n       \"type\": \"object\"\n      }\n     },\n     \"required\": [\n      \"password\",\n      \"username\"\n     ],\n     \"type\": \"object\"\n    },\n    \"driver\": {\n     \"description\": \"The driver to use to connect to the shared datastore.\",\n     \"enum\": [\n      \"etcd\",\n      \"MySQL\",\n      \"PostgreSQL\",\n      \"NATS\"\n     ],\n     \"type\": \"string\"\n    },\n    \"endpoints\": {\n     \"description\": \"List of the endpoints to connect to the shared datastore.\\nNo need for protocol, just bare IP/FQDN and port.\",\n     \"items\": {\n      \"type\": \"string\"\n     },\n     \"minItems\": 1,\n     \"type\": \"array\"\n    },\n    \"tlsConfig\": {\n     \"description\": \"Defines the TLS/SSL configuration required to connect to the data store in a secure way.\\nThis value is optional.\",\n     \"properties\": {\n      \"certificateAuthority\": {\n       \"description\": \"Retrieve the Certificate Authority certificate and private key, such as bare content of the file, or a SecretReference.\\nThe key reference is required since etcd authentication is based on certificates, and Kamaji is responsible in creating this.\",\n       \"properties\": {\n        \"certificate\": {\n         \"properties\": {\n          \"content\": {\n           \"description\": \"Bare content of the file, base64 encoded.\\nIt has precedence over the SecretReference value.\",\n           \"format\": \"byte\",\n           \"type\": \"string\"\n          },\n          \"secretReference\": {\n           \"properties\": {\n            \"keyPath\": {\n             \"description\": \"Name of the key for the given Secret reference where the content is stored.\\nThis value is mandatory.\",\n             \"minLength\": 1,\n             \"type\": \"string\"\n            },\n            \"name\": {\n             \"description\": \"name is unique within a namespace to reference a secret resource.\",\n             \"type\": \"string\"\n            },\n            \"namespace\": {\n             \"description\": \"namespace defines the space within which the secret name must be unique.\",\n             \"type\": \"string\"\n            }\n           },\n           \"required\": [\n            \"keyPath\"\n           ],\n           \"type\": \"object\",\n           \"x-kubernetes-map-type\": \"atomic\"\n          }\n         },\n         \"type\": \"object\"\n        },\n        \"privateKey\": {\n         \"properties\": {\n          \"content\": {\n           \"description\": \"Bare content of the file, base64 encoded.\\nIt has precedence over the SecretReference value.\",\n           \"format\": \"byte\",\n           \"type\": \"string\"\n          },\n          \"secretReference\": {\n           \"properties\": {\n            \"keyPath\": {\n             \"description\": \"Name of the key for the given Secret reference where the content is stored.\\nThis value is mandatory.\",\n             \"minLength\": 1,\n             \"type\": \"string\"\n            },\n            \"name\": {\n             \"description\": \"name is unique within a namespace to reference a secret resource.\",\n             \"type\": \"string\"\n            },\n            \"namespace\": {\n             \"description\": \"namespace defines the space within which the secret name must be unique.\",\n             \"type\": \"string\"\n            }\n           },\n           \"required\": [\n            \"keyPath\"\n           ],\n           \"type\": \"object\",\n           \"x-kubernetes-map-type\": \"atomic\"\n          }\n         },\n         \"type\": \"object\"\n        }\n       },\n       \"required\": [\n        \"certificate\"\n       ],\n       \"type\": \"object\"\n      },\n      \"clientCertificate\": {\n       \"description\": \"Specifies the SSL/TLS key and private key pair used to connect to the data store.\",\n       \"properties\": {\n        \"certificate\": {\n         \"properties\": {\n          \"content\": {\n           \"description\": \"Bare content of the file, base64 encoded.\\nIt has precedence over the SecretReference value.\",\n           \"format\": \"byte\",\n           \"type\": \"string\"\n          },\n          \"secretReference\": {\n           \"properties\": {\n            \"keyPath\": {\n             \"description\": \"Name of the key for the given Secret reference where the content is stored.\\nThis value is mandatory.\",\n             \"minLength\": 1,\n             \"type\": \"string\"\n            },\n            \"name\": {\n             \"description\": \"name is unique within a namespace to reference a secret resource.\",\n             \"type\": \"string\"\n            },\n            \"namespace\": {\n             \"description\": \"namespace defines the space within which the secret name must be unique.\",\n             \"type\": \"string\"\n            }\n           },\n           \"required\": [\n            \"keyPath\"\n           ],\n           \"type\": \"object\",\n           \"x-kubernetes-map-type\": \"atomic\"\n          }\n         },\n         \"type\": \"object\"\n        },\n        \"privateKey\": {\n         \"properties\": {\n          \"content\": {\n           \"description\": \"Bare content of the file, base64 encoded.\\nIt has precedence over the SecretReference value.\",\n           \"format\": \"byte\",\n           \"type\": \"string\"\n          },\n          \"secretReference\": {\n           \"properties\": {\n            \"keyPath\": {\n             \"description\": \"Name of the key for the given Secret reference where the content is stored.\\nThis value is mandatory.\",\n             \"minLength\": 1,\n             \"type\": \"string\"\n            },\n            \"name\": {\n             \"description\": \"name is unique within a namespace to reference a secret resource.\",\n             \"type\": \"string\"\n            },\n            \"namespace\": {\n             \"description\": \"namespace defines the space within which the secret name must be unique.\",\n             \"type\": \"string\"\n            }\n           },\n           \"required\": [\n            \"keyPath\"\n           ],\n           \"type\": \"object\",\n           \"x-kubernetes-map-type\": \"atomic\"\n          }\n         },\n         \"type\": \"object\"\n        }\n       },\n       \"required\": [\n        \"certificate\",\n        \"privateKey\"\n       ],\n       \"type\": \"object\"\n      }\n     },\n     \"required\": [\n      \"certificateAuthority\"\n     ],\n     \"type\": \"object\"\n    }\n   },\n   \"required\": [\n    \"driver\",\n    \"endpoints\"\n   ],\n   \"type\": \"object\"\n  }\n },\n \"title\": \"Data Store\",\n \"type\": \"object\"\n}",
   "version": "kamaji.clastix.io/v1alpha1"
  },
  "configuration": null,
  "description": "",
  "displayName": "Data Store",
  "format": "JSON",
  "id": "00000000-0000-0000-0000-000000000000",
  "metadata": {
   "genealogy": "",
   "isAnnotation": false,
   "isNamespaced": false,
   "published": false
  },
  "model": {
   "category": {
    "name": "Platform"
   },
   "displayName": "Kamaji",
   "id": "00000000-0000-0000-0000-000000000000",
   "metadata": {
    "defaultData": "",
    "isAnnotation": false,
    "primaryColor": "#00B39F",
    "secondaryColor": "#00D3A9",
    "shape": "circle",
    "shapePolygonPoints": "",
    "styleOverrides": "",
    "styles": "",
    "svgColor": "",
    "svgComplete": "",
    "svgWhite": ""
   },
   "model": {
    "version": "0.15.3"
   },
   "name": "kamaji",
   "registrant": {
    "created_at": "0001-01-01T00:00:00Z",
    "credential_id": "00000000-0000-0000-0000-000000000000",
    "deleted_at": "0001-01-01T00:00:00Z",
    "id": "00000000-0000-0000-0000-000000000000",
    "kind": "artifacthub",
    "name": "Artifact Hub",
    "status": "discovered",
    "sub_type": "",
    "type": "registry",
    "updated_at": "0001-01-01T00:00:00Z",
    "user_id": "00000000-0000-0000-0000-000000000000"
   },
   "connection_id": "00000000-0000-0000-0000-000000000000",
   "schemaVersion": "models.meshery.io/v1beta1",
   "status": "ignored",
   "subCategory": "Kubernetes",
   "version": "v1.0.0",
   "components": null,
   "relationships": null
  },
  "schemaVersion": "components.meshery.io/v1beta1",
  "status": "enabled",
  "styles": {
   "primaryColor": "#00B39F",
   "secondaryColor": "#00D3A9",
   "shape": "circle",
   "svgColor": "",
   "svgWhite": ""
  },
  "version": "v1.0.0"
 }