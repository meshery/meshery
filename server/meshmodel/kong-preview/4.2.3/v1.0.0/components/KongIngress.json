{
  "id": "00000000-0000-0000-0000-000000000000",
  "schemaVersion": "components.meshery.io/v1beta1",
  "version": "v1.0.0",
  "displayName": "Kong Ingress",
  "description": "",
  "format": "JSON",
  "model": {
   "id": "00000000-0000-0000-0000-000000000000",
   "schemaVersion": "models.meshery.io/v1beta1",
   "version": "v1.0.0",
   "name": "kong-preview",
   "displayName": "Kong Preview",
   "description": "",
   "status": "ignored",
   "hostID": "00000000-0000-0000-0000-000000000000",
   "registrant": {
    "hostname": "artifacthub"
   },
   "category": {
    "name": "Uncategorized",
    "metadata": null
   },
   "subCategory": "Uncategorized",
   "metadata": {
    "capabilities": "",
    "defaultData": "",
    "isAnnotation": false,
    "primaryColor": "#00B39F",
    "secondaryColor": "#00D3A9",
    "shape": "circle",
    "shapePolygonPoints": "",
    "styleOverrides": "",
    "styles": "",
    "svgColor": "",
    "svgComplete": "",
    "svgWhite": ""
   },
   "model": {
    "version": "4.2.3"
   },
   "components": null,
   "relationships": null
  },
  "metadata": {
   "capabilities": "",
   "defaultData": "",
   "genealogy": "",
   "isAnnotation": false,
   "isNamespaced": true,
   "primaryColor": "",
   "secondaryColor": "",
   "shape": "",
   "shapePolygonPoints": "",
   "status": "ignored",
   "styleOverrides": "",
   "styles": "",
   "subCategory": "",
   "svgColor": "",
   "svgComplete": "",
   "svgWhite": ""
  },
  "component": {
   "kind": "KongIngress",
   "version": "configuration.konghq.com/v1",
   "schema": "{\n \"description\": \"KongIngress is the Schema for the kongingresses API\",\n \"properties\": {\n  \"proxy\": {\n   \"description\": \"KongIngressService contains KongIngress service configuration\",\n   \"properties\": {\n    \"connect_timeout\": {\n     \"minimum\": 0,\n     \"type\": \"integer\"\n    },\n    \"path\": {\n     \"pattern\": \"^/.*$\",\n     \"type\": \"string\"\n    },\n    \"protocol\": {\n     \"enum\": [\n      \"http\",\n      \"https\",\n      \"grpc\",\n      \"grpcs\",\n      \"tcp\",\n      \"tls\",\n      \"udp\"\n     ],\n     \"type\": \"string\"\n    },\n    \"read_timeout\": {\n     \"minimum\": 0,\n     \"type\": \"integer\"\n    },\n    \"retries\": {\n     \"minimum\": 0,\n     \"type\": \"integer\"\n    },\n    \"write_timeout\": {\n     \"minimum\": 0,\n     \"type\": \"integer\"\n    }\n   },\n   \"type\": \"object\"\n  },\n  \"route\": {\n   \"description\": \"KongIngressRoute contains KongIngress route configuration\",\n   \"properties\": {\n    \"headers\": {\n     \"additionalProperties\": {\n      \"items\": {\n       \"type\": \"string\"\n      },\n      \"type\": \"array\"\n     },\n     \"type\": \"object\"\n    },\n    \"https_redirect_status_code\": {\n     \"type\": \"integer\"\n    },\n    \"methods\": {\n     \"items\": {\n      \"type\": \"string\"\n     },\n     \"type\": \"array\"\n    },\n    \"path_handling\": {\n     \"enum\": [\n      \"v0\",\n      \"v1\"\n     ],\n     \"type\": \"string\"\n    },\n    \"preserve_host\": {\n     \"type\": \"boolean\"\n    },\n    \"protocols\": {\n     \"items\": {\n      \"enum\": [\n       \"http\",\n       \"https\",\n       \"grpc\",\n       \"grpcs\",\n       \"tcp\",\n       \"tls\",\n       \"udp\"\n      ],\n      \"type\": \"string\"\n     },\n     \"type\": \"array\"\n    },\n    \"regex_priority\": {\n     \"type\": \"integer\"\n    },\n    \"request_buffering\": {\n     \"type\": \"boolean\"\n    },\n    \"response_buffering\": {\n     \"type\": \"boolean\"\n    },\n    \"snis\": {\n     \"items\": {\n      \"type\": \"string\"\n     },\n     \"type\": \"array\"\n    },\n    \"strip_path\": {\n     \"type\": \"boolean\"\n    }\n   },\n   \"type\": \"object\"\n  },\n  \"upstream\": {\n   \"description\": \"KongIngressUpstream contains KongIngress upstream configuration\",\n   \"properties\": {\n    \"algorithm\": {\n     \"enum\": [\n      \"round-robin\",\n      \"consistent-hashing\",\n      \"least-connections\"\n     ],\n     \"type\": \"string\"\n    },\n    \"hash_fallback\": {\n     \"type\": \"string\"\n    },\n    \"hash_fallback_header\": {\n     \"type\": \"string\"\n    },\n    \"hash_on\": {\n     \"type\": \"string\"\n    },\n    \"hash_on_cookie\": {\n     \"type\": \"string\"\n    },\n    \"hash_on_cookie_path\": {\n     \"type\": \"string\"\n    },\n    \"hash_on_header\": {\n     \"type\": \"string\"\n    },\n    \"healthchecks\": {\n     \"description\": \"Healthcheck represents a health-check config of an upstream in Kong.\",\n     \"properties\": {\n      \"active\": {\n       \"description\": \"ActiveHealthcheck configures active health check probing.\",\n       \"properties\": {\n        \"concurrency\": {\n         \"minimum\": 1,\n         \"type\": \"integer\"\n        },\n        \"healthy\": {\n         \"description\": \"Healthy configures thresholds and HTTP status codes to mark targets healthy for an upstream.\",\n         \"properties\": {\n          \"http_statuses\": {\n           \"items\": {\n            \"type\": \"integer\"\n           },\n           \"type\": \"array\"\n          },\n          \"interval\": {\n           \"minimum\": 0,\n           \"type\": \"integer\"\n          },\n          \"successes\": {\n           \"minimum\": 0,\n           \"type\": \"integer\"\n          }\n         },\n         \"type\": \"object\"\n        },\n        \"http_path\": {\n         \"pattern\": \"^/.*$\",\n         \"type\": \"string\"\n        },\n        \"https_sni\": {\n         \"type\": \"string\"\n        },\n        \"https_verify_certificate\": {\n         \"type\": \"boolean\"\n        },\n        \"timeout\": {\n         \"minimum\": 0,\n         \"type\": \"integer\"\n        },\n        \"type\": {\n         \"type\": \"string\"\n        },\n        \"unhealthy\": {\n         \"description\": \"Unhealthy configures thresholds and HTTP status codes to mark targets unhealthy.\",\n         \"properties\": {\n          \"http_failures\": {\n           \"minimum\": 0,\n           \"type\": \"integer\"\n          },\n          \"http_statuses\": {\n           \"items\": {\n            \"type\": \"integer\"\n           },\n           \"type\": \"array\"\n          },\n          \"interval\": {\n           \"minimum\": 0,\n           \"type\": \"integer\"\n          },\n          \"tcp_failures\": {\n           \"minimum\": 0,\n           \"type\": \"integer\"\n          },\n          \"timeouts\": {\n           \"minimum\": 0,\n           \"type\": \"integer\"\n          }\n         },\n         \"type\": \"object\"\n        }\n       },\n       \"type\": \"object\"\n      },\n      \"passive\": {\n       \"description\": \"PassiveHealthcheck configures passive checks around passive health checks.\",\n       \"properties\": {\n        \"healthy\": {\n         \"description\": \"Healthy configures thresholds and HTTP status codes to mark targets healthy for an upstream.\",\n         \"properties\": {\n          \"http_statuses\": {\n           \"items\": {\n            \"type\": \"integer\"\n           },\n           \"type\": \"array\"\n          },\n          \"interval\": {\n           \"minimum\": 0,\n           \"type\": \"integer\"\n          },\n          \"successes\": {\n           \"minimum\": 0,\n           \"type\": \"integer\"\n          }\n         },\n         \"type\": \"object\"\n        },\n        \"type\": {\n         \"type\": \"string\"\n        },\n        \"unhealthy\": {\n         \"description\": \"Unhealthy configures thresholds and HTTP status codes to mark targets unhealthy.\",\n         \"properties\": {\n          \"http_failures\": {\n           \"minimum\": 0,\n           \"type\": \"integer\"\n          },\n          \"http_statuses\": {\n           \"items\": {\n            \"type\": \"integer\"\n           },\n           \"type\": \"array\"\n          },\n          \"interval\": {\n           \"minimum\": 0,\n           \"type\": \"integer\"\n          },\n          \"tcp_failures\": {\n           \"minimum\": 0,\n           \"type\": \"integer\"\n          },\n          \"timeouts\": {\n           \"minimum\": 0,\n           \"type\": \"integer\"\n          }\n         },\n         \"type\": \"object\"\n        }\n       },\n       \"type\": \"object\"\n      },\n      \"threshold\": {\n       \"type\": \"number\"\n      }\n     },\n     \"type\": \"object\"\n    },\n    \"host_header\": {\n     \"type\": \"string\"\n    },\n    \"slots\": {\n     \"minimum\": 10,\n     \"type\": \"integer\"\n    }\n   },\n   \"type\": \"object\"\n  }\n },\n \"title\": \"Kong Ingress\",\n \"type\": \"object\"\n}"
  }
 }