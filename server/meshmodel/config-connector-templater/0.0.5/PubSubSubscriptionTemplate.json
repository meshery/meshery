{"kind":"PubSubSubscriptionTemplate","apiVersion":"config-connector-templater.slamdev.net/v1alpha1","displayName":"Pub Sub Subscription Template","format":"JSON","hostname":"","hostID":"00000000-0000-0000-0000-000000000000","displayhostname":"","metadata":{"capabilities":"","genealogy":"","isAnnotation":false,"isModelAnnotation":"FALSE","isNamespaced":true,"logoURL":"","model":"config-connector-templater","modelDisplayName":"Config Connector Templater","primaryColor":"#00B39F","published":false,"secondaryColor":"#00D3A9","shape":"circle","styleOverrides":"","subCategory":"Uncategorized","svgColor":"","svgComplete":"","svgWhite":""},"model":{"name":"config-connector-templater","version":"0.0.5","displayName":"Config Connector Templater","hostname":"","hostID":"00000000-0000-0000-0000-000000000000","displayhostname":"","category":{"name":"Uncategorized","metadata":null},"metadata":{"source_uri":"https://github.com/slamdev/helm-charts/releases/download/config-connector-templater-0.0.5/config-connector-templater-0.0.5.tgz"},"components":null,"relationships":null},"schema":"{\n \"description\": \"PubSubSubscriptionTemplate is the Schema for the pubsubsubscriptiontemplates API\",\n \"properties\": {\n  \"spec\": {\n   \"properties\": {\n    \"ackDeadlineSeconds\": {\n     \"description\": \" This value is the maximum time after a subscriber receives a message \\tbefore the subscriber should acknowledge the message. After message \\tdelivery but before the ack deadline expires and before the message is \\tacknowledged, it is an outstanding message and will not be delivered \\tagain during that time (on a best-effort basis). \\n \\tFor pull subscriptions, this value is used as the initial value for \\tthe ack deadline. To override this value for a given message, call \\tsubscriptions.modifyAckDeadline with the corresponding ackId if using \\tpull. The minimum custom deadline you can specify is 10 seconds. The \\tmaximum custom deadline you can specify is 600 seconds (10 minutes). \\tIf this parameter is 0, a default value of 10 seconds is used. \\n \\tFor push delivery, this value is also used to set the request timeout \\tfor the call to the push endpoint. \\n \\tIf the subscriber never acknowledges the message, the Pub/Sub system \\twill eventually redeliver the message.\",\n     \"type\": \"integer\"\n    },\n    \"deadLetterPolicy\": {\n     \"description\": \" A policy that specifies the conditions for dead lettering messages in \\tthis subscription. If dead_letter_policy is not set, dead lettering \\tis disabled. \\n \\tThe Cloud Pub/Sub service account associated with this subscription's \\tparent project (i.e., \\tservice-{project_number}@gcp-sa-pubsub.iam.gserviceaccount.com) must have \\tpermission to Acknowledge() messages on this subscription.\",\n     \"properties\": {\n      \"deadLetterTopicRef\": {\n       \"properties\": {\n        \"external\": {\n         \"description\": \" The external name of the referenced resource\",\n         \"type\": \"string\"\n        },\n        \"name\": {\n         \"description\": \" Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\",\n         \"type\": \"string\"\n        },\n        \"namespace\": {\n         \"description\": \" Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/\",\n         \"type\": \"string\"\n        }\n       },\n       \"type\": \"object\"\n      },\n      \"maxDeliveryAttempts\": {\n       \"description\": \" The maximum number of delivery attempts for any message. The value must be \\tbetween 5 and 100. \\n \\tThe number of delivery attempts is defined as 1 + (the sum of number of \\tNACKs and number of times the acknowledgement deadline has been exceeded for the message). \\n \\tA NACK is any call to ModifyAckDeadline with a 0 deadline. Note that \\tclient libraries may automatically extend ack_deadlines. \\n \\tThis field will be honored on a best effort basis. \\n \\tIf this parameter is 0, a default value of 5 is used.\",\n       \"type\": \"integer\"\n      }\n     },\n     \"type\": \"object\"\n    },\n    \"enableMessageOrdering\": {\n     \"description\": \" Immutable. If 'true', messages published with the same orderingKey in PubsubMessage will be delivered to \\tthe subscribers in the order in which they are received by the Pub/Sub system. Otherwise, they \\tmay be delivered in any order.\",\n     \"type\": \"boolean\"\n    },\n    \"expirationPolicy\": {\n     \"description\": \" A policy that specifies the conditions for this subscription's expiration. \\tA subscription is considered active as long as any connected subscriber \\tis successfully consuming messages from the subscription or is issuing \\toperations on the subscription. If expirationPolicy is not set, a default \\tpolicy with ttl of 31 days will be used.  If it is set but ttl is \\\"\\\", the \\tresource never expires.  The minimum allowed value for expirationPolicy.ttl \\tis 1 day.\",\n     \"properties\": {\n      \"ttl\": {\n       \"description\": \" Specifies the \\\"time-to-live\\\" duration for an associated resource. The \\tresource expires if it is not active for a period of ttl. \\tIf ttl is not set, the associated resource never expires. \\tA duration in seconds with up to nine fractional digits, terminated by 's'. \\tExample - \\\"3.5s\\\".\",\n       \"type\": \"string\"\n      }\n     },\n     \"required\": [\n      \"ttl\"\n     ],\n     \"type\": \"object\"\n    },\n    \"filter\": {\n     \"description\": \" Immutable. The subscription only delivers the messages that match the filter. \\tPub/Sub automatically acknowledges the messages that don't match the filter. You can filter messages \\tby their attributes. The maximum length of a filter is 256 bytes. After creating the subscription, \\tyou can't modify the filter.\",\n     \"type\": \"string\"\n    },\n    \"messageRetentionDuration\": {\n     \"description\": \" How long to retain unacknowledged messages in the subscription's \\tbacklog, from the moment a message is published. If \\tretainAckedMessages is true, then this also configures the retention \\tof acknowledged messages, and thus configures how far back in time a \\tsubscriptions.seek can be done. Defaults to 7 days. Cannot be more \\tthan 7 days ('\\\"604800s\\\"') or less than 10 minutes ('\\\"600s\\\"'). \\n \\tA duration in seconds with up to nine fractional digits, terminated \\tby 's'. Example: '\\\"600.5s\\\"'.\",\n     \"type\": \"string\"\n    },\n    \"pushConfig\": {\n     \"description\": \" If push delivery is used with this subscription, this field is used to \\tconfigure it. An empty pushConfig signifies that the subscriber will \\tpull and ack messages using API methods.\",\n     \"properties\": {\n      \"attributes\": {\n       \"additionalProperties\": {\n        \"type\": \"string\"\n       },\n       \"description\": \" Endpoint configuration attributes. \\n \\tEvery endpoint has a set of API supported attributes that can \\tbe used to control different aspects of the message delivery. \\n \\tThe currently supported attribute is x-goog-version, which you \\tcan use to change the format of the pushed message. This \\tattribute indicates the version of the data expected by \\tthe endpoint. This controls the shape of the pushed message \\t(i.e., its fields and metadata). The endpoint version is \\tbased on the version of the Pub/Sub API. \\n \\tIf not present during the subscriptions.create call, \\tit will default to the version of the API used to make \\tsuch call. If not present during a subscriptions.modifyPushConfig \\tcall, its value will not be changed. subscriptions.get \\tcalls will always return a valid version, even if the \\tsubscription was created without this attribute. \\n \\tThe possible values for this attribute are: \\n \\t- v1beta1: uses the push format defined in the v1beta1 Pub/Sub API. \\t- v1 or v1beta2: uses the push format defined in the v1 Pub/Sub API.\",\n       \"type\": \"object\"\n      },\n      \"oidcToken\": {\n       \"description\": \" If specified, Pub/Sub will generate and attach an OIDC JWT token as \\tan Authorization header in the HTTP request for every pushed message.\",\n       \"properties\": {\n        \"audience\": {\n         \"description\": \" Audience to be used when generating OIDC token. The audience claim \\tidentifies the recipients that the JWT is intended for. The audience \\tvalue is a single case-sensitive string. Having multiple values (array) \\tfor the audience field is not supported. More info about the OIDC JWT \\ttoken audience here: https://tools.ietf.org/html/rfc7519#section-4.1.3 \\tNote: if not specified, the Push endpoint URL will be used.\",\n         \"type\": \"string\"\n        },\n        \"serviceAccountEmail\": {\n         \"description\": \" Service account email to be used for generating the OIDC token. \\tThe caller (for subscriptions.create, subscriptions.patch, and \\tsubscriptions.modifyPushConfig RPCs) must have the \\tiam.serviceAccounts.actAs permission for the service account.\",\n         \"type\": \"string\"\n        }\n       },\n       \"required\": [\n        \"serviceAccountEmail\"\n       ],\n       \"type\": \"object\"\n      },\n      \"pushEndpoint\": {\n       \"description\": \" A URL locating the endpoint to which messages should be pushed. \\tFor example, a Webhook endpoint might use \\t\\\"https://example.com/push\\\".\",\n       \"type\": \"string\"\n      }\n     },\n     \"required\": [\n      \"pushEndpoint\"\n     ],\n     \"type\": \"object\"\n    },\n    \"resourceID\": {\n     \"description\": \" Immutable. Optional. The name of the resource. Used for creation and acquisition. When unset, the value of `metadata.name` is used as the default.\",\n     \"type\": \"string\"\n    },\n    \"retainAckedMessages\": {\n     \"description\": \" Indicates whether to retain acknowledged messages. If 'true', then \\tmessages are not expunged from the subscription's backlog, even if \\tthey are acknowledged, until they fall out of the \\tmessageRetentionDuration window.\",\n     \"type\": \"boolean\"\n    },\n    \"retryPolicy\": {\n     \"description\": \" A policy that specifies how Pub/Sub retries message delivery for this subscription. \\n \\tIf not set, the default retry policy is applied. This generally implies that messages will be retried as soon as possible for healthy subscribers. \\tRetryPolicy will be triggered on NACKs or acknowledgement deadline exceeded events for a given message\",\n     \"properties\": {\n      \"maximumBackoff\": {\n       \"description\": \" The maximum delay between consecutive deliveries of a given message. Value should be between 0 and 600 seconds. Defaults to 600 seconds. \\tA duration in seconds with up to nine fractional digits, terminated by 's'. Example: \\\"3.5s\\\".\",\n       \"type\": \"string\"\n      },\n      \"minimumBackoff\": {\n       \"description\": \" The minimum delay between consecutive deliveries of a given message. Value should be between 0 and 600 seconds. Defaults to 10 seconds. \\tA duration in seconds with up to nine fractional digits, terminated by 's'. Example: \\\"3.5s\\\".\",\n       \"type\": \"string\"\n      }\n     },\n     \"type\": \"object\"\n    },\n    \"topicRef\": {\n     \"description\": \" Reference to a PubSubTopic.\",\n     \"properties\": {\n      \"external\": {\n       \"description\": \" The external name of the referenced resource\",\n       \"type\": \"string\"\n      },\n      \"name\": {\n       \"description\": \" Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\",\n       \"type\": \"string\"\n      },\n      \"namespace\": {\n       \"description\": \" Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/\",\n       \"type\": \"string\"\n      }\n     },\n     \"type\": \"object\"\n    }\n   },\n   \"required\": [\n    \"topicRef\"\n   ],\n   \"type\": \"object\"\n  }\n },\n \"title\": \"Pub Sub Subscription Template\",\n \"type\": \"object\"\n}"}