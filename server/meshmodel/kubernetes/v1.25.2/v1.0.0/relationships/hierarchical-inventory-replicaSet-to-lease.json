{
  "schemaVersion": "relationships.meshery.io/v1alpha2",
  "version": "v1.0.0",
  "kind": "Hierarchical",
  "metadata": {
    "description": "A hierarchical inventory relationship in which the configuration of (parent) component is patched with the configuration of other (child) component. Eg: The configuration of the EnvoyFilter (parent) component is patched with the configuration as received from WASMFilter (child) component."
  },
  "model": {
    "schemaVersion": "models.meshery.io/v1beta1",
    "version": "v1.0.0",
    "name": "kubernetes",
    "model": {
      "version": "v1.25.2"
    },
    "displayName": "Kubernetes",
    "category": {
      "name": "Orchestration \u0026 Management",
      "metadata": null
    },
    "metadata": {}
  },
  "subType": "Inventory",
  "evaluationQuery": "hierarchical_inventory_relationship",
  "selectors": [
    {
      "allow": {
        "from": [
          {
            "kind": "ReplicaSet",
            "model": "kubernetes",
            "patch": {
              "patchStrategy": "replace",
              "mutatorRef": [
                [
                  "name"
                ],
                [
                  "kind"
                ],
                [
                  "apiVersion"
                ]
              ],
              "description": "ReplicaSets in Kubernetes ensure a specified number of pod replicas are running at any given time. By incorporating leases within ReplicaSets, Kubernetes ensures fault tolerance and scalability by automatically replacing failed or terminated pods, maintaining the desired replica count and preserving the availability and performance of your application."
            }
          }
        ],
        "to": [
          {
            "kind": "Lease",
            "model": "kubernetes",
            "patch": {
              "patchStrategy": "replace",
              "mutatedRef": [
                [
                  "ownerReferences",
                  "_",
                  "name"
                ],
                [
                  "ownerReferences",
                  "_",
                  "kind"
                ],
                [
                  "ownerReferences",
                  "_",
                  "apiVersion"
                ]
              ],
              "description": "A Lease is a mechanism used for coordinating activities between multiple instances of a controller, ensuring that only one instance is actively performing certain tasks at any given time."
            }
          }
        ]
      },
      "deny": {
        "from": [],
        "to": []
      }
    }
  ]
}