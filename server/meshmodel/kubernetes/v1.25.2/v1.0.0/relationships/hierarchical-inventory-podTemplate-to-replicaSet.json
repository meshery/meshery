{
    "schemaVersion": "relationships.meshery.io/v1alpha2",
    "version": "v1.0.0",
    "kind": "Hierarchical",
    "metadata": {
      "description": "A hierarchical inventory relationship in which the configuration of (parent) component is patched with the configuration of other (child) component. Eg: The configuration of the EnvoyFilter (parent) component is patched with the configuration as received from WASMFilter (child) component."
    },
    "model": {
      "schemaVersion": "core.meshery.io/v1beta1",
      "version": "v1.0.0",
      "name": "kubernetes",
      "model": {
        "version": "v1.25.2"
      },
      "displayName": "Kubernetes",
      "category": {
        "name": "Orchestration \u0026 Management",
        "metadata": null
      },
      "metadata": {}
    },
    "subType": "Inventory",
    "evaluationQuery": "hierarchical_inventory_relationship",
    "selectors": [
      {
        "allow": {
          "from": [
            {
              "kind": "PodTemplate",
              "model": "kubernetes",
              "patch": {
                "patchStrategy": "replace",
                "mutatorRef": [
                  [
                    "settings",
                    "template"
                  ]
                ],
                "description": "A Pod template is a blueprint defining the configuration for creating Kubernetes pods, encapsulating specifications for containers, volumes, and other settings"
              }
            }
          ],
          "to": [
            {
              "kind": "ReplicaSet",
              "model": "kubernetes",
              "patch": {
                "patchStrategy": "replace",
                "mutatedRef": [
                  [
                    "settings",
                    "spec",
                    "template"
                  ]
                ],
                "description": "ReplicaSets leverage pod templates to ensure the desired number of identical pod replicas are running, providing fault tolerance and high availability for applications by automatically managing pod lifecycle based on defined specifications."
              }
            }
        ],
        "deny": {
          "from": [],
          "to": []
        }
      }
    }]}