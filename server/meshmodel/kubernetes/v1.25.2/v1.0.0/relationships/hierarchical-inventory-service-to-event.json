{
    "schemaVersion": "relationships.meshery.io/v1alpha2",
    "version": "v1.0.0",
    "kind": "Hierarchical",
    "metadata": {
      "description": "A hierarchical inventory relationship in which the configuration of (parent) component is patched with the configuration of other (child) component. Eg: The configuration of the EnvoyFilter (parent) component is patched with the configuration as received from WASMFilter (child) component."
    },
    "model": {
      "schemaVersion": "core.meshery.io/v1beta1",
      "version": "v1.0.0",
      "name": "kubernetes",
      "model": {
        "version": "v1.25.2"
      },
      "displayName": "Kubernetes",
      "category": {
        "name": "Orchestration \u0026 Management",
        "metadata": null
      },
      "metadata": {}
    },
    "subType": "Inventory",
    "evaluationQuery": "hierarchical_inventory_relationship",
    "selectors": [
      {
        "allow": {
          "from": [
            {
              "kind": "Service",
              "model": "kubernetes",
              "patch": {
                "patchStrategy": "replace",
                "mutatorRef": [
                  [
                    "name"
                  ],
                  [
                    "namespace"
                  ],
                  [
                    "kind"
                  ],
                  [
                    "apiVersion"
                  ]
                ],
                "description": "A Service maintains an inventory relationship with Events. Service definitions are aligned with Event specifications, enabling the monitoring of Service-related events such as service creation, endpoint updates, and load balancing activities to ensure seamless communication within the cluster."
              }
            }
        ],
        "to": [
            {
              "kind": "Event",
              "model": "kubernetes",
              "patch": {
                "patchStrategy": "replace",
                "mutatedRef": [
                  [
                    "settings",
                    "regarding",
                    "name"
                  ],
                  [
                    "settings",
                    "regarding",
                    "namespace"
                  ],
                  [
                    "settings",
                    "regarding",
                    "kind"
                  ],
                  [
                    "settings",
                    "regarding",
                    "apiVersion"
                  ]
                ],
                "description": "In Kubernetes, Events serve as a crucial mechanism for observing and tracking the state changes and activities within the cluster. They offer valuable information about resource creation, updates, errors, and other significant occurrences, aiding administrators and developers in troubleshooting, monitoring, and maintaining the health and performance of their applications."
              }
            }
          ]
        }
      }
    ]
}