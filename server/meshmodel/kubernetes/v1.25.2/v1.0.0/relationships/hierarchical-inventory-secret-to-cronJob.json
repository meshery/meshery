{
    "schemaVersion": "relationships.meshery.io/v1alpha2",
    "version": "v1.0.0",
    "kind": "Hierarchical",
    "metadata": {
      "description": "A hierarchical inventory relationship in which the configuration of (parent) component is patched with the configuration of other (child) component. Eg: The configuration of the EnvoyFilter (parent) component is patched with the configuration as received from WASMFilter (child) component."
    },
    "model": {
      "schemaVersion": "core.meshery.io/v1beta1",
      "version": "v1.0.0",
      "name": "kubernetes",
      "model": {
        "version": "v1.25.2"
      },
      "displayName": "Kubernetes",
      "category": {
        "name": "Orchestration \u0026 Management",
        "metadata": null
      },
      "metadata": {}
    },
    "subType": "Inventory",
    "evaluationQuery": "hierarchical_inventory_relationship",
    "selectors": [
      {
        "allow": {
        "from": [
          {
            "kind": "Secret",
            "model": "kubernetes",
            "patch": {
              "patchStrategy": "replace",
              "mutatorRef": [
                [
                  "name"
                ]
              ],
              "description": "In Kubernetes, Secrets are versatile resources that can be referenced by various other resources to provide configuration data to applications or other Kubernetes resources securely.\n\nBy referencing Secrets in these various contexts, you can centralize and manage configuration data more efficiently, allowing for easier updates, versioning, and maintenance of configurations in a Kubernetes environment."
            }
          }
        ],
        "to": [
          {
            "kind": "CronJob",
            "model": "kubernetes",
            "patch": {
              "patchStrategy": "replace",
              "mutatedRef": [
                [
                  "settings",
                  "spec",
                  "jobTemplate",
                  "spec",
                  "template",
                  "spec",
                  "containers",
                  "_",
                  "envFrom",
                  "0",
                  "secretRef",
                  "name"
                ]
              ],
              "description": "Secret can be referenced in the Pod template specification within the CronJob definition to inject confidential configuration data into the pods.\n\nThe keys from the Secret will be exposed as environment variables to the container within the pod created by the CronJob."
            }
          }
        ]
      }
    }]}