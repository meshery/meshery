{"kind":"ApplicationConfiguration","apiVersion":"core.oam.dev/v1alpha2","displayName":"Application Configuration","format":"JSON","hostname":"","hostID":"00000000-0000-0000-0000-000000000000","displayhostname":"","metadata":{"capabilities":"","genealogy":"","isAnnotation":false,"isModelAnnotation":"FALSE","isNamespaced":true,"logoURL":"","model":"vela-core-legacy","modelDisplayName":"Vela Core Legacy","primaryColor":"#00B39F","published":false,"secondaryColor":"#00D3A9","shape":"circle","styleOverrides":"","subCategory":"Application Definition \u0026 Image Build","svgColor":"","svgComplete":"","svgWhite":""},"model":{"name":"vela-core-legacy","version":"1.8.0-beta.1","displayName":"Vela Core Legacy","hostname":"","hostID":"00000000-0000-0000-0000-000000000000","displayhostname":"","category":{"name":"App Definition and Development","metadata":null},"metadata":{"source_uri":"https://kubevelacharts.oss-cn-hangzhou.aliyuncs.com/core/vela-core-legacy-1.9.0-beta.1.tgz"},"components":null,"relationships":null},"schema":"{\n \"description\": \"An ApplicationConfiguration represents an OAM application.\",\n \"properties\": {\n  \"spec\": {\n   \"description\": \"An ApplicationConfigurationSpec defines the desired state of a ApplicationConfiguration.\",\n   \"properties\": {\n    \"components\": {\n     \"description\": \"Components of which this ApplicationConfiguration consists. Each component will be used to instantiate a workload.\",\n     \"items\": {\n      \"description\": \"An ApplicationConfigurationComponent specifies a component of an ApplicationConfiguration. Each component is used to instantiate a workload.\",\n      \"properties\": {\n       \"componentName\": {\n        \"description\": \"ComponentName specifies a component whose latest revision will be bind with ApplicationConfiguration. When the spec of the referenced component changes, ApplicationConfiguration will automatically migrate all trait affect from the prior revision to the new one. This is mutually exclusive with RevisionName.\",\n        \"type\": \"string\"\n       },\n       \"dataInputs\": {\n        \"description\": \"DataInputs specify the data input sinks into this component.\",\n        \"items\": {\n         \"description\": \"DataInput specifies a data input sink to an object. If input is array, it will be appended to the target field paths.\",\n         \"properties\": {\n          \"conditions\": {\n           \"description\": \"When the Conditions is satified, ToFieldPaths will be filled with passed value\",\n           \"items\": {\n            \"description\": \"ConditionRequirement specifies the requirement to match a value.\",\n            \"properties\": {\n             \"fieldPath\": {\n              \"description\": \"FieldPath specifies got value from workload/trait object\",\n              \"type\": \"string\"\n             },\n             \"op\": {\n              \"description\": \"ConditionOperator specifies the operator to match a value.\",\n              \"type\": \"string\"\n             },\n             \"value\": {\n              \"description\": \"Value specifies an expected value This is mutually exclusive with ValueFrom\",\n              \"type\": \"string\"\n             },\n             \"valueFrom\": {\n              \"description\": \"ValueFrom specifies expected value from AppConfig This is mutually exclusive with Value\",\n              \"properties\": {\n               \"fieldPath\": {\n                \"type\": \"string\"\n               }\n              },\n              \"required\": [\n               \"fieldPath\"\n              ],\n              \"type\": \"object\"\n             }\n            },\n            \"required\": [\n             \"op\"\n            ],\n            \"type\": \"object\"\n           },\n           \"type\": \"array\"\n          },\n          \"inputStore\": {\n           \"description\": \"InputStore specifies the object used to read intermediate data genereted by DataOutput\",\n           \"properties\": {\n            \"apiVersion\": {\n             \"description\": \"API version of the referent.\",\n             \"type\": \"string\"\n            },\n            \"fieldPath\": {\n             \"description\": \"If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: \\\"spec.containers{name}\\\" (where \\\"name\\\" refers to the name of the container that triggered the event) or if no container name is specified \\\"spec.containers[2]\\\" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.\",\n             \"type\": \"string\"\n            },\n            \"kind\": {\n             \"description\": \"Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\",\n             \"type\": \"string\"\n            },\n            \"name\": {\n             \"description\": \"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\",\n             \"type\": \"string\"\n            },\n            \"namespace\": {\n             \"description\": \"Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/\",\n             \"type\": \"string\"\n            },\n            \"operations\": {\n             \"description\": \"Operations specify the data processing operations\",\n             \"items\": {\n              \"description\": \"DataOperation defines the specific operation for data\",\n              \"properties\": {\n               \"conditions\": {\n                \"items\": {\n                 \"description\": \"ConditionRequirement specifies the requirement to match a value.\",\n                 \"properties\": {\n                  \"fieldPath\": {\n                   \"description\": \"FieldPath specifies got value from workload/trait object\",\n                   \"type\": \"string\"\n                  },\n                  \"op\": {\n                   \"description\": \"ConditionOperator specifies the operator to match a value.\",\n                   \"type\": \"string\"\n                  },\n                  \"value\": {\n                   \"description\": \"Value specifies an expected value This is mutually exclusive with ValueFrom\",\n                   \"type\": \"string\"\n                  },\n                  \"valueFrom\": {\n                   \"description\": \"ValueFrom specifies expected value from AppConfig This is mutually exclusive with Value\",\n                   \"properties\": {\n                    \"fieldPath\": {\n                     \"type\": \"string\"\n                    }\n                   },\n                   \"required\": [\n                    \"fieldPath\"\n                   ],\n                   \"type\": \"object\"\n                  }\n                 },\n                 \"required\": [\n                  \"op\"\n                 ],\n                 \"type\": \"object\"\n                },\n                \"type\": \"array\"\n               },\n               \"op\": {\n                \"description\": \"Operator specifies the operation under this DataOperation type\",\n                \"type\": \"string\"\n               },\n               \"toDataPath\": {\n                \"description\": \"ToDataPath refers to the value of an object's specfied by ToDataPath. For example the ToDataPath \\\"redis\\\" specifies \\\"redis info\\\" in '{\\\"redis\\\":\\\"redis info\\\"}'\",\n                \"type\": \"string\"\n               },\n               \"toFieldPath\": {\n                \"description\": \"ToFieldPath refers to the value of an object's field\",\n                \"type\": \"string\"\n               },\n               \"type\": {\n                \"description\": \"Type specifies the type of DataOperation\",\n                \"type\": \"string\"\n               },\n               \"value\": {\n                \"description\": \"Value specifies an expected value This is mutually exclusive with ValueFrom\",\n                \"type\": \"string\"\n               },\n               \"valueFrom\": {\n                \"description\": \"ValueFrom specifies expected value from object such as workload and trait This is mutually exclusive with Value\",\n                \"properties\": {\n                 \"fieldPath\": {\n                  \"type\": \"string\"\n                 }\n                },\n                \"required\": [\n                 \"fieldPath\"\n                ],\n                \"type\": \"object\"\n               }\n              },\n              \"required\": [\n               \"op\",\n               \"toFieldPath\",\n               \"type\"\n              ],\n              \"type\": \"object\"\n             },\n             \"type\": \"array\"\n            },\n            \"resourceVersion\": {\n             \"description\": \"Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\",\n             \"type\": \"string\"\n            },\n            \"uid\": {\n             \"description\": \"UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids\",\n             \"type\": \"string\"\n            }\n           },\n           \"type\": \"object\",\n           \"x-kubernetes-map-type\": \"atomic\"\n          },\n          \"strategyMergeKeys\": {\n           \"description\": \"StrategyMergeKeys specifies the merge key if the toFieldPaths target is an array. The StrategyMergeKeys is optional, by default, if the toFieldPaths target is an array, we will append. If StrategyMergeKeys specified, we will check the key in the target array. If any key exist, do update; if no key exist, append.\",\n           \"items\": {\n            \"type\": \"string\"\n           },\n           \"type\": \"array\"\n          },\n          \"toFieldPaths\": {\n           \"description\": \"ToFieldPaths specifies the field paths of an object to fill passed value.\",\n           \"items\": {\n            \"type\": \"string\"\n           },\n           \"type\": \"array\"\n          },\n          \"valueFrom\": {\n           \"description\": \"ValueFrom specifies the value source.\",\n           \"properties\": {\n            \"dataOutputName\": {\n             \"description\": \"DataOutputName matches a name of a DataOutput in the same AppConfig.\",\n             \"type\": \"string\"\n            }\n           },\n           \"required\": [\n            \"dataOutputName\"\n           ],\n           \"type\": \"object\"\n          }\n         },\n         \"type\": \"object\"\n        },\n        \"type\": \"array\"\n       },\n       \"dataOutputs\": {\n        \"description\": \"DataOutputs specify the data output sources from this component.\",\n        \"items\": {\n         \"description\": \"DataOutput specifies a data output source from an object.\",\n         \"properties\": {\n          \"conditions\": {\n           \"description\": \"Conditions specify the conditions that should be satisfied before emitting a data output. Different conditions are AND-ed together. If no conditions is specified, it is by default to check output value not empty.\",\n           \"items\": {\n            \"description\": \"ConditionRequirement specifies the requirement to match a value.\",\n            \"properties\": {\n             \"fieldPath\": {\n              \"description\": \"FieldPath specifies got value from workload/trait object\",\n              \"type\": \"string\"\n             },\n             \"op\": {\n              \"description\": \"ConditionOperator specifies the operator to match a value.\",\n              \"type\": \"string\"\n             },\n             \"value\": {\n              \"description\": \"Value specifies an expected value This is mutually exclusive with ValueFrom\",\n              \"type\": \"string\"\n             },\n             \"valueFrom\": {\n              \"description\": \"ValueFrom specifies expected value from AppConfig This is mutually exclusive with Value\",\n              \"properties\": {\n               \"fieldPath\": {\n                \"type\": \"string\"\n               }\n              },\n              \"required\": [\n               \"fieldPath\"\n              ],\n              \"type\": \"object\"\n             }\n            },\n            \"required\": [\n             \"op\"\n            ],\n            \"type\": \"object\"\n           },\n           \"type\": \"array\"\n          },\n          \"fieldPath\": {\n           \"description\": \"FieldPath refers to the value of an object's field.\",\n           \"type\": \"string\"\n          },\n          \"name\": {\n           \"description\": \"Name is the unique name of a DataOutput in an ApplicationConfiguration.\",\n           \"type\": \"string\"\n          },\n          \"outputStore\": {\n           \"description\": \"OutputStore specifies the object used to store intermediate data generated by Operations\",\n           \"properties\": {\n            \"apiVersion\": {\n             \"description\": \"API version of the referent.\",\n             \"type\": \"string\"\n            },\n            \"fieldPath\": {\n             \"description\": \"If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: \\\"spec.containers{name}\\\" (where \\\"name\\\" refers to the name of the container that triggered the event) or if no container name is specified \\\"spec.containers[2]\\\" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.\",\n             \"type\": \"string\"\n            },\n            \"kind\": {\n             \"description\": \"Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\",\n             \"type\": \"string\"\n            },\n            \"name\": {\n             \"description\": \"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\",\n             \"type\": \"string\"\n            },\n            \"namespace\": {\n             \"description\": \"Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/\",\n             \"type\": \"string\"\n            },\n            \"operations\": {\n             \"description\": \"Operations specify the data processing operations\",\n             \"items\": {\n              \"description\": \"DataOperation defines the specific operation for data\",\n              \"properties\": {\n               \"conditions\": {\n                \"items\": {\n                 \"description\": \"ConditionRequirement specifies the requirement to match a value.\",\n                 \"properties\": {\n                  \"fieldPath\": {\n                   \"description\": \"FieldPath specifies got value from workload/trait object\",\n                   \"type\": \"string\"\n                  },\n                  \"op\": {\n                   \"description\": \"ConditionOperator specifies the operator to match a value.\",\n                   \"type\": \"string\"\n                  },\n                  \"value\": {\n                   \"description\": \"Value specifies an expected value This is mutually exclusive with ValueFrom\",\n                   \"type\": \"string\"\n                  },\n                  \"valueFrom\": {\n                   \"description\": \"ValueFrom specifies expected value from AppConfig This is mutually exclusive with Value\",\n                   \"properties\": {\n                    \"fieldPath\": {\n                     \"type\": \"string\"\n                    }\n                   },\n                   \"required\": [\n                    \"fieldPath\"\n                   ],\n                   \"type\": \"object\"\n                  }\n                 },\n                 \"required\": [\n                  \"op\"\n                 ],\n                 \"type\": \"object\"\n                },\n                \"type\": \"array\"\n               },\n               \"op\": {\n                \"description\": \"Operator specifies the operation under this DataOperation type\",\n                \"type\": \"string\"\n               },\n               \"toDataPath\": {\n                \"description\": \"ToDataPath refers to the value of an object's specfied by ToDataPath. For example the ToDataPath \\\"redis\\\" specifies \\\"redis info\\\" in '{\\\"redis\\\":\\\"redis info\\\"}'\",\n                \"type\": \"string\"\n               },\n               \"toFieldPath\": {\n                \"description\": \"ToFieldPath refers to the value of an object's field\",\n                \"type\": \"string\"\n               },\n               \"type\": {\n                \"description\": \"Type specifies the type of DataOperation\",\n                \"type\": \"string\"\n               },\n               \"value\": {\n                \"description\": \"Value specifies an expected value This is mutually exclusive with ValueFrom\",\n                \"type\": \"string\"\n               },\n               \"valueFrom\": {\n                \"description\": \"ValueFrom specifies expected value from object such as workload and trait This is mutually exclusive with Value\",\n                \"properties\": {\n                 \"fieldPath\": {\n                  \"type\": \"string\"\n                 }\n                },\n                \"required\": [\n                 \"fieldPath\"\n                ],\n                \"type\": \"object\"\n               }\n              },\n              \"required\": [\n               \"op\",\n               \"toFieldPath\",\n               \"type\"\n              ],\n              \"type\": \"object\"\n             },\n             \"type\": \"array\"\n            },\n            \"resourceVersion\": {\n             \"description\": \"Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\",\n             \"type\": \"string\"\n            },\n            \"uid\": {\n             \"description\": \"UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids\",\n             \"type\": \"string\"\n            }\n           },\n           \"type\": \"object\",\n           \"x-kubernetes-map-type\": \"atomic\"\n          }\n         },\n         \"type\": \"object\"\n        },\n        \"type\": \"array\"\n       },\n       \"parameterValues\": {\n        \"description\": \"ParameterValues specify values for the the specified component's parameters. Any parameter required by the component must be specified.\",\n        \"items\": {\n         \"description\": \"A ComponentParameterValue specifies a value for a named parameter. The associated component must publish a parameter with this name.\",\n         \"properties\": {\n          \"name\": {\n           \"description\": \"Name of the component parameter to set.\",\n           \"type\": \"string\"\n          },\n          \"value\": {\n           \"anyOf\": [\n            {\n             \"type\": \"integer\"\n            },\n            {\n             \"type\": \"string\"\n            }\n           ],\n           \"description\": \"Value to set.\",\n           \"x-kubernetes-int-or-string\": true\n          }\n         },\n         \"required\": [\n          \"name\",\n          \"value\"\n         ],\n         \"type\": \"object\"\n        },\n        \"type\": \"array\"\n       },\n       \"revisionName\": {\n        \"description\": \"RevisionName of a specific component revision to which to bind ApplicationConfiguration. This is mutually exclusive with componentName.\",\n        \"type\": \"string\"\n       },\n       \"scopes\": {\n        \"description\": \"Scopes in which the specified component should exist.\",\n        \"items\": {\n         \"description\": \"A ComponentScope specifies a scope in which a component should exist.\",\n         \"properties\": {\n          \"scopeRef\": {\n           \"description\": \"A ScopeReference must refer to an OAM scope resource.\",\n           \"properties\": {\n            \"apiVersion\": {\n             \"description\": \"API version of the referent.\",\n             \"type\": \"string\"\n            },\n            \"fieldPath\": {\n             \"description\": \"If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: \\\"spec.containers{name}\\\" (where \\\"name\\\" refers to the name of the container that triggered the event) or if no container name is specified \\\"spec.containers[2]\\\" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.\",\n             \"type\": \"string\"\n            },\n            \"kind\": {\n             \"description\": \"Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\",\n             \"type\": \"string\"\n            },\n            \"name\": {\n             \"description\": \"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\",\n             \"type\": \"string\"\n            },\n            \"namespace\": {\n             \"description\": \"Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/\",\n             \"type\": \"string\"\n            },\n            \"resourceVersion\": {\n             \"description\": \"Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\",\n             \"type\": \"string\"\n            },\n            \"uid\": {\n             \"description\": \"UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids\",\n             \"type\": \"string\"\n            }\n           },\n           \"type\": \"object\",\n           \"x-kubernetes-map-type\": \"atomic\"\n          }\n         },\n         \"required\": [\n          \"scopeRef\"\n         ],\n         \"type\": \"object\"\n        },\n        \"type\": \"array\"\n       },\n       \"traits\": {\n        \"description\": \"Traits of the specified component.\",\n        \"items\": {\n         \"description\": \"A ComponentTrait specifies a trait that should be applied to a component.\",\n         \"properties\": {\n          \"dataInputs\": {\n           \"description\": \"DataInputs specify the data input sinks into this trait.\",\n           \"items\": {\n            \"description\": \"DataInput specifies a data input sink to an object. If input is array, it will be appended to the target field paths.\",\n            \"properties\": {\n             \"conditions\": {\n              \"description\": \"When the Conditions is satified, ToFieldPaths will be filled with passed value\",\n              \"items\": {\n               \"description\": \"ConditionRequirement specifies the requirement to match a value.\",\n               \"properties\": {\n                \"fieldPath\": {\n                 \"description\": \"FieldPath specifies got value from workload/trait object\",\n                 \"type\": \"string\"\n                },\n                \"op\": {\n                 \"description\": \"ConditionOperator specifies the operator to match a value.\",\n                 \"type\": \"string\"\n                },\n                \"value\": {\n                 \"description\": \"Value specifies an expected value This is mutually exclusive with ValueFrom\",\n                 \"type\": \"string\"\n                },\n                \"valueFrom\": {\n                 \"description\": \"ValueFrom specifies expected value from AppConfig This is mutually exclusive with Value\",\n                 \"properties\": {\n                  \"fieldPath\": {\n                   \"type\": \"string\"\n                  }\n                 },\n                 \"required\": [\n                  \"fieldPath\"\n                 ],\n                 \"type\": \"object\"\n                }\n               },\n               \"required\": [\n                \"op\"\n               ],\n               \"type\": \"object\"\n              },\n              \"type\": \"array\"\n             },\n             \"inputStore\": {\n              \"description\": \"InputStore specifies the object used to read intermediate data genereted by DataOutput\",\n              \"properties\": {\n               \"apiVersion\": {\n                \"description\": \"API version of the referent.\",\n                \"type\": \"string\"\n               },\n               \"fieldPath\": {\n                \"description\": \"If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: \\\"spec.containers{name}\\\" (where \\\"name\\\" refers to the name of the container that triggered the event) or if no container name is specified \\\"spec.containers[2]\\\" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.\",\n                \"type\": \"string\"\n               },\n               \"kind\": {\n                \"description\": \"Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\",\n                \"type\": \"string\"\n               },\n               \"name\": {\n                \"description\": \"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\",\n                \"type\": \"string\"\n               },\n               \"namespace\": {\n                \"description\": \"Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/\",\n                \"type\": \"string\"\n               },\n               \"operations\": {\n                \"description\": \"Operations specify the data processing operations\",\n                \"items\": {\n                 \"description\": \"DataOperation defines the specific operation for data\",\n                 \"properties\": {\n                  \"conditions\": {\n                   \"items\": {\n                    \"description\": \"ConditionRequirement specifies the requirement to match a value.\",\n                    \"properties\": {\n                     \"fieldPath\": {\n                      \"description\": \"FieldPath specifies got value from workload/trait object\",\n                      \"type\": \"string\"\n                     },\n                     \"op\": {\n                      \"description\": \"ConditionOperator specifies the operator to match a value.\",\n                      \"type\": \"string\"\n                     },\n                     \"value\": {\n                      \"description\": \"Value specifies an expected value This is mutually exclusive with ValueFrom\",\n                      \"type\": \"string\"\n                     },\n                     \"valueFrom\": {\n                      \"description\": \"ValueFrom specifies expected value from AppConfig This is mutually exclusive with Value\",\n                      \"properties\": {\n                       \"fieldPath\": {\n                        \"type\": \"string\"\n                       }\n                      },\n                      \"required\": [\n                       \"fieldPath\"\n                      ],\n                      \"type\": \"object\"\n                     }\n                    },\n                    \"required\": [\n                     \"op\"\n                    ],\n                    \"type\": \"object\"\n                   },\n                   \"type\": \"array\"\n                  },\n                  \"op\": {\n                   \"description\": \"Operator specifies the operation under this DataOperation type\",\n                   \"type\": \"string\"\n                  },\n                  \"toDataPath\": {\n                   \"description\": \"ToDataPath refers to the value of an object's specfied by ToDataPath. For example the ToDataPath \\\"redis\\\" specifies \\\"redis info\\\" in '{\\\"redis\\\":\\\"redis info\\\"}'\",\n                   \"type\": \"string\"\n                  },\n                  \"toFieldPath\": {\n                   \"description\": \"ToFieldPath refers to the value of an object's field\",\n                   \"type\": \"string\"\n                  },\n                  \"type\": {\n                   \"description\": \"Type specifies the type of DataOperation\",\n                   \"type\": \"string\"\n                  },\n                  \"value\": {\n                   \"description\": \"Value specifies an expected value This is mutually exclusive with ValueFrom\",\n                   \"type\": \"string\"\n                  },\n                  \"valueFrom\": {\n                   \"description\": \"ValueFrom specifies expected value from object such as workload and trait This is mutually exclusive with Value\",\n                   \"properties\": {\n                    \"fieldPath\": {\n                     \"type\": \"string\"\n                    }\n                   },\n                   \"required\": [\n                    \"fieldPath\"\n                   ],\n                   \"type\": \"object\"\n                  }\n                 },\n                 \"required\": [\n                  \"op\",\n                  \"toFieldPath\",\n                  \"type\"\n                 ],\n                 \"type\": \"object\"\n                },\n                \"type\": \"array\"\n               },\n               \"resourceVersion\": {\n                \"description\": \"Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\",\n                \"type\": \"string\"\n               },\n               \"uid\": {\n                \"description\": \"UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids\",\n                \"type\": \"string\"\n               }\n              },\n              \"type\": \"object\",\n              \"x-kubernetes-map-type\": \"atomic\"\n             },\n             \"strategyMergeKeys\": {\n              \"description\": \"StrategyMergeKeys specifies the merge key if the toFieldPaths target is an array. The StrategyMergeKeys is optional, by default, if the toFieldPaths target is an array, we will append. If StrategyMergeKeys specified, we will check the key in the target array. If any key exist, do update; if no key exist, append.\",\n              \"items\": {\n               \"type\": \"string\"\n              },\n              \"type\": \"array\"\n             },\n             \"toFieldPaths\": {\n              \"description\": \"ToFieldPaths specifies the field paths of an object to fill passed value.\",\n              \"items\": {\n               \"type\": \"string\"\n              },\n              \"type\": \"array\"\n             },\n             \"valueFrom\": {\n              \"description\": \"ValueFrom specifies the value source.\",\n              \"properties\": {\n               \"dataOutputName\": {\n                \"description\": \"DataOutputName matches a name of a DataOutput in the same AppConfig.\",\n                \"type\": \"string\"\n               }\n              },\n              \"required\": [\n               \"dataOutputName\"\n              ],\n              \"type\": \"object\"\n             }\n            },\n            \"type\": \"object\"\n           },\n           \"type\": \"array\"\n          },\n          \"dataOutputs\": {\n           \"description\": \"DataOutputs specify the data output sources from this trait.\",\n           \"items\": {\n            \"description\": \"DataOutput specifies a data output source from an object.\",\n            \"properties\": {\n             \"conditions\": {\n              \"description\": \"Conditions specify the conditions that should be satisfied before emitting a data output. Different conditions are AND-ed together. If no conditions is specified, it is by default to check output value not empty.\",\n              \"items\": {\n               \"description\": \"ConditionRequirement specifies the requirement to match a value.\",\n               \"properties\": {\n                \"fieldPath\": {\n                 \"description\": \"FieldPath specifies got value from workload/trait object\",\n                 \"type\": \"string\"\n                },\n                \"op\": {\n                 \"description\": \"ConditionOperator specifies the operator to match a value.\",\n                 \"type\": \"string\"\n                },\n                \"value\": {\n                 \"description\": \"Value specifies an expected value This is mutually exclusive with ValueFrom\",\n                 \"type\": \"string\"\n                },\n                \"valueFrom\": {\n                 \"description\": \"ValueFrom specifies expected value from AppConfig This is mutually exclusive with Value\",\n                 \"properties\": {\n                  \"fieldPath\": {\n                   \"type\": \"string\"\n                  }\n                 },\n                 \"required\": [\n                  \"fieldPath\"\n                 ],\n                 \"type\": \"object\"\n                }\n               },\n               \"required\": [\n                \"op\"\n               ],\n               \"type\": \"object\"\n              },\n              \"type\": \"array\"\n             },\n             \"fieldPath\": {\n              \"description\": \"FieldPath refers to the value of an object's field.\",\n              \"type\": \"string\"\n             },\n             \"name\": {\n              \"description\": \"Name is the unique name of a DataOutput in an ApplicationConfiguration.\",\n              \"type\": \"string\"\n             },\n             \"outputStore\": {\n              \"description\": \"OutputStore specifies the object used to store intermediate data generated by Operations\",\n              \"properties\": {\n               \"apiVersion\": {\n                \"description\": \"API version of the referent.\",\n                \"type\": \"string\"\n               },\n               \"fieldPath\": {\n                \"description\": \"If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: \\\"spec.containers{name}\\\" (where \\\"name\\\" refers to the name of the container that triggered the event) or if no container name is specified \\\"spec.containers[2]\\\" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.\",\n                \"type\": \"string\"\n               },\n               \"kind\": {\n                \"description\": \"Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\",\n                \"type\": \"string\"\n               },\n               \"name\": {\n                \"description\": \"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\",\n                \"type\": \"string\"\n               },\n               \"namespace\": {\n                \"description\": \"Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/\",\n                \"type\": \"string\"\n               },\n               \"operations\": {\n                \"description\": \"Operations specify the data processing operations\",\n                \"items\": {\n                 \"description\": \"DataOperation defines the specific operation for data\",\n                 \"properties\": {\n                  \"conditions\": {\n                   \"items\": {\n                    \"description\": \"ConditionRequirement specifies the requirement to match a value.\",\n                    \"properties\": {\n                     \"fieldPath\": {\n                      \"description\": \"FieldPath specifies got value from workload/trait object\",\n                      \"type\": \"string\"\n                     },\n                     \"op\": {\n                      \"description\": \"ConditionOperator specifies the operator to match a value.\",\n                      \"type\": \"string\"\n                     },\n                     \"value\": {\n                      \"description\": \"Value specifies an expected value This is mutually exclusive with ValueFrom\",\n                      \"type\": \"string\"\n                     },\n                     \"valueFrom\": {\n                      \"description\": \"ValueFrom specifies expected value from AppConfig This is mutually exclusive with Value\",\n                      \"properties\": {\n                       \"fieldPath\": {\n                        \"type\": \"string\"\n                       }\n                      },\n                      \"required\": [\n                       \"fieldPath\"\n                      ],\n                      \"type\": \"object\"\n                     }\n                    },\n                    \"required\": [\n                     \"op\"\n                    ],\n                    \"type\": \"object\"\n                   },\n                   \"type\": \"array\"\n                  },\n                  \"op\": {\n                   \"description\": \"Operator specifies the operation under this DataOperation type\",\n                   \"type\": \"string\"\n                  },\n                  \"toDataPath\": {\n                   \"description\": \"ToDataPath refers to the value of an object's specfied by ToDataPath. For example the ToDataPath \\\"redis\\\" specifies \\\"redis info\\\" in '{\\\"redis\\\":\\\"redis info\\\"}'\",\n                   \"type\": \"string\"\n                  },\n                  \"toFieldPath\": {\n                   \"description\": \"ToFieldPath refers to the value of an object's field\",\n                   \"type\": \"string\"\n                  },\n                  \"type\": {\n                   \"description\": \"Type specifies the type of DataOperation\",\n                   \"type\": \"string\"\n                  },\n                  \"value\": {\n                   \"description\": \"Value specifies an expected value This is mutually exclusive with ValueFrom\",\n                   \"type\": \"string\"\n                  },\n                  \"valueFrom\": {\n                   \"description\": \"ValueFrom specifies expected value from object such as workload and trait This is mutually exclusive with Value\",\n                   \"properties\": {\n                    \"fieldPath\": {\n                     \"type\": \"string\"\n                    }\n                   },\n                   \"required\": [\n                    \"fieldPath\"\n                   ],\n                   \"type\": \"object\"\n                  }\n                 },\n                 \"required\": [\n                  \"op\",\n                  \"toFieldPath\",\n                  \"type\"\n                 ],\n                 \"type\": \"object\"\n                },\n                \"type\": \"array\"\n               },\n               \"resourceVersion\": {\n                \"description\": \"Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\",\n                \"type\": \"string\"\n               },\n               \"uid\": {\n                \"description\": \"UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids\",\n                \"type\": \"string\"\n               }\n              },\n              \"type\": \"object\",\n              \"x-kubernetes-map-type\": \"atomic\"\n             }\n            },\n            \"type\": \"object\"\n           },\n           \"type\": \"array\"\n          },\n          \"trait\": {\n           \"description\": \"A Trait that will be created for the component\",\n           \"type\": \"object\"\n          }\n         },\n         \"required\": [\n          \"trait\"\n         ],\n         \"type\": \"object\"\n        },\n        \"type\": \"array\"\n       }\n      },\n      \"type\": \"object\"\n     },\n     \"type\": \"array\"\n    }\n   },\n   \"required\": [\n    \"components\"\n   ],\n   \"type\": \"object\"\n  }\n },\n \"title\": \"Application Configuration\",\n \"type\": \"object\"\n}"}