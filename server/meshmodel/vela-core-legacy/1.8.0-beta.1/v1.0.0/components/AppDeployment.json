{
  "capabilities": [
   {
    "description": "Initiate a performance test. Meshery will execute the load generation, collect metrics, and present the results.",
    "displayName": "Performance Test",
    "entityState": [
     "instance"
    ],
    "key": "",
    "kind": "action",
    "metadata": null,
    "schemaVersion": "capability.meshery.io/v1alpha1",
    "status": "enabled",
    "subType": "perf-test",
    "type": "operator",
    "version": "0.7.0"
   },
   {
    "description": "Configure the workload specific setting of a component",
    "displayName": "Workload Configuration",
    "entityState": [
     "declaration"
    ],
    "key": "",
    "kind": "mutate",
    "metadata": null,
    "schemaVersion": "capability.meshery.io/v1alpha1",
    "status": "enabled",
    "subType": "config",
    "type": "configuration",
    "version": "0.7.0"
   },
   {
    "description": "Configure Labels And Annotations for  the component ",
    "displayName": "Labels and Annotations Configuration",
    "entityState": [
     "declaration"
    ],
    "key": "",
    "kind": "mutate",
    "metadata": null,
    "schemaVersion": "capability.meshery.io/v1alpha1",
    "status": "enabled",
    "subType": "labels-and-annotations",
    "type": "configuration",
    "version": "0.7.0"
   },
   {
    "description": "View relationships for the component",
    "displayName": "Relationships",
    "entityState": [
     "declaration",
     "instance"
    ],
    "key": "",
    "kind": "view",
    "metadata": null,
    "schemaVersion": "capability.meshery.io/v1alpha1",
    "status": "enabled",
    "subType": "relationship",
    "type": "configuration",
    "version": "0.7.0"
   },
   {
    "description": "View Component Definition ",
    "displayName": "Json Schema",
    "entityState": [
     "declaration",
     "instance"
    ],
    "key": "",
    "kind": "view",
    "metadata": null,
    "schemaVersion": "capability.meshery.io/v1alpha1",
    "status": "enabled",
    "subType": "definition",
    "type": "configuration",
    "version": "0.7.0"
   },
   {
    "description": "Configure the visual styles for the component",
    "displayName": "Styling",
    "entityState": [
     "declaration"
    ],
    "key": "",
    "kind": "mutate",
    "metadata": null,
    "schemaVersion": "capability.meshery.io/v1alpha1",
    "status": "enabled",
    "subType": "",
    "type": "style",
    "version": "0.7.0"
   },
   {
    "description": "Change the shape of the component",
    "displayName": "Change Shape",
    "entityState": [
     "declaration"
    ],
    "key": "",
    "kind": "mutate",
    "metadata": null,
    "schemaVersion": "capability.meshery.io/v1alpha1",
    "status": "enabled",
    "subType": "shape",
    "type": "style",
    "version": "0.7.0"
   },
   {
    "description": "Drag and Drop a component into a parent component in graph view",
    "displayName": "Compound Drag And Drop",
    "entityState": [
     "declaration"
    ],
    "key": "",
    "kind": "interaction",
    "metadata": null,
    "schemaVersion": "capability.meshery.io/v1alpha1",
    "status": "enabled",
    "subType": "compoundDnd",
    "type": "graph",
    "version": "0.7.0"
   }
  ],
  "component": {
   "kind": "AppDeployment",
   "schema": "{\n \"description\": \"AppDeployment is the Schema for the AppDeployment API\",\n \"properties\": {\n  \"spec\": {\n   \"description\": \"AppDeploymentSpec defines how to describe an upgrade between different apps\",\n   \"properties\": {\n    \"appRevisions\": {\n     \"description\": \"AppRevision specifies  AppRevision resources to and the rules to apply to them.\",\n     \"items\": {\n      \"description\": \"AppRevision specifies an AppRevision resource to and the rules to apply to it.\",\n      \"properties\": {\n       \"placement\": {\n        \"description\": \"Placement defines the cluster placement rules for an app revision.\",\n        \"items\": {\n         \"description\": \"ClusterPlacement defines the cluster placement rules for an app revision.\",\n         \"properties\": {\n          \"clusterSelector\": {\n           \"description\": \"ClusterSelector selects the cluster to  deploy apps to. If not specified, it indicates the host cluster per se.\",\n           \"properties\": {\n            \"labels\": {\n             \"additionalProperties\": {\n              \"type\": \"string\"\n             },\n             \"description\": \"Labels defines the label selector to select the cluster.\",\n             \"type\": \"object\"\n            },\n            \"name\": {\n             \"description\": \"Name is the name of the cluster.\",\n             \"type\": \"string\"\n            }\n           },\n           \"type\": \"object\"\n          },\n          \"distribution\": {\n           \"description\": \"Distribution defines the replica distribution of an AppRevision to a cluster.\",\n           \"properties\": {\n            \"replicas\": {\n             \"description\": \"Replicas is the replica number.\",\n             \"type\": \"integer\"\n            }\n           },\n           \"type\": \"object\"\n          }\n         },\n         \"type\": \"object\"\n        },\n        \"type\": \"array\"\n       },\n       \"revisionName\": {\n        \"description\": \"RevisionName is the name of the AppRevision.\",\n        \"type\": \"string\"\n       }\n      },\n      \"type\": \"object\"\n     },\n     \"type\": \"array\"\n    },\n    \"traffic\": {\n     \"description\": \"Traffic defines the traffic rules to apply across revisions.\",\n     \"properties\": {\n      \"gateways\": {\n       \"description\": \"Gateways specifies the names of gateways that should apply these rules. Gateways in other namespaces may be referred to by `\\u003cgateway namespace\\u003e/\\u003cgateway name\\u003e`; specifying a gateway with no namespace qualifier is the same as specifying the AppDeployment's namespace.\",\n       \"items\": {\n        \"type\": \"string\"\n       },\n       \"type\": \"array\"\n      },\n      \"hosts\": {\n       \"description\": \"Hosts are the destination hosts to which traffic is being sent. Could be a DNS name with wildcard prefix or an IP address.\",\n       \"items\": {\n        \"type\": \"string\"\n       },\n       \"type\": \"array\"\n      },\n      \"http\": {\n       \"description\": \"HTTP defines the rules to match and split http traffoc across revisions.\",\n       \"items\": {\n        \"description\": \"HTTPRule defines the rules to match and split http traffic across revisions.\",\n        \"properties\": {\n         \"match\": {\n          \"description\": \"Match defines the conditions to be satisfied for the rule to be activated. All conditions inside a single match block have AND semantics, while the list of match blocks have OR semantics. The rule is matched if any one of the match blocks succeed.\",\n          \"items\": {\n           \"description\": \"HTTPMatchRequest specifies a set of criterion to be met in order for the rule to be applied to the HTTP request. For example, the following restricts the rule to match only requests where the URL path starts with /ratings/v2/ and the request contains a custom `end-user` header with value `jason`.\",\n           \"properties\": {\n            \"uri\": {\n             \"description\": \"URI defines how to match with an URI.\",\n             \"properties\": {\n              \"prefix\": {\n               \"type\": \"string\"\n              }\n             },\n             \"type\": \"object\"\n            }\n           },\n           \"type\": \"object\"\n          },\n          \"type\": \"array\"\n         },\n         \"weightedTargets\": {\n          \"description\": \"WeightedTargets defines the revision targets to select and route traffic to.\",\n          \"items\": {\n           \"description\": \"WeightedTarget defines the revision target to select and route traffic to.\",\n           \"properties\": {\n            \"componentName\": {\n             \"description\": \"ComponentName is the name of the component. Note that it is the original component name in the Application. No need to append revision.\",\n             \"type\": \"string\"\n            },\n            \"port\": {\n             \"description\": \"Port is the port to route traffic towards.\",\n             \"type\": \"integer\"\n            },\n            \"revisionName\": {\n             \"description\": \"RevisionName is the name of the app revision.\",\n             \"type\": \"string\"\n            },\n            \"weight\": {\n             \"description\": \"Weight defines the proportion of traffic to be forwarded to the service version. (0-100). Sum of weights across destinations SHOULD BE == 100. If there is only one destination in a rule, the weight value is assumed to be 100.\",\n             \"type\": \"integer\"\n            }\n           },\n           \"type\": \"object\"\n          },\n          \"type\": \"array\"\n         }\n        },\n        \"type\": \"object\"\n       },\n       \"type\": \"array\"\n      }\n     },\n     \"type\": \"object\"\n    }\n   },\n   \"type\": \"object\"\n  }\n },\n \"title\": \"App Deployment\",\n \"type\": \"object\"\n}",
   "version": "core.oam.dev/v1beta1"
  },
  "configuration": null,
  "description": "",
  "displayName": "App Deployment",
  "format": "JSON",
  "id": "00000000-0000-0000-0000-000000000000",
  "metadata": {
   "genealogy": "",
   "isAnnotation": false,
   "isNamespaced": true,
   "published": false
  },
  "model": {
   "category": {
    "name": "App Definition and Development"
   },
   "displayName": "Vela Core Legacy",
   "id": "00000000-0000-0000-0000-000000000000",
   "metadata": {
    "source_uri": "https://kubevelacharts.oss-cn-hangzhou.aliyuncs.com/core/vela-core-legacy-1.9.0-beta.1.tgz",
    "svgColor": "",
    "svgWhite": ""
   },
   "model": {
    "version": "1.8.0-beta.1"
   },
   "name": "vela-core-legacy",
   "registrant": {
    "created_at": "0001-01-01T00:00:00Z",
    "credential_id": "00000000-0000-0000-0000-000000000000",
    "deleted_at": "0001-01-01T00:00:00Z",
    "id": "00000000-0000-0000-0000-000000000000",
    "kind": "artifacthub",
    "name": "Artifact Hub",
    "status": "discovered",
    "sub_type": "",
    "type": "registry",
    "updated_at": "0001-01-01T00:00:00Z",
    "user_id": "00000000-0000-0000-0000-000000000000"
   },
   "connection_id": "00000000-0000-0000-0000-000000000000",
   "schemaVersion": "models.meshery.io/v1beta1",
   "status": "ignored",
   "version": "v1.0.0",
   "components": null,
   "relationships": null
  },
  "schemaVersion": "components.meshery.io/v1beta1",
  "status": "ignored",
  "styles": {
   "primaryColor": "#00B39F",
   "secondaryColor": "#00D3A9",
   "shape": "circle",
   "svgColor": "",
   "svgWhite": ""
  },
  "version": "v1.0.0"
 }