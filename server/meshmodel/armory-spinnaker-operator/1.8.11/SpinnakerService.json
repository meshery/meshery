{
  "id": "00000000-0000-0000-0000-000000000000",
  "kind": "SpinnakerService",
  "apiVersion": "spinnaker.armory.io/v1alpha2",
  "displayName": "Spinnaker Service",
  "format": "JSON",
  "hostID": "00000000-0000-0000-0000-000000000000",
  "metadata": {
   "isNamespaced": true
  },
  "model": {
   "id": "00000000-0000-0000-0000-000000000000",
   "name": "armory-spinnaker-operator",
   "version": "1.8.11",
   "displayName": "armory-spinnaker-operator",
   "status": "",
   "hostID": "00000000-0000-0000-0000-000000000000",
   "category": {
    "name": "",
    "metadata": null
   },
   "metadata": {
    "source_uri": "https://armory.jfrog.io/artifactory/charts/armory-spinnaker-operator-1.8.11.tgz"
   },
   "components": null,
   "relationships": null
  },
  "schema": "{\n \"description\": \"SpinnakerService is the Schema for the spinnakerservices API\",\n \"properties\": {\n  \"spec\": {\n   \"description\": \"SpinnakerServiceSpec defines the desired state of SpinnakerService\",\n   \"properties\": {\n    \"accounts\": {\n     \"properties\": {\n      \"dynamic\": {\n       \"description\": \"Enable accounts to be added dynamically\",\n       \"type\": \"boolean\"\n      },\n      \"enabled\": {\n       \"description\": \"Enable the injection of ArmoryAccount\",\n       \"type\": \"boolean\"\n      }\n     },\n     \"type\": \"object\"\n    },\n    \"expose\": {\n     \"description\": \"ExposeConfig represents the configuration for exposing Spinnaker\",\n     \"properties\": {\n      \"service\": {\n       \"description\": \"ExposeConfigService represents the configuration for exposing Spinnaker using k8s services\",\n       \"properties\": {\n        \"annotations\": {\n         \"additionalProperties\": {\n          \"type\": \"string\"\n         },\n         \"type\": \"object\"\n        },\n        \"overrides\": {\n         \"additionalProperties\": {\n          \"description\": \"ExposeConfigServiceOverrides represents expose configurations of type service, overriden by specific services\",\n          \"properties\": {\n           \"annotations\": {\n            \"additionalProperties\": {\n             \"type\": \"string\"\n            },\n            \"type\": \"object\"\n           },\n           \"publicPort\": {\n            \"format\": \"int32\",\n            \"type\": \"integer\"\n           },\n           \"type\": {\n            \"type\": \"string\"\n           }\n          },\n          \"type\": \"object\"\n         },\n         \"type\": \"object\"\n        },\n        \"publicPort\": {\n         \"format\": \"int32\",\n         \"type\": \"integer\"\n        },\n        \"type\": {\n         \"type\": \"string\"\n        }\n       },\n       \"type\": \"object\"\n      },\n      \"type\": {\n       \"type\": \"string\"\n      }\n     },\n     \"type\": \"object\"\n    },\n    \"kustomize\": {\n     \"additionalProperties\": {\n      \"properties\": {\n       \"deployment\": {\n        \"properties\": {\n         \"patches\": {\n          \"description\": \"Patches is a list of patches, where each one can be either a Strategic Merge Patch or a JSON patch. Each patch can be applied to multiple target objects.\",\n          \"items\": {\n           \"type\": \"string\"\n          },\n          \"type\": \"array\",\n          \"x-kubernetes-list-type\": \"atomic\"\n         },\n         \"patchesJson6902\": {\n          \"description\": \"JSONPatches is a list of JSONPatch for applying JSON patch. Format documented at https://tools.ietf.org/html/rfc6902 and http://jsonpatch.com\",\n          \"type\": \"string\"\n         },\n         \"patchesStrategicMerge\": {\n          \"description\": \"PatchesStrategicMerge specifies the relative path to a file containing a strategic merge patch.  Format documented at https://github.com/kubernetes/community/blob/master/contributors/devel/strategic-merge-patch.md URLs and globs are not supported.\",\n          \"items\": {\n           \"type\": \"string\"\n          },\n          \"type\": \"array\",\n          \"x-kubernetes-list-type\": \"atomic\"\n         }\n        },\n        \"type\": \"object\"\n       },\n       \"service\": {\n        \"properties\": {\n         \"patches\": {\n          \"description\": \"Patches is a list of patches, where each one can be either a Strategic Merge Patch or a JSON patch. Each patch can be applied to multiple target objects.\",\n          \"items\": {\n           \"type\": \"string\"\n          },\n          \"type\": \"array\",\n          \"x-kubernetes-list-type\": \"atomic\"\n         },\n         \"patchesJson6902\": {\n          \"description\": \"JSONPatches is a list of JSONPatch for applying JSON patch. Format documented at https://tools.ietf.org/html/rfc6902 and http://jsonpatch.com\",\n          \"type\": \"string\"\n         },\n         \"patchesStrategicMerge\": {\n          \"description\": \"PatchesStrategicMerge specifies the relative path to a file containing a strategic merge patch.  Format documented at https://github.com/kubernetes/community/blob/master/contributors/devel/strategic-merge-patch.md URLs and globs are not supported.\",\n          \"items\": {\n           \"type\": \"string\"\n          },\n          \"type\": \"array\",\n          \"x-kubernetes-list-type\": \"atomic\"\n         }\n        },\n        \"type\": \"object\"\n       }\n      },\n      \"type\": \"object\"\n     },\n     \"description\": \"Patch Kustomization of service and deployment per service\",\n     \"type\": \"object\"\n    },\n    \"networkPolicy\": {\n     \"description\": \"SpinnakerServiceStatus defines the observed state of SpinnakerService\",\n     \"properties\": {\n      \"enable\": {\n       \"type\": \"boolean\"\n      },\n      \"overrides\": {\n       \"additionalProperties\": {\n        \"description\": \"NetworkPolicyOverridesOptions represents rules (ingress, egress) configurations of network policies, overridden by specific services\",\n        \"properties\": {\n         \"egress\": {\n          \"items\": {\n           \"description\": \"NetworkPolicyEgressRule describes a particular set of traffic that is allowed out of pods matched by a NetworkPolicySpec's podSelector. The traffic must match both ports and to. This type is beta-level in 1.8\",\n           \"properties\": {\n            \"ports\": {\n             \"description\": \"List of destination ports for outgoing traffic. Each item in this list is combined using a logical OR. If this field is empty or missing, this rule matches all ports (traffic not restricted by port). If this field is present and contains at least one item, then this rule allows traffic only if the traffic matches at least one port in the list.\",\n             \"items\": {\n              \"description\": \"NetworkPolicyPort describes a port to allow traffic on\",\n              \"properties\": {\n               \"port\": {\n                \"anyOf\": [\n                 {\n                  \"type\": \"integer\"\n                 },\n                 {\n                  \"type\": \"string\"\n                 }\n                ],\n                \"description\": \"The port on the given protocol. This can either be a numerical or named port on a pod. If this field is not provided, this matches all port names and numbers.\",\n                \"x-kubernetes-int-or-string\": true\n               },\n               \"protocol\": {\n                \"default\": \"TCP\",\n                \"description\": \"The protocol (TCP, UDP, or SCTP) which traffic must match. If not specified, this field defaults to TCP.\",\n                \"type\": \"string\"\n               }\n              },\n              \"type\": \"object\"\n             },\n             \"type\": \"array\"\n            },\n            \"to\": {\n             \"description\": \"List of destinations for outgoing traffic of pods selected for this rule. Items in this list are combined using a logical OR operation. If this field is empty or missing, this rule matches all destinations (traffic not restricted by destination). If this field is present and contains at least one item, this rule allows traffic only if the traffic matches at least one item in the to list.\",\n             \"items\": {\n              \"description\": \"NetworkPolicyPeer describes a peer to allow traffic from. Only certain combinations of fields are allowed\",\n              \"properties\": {\n               \"ipBlock\": {\n                \"description\": \"IPBlock defines policy on a particular IPBlock. If this field is set then neither of the other fields can be.\",\n                \"properties\": {\n                 \"cidr\": {\n                  \"description\": \"CIDR is a string representing the IP Block Valid examples are \\\"192.168.1.1/24\\\" or \\\"2001:db9::/64\\\"\",\n                  \"type\": \"string\"\n                 },\n                 \"except\": {\n                  \"description\": \"Except is a slice of CIDRs that should not be included within an IP Block Valid examples are \\\"192.168.1.1/24\\\" or \\\"2001:db9::/64\\\" Except values will be rejected if they are outside the CIDR range\",\n                  \"items\": {\n                   \"type\": \"string\"\n                  },\n                  \"type\": \"array\"\n                 }\n                },\n                \"required\": [\n                 \"cidr\"\n                ],\n                \"type\": \"object\"\n               },\n               \"namespaceSelector\": {\n                \"description\": \"Selects Namespaces using cluster-scoped labels. This field follows standard label selector semantics; if present but empty, it selects all namespaces. \\n If PodSelector is also set, then the NetworkPolicyPeer as a whole selects the Pods matching PodSelector in the Namespaces selected by NamespaceSelector. Otherwise it selects all Pods in the Namespaces selected by NamespaceSelector.\",\n                \"properties\": {\n                 \"matchExpressions\": {\n                  \"description\": \"matchExpressions is a list of label selector requirements. The requirements are ANDed.\",\n                  \"items\": {\n                   \"description\": \"A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.\",\n                   \"properties\": {\n                    \"key\": {\n                     \"description\": \"key is the label key that the selector applies to.\",\n                     \"type\": \"string\"\n                    },\n                    \"operator\": {\n                     \"description\": \"operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.\",\n                     \"type\": \"string\"\n                    },\n                    \"values\": {\n                     \"description\": \"values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.\",\n                     \"items\": {\n                      \"type\": \"string\"\n                     },\n                     \"type\": \"array\"\n                    }\n                   },\n                   \"required\": [\n                    \"key\",\n                    \"operator\"\n                   ],\n                   \"type\": \"object\"\n                  },\n                  \"type\": \"array\"\n                 },\n                 \"matchLabels\": {\n                  \"additionalProperties\": {\n                   \"type\": \"string\"\n                  },\n                  \"description\": \"matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \\\"key\\\", the operator is \\\"In\\\", and the values array contains only \\\"value\\\". The requirements are ANDed.\",\n                  \"type\": \"object\"\n                 }\n                },\n                \"type\": \"object\"\n               },\n               \"podSelector\": {\n                \"description\": \"This is a label selector which selects Pods. This field follows standard label selector semantics; if present but empty, it selects all pods. \\n If NamespaceSelector is also set, then the NetworkPolicyPeer as a whole selects the Pods matching PodSelector in the Namespaces selected by NamespaceSelector. Otherwise it selects the Pods matching PodSelector in the policy's own Namespace.\",\n                \"properties\": {\n                 \"matchExpressions\": {\n                  \"description\": \"matchExpressions is a list of label selector requirements. The requirements are ANDed.\",\n                  \"items\": {\n                   \"description\": \"A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.\",\n                   \"properties\": {\n                    \"key\": {\n                     \"description\": \"key is the label key that the selector applies to.\",\n                     \"type\": \"string\"\n                    },\n                    \"operator\": {\n                     \"description\": \"operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.\",\n                     \"type\": \"string\"\n                    },\n                    \"values\": {\n                     \"description\": \"values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.\",\n                     \"items\": {\n                      \"type\": \"string\"\n                     },\n                     \"type\": \"array\"\n                    }\n                   },\n                   \"required\": [\n                    \"key\",\n                    \"operator\"\n                   ],\n                   \"type\": \"object\"\n                  },\n                  \"type\": \"array\"\n                 },\n                 \"matchLabels\": {\n                  \"additionalProperties\": {\n                   \"type\": \"string\"\n                  },\n                  \"description\": \"matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \\\"key\\\", the operator is \\\"In\\\", and the values array contains only \\\"value\\\". The requirements are ANDed.\",\n                  \"type\": \"object\"\n                 }\n                },\n                \"type\": \"object\"\n               }\n              },\n              \"type\": \"object\"\n             },\n             \"type\": \"array\"\n            }\n           },\n           \"type\": \"object\"\n          },\n          \"type\": \"array\",\n          \"x-kubernetes-list-type\": \"atomic\"\n         },\n         \"ingress\": {\n          \"items\": {\n           \"description\": \"NetworkPolicyIngressRule describes a particular set of traffic that is allowed to the pods matched by a NetworkPolicySpec's podSelector. The traffic must match both ports and from.\",\n           \"properties\": {\n            \"from\": {\n             \"description\": \"List of sources which should be able to access the pods selected for this rule. Items in this list are combined using a logical OR operation. If this field is empty or missing, this rule matches all sources (traffic not restricted by source). If this field is present and contains at least one item, this rule allows traffic only if the traffic matches at least one item in the from list.\",\n             \"items\": {\n              \"description\": \"NetworkPolicyPeer describes a peer to allow traffic from. Only certain combinations of fields are allowed\",\n              \"properties\": {\n               \"ipBlock\": {\n                \"description\": \"IPBlock defines policy on a particular IPBlock. If this field is set then neither of the other fields can be.\",\n                \"properties\": {\n                 \"cidr\": {\n                  \"description\": \"CIDR is a string representing the IP Block Valid examples are \\\"192.168.1.1/24\\\" or \\\"2001:db9::/64\\\"\",\n                  \"type\": \"string\"\n                 },\n                 \"except\": {\n                  \"description\": \"Except is a slice of CIDRs that should not be included within an IP Block Valid examples are \\\"192.168.1.1/24\\\" or \\\"2001:db9::/64\\\" Except values will be rejected if they are outside the CIDR range\",\n                  \"items\": {\n                   \"type\": \"string\"\n                  },\n                  \"type\": \"array\"\n                 }\n                },\n                \"required\": [\n                 \"cidr\"\n                ],\n                \"type\": \"object\"\n               },\n               \"namespaceSelector\": {\n                \"description\": \"Selects Namespaces using cluster-scoped labels. This field follows standard label selector semantics; if present but empty, it selects all namespaces. \\n If PodSelector is also set, then the NetworkPolicyPeer as a whole selects the Pods matching PodSelector in the Namespaces selected by NamespaceSelector. Otherwise it selects all Pods in the Namespaces selected by NamespaceSelector.\",\n                \"properties\": {\n                 \"matchExpressions\": {\n                  \"description\": \"matchExpressions is a list of label selector requirements. The requirements are ANDed.\",\n                  \"items\": {\n                   \"description\": \"A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.\",\n                   \"properties\": {\n                    \"key\": {\n                     \"description\": \"key is the label key that the selector applies to.\",\n                     \"type\": \"string\"\n                    },\n                    \"operator\": {\n                     \"description\": \"operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.\",\n                     \"type\": \"string\"\n                    },\n                    \"values\": {\n                     \"description\": \"values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.\",\n                     \"items\": {\n                      \"type\": \"string\"\n                     },\n                     \"type\": \"array\"\n                    }\n                   },\n                   \"required\": [\n                    \"key\",\n                    \"operator\"\n                   ],\n                   \"type\": \"object\"\n                  },\n                  \"type\": \"array\"\n                 },\n                 \"matchLabels\": {\n                  \"additionalProperties\": {\n                   \"type\": \"string\"\n                  },\n                  \"description\": \"matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \\\"key\\\", the operator is \\\"In\\\", and the values array contains only \\\"value\\\". The requirements are ANDed.\",\n                  \"type\": \"object\"\n                 }\n                },\n                \"type\": \"object\"\n               },\n               \"podSelector\": {\n                \"description\": \"This is a label selector which selects Pods. This field follows standard label selector semantics; if present but empty, it selects all pods. \\n If NamespaceSelector is also set, then the NetworkPolicyPeer as a whole selects the Pods matching PodSelector in the Namespaces selected by NamespaceSelector. Otherwise it selects the Pods matching PodSelector in the policy's own Namespace.\",\n                \"properties\": {\n                 \"matchExpressions\": {\n                  \"description\": \"matchExpressions is a list of label selector requirements. The requirements are ANDed.\",\n                  \"items\": {\n                   \"description\": \"A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.\",\n                   \"properties\": {\n                    \"key\": {\n                     \"description\": \"key is the label key that the selector applies to.\",\n                     \"type\": \"string\"\n                    },\n                    \"operator\": {\n                     \"description\": \"operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.\",\n                     \"type\": \"string\"\n                    },\n                    \"values\": {\n                     \"description\": \"values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.\",\n                     \"items\": {\n                      \"type\": \"string\"\n                     },\n                     \"type\": \"array\"\n                    }\n                   },\n                   \"required\": [\n                    \"key\",\n                    \"operator\"\n                   ],\n                   \"type\": \"object\"\n                  },\n                  \"type\": \"array\"\n                 },\n                 \"matchLabels\": {\n                  \"additionalProperties\": {\n                   \"type\": \"string\"\n                  },\n                  \"description\": \"matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \\\"key\\\", the operator is \\\"In\\\", and the values array contains only \\\"value\\\". The requirements are ANDed.\",\n                  \"type\": \"object\"\n                 }\n                },\n                \"type\": \"object\"\n               }\n              },\n              \"type\": \"object\"\n             },\n             \"type\": \"array\"\n            },\n            \"ports\": {\n             \"description\": \"List of ports which should be made accessible on the pods selected for this rule. Each item in this list is combined using a logical OR. If this field is empty or missing, this rule matches all ports (traffic not restricted by port). If this field is present and contains at least one item, then this rule allows traffic only if the traffic matches at least one port in the list.\",\n             \"items\": {\n              \"description\": \"NetworkPolicyPort describes a port to allow traffic on\",\n              \"properties\": {\n               \"port\": {\n                \"anyOf\": [\n                 {\n                  \"type\": \"integer\"\n                 },\n                 {\n                  \"type\": \"string\"\n                 }\n                ],\n                \"description\": \"The port on the given protocol. This can either be a numerical or named port on a pod. If this field is not provided, this matches all port names and numbers.\",\n                \"x-kubernetes-int-or-string\": true\n               },\n               \"protocol\": {\n                \"default\": \"TCP\",\n                \"description\": \"The protocol (TCP, UDP, or SCTP) which traffic must match. If not specified, this field defaults to TCP.\",\n                \"type\": \"string\"\n               }\n              },\n              \"type\": \"object\"\n             },\n             \"type\": \"array\"\n            }\n           },\n           \"type\": \"object\"\n          },\n          \"type\": \"array\",\n          \"x-kubernetes-list-type\": \"atomic\"\n         }\n        },\n        \"type\": \"object\"\n       },\n       \"type\": \"object\"\n      }\n     },\n     \"type\": \"object\"\n    },\n    \"spinnakerConfig\": {\n     \"properties\": {\n      \"config\": {\n       \"description\": \"Main deployment configuration to be passed to Halyard\",\n       \"format\": \"textarea\",\n       \"type\": \"string\"\n      },\n      \"files\": {\n       \"additionalProperties\": {\n        \"type\": \"string\"\n       },\n       \"description\": \"Supporting files for the Spinnaker config\",\n       \"type\": \"object\"\n      },\n      \"profiles\": {\n       \"additionalProperties\": {\n        \"format\": \"textarea\",\n        \"type\": \"string\"\n       },\n       \"description\": \"Service profiles will be parsed as YAML\",\n       \"format\": \"textarea\",\n       \"type\": \"string\"\n      },\n      \"service-settings\": {\n       \"additionalProperties\": {\n        \"format\": \"textarea\",\n        \"type\": \"string\"\n       },\n       \"description\": \"Parsed service settings - comments are stripped\",\n       \"format\": \"textarea\",\n       \"type\": \"string\"\n      }\n     },\n     \"type\": \"object\"\n    },\n    \"validation\": {\n     \"description\": \"validation settings for the deployment\",\n     \"properties\": {\n      \"canary\": {\n       \"additionalProperties\": {\n        \"properties\": {\n         \"enabled\": {\n          \"description\": \"Enable or disable validation, defaults to false\",\n          \"type\": \"boolean\"\n         },\n         \"failOnError\": {\n          \"description\": \"Report errors but do not fail validation, defaults to true\",\n          \"type\": \"boolean\"\n         },\n         \"frequencySeconds\": {\n          \"anyOf\": [\n           {\n            \"type\": \"integer\"\n           },\n           {\n            \"type\": \"string\"\n           }\n          ],\n          \"description\": \"Number of seconds between each validation\",\n          \"x-kubernetes-int-or-string\": true\n         }\n        },\n        \"required\": [\n         \"enabled\"\n        ],\n        \"type\": \"object\"\n       },\n       \"type\": \"object\"\n      },\n      \"ci\": {\n       \"additionalProperties\": {\n        \"properties\": {\n         \"enabled\": {\n          \"description\": \"Enable or disable validation, defaults to false\",\n          \"type\": \"boolean\"\n         },\n         \"failOnError\": {\n          \"description\": \"Report errors but do not fail validation, defaults to true\",\n          \"type\": \"boolean\"\n         },\n         \"frequencySeconds\": {\n          \"anyOf\": [\n           {\n            \"type\": \"integer\"\n           },\n           {\n            \"type\": \"string\"\n           }\n          ],\n          \"description\": \"Number of seconds between each validation\",\n          \"x-kubernetes-int-or-string\": true\n         }\n        },\n        \"required\": [\n         \"enabled\"\n        ],\n        \"type\": \"object\"\n       },\n       \"type\": \"object\"\n      },\n      \"failFast\": {\n       \"description\": \"Fail validation on the first failed validation, defaults to false\",\n       \"type\": \"boolean\"\n      },\n      \"failOnError\": {\n       \"description\": \"Report errors but do not fail validation, defaults to true\",\n       \"type\": \"boolean\"\n      },\n      \"frequencySeconds\": {\n       \"anyOf\": [\n        {\n         \"type\": \"integer\"\n        },\n        {\n         \"type\": \"string\"\n        }\n       ],\n       \"description\": \"Number of seconds between each validation\",\n       \"x-kubernetes-int-or-string\": true\n      },\n      \"metricStores\": {\n       \"additionalProperties\": {\n        \"properties\": {\n         \"enabled\": {\n          \"description\": \"Enable or disable validation, defaults to false\",\n          \"type\": \"boolean\"\n         },\n         \"failOnError\": {\n          \"description\": \"Report errors but do not fail validation, defaults to true\",\n          \"type\": \"boolean\"\n         },\n         \"frequencySeconds\": {\n          \"anyOf\": [\n           {\n            \"type\": \"integer\"\n           },\n           {\n            \"type\": \"string\"\n           }\n          ],\n          \"description\": \"Number of seconds between each validation\",\n          \"x-kubernetes-int-or-string\": true\n         }\n        },\n        \"required\": [\n         \"enabled\"\n        ],\n        \"type\": \"object\"\n       },\n       \"type\": \"object\"\n      },\n      \"notifications\": {\n       \"additionalProperties\": {\n        \"properties\": {\n         \"enabled\": {\n          \"description\": \"Enable or disable validation, defaults to false\",\n          \"type\": \"boolean\"\n         },\n         \"failOnError\": {\n          \"description\": \"Report errors but do not fail validation, defaults to true\",\n          \"type\": \"boolean\"\n         },\n         \"frequencySeconds\": {\n          \"anyOf\": [\n           {\n            \"type\": \"integer\"\n           },\n           {\n            \"type\": \"string\"\n           }\n          ],\n          \"description\": \"Number of seconds between each validation\",\n          \"x-kubernetes-int-or-string\": true\n         }\n        },\n        \"required\": [\n         \"enabled\"\n        ],\n        \"type\": \"object\"\n       },\n       \"type\": \"object\"\n      },\n      \"persistentStorage\": {\n       \"additionalProperties\": {\n        \"properties\": {\n         \"enabled\": {\n          \"description\": \"Enable or disable validation, defaults to false\",\n          \"type\": \"boolean\"\n         },\n         \"failOnError\": {\n          \"description\": \"Report errors but do not fail validation, defaults to true\",\n          \"type\": \"boolean\"\n         },\n         \"frequencySeconds\": {\n          \"anyOf\": [\n           {\n            \"type\": \"integer\"\n           },\n           {\n            \"type\": \"string\"\n           }\n          ],\n          \"description\": \"Number of seconds between each validation\",\n          \"x-kubernetes-int-or-string\": true\n         }\n        },\n        \"required\": [\n         \"enabled\"\n        ],\n        \"type\": \"object\"\n       },\n       \"type\": \"object\"\n      },\n      \"providers\": {\n       \"additionalProperties\": {\n        \"properties\": {\n         \"enabled\": {\n          \"description\": \"Enable or disable validation, defaults to false\",\n          \"type\": \"boolean\"\n         },\n         \"failOnError\": {\n          \"description\": \"Report errors but do not fail validation, defaults to true\",\n          \"type\": \"boolean\"\n         },\n         \"frequencySeconds\": {\n          \"anyOf\": [\n           {\n            \"type\": \"integer\"\n           },\n           {\n            \"type\": \"string\"\n           }\n          ],\n          \"description\": \"Number of seconds between each validation\",\n          \"x-kubernetes-int-or-string\": true\n         }\n        },\n        \"required\": [\n         \"enabled\"\n        ],\n        \"type\": \"object\"\n       },\n       \"type\": \"object\"\n      },\n      \"pubsub\": {\n       \"additionalProperties\": {\n        \"properties\": {\n         \"enabled\": {\n          \"description\": \"Enable or disable validation, defaults to false\",\n          \"type\": \"boolean\"\n         },\n         \"failOnError\": {\n          \"description\": \"Report errors but do not fail validation, defaults to true\",\n          \"type\": \"boolean\"\n         },\n         \"frequencySeconds\": {\n          \"anyOf\": [\n           {\n            \"type\": \"integer\"\n           },\n           {\n            \"type\": \"string\"\n           }\n          ],\n          \"description\": \"Number of seconds between each validation\",\n          \"x-kubernetes-int-or-string\": true\n         }\n        },\n        \"required\": [\n         \"enabled\"\n        ],\n        \"type\": \"object\"\n       },\n       \"type\": \"object\"\n      }\n     },\n     \"type\": \"object\"\n    }\n   },\n   \"required\": [\n    \"spinnakerConfig\"\n   ],\n   \"type\": \"object\"\n  }\n },\n \"title\": \"Spinnaker Service\",\n \"type\": \"object\"\n}"
 }