{"kind":"Mesh","apiVersion":"discovery.mesh.gloo.solo.io/v1","displayName":"Mesh","format":"JSON","hostname":"","hostID":"00000000-0000-0000-0000-000000000000","displayhostname":"","metadata":{"capabilities":"","genealogy":"","isAnnotation":false,"isModelAnnotation":"FALSE","isNamespaced":true,"logoURL":"","model":"gloo-mesh","modelDisplayName":"gloo-mesh","primaryColor":"#00B39F","published":false,"secondaryColor":"#00D3A9","shape":"circle","styleOverrides":"","subCategory":"Uncategorized","svgColor":"","svgComplete":"","svgWhite":""},"model":{"name":"gloo-mesh","version":"1.2.0-beta1","displayName":"gloo-mesh","hostname":"","hostID":"00000000-0000-0000-0000-000000000000","displayhostname":"","category":{"name":"Uncategorized","metadata":null},"metadata":{"source_uri":"https://storage.googleapis.com/gloo-mesh/gloo-mesh/gloo-mesh-1.2.0-beta1.tgz"},"components":null,"relationships":null},"schema":"{\n \"properties\": {\n  \"spec\": {\n   \"description\": \"Describes a service mesh control plane deployment.\",\n   \"oneOf\": [\n    {\n     \"not\": {\n      \"anyOf\": [\n       {\n        \"required\": [\n         \"istio\"\n        ]\n       },\n       {\n        \"required\": [\n         \"awsAppMesh\"\n        ]\n       },\n       {\n        \"required\": [\n         \"linkerd\"\n        ]\n       },\n       {\n        \"required\": [\n         \"consulConnect\"\n        ]\n       },\n       {\n        \"required\": [\n         \"osm\"\n        ]\n       }\n      ]\n     }\n    },\n    {\n     \"required\": [\n      \"istio\"\n     ]\n    },\n    {\n     \"required\": [\n      \"awsAppMesh\"\n     ]\n    },\n    {\n     \"required\": [\n      \"linkerd\"\n     ]\n    },\n    {\n     \"required\": [\n      \"consulConnect\"\n     ]\n    },\n    {\n     \"required\": [\n      \"osm\"\n     ]\n    }\n   ],\n   \"properties\": {\n    \"agentInfo\": {\n     \"description\": \"Describes the Gloo Mesh agent if it has been installed to the managed cluster.\",\n     \"properties\": {\n      \"agentNamespace\": {\n       \"description\": \"The namespace in which the Gloo Mesh agent is installed.\",\n       \"type\": \"string\"\n      }\n     },\n     \"type\": \"object\"\n    },\n    \"awsAppMesh\": {\n     \"description\": \"Describes an [AWS App Mesh](https://aws.amazon.com/app-mesh/) service mesh.\",\n     \"properties\": {\n      \"arn\": {\n       \"description\": \"The unique AWS ARN associated with the App Mesh instance.\",\n       \"type\": \"string\"\n      },\n      \"awsAccountId\": {\n       \"description\": \"The AWS Account ID associated with the Mesh. Populated at REST API registration time.\",\n       \"type\": \"string\"\n      },\n      \"awsName\": {\n       \"description\": \"The AWS name for the App Mesh instance, must be unique across all AppMesh instances owned by the AWS account.\",\n       \"type\": \"string\"\n      },\n      \"clusters\": {\n       \"description\": \"The Kubernetes clusters on which sidecars for this App Mesh instance have been discovered.\",\n       \"items\": {\n        \"type\": \"string\"\n       },\n       \"type\": \"array\"\n      },\n      \"region\": {\n       \"description\": \"The AWS region the App Mesh control plane resources exist in.\",\n       \"type\": \"string\"\n      }\n     },\n     \"type\": \"object\"\n    },\n    \"consulConnect\": {\n     \"description\": \"Describes a [Consul Connect](https://www.consul.io/docs/connect) service mesh.\",\n     \"properties\": {\n      \"installation\": {\n       \"description\": \"Describes the ConsulConnect control plane deployment.\",\n       \"properties\": {\n        \"cluster\": {\n         \"description\": \"The Gloo Mesh cluster in which the control plane has been installed.\",\n         \"type\": \"string\"\n        },\n        \"namespace\": {\n         \"description\": \"Namespace in which the control plane has been installed.\",\n         \"type\": \"string\"\n        },\n        \"podLabels\": {\n         \"additionalProperties\": {\n          \"type\": \"string\"\n         },\n         \"description\": \"The labels on the control plane pods (read from the deployment).\",\n         \"type\": \"object\"\n        },\n        \"region\": {\n         \"description\": \"The region of the cluster in which the control plane has been installed, which is\\ndetermined from the value of the [Kubernetes region topology label](https://kubernetes.io/docs/reference/labels-annotations-taints/#topologykubernetesioregion)\\non any Kubernetes node associated with the cluster of this mesh.\",\n         \"type\": \"string\"\n        },\n        \"version\": {\n         \"description\": \"The version of the Mesh that has been installed, which is determined using the image tag on the\\nmesh's primary control plane image (e.g. the istio-pilot image tag).\",\n         \"type\": \"string\"\n        }\n       },\n       \"type\": \"object\"\n      }\n     },\n     \"type\": \"object\"\n    },\n    \"issuedCertificateStatus\": {\n     \"oneOf\": [\n      {\n       \"not\": {\n        \"anyOf\": [\n         {\n          \"properties\": {\n           \"appliedGlooMeshCa\": {\n            \"oneOf\": [\n             {\n              \"not\": {\n               \"anyOf\": [\n                {\n                 \"required\": [\n                  \"signingCertificateSecret\"\n                 ]\n                }\n               ]\n              }\n             },\n             {\n              \"required\": [\n               \"signingCertificateSecret\"\n              ]\n             }\n            ]\n           }\n          },\n          \"required\": [\n           \"appliedGlooMeshCa\"\n          ]\n         },\n         {\n          \"properties\": {\n           \"appliedAgentCa\": {\n            \"oneOf\": [\n             {\n              \"not\": {\n               \"anyOf\": [\n                {\n                 \"properties\": {\n                  \"vault\": {\n                   \"oneOf\": [\n                    {\n                     \"not\": {\n                      \"anyOf\": [\n                       {\n                        \"required\": [\n                         \"tokenSecretRef\"\n                        ]\n                       },\n                       {\n                        \"properties\": {\n                         \"kubernetesAuth\": {\n                          \"oneOf\": [\n                           {\n                            \"not\": {\n                             \"anyOf\": [\n                              {\n                               \"required\": [\n                                \"serviceAccountRef\"\n                               ]\n                              },\n                              {\n                               \"required\": [\n                                \"mountedSaPath\"\n                               ]\n                              }\n                             ]\n                            }\n                           },\n                           {\n                            \"required\": [\n                             \"serviceAccountRef\"\n                            ]\n                           },\n                           {\n                            \"required\": [\n                             \"mountedSaPath\"\n                            ]\n                           }\n                          ]\n                         }\n                        },\n                        \"required\": [\n                         \"kubernetesAuth\"\n                        ]\n                       }\n                      ]\n                     }\n                    },\n                    {\n                     \"required\": [\n                      \"tokenSecretRef\"\n                     ]\n                    },\n                    {\n                     \"properties\": {\n                      \"kubernetesAuth\": {\n                       \"oneOf\": [\n                        {\n                         \"not\": {\n                          \"anyOf\": [\n                           {\n                            \"required\": [\n                             \"serviceAccountRef\"\n                            ]\n                           },\n                           {\n                            \"required\": [\n                             \"mountedSaPath\"\n                            ]\n                           }\n                          ]\n                         }\n                        },\n                        {\n                         \"required\": [\n                          \"serviceAccountRef\"\n                         ]\n                        },\n                        {\n                         \"required\": [\n                          \"mountedSaPath\"\n                         ]\n                        }\n                       ]\n                      }\n                     },\n                     \"required\": [\n                      \"kubernetesAuth\"\n                     ]\n                    }\n                   ]\n                  }\n                 },\n                 \"required\": [\n                  \"vault\"\n                 ]\n                }\n               ]\n              }\n             },\n             {\n              \"properties\": {\n               \"vault\": {\n                \"oneOf\": [\n                 {\n                  \"not\": {\n                   \"anyOf\": [\n                    {\n                     \"required\": [\n                      \"tokenSecretRef\"\n                     ]\n                    },\n                    {\n                     \"properties\": {\n                      \"kubernetesAuth\": {\n                       \"oneOf\": [\n                        {\n                         \"not\": {\n                          \"anyOf\": [\n                           {\n                            \"required\": [\n                             \"serviceAccountRef\"\n                            ]\n                           },\n                           {\n                            \"required\": [\n                             \"mountedSaPath\"\n                            ]\n                           }\n                          ]\n                         }\n                        },\n                        {\n                         \"required\": [\n                          \"serviceAccountRef\"\n                         ]\n                        },\n                        {\n                         \"required\": [\n                          \"mountedSaPath\"\n                         ]\n                        }\n                       ]\n                      }\n                     },\n                     \"required\": [\n                      \"kubernetesAuth\"\n                     ]\n                    }\n                   ]\n                  }\n                 },\n                 {\n                  \"required\": [\n                   \"tokenSecretRef\"\n                  ]\n                 },\n                 {\n                  \"properties\": {\n                   \"kubernetesAuth\": {\n                    \"oneOf\": [\n                     {\n                      \"not\": {\n                       \"anyOf\": [\n                        {\n                         \"required\": [\n                          \"serviceAccountRef\"\n                         ]\n                        },\n                        {\n                         \"required\": [\n                          \"mountedSaPath\"\n                         ]\n                        }\n                       ]\n                      }\n                     },\n                     {\n                      \"required\": [\n                       \"serviceAccountRef\"\n                      ]\n                     },\n                     {\n                      \"required\": [\n                       \"mountedSaPath\"\n                      ]\n                     }\n                    ]\n                   }\n                  },\n                  \"required\": [\n                   \"kubernetesAuth\"\n                  ]\n                 }\n                ]\n               }\n              },\n              \"required\": [\n               \"vault\"\n              ]\n             }\n            ]\n           }\n          },\n          \"required\": [\n           \"appliedAgentCa\"\n          ]\n         }\n        ]\n       }\n      },\n      {\n       \"properties\": {\n        \"appliedGlooMeshCa\": {\n         \"oneOf\": [\n          {\n           \"not\": {\n            \"anyOf\": [\n             {\n              \"required\": [\n               \"signingCertificateSecret\"\n              ]\n             }\n            ]\n           }\n          },\n          {\n           \"required\": [\n            \"signingCertificateSecret\"\n           ]\n          }\n         ]\n        }\n       },\n       \"required\": [\n        \"appliedGlooMeshCa\"\n       ]\n      },\n      {\n       \"properties\": {\n        \"appliedAgentCa\": {\n         \"oneOf\": [\n          {\n           \"not\": {\n            \"anyOf\": [\n             {\n              \"properties\": {\n               \"vault\": {\n                \"oneOf\": [\n                 {\n                  \"not\": {\n                   \"anyOf\": [\n                    {\n                     \"required\": [\n                      \"tokenSecretRef\"\n                     ]\n                    },\n                    {\n                     \"properties\": {\n                      \"kubernetesAuth\": {\n                       \"oneOf\": [\n                        {\n                         \"not\": {\n                          \"anyOf\": [\n                           {\n                            \"required\": [\n                             \"serviceAccountRef\"\n                            ]\n                           },\n                           {\n                            \"required\": [\n                             \"mountedSaPath\"\n                            ]\n                           }\n                          ]\n                         }\n                        },\n                        {\n                         \"required\": [\n                          \"serviceAccountRef\"\n                         ]\n                        },\n                        {\n                         \"required\": [\n                          \"mountedSaPath\"\n                         ]\n                        }\n                       ]\n                      }\n                     },\n                     \"required\": [\n                      \"kubernetesAuth\"\n                     ]\n                    }\n                   ]\n                  }\n                 },\n                 {\n                  \"required\": [\n                   \"tokenSecretRef\"\n                  ]\n                 },\n                 {\n                  \"properties\": {\n                   \"kubernetesAuth\": {\n                    \"oneOf\": [\n                     {\n                      \"not\": {\n                       \"anyOf\": [\n                        {\n                         \"required\": [\n                          \"serviceAccountRef\"\n                         ]\n                        },\n                        {\n                         \"required\": [\n                          \"mountedSaPath\"\n                         ]\n                        }\n                       ]\n                      }\n                     },\n                     {\n                      \"required\": [\n                       \"serviceAccountRef\"\n                      ]\n                     },\n                     {\n                      \"required\": [\n                       \"mountedSaPath\"\n                      ]\n                     }\n                    ]\n                   }\n                  },\n                  \"required\": [\n                   \"kubernetesAuth\"\n                  ]\n                 }\n                ]\n               }\n              },\n              \"required\": [\n               \"vault\"\n              ]\n             }\n            ]\n           }\n          },\n          {\n           \"properties\": {\n            \"vault\": {\n             \"oneOf\": [\n              {\n               \"not\": {\n                \"anyOf\": [\n                 {\n                  \"required\": [\n                   \"tokenSecretRef\"\n                  ]\n                 },\n                 {\n                  \"properties\": {\n                   \"kubernetesAuth\": {\n                    \"oneOf\": [\n                     {\n                      \"not\": {\n                       \"anyOf\": [\n                        {\n                         \"required\": [\n                          \"serviceAccountRef\"\n                         ]\n                        },\n                        {\n                         \"required\": [\n                          \"mountedSaPath\"\n                         ]\n                        }\n                       ]\n                      }\n                     },\n                     {\n                      \"required\": [\n                       \"serviceAccountRef\"\n                      ]\n                     },\n                     {\n                      \"required\": [\n                       \"mountedSaPath\"\n                      ]\n                     }\n                    ]\n                   }\n                  },\n                  \"required\": [\n                   \"kubernetesAuth\"\n                  ]\n                 }\n                ]\n               }\n              },\n              {\n               \"required\": [\n                \"tokenSecretRef\"\n               ]\n              },\n              {\n               \"properties\": {\n                \"kubernetesAuth\": {\n                 \"oneOf\": [\n                  {\n                   \"not\": {\n                    \"anyOf\": [\n                     {\n                      \"required\": [\n                       \"serviceAccountRef\"\n                      ]\n                     },\n                     {\n                      \"required\": [\n                       \"mountedSaPath\"\n                      ]\n                     }\n                    ]\n                   }\n                  },\n                  {\n                   \"required\": [\n                    \"serviceAccountRef\"\n                   ]\n                  },\n                  {\n                   \"required\": [\n                    \"mountedSaPath\"\n                   ]\n                  }\n                 ]\n                }\n               },\n               \"required\": [\n                \"kubernetesAuth\"\n               ]\n              }\n             ]\n            }\n           },\n           \"required\": [\n            \"vault\"\n           ]\n          }\n         ]\n        }\n       },\n       \"required\": [\n        \"appliedAgentCa\"\n       ]\n      }\n     ],\n     \"properties\": {\n      \"appliedAgentCa\": {\n       \"description\": \"Agent CA options\",\n       \"properties\": {\n        \"vault\": {\n         \"description\": \"Use vault as the intermediate CA source\",\n         \"properties\": {\n          \"caBundle\": {\n           \"description\": \"PEM encoded CA bundle used to validate Vault server certificate. Only used\\nif the Server URL is using HTTPS protocol. This parameter is ignored for\\nplain HTTP protocol connection. If not set the system root certificates\\nare used to validate the TLS connection.\",\n           \"format\": \"binary\",\n           \"type\": \"string\"\n          },\n          \"caPath\": {\n           \"description\": \"`ca_path` is the mount path of the Vault PKI backend's `sign` endpoint, e.g:\\n\\\"my_pki_mount/sign/my-role-name\\\".\",\n           \"type\": \"string\"\n          },\n          \"csrPath\": {\n           \"description\": \"`csr_path` is the mount path of the Vault PKI backend's `generate` endpoint, e.g:\\n\\\"my_pki_mount/intermediate/generate/exported\\\".\\n\\\"exported\\\" is necessary here as istio needs access to the private key\\nSee vault docs here: https://www.vaultproject.io/api-docs/secret/pki#parameters-4\",\n           \"type\": \"string\"\n          },\n          \"kubernetesAuth\": {\n           \"description\": \"Kubernetes authenticates with Vault by passing the ServiceAccount\\ntoken stored in the named Secret resource to the Vault server.\",\n           \"properties\": {\n            \"mountPath\": {\n             \"description\": \"The Vault mountPath here is the mount path to use when authenticating with\\nVault. For example, setting a value to `/v1/auth/foo`, will use the path\\n`/v1/auth/foo/login` to authenticate with Vault. If unspecified, the\\ndefault value \\\"/v1/auth/kubernetes\\\" will be used.\",\n             \"type\": \"string\"\n            },\n            \"mountedSaPath\": {\n             \"description\": \"File System path to grab the service account token from.\\nDefaults to /var/run/secrets/kubernetes.io/serviceaccount\",\n             \"type\": \"string\"\n            },\n            \"role\": {\n             \"description\": \"A required field containing the Vault Role to assume. A Role binds a\\nKubernetes ServiceAccount with a set of Vault policies.\",\n             \"type\": \"string\"\n            },\n            \"secretTokenKey\": {\n             \"description\": \"Key to search for the sa_token\\nDefault to \\\"token\\\"\",\n             \"type\": \"string\"\n            },\n            \"serviceAccountRef\": {\n             \"description\": \"Reference to service account, other than the one mounted to the current pod.\",\n             \"properties\": {\n              \"name\": {\n               \"description\": \"name of the resource being referenced\",\n               \"type\": \"string\"\n              },\n              \"namespace\": {\n               \"description\": \"namespace of the resource being referenced\",\n               \"type\": \"string\"\n              }\n             },\n             \"type\": \"object\"\n            }\n           },\n           \"type\": \"object\"\n          },\n          \"namespace\": {\n           \"description\": \"Name of the vault namespace. Namespaces is a set of features within Vault Enterprise that allows Vault environments to support Secure Multi-tenancy. e.g: \\\"ns1\\\"\\nMore about namespaces can be found [here](https://www.vaultproject.io/docs/enterprise/namespaces)\",\n           \"type\": \"string\"\n          },\n          \"server\": {\n           \"description\": \"Server is the connection address for the Vault server, e.g: \\\"https://vault.example.com:8200\\\".\",\n           \"type\": \"string\"\n          },\n          \"tokenSecretRef\": {\n           \"description\": \"TokenSecretRef authenticates with Vault by presenting a token.\",\n           \"properties\": {\n            \"name\": {\n             \"description\": \"name of the resource being referenced\",\n             \"type\": \"string\"\n            },\n            \"namespace\": {\n             \"description\": \"namespace of the resource being referenced\",\n             \"type\": \"string\"\n            }\n           },\n           \"type\": \"object\"\n          }\n         },\n         \"type\": \"object\"\n        }\n       },\n       \"type\": \"object\"\n      },\n      \"appliedGlooMeshCa\": {\n       \"description\": \"Gloo Mesh CA options\",\n       \"properties\": {\n        \"signingCertificateSecret\": {\n         \"properties\": {\n          \"name\": {\n           \"description\": \"name of the resource being referenced\",\n           \"type\": \"string\"\n          },\n          \"namespace\": {\n           \"description\": \"namespace of the resource being referenced\",\n           \"type\": \"string\"\n          }\n         },\n         \"type\": \"object\"\n        }\n       },\n       \"type\": \"object\"\n      },\n      \"error\": {\n       \"description\": \"Any error observed which prevented the CertificateRequest from being processed.\\nIf the error is empty, the request has been processed successfully.\",\n       \"type\": \"string\"\n      },\n      \"observedGeneration\": {\n       \"description\": \"The most recent generation observed in the the IssuedCertificate metadata.\\nIf the `observedGeneration` does not match `metadata.generation`, the Gloo Mesh agent has not processed the most\\nrecent version of this IssuedCertificate.\",\n       \"format\": \"int64\",\n       \"type\": \"integer\"\n      },\n      \"observedRotationState\": {\n       \"description\": \"The rotation state as recorded by the issued cert agent. This is read by the networking\\nreconciler to ensure it is looking at the correct iteration of the object.\",\n       \"enum\": [\n        \"NOT_ROTATING\",\n        \"PREVIOUS_CA\",\n        \"ADDING_NEW_ROOT\",\n        \"PROPAGATING_NEW_INTERMEDIATE\",\n        \"DELETING_OLD_ROOT\",\n        \"VERIFYING\",\n        \"VERIFIED\",\n        \"ROLLING_BACK\",\n        \"FINISHED\",\n        \"FAILED\"\n       ],\n       \"type\": \"string\"\n      },\n      \"state\": {\n       \"description\": \"The current state of the IssuedCertificate workflow, reported by the agent.\",\n       \"enum\": [\n        \"PENDING\",\n        \"REQUESTED\",\n        \"ISSUED\",\n        \"FINISHED\",\n        \"FAILED\"\n       ],\n       \"type\": \"string\"\n      }\n     },\n     \"type\": \"object\"\n    },\n    \"istio\": {\n     \"description\": \"Describes an [Istio](https://istio.io/) service mesh.\",\n     \"properties\": {\n      \"ingressGateways\": {\n       \"description\": \"DEPRECATED: external address data for an ingress gateway destination and workload live in the relevant Destination and Workload objects.\\nDescribes the ingress gateway.\",\n       \"items\": {\n        \"oneOf\": [\n         {\n          \"not\": {\n           \"anyOf\": [\n            {\n             \"required\": [\n              \"dnsName\"\n             ]\n            },\n            {\n             \"required\": [\n              \"ip\"\n             ]\n            }\n           ]\n          }\n         },\n         {\n          \"required\": [\n           \"dnsName\"\n          ]\n         },\n         {\n          \"required\": [\n           \"ip\"\n          ]\n         }\n        ],\n        \"properties\": {\n         \"dnsName\": {\n          \"description\": \"Will be populated if the LoadBalancer Address is a DNS name\",\n          \"type\": \"string\"\n         },\n         \"externalAddress\": {\n          \"description\": \"DEPRECATED: in favor of dns_name or external_ip\",\n          \"type\": \"string\"\n         },\n         \"externalTlsPort\": {\n          \"description\": \"The externally-reachable port on which the gateway is listening for TLS connections.\\nThis will be the port used for cross-cluster connectivity.\\nSee the list of [common ports used by Istio](https://istio.io/latest/docs/ops/deployment/requirements/#ports-used-by-istio).\\nDefaults to 15443 (or the NodePort) of the Kubernetes service (depending on its type).\",\n          \"maximum\": 4294967295,\n          \"minimum\": 0,\n          \"type\": \"integer\"\n         },\n         \"ip\": {\n          \"description\": \"Will be populated if the LoadBalancer Address is an IP\",\n          \"type\": \"string\"\n         },\n         \"name\": {\n          \"description\": \"TODO: remove name and namespace as ingress gw info now contains a ref\\nThe name of the Ingress Gateway Service\",\n          \"type\": \"string\"\n         },\n         \"namespace\": {\n          \"description\": \"The namespace in which the ingress gateway is running.\",\n          \"type\": \"string\"\n         },\n         \"tlsContainerPort\": {\n          \"description\": \"Container port on which the gateway is listening for TLS connections.\\nDefaults to 15443.\",\n          \"maximum\": 4294967295,\n          \"minimum\": 0,\n          \"type\": \"integer\"\n         },\n         \"workloadLabels\": {\n          \"additionalProperties\": {\n           \"type\": \"string\"\n          },\n          \"description\": \"The ingress service selector labels for the gateway.\\n[Defaults to](https://github.com/istio/istio/blob/ab6cc48134a698d7ad218a83390fe27e8098919f/pkg/config/constants/constants.go#L73) `{\\\"istio\\\": \\\"ingressgateway\\\"}`.\",\n          \"type\": \"object\"\n         }\n        },\n        \"type\": \"object\"\n       },\n       \"type\": \"array\"\n      },\n      \"installation\": {\n       \"description\": \"Describes the Istio control plane deployment.\",\n       \"properties\": {\n        \"cluster\": {\n         \"description\": \"The Gloo Mesh cluster in which the control plane has been installed.\",\n         \"type\": \"string\"\n        },\n        \"namespace\": {\n         \"description\": \"Namespace in which the control plane has been installed.\",\n         \"type\": \"string\"\n        },\n        \"podLabels\": {\n         \"additionalProperties\": {\n          \"type\": \"string\"\n         },\n         \"description\": \"The labels on the control plane pods (read from the deployment).\",\n         \"type\": \"object\"\n        },\n        \"region\": {\n         \"description\": \"The region of the cluster in which the control plane has been installed, which is\\ndetermined from the value of the [Kubernetes region topology label](https://kubernetes.io/docs/reference/labels-annotations-taints/#topologykubernetesioregion)\\non any Kubernetes node associated with the cluster of this mesh.\",\n         \"type\": \"string\"\n        },\n        \"version\": {\n         \"description\": \"The version of the Mesh that has been installed, which is determined using the image tag on the\\nmesh's primary control plane image (e.g. the istio-pilot image tag).\",\n         \"type\": \"string\"\n        }\n       },\n       \"type\": \"object\"\n      },\n      \"istiodServiceAccount\": {\n       \"description\": \"The istiod service account which determines identity for the Istio CA cert.\",\n       \"type\": \"string\"\n      },\n      \"smartDnsProxyingEnabled\": {\n       \"description\": \"True if smart DNS proxying is enabled, which allows for arbitrary DNS domains.\",\n       \"type\": \"boolean\"\n      },\n      \"trustDomain\": {\n       \"description\": \"The Istio trust domain used for https/[spiffe](https://spiffe.io/spiffe/concepts/#trust-domain) [identity](https://istio.io/docs/reference/glossary/#identity).\\nIf empty will default to [\\\"cluster.local\\\"](https://github.com/istio/istio/blob/e768f408a7de224e64ccdfb2634442541ce08e6a/pilot/cmd/pilot-agent/main.go#L118).\",\n       \"type\": \"string\"\n      }\n     },\n     \"type\": \"object\"\n    },\n    \"linkerd\": {\n     \"description\": \"Describes a [Linkerd](https://linkerd.io/) service mesh.\",\n     \"properties\": {\n      \"clusterDomain\": {\n       \"description\": \"The cluster domain suffix this Linkerd mesh is configured with. See [this reference](https://linkerd.io/2/tasks/using-custom-domain/) for more info.\",\n       \"type\": \"string\"\n      },\n      \"installation\": {\n       \"description\": \"Describes the Linkerd control plane deployment.\",\n       \"properties\": {\n        \"cluster\": {\n         \"description\": \"The Gloo Mesh cluster in which the control plane has been installed.\",\n         \"type\": \"string\"\n        },\n        \"namespace\": {\n         \"description\": \"Namespace in which the control plane has been installed.\",\n         \"type\": \"string\"\n        },\n        \"podLabels\": {\n         \"additionalProperties\": {\n          \"type\": \"string\"\n         },\n         \"description\": \"The labels on the control plane pods (read from the deployment).\",\n         \"type\": \"object\"\n        },\n        \"region\": {\n         \"description\": \"The region of the cluster in which the control plane has been installed, which is\\ndetermined from the value of the [Kubernetes region topology label](https://kubernetes.io/docs/reference/labels-annotations-taints/#topologykubernetesioregion)\\non any Kubernetes node associated with the cluster of this mesh.\",\n         \"type\": \"string\"\n        },\n        \"version\": {\n         \"description\": \"The version of the Mesh that has been installed, which is determined using the image tag on the\\nmesh's primary control plane image (e.g. the istio-pilot image tag).\",\n         \"type\": \"string\"\n        }\n       },\n       \"type\": \"object\"\n      }\n     },\n     \"type\": \"object\"\n    },\n    \"osm\": {\n     \"description\": \"Describes an [Open Service Mesh](https://openservicemesh.io/) service mesh.\",\n     \"properties\": {\n      \"installation\": {\n       \"description\": \"Describes the OSM control plane deployment.\",\n       \"properties\": {\n        \"cluster\": {\n         \"description\": \"The Gloo Mesh cluster in which the control plane has been installed.\",\n         \"type\": \"string\"\n        },\n        \"namespace\": {\n         \"description\": \"Namespace in which the control plane has been installed.\",\n         \"type\": \"string\"\n        },\n        \"podLabels\": {\n         \"additionalProperties\": {\n          \"type\": \"string\"\n         },\n         \"description\": \"The labels on the control plane pods (read from the deployment).\",\n         \"type\": \"object\"\n        },\n        \"region\": {\n         \"description\": \"The region of the cluster in which the control plane has been installed, which is\\ndetermined from the value of the [Kubernetes region topology label](https://kubernetes.io/docs/reference/labels-annotations-taints/#topologykubernetesioregion)\\non any Kubernetes node associated with the cluster of this mesh.\",\n         \"type\": \"string\"\n        },\n        \"version\": {\n         \"description\": \"The version of the Mesh that has been installed, which is determined using the image tag on the\\nmesh's primary control plane image (e.g. the istio-pilot image tag).\",\n         \"type\": \"string\"\n        }\n       },\n       \"type\": \"object\"\n      }\n     },\n     \"type\": \"object\"\n    }\n   },\n   \"type\": \"object\"\n  }\n },\n \"title\": \"Mesh\",\n \"type\": \"object\"\n}"}