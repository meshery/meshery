{
  "capabilities": [
   {
    "description": "Initiate a performance test. Meshery will execute the load generation, collect metrics, and present the results.",
    "displayName": "Performance Test",
    "entityState": [
     "instance"
    ],
    "key": "",
    "kind": "action",
    "metadata": null,
    "schemaVersion": "capability.meshery.io/v1alpha1",
    "status": "enabled",
    "subType": "perf-test",
    "type": "operator",
    "version": "0.7.0"
   },
   {
    "description": "Configure the workload specific setting of a component",
    "displayName": "Workload Configuration",
    "entityState": [
     "declaration"
    ],
    "key": "",
    "kind": "mutate",
    "metadata": null,
    "schemaVersion": "capability.meshery.io/v1alpha1",
    "status": "enabled",
    "subType": "config",
    "type": "configuration",
    "version": "0.7.0"
   },
   {
    "description": "Configure Labels And Annotations for  the component ",
    "displayName": "Labels and Annotations Configuration",
    "entityState": [
     "declaration"
    ],
    "key": "",
    "kind": "mutate",
    "metadata": null,
    "schemaVersion": "capability.meshery.io/v1alpha1",
    "status": "enabled",
    "subType": "labels-and-annotations",
    "type": "configuration",
    "version": "0.7.0"
   },
   {
    "description": "View relationships for the component",
    "displayName": "Relationships",
    "entityState": [
     "declaration",
     "instance"
    ],
    "key": "",
    "kind": "view",
    "metadata": null,
    "schemaVersion": "capability.meshery.io/v1alpha1",
    "status": "enabled",
    "subType": "relationship",
    "type": "configuration",
    "version": "0.7.0"
   },
   {
    "description": "View Component Definition ",
    "displayName": "Json Schema",
    "entityState": [
     "declaration",
     "instance"
    ],
    "key": "",
    "kind": "view",
    "metadata": null,
    "schemaVersion": "capability.meshery.io/v1alpha1",
    "status": "enabled",
    "subType": "definition",
    "type": "configuration",
    "version": "0.7.0"
   },
   {
    "description": "Configure the visual styles for the component",
    "displayName": "Styling",
    "entityState": [
     "declaration"
    ],
    "key": "",
    "kind": "mutate",
    "metadata": null,
    "schemaVersion": "capability.meshery.io/v1alpha1",
    "status": "enabled",
    "subType": "",
    "type": "style",
    "version": "0.7.0"
   },
   {
    "description": "Change the shape of the component",
    "displayName": "Change Shape",
    "entityState": [
     "declaration"
    ],
    "key": "",
    "kind": "mutate",
    "metadata": null,
    "schemaVersion": "capability.meshery.io/v1alpha1",
    "status": "enabled",
    "subType": "shape",
    "type": "style",
    "version": "0.7.0"
   },
   {
    "description": "Drag and Drop a component into a parent component in graph view",
    "displayName": "Compound Drag And Drop",
    "entityState": [
     "declaration"
    ],
    "key": "",
    "kind": "interaction",
    "metadata": null,
    "schemaVersion": "capability.meshery.io/v1alpha1",
    "status": "enabled",
    "subType": "compoundDnd",
    "type": "graph",
    "version": "0.7.0"
   }
  ],
  "component": {
   "kind": "ServiceDependency",
   "schema": "{\n \"properties\": {\n  \"spec\": {\n   \"description\": \"A ServiceDependency specifies explicit dependencies between traffic sources and destinations in a service graph.\\n   Depending on the underlying service mesh, explicitly describing dependencies can improve the performance\\n   of the data plane by pruning away any unneeded networking configuration from the relevant proxies.\\n\\n   The complete set of service dependencies for a given traffic source is the aggregation of all\\n   unique Destinations selected by any applicable ServiceDependencies. If a traffic source has no applied\\n   ServiceDependencies, its service dependency configuration defaults to the behavior of the underlying service mesh.\\n\\n   Note that in order to block communication between sources and destinations not explicitly declared\\n   in a ServiceDependency, additional configuration on the underlying service mesh may be required.\\n   For instance, Istio must be configured with `outboundTrafficPolicy.Mode` set to `REGISTRY_ONLY` (see [here](https://istio.io/latest/docs/reference/config/istio.mesh.v1alpha1/#MeshConfig-OutboundTrafficPolicy))\\n   to enforce this behavior.\",\n   \"properties\": {\n    \"destinationSelectors\": {\n     \"description\": \"Select the traffic targets (i.e. Destination) for this network ServiceDependency. If omitted, selects all Destinations.\",\n     \"items\": {\n      \"properties\": {\n       \"kubeServiceMatcher\": {\n        \"description\": \"Match Kubernetes Services by their labels, namespaces, and/or clusters.\",\n        \"properties\": {\n         \"clusters\": {\n          \"description\": \"If specified, match Kubernetes Services if they exist in one of the specified clusters.\\n           When used in a networking policy, omission matches any cluster.\\n           When used in a Gloo Mesh Role, a wildcard (`\\\"*\\\"`) must be specified to match any cluster.\",\n          \"items\": {\n           \"type\": \"string\"\n          },\n          \"type\": \"array\"\n         },\n         \"labels\": {\n          \"additionalProperties\": {\n           \"type\": \"string\"\n          },\n          \"description\": \"If specified, a match requires all labels to exist on a Kubernetes Service.\\n           When used in a networking policy, omission matches any labels.\\n           When used in a Gloo Mesh Role, a wildcard (`\\\"*\\\"`) must be specified to match any label key and/or value.\",\n          \"type\": \"object\"\n         },\n         \"namespaces\": {\n          \"description\": \"If specified, match Kubernetes Services if they exist in one of the specified namespaces.\\n           When used in a networking policy, omission matches any namespace.\\n           When used in a Gloo Mesh Role, a wildcard (`\\\"*\\\"`) must be specified to match any namespace.\",\n          \"items\": {\n           \"type\": \"string\"\n          },\n          \"type\": \"array\"\n         }\n        },\n        \"type\": \"object\"\n       },\n       \"kubeServiceRefs\": {\n        \"description\": \"Match Kubernetes Services by direct reference.\",\n        \"properties\": {\n         \"services\": {\n          \"description\": \"Match Kubernetes Services by direct reference. All fields are required.\\n           When used in a Gloo Mesh Role, a wildcard (`\\\"*\\\"`) must be specified to match any value for the given field.\",\n          \"items\": {\n           \"properties\": {\n            \"clusterName\": {\n             \"description\": \"name of the cluster in which the resource exists\",\n             \"type\": \"string\"\n            },\n            \"name\": {\n             \"description\": \"name of the resource being referenced\",\n             \"type\": \"string\"\n            },\n            \"namespace\": {\n             \"description\": \"namespace of the resource being referenced\",\n             \"type\": \"string\"\n            }\n           },\n           \"type\": \"object\"\n          },\n          \"type\": \"array\"\n         }\n        },\n        \"type\": \"object\"\n       }\n      },\n      \"type\": \"object\"\n     },\n     \"type\": \"array\"\n    },\n    \"sourceSelectors\": {\n     \"description\": \"Select the traffic sources (i.e. Workloads) for this network ServiceDependency. If omitted, selects all Workloads.\",\n     \"items\": {\n      \"properties\": {\n       \"kubeWorkloadMatcher\": {\n        \"description\": \"Match Kubernetes workloads by their labels, namespaces, and/or clusters.\",\n        \"properties\": {\n         \"clusters\": {\n          \"description\": \"If specified, match Kubernetes workloads if they exist in one of the specified clusters.\\n           When used in a networking policy, omission matches any cluster.\\n           When used in a Gloo Mesh Role, a wildcard (`\\\"*\\\"`) must be specified to match any cluster.\",\n          \"items\": {\n           \"type\": \"string\"\n          },\n          \"type\": \"array\"\n         },\n         \"labels\": {\n          \"additionalProperties\": {\n           \"type\": \"string\"\n          },\n          \"description\": \"If specified, all labels must exist on Kubernetes workload.\\n       When used in a networking policy, omission matches any labels.\\n       When used in a Gloo Mesh Role, a wildcard (`\\\"*\\\"`) must be specified to match any label key and/or value.\",\n          \"type\": \"object\"\n         },\n         \"namespaces\": {\n          \"description\": \"If specified, match Kubernetes workloads if they exist in one of the specified namespaces.\\n           When used in a networking policy, omission matches any namespace.\\n           When used in a Gloo Mesh Role, a wildcard (`\\\"*\\\"`) must be specified to match any namespace.\",\n          \"items\": {\n           \"type\": \"string\"\n          },\n          \"type\": \"array\"\n         }\n        },\n        \"type\": \"object\"\n       }\n      },\n      \"type\": \"object\"\n     },\n     \"type\": \"array\"\n    }\n   },\n   \"type\": \"object\"\n  }\n },\n \"title\": \"Service Dependency\",\n \"type\": \"object\"\n}",
   "version": "networking.enterprise.mesh.gloo.solo.io/v1beta1"
  },
  "configuration": null,
  "description": "",
  "displayName": "Service Dependency",
  "format": "JSON",
  "id": "00000000-0000-0000-0000-000000000000",
  "metadata": {
   "genealogy": "",
   "isAnnotation": false,
   "isNamespaced": true,
   "published": false
  },
  "model": {
   "category": {
    "name": "Cloud Native Network"
   },
   "displayName": "Gloo Mesh",
   "id": "00000000-0000-0000-0000-000000000000",
   "metadata": {
    "isAnnotation": false,
    "primaryColor": "#00B39F",
    "secondaryColor": "#00D3A9",
    "shape": "circle",
    "source_uri": "https://storage.googleapis.com/gloo-mesh/gloo-mesh/gloo-mesh-1.2.0-beta1.tgz",
    "styleOverrides": "",
    "svgColor": "",
    "svgComplete": "",
    "svgWhite": ""
   },
   "model": {
    "version": "1.2.0-beta1"
   },
   "name": "gloo-mesh",
   "registrant": {
    "created_at": "0001-01-01T00:00:00Z",
    "credential_id": "00000000-0000-0000-0000-000000000000",
    "deleted_at": "0001-01-01T00:00:00Z",
    "id": "00000000-0000-0000-0000-000000000000",
    "kind": "artifacthub",
    "name": "Artifact Hub",
    "status": "discovered",
    "sub_type": "",
    "type": "registry",
    "updated_at": "0001-01-01T00:00:00Z",
    "user_id": "00000000-0000-0000-0000-000000000000"
   },
   "connection_id": "00000000-0000-0000-0000-000000000000",
   "schemaVersion": "models.meshery.io/v1beta1",
   "status": "ignored",
   "subCategory": "Service Mesh",
   "version": "v1.0.0",
   "components": null,
   "relationships": null
  },
  "schemaVersion": "components.meshery.io/v1beta1",
  "status": "ignored",
  "styles": {
   "primaryColor": "#00B39F",
   "secondaryColor": "#00D3A9",
   "shape": "circle",
   "svgColor": "",
   "svgWhite": ""
  },
  "version": "v1.0.0"
 }