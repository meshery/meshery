{
  "capabilities": [
   {
    "description": "Initiate a performance test. Meshery will execute the load generation, collect metrics, and present the results.",
    "displayName": "Performance Test",
    "entityState": [
     "instance"
    ],
    "key": "",
    "kind": "action",
    "metadata": null,
    "schemaVersion": "capability.meshery.io/v1alpha1",
    "status": "enabled",
    "subType": "perf-test",
    "type": "operator",
    "version": "0.7.0"
   },
   {
    "description": "Configure the workload specific setting of a component",
    "displayName": "Workload Configuration",
    "entityState": [
     "declaration"
    ],
    "key": "",
    "kind": "mutate",
    "metadata": null,
    "schemaVersion": "capability.meshery.io/v1alpha1",
    "status": "enabled",
    "subType": "config",
    "type": "configuration",
    "version": "0.7.0"
   },
   {
    "description": "Configure Labels And Annotations for  the component ",
    "displayName": "Labels and Annotations Configuration",
    "entityState": [
     "declaration"
    ],
    "key": "",
    "kind": "mutate",
    "metadata": null,
    "schemaVersion": "capability.meshery.io/v1alpha1",
    "status": "enabled",
    "subType": "labels-and-annotations",
    "type": "configuration",
    "version": "0.7.0"
   },
   {
    "description": "View relationships for the component",
    "displayName": "Relationships",
    "entityState": [
     "declaration",
     "instance"
    ],
    "key": "",
    "kind": "view",
    "metadata": null,
    "schemaVersion": "capability.meshery.io/v1alpha1",
    "status": "enabled",
    "subType": "relationship",
    "type": "configuration",
    "version": "0.7.0"
   },
   {
    "description": "View Component Definition ",
    "displayName": "Json Schema",
    "entityState": [
     "declaration",
     "instance"
    ],
    "key": "",
    "kind": "view",
    "metadata": null,
    "schemaVersion": "capability.meshery.io/v1alpha1",
    "status": "enabled",
    "subType": "definition",
    "type": "configuration",
    "version": "0.7.0"
   },
   {
    "description": "Configure the visual styles for the component",
    "displayName": "Styling",
    "entityState": [
     "declaration"
    ],
    "key": "",
    "kind": "mutate",
    "metadata": null,
    "schemaVersion": "capability.meshery.io/v1alpha1",
    "status": "enabled",
    "subType": "",
    "type": "style",
    "version": "0.7.0"
   },
   {
    "description": "Change the shape of the component",
    "displayName": "Change Shape",
    "entityState": [
     "declaration"
    ],
    "key": "",
    "kind": "mutate",
    "metadata": null,
    "schemaVersion": "capability.meshery.io/v1alpha1",
    "status": "enabled",
    "subType": "shape",
    "type": "style",
    "version": "0.7.0"
   },
   {
    "description": "Drag and Drop a component into a parent component in graph view",
    "displayName": "Compound Drag And Drop",
    "entityState": [
     "declaration"
    ],
    "key": "",
    "kind": "interaction",
    "metadata": null,
    "schemaVersion": "capability.meshery.io/v1alpha1",
    "status": "enabled",
    "subType": "compoundDnd",
    "type": "graph",
    "version": "0.7.0"
   }
  ],
  "component": {
   "kind": "RateLimitClientConfig",
   "schema": "{\n \"properties\": {\n  \"spec\": {\n   \"description\": \"RateLimitClientConfig contains the client configuration for the rate limit Actions that determine how Envoy\\ncomposes the descriptors that are sent to the rate limit server to check whether a request should be rate-limited\",\n   \"properties\": {\n    \"rateLimits\": {\n     \"description\": \"The RateLimitClient specifies the ratelimit Actions which the client (Envoy) will use to\\ncompose the descriptors that will be sent to the server to make a rate limiting decision.\",\n     \"oneOf\": [\n      {\n       \"not\": {\n        \"anyOf\": [\n         {\n          \"required\": [\n           \"raw\"\n          ]\n         }\n        ]\n       }\n      },\n      {\n       \"required\": [\n        \"raw\"\n       ]\n      }\n     ],\n     \"properties\": {\n      \"raw\": {\n       \"description\": \"Configure the actions and/or set actions that determine how Envoy composes the descriptors\",\n       \"properties\": {\n        \"rateLimits\": {\n         \"description\": \"Actions specify how the client (Envoy) will compose the descriptors that\\nwill be sent to the server to make a rate limiting decision.\",\n         \"items\": {\n          \"properties\": {\n           \"actions\": {\n            \"items\": {\n             \"oneOf\": [\n              {\n               \"not\": {\n                \"anyOf\": [\n                 {\n                  \"required\": [\n                   \"sourceCluster\"\n                  ]\n                 },\n                 {\n                  \"required\": [\n                   \"destinationCluster\"\n                  ]\n                 },\n                 {\n                  \"required\": [\n                   \"requestHeaders\"\n                  ]\n                 },\n                 {\n                  \"required\": [\n                   \"remoteAddress\"\n                  ]\n                 },\n                 {\n                  \"required\": [\n                   \"genericKey\"\n                  ]\n                 },\n                 {\n                  \"required\": [\n                   \"headerValueMatch\"\n                  ]\n                 },\n                 {\n                  \"required\": [\n                   \"metadata\"\n                  ]\n                 }\n                ]\n               }\n              },\n              {\n               \"required\": [\n                \"sourceCluster\"\n               ]\n              },\n              {\n               \"required\": [\n                \"destinationCluster\"\n               ]\n              },\n              {\n               \"required\": [\n                \"requestHeaders\"\n               ]\n              },\n              {\n               \"required\": [\n                \"remoteAddress\"\n               ]\n              },\n              {\n               \"required\": [\n                \"genericKey\"\n               ]\n              },\n              {\n               \"required\": [\n                \"headerValueMatch\"\n               ]\n              },\n              {\n               \"required\": [\n                \"metadata\"\n               ]\n              }\n             ],\n             \"properties\": {\n              \"destinationCluster\": {\n               \"description\": \"Rate limit on destination cluster.\",\n               \"type\": \"object\"\n              },\n              \"genericKey\": {\n               \"description\": \"Rate limit on a generic key.\",\n               \"properties\": {\n                \"descriptorValue\": {\n                 \"description\": \"The value to use in the descriptor entry.\",\n                 \"type\": \"string\"\n                }\n               },\n               \"type\": \"object\"\n              },\n              \"headerValueMatch\": {\n               \"description\": \"Rate limit on the existence of request headers.\",\n               \"properties\": {\n                \"descriptorValue\": {\n                 \"description\": \"The value to use in the descriptor entry.\",\n                 \"type\": \"string\"\n                },\n                \"expectMatch\": {\n                 \"description\": \"If set to true, the action will append a descriptor entry when the\\nrequest matches the headers. If set to false, the action will append a\\ndescriptor entry when the request does not match the headers. The\\ndefault value is true.\",\n                 \"nullable\": true,\n                 \"type\": \"boolean\"\n                },\n                \"headers\": {\n                 \"description\": \"Specifies a set of headers that the rate limit action should match\\non. The action will check the requestâ€™s headers against all the\\nspecified headers in the config. A match will happen if all the\\nheaders in the config are present in the request with the same values\\n(or based on presence if the value field is not in the config).\",\n                 \"items\": {\n                  \"oneOf\": [\n                   {\n                    \"not\": {\n                     \"anyOf\": [\n                      {\n                       \"required\": [\n                        \"exactMatch\"\n                       ]\n                      },\n                      {\n                       \"required\": [\n                        \"regexMatch\"\n                       ]\n                      },\n                      {\n                       \"required\": [\n                        \"rangeMatch\"\n                       ]\n                      },\n                      {\n                       \"required\": [\n                        \"presentMatch\"\n                       ]\n                      },\n                      {\n                       \"required\": [\n                        \"prefixMatch\"\n                       ]\n                      },\n                      {\n                       \"required\": [\n                        \"suffixMatch\"\n                       ]\n                      }\n                     ]\n                    }\n                   },\n                   {\n                    \"required\": [\n                     \"exactMatch\"\n                    ]\n                   },\n                   {\n                    \"required\": [\n                     \"regexMatch\"\n                    ]\n                   },\n                   {\n                    \"required\": [\n                     \"rangeMatch\"\n                    ]\n                   },\n                   {\n                    \"required\": [\n                     \"presentMatch\"\n                    ]\n                   },\n                   {\n                    \"required\": [\n                     \"prefixMatch\"\n                    ]\n                   },\n                   {\n                    \"required\": [\n                     \"suffixMatch\"\n                    ]\n                   }\n                  ],\n                  \"properties\": {\n                   \"exactMatch\": {\n                    \"description\": \"If specified, header match will be performed based on the value of the header.\",\n                    \"type\": \"string\"\n                   },\n                   \"invertMatch\": {\n                    \"description\": \"If specified, the match result will be inverted before checking. Defaults to false.\\n\\nExamples:\\n\\n* The regex *\\\\d{3}* does not match the value *1234*, so it will match when inverted.\\n* The range [-10,0) will match the value -1, so it will not match when inverted.\",\n                    \"type\": \"boolean\"\n                   },\n                   \"name\": {\n                    \"description\": \"Specifies the name of the header in the request.\",\n                    \"type\": \"string\"\n                   },\n                   \"prefixMatch\": {\n                    \"description\": \"If specified, header match will be performed based on the prefix of the header value.\\nNote: empty prefix is not allowed, please use present_match instead.\\n\\nExamples:\\n\\n* The prefix *abcd* matches the value *abcdxyz*, but not for *abcxyz*.\",\n                    \"type\": \"string\"\n                   },\n                   \"presentMatch\": {\n                    \"description\": \"If specified, header match will be performed based on whether the header is in the\\nrequest.\",\n                    \"type\": \"boolean\"\n                   },\n                   \"rangeMatch\": {\n                    \"description\": \"If specified, header match will be performed based on range.\\nThe rule will match if the request header value is within this range.\\nThe entire request header value must represent an integer in base 10 notation: consisting of\\nan optional plus or minus sign followed by a sequence of digits. The rule will not match if\\nthe header value does not represent an integer. Match will fail for empty values, floating\\npoint numbers or if only a subsequence of the header value is an integer.\\n\\nExamples:\\n\\n* For range [-10,0), route will match for header value -1, but not for 0, \\\"somestring\\\", 10.9,\\n  \\\"-1somestring\\\"\",\n                    \"properties\": {\n                     \"end\": {\n                      \"description\": \"end of the range (exclusive)\",\n                      \"format\": \"int64\",\n                      \"type\": \"integer\"\n                     },\n                     \"start\": {\n                      \"description\": \"start of the range (inclusive)\",\n                      \"format\": \"int64\",\n                      \"type\": \"integer\"\n                     }\n                    },\n                    \"type\": \"object\"\n                   },\n                   \"regexMatch\": {\n                    \"description\": \"If specified, this regex string is a regular expression rule which implies the entire request\\nheader value must match the regex. The rule will not match if only a subsequence of the\\nrequest header value matches the regex. The regex grammar used in the value field is defined\\n`(here)[https://en.cppreference.com/w/cpp/regex/ecmascript]`.\\n\\nExamples:\\n\\n* The regex *\\\\d{3}* matches the value *123*\\n* The regex *\\\\d{3}* does not match the value *1234*\\n* The regex *\\\\d{3}* does not match the value *123.456*\",\n                    \"type\": \"string\"\n                   },\n                   \"suffixMatch\": {\n                    \"description\": \"If specified, header match will be performed based on the suffix of the header value.\\nNote: empty suffix is not allowed, please use present_match instead.\\n\\nExamples:\\n\\n* The suffix *abcd* matches the value *xyzabcd*, but not for *xyzbcd*.\",\n                    \"type\": \"string\"\n                   }\n                  },\n                  \"type\": \"object\"\n                 },\n                 \"type\": \"array\"\n                }\n               },\n               \"type\": \"object\"\n              },\n              \"metadata\": {\n               \"description\": \"Rate limit on metadata.\",\n               \"properties\": {\n                \"defaultValue\": {\n                 \"description\": \"An optional value to use if *metadata_key* is empty. If not set and\\nno value is present under the metadata_key then no descriptor is generated.\",\n                 \"type\": \"string\"\n                },\n                \"descriptorKey\": {\n                 \"description\": \"Required. The key to use in the descriptor entry.\",\n                 \"type\": \"string\"\n                },\n                \"metadataKey\": {\n                 \"description\": \"Required. Metadata struct that defines the key and path to retrieve the string value. A match will\\nonly happen if the value in the metadata is of type string.\",\n                 \"properties\": {\n                  \"key\": {\n                   \"description\": \"Required. The key name of Metadata to retrieve the Struct from the metadata.\\nTypically, it represents a builtin subsystem or custom extension.\",\n                   \"type\": \"string\"\n                  },\n                  \"path\": {\n                   \"description\": \"Must have at least one element. The path to retrieve the Value from the Struct. It can be a prefix or a full path,\\ne.g. ``[prop, xyz]`` for a struct or ``[prop, foo]`` for a string in the example,\\nwhich depends on the particular scenario.\\n\\nNote: Due to that only the key type segment is supported, the path can not specify a list\\nunless the list is the last segment.\",\n                   \"items\": {\n                    \"oneOf\": [\n                     {\n                      \"not\": {\n                       \"anyOf\": [\n                        {\n                         \"required\": [\n                          \"key\"\n                         ]\n                        }\n                       ]\n                      }\n                     },\n                     {\n                      \"required\": [\n                       \"key\"\n                      ]\n                     }\n                    ],\n                    \"properties\": {\n                     \"key\": {\n                      \"description\": \"Required. If specified, use the key to retrieve the value in a Struct.\",\n                      \"type\": \"string\"\n                     }\n                    },\n                    \"type\": \"object\"\n                   },\n                   \"type\": \"array\"\n                  }\n                 },\n                 \"type\": \"object\"\n                },\n                \"source\": {\n                 \"description\": \"Source of metadata\",\n                 \"enum\": [\n                  \"DYNAMIC\",\n                  \"ROUTE_ENTRY\"\n                 ],\n                 \"type\": \"string\"\n                }\n               },\n               \"type\": \"object\"\n              },\n              \"remoteAddress\": {\n               \"description\": \"Rate limit on remote address.\",\n               \"type\": \"object\"\n              },\n              \"requestHeaders\": {\n               \"description\": \"Rate limit on request headers.\",\n               \"properties\": {\n                \"descriptorKey\": {\n                 \"description\": \"The key to use in the descriptor entry.\",\n                 \"type\": \"string\"\n                },\n                \"headerName\": {\n                 \"description\": \"The header name to be queried from the request headers. The headerâ€™s\\nvalue is used to populate the value of the descriptor entry for the\\ndescriptor_key.\",\n                 \"type\": \"string\"\n                }\n               },\n               \"type\": \"object\"\n              },\n              \"sourceCluster\": {\n               \"description\": \"Rate limit on source cluster.\",\n               \"type\": \"object\"\n              }\n             },\n             \"type\": \"object\"\n            },\n            \"type\": \"array\"\n           },\n           \"setActions\": {\n            \"items\": {\n             \"oneOf\": [\n              {\n               \"not\": {\n                \"anyOf\": [\n                 {\n                  \"required\": [\n                   \"sourceCluster\"\n                  ]\n                 },\n                 {\n                  \"required\": [\n                   \"destinationCluster\"\n                  ]\n                 },\n                 {\n                  \"required\": [\n                   \"requestHeaders\"\n                  ]\n                 },\n                 {\n                  \"required\": [\n                   \"remoteAddress\"\n                  ]\n                 },\n                 {\n                  \"required\": [\n                   \"genericKey\"\n                  ]\n                 },\n                 {\n                  \"required\": [\n                   \"headerValueMatch\"\n                  ]\n                 },\n                 {\n                  \"required\": [\n                   \"metadata\"\n                  ]\n                 }\n                ]\n               }\n              },\n              {\n               \"required\": [\n                \"sourceCluster\"\n               ]\n              },\n              {\n               \"required\": [\n                \"destinationCluster\"\n               ]\n              },\n              {\n               \"required\": [\n                \"requestHeaders\"\n               ]\n              },\n              {\n               \"required\": [\n                \"remoteAddress\"\n               ]\n              },\n              {\n               \"required\": [\n                \"genericKey\"\n               ]\n              },\n              {\n               \"required\": [\n                \"headerValueMatch\"\n               ]\n              },\n              {\n               \"required\": [\n                \"metadata\"\n               ]\n              }\n             ],\n             \"properties\": {\n              \"destinationCluster\": {\n               \"description\": \"Rate limit on destination cluster.\",\n               \"type\": \"object\"\n              },\n              \"genericKey\": {\n               \"description\": \"Rate limit on a generic key.\",\n               \"properties\": {\n                \"descriptorValue\": {\n                 \"description\": \"The value to use in the descriptor entry.\",\n                 \"type\": \"string\"\n                }\n               },\n               \"type\": \"object\"\n              },\n              \"headerValueMatch\": {\n               \"description\": \"Rate limit on the existence of request headers.\",\n               \"properties\": {\n                \"descriptorValue\": {\n                 \"description\": \"The value to use in the descriptor entry.\",\n                 \"type\": \"string\"\n                },\n                \"expectMatch\": {\n                 \"description\": \"If set to true, the action will append a descriptor entry when the\\nrequest matches the headers. If set to false, the action will append a\\ndescriptor entry when the request does not match the headers. The\\ndefault value is true.\",\n                 \"nullable\": true,\n                 \"type\": \"boolean\"\n                },\n                \"headers\": {\n                 \"description\": \"Specifies a set of headers that the rate limit action should match\\non. The action will check the requestâ€™s headers against all the\\nspecified headers in the config. A match will happen if all the\\nheaders in the config are present in the request with the same values\\n(or based on presence if the value field is not in the config).\",\n                 \"items\": {\n                  \"oneOf\": [\n                   {\n                    \"not\": {\n                     \"anyOf\": [\n                      {\n                       \"required\": [\n                        \"exactMatch\"\n                       ]\n                      },\n                      {\n                       \"required\": [\n                        \"regexMatch\"\n                       ]\n                      },\n                      {\n                       \"required\": [\n                        \"rangeMatch\"\n                       ]\n                      },\n                      {\n                       \"required\": [\n                        \"presentMatch\"\n                       ]\n                      },\n                      {\n                       \"required\": [\n                        \"prefixMatch\"\n                       ]\n                      },\n                      {\n                       \"required\": [\n                        \"suffixMatch\"\n                       ]\n                      }\n                     ]\n                    }\n                   },\n                   {\n                    \"required\": [\n                     \"exactMatch\"\n                    ]\n                   },\n                   {\n                    \"required\": [\n                     \"regexMatch\"\n                    ]\n                   },\n                   {\n                    \"required\": [\n                     \"rangeMatch\"\n                    ]\n                   },\n                   {\n                    \"required\": [\n                     \"presentMatch\"\n                    ]\n                   },\n                   {\n                    \"required\": [\n                     \"prefixMatch\"\n                    ]\n                   },\n                   {\n                    \"required\": [\n                     \"suffixMatch\"\n                    ]\n                   }\n                  ],\n                  \"properties\": {\n                   \"exactMatch\": {\n                    \"description\": \"If specified, header match will be performed based on the value of the header.\",\n                    \"type\": \"string\"\n                   },\n                   \"invertMatch\": {\n                    \"description\": \"If specified, the match result will be inverted before checking. Defaults to false.\\n\\nExamples:\\n\\n* The regex *\\\\d{3}* does not match the value *1234*, so it will match when inverted.\\n* The range [-10,0) will match the value -1, so it will not match when inverted.\",\n                    \"type\": \"boolean\"\n                   },\n                   \"name\": {\n                    \"description\": \"Specifies the name of the header in the request.\",\n                    \"type\": \"string\"\n                   },\n                   \"prefixMatch\": {\n                    \"description\": \"If specified, header match will be performed based on the prefix of the header value.\\nNote: empty prefix is not allowed, please use present_match instead.\\n\\nExamples:\\n\\n* The prefix *abcd* matches the value *abcdxyz*, but not for *abcxyz*.\",\n                    \"type\": \"string\"\n                   },\n                   \"presentMatch\": {\n                    \"description\": \"If specified, header match will be performed based on whether the header is in the\\nrequest.\",\n                    \"type\": \"boolean\"\n                   },\n                   \"rangeMatch\": {\n                    \"description\": \"If specified, header match will be performed based on range.\\nThe rule will match if the request header value is within this range.\\nThe entire request header value must represent an integer in base 10 notation: consisting of\\nan optional plus or minus sign followed by a sequence of digits. The rule will not match if\\nthe header value does not represent an integer. Match will fail for empty values, floating\\npoint numbers or if only a subsequence of the header value is an integer.\\n\\nExamples:\\n\\n* For range [-10,0), route will match for header value -1, but not for 0, \\\"somestring\\\", 10.9,\\n  \\\"-1somestring\\\"\",\n                    \"properties\": {\n                     \"end\": {\n                      \"description\": \"end of the range (exclusive)\",\n                      \"format\": \"int64\",\n                      \"type\": \"integer\"\n                     },\n                     \"start\": {\n                      \"description\": \"start of the range (inclusive)\",\n                      \"format\": \"int64\",\n                      \"type\": \"integer\"\n                     }\n                    },\n                    \"type\": \"object\"\n                   },\n                   \"regexMatch\": {\n                    \"description\": \"If specified, this regex string is a regular expression rule which implies the entire request\\nheader value must match the regex. The rule will not match if only a subsequence of the\\nrequest header value matches the regex. The regex grammar used in the value field is defined\\n`(here)[https://en.cppreference.com/w/cpp/regex/ecmascript]`.\\n\\nExamples:\\n\\n* The regex *\\\\d{3}* matches the value *123*\\n* The regex *\\\\d{3}* does not match the value *1234*\\n* The regex *\\\\d{3}* does not match the value *123.456*\",\n                    \"type\": \"string\"\n                   },\n                   \"suffixMatch\": {\n                    \"description\": \"If specified, header match will be performed based on the suffix of the header value.\\nNote: empty suffix is not allowed, please use present_match instead.\\n\\nExamples:\\n\\n* The suffix *abcd* matches the value *xyzabcd*, but not for *xyzbcd*.\",\n                    \"type\": \"string\"\n                   }\n                  },\n                  \"type\": \"object\"\n                 },\n                 \"type\": \"array\"\n                }\n               },\n               \"type\": \"object\"\n              },\n              \"metadata\": {\n               \"description\": \"Rate limit on metadata.\",\n               \"properties\": {\n                \"defaultValue\": {\n                 \"description\": \"An optional value to use if *metadata_key* is empty. If not set and\\nno value is present under the metadata_key then no descriptor is generated.\",\n                 \"type\": \"string\"\n                },\n                \"descriptorKey\": {\n                 \"description\": \"Required. The key to use in the descriptor entry.\",\n                 \"type\": \"string\"\n                },\n                \"metadataKey\": {\n                 \"description\": \"Required. Metadata struct that defines the key and path to retrieve the string value. A match will\\nonly happen if the value in the metadata is of type string.\",\n                 \"properties\": {\n                  \"key\": {\n                   \"description\": \"Required. The key name of Metadata to retrieve the Struct from the metadata.\\nTypically, it represents a builtin subsystem or custom extension.\",\n                   \"type\": \"string\"\n                  },\n                  \"path\": {\n                   \"description\": \"Must have at least one element. The path to retrieve the Value from the Struct. It can be a prefix or a full path,\\ne.g. ``[prop, xyz]`` for a struct or ``[prop, foo]`` for a string in the example,\\nwhich depends on the particular scenario.\\n\\nNote: Due to that only the key type segment is supported, the path can not specify a list\\nunless the list is the last segment.\",\n                   \"items\": {\n                    \"oneOf\": [\n                     {\n                      \"not\": {\n                       \"anyOf\": [\n                        {\n                         \"required\": [\n                          \"key\"\n                         ]\n                        }\n                       ]\n                      }\n                     },\n                     {\n                      \"required\": [\n                       \"key\"\n                      ]\n                     }\n                    ],\n                    \"properties\": {\n                     \"key\": {\n                      \"description\": \"Required. If specified, use the key to retrieve the value in a Struct.\",\n                      \"type\": \"string\"\n                     }\n                    },\n                    \"type\": \"object\"\n                   },\n                   \"type\": \"array\"\n                  }\n                 },\n                 \"type\": \"object\"\n                },\n                \"source\": {\n                 \"description\": \"Source of metadata\",\n                 \"enum\": [\n                  \"DYNAMIC\",\n                  \"ROUTE_ENTRY\"\n                 ],\n                 \"type\": \"string\"\n                }\n               },\n               \"type\": \"object\"\n              },\n              \"remoteAddress\": {\n               \"description\": \"Rate limit on remote address.\",\n               \"type\": \"object\"\n              },\n              \"requestHeaders\": {\n               \"description\": \"Rate limit on request headers.\",\n               \"properties\": {\n                \"descriptorKey\": {\n                 \"description\": \"The key to use in the descriptor entry.\",\n                 \"type\": \"string\"\n                },\n                \"headerName\": {\n                 \"description\": \"The header name to be queried from the request headers. The headerâ€™s\\nvalue is used to populate the value of the descriptor entry for the\\ndescriptor_key.\",\n                 \"type\": \"string\"\n                }\n               },\n               \"type\": \"object\"\n              },\n              \"sourceCluster\": {\n               \"description\": \"Rate limit on source cluster.\",\n               \"type\": \"object\"\n              }\n             },\n             \"type\": \"object\"\n            },\n            \"type\": \"array\"\n           }\n          },\n          \"type\": \"object\"\n         },\n         \"type\": \"array\"\n        }\n       },\n       \"type\": \"object\"\n      }\n     },\n     \"type\": \"object\"\n    }\n   },\n   \"type\": \"object\"\n  }\n },\n \"title\": \"Rate Limit Client Config\",\n \"type\": \"object\"\n}",
   "version": "networking.enterprise.mesh.gloo.solo.io/v1beta1"
  },
  "configuration": null,
  "description": "",
  "displayName": "Rate Limit Client Config",
  "format": "JSON",
  "id": "00000000-0000-0000-0000-000000000000",
  "metadata": {
   "genealogy": "",
   "isAnnotation": false,
   "isNamespaced": true,
   "published": false
  },
  "model": {
   "category": {
    "name": "Cloud Native Network"
   },
   "displayName": "Gloo Mesh",
   "id": "00000000-0000-0000-0000-000000000000",
   "metadata": {
    "isAnnotation": false,
    "primaryColor": "#00B39F",
    "secondaryColor": "#00D3A9",
    "shape": "circle",
    "source_uri": "https://storage.googleapis.com/gloo-mesh/gloo-mesh/gloo-mesh-1.2.0-beta1.tgz",
    "styleOverrides": "",
    "svgColor": "",
    "svgComplete": "",
    "svgWhite": ""
   },
   "model": {
    "version": "1.2.0-beta1"
   },
   "name": "gloo-mesh",
   "registrant": {
    "created_at": "0001-01-01T00:00:00Z",
    "credential_id": "00000000-0000-0000-0000-000000000000",
    "deleted_at": "0001-01-01T00:00:00Z",
    "id": "00000000-0000-0000-0000-000000000000",
    "kind": "artifacthub",
    "name": "Artifact Hub",
    "status": "discovered",
    "sub_type": "",
    "type": "registry",
    "updated_at": "0001-01-01T00:00:00Z",
    "user_id": "00000000-0000-0000-0000-000000000000"
   },
   "connection_id": "00000000-0000-0000-0000-000000000000",
   "schemaVersion": "models.meshery.io/v1beta1",
   "status": "ignored",
   "subCategory": "Service Mesh",
   "version": "v1.0.0",
   "components": null,
   "relationships": null
  },
  "schemaVersion": "components.meshery.io/v1beta1",
  "status": "enabled",
  "styles": {
   "primaryColor": "#00B39F",
   "secondaryColor": "#00D3A9",
   "shape": "circle",
   "svgColor": "",
   "svgWhite": ""
  },
  "version": "v1.0.0"
 }