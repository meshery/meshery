{"kind":"CertificateRequest","apiVersion":"cert-manager.io/v1","displayName":"Certificate Request","format":"JSON","metadata":{"genealogy":"","logoURL":"https://layer5.io/company/brand","model":"clickhouse","modelDisplayName":"Clickhouse","primaryColor":"#ffcc00","published":false,"secondaryColor":"#00D3A9","shape":"circle","styleOverrides":"","subCategory":"Database","svgColor":"\u003c?xml version=\"1.0\" encoding=\"UTF-8\"?\u003e\u003c!DOCTYPE svg\u003e\u003csvg xmlns=\"http://www.w3.org/2000/svg\" height=\"20\" viewBox=\"0 0 9 8\" width=\"20\"\u003e\u003cpath xmlns=\"http://www.w3.org/2000/svg\" d=\"m0 7h1v1h-1z\" fill=\"#f00\"\u003e\u003c/path\u003e\u003cpath xmlns=\"http://www.w3.org/2000/svg\" d=\"m0 0h1v7h-1zm2 0h1v8h-1zm2 0h1v8h-1zm2 0h1v8h-1zm2 3.25h1v1.5h-1z\" fill=\"#fc0\"\u003e\u003c/path\u003e\u003c/svg\u003e","svgComplete":"","svgWhite":"\u003c?xml version=\"1.0\" encoding=\"UTF-8\"?\u003e\u003c!DOCTYPE svg\u003e\u003csvg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\" id=\"Layer_1\" xmlns:_xmlns=\"xmlns\" _xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" viewBox=\"0 0 2500 2222\" style=\"enable-background:new 0 0 2500 2222;\" xml:space=\"preserve\" height=\"20\" width=\"20\"\u003e\n\u003cstyle xmlns=\"http://www.w3.org/2000/svg\" type=\"text/css\"\u003e\n\u0026#x9;.st0{opacity:0.8;fill:#FFFFFF;}\n\u0026#x9;.st1{fill:#FFFFFF;}\n\u003c/style\u003e\n\u003cpath xmlns=\"http://www.w3.org/2000/svg\" class=\"st0\" d=\"M0.1,1944.2h277.8V2222H0.1V1944.2z\"\u003e\u003c/path\u003e\n\u003cpath xmlns=\"http://www.w3.org/2000/svg\" class=\"st1\" d=\"M0.1,0h277.8v1944.2H0.1V0z M555.6,0h277.8v2222H555.6V0z M1111.1,0h277.8v2222h-277.8V0z M1666.6,0h277.8v2222\u0026#xA;\u0026#x9;h-277.8V0z M2222.1,902.7h277.8v416.6h-277.8V902.7z\"\u003e\u003c/path\u003e\n\u003c/svg\u003e"},"model":{"name":"clickhouse","version":"5.0.0","displayName":"Clickhouse","category":{"name":"App Definition and Development","metadata":null},"metadata":null},"schema":"{\n \"description\": \"Desired state of the CertificateRequest resource.\",\n \"properties\": {\n  \"duration\": {\n   \"description\": \"The requested 'duration' (i.e. lifetime) of the Certificate. This option may be ignored/overridden by some issuer types.\",\n   \"type\": \"string\"\n  },\n  \"extra\": {\n   \"additionalProperties\": {\n    \"items\": {\n     \"type\": \"string\"\n    },\n    \"type\": \"array\"\n   },\n   \"description\": \"Extra contains extra attributes of the user that created the CertificateRequest. Populated by the cert-manager webhook on creation and immutable.\",\n   \"type\": \"object\"\n  },\n  \"groups\": {\n   \"description\": \"Groups contains group membership of the user that created the CertificateRequest. Populated by the cert-manager webhook on creation and immutable.\",\n   \"items\": {\n    \"type\": \"string\"\n   },\n   \"type\": \"array\",\n   \"x-kubernetes-list-type\": \"atomic\"\n  },\n  \"isCA\": {\n   \"description\": \"IsCA will request to mark the certificate as valid for certificate signing when submitting to the issuer. This will automatically add the `cert sign` usage to the list of `usages`.\",\n   \"type\": \"boolean\"\n  },\n  \"issuerRef\": {\n   \"description\": \"IssuerRef is a reference to the issuer for this CertificateRequest.  If the `kind` field is not set, or set to `Issuer`, an Issuer resource with the given name in the same namespace as the CertificateRequest will be used.  If the `kind` field is set to `ClusterIssuer`, a ClusterIssuer with the provided name will be used. The `name` field in this stanza is required at all times. The group field refers to the API group of the issuer which defaults to `cert-manager.io` if empty.\",\n   \"properties\": {\n    \"group\": {\n     \"description\": \"Group of the resource being referred to.\",\n     \"type\": \"string\"\n    },\n    \"kind\": {\n     \"description\": \"Kind of the resource being referred to.\",\n     \"type\": \"string\"\n    },\n    \"name\": {\n     \"description\": \"Name of the resource being referred to.\",\n     \"type\": \"string\"\n    }\n   },\n   \"required\": [\n    \"name\"\n   ],\n   \"type\": \"object\"\n  },\n  \"request\": {\n   \"description\": \"The PEM-encoded x509 certificate signing request to be submitted to the CA for signing.\",\n   \"format\": \"byte\",\n   \"type\": \"string\"\n  },\n  \"uid\": {\n   \"description\": \"UID contains the uid of the user that created the CertificateRequest. Populated by the cert-manager webhook on creation and immutable.\",\n   \"type\": \"string\"\n  },\n  \"usages\": {\n   \"description\": \"Usages is the set of x509 usages that are requested for the certificate. If usages are set they SHOULD be encoded inside the CSR spec Defaults to `digital signature` and `key encipherment` if not specified.\",\n   \"items\": {\n    \"description\": \"KeyUsage specifies valid usage contexts for keys. See: https://tools.ietf.org/html/rfc5280#section-4.2.1.3 https://tools.ietf.org/html/rfc5280#section-4.2.1.12 \\n Valid KeyUsage values are as follows: \\\"signing\\\", \\\"digital signature\\\", \\\"content commitment\\\", \\\"key encipherment\\\", \\\"key agreement\\\", \\\"data encipherment\\\", \\\"cert sign\\\", \\\"crl sign\\\", \\\"encipher only\\\", \\\"decipher only\\\", \\\"any\\\", \\\"server auth\\\", \\\"client auth\\\", \\\"code signing\\\", \\\"email protection\\\", \\\"s/mime\\\", \\\"ipsec end system\\\", \\\"ipsec tunnel\\\", \\\"ipsec user\\\", \\\"timestamping\\\", \\\"ocsp signing\\\", \\\"microsoft sgc\\\", \\\"netscape sgc\\\"\",\n    \"enum\": [\n     \"signing\",\n     \"digital signature\",\n     \"content commitment\",\n     \"key encipherment\",\n     \"key agreement\",\n     \"data encipherment\",\n     \"cert sign\",\n     \"crl sign\",\n     \"encipher only\",\n     \"decipher only\",\n     \"any\",\n     \"server auth\",\n     \"client auth\",\n     \"code signing\",\n     \"email protection\",\n     \"s/mime\",\n     \"ipsec end system\",\n     \"ipsec tunnel\",\n     \"ipsec user\",\n     \"timestamping\",\n     \"ocsp signing\",\n     \"microsoft sgc\",\n     \"netscape sgc\"\n    ],\n    \"type\": \"string\"\n   },\n   \"type\": \"array\"\n  },\n  \"username\": {\n   \"description\": \"Username contains the name of the user that created the CertificateRequest. Populated by the cert-manager webhook on creation and immutable.\",\n   \"type\": \"string\"\n  }\n },\n \"required\": [\n  \"issuerRef\",\n  \"request\"\n ],\n \"title\": \"Certificate Request\",\n \"type\": \"object\"\n}"}