{"kind":"Recommendation","apiVersion":"v1alpha1","display-name":"Recommendation","format":"JSON","metadata":{"logo-URL":"","model":"kubedb","model-display-name":"Kubedb","primary-color":"","secondary-color":"","shape":"circle","svg_color":"","svg_white":""},"model":{"name":"kubedb","version":"2022.12.28","display-name":"Kubedb","category":"Not Found","sub-category":"Not Found"},"schema":"{\n \"description\": \"RecommendationSpec defines the desired state of Recommendation\",\n \"properties\": {\n  \"backoffLimit\": {\n   \"description\": \"BackoffLimit specifies the number of retries before marking this recommendation failed. By default set as five(5). If BackoffLimit is zero(0), the operation will be tried to executed only once.\",\n   \"format\": \"int32\",\n   \"maximum\": 10,\n   \"minimum\": 0,\n   \"type\": \"integer\"\n  },\n  \"deadline\": {\n   \"description\": \"The recommendation will be executed within the given Deadline. To maintain deadline, Parallelism can be compromised.\",\n   \"format\": \"date-time\",\n   \"type\": \"string\"\n  },\n  \"description\": {\n   \"description\": \"Description specifies the reason why this recommendation is generated.\",\n   \"type\": \"string\"\n  },\n  \"operation\": {\n   \"description\": \"Operation holds a kubernetes object yaml which will be applied when this recommendation will be executed. It should be a valid kubernetes resource yaml containing apiVersion, kind and metadata fields.\",\n   \"type\": \"object\",\n   \"x-kubernetes-embedded-resource\": true,\n   \"x-kubernetes-preserve-unknown-fields\": true\n  },\n  \"recommender\": {\n   \"description\": \"Recommender holds the name and namespace of the component which generate this recommendation.\",\n   \"properties\": {\n    \"name\": {\n     \"description\": \"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\",\n     \"type\": \"string\"\n    },\n    \"namespace\": {\n     \"description\": \"Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/\",\n     \"type\": \"string\"\n    }\n   },\n   \"required\": [\n    \"name\"\n   ],\n   \"type\": \"object\"\n  },\n  \"requireExplicitApproval\": {\n   \"description\": \"If RequireExplicitApproval is set to `true` then the Recommendation must be Approved manually. Recommendation won't be executed without manual approval and any kind of ApprovalPolicy will be ignored.\",\n   \"type\": \"boolean\"\n  },\n  \"rules\": {\n   \"description\": \"Rules defines OperationPhaseRules. It contains three identification rules of successful execution of the operation, progressing execution of the operation \\u0026 failed execution of the operation. Example: rules: success:    `has(self.status.phase) \\u0026\\u0026 self.status.phase == 'Successful'` inProgress: `has(self.status.phase) \\u0026\\u0026 self.status.phase == 'Progressing'` failed:     `has(self.status.phase) \\u0026\\u0026 self.status.phase == 'Failed'`\",\n   \"properties\": {\n    \"failed\": {\n     \"description\": \"Failed defines a rule to identify that applied operation is failed. Example: inProgress: `has(self.status.phase) \\u0026\\u0026 self.status.phase == 'Failed'` Here self.status.phase is pointing to .status.phase field of the Operation object. When .status.phase field presents and becomes `Failed`, the Failed rule will satisfy.\",\n     \"type\": \"string\"\n    },\n    \"inProgress\": {\n     \"description\": \"InProgress defines a rule to identify that applied operation is progressing. Example: inProgress: `has(self.status.phase) \\u0026\\u0026 self.status.phase == 'Progressing'` Here self.status.phase is pointing to .status.phase field of the Operation object. When .status.phase field presents and becomes `Progressing`, the InProgress rule will satisfy.\",\n     \"type\": \"string\"\n    },\n    \"success\": {\n     \"description\": \"Success defines a rule to identify the successful execution of the operation. Example: success: `has(self.status.phase) \\u0026\\u0026 self.status.phase == 'Successful'` Here self.status.phase is pointing to .status.phase field of the Operation object. When .status.phase field presents and becomes `Successful`, the Success rule will satisfy.\",\n     \"type\": \"string\"\n    }\n   },\n   \"required\": [\n    \"failed\",\n    \"inProgress\",\n    \"success\"\n   ],\n   \"type\": \"object\"\n  },\n  \"target\": {\n   \"description\": \"Target specifies the APIGroup, Kind \\u0026 Name of the target resource for which the recommendation is generated\",\n   \"properties\": {\n    \"apiGroup\": {\n     \"description\": \"APIGroup is the group for the resource being referenced. If APIGroup is not specified, the specified Kind must be in the core API group. For any other third-party types, APIGroup is required.\",\n     \"type\": \"string\"\n    },\n    \"kind\": {\n     \"description\": \"Kind is the type of resource being referenced\",\n     \"type\": \"string\"\n    },\n    \"name\": {\n     \"description\": \"Name is the name of resource being referenced\",\n     \"type\": \"string\"\n    }\n   },\n   \"required\": [\n    \"kind\",\n    \"name\"\n   ],\n   \"type\": \"object\"\n  }\n },\n \"required\": [\n  \"operation\",\n  \"recommender\",\n  \"rules\",\n  \"target\"\n ],\n \"title\": \"Recommendation\",\n \"type\": \"object\"\n}"}