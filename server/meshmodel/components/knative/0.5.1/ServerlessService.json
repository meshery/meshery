{"kind":"ServerlessService","apiVersion":"v1alpha1","display-name":"Serverless Service","format":"JSON","metadata":{"logo-URL":"https://github.com/cncf/artwork/blob/master/examples/incubating.md#knative-logos","model":"knative","model-display-name":"Knative","primary-color":"#0865ad","secondary-color":"#4DAAF2","shape":"circle","svg_color":"\u003csvg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 735 593.5\" xmlns=\"http://www.w3.org/2000/svg\"\u003e\u003cpath xmlns=\"http://www.w3.org/2000/svg\" fill=\"#0865ad\" d=\"M297.496 1.488 65.749 113.096a15.035 15.035 0 0 0-8.135 10.194L.377 374.065a15.02 15.02 0 0 0 2.902 12.711l160.376 201.108a15.038 15.038 0 0 0 11.747 5.657H432.63c4.571 0 8.895-2.085 11.747-5.657l160.376-201.108a15.023 15.023 0 0 0 2.903-12.711L550.418 123.29a15.019 15.019 0 0 0-8.135-10.194L310.536 1.488a15.022 15.022 0 0 0-13.04 0\"\u003e\u003c/path\u003e\u003cpath xmlns=\"http://www.w3.org/2000/svg\" fill=\"#fff\" d=\"M221.845 210.533h51.054v100.764h1.017c5.072-8.798 10.48-16.907 15.552-25.023l51.736-75.741h63.225l-75.398 97.039 79.455 130.856h-60.18l-55.792-98.394-19.615 24.005v74.389h-51.054V210.533Z\"\u003e\u003c/path\u003e\u003cpath xmlns=\"http://www.w3.org/2000/svg\" fill=\"#6695ca\" d=\"m585.328 1.307-91.112 33.16a7.521 7.521 0 0 0-3.935 3.306l-48.478 83.964a7.513 7.513 0 0 0-.892 5.066l16.835 95.483a7.495 7.495 0 0 0 2.568 4.453l74.277 62.319a7.507 7.507 0 0 0 4.828 1.76h96.957a7.515 7.515 0 0 0 4.831-1.76l74.274-62.319a7.508 7.508 0 0 0 2.567-4.453l16.839-95.483a7.538 7.538 0 0 0-.896-5.066l-48.474-83.964a7.526 7.526 0 0 0-3.939-3.306l-91.112-33.16a7.5 7.5 0 0 0-5.138 0\"\u003e\u003c/path\u003e\u003cpath xmlns=\"http://www.w3.org/2000/svg\" fill=\"#fff\" d=\"M570.231 111.865a59.358 59.358 0 0 1 5.654-4.821 37.76 37.76 0 0 1 6.228-3.773c2.192-1.052 4.559-1.866 7.101-2.452 2.542-.585 5.301-.876 8.281-.876 4.91 0 9.265.848 13.063 2.542 3.801 1.694 7.001 4.067 9.603 7.101 2.602 3.04 4.558 6.663 5.873 10.871 1.316 4.205 1.976 8.826 1.976 13.851v57.423h-24.115v-57.423c0-5.025-1.168-8.929-3.5-11.706-2.342-2.775-5.786-4.162-10.351-4.162-3.385 0-6.569.73-9.556 2.192-2.981 1.462-5.814 3.504-8.498 6.137v64.962h-24.202v-90.389h14.903c3.04 0 5.057 1.403 6.056 4.211l1.484 6.312Z\"\u003e\u003c/path\u003e\u003c/svg\u003e","svg_white":""},"model":{"name":"knative","version":"0.5.1","display-name":"Knative","category":"Serverless","sub-category":"Installable Platform"},"schema":"{\n \"description\": \"Spec is the desired state of the ServerlessService. More info: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#spec-and-status\",\n \"properties\": {\n  \"mode\": {\n   \"description\": \"Mode describes the mode of operation of the ServerlessService.\",\n   \"type\": \"string\"\n  },\n  \"numActivators\": {\n   \"description\": \"NumActivators contains number of Activators that this revision should be assigned. O means â€” assign all.\",\n   \"format\": \"int32\",\n   \"type\": \"integer\"\n  },\n  \"objectRef\": {\n   \"description\": \"ObjectRef defines the resource that this ServerlessService is responsible for making \\\"serverless\\\".\",\n   \"properties\": {\n    \"apiVersion\": {\n     \"description\": \"API version of the referent.\",\n     \"type\": \"string\"\n    },\n    \"fieldPath\": {\n     \"description\": \"If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: \\\"spec.containers{name}\\\" (where \\\"name\\\" refers to the name of the container that triggered the event) or if no container name is specified \\\"spec.containers[2]\\\" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.\",\n     \"type\": \"string\"\n    },\n    \"kind\": {\n     \"description\": \"Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\",\n     \"type\": \"string\"\n    },\n    \"name\": {\n     \"description\": \"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\",\n     \"type\": \"string\"\n    },\n    \"namespace\": {\n     \"description\": \"Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/\",\n     \"type\": \"string\"\n    },\n    \"resourceVersion\": {\n     \"description\": \"Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\",\n     \"type\": \"string\"\n    },\n    \"uid\": {\n     \"description\": \"UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids\",\n     \"type\": \"string\"\n    }\n   },\n   \"type\": \"object\",\n   \"x-kubernetes-map-type\": \"atomic\"\n  },\n  \"protocolType\": {\n   \"description\": \"The application-layer protocol. Matches `RevisionProtocolType` set on the owning pa/revision. serving imports networking, so just use string.\",\n   \"type\": \"string\"\n  }\n },\n \"required\": [\n  \"objectRef\",\n  \"protocolType\"\n ],\n \"title\": \"Serverless Service\",\n \"type\": \"object\"\n}"}