{"kind":"Map","apiVersion":"v1alpha1","display-name":"Map","format":"JSON","metadata":{},"model":{"name":"hazelcast-platform-operator","version":"5.0.6-alpha","display-name":"hazelcast-platform-operator","category":"","sub-category":""},"schema":"{\n \"description\": \"MapSpec defines the desired state of Hazelcast Map Config\",\n \"properties\": {\n  \"asyncBackupCount\": {\n   \"default\": 0,\n   \"description\": \"Number of asynchronous backups.\",\n   \"format\": \"int32\",\n   \"type\": \"integer\"\n  },\n  \"backupCount\": {\n   \"default\": 1,\n   \"description\": \"Number of synchronous backups.\",\n   \"format\": \"int32\",\n   \"type\": \"integer\"\n  },\n  \"entryListeners\": {\n   \"description\": \"EntryListeners contains the configuration for the map-level or entry-based events listeners provided by the Hazelcastâ€™s eventing framework. You can learn more at https://docs.hazelcast.com/hazelcast/latest/events/object-events.\",\n   \"items\": {\n    \"properties\": {\n     \"className\": {\n      \"description\": \"ClassName is the fully qualified name of the class that implements any of the Listener interface.\",\n      \"minLength\": 1,\n      \"type\": \"string\"\n     },\n     \"includeValues\": {\n      \"default\": true,\n      \"description\": \"IncludeValues is an optional attribute that indicates whether the event will contain the map value. Defaults to true.\",\n      \"type\": \"boolean\"\n     },\n     \"local\": {\n      \"default\": false,\n      \"description\": \"Local is an optional attribute that indicates whether the map on the local member can be listened to. Defaults to false.\",\n      \"type\": \"boolean\"\n     }\n    },\n    \"required\": [\n     \"className\"\n    ],\n    \"type\": \"object\"\n   },\n   \"type\": \"array\"\n  },\n  \"eviction\": {\n   \"default\": {\n    \"maxSize\": 0\n   },\n   \"description\": \"Configuration for removing data from the map when it reaches its max size. It can be updated.\",\n   \"properties\": {\n    \"evictionPolicy\": {\n     \"default\": \"NONE\",\n     \"description\": \"Eviction policy to be applied when map reaches its max size according to the max size policy.\",\n     \"enum\": [\n      \"NONE\",\n      \"LRU\",\n      \"LFU\",\n      \"RANDOM\"\n     ],\n     \"type\": \"string\"\n    },\n    \"maxSize\": {\n     \"default\": 0,\n     \"description\": \"Max size of the map.\",\n     \"format\": \"int32\",\n     \"type\": \"integer\"\n    },\n    \"maxSizePolicy\": {\n     \"default\": \"PER_NODE\",\n     \"description\": \"Policy for deciding if the maxSize is reached.\",\n     \"enum\": [\n      \"PER_NODE\",\n      \"PER_PARTITION\",\n      \"USED_HEAP_SIZE\",\n      \"USED_HEAP_PERCENTAGE\",\n      \"FREE_HEAP_SIZE\",\n      \"FREE_HEAP_PERCENTAGE\",\n      \"USED_NATIVE_MEMORY_SIZE\",\n      \"USED_NATIVE_MEMORY_PERCENTAGE\",\n      \"FREE_NATIVE_MEMORY_SIZE\",\n      \"FREE_NATIVE_MEMORY_PERCENTAGE\"\n     ],\n     \"type\": \"string\"\n    }\n   },\n   \"type\": \"object\"\n  },\n  \"hazelcastResourceName\": {\n   \"description\": \"HazelcastResourceName defines the name of the Hazelcast resource.\",\n   \"minLength\": 1,\n   \"type\": \"string\"\n  },\n  \"inMemoryFormat\": {\n   \"default\": \"BINARY\",\n   \"description\": \"InMemoryFormat specifies in which format data will be stored in your map\",\n   \"enum\": [\n    \"BINARY\",\n    \"OBJECT\"\n   ],\n   \"type\": \"string\"\n  },\n  \"indexes\": {\n   \"description\": \"Indexes to be created for the map data. You can learn more at https://docs.hazelcast.com/hazelcast/latest/query/indexing-maps. It cannot be updated after map config is created successfully.\",\n   \"items\": {\n    \"properties\": {\n     \"attributes\": {\n      \"description\": \"Attributes of the index.\",\n      \"items\": {\n       \"type\": \"string\"\n      },\n      \"type\": \"array\"\n     },\n     \"bitMapIndexOptions\": {\n      \"description\": \"Options for \\\"BITMAP\\\" index type.\",\n      \"properties\": {\n       \"uniqueKey\": {\n        \"type\": \"string\"\n       },\n       \"uniqueKeyTransition\": {\n        \"enum\": [\n         \"OBJECT\",\n         \"LONG\",\n         \"RAW\"\n        ],\n        \"type\": \"string\"\n       }\n      },\n      \"required\": [\n       \"uniqueKey\",\n       \"uniqueKeyTransition\"\n      ],\n      \"type\": \"object\"\n     },\n     \"name\": {\n      \"description\": \"Name of the index config.\",\n      \"type\": \"string\"\n     },\n     \"type\": {\n      \"description\": \"Type of the index.\",\n      \"enum\": [\n       \"SORTED\",\n       \"HASH\",\n       \"BITMAP\"\n      ],\n      \"type\": \"string\"\n     }\n    },\n    \"required\": [\n     \"attributes\",\n     \"type\"\n    ],\n    \"type\": \"object\"\n   },\n   \"type\": \"array\"\n  },\n  \"mapStore\": {\n   \"description\": \"Configuration options when you want to load/store the map entries from/to a persistent data store such as a relational database You can learn more at https://docs.hazelcast.com/hazelcast/latest/data-structures/working-with-external-data\",\n   \"properties\": {\n    \"className\": {\n     \"description\": \"Name of your class implementing MapLoader and/or MapStore interface.\",\n     \"type\": \"string\"\n    },\n    \"initialMode\": {\n     \"default\": \"LAZY\",\n     \"description\": \"Sets the initial entry loading mode.\",\n     \"enum\": [\n      \"LAZY\",\n      \"EAGER\"\n     ],\n     \"type\": \"string\"\n    },\n    \"propertiesSecretName\": {\n     \"description\": \"Properties can be used for giving information to the MapStore implementation\",\n     \"type\": \"string\"\n    },\n    \"writeBatchSize\": {\n     \"default\": 1,\n     \"description\": \"Used to create batches when writing to map store.\",\n     \"format\": \"int32\",\n     \"minimum\": 1,\n     \"type\": \"integer\"\n    },\n    \"writeCoealescing\": {\n     \"default\": true,\n     \"description\": \"It is meaningful if you are using write behind in MapStore. When it is set to true, only the latest store operation on a key during the write-delay-seconds will be reflected to MapStore.\",\n     \"type\": \"boolean\"\n    },\n    \"writeDelaySeconds\": {\n     \"description\": \"Number of seconds to delay the storing of entries.\",\n     \"format\": \"int32\",\n     \"type\": \"integer\"\n    }\n   },\n   \"required\": [\n    \"className\"\n   ],\n   \"type\": \"object\"\n  },\n  \"maxIdleSeconds\": {\n   \"default\": 0,\n   \"description\": \"Maximum time in seconds for each entry to stay idle in the map. Entries that are idle for more than this time are evicted automatically. It can be updated.\",\n   \"format\": \"int32\",\n   \"type\": \"integer\"\n  },\n  \"name\": {\n   \"description\": \"Name of the data structure config to be created. If empty, CR name will be used. It cannot be updated after the config is created successfully.\",\n   \"type\": \"string\"\n  },\n  \"persistenceEnabled\": {\n   \"default\": false,\n   \"description\": \"When enabled, map data will be persisted. It cannot be updated after map config is created successfully.\",\n   \"type\": \"boolean\"\n  },\n  \"timeToLiveSeconds\": {\n   \"default\": 0,\n   \"description\": \"Maximum time in seconds for each entry to stay in the map. If it is not 0, entries that are older than this time and not updated for this time are evicted automatically. It can be updated.\",\n   \"format\": \"int32\",\n   \"type\": \"integer\"\n  }\n },\n \"required\": [\n  \"hazelcastResourceName\"\n ],\n \"title\": \"Map\",\n \"type\": \"object\"\n}"}