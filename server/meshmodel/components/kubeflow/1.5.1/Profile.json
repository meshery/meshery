{"kind":"Profile","apiVersion":"v1","display-name":"Profile","format":"JSON","metadata":{"logo-URL":"","model":"kubeflow","model-display-name":"Kubeflow","primary-color":"","secondary-color":"","shape":"circle","svg_color":"","svg_white":""},"model":{"name":"kubeflow","version":"1.5.1","display-name":"Kubeflow","category":"Machine Learning","sub-category":"Machine Learning"},"schema":"{\n \"description\": \"ProfileSpec defines the desired state of Profile\",\n \"properties\": {\n  \"owner\": {\n   \"description\": \"The profile owner\",\n   \"properties\": {\n    \"apiGroup\": {\n     \"description\": \"APIGroup holds the API group of the referenced subject. Defaults to \\\"\\\" for ServiceAccount subjects. Defaults to \\\"rbac.authorization.k8s.io\\\" for User and Group subjects.\",\n     \"type\": \"string\"\n    },\n    \"kind\": {\n     \"description\": \"Kind of object being referenced. Values defined by this API group are \\\"User\\\", \\\"Group\\\", and \\\"ServiceAccount\\\". If the Authorizer does not recognized the kind value, the Authorizer should report an error.\",\n     \"type\": \"string\"\n    },\n    \"name\": {\n     \"description\": \"Name of the object being referenced.\",\n     \"type\": \"string\"\n    },\n    \"namespace\": {\n     \"description\": \"Namespace of the referenced object.  If the object kind is non-namespace, such as \\\"User\\\" or \\\"Group\\\", and this value is not empty the Authorizer should report an error.\",\n     \"type\": \"string\"\n    }\n   },\n   \"required\": [\n    \"kind\",\n    \"name\"\n   ],\n   \"type\": \"object\"\n  },\n  \"plugins\": {\n   \"items\": {\n    \"description\": \"Plugin is for customize actions on different platform.\",\n    \"properties\": {\n     \"apiVersion\": {\n      \"description\": \"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\",\n      \"type\": \"string\"\n     },\n     \"kind\": {\n      \"description\": \"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\",\n      \"type\": \"string\"\n     },\n     \"spec\": {\n      \"type\": \"object\",\n      \"x-kubernetes-preserve-unknown-fields\": true\n     }\n    },\n    \"type\": \"object\"\n   },\n   \"type\": \"array\"\n  },\n  \"resourceQuotaSpec\": {\n   \"description\": \"Resourcequota that will be applied to target namespace\",\n   \"properties\": {\n    \"hard\": {\n     \"additionalProperties\": {\n      \"anyOf\": [\n       {\n        \"type\": \"integer\"\n       },\n       {\n        \"type\": \"string\"\n       }\n      ],\n      \"pattern\": \"^(\\\\+|-)?(([0-9]+(\\\\.[0-9]*)?)|(\\\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\\\+|-)?(([0-9]+(\\\\.[0-9]*)?)|(\\\\.[0-9]+))))?$\",\n      \"x-kubernetes-int-or-string\": true\n     },\n     \"description\": \"hard is the set of desired hard limits for each named resource. More info: https://kubernetes.io/docs/concepts/policy/resource-quotas/\",\n     \"type\": \"object\"\n    },\n    \"scopeSelector\": {\n     \"description\": \"scopeSelector is also a collection of filters like scopes that must match each object tracked by a quota but expressed using ScopeSelectorOperator in combination with possible values. For a resource to match, both scopes AND scopeSelector (if specified in spec), must be matched.\",\n     \"properties\": {\n      \"matchExpressions\": {\n       \"description\": \"A list of scope selector requirements by scope of the resources.\",\n       \"items\": {\n        \"description\": \"A scoped-resource selector requirement is a selector that contains values, a scope name, and an operator that relates the scope name and values.\",\n        \"properties\": {\n         \"operator\": {\n          \"description\": \"Represents a scope's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist.\",\n          \"type\": \"string\"\n         },\n         \"scopeName\": {\n          \"description\": \"The name of the scope that the selector applies to.\",\n          \"type\": \"string\"\n         },\n         \"values\": {\n          \"description\": \"An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.\",\n          \"items\": {\n           \"type\": \"string\"\n          },\n          \"type\": \"array\"\n         }\n        },\n        \"required\": [\n         \"operator\",\n         \"scopeName\"\n        ],\n        \"type\": \"object\"\n       },\n       \"type\": \"array\"\n      }\n     },\n     \"type\": \"object\"\n    },\n    \"scopes\": {\n     \"description\": \"A collection of filters that must match each object tracked by a quota. If not specified, the quota matches all objects.\",\n     \"items\": {\n      \"description\": \"A ResourceQuotaScope defines a filter that must match each object tracked by a quota\",\n      \"type\": \"string\"\n     },\n     \"type\": \"array\"\n    }\n   },\n   \"type\": \"object\"\n  }\n },\n \"title\": \"Profile\",\n \"type\": \"object\"\n}"}