{
	"kind": "AWX",
	"apiVersion": "v1beta1",
	"display-name": "AWX",
	"format": "JSON",
	"metadata": {},
	"model": {
		"name": "awx-operator",
		"version": "1.1.3",
		"display-name": "awx-operator",
		"category": "",
		"sub-category": ""
	},
	"schema": "{\n \"properties\": {\n  \"admin_email\": {\n   \"description\": \"The admin user email\",\n   \"type\": \"string\"\n  },\n  \"admin_password_secret\": {\n   \"description\": \"Secret where the admin password can be found\",\n   \"type\": \"string\"\n  },\n  \"admin_user\": {\n   \"default\": \"admin\",\n   \"description\": \"Username to use for the admin account\",\n   \"type\": \"string\"\n  },\n  \"affinity\": {\n   \"description\": \"If specified, the pod's scheduling constraints\",\n   \"properties\": {\n    \"nodeAffinity\": {\n     \"properties\": {\n      \"preferredDuringSchedulingIgnoredDuringExecution\": {\n       \"items\": {\n        \"properties\": {\n         \"preference\": {\n          \"properties\": {\n           \"matchExpressions\": {\n            \"items\": {\n             \"properties\": {\n              \"key\": {\n               \"type\": \"string\"\n              },\n              \"operator\": {\n               \"type\": \"string\"\n              },\n              \"values\": {\n               \"items\": {\n                \"type\": \"string\"\n               },\n               \"type\": \"array\"\n              }\n             },\n             \"required\": [\n              \"key\",\n              \"operator\"\n             ],\n             \"type\": \"object\"\n            },\n            \"type\": \"array\"\n           },\n           \"matchFields\": {\n            \"items\": {\n             \"properties\": {\n              \"key\": {\n               \"type\": \"string\"\n              },\n              \"operator\": {\n               \"type\": \"string\"\n              },\n              \"values\": {\n               \"items\": {\n                \"type\": \"string\"\n               },\n               \"type\": \"array\"\n              }\n             },\n             \"required\": [\n              \"key\",\n              \"operator\"\n             ],\n             \"type\": \"object\"\n            },\n            \"type\": \"array\"\n           }\n          },\n          \"type\": \"object\",\n          \"x-kubernetes-map-type\": \"atomic\"\n         },\n         \"weight\": {\n          \"format\": \"int32\",\n          \"type\": \"integer\"\n         }\n        },\n        \"required\": [\n         \"preference\",\n         \"weight\"\n        ],\n        \"type\": \"object\"\n       },\n       \"type\": \"array\"\n      },\n      \"requiredDuringSchedulingIgnoredDuringExecution\": {\n       \"properties\": {\n        \"nodeSelectorTerms\": {\n         \"items\": {\n          \"properties\": {\n           \"matchExpressions\": {\n            \"items\": {\n             \"properties\": {\n              \"key\": {\n               \"type\": \"string\"\n              },\n              \"operator\": {\n               \"type\": \"string\"\n              },\n              \"values\": {\n               \"items\": {\n                \"type\": \"string\"\n               },\n               \"type\": \"array\"\n              }\n             },\n             \"required\": [\n              \"key\",\n              \"operator\"\n             ],\n             \"type\": \"object\"\n            },\n            \"type\": \"array\"\n           },\n           \"matchFields\": {\n            \"items\": {\n             \"properties\": {\n              \"key\": {\n               \"type\": \"string\"\n              },\n              \"operator\": {\n               \"type\": \"string\"\n              },\n              \"values\": {\n               \"items\": {\n                \"type\": \"string\"\n               },\n               \"type\": \"array\"\n              }\n             },\n             \"required\": [\n              \"key\",\n              \"operator\"\n             ],\n             \"type\": \"object\"\n            },\n            \"type\": \"array\"\n           }\n          },\n          \"type\": \"object\",\n          \"x-kubernetes-map-type\": \"atomic\"\n         },\n         \"type\": \"array\"\n        }\n       },\n       \"required\": [\n        \"nodeSelectorTerms\"\n       ],\n       \"type\": \"object\",\n       \"x-kubernetes-map-type\": \"atomic\"\n      }\n     },\n     \"type\": \"object\"\n    },\n    \"podAffinity\": {\n     \"properties\": {\n      \"preferredDuringSchedulingIgnoredDuringExecution\": {\n       \"items\": {\n        \"properties\": {\n         \"podAffinityTerm\": {\n          \"properties\": {\n           \"labelSelector\": {\n            \"properties\": {\n             \"matchExpressions\": {\n              \"items\": {\n               \"properties\": {\n                \"key\": {\n                 \"type\": \"string\"\n                },\n                \"operator\": {\n                 \"type\": \"string\"\n                },\n                \"values\": {\n                 \"items\": {\n                  \"type\": \"string\"\n                 },\n                 \"type\": \"array\"\n                }\n               },\n               \"required\": [\n                \"key\",\n                \"operator\"\n               ],\n               \"type\": \"object\"\n              },\n              \"type\": \"array\"\n             },\n             \"matchLabels\": {\n              \"additionalProperties\": {\n               \"type\": \"string\"\n              },\n              \"type\": \"object\"\n             }\n            },\n            \"type\": \"object\",\n            \"x-kubernetes-map-type\": \"atomic\"\n           },\n           \"namespaceSelector\": {\n            \"properties\": {\n             \"matchExpressions\": {\n              \"items\": {\n               \"properties\": {\n                \"key\": {\n                 \"type\": \"string\"\n                },\n                \"operator\": {\n                 \"type\": \"string\"\n                },\n                \"values\": {\n                 \"items\": {\n                  \"type\": \"string\"\n                 },\n                 \"type\": \"array\"\n                }\n               },\n               \"required\": [\n                \"key\",\n                \"operator\"\n               ],\n               \"type\": \"object\"\n              },\n              \"type\": \"array\"\n             },\n             \"matchLabels\": {\n              \"additionalProperties\": {\n               \"type\": \"string\"\n              },\n              \"type\": \"object\"\n             }\n            },\n            \"type\": \"object\",\n            \"x-kubernetes-map-type\": \"atomic\"\n           },\n           \"namespaces\": {\n            \"items\": {\n             \"type\": \"string\"\n            },\n            \"type\": \"array\"\n           },\n           \"topologyKey\": {\n            \"type\": \"string\"\n           }\n          },\n          \"required\": [\n           \"topologyKey\"\n          ],\n          \"type\": \"object\"\n         },\n         \"weight\": {\n          \"format\": \"int32\",\n          \"type\": \"integer\"\n         }\n        },\n        \"required\": [\n         \"podAffinityTerm\",\n         \"weight\"\n        ],\n        \"type\": \"object\"\n       },\n       \"type\": \"array\"\n      },\n      \"requiredDuringSchedulingIgnoredDuringExecution\": {\n       \"items\": {\n        \"properties\": {\n         \"labelSelector\": {\n          \"properties\": {\n           \"matchExpressions\": {\n            \"items\": {\n             \"properties\": {\n              \"key\": {\n               \"type\": \"string\"\n              },\n              \"operator\": {\n               \"type\": \"string\"\n              },\n              \"values\": {\n               \"items\": {\n                \"type\": \"string\"\n               },\n               \"type\": \"array\"\n              }\n             },\n             \"required\": [\n              \"key\",\n              \"operator\"\n             ],\n             \"type\": \"object\"\n            },\n            \"type\": \"array\"\n           },\n           \"matchLabels\": {\n            \"additionalProperties\": {\n             \"type\": \"string\"\n            },\n            \"type\": \"object\"\n           }\n          },\n          \"type\": \"object\",\n          \"x-kubernetes-map-type\": \"atomic\"\n         },\n         \"namespaceSelector\": {\n          \"properties\": {\n           \"matchExpressions\": {\n            \"items\": {\n             \"properties\": {\n              \"key\": {\n               \"type\": \"string\"\n              },\n              \"operator\": {\n               \"type\": \"string\"\n              },\n              \"values\": {\n               \"items\": {\n                \"type\": \"string\"\n               },\n               \"type\": \"array\"\n              }\n             },\n             \"required\": [\n              \"key\",\n              \"operator\"\n             ],\n             \"type\": \"object\"\n            },\n            \"type\": \"array\"\n           },\n           \"matchLabels\": {\n            \"additionalProperties\": {\n             \"type\": \"string\"\n            },\n            \"type\": \"object\"\n           }\n          },\n          \"type\": \"object\",\n          \"x-kubernetes-map-type\": \"atomic\"\n         },\n         \"namespaces\": {\n          \"items\": {\n           \"type\": \"string\"\n          },\n          \"type\": \"array\"\n         },\n         \"topologyKey\": {\n          \"type\": \"string\"\n         }\n        },\n        \"required\": [\n         \"topologyKey\"\n        ],\n        \"type\": \"object\"\n       },\n       \"type\": \"array\"\n      }\n     },\n     \"type\": \"object\"\n    },\n    \"podAntiAffinity\": {\n     \"properties\": {\n      \"preferredDuringSchedulingIgnoredDuringExecution\": {\n       \"items\": {\n        \"properties\": {\n         \"podAffinityTerm\": {\n          \"properties\": {\n           \"labelSelector\": {\n            \"properties\": {\n             \"matchExpressions\": {\n              \"items\": {\n               \"properties\": {\n                \"key\": {\n                 \"type\": \"string\"\n                },\n                \"operator\": {\n                 \"type\": \"string\"\n                },\n                \"values\": {\n                 \"items\": {\n                  \"type\": \"string\"\n                 },\n                 \"type\": \"array\"\n                }\n               },\n               \"required\": [\n                \"key\",\n                \"operator\"\n               ],\n               \"type\": \"object\"\n              },\n              \"type\": \"array\"\n             },\n             \"matchLabels\": {\n              \"additionalProperties\": {\n               \"type\": \"string\"\n              },\n              \"type\": \"object\"\n             }\n            },\n            \"type\": \"object\",\n            \"x-kubernetes-map-type\": \"atomic\"\n           },\n           \"namespaceSelector\": {\n            \"properties\": {\n             \"matchExpressions\": {\n              \"items\": {\n               \"properties\": {\n                \"key\": {\n                 \"type\": \"string\"\n                },\n                \"operator\": {\n                 \"type\": \"string\"\n                },\n                \"values\": {\n                 \"items\": {\n                  \"type\": \"string\"\n                 },\n                 \"type\": \"array\"\n                }\n               },\n               \"required\": [\n                \"key\",\n                \"operator\"\n               ],\n               \"type\": \"object\"\n              },\n              \"type\": \"array\"\n             },\n             \"matchLabels\": {\n              \"additionalProperties\": {\n               \"type\": \"string\"\n              },\n              \"type\": \"object\"\n             }\n            },\n            \"type\": \"object\",\n            \"x-kubernetes-map-type\": \"atomic\"\n           },\n           \"namespaces\": {\n            \"items\": {\n             \"type\": \"string\"\n            },\n            \"type\": \"array\"\n           },\n           \"topologyKey\": {\n            \"type\": \"string\"\n           }\n          },\n          \"required\": [\n           \"topologyKey\"\n          ],\n          \"type\": \"object\"\n         },\n         \"weight\": {\n          \"format\": \"int32\",\n          \"type\": \"integer\"\n         }\n        },\n        \"required\": [\n         \"podAffinityTerm\",\n         \"weight\"\n        ],\n        \"type\": \"object\"\n       },\n       \"type\": \"array\"\n      },\n      \"requiredDuringSchedulingIgnoredDuringExecution\": {\n       \"items\": {\n        \"properties\": {\n         \"labelSelector\": {\n          \"properties\": {\n           \"matchExpressions\": {\n            \"items\": {\n             \"properties\": {\n              \"key\": {\n               \"type\": \"string\"\n              },\n              \"operator\": {\n               \"type\": \"string\"\n              },\n              \"values\": {\n               \"items\": {\n                \"type\": \"string\"\n               },\n               \"type\": \"array\"\n              }\n             },\n             \"required\": [\n              \"key\",\n              \"operator\"\n             ],\n             \"type\": \"object\"\n            },\n            \"type\": \"array\"\n           },\n           \"matchLabels\": {\n            \"additionalProperties\": {\n             \"type\": \"string\"\n            },\n            \"type\": \"object\"\n           }\n          },\n          \"type\": \"object\",\n          \"x-kubernetes-map-type\": \"atomic\"\n         },\n         \"namespaceSelector\": {\n          \"properties\": {\n           \"matchExpressions\": {\n            \"items\": {\n             \"properties\": {\n              \"key\": {\n               \"type\": \"string\"\n              },\n              \"operator\": {\n               \"type\": \"string\"\n              },\n              \"values\": {\n               \"items\": {\n                \"type\": \"string\"\n               },\n               \"type\": \"array\"\n              }\n             },\n             \"required\": [\n              \"key\",\n              \"operator\"\n             ],\n             \"type\": \"object\"\n            },\n            \"type\": \"array\"\n           },\n           \"matchLabels\": {\n            \"additionalProperties\": {\n             \"type\": \"string\"\n            },\n            \"type\": \"object\"\n           }\n          },\n          \"type\": \"object\",\n          \"x-kubernetes-map-type\": \"atomic\"\n         },\n         \"namespaces\": {\n          \"items\": {\n           \"type\": \"string\"\n          },\n          \"type\": \"array\"\n         },\n         \"topologyKey\": {\n          \"type\": \"string\"\n         }\n        },\n        \"required\": [\n         \"topologyKey\"\n        ],\n        \"type\": \"object\"\n       },\n       \"type\": \"array\"\n      }\n     },\n     \"type\": \"object\"\n    }\n   },\n   \"type\": \"object\"\n  },\n  \"annotations\": {\n   \"description\": \"annotations for the pods\",\n   \"type\": \"string\"\n  },\n  \"api_version\": {\n   \"description\": \"apiVersion of the deployment type\",\n   \"type\": \"string\"\n  },\n  \"auto_upgrade\": {\n   \"default\": true,\n   \"description\": \"Should AWX instances be automatically upgraded when operator gets upgraded\",\n   \"type\": \"boolean\"\n  },\n  \"broadcast_websocket_secret\": {\n   \"description\": \"Secret where the broadcast websocket secret can be found\",\n   \"type\": \"string\"\n  },\n  \"bundle_cacert_secret\": {\n   \"description\": \"Secret where can be found the trusted Certificate Authority Bundle\",\n   \"type\": \"string\"\n  },\n  \"ca_trust_bundle\": {\n   \"description\": \"Path where the trusted CA bundle is available\",\n   \"type\": \"string\"\n  },\n  \"control_plane_ee_image\": {\n   \"description\": \"Registry path to the Execution Environment container image to use on control plane pods\",\n   \"type\": \"string\"\n  },\n  \"control_plane_priority_class\": {\n   \"description\": \"Assign a preexisting priority class to the control plane pods\",\n   \"type\": \"string\"\n  },\n  \"create_preload_data\": {\n   \"default\": true,\n   \"description\": \"Whether or not to preload data upon instance creation\",\n   \"type\": \"boolean\"\n  },\n  \"csrf_cookie_secure\": {\n   \"description\": \"Set csrf cookie secure mode for web\",\n   \"type\": \"string\"\n  },\n  \"deployment_type\": {\n   \"description\": \"Name of the deployment type\",\n   \"type\": \"string\"\n  },\n  \"development_mode\": {\n   \"description\": \"If the deployment should be done in development mode\",\n   \"type\": \"boolean\"\n  },\n  \"ee_extra_env\": {\n   \"type\": \"string\"\n  },\n  \"ee_extra_volume_mounts\": {\n   \"description\": \"Specify volume mounts to be added to Execution container\",\n   \"type\": \"string\"\n  },\n  \"ee_images\": {\n   \"description\": \"Registry path to the Execution Environment container to use\",\n   \"items\": {\n    \"properties\": {\n     \"image\": {\n      \"type\": \"string\"\n     },\n     \"name\": {\n      \"type\": \"string\"\n     }\n    },\n    \"type\": \"object\"\n   },\n   \"type\": \"array\"\n  },\n  \"ee_pull_credentials_secret\": {\n   \"description\": \"Secret where pull credentials for registered ees can be found\",\n   \"type\": \"string\"\n  },\n  \"ee_resource_requirements\": {\n   \"description\": \"Resource requirements for the ee container\",\n   \"properties\": {\n    \"limits\": {\n     \"properties\": {\n      \"cpu\": {\n       \"type\": \"string\"\n      },\n      \"memory\": {\n       \"type\": \"string\"\n      },\n      \"storage\": {\n       \"type\": \"string\"\n      }\n     },\n     \"type\": \"object\"\n    },\n    \"requests\": {\n     \"properties\": {\n      \"cpu\": {\n       \"type\": \"string\"\n      },\n      \"memory\": {\n       \"type\": \"string\"\n      },\n      \"storage\": {\n       \"type\": \"string\"\n      }\n     },\n     \"type\": \"object\"\n    }\n   },\n   \"type\": \"object\"\n  },\n  \"extra_settings\": {\n   \"description\": \"Extra settings to specify for the API\",\n   \"items\": {\n    \"properties\": {\n     \"setting\": {\n      \"type\": \"string\"\n     },\n     \"value\": {\n      \"x-kubernetes-preserve-unknown-fields\": true\n     }\n    },\n    \"type\": \"object\"\n   },\n   \"type\": \"array\"\n  },\n  \"extra_volumes\": {\n   \"description\": \"Specify extra volumes to add to the application pod\",\n   \"type\": \"string\"\n  },\n  \"garbage_collect_secrets\": {\n   \"default\": false,\n   \"description\": \"Whether or not to remove secrets upon instance removal\",\n   \"type\": \"boolean\"\n  },\n  \"hostname\": {\n   \"description\": \"The hostname of the instance\",\n   \"type\": \"string\"\n  },\n  \"image\": {\n   \"description\": \"Registry path to the application container to use\",\n   \"type\": \"string\"\n  },\n  \"image_pull_policy\": {\n   \"default\": \"IfNotPresent\",\n   \"description\": \"The image pull policy\",\n   \"enum\": [\n    \"Always\",\n    \"always\",\n    \"Never\",\n    \"never\",\n    \"IfNotPresent\",\n    \"ifnotpresent\"\n   ],\n   \"type\": \"string\"\n  },\n  \"image_pull_secret\": {\n   \"description\": \"(Deprecated) Image pull secret for app and database containers\",\n   \"type\": \"string\"\n  },\n  \"image_pull_secrets\": {\n   \"description\": \"Image pull secrets for app and database containers\",\n   \"items\": {\n    \"type\": \"string\"\n   },\n   \"type\": \"array\"\n  },\n  \"image_version\": {\n   \"description\": \"Application container image version to use\",\n   \"type\": \"string\"\n  },\n  \"ingress_annotations\": {\n   \"description\": \"Annotations to add to the Ingress Controller\",\n   \"type\": \"string\"\n  },\n  \"ingress_api_version\": {\n   \"description\": \"The Ingress API version to use\",\n   \"type\": \"string\"\n  },\n  \"ingress_class_name\": {\n   \"description\": \"The name of ingress class to use instead of the cluster default.\",\n   \"type\": \"string\"\n  },\n  \"ingress_path\": {\n   \"description\": \"The ingress path used to reach the deployed service\",\n   \"type\": \"string\"\n  },\n  \"ingress_path_type\": {\n   \"description\": \"The ingress path type for the deployed service\",\n   \"type\": \"string\"\n  },\n  \"ingress_tls_secret\": {\n   \"description\": \"Secret where the Ingress TLS secret can be found\",\n   \"type\": \"string\"\n  },\n  \"ingress_type\": {\n   \"description\": \"The ingress type to use to reach the deployed instance\",\n   \"enum\": [\n    \"none\",\n    \"Ingress\",\n    \"ingress\",\n    \"Route\",\n    \"route\"\n   ],\n   \"type\": \"string\"\n  },\n  \"init_container_extra_commands\": {\n   \"description\": \"Extra commands for the init container\",\n   \"type\": \"string\"\n  },\n  \"init_container_extra_volume_mounts\": {\n   \"description\": \"Specify volume mounts to be added to the init container\",\n   \"type\": \"string\"\n  },\n  \"init_container_image\": {\n   \"description\": \"Registry path to the init container to use\",\n   \"type\": \"string\"\n  },\n  \"init_container_image_version\": {\n   \"description\": \"Init container image version to use\",\n   \"type\": \"string\"\n  },\n  \"ipv6_disabled\": {\n   \"default\": false,\n   \"description\": \"Disable web container's nginx ipv6 listener\",\n   \"type\": \"boolean\"\n  },\n  \"kind\": {\n   \"description\": \"Kind of the deployment type\",\n   \"type\": \"string\"\n  },\n  \"ldap_cacert_secret\": {\n   \"description\": \"Secret where can be found the LDAP trusted Certificate Authority Bundle\",\n   \"type\": \"string\"\n  },\n  \"ldap_password_secret\": {\n   \"description\": \"Secret where can be found the LDAP bind password\",\n   \"type\": \"string\"\n  },\n  \"loadbalancer_port\": {\n   \"default\": 80,\n   \"description\": \"Port to use for the loadbalancer\",\n   \"type\": \"integer\"\n  },\n  \"loadbalancer_protocol\": {\n   \"default\": \"http\",\n   \"description\": \"Protocol to use for the loadbalancer\",\n   \"enum\": [\n    \"http\",\n    \"https\"\n   ],\n   \"type\": \"string\"\n  },\n  \"no_log\": {\n   \"default\": true,\n   \"description\": \"Configure no_log for no_log tasks\",\n   \"type\": \"boolean\"\n  },\n  \"node_selector\": {\n   \"description\": \"nodeSelector for the pods\",\n   \"type\": \"string\"\n  },\n  \"nodeport_port\": {\n   \"default\": 30080,\n   \"description\": \"Port to use for the nodeport\",\n   \"type\": \"integer\"\n  },\n  \"old_postgres_configuration_secret\": {\n   \"description\": \"Secret where the old database configuration can be found for data migration\",\n   \"type\": \"string\"\n  },\n  \"postgres_configuration_secret\": {\n   \"description\": \"Secret where the database configuration can be found\",\n   \"type\": \"string\"\n  },\n  \"postgres_data_path\": {\n   \"description\": \"Path where the PostgreSQL data are located\",\n   \"type\": \"string\"\n  },\n  \"postgres_extra_args\": {\n   \"items\": {\n    \"type\": \"string\"\n   },\n   \"type\": \"array\"\n  },\n  \"postgres_image\": {\n   \"description\": \"Registry path to the PostgreSQL container to use\",\n   \"type\": \"string\"\n  },\n  \"postgres_image_version\": {\n   \"description\": \"PostgreSQL container image version to use\",\n   \"type\": \"string\"\n  },\n  \"postgres_init_container_resource_requirements\": {\n   \"description\": \"Resource requirements for the postgres init container\",\n   \"properties\": {\n    \"limits\": {\n     \"properties\": {\n      \"cpu\": {\n       \"type\": \"string\"\n      },\n      \"memory\": {\n       \"type\": \"string\"\n      },\n      \"storage\": {\n       \"type\": \"string\"\n      }\n     },\n     \"type\": \"object\"\n    },\n    \"requests\": {\n     \"properties\": {\n      \"cpu\": {\n       \"type\": \"string\"\n      },\n      \"memory\": {\n       \"type\": \"string\"\n      },\n      \"storage\": {\n       \"type\": \"string\"\n      }\n     },\n     \"type\": \"object\"\n    }\n   },\n   \"type\": \"object\"\n  },\n  \"postgres_keep_pvc_after_upgrade\": {\n   \"description\": \"Specify whether or not to keep the old PVC after PostgreSQL upgrades\",\n   \"type\": \"boolean\"\n  },\n  \"postgres_label_selector\": {\n   \"description\": \"Label selector used to identify postgres pod for data migration\",\n   \"type\": \"string\"\n  },\n  \"postgres_priority_class\": {\n   \"description\": \"Assign a preexisting priority class to the postgres pod\",\n   \"type\": \"string\"\n  },\n  \"postgres_resource_requirements\": {\n   \"description\": \"Resource requirements for the PostgreSQL container\",\n   \"properties\": {\n    \"limits\": {\n     \"properties\": {\n      \"cpu\": {\n       \"type\": \"string\"\n      },\n      \"memory\": {\n       \"type\": \"string\"\n      }\n     },\n     \"type\": \"object\"\n    },\n    \"requests\": {\n     \"properties\": {\n      \"cpu\": {\n       \"type\": \"string\"\n      },\n      \"memory\": {\n       \"type\": \"string\"\n      }\n     },\n     \"type\": \"object\"\n    }\n   },\n   \"type\": \"object\"\n  },\n  \"postgres_selector\": {\n   \"description\": \"nodeSelector for the Postgres pods\",\n   \"type\": \"string\"\n  },\n  \"postgres_storage_class\": {\n   \"description\": \"Storage class to use for the PostgreSQL PVC\",\n   \"type\": \"string\"\n  },\n  \"postgres_storage_requirements\": {\n   \"description\": \"Storage requirements for the PostgreSQL container\",\n   \"properties\": {\n    \"limits\": {\n     \"properties\": {\n      \"storage\": {\n       \"type\": \"string\"\n      }\n     },\n     \"type\": \"object\"\n    },\n    \"requests\": {\n     \"properties\": {\n      \"storage\": {\n       \"type\": \"string\"\n      }\n     },\n     \"type\": \"object\"\n    }\n   },\n   \"type\": \"object\"\n  },\n  \"postgres_tolerations\": {\n   \"description\": \"node tolerations for the Postgres pods\",\n   \"type\": \"string\"\n  },\n  \"projects_existing_claim\": {\n   \"description\": \"PersistentVolumeClaim to mount /var/lib/projects directory\",\n   \"type\": \"string\"\n  },\n  \"projects_persistence\": {\n   \"default\": false,\n   \"description\": \"Whether or not the /var/lib/projects directory will be persistent\",\n   \"type\": \"boolean\"\n  },\n  \"projects_storage_access_mode\": {\n   \"default\": \"ReadWriteMany\",\n   \"description\": \"AccessMode for the /var/lib/projects PersistentVolumeClaim\",\n   \"type\": \"string\"\n  },\n  \"projects_storage_class\": {\n   \"description\": \"Storage class for the /var/lib/projects PersistentVolumeClaim\",\n   \"type\": \"string\"\n  },\n  \"projects_storage_size\": {\n   \"default\": \"8Gi\",\n   \"description\": \"Size for the /var/lib/projects PersistentVolumeClaim\",\n   \"type\": \"string\"\n  },\n  \"projects_use_existing_claim\": {\n   \"description\": \"Using existing PersistentVolumeClaim\",\n   \"enum\": [\n    \"_Yes_\",\n    \"_No_\"\n   ],\n   \"type\": \"string\"\n  },\n  \"redis_capabilities\": {\n   \"description\": \"Redis container capabilities\",\n   \"items\": {\n    \"type\": \"string\"\n   },\n   \"type\": \"array\"\n  },\n  \"redis_image\": {\n   \"description\": \"Registry path to the redis container to use\",\n   \"type\": \"string\"\n  },\n  \"redis_image_version\": {\n   \"description\": \"Redis container image version to use\",\n   \"type\": \"string\"\n  },\n  \"redis_resource_requirements\": {\n   \"description\": \"Resource requirements for the redis container\",\n   \"properties\": {\n    \"limits\": {\n     \"properties\": {\n      \"cpu\": {\n       \"type\": \"string\"\n      },\n      \"memory\": {\n       \"type\": \"string\"\n      },\n      \"storage\": {\n       \"type\": \"string\"\n      }\n     },\n     \"type\": \"object\"\n    },\n    \"requests\": {\n     \"properties\": {\n      \"cpu\": {\n       \"type\": \"string\"\n      },\n      \"memory\": {\n       \"type\": \"string\"\n      },\n      \"storage\": {\n       \"type\": \"string\"\n      }\n     },\n     \"type\": \"object\"\n    }\n   },\n   \"type\": \"object\"\n  },\n  \"replicas\": {\n   \"default\": 1,\n   \"description\": \"Number of instance replicas\",\n   \"format\": \"int32\",\n   \"type\": \"integer\"\n  },\n  \"route_api_version\": {\n   \"description\": \"The route API version to use\",\n   \"type\": \"string\"\n  },\n  \"route_host\": {\n   \"description\": \"The DNS to use to points to the instance\",\n   \"type\": \"string\"\n  },\n  \"route_tls_secret\": {\n   \"description\": \"Secret where the TLS related credentials are stored\",\n   \"type\": \"string\"\n  },\n  \"route_tls_termination_mechanism\": {\n   \"default\": \"Edge\",\n   \"description\": \"The secure TLS termination mechanism to use\",\n   \"enum\": [\n    \"Edge\",\n    \"edge\",\n    \"Passthrough\",\n    \"passthrough\"\n   ],\n   \"type\": \"string\"\n  },\n  \"secret_key_secret\": {\n   \"description\": \"Secret where the secret key can be found\",\n   \"type\": \"string\"\n  },\n  \"security_context_settings\": {\n   \"description\": \"Key/values that will be set under the pod-level securityContext field\",\n   \"type\": \"object\",\n   \"x-kubernetes-preserve-unknown-fields\": true\n  },\n  \"service_account_annotations\": {\n   \"description\": \"ServiceAccount annotations\",\n   \"type\": \"string\"\n  },\n  \"service_annotations\": {\n   \"description\": \"Annotations to add to the service\",\n   \"type\": \"string\"\n  },\n  \"service_labels\": {\n   \"description\": \"Additional labels to apply to the service\",\n   \"type\": \"string\"\n  },\n  \"service_type\": {\n   \"description\": \"The service type to be used on the deployed instance\",\n   \"enum\": [\n    \"LoadBalancer\",\n    \"loadbalancer\",\n    \"ClusterIP\",\n    \"clusterip\",\n    \"NodePort\",\n    \"nodeport\"\n   ],\n   \"type\": \"string\"\n  },\n  \"session_cookie_secure\": {\n   \"description\": \"Set session cookie secure mode for web\",\n   \"type\": \"string\"\n  },\n  \"set_self_labels\": {\n   \"default\": true,\n   \"description\": \"Maintain some of the recommended `app.kubernetes.io/*` labels on the resource (self)\",\n   \"type\": \"boolean\"\n  },\n  \"task_args\": {\n   \"items\": {\n    \"type\": \"string\"\n   },\n   \"type\": \"array\"\n  },\n  \"task_command\": {\n   \"items\": {\n    \"type\": \"string\"\n   },\n   \"type\": \"array\"\n  },\n  \"task_extra_env\": {\n   \"type\": \"string\"\n  },\n  \"task_extra_volume_mounts\": {\n   \"description\": \"Specify volume mounts to be added to Task container\",\n   \"type\": \"string\"\n  },\n  \"task_privileged\": {\n   \"default\": false,\n   \"description\": \"If a privileged security context should be enabled\",\n   \"type\": \"boolean\"\n  },\n  \"task_resource_requirements\": {\n   \"description\": \"Resource requirements for the task container\",\n   \"properties\": {\n    \"limits\": {\n     \"properties\": {\n      \"cpu\": {\n       \"type\": \"string\"\n      },\n      \"memory\": {\n       \"type\": \"string\"\n      },\n      \"storage\": {\n       \"type\": \"string\"\n      }\n     },\n     \"type\": \"object\"\n    },\n    \"requests\": {\n     \"properties\": {\n      \"cpu\": {\n       \"type\": \"string\"\n      },\n      \"memory\": {\n       \"type\": \"string\"\n      },\n      \"storage\": {\n       \"type\": \"string\"\n      }\n     },\n     \"type\": \"object\"\n    }\n   },\n   \"type\": \"object\"\n  },\n  \"tolerations\": {\n   \"description\": \"node tolerations for the pods\",\n   \"type\": \"string\"\n  },\n  \"topology_spread_constraints\": {\n   \"description\": \"topology rule(s) for the pods\",\n   \"type\": \"string\"\n  },\n  \"web_args\": {\n   \"items\": {\n    \"type\": \"string\"\n   },\n   \"type\": \"array\"\n  },\n  \"web_command\": {\n   \"items\": {\n    \"type\": \"string\"\n   },\n   \"type\": \"array\"\n  },\n  \"web_extra_env\": {\n   \"type\": \"string\"\n  },\n  \"web_extra_volume_mounts\": {\n   \"description\": \"Specify volume mounts to be added to the Web container\",\n   \"type\": \"string\"\n  },\n  \"web_resource_requirements\": {\n   \"description\": \"Resource requirements for the web container\",\n   \"properties\": {\n    \"limits\": {\n     \"properties\": {\n      \"cpu\": {\n       \"type\": \"string\"\n      },\n      \"memory\": {\n       \"type\": \"string\"\n      },\n      \"storage\": {\n       \"type\": \"string\"\n      }\n     },\n     \"type\": \"object\"\n    },\n    \"requests\": {\n     \"properties\": {\n      \"cpu\": {\n       \"type\": \"string\"\n      },\n      \"memory\": {\n       \"type\": \"string\"\n      },\n      \"storage\": {\n       \"type\": \"string\"\n      }\n     },\n     \"type\": \"object\"\n    }\n   },\n   \"type\": \"object\"\n  }\n },\n \"title\": \"AWX\",\n \"type\": \"object\"\n}"
}