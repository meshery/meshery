{"kind":"TricksterTracingConfig","apiVersion":"trickstercache.org/v1alpha1","displayName":"Trickster Tracing Config","format":"JSON","hostname":"","hostID":"00000000-0000-0000-0000-000000000000","displayhostname":"","metadata":{"capabilities":"","genealogy":"","isAnnotation":false,"isModelAnnotation":"FALSE","isNamespaced":true,"logoURL":"","model":"ace","modelDisplayName":"Appscode Container Engine","primaryColor":"#00B39F","published":false,"secondaryColor":"#00D3A9","shape":"circle","styleOverrides":"","subCategory":"Runtime","svgColor":"","svgComplete":"","svgWhite":""},"model":{"name":"ace","version":"2022.6.14","displayName":"Appscode Container Engine","hostname":"","hostID":"00000000-0000-0000-0000-000000000000","displayhostname":"","category":{"name":"Platform","metadata":null},"metadata":{"source_uri":"https://charts.appscode.com/stable/ace/ace-v2023.12.5.tgz"},"components":null,"relationships":null},"schema":"{\n \"description\": \"TricksterTracingConfig is the Schema for the trickstertracingconfigs API\",\n \"properties\": {\n  \"spec\": {\n   \"description\": \"TricksterTracingConfigSpec defines the desired state of TricksterTracingConfig\",\n   \"properties\": {\n    \"collector_pass\": {\n     \"type\": \"string\"\n    },\n    \"collector_url\": {\n     \"type\": \"string\"\n    },\n    \"collector_user\": {\n     \"type\": \"string\"\n    },\n    \"jaeger\": {\n     \"description\": \"Options is a collection of Jaeger-specific options\",\n     \"properties\": {\n      \"endpoint_type\": {\n       \"type\": \"string\"\n      }\n     },\n     \"type\": \"object\"\n    },\n    \"omit_tags\": {\n     \"items\": {\n      \"type\": \"string\"\n     },\n     \"type\": \"array\"\n    },\n    \"provider\": {\n     \"type\": \"string\"\n    },\n    \"sample_rate\": {\n     \"type\": \"number\"\n    },\n    \"secret\": {\n     \"description\": \"secret information about the secret data to project\",\n     \"properties\": {\n      \"items\": {\n       \"description\": \"items if unspecified, each key-value pair in the Data field of the referenced Secret will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the Secret, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'.\",\n       \"items\": {\n        \"description\": \"Maps a string key to a path within a volume.\",\n        \"properties\": {\n         \"key\": {\n          \"description\": \"key is the key to project.\",\n          \"type\": \"string\"\n         },\n         \"mode\": {\n          \"description\": \"mode is Optional: mode bits used to set permissions on this file. Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.\",\n          \"format\": \"int32\",\n          \"type\": \"integer\"\n         },\n         \"path\": {\n          \"description\": \"path is the relative path of the file to map the key to. May not be an absolute path. May not contain the path element '..'. May not start with the string '..'.\",\n          \"type\": \"string\"\n         }\n        },\n        \"required\": [\n         \"key\",\n         \"path\"\n        ],\n        \"type\": \"object\"\n       },\n       \"type\": \"array\"\n      },\n      \"name\": {\n       \"description\": \"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?\",\n       \"type\": \"string\"\n      },\n      \"optional\": {\n       \"description\": \"optional field specify whether the Secret or its key must be defined\",\n       \"type\": \"boolean\"\n      }\n     },\n     \"type\": \"object\",\n     \"x-kubernetes-map-type\": \"atomic\"\n    },\n    \"service_name\": {\n     \"type\": \"string\"\n    },\n    \"stdout\": {\n     \"description\": \"Options is a collection of Stdout-specific options\",\n     \"properties\": {\n      \"pretty_print\": {\n       \"type\": \"boolean\"\n      }\n     },\n     \"type\": \"object\"\n    },\n    \"tags\": {\n     \"additionalProperties\": {\n      \"type\": \"string\"\n     },\n     \"type\": \"object\"\n    }\n   },\n   \"type\": \"object\"\n  }\n },\n \"title\": \"Trickster Tracing Config\",\n \"type\": \"object\"\n}"}