{"kind":"TricksterRule","apiVersion":"trickstercache.org/v1alpha1","displayName":"Trickster Rule","format":"JSON","hostname":"","hostID":"00000000-0000-0000-0000-000000000000","displayhostname":"","metadata":{"capabilities":"","genealogy":"","isAnnotation":false,"isModelAnnotation":"FALSE","isNamespaced":true,"logoURL":"","model":"ace","modelDisplayName":"Appscode Container Engine","primaryColor":"#00B39F","published":false,"secondaryColor":"#00D3A9","shape":"circle","styleOverrides":"","subCategory":"Runtime","svgColor":"","svgComplete":"","svgWhite":""},"model":{"name":"ace","version":"2022.6.14","displayName":"Appscode Container Engine","hostname":"","hostID":"00000000-0000-0000-0000-000000000000","displayhostname":"","category":{"name":"Platform","metadata":null},"metadata":{"source_uri":"https://charts.appscode.com/stable/ace/ace-v2023.12.5.tgz"},"components":null,"relationships":null},"schema":"{\n \"description\": \"TricksterRule is the Schema for the tricksterrules API\",\n \"properties\": {\n  \"spec\": {\n   \"description\": \"TricksterRuleSpec defines the desired state of TricksterRule\",\n   \"properties\": {\n    \"cases\": {\n     \"additionalProperties\": {\n      \"description\": \"CaseOptions defines the options for a given evaluation case\",\n      \"properties\": {\n       \"matches\": {\n        \"description\": \"Matches indicates the values matching the rule execution's output that apply to this case\",\n        \"items\": {\n         \"type\": \"string\"\n        },\n        \"type\": \"array\"\n       },\n       \"next_route\": {\n        \"description\": \"NextRoute is the name of the next BackendOptions destination for the request in this case\",\n        \"type\": \"string\"\n       },\n       \"redirect_url\": {\n        \"description\": \"RedirectURL provides a URL to redirect the request in this case, rather than handing off to the NextRoute\",\n        \"type\": \"string\"\n       },\n       \"req_rewriter_name\": {\n        \"description\": \"ReqRewriterName is the name of a configured Rewriter that will modify the request in this case prior to handing off to the NextRoute\",\n        \"type\": \"string\"\n       }\n      },\n      \"type\": \"object\"\n     },\n     \"description\": \"RuleCaseOptions is the map of cases to apply to evaluate against this rule\",\n     \"type\": \"object\"\n    },\n    \"egress_req_rewriter_name\": {\n     \"description\": \"EgressReqRewriterName is the name of a configured Rewriter that will modify the request once all other rule actions have occurred, prior to the request being passed to the next route\",\n     \"type\": \"string\"\n    },\n    \"ingress_req_rewriter_name\": {\n     \"description\": \"IngressReqRewriterName is the name of a configured Rewriter that will modify the request prior to the rule taking any other action\",\n     \"type\": \"string\"\n    },\n    \"input_delimiter\": {\n     \"description\": \"InputDelimiter is optional, defaulting to \\\" \\\", and indicates the delimiter for separating the Input into parts. This value has no effect unless InputIndex \\u003e= 0\",\n     \"type\": \"string\"\n    },\n    \"input_encoding\": {\n     \"description\": \"InputEncoding is optional, defaulting to '', and defines any special encoding format on the input. Supported Options are: 'base64'\",\n     \"type\": \"string\"\n    },\n    \"input_index\": {\n     \"description\": \"InputIndex is optional, defaulting to -1 (no parts / use full string), and indicates which part of the Input contains the specific value to which this rule applies. InputIndex is zero-based.\",\n     \"type\": \"integer\"\n    },\n    \"input_key\": {\n     \"description\": \"InputKey is optional and provides extra information for locating the data source when the InputSource is header or param, the input key must be the target header or param name\",\n     \"type\": \"string\"\n    },\n    \"input_source\": {\n     \"description\": \"Input source specifies the data source used when executing the rule. Possible options: Source           Example Source Used url              https://example.com:8480/path1/path2?param1=value url_no_params    https://example.com:8480/path1/path2 scheme           https host             example.com:8480 hostname         example.com port             8480 (80 and 443 are auto-set based on scheme when no port is provided) path             /path1/path2 params           ?param1=value param            [must be used with InputKey as described below] header           [must be used with InputKey as described below]\",\n     \"type\": \"string\"\n    },\n    \"input_type\": {\n     \"description\": \"InputType is optional, defaulting to string, and indicates the type of input: string, num (treated internally as float64), or bool\",\n     \"type\": \"string\"\n    },\n    \"max_rule_executions\": {\n     \"description\": \"MaxRuleExecutions limits the maximum number of per-Request rule-based hops so as to avoid execution loops.\",\n     \"type\": \"integer\"\n    },\n    \"next_route\": {\n     \"description\": \"NextRoute indicates the name of the next BackendOptions destination for the request when none of the cases are met following the execution of the rule\",\n     \"type\": \"string\"\n    },\n    \"nomatch_req_rewriter_name\": {\n     \"description\": \"NoMatchReqRewriterName is the name of a configured Rewriter that will modify the request once all other rule actions have occurred, and only if the Request did not match any defined case, prior to the request being passed to the next route\",\n     \"type\": \"string\"\n    },\n    \"operation\": {\n     \"description\": \"Operation specifies what action to take on the input, whose result is used to determine if any case is matched. Possible options are as follows. string:   eq, contains, suffix, prefix, md5, sha1, base64, modulo num:      eq, gt, lt, ge, le, bt (inclusive), modulo bool:     eq any boolean operation (everything but md5, sha1, base64, modulo) can be prefixed with !\",\n     \"type\": \"string\"\n    },\n    \"operation_arg\": {\n     \"description\": \"OperationArg is optional and provides extra information used when performing the configured Operation, such as the demonimator when the operation is modulus\",\n     \"type\": \"string\"\n    },\n    \"redirect_url\": {\n     \"description\": \"RedirectURL provides a URL to redirect the request in the default case, rather than handing off to the NextRoute\",\n     \"type\": \"string\"\n    }\n   },\n   \"type\": \"object\"\n  }\n },\n \"title\": \"Trickster Rule\",\n \"type\": \"object\"\n}"}