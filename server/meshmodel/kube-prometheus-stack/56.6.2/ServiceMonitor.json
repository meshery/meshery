{
  "id": "00000000-0000-0000-0000-000000000000",
  "kind": "ServiceMonitor",
  "apiVersion": "monitoring.coreos.com/v1",
  "displayName": "Service Monitor",
  "format": "JSON",
  "hostID": "00000000-0000-0000-0000-000000000000",
  "metadata": {
   "isNamespaced": true
  },
  "model": {
   "id": "00000000-0000-0000-0000-000000000000",
   "name": "kube-prometheus-stack",
   "version": "56.6.2",
   "displayName": "kube-prometheus-stack",
   "hostID": "00000000-0000-0000-0000-000000000000",
   "category": {
    "name": "",
    "metadata": null
   },
   "metadata": {
    "source_uri": "https://github.com/prometheus-community/helm-charts/releases/download/kube-prometheus-stack-56.6.2/kube-prometheus-stack-56.6.2.tgz"
   },
   "components": null,
   "relationships": null
  },
  "schema": "{\n \"description\": \"ServiceMonitor defines monitoring for a set of services.\",\n \"properties\": {\n  \"spec\": {\n   \"description\": \"Specification of desired Service selection for target discovery by Prometheus.\",\n   \"properties\": {\n    \"attachMetadata\": {\n     \"description\": \"`attachMetadata` defines additional metadata which is added to the discovered targets. \\n It requires Prometheus \\u003e= v2.37.0.\",\n     \"properties\": {\n      \"node\": {\n       \"description\": \"When set to true, Prometheus must have the `get` permission on the `Nodes` objects.\",\n       \"type\": \"boolean\"\n      }\n     },\n     \"type\": \"object\"\n    },\n    \"endpoints\": {\n     \"description\": \"List of endpoints part of this ServiceMonitor.\",\n     \"items\": {\n      \"description\": \"Endpoint defines an endpoint serving Prometheus metrics to be scraped by Prometheus.\",\n      \"properties\": {\n       \"authorization\": {\n        \"description\": \"`authorization` configures the Authorization header credentials to use when scraping the target. \\n Cannot be set at the same time as `basicAuth`, or `oauth2`.\",\n        \"properties\": {\n         \"credentials\": {\n          \"description\": \"Selects a key of a Secret in the namespace that contains the credentials for authentication.\",\n          \"properties\": {\n           \"key\": {\n            \"description\": \"The key of the secret to select from.  Must be a valid secret key.\",\n            \"type\": \"string\"\n           },\n           \"name\": {\n            \"description\": \"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?\",\n            \"type\": \"string\"\n           },\n           \"optional\": {\n            \"description\": \"Specify whether the Secret or its key must be defined\",\n            \"type\": \"boolean\"\n           }\n          },\n          \"required\": [\n           \"key\"\n          ],\n          \"type\": \"object\",\n          \"x-kubernetes-map-type\": \"atomic\"\n         },\n         \"type\": {\n          \"description\": \"Defines the authentication type. The value is case-insensitive. \\n \\\"Basic\\\" is not a supported value. \\n Default: \\\"Bearer\\\"\",\n          \"type\": \"string\"\n         }\n        },\n        \"type\": \"object\"\n       },\n       \"basicAuth\": {\n        \"description\": \"`basicAuth` configures the Basic Authentication credentials to use when scraping the target. \\n Cannot be set at the same time as `authorization`, or `oauth2`.\",\n        \"properties\": {\n         \"password\": {\n          \"description\": \"`password` specifies a key of a Secret containing the password for authentication.\",\n          \"properties\": {\n           \"key\": {\n            \"description\": \"The key of the secret to select from.  Must be a valid secret key.\",\n            \"type\": \"string\"\n           },\n           \"name\": {\n            \"description\": \"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?\",\n            \"type\": \"string\"\n           },\n           \"optional\": {\n            \"description\": \"Specify whether the Secret or its key must be defined\",\n            \"type\": \"boolean\"\n           }\n          },\n          \"required\": [\n           \"key\"\n          ],\n          \"type\": \"object\",\n          \"x-kubernetes-map-type\": \"atomic\"\n         },\n         \"username\": {\n          \"description\": \"`username` specifies a key of a Secret containing the username for authentication.\",\n          \"properties\": {\n           \"key\": {\n            \"description\": \"The key of the secret to select from.  Must be a valid secret key.\",\n            \"type\": \"string\"\n           },\n           \"name\": {\n            \"description\": \"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?\",\n            \"type\": \"string\"\n           },\n           \"optional\": {\n            \"description\": \"Specify whether the Secret or its key must be defined\",\n            \"type\": \"boolean\"\n           }\n          },\n          \"required\": [\n           \"key\"\n          ],\n          \"type\": \"object\",\n          \"x-kubernetes-map-type\": \"atomic\"\n         }\n        },\n        \"type\": \"object\"\n       },\n       \"bearerTokenFile\": {\n        \"description\": \"File to read bearer token for scraping the target. \\n Deprecated: use `authorization` instead.\",\n        \"type\": \"string\"\n       },\n       \"bearerTokenSecret\": {\n        \"description\": \"`bearerTokenSecret` specifies a key of a Secret containing the bearer token for scraping targets. The secret needs to be in the same namespace as the ServiceMonitor object and readable by the Prometheus Operator. \\n Deprecated: use `authorization` instead.\",\n        \"properties\": {\n         \"key\": {\n          \"description\": \"The key of the secret to select from.  Must be a valid secret key.\",\n          \"type\": \"string\"\n         },\n         \"name\": {\n          \"description\": \"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?\",\n          \"type\": \"string\"\n         },\n         \"optional\": {\n          \"description\": \"Specify whether the Secret or its key must be defined\",\n          \"type\": \"boolean\"\n         }\n        },\n        \"required\": [\n         \"key\"\n        ],\n        \"type\": \"object\",\n        \"x-kubernetes-map-type\": \"atomic\"\n       },\n       \"enableHttp2\": {\n        \"description\": \"`enableHttp2` can be used to disable HTTP2 when scraping the target.\",\n        \"type\": \"boolean\"\n       },\n       \"filterRunning\": {\n        \"description\": \"When true, the pods which are not running (e.g. either in Failed or Succeeded state) are dropped during the target discovery. \\n If unset, the filtering is enabled. \\n More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/#pod-phase\",\n        \"type\": \"boolean\"\n       },\n       \"followRedirects\": {\n        \"description\": \"`followRedirects` defines whether the scrape requests should follow HTTP 3xx redirects.\",\n        \"type\": \"boolean\"\n       },\n       \"honorLabels\": {\n        \"description\": \"When true, `honorLabels` preserves the metric's labels when they collide with the target's labels.\",\n        \"type\": \"boolean\"\n       },\n       \"honorTimestamps\": {\n        \"description\": \"`honorTimestamps` controls whether Prometheus preserves the timestamps when exposed by the target.\",\n        \"type\": \"boolean\"\n       },\n       \"interval\": {\n        \"description\": \"Interval at which Prometheus scrapes the metrics from the target. \\n If empty, Prometheus uses the global scrape interval.\",\n        \"pattern\": \"^(0|(([0-9]+)y)?(([0-9]+)w)?(([0-9]+)d)?(([0-9]+)h)?(([0-9]+)m)?(([0-9]+)s)?(([0-9]+)ms)?)$\",\n        \"type\": \"string\"\n       },\n       \"metricRelabelings\": {\n        \"description\": \"`metricRelabelings` configures the relabeling rules to apply to the samples before ingestion.\",\n        \"items\": {\n         \"description\": \"RelabelConfig allows dynamic rewriting of the label set for targets, alerts, scraped samples and remote write samples. \\n More info: https://prometheus.io/docs/prometheus/latest/configuration/configuration/#relabel_config\",\n         \"properties\": {\n          \"action\": {\n           \"default\": \"replace\",\n           \"description\": \"Action to perform based on the regex matching. \\n `Uppercase` and `Lowercase` actions require Prometheus \\u003e= v2.36.0. `DropEqual` and `KeepEqual` actions require Prometheus \\u003e= v2.41.0. \\n Default: \\\"Replace\\\"\",\n           \"enum\": [\n            \"replace\",\n            \"Replace\",\n            \"keep\",\n            \"Keep\",\n            \"drop\",\n            \"Drop\",\n            \"hashmod\",\n            \"HashMod\",\n            \"labelmap\",\n            \"LabelMap\",\n            \"labeldrop\",\n            \"LabelDrop\",\n            \"labelkeep\",\n            \"LabelKeep\",\n            \"lowercase\",\n            \"Lowercase\",\n            \"uppercase\",\n            \"Uppercase\",\n            \"keepequal\",\n            \"KeepEqual\",\n            \"dropequal\",\n            \"DropEqual\"\n           ],\n           \"type\": \"string\"\n          },\n          \"modulus\": {\n           \"description\": \"Modulus to take of the hash of the source label values. \\n Only applicable when the action is `HashMod`.\",\n           \"format\": \"int64\",\n           \"type\": \"integer\"\n          },\n          \"regex\": {\n           \"description\": \"Regular expression against which the extracted value is matched.\",\n           \"type\": \"string\"\n          },\n          \"replacement\": {\n           \"description\": \"Replacement value against which a Replace action is performed if the regular expression matches. \\n Regex capture groups are available.\",\n           \"type\": \"string\"\n          },\n          \"separator\": {\n           \"description\": \"Separator is the string between concatenated SourceLabels.\",\n           \"type\": \"string\"\n          },\n          \"sourceLabels\": {\n           \"description\": \"The source labels select values from existing labels. Their content is concatenated using the configured Separator and matched against the configured regular expression.\",\n           \"items\": {\n            \"description\": \"LabelName is a valid Prometheus label name which may only contain ASCII letters, numbers, as well as underscores.\",\n            \"pattern\": \"^[a-zA-Z_][a-zA-Z0-9_]*$\",\n            \"type\": \"string\"\n           },\n           \"type\": \"array\"\n          },\n          \"targetLabel\": {\n           \"description\": \"Label to which the resulting string is written in a replacement. \\n It is mandatory for `Replace`, `HashMod`, `Lowercase`, `Uppercase`, `KeepEqual` and `DropEqual` actions. \\n Regex capture groups are available.\",\n           \"type\": \"string\"\n          }\n         },\n         \"type\": \"object\"\n        },\n        \"type\": \"array\"\n       },\n       \"oauth2\": {\n        \"description\": \"`oauth2` configures the OAuth2 settings to use when scraping the target. \\n It requires Prometheus \\u003e= 2.27.0. \\n Cannot be set at the same time as `authorization`, or `basicAuth`.\",\n        \"properties\": {\n         \"clientId\": {\n          \"description\": \"`clientId` specifies a key of a Secret or ConfigMap containing the OAuth2 client's ID.\",\n          \"properties\": {\n           \"configMap\": {\n            \"description\": \"ConfigMap containing data to use for the targets.\",\n            \"properties\": {\n             \"key\": {\n              \"description\": \"The key to select.\",\n              \"type\": \"string\"\n             },\n             \"name\": {\n              \"description\": \"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?\",\n              \"type\": \"string\"\n             },\n             \"optional\": {\n              \"description\": \"Specify whether the ConfigMap or its key must be defined\",\n              \"type\": \"boolean\"\n             }\n            },\n            \"required\": [\n             \"key\"\n            ],\n            \"type\": \"object\",\n            \"x-kubernetes-map-type\": \"atomic\"\n           },\n           \"secret\": {\n            \"description\": \"Secret containing data to use for the targets.\",\n            \"properties\": {\n             \"key\": {\n              \"description\": \"The key of the secret to select from.  Must be a valid secret key.\",\n              \"type\": \"string\"\n             },\n             \"name\": {\n              \"description\": \"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?\",\n              \"type\": \"string\"\n             },\n             \"optional\": {\n              \"description\": \"Specify whether the Secret or its key must be defined\",\n              \"type\": \"boolean\"\n             }\n            },\n            \"required\": [\n             \"key\"\n            ],\n            \"type\": \"object\",\n            \"x-kubernetes-map-type\": \"atomic\"\n           }\n          },\n          \"type\": \"object\"\n         },\n         \"clientSecret\": {\n          \"description\": \"`clientSecret` specifies a key of a Secret containing the OAuth2 client's secret.\",\n          \"properties\": {\n           \"key\": {\n            \"description\": \"The key of the secret to select from.  Must be a valid secret key.\",\n            \"type\": \"string\"\n           },\n           \"name\": {\n            \"description\": \"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?\",\n            \"type\": \"string\"\n           },\n           \"optional\": {\n            \"description\": \"Specify whether the Secret or its key must be defined\",\n            \"type\": \"boolean\"\n           }\n          },\n          \"required\": [\n           \"key\"\n          ],\n          \"type\": \"object\",\n          \"x-kubernetes-map-type\": \"atomic\"\n         },\n         \"endpointParams\": {\n          \"additionalProperties\": {\n           \"type\": \"string\"\n          },\n          \"description\": \"`endpointParams` configures the HTTP parameters to append to the token URL.\",\n          \"type\": \"object\"\n         },\n         \"scopes\": {\n          \"description\": \"`scopes` defines the OAuth2 scopes used for the token request.\",\n          \"items\": {\n           \"type\": \"string\"\n          },\n          \"type\": \"array\"\n         },\n         \"tokenUrl\": {\n          \"description\": \"`tokenURL` configures the URL to fetch the token from.\",\n          \"minLength\": 1,\n          \"type\": \"string\"\n         }\n        },\n        \"required\": [\n         \"clientId\",\n         \"clientSecret\",\n         \"tokenUrl\"\n        ],\n        \"type\": \"object\"\n       },\n       \"params\": {\n        \"additionalProperties\": {\n         \"items\": {\n          \"type\": \"string\"\n         },\n         \"type\": \"array\"\n        },\n        \"description\": \"params define optional HTTP URL parameters.\",\n        \"type\": \"object\"\n       },\n       \"path\": {\n        \"description\": \"HTTP path from which to scrape for metrics. \\n If empty, Prometheus uses the default value (e.g. `/metrics`).\",\n        \"type\": \"string\"\n       },\n       \"port\": {\n        \"description\": \"Name of the Service port which this endpoint refers to. \\n It takes precedence over `targetPort`.\",\n        \"type\": \"string\"\n       },\n       \"proxyUrl\": {\n        \"description\": \"`proxyURL` configures the HTTP Proxy URL (e.g. \\\"http://proxyserver:2195\\\") to go through when scraping the target.\",\n        \"type\": \"string\"\n       },\n       \"relabelings\": {\n        \"description\": \"`relabelings` configures the relabeling rules to apply the target's metadata labels. \\n The Operator automatically adds relabelings for a few standard Kubernetes fields. \\n The original scrape job's name is available via the `__tmp_prometheus_job_name` label. \\n More info: https://prometheus.io/docs/prometheus/latest/configuration/configuration/#relabel_config\",\n        \"items\": {\n         \"description\": \"RelabelConfig allows dynamic rewriting of the label set for targets, alerts, scraped samples and remote write samples. \\n More info: https://prometheus.io/docs/prometheus/latest/configuration/configuration/#relabel_config\",\n         \"properties\": {\n          \"action\": {\n           \"default\": \"replace\",\n           \"description\": \"Action to perform based on the regex matching. \\n `Uppercase` and `Lowercase` actions require Prometheus \\u003e= v2.36.0. `DropEqual` and `KeepEqual` actions require Prometheus \\u003e= v2.41.0. \\n Default: \\\"Replace\\\"\",\n           \"enum\": [\n            \"replace\",\n            \"Replace\",\n            \"keep\",\n            \"Keep\",\n            \"drop\",\n            \"Drop\",\n            \"hashmod\",\n            \"HashMod\",\n            \"labelmap\",\n            \"LabelMap\",\n            \"labeldrop\",\n            \"LabelDrop\",\n            \"labelkeep\",\n            \"LabelKeep\",\n            \"lowercase\",\n            \"Lowercase\",\n            \"uppercase\",\n            \"Uppercase\",\n            \"keepequal\",\n            \"KeepEqual\",\n            \"dropequal\",\n            \"DropEqual\"\n           ],\n           \"type\": \"string\"\n          },\n          \"modulus\": {\n           \"description\": \"Modulus to take of the hash of the source label values. \\n Only applicable when the action is `HashMod`.\",\n           \"format\": \"int64\",\n           \"type\": \"integer\"\n          },\n          \"regex\": {\n           \"description\": \"Regular expression against which the extracted value is matched.\",\n           \"type\": \"string\"\n          },\n          \"replacement\": {\n           \"description\": \"Replacement value against which a Replace action is performed if the regular expression matches. \\n Regex capture groups are available.\",\n           \"type\": \"string\"\n          },\n          \"separator\": {\n           \"description\": \"Separator is the string between concatenated SourceLabels.\",\n           \"type\": \"string\"\n          },\n          \"sourceLabels\": {\n           \"description\": \"The source labels select values from existing labels. Their content is concatenated using the configured Separator and matched against the configured regular expression.\",\n           \"items\": {\n            \"description\": \"LabelName is a valid Prometheus label name which may only contain ASCII letters, numbers, as well as underscores.\",\n            \"pattern\": \"^[a-zA-Z_][a-zA-Z0-9_]*$\",\n            \"type\": \"string\"\n           },\n           \"type\": \"array\"\n          },\n          \"targetLabel\": {\n           \"description\": \"Label to which the resulting string is written in a replacement. \\n It is mandatory for `Replace`, `HashMod`, `Lowercase`, `Uppercase`, `KeepEqual` and `DropEqual` actions. \\n Regex capture groups are available.\",\n           \"type\": \"string\"\n          }\n         },\n         \"type\": \"object\"\n        },\n        \"type\": \"array\"\n       },\n       \"scheme\": {\n        \"description\": \"HTTP scheme to use for scraping. \\n `http` and `https` are the expected values unless you rewrite the `__scheme__` label via relabeling. \\n If empty, Prometheus uses the default value `http`.\",\n        \"enum\": [\n         \"http\",\n         \"https\"\n        ],\n        \"type\": \"string\"\n       },\n       \"scrapeTimeout\": {\n        \"description\": \"Timeout after which Prometheus considers the scrape to be failed. \\n If empty, Prometheus uses the global scrape timeout unless it is less than the target's scrape interval value in which the latter is used.\",\n        \"pattern\": \"^(0|(([0-9]+)y)?(([0-9]+)w)?(([0-9]+)d)?(([0-9]+)h)?(([0-9]+)m)?(([0-9]+)s)?(([0-9]+)ms)?)$\",\n        \"type\": \"string\"\n       },\n       \"targetPort\": {\n        \"anyOf\": [\n         {\n          \"type\": \"integer\"\n         },\n         {\n          \"type\": \"string\"\n         }\n        ],\n        \"description\": \"Name or number of the target port of the `Pod` object behind the Service, the port must be specified with container port property. \\n Deprecated: use `port` instead.\",\n        \"x-kubernetes-int-or-string\": true\n       },\n       \"tlsConfig\": {\n        \"description\": \"TLS configuration to use when scraping the target.\",\n        \"properties\": {\n         \"ca\": {\n          \"description\": \"Certificate authority used when verifying server certificates.\",\n          \"properties\": {\n           \"configMap\": {\n            \"description\": \"ConfigMap containing data to use for the targets.\",\n            \"properties\": {\n             \"key\": {\n              \"description\": \"The key to select.\",\n              \"type\": \"string\"\n             },\n             \"name\": {\n              \"description\": \"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?\",\n              \"type\": \"string\"\n             },\n             \"optional\": {\n              \"description\": \"Specify whether the ConfigMap or its key must be defined\",\n              \"type\": \"boolean\"\n             }\n            },\n            \"required\": [\n             \"key\"\n            ],\n            \"type\": \"object\",\n            \"x-kubernetes-map-type\": \"atomic\"\n           },\n           \"secret\": {\n            \"description\": \"Secret containing data to use for the targets.\",\n            \"properties\": {\n             \"key\": {\n              \"description\": \"The key of the secret to select from.  Must be a valid secret key.\",\n              \"type\": \"string\"\n             },\n             \"name\": {\n              \"description\": \"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?\",\n              \"type\": \"string\"\n             },\n             \"optional\": {\n              \"description\": \"Specify whether the Secret or its key must be defined\",\n              \"type\": \"boolean\"\n             }\n            },\n            \"required\": [\n             \"key\"\n            ],\n            \"type\": \"object\",\n            \"x-kubernetes-map-type\": \"atomic\"\n           }\n          },\n          \"type\": \"object\"\n         },\n         \"caFile\": {\n          \"description\": \"Path to the CA cert in the Prometheus container to use for the targets.\",\n          \"type\": \"string\"\n         },\n         \"cert\": {\n          \"description\": \"Client certificate to present when doing client-authentication.\",\n          \"properties\": {\n           \"configMap\": {\n            \"description\": \"ConfigMap containing data to use for the targets.\",\n            \"properties\": {\n             \"key\": {\n              \"description\": \"The key to select.\",\n              \"type\": \"string\"\n             },\n             \"name\": {\n              \"description\": \"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?\",\n              \"type\": \"string\"\n             },\n             \"optional\": {\n              \"description\": \"Specify whether the ConfigMap or its key must be defined\",\n              \"type\": \"boolean\"\n             }\n            },\n            \"required\": [\n             \"key\"\n            ],\n            \"type\": \"object\",\n            \"x-kubernetes-map-type\": \"atomic\"\n           },\n           \"secret\": {\n            \"description\": \"Secret containing data to use for the targets.\",\n            \"properties\": {\n             \"key\": {\n              \"description\": \"The key of the secret to select from.  Must be a valid secret key.\",\n              \"type\": \"string\"\n             },\n             \"name\": {\n              \"description\": \"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?\",\n              \"type\": \"string\"\n             },\n             \"optional\": {\n              \"description\": \"Specify whether the Secret or its key must be defined\",\n              \"type\": \"boolean\"\n             }\n            },\n            \"required\": [\n             \"key\"\n            ],\n            \"type\": \"object\",\n            \"x-kubernetes-map-type\": \"atomic\"\n           }\n          },\n          \"type\": \"object\"\n         },\n         \"certFile\": {\n          \"description\": \"Path to the client cert file in the Prometheus container for the targets.\",\n          \"type\": \"string\"\n         },\n         \"insecureSkipVerify\": {\n          \"description\": \"Disable target certificate validation.\",\n          \"type\": \"boolean\"\n         },\n         \"keyFile\": {\n          \"description\": \"Path to the client key file in the Prometheus container for the targets.\",\n          \"type\": \"string\"\n         },\n         \"keySecret\": {\n          \"description\": \"Secret containing the client key file for the targets.\",\n          \"properties\": {\n           \"key\": {\n            \"description\": \"The key of the secret to select from.  Must be a valid secret key.\",\n            \"type\": \"string\"\n           },\n           \"name\": {\n            \"description\": \"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?\",\n            \"type\": \"string\"\n           },\n           \"optional\": {\n            \"description\": \"Specify whether the Secret or its key must be defined\",\n            \"type\": \"boolean\"\n           }\n          },\n          \"required\": [\n           \"key\"\n          ],\n          \"type\": \"object\",\n          \"x-kubernetes-map-type\": \"atomic\"\n         },\n         \"serverName\": {\n          \"description\": \"Used to verify the hostname for the targets.\",\n          \"type\": \"string\"\n         }\n        },\n        \"type\": \"object\"\n       },\n       \"trackTimestampsStaleness\": {\n        \"description\": \"`trackTimestampsStaleness` defines whether Prometheus tracks staleness of the metrics that have an explicit timestamp present in scraped data. Has no effect if `honorTimestamps` is false. \\n It requires Prometheus \\u003e= v2.48.0.\",\n        \"type\": \"boolean\"\n       }\n      },\n      \"type\": \"object\"\n     },\n     \"type\": \"array\"\n    },\n    \"jobLabel\": {\n     \"description\": \"`jobLabel` selects the label from the associated Kubernetes `Service` object which will be used as the `job` label for all metrics. \\n For example if `jobLabel` is set to `foo` and the Kubernetes `Service` object is labeled with `foo: bar`, then Prometheus adds the `job=\\\"bar\\\"` label to all ingested metrics. \\n If the value of this field is empty or if the label doesn't exist for the given Service, the `job` label of the metrics defaults to the name of the associated Kubernetes `Service`.\",\n     \"type\": \"string\"\n    },\n    \"keepDroppedTargets\": {\n     \"description\": \"Per-scrape limit on the number of targets dropped by relabeling that will be kept in memory. 0 means no limit. \\n It requires Prometheus \\u003e= v2.47.0.\",\n     \"format\": \"int64\",\n     \"type\": \"integer\"\n    },\n    \"labelLimit\": {\n     \"description\": \"Per-scrape limit on number of labels that will be accepted for a sample. \\n It requires Prometheus \\u003e= v2.27.0.\",\n     \"format\": \"int64\",\n     \"type\": \"integer\"\n    },\n    \"labelNameLengthLimit\": {\n     \"description\": \"Per-scrape limit on length of labels name that will be accepted for a sample. \\n It requires Prometheus \\u003e= v2.27.0.\",\n     \"format\": \"int64\",\n     \"type\": \"integer\"\n    },\n    \"labelValueLengthLimit\": {\n     \"description\": \"Per-scrape limit on length of labels value that will be accepted for a sample. \\n It requires Prometheus \\u003e= v2.27.0.\",\n     \"format\": \"int64\",\n     \"type\": \"integer\"\n    },\n    \"namespaceSelector\": {\n     \"description\": \"Selector to select which namespaces the Kubernetes `Endpoints` objects are discovered from.\",\n     \"properties\": {\n      \"any\": {\n       \"description\": \"Boolean describing whether all namespaces are selected in contrast to a list restricting them.\",\n       \"type\": \"boolean\"\n      },\n      \"matchNames\": {\n       \"description\": \"List of namespace names to select from.\",\n       \"items\": {\n        \"type\": \"string\"\n       },\n       \"type\": \"array\"\n      }\n     },\n     \"type\": \"object\"\n    },\n    \"podTargetLabels\": {\n     \"description\": \"`podTargetLabels` defines the labels which are transferred from the associated Kubernetes `Pod` object onto the ingested metrics.\",\n     \"items\": {\n      \"type\": \"string\"\n     },\n     \"type\": \"array\"\n    },\n    \"sampleLimit\": {\n     \"description\": \"`sampleLimit` defines a per-scrape limit on the number of scraped samples that will be accepted.\",\n     \"format\": \"int64\",\n     \"type\": \"integer\"\n    },\n    \"selector\": {\n     \"description\": \"Label selector to select the Kubernetes `Endpoints` objects.\",\n     \"properties\": {\n      \"matchExpressions\": {\n       \"description\": \"matchExpressions is a list of label selector requirements. The requirements are ANDed.\",\n       \"items\": {\n        \"description\": \"A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.\",\n        \"properties\": {\n         \"key\": {\n          \"description\": \"key is the label key that the selector applies to.\",\n          \"type\": \"string\"\n         },\n         \"operator\": {\n          \"description\": \"operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.\",\n          \"type\": \"string\"\n         },\n         \"values\": {\n          \"description\": \"values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.\",\n          \"items\": {\n           \"type\": \"string\"\n          },\n          \"type\": \"array\"\n         }\n        },\n        \"required\": [\n         \"key\",\n         \"operator\"\n        ],\n        \"type\": \"object\"\n       },\n       \"type\": \"array\"\n      },\n      \"matchLabels\": {\n       \"additionalProperties\": {\n        \"type\": \"string\"\n       },\n       \"description\": \"matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \\\"key\\\", the operator is \\\"In\\\", and the values array contains only \\\"value\\\". The requirements are ANDed.\",\n       \"type\": \"object\"\n      }\n     },\n     \"type\": \"object\",\n     \"x-kubernetes-map-type\": \"atomic\"\n    },\n    \"targetLabels\": {\n     \"description\": \"`targetLabels` defines the labels which are transferred from the associated Kubernetes `Service` object onto the ingested metrics.\",\n     \"items\": {\n      \"type\": \"string\"\n     },\n     \"type\": \"array\"\n    },\n    \"targetLimit\": {\n     \"description\": \"`targetLimit` defines a limit on the number of scraped targets that will be accepted.\",\n     \"format\": \"int64\",\n     \"type\": \"integer\"\n    }\n   },\n   \"required\": [\n    \"selector\"\n   ],\n   \"type\": \"object\"\n  }\n },\n \"required\": [\n  \"spec\"\n ],\n \"title\": \"Service Monitor\",\n \"type\": \"object\"\n}"
 }