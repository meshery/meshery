{
  "id": "00000000-0000-0000-0000-000000000000",
  "kind": "ScalingPolicy",
  "apiVersion": "applicationautoscaling.services.k8s.aws/v1alpha1",
  "displayName": "Scaling Policy",
  "format": "JSON",
  "hostID": "00000000-0000-0000-0000-000000000000",
  "metadata": {
   "isNamespaced": true
  },
  "model": {
   "id": "00000000-0000-0000-0000-000000000000",
   "name": "aws-applicationautoscaling-controller",
   "version": "v1.0.10",
   "displayName": "aws-applicationautoscaling-controller",
   "hostID": "00000000-0000-0000-0000-000000000000",
   "category": {
    "name": "",
    "metadata": null
   },
   "metadata": {
    "source_uri": "git://github.com/aws-controllers-k8s/applicationautoscaling-controller/main/helm"
   },
   "components": null,
   "relationships": null
  },
  "schema": "{\n \"description\": \"ScalingPolicy is the Schema for the ScalingPolicies API\",\n \"properties\": {\n  \"spec\": {\n   \"description\": \"ScalingPolicySpec defines the desired state of ScalingPolicy.\\n\\n\\nRepresents a scaling policy to use with Application Auto Scaling.\\n\\n\\nFor more information about configuring scaling policies for a specific service,\\nsee Getting started with Application Auto Scaling (https://docs.aws.amazon.com/autoscaling/application/userguide/getting-started.html)\\nin the Application Auto Scaling User Guide.\",\n   \"properties\": {\n    \"policyName\": {\n     \"description\": \"The name of the scaling policy.\",\n     \"type\": \"string\"\n    },\n    \"policyType\": {\n     \"description\": \"The policy type. This parameter is required if you are creating a scaling\\npolicy.\\n\\n\\nThe following policy types are supported:\\n\\n\\n# TargetTrackingScaling—Not supported for Amazon EMR\\n\\n\\nStepScaling—Not supported for DynamoDB, Amazon Comprehend, Lambda, Amazon\\nKeyspaces, Amazon MSK, Amazon ElastiCache, or Neptune.\\n\\n\\nFor more information, see Target tracking scaling policies (https://docs.aws.amazon.com/autoscaling/application/userguide/application-auto-scaling-target-tracking.html)\\nand Step scaling policies (https://docs.aws.amazon.com/autoscaling/application/userguide/application-auto-scaling-step-scaling-policies.html)\\nin the Application Auto Scaling User Guide.\",\n     \"type\": \"string\"\n    },\n    \"resourceID\": {\n     \"description\": \"The identifier of the resource associated with the scaling policy. This string\\nconsists of the resource type and unique identifier.\\n\\n\\n  - ECS service - The resource type is service and the unique identifier\\n    is the cluster name and service name. Example: service/default/sample-webapp.\\n\\n\\n  - Spot Fleet - The resource type is spot-fleet-request and the unique\\n    identifier is the Spot Fleet request ID. Example: spot-fleet-request/sfr-73fbd2ce-aa30-494c-8788-1cee4EXAMPLE.\\n\\n\\n  - EMR cluster - The resource type is instancegroup and the unique identifier\\n    is the cluster ID and instance group ID. Example: instancegroup/j-2EEZNYKUA1NTV/ig-1791Y4E1L8YI0.\\n\\n\\n  - AppStream 2.0 fleet - The resource type is fleet and the unique identifier\\n    is the fleet name. Example: fleet/sample-fleet.\\n\\n\\n  - DynamoDB table - The resource type is table and the unique identifier\\n    is the table name. Example: table/my-table.\\n\\n\\n  - DynamoDB global secondary index - The resource type is index and the\\n    unique identifier is the index name. Example: table/my-table/index/my-table-index.\\n\\n\\n  - Aurora DB cluster - The resource type is cluster and the unique identifier\\n    is the cluster name. Example: cluster:my-db-cluster.\\n\\n\\n  - SageMaker endpoint variant - The resource type is variant and the unique\\n    identifier is the resource ID. Example: endpoint/my-end-point/variant/KMeansClustering.\\n\\n\\n  - Custom resources are not supported with a resource type. This parameter\\n    must specify the OutputValue from the CloudFormation template stack used\\n    to access the resources. The unique identifier is defined by the service\\n    provider. More information is available in our GitHub repository (https://github.com/aws/aws-auto-scaling-custom-resource).\\n\\n\\n  - Amazon Comprehend document classification endpoint - The resource type\\n    and unique identifier are specified using the endpoint ARN. Example: arn:aws:comprehend:us-west-2:123456789012:document-classifier-endpoint/EXAMPLE.\\n\\n\\n  - Amazon Comprehend entity recognizer endpoint - The resource type and\\n    unique identifier are specified using the endpoint ARN. Example: arn:aws:comprehend:us-west-2:123456789012:entity-recognizer-endpoint/EXAMPLE.\\n\\n\\n  - Lambda provisioned concurrency - The resource type is function and the\\n    unique identifier is the function name with a function version or alias\\n    name suffix that is not $LATEST. Example: function:my-function:prod or\\n    function:my-function:1.\\n\\n\\n  - Amazon Keyspaces table - The resource type is table and the unique identifier\\n    is the table name. Example: keyspace/mykeyspace/table/mytable.\\n\\n\\n  - Amazon MSK cluster - The resource type and unique identifier are specified\\n    using the cluster ARN. Example: arn:aws:kafka:us-east-1:123456789012:cluster/demo-cluster-1/6357e0b2-0e6a-4b86-a0b4-70df934c2e31-5.\\n\\n\\n  - Amazon ElastiCache replication group - The resource type is replication-group\\n    and the unique identifier is the replication group name. Example: replication-group/mycluster.\\n\\n\\n  - Neptune cluster - The resource type is cluster and the unique identifier\\n    is the cluster name. Example: cluster:mycluster.\",\n     \"type\": \"string\"\n    },\n    \"scalableDimension\": {\n     \"description\": \"The scalable dimension. This string consists of the service namespace, resource\\ntype, and scaling property.\\n\\n\\n  - ecs:service:DesiredCount - The desired task count of an ECS service.\\n\\n\\n  - elasticmapreduce:instancegroup:InstanceCount - The instance count of\\n    an EMR Instance Group.\\n\\n\\n  - ec2:spot-fleet-request:TargetCapacity - The target capacity of a Spot\\n    Fleet.\\n\\n\\n  - appstream:fleet:DesiredCapacity - The desired capacity of an AppStream\\n    2.0 fleet.\\n\\n\\n  - dynamodb:table:ReadCapacityUnits - The provisioned read capacity for\\n    a DynamoDB table.\\n\\n\\n  - dynamodb:table:WriteCapacityUnits - The provisioned write capacity for\\n    a DynamoDB table.\\n\\n\\n  - dynamodb:index:ReadCapacityUnits - The provisioned read capacity for\\n    a DynamoDB global secondary index.\\n\\n\\n  - dynamodb:index:WriteCapacityUnits - The provisioned write capacity for\\n    a DynamoDB global secondary index.\\n\\n\\n  - rds:cluster:ReadReplicaCount - The count of Aurora Replicas in an Aurora\\n    DB cluster. Available for Aurora MySQL-compatible edition and Aurora PostgreSQL-compatible\\n    edition.\\n\\n\\n  - sagemaker:variant:DesiredInstanceCount - The number of EC2 instances\\n    for an SageMaker model endpoint variant.\\n\\n\\n  - custom-resource:ResourceType:Property - The scalable dimension for a\\n    custom resource provided by your own application or service.\\n\\n\\n  - comprehend:document-classifier-endpoint:DesiredInferenceUnits - The\\n    number of inference units for an Amazon Comprehend document classification\\n    endpoint.\\n\\n\\n  - comprehend:entity-recognizer-endpoint:DesiredInferenceUnits - The number\\n    of inference units for an Amazon Comprehend entity recognizer endpoint.\\n\\n\\n  - lambda:function:ProvisionedConcurrency - The provisioned concurrency\\n    for a Lambda function.\\n\\n\\n  - cassandra:table:ReadCapacityUnits - The provisioned read capacity for\\n    an Amazon Keyspaces table.\\n\\n\\n  - cassandra:table:WriteCapacityUnits - The provisioned write capacity\\n    for an Amazon Keyspaces table.\\n\\n\\n  - kafka:broker-storage:VolumeSize - The provisioned volume size (in GiB)\\n    for brokers in an Amazon MSK cluster.\\n\\n\\n  - elasticache:replication-group:NodeGroups - The number of node groups\\n    for an Amazon ElastiCache replication group.\\n\\n\\n  - elasticache:replication-group:Replicas - The number of replicas per\\n    node group for an Amazon ElastiCache replication group.\\n\\n\\n  - neptune:cluster:ReadReplicaCount - The count of read replicas in an\\n    Amazon Neptune DB cluster.\",\n     \"type\": \"string\"\n    },\n    \"serviceNamespace\": {\n     \"description\": \"The namespace of the Amazon Web Services service that provides the resource.\\nFor a resource provided by your own application or service, use custom-resource\\ninstead.\",\n     \"type\": \"string\"\n    },\n    \"stepScalingPolicyConfiguration\": {\n     \"description\": \"A step scaling policy.\\n\\n\\nThis parameter is required if you are creating a policy and the policy type\\nis StepScaling.\",\n     \"properties\": {\n      \"adjustmentType\": {\n       \"type\": \"string\"\n      },\n      \"cooldown\": {\n       \"format\": \"int64\",\n       \"type\": \"integer\"\n      },\n      \"metricAggregationType\": {\n       \"type\": \"string\"\n      },\n      \"minAdjustmentMagnitude\": {\n       \"format\": \"int64\",\n       \"type\": \"integer\"\n      },\n      \"stepAdjustments\": {\n       \"items\": {\n        \"description\": \"Represents a step adjustment for a StepScalingPolicyConfiguration (https://docs.aws.amazon.com/autoscaling/application/APIReference/API_StepScalingPolicyConfiguration.html).\\nDescribes an adjustment based on the difference between the value of the\\naggregated CloudWatch metric and the breach threshold that you've defined\\nfor the alarm.\\n\\n\\nFor the following examples, suppose that you have an alarm with a breach\\nthreshold of 50:\\n\\n\\n  - To trigger the adjustment when the metric is greater than or equal to\\n    50 and less than 60, specify a lower bound of 0 and an upper bound of\\n    10.\\n\\n\\n  - To trigger the adjustment when the metric is greater than 40 and less\\n    than or equal to 50, specify a lower bound of -10 and an upper bound of\\n    0.\\n\\n\\nThere are a few rules for the step adjustments for your step policy:\\n\\n\\n  - The ranges of your step adjustments can't overlap or have a gap.\\n\\n\\n  - At most one step adjustment can have a null lower bound. If one step\\n    adjustment has a negative lower bound, then there must be a step adjustment\\n    with a null lower bound.\\n\\n\\n  - At most one step adjustment can have a null upper bound. If one step\\n    adjustment has a positive upper bound, then there must be a step adjustment\\n    with a null upper bound.\\n\\n\\n  - The upper and lower bound can't be null in the same step adjustment.\",\n        \"properties\": {\n         \"metricIntervalLowerBound\": {\n          \"type\": \"number\"\n         },\n         \"metricIntervalUpperBound\": {\n          \"type\": \"number\"\n         },\n         \"scalingAdjustment\": {\n          \"format\": \"int64\",\n          \"type\": \"integer\"\n         }\n        },\n        \"type\": \"object\"\n       },\n       \"type\": \"array\"\n      }\n     },\n     \"type\": \"object\"\n    },\n    \"targetTrackingScalingPolicyConfiguration\": {\n     \"description\": \"A target tracking scaling policy. Includes support for predefined or customized\\nmetrics.\\n\\n\\nThis parameter is required if you are creating a policy and the policy type\\nis TargetTrackingScaling.\",\n     \"properties\": {\n      \"customizedMetricSpecification\": {\n       \"description\": \"Represents a CloudWatch metric of your choosing for a target tracking scaling\\npolicy to use with Application Auto Scaling.\\n\\n\\nFor information about the available metrics for a service, see Amazon Web\\nServices Services That Publish CloudWatch Metrics (https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/aws-services-cloudwatch-metrics.html)\\nin the Amazon CloudWatch User Guide.\\n\\n\\nTo create your customized metric specification:\\n\\n\\n   * Add values for each required parameter from CloudWatch. You can use\\n   an existing metric, or a new metric that you create. To use your own metric,\\n   you must first publish the metric to CloudWatch. For more information,\\n   see Publish Custom Metrics (https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/publishingMetrics.html)\\n   in the Amazon CloudWatch User Guide.\\n\\n\\n   * Choose a metric that changes proportionally with capacity. The value\\n   of the metric should increase or decrease in inverse proportion to the\\n   number of capacity units. That is, the value of the metric should decrease\\n   when capacity increases, and increase when capacity decreases.\\n\\n\\nFor more information about CloudWatch, see Amazon CloudWatch Concepts (https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/cloudwatch_concepts.html).\",\n       \"properties\": {\n        \"dimensions\": {\n         \"items\": {\n          \"description\": \"Describes the dimension names and values associated with a metric.\",\n          \"properties\": {\n           \"name\": {\n            \"type\": \"string\"\n           },\n           \"value\": {\n            \"type\": \"string\"\n           }\n          },\n          \"type\": \"object\"\n         },\n         \"type\": \"array\"\n        },\n        \"metricName\": {\n         \"type\": \"string\"\n        },\n        \"namespace\": {\n         \"type\": \"string\"\n        },\n        \"statistic\": {\n         \"type\": \"string\"\n        },\n        \"unit\": {\n         \"type\": \"string\"\n        }\n       },\n       \"type\": \"object\"\n      },\n      \"disableScaleIn\": {\n       \"type\": \"boolean\"\n      },\n      \"predefinedMetricSpecification\": {\n       \"description\": \"Represents a predefined metric for a target tracking scaling policy to use\\nwith Application Auto Scaling.\\n\\n\\nOnly the Amazon Web Services that you're using send metrics to Amazon CloudWatch.\\nTo determine whether a desired metric already exists by looking up its namespace\\nand dimension using the CloudWatch metrics dashboard in the console, follow\\nthe procedure in Building dashboards with CloudWatch (https://docs.aws.amazon.com/autoscaling/application/userguide/monitoring-cloudwatch.html)\\nin the Application Auto Scaling User Guide.\",\n       \"properties\": {\n        \"predefinedMetricType\": {\n         \"type\": \"string\"\n        },\n        \"resourceLabel\": {\n         \"type\": \"string\"\n        }\n       },\n       \"type\": \"object\"\n      },\n      \"scaleInCooldown\": {\n       \"format\": \"int64\",\n       \"type\": \"integer\"\n      },\n      \"scaleOutCooldown\": {\n       \"format\": \"int64\",\n       \"type\": \"integer\"\n      },\n      \"targetValue\": {\n       \"type\": \"number\"\n      }\n     },\n     \"type\": \"object\"\n    }\n   },\n   \"required\": [\n    \"policyName\",\n    \"resourceID\",\n    \"scalableDimension\",\n    \"serviceNamespace\"\n   ],\n   \"type\": \"object\"\n  }\n },\n \"title\": \"Scaling Policy\",\n \"type\": \"object\"\n}"
 }