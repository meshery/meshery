{
  "id": "00000000-0000-0000-0000-000000000000",
  "kind": "MeshLoadBalancingStrategy",
  "apiVersion": "kuma.io/v1alpha1",
  "displayName": "Mesh Load Balancing Strategy",
  "format": "JSON",
  "hostID": "00000000-0000-0000-0000-000000000000",
  "metadata": {
   "isNamespaced": true
  },
  "model": {
   "id": "00000000-0000-0000-0000-000000000000",
   "name": "kong-mesh",
   "version": "2.6.0",
   "displayName": "kong-mesh",
   "hostID": "00000000-0000-0000-0000-000000000000",
   "category": {
    "name": "",
    "metadata": null
   },
   "metadata": {
    "source_uri": "https://github.com/Kong/kong-mesh-charts/releases/download/kong-mesh-2.6.0/kong-mesh-2.6.0.tgz"
   },
   "components": null,
   "relationships": null
  },
  "schema": "{\n \"properties\": {\n  \"spec\": {\n   \"description\": \"Spec is the specification of the Kuma MeshLoadBalancingStrategy resource.\",\n   \"properties\": {\n    \"targetRef\": {\n     \"description\": \"TargetRef is a reference to the resource the policy takes an effect on.\\nThe resource could be either a real store object or virtual resource\\ndefined inplace.\",\n     \"properties\": {\n      \"kind\": {\n       \"description\": \"Kind of the referenced resource\",\n       \"enum\": [\n        \"Mesh\",\n        \"MeshSubset\",\n        \"MeshGateway\",\n        \"MeshService\",\n        \"MeshServiceSubset\",\n        \"MeshHTTPRoute\"\n       ],\n       \"type\": \"string\"\n      },\n      \"mesh\": {\n       \"description\": \"Mesh is reserved for future use to identify cross mesh resources.\",\n       \"type\": \"string\"\n      },\n      \"name\": {\n       \"description\": \"Name of the referenced resource. Can only be used with kinds: `MeshService`,\\n`MeshServiceSubset` and `MeshGatewayRoute`\",\n       \"type\": \"string\"\n      },\n      \"proxyTypes\": {\n       \"description\": \"ProxyTypes specifies the data plane types that are subject to the policy. When not specified,\\nall data plane types are targeted by the policy.\",\n       \"items\": {\n        \"enum\": [\n         \"Sidecar\",\n         \"Gateway\"\n        ],\n        \"type\": \"string\"\n       },\n       \"minItems\": 1,\n       \"type\": \"array\"\n      },\n      \"tags\": {\n       \"additionalProperties\": {\n        \"type\": \"string\"\n       },\n       \"description\": \"Tags used to select a subset of proxies by tags. Can only be used with kinds\\n`MeshSubset` and `MeshServiceSubset`\",\n       \"type\": \"object\"\n      }\n     },\n     \"type\": \"object\"\n    },\n    \"to\": {\n     \"description\": \"To list makes a match between the consumed services and corresponding configurations\",\n     \"items\": {\n      \"properties\": {\n       \"default\": {\n        \"description\": \"Default is a configuration specific to the group of destinations referenced in\\n'targetRef'\",\n        \"properties\": {\n         \"loadBalancer\": {\n          \"description\": \"LoadBalancer allows to specify load balancing algorithm.\",\n          \"properties\": {\n           \"leastRequest\": {\n            \"description\": \"LeastRequest selects N random available hosts as specified in 'choiceCount' (2 by default)\\nand picks the host which has the fewest active requests\",\n            \"properties\": {\n             \"activeRequestBias\": {\n              \"anyOf\": [\n               {\n                \"type\": \"integer\"\n               },\n               {\n                \"type\": \"string\"\n               }\n              ],\n              \"description\": \"ActiveRequestBias refers to dynamic weights applied when hosts have varying load\\nbalancing weights. A higher value here aggressively reduces the weight of endpoints\\nthat are currently handling active requests. In essence, the higher the ActiveRequestBias\\nvalue, the more forcefully it reduces the load balancing weight of endpoints that are\\nactively serving requests.\",\n              \"x-kubernetes-int-or-string\": true\n             },\n             \"choiceCount\": {\n              \"description\": \"ChoiceCount is the number of random healthy hosts from which the host with\\nthe fewest active requests will be chosen. Defaults to 2 so that Envoy performs\\ntwo-choice selection if the field is not set.\",\n              \"format\": \"int32\",\n              \"minimum\": 2,\n              \"type\": \"integer\"\n             }\n            },\n            \"type\": \"object\"\n           },\n           \"maglev\": {\n            \"description\": \"Maglev implements consistent hashing to upstream hosts. Maglev can be used as\\na drop in replacement for the ring hash load balancer any place in which\\nconsistent hashing is desired.\",\n            \"properties\": {\n             \"hashPolicies\": {\n              \"description\": \"HashPolicies specify a list of request/connection properties that are used to calculate a hash.\\nThese hash policies are executed in the specified order. If a hash policy has the “terminal” attribute\\nset to true, and there is already a hash generated, the hash is returned immediately,\\nignoring the rest of the hash policy list.\",\n              \"items\": {\n               \"properties\": {\n                \"connection\": {\n                 \"properties\": {\n                  \"sourceIP\": {\n                   \"description\": \"Hash on source IP address.\",\n                   \"type\": \"boolean\"\n                  }\n                 },\n                 \"type\": \"object\"\n                },\n                \"cookie\": {\n                 \"properties\": {\n                  \"name\": {\n                   \"description\": \"The name of the cookie that will be used to obtain the hash key.\",\n                   \"minLength\": 1,\n                   \"type\": \"string\"\n                  },\n                  \"path\": {\n                   \"description\": \"The name of the path for the cookie.\",\n                   \"type\": \"string\"\n                  },\n                  \"ttl\": {\n                   \"description\": \"If specified, a cookie with the TTL will be generated if the cookie is not present.\",\n                   \"type\": \"string\"\n                  }\n                 },\n                 \"required\": [\n                  \"name\"\n                 ],\n                 \"type\": \"object\"\n                },\n                \"filterState\": {\n                 \"properties\": {\n                  \"key\": {\n                   \"description\": \"The name of the Object in the per-request filterState, which is\\nan Envoy::Hashable object. If there is no data associated with the key,\\nor the stored object is not Envoy::Hashable, no hash will be produced.\",\n                   \"minLength\": 1,\n                   \"type\": \"string\"\n                  }\n                 },\n                 \"required\": [\n                  \"key\"\n                 ],\n                 \"type\": \"object\"\n                },\n                \"header\": {\n                 \"properties\": {\n                  \"name\": {\n                   \"description\": \"The name of the request header that will be used to obtain the hash key.\",\n                   \"minLength\": 1,\n                   \"type\": \"string\"\n                  }\n                 },\n                 \"required\": [\n                  \"name\"\n                 ],\n                 \"type\": \"object\"\n                },\n                \"queryParameter\": {\n                 \"properties\": {\n                  \"name\": {\n                   \"description\": \"The name of the URL query parameter that will be used to obtain the hash key.\\nIf the parameter is not present, no hash will be produced. Query parameter names\\nare case-sensitive.\",\n                   \"minLength\": 1,\n                   \"type\": \"string\"\n                  }\n                 },\n                 \"required\": [\n                  \"name\"\n                 ],\n                 \"type\": \"object\"\n                },\n                \"terminal\": {\n                 \"description\": \"Terminal is a flag that short-circuits the hash computing. This field provides\\na ‘fallback’ style of configuration: “if a terminal policy doesn’t work, fallback\\nto rest of the policy list”, it saves time when the terminal policy works.\\nIf true, and there is already a hash computed, ignore rest of the list of hash polices.\",\n                 \"type\": \"boolean\"\n                },\n                \"type\": {\n                 \"enum\": [\n                  \"Header\",\n                  \"Cookie\",\n                  \"SourceIP\",\n                  \"QueryParameter\",\n                  \"FilterState\"\n                 ],\n                 \"type\": \"string\"\n                }\n               },\n               \"required\": [\n                \"type\"\n               ],\n               \"type\": \"object\"\n              },\n              \"type\": \"array\"\n             },\n             \"tableSize\": {\n              \"description\": \"The table size for Maglev hashing. Maglev aims for “minimal disruption”\\nrather than an absolute guarantee. Minimal disruption means that when\\nthe set of upstream hosts change, a connection will likely be sent\\nto the same upstream as it was before. Increasing the table size reduces\\nthe amount of disruption. The table size must be prime number limited to 5000011.\\nIf it is not specified, the default is 65537.\",\n              \"format\": \"int32\",\n              \"maximum\": 5000011,\n              \"minimum\": 1,\n              \"type\": \"integer\"\n             }\n            },\n            \"type\": \"object\"\n           },\n           \"random\": {\n            \"description\": \"Random selects a random available host. The random load balancer generally\\nperforms better than round-robin if no health checking policy is configured.\\nRandom selection avoids bias towards the host in the set that comes after a failed host.\",\n            \"type\": \"object\"\n           },\n           \"ringHash\": {\n            \"description\": \"RingHash  implements consistent hashing to upstream hosts. Each host is mapped\\nonto a circle (the “ring”) by hashing its address; each request is then routed\\nto a host by hashing some property of the request, and finding the nearest\\ncorresponding host clockwise around the ring.\",\n            \"properties\": {\n             \"hashFunction\": {\n              \"description\": \"HashFunction is a function used to hash hosts onto the ketama ring.\\nThe value defaults to XX_HASH. Available values – XX_HASH, MURMUR_HASH_2.\",\n              \"enum\": [\n               \"XXHash\",\n               \"MurmurHash2\"\n              ],\n              \"type\": \"string\"\n             },\n             \"hashPolicies\": {\n              \"description\": \"HashPolicies specify a list of request/connection properties that are used to calculate a hash.\\nThese hash policies are executed in the specified order. If a hash policy has the “terminal” attribute\\nset to true, and there is already a hash generated, the hash is returned immediately,\\nignoring the rest of the hash policy list.\",\n              \"items\": {\n               \"properties\": {\n                \"connection\": {\n                 \"properties\": {\n                  \"sourceIP\": {\n                   \"description\": \"Hash on source IP address.\",\n                   \"type\": \"boolean\"\n                  }\n                 },\n                 \"type\": \"object\"\n                },\n                \"cookie\": {\n                 \"properties\": {\n                  \"name\": {\n                   \"description\": \"The name of the cookie that will be used to obtain the hash key.\",\n                   \"minLength\": 1,\n                   \"type\": \"string\"\n                  },\n                  \"path\": {\n                   \"description\": \"The name of the path for the cookie.\",\n                   \"type\": \"string\"\n                  },\n                  \"ttl\": {\n                   \"description\": \"If specified, a cookie with the TTL will be generated if the cookie is not present.\",\n                   \"type\": \"string\"\n                  }\n                 },\n                 \"required\": [\n                  \"name\"\n                 ],\n                 \"type\": \"object\"\n                },\n                \"filterState\": {\n                 \"properties\": {\n                  \"key\": {\n                   \"description\": \"The name of the Object in the per-request filterState, which is\\nan Envoy::Hashable object. If there is no data associated with the key,\\nor the stored object is not Envoy::Hashable, no hash will be produced.\",\n                   \"minLength\": 1,\n                   \"type\": \"string\"\n                  }\n                 },\n                 \"required\": [\n                  \"key\"\n                 ],\n                 \"type\": \"object\"\n                },\n                \"header\": {\n                 \"properties\": {\n                  \"name\": {\n                   \"description\": \"The name of the request header that will be used to obtain the hash key.\",\n                   \"minLength\": 1,\n                   \"type\": \"string\"\n                  }\n                 },\n                 \"required\": [\n                  \"name\"\n                 ],\n                 \"type\": \"object\"\n                },\n                \"queryParameter\": {\n                 \"properties\": {\n                  \"name\": {\n                   \"description\": \"The name of the URL query parameter that will be used to obtain the hash key.\\nIf the parameter is not present, no hash will be produced. Query parameter names\\nare case-sensitive.\",\n                   \"minLength\": 1,\n                   \"type\": \"string\"\n                  }\n                 },\n                 \"required\": [\n                  \"name\"\n                 ],\n                 \"type\": \"object\"\n                },\n                \"terminal\": {\n                 \"description\": \"Terminal is a flag that short-circuits the hash computing. This field provides\\na ‘fallback’ style of configuration: “if a terminal policy doesn’t work, fallback\\nto rest of the policy list”, it saves time when the terminal policy works.\\nIf true, and there is already a hash computed, ignore rest of the list of hash polices.\",\n                 \"type\": \"boolean\"\n                },\n                \"type\": {\n                 \"enum\": [\n                  \"Header\",\n                  \"Cookie\",\n                  \"SourceIP\",\n                  \"QueryParameter\",\n                  \"FilterState\"\n                 ],\n                 \"type\": \"string\"\n                }\n               },\n               \"required\": [\n                \"type\"\n               ],\n               \"type\": \"object\"\n              },\n              \"type\": \"array\"\n             },\n             \"maxRingSize\": {\n              \"description\": \"Maximum hash ring size. Defaults to 8M entries, and limited to 8M entries,\\nbut can be lowered to further constrain resource use.\",\n              \"format\": \"int32\",\n              \"maximum\": 8000000,\n              \"minimum\": 1,\n              \"type\": \"integer\"\n             },\n             \"minRingSize\": {\n              \"description\": \"Minimum hash ring size. The larger the ring is (that is,\\nthe more hashes there are for each provided host) the better the request distribution\\nwill reflect the desired weights. Defaults to 1024 entries, and limited to 8M entries.\",\n              \"format\": \"int32\",\n              \"maximum\": 8000000,\n              \"minimum\": 1,\n              \"type\": \"integer\"\n             }\n            },\n            \"type\": \"object\"\n           },\n           \"roundRobin\": {\n            \"description\": \"RoundRobin is a load balancing algorithm that distributes requests\\nacross available upstream hosts in round-robin order.\",\n            \"type\": \"object\"\n           },\n           \"type\": {\n            \"enum\": [\n             \"RoundRobin\",\n             \"LeastRequest\",\n             \"RingHash\",\n             \"Random\",\n             \"Maglev\"\n            ],\n            \"type\": \"string\"\n           }\n          },\n          \"required\": [\n           \"type\"\n          ],\n          \"type\": \"object\"\n         },\n         \"localityAwareness\": {\n          \"description\": \"LocalityAwareness contains configuration for locality aware load balancing.\",\n          \"properties\": {\n           \"crossZone\": {\n            \"description\": \"CrossZone defines locality aware load balancing priorities when dataplane proxies inside local zone\\nare unavailable\",\n            \"properties\": {\n             \"failover\": {\n              \"description\": \"Failover defines list of load balancing rules in order of priority\",\n              \"items\": {\n               \"properties\": {\n                \"from\": {\n                 \"description\": \"From defines the list of zones to which the rule applies\",\n                 \"properties\": {\n                  \"zones\": {\n                   \"items\": {\n                    \"type\": \"string\"\n                   },\n                   \"type\": \"array\"\n                  }\n                 },\n                 \"required\": [\n                  \"zones\"\n                 ],\n                 \"type\": \"object\"\n                },\n                \"to\": {\n                 \"description\": \"To defines to which zones the traffic should be load balanced\",\n                 \"properties\": {\n                  \"type\": {\n                   \"description\": \"Type defines how target zones will be picked from available zones\",\n                   \"enum\": [\n                    \"None\",\n                    \"Only\",\n                    \"Any\",\n                    \"AnyExcept\"\n                   ],\n                   \"type\": \"string\"\n                  },\n                  \"zones\": {\n                   \"items\": {\n                    \"type\": \"string\"\n                   },\n                   \"type\": \"array\"\n                  }\n                 },\n                 \"required\": [\n                  \"type\"\n                 ],\n                 \"type\": \"object\"\n                }\n               },\n               \"required\": [\n                \"to\"\n               ],\n               \"type\": \"object\"\n              },\n              \"type\": \"array\"\n             },\n             \"failoverThreshold\": {\n              \"description\": \"FailoverThreshold defines the percentage of live destination dataplane proxies below which load balancing to the\\nnext priority starts.\\nExample: If you configure failoverThreshold to 70, and you have deployed 10 destination dataplane proxies.\\nLoad balancing to next priority will start when number of live destination dataplane proxies drops below 7.\\nDefault 50\",\n              \"properties\": {\n               \"percentage\": {\n                \"anyOf\": [\n                 {\n                  \"type\": \"integer\"\n                 },\n                 {\n                  \"type\": \"string\"\n                 }\n                ],\n                \"x-kubernetes-int-or-string\": true\n               }\n              },\n              \"required\": [\n               \"percentage\"\n              ],\n              \"type\": \"object\"\n             }\n            },\n            \"type\": \"object\"\n           },\n           \"disabled\": {\n            \"description\": \"Disabled allows to disable locality-aware load balancing.\\nWhen disabled requests are distributed across all endpoints regardless of locality.\",\n            \"type\": \"boolean\"\n           },\n           \"localZone\": {\n            \"description\": \"LocalZone defines locality aware load balancing priorities between dataplane proxies inside a zone\",\n            \"properties\": {\n             \"affinityTags\": {\n              \"description\": \"AffinityTags list of tags for local zone load balancing.\",\n              \"items\": {\n               \"properties\": {\n                \"key\": {\n                 \"description\": \"Key defines tag for which affinity is configured\",\n                 \"type\": \"string\"\n                },\n                \"weight\": {\n                 \"description\": \"Weight of the tag used for load balancing. The bigger the weight the bigger the priority.\\nPercentage of local traffic load balanced to tag is computed by dividing weight by sum of weights from all tags.\\nFor example with two affinity tags first with weight 80 and second with weight 20,\\nthen 80% of traffic will be redirected to the first tag, and 20% of traffic will be redirected to second one.\\nSetting weights is not mandatory. When weights are not set control plane will compute default weight based on list order.\\nDefault: If you do not specify weight we will adjust them so that 90% traffic goes to first tag, 9% to next, and 1% to third and so on.\",\n                 \"format\": \"int32\",\n                 \"type\": \"integer\"\n                }\n               },\n               \"required\": [\n                \"key\"\n               ],\n               \"type\": \"object\"\n              },\n              \"type\": \"array\"\n             }\n            },\n            \"type\": \"object\"\n           }\n          },\n          \"type\": \"object\"\n         }\n        },\n        \"type\": \"object\"\n       },\n       \"targetRef\": {\n        \"description\": \"TargetRef is a reference to the resource that represents a group of\\ndestinations.\",\n        \"properties\": {\n         \"kind\": {\n          \"description\": \"Kind of the referenced resource\",\n          \"enum\": [\n           \"Mesh\",\n           \"MeshSubset\",\n           \"MeshGateway\",\n           \"MeshService\",\n           \"MeshServiceSubset\",\n           \"MeshHTTPRoute\"\n          ],\n          \"type\": \"string\"\n         },\n         \"mesh\": {\n          \"description\": \"Mesh is reserved for future use to identify cross mesh resources.\",\n          \"type\": \"string\"\n         },\n         \"name\": {\n          \"description\": \"Name of the referenced resource. Can only be used with kinds: `MeshService`,\\n`MeshServiceSubset` and `MeshGatewayRoute`\",\n          \"type\": \"string\"\n         },\n         \"proxyTypes\": {\n          \"description\": \"ProxyTypes specifies the data plane types that are subject to the policy. When not specified,\\nall data plane types are targeted by the policy.\",\n          \"items\": {\n           \"enum\": [\n            \"Sidecar\",\n            \"Gateway\"\n           ],\n           \"type\": \"string\"\n          },\n          \"minItems\": 1,\n          \"type\": \"array\"\n         },\n         \"tags\": {\n          \"additionalProperties\": {\n           \"type\": \"string\"\n          },\n          \"description\": \"Tags used to select a subset of proxies by tags. Can only be used with kinds\\n`MeshSubset` and `MeshServiceSubset`\",\n          \"type\": \"object\"\n         }\n        },\n        \"type\": \"object\"\n       }\n      },\n      \"required\": [\n       \"targetRef\"\n      ],\n      \"type\": \"object\"\n     },\n     \"type\": \"array\"\n    }\n   },\n   \"required\": [\n    \"targetRef\"\n   ],\n   \"type\": \"object\"\n  }\n },\n \"title\": \"Mesh Load Balancing Strategy\",\n \"type\": \"object\"\n}"
 }