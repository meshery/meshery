{
  "capabilities": null,
  "component": {
   "kind": "MeshExternalService",
   "schema": "{\n \"properties\": {\n  \"spec\": {\n   \"description\": \"Spec is the specification of the Kuma MeshExternalService resource.\",\n   \"properties\": {\n    \"endpoints\": {\n     \"description\": \"Endpoints defines a list of destinations to send traffic to.\",\n     \"items\": {\n      \"properties\": {\n       \"address\": {\n        \"description\": \"Address defines an address to which a user want to send a request. Is possible to provide `domain`, `ip` and `unix` sockets.\",\n        \"example\": \"unix:///tmp/example.sock\",\n        \"minLength\": 1,\n        \"type\": \"string\"\n       },\n       \"port\": {\n        \"description\": \"Port of the endpoint\",\n        \"maximum\": 65535,\n        \"minimum\": 1,\n        \"type\": \"integer\"\n       }\n      },\n      \"required\": [\n       \"address\"\n      ],\n      \"type\": \"object\"\n     },\n     \"type\": \"array\"\n    },\n    \"extension\": {\n     \"description\": \"Extension struct for a plugin configuration, in the presence of an extension `endpoints` and `tls` are not required anymore - it's up to the extension to validate them independently.\",\n     \"properties\": {\n      \"config\": {\n       \"description\": \"Config freeform configuration for the extension.\",\n       \"format\": \"textarea\",\n       \"type\": \"string\"\n      },\n      \"type\": {\n       \"description\": \"Type of the extension.\",\n       \"type\": \"string\"\n      }\n     },\n     \"required\": [\n      \"config\",\n      \"type\"\n     ],\n     \"type\": \"object\"\n    },\n    \"match\": {\n     \"description\": \"Match defines traffic that should be routed through the sidecar.\",\n     \"properties\": {\n      \"port\": {\n       \"description\": \"Port defines a port to which a user does request.\",\n       \"maximum\": 65535,\n       \"minimum\": 1,\n       \"type\": \"integer\"\n      },\n      \"protocol\": {\n       \"default\": \"tcp\",\n       \"description\": \"Protocol defines a protocol of the communication. Possible values: `tcp`, `grpc`, `http`, `http2`.\",\n       \"enum\": [\n        \"tcp\",\n        \"grpc\",\n        \"http\",\n        \"http2\"\n       ],\n       \"type\": \"string\"\n      },\n      \"type\": {\n       \"default\": \"HostnameGenerator\",\n       \"description\": \"Type of the match, only `HostnameGenerator` is available at the moment.\",\n       \"enum\": [\n        \"HostnameGenerator\"\n       ],\n       \"type\": \"string\"\n      }\n     },\n     \"required\": [\n      \"port\"\n     ],\n     \"type\": \"object\"\n    },\n    \"tls\": {\n     \"description\": \"Tls provides a TLS configuration when proxy is resposible for a TLS origination\",\n     \"properties\": {\n      \"allowRenegotiation\": {\n       \"default\": false,\n       \"description\": \"AllowRenegotiation defines if TLS sessions will allow renegotiation.\\nSetting this to true is not recommended for security reasons.\",\n       \"type\": \"boolean\"\n      },\n      \"enabled\": {\n       \"default\": false,\n       \"description\": \"Enabled defines if proxy should originate TLS.\",\n       \"type\": \"boolean\"\n      },\n      \"verification\": {\n       \"description\": \"Verification section for providing TLS verification details.\",\n       \"properties\": {\n        \"caCert\": {\n         \"description\": \"CaCert defines a certificate of CA.\",\n         \"properties\": {\n          \"inline\": {\n           \"description\": \"Data source is inline bytes.\",\n           \"format\": \"byte\",\n           \"type\": \"string\"\n          },\n          \"inlineString\": {\n           \"description\": \"Data source is inline string`\",\n           \"type\": \"string\"\n          },\n          \"secret\": {\n           \"description\": \"Data source is a secret with given Secret key.\",\n           \"type\": \"string\"\n          }\n         },\n         \"type\": \"object\"\n        },\n        \"clientCert\": {\n         \"description\": \"ClientCert defines a certificate of a client.\",\n         \"properties\": {\n          \"inline\": {\n           \"description\": \"Data source is inline bytes.\",\n           \"format\": \"byte\",\n           \"type\": \"string\"\n          },\n          \"inlineString\": {\n           \"description\": \"Data source is inline string`\",\n           \"type\": \"string\"\n          },\n          \"secret\": {\n           \"description\": \"Data source is a secret with given Secret key.\",\n           \"type\": \"string\"\n          }\n         },\n         \"type\": \"object\"\n        },\n        \"clientKey\": {\n         \"description\": \"ClientKey defines a client private key.\",\n         \"properties\": {\n          \"inline\": {\n           \"description\": \"Data source is inline bytes.\",\n           \"format\": \"byte\",\n           \"type\": \"string\"\n          },\n          \"inlineString\": {\n           \"description\": \"Data source is inline string`\",\n           \"type\": \"string\"\n          },\n          \"secret\": {\n           \"description\": \"Data source is a secret with given Secret key.\",\n           \"type\": \"string\"\n          }\n         },\n         \"type\": \"object\"\n        },\n        \"mode\": {\n         \"default\": \"Secured\",\n         \"description\": \"Mode defines if proxy should skip verification, one of `SkipSAN`, `SkipCA`, `Secured`, `SkipAll`. Default `Secured`.\",\n         \"enum\": [\n          \"SkipSAN\",\n          \"SkipCA\",\n          \"Secured\",\n          \"SkipAll\"\n         ],\n         \"type\": \"string\"\n        },\n        \"serverName\": {\n         \"description\": \"ServerName overrides the default Server Name Indicator set by Kuma.\",\n         \"type\": \"string\"\n        },\n        \"subjectAltNames\": {\n         \"description\": \"SubjectAltNames list of names to verify in the certificate.\",\n         \"items\": {\n          \"properties\": {\n           \"type\": {\n            \"default\": \"Exact\",\n            \"description\": \"Type specifies matching type, one of `Exact`, `Prefix`. Default: `Exact`\",\n            \"enum\": [\n             \"Exact\",\n             \"Prefix\"\n            ],\n            \"type\": \"string\"\n           },\n           \"value\": {\n            \"description\": \"Value to match.\",\n            \"type\": \"string\"\n           }\n          },\n          \"required\": [\n           \"value\"\n          ],\n          \"type\": \"object\"\n         },\n         \"type\": \"array\"\n        }\n       },\n       \"type\": \"object\"\n      },\n      \"version\": {\n       \"description\": \"Version section for providing version specification.\",\n       \"properties\": {\n        \"max\": {\n         \"default\": \"TLSAuto\",\n         \"description\": \"Max defines maximum supported version. One of `TLSAuto`, `TLS10`, `TLS11`, `TLS12`, `TLS13`.\",\n         \"enum\": [\n          \"TLSAuto\",\n          \"TLS10\",\n          \"TLS11\",\n          \"TLS12\",\n          \"TLS13\"\n         ],\n         \"type\": \"string\"\n        },\n        \"min\": {\n         \"default\": \"TLSAuto\",\n         \"description\": \"Min defines minimum supported version. One of `TLSAuto`, `TLS10`, `TLS11`, `TLS12`, `TLS13`.\",\n         \"enum\": [\n          \"TLSAuto\",\n          \"TLS10\",\n          \"TLS11\",\n          \"TLS12\",\n          \"TLS13\"\n         ],\n         \"type\": \"string\"\n        }\n       },\n       \"type\": \"object\"\n      }\n     },\n     \"type\": \"object\"\n    }\n   },\n   \"required\": [\n    \"match\"\n   ],\n   \"type\": \"object\"\n  }\n },\n \"title\": \"Mesh External Service\",\n \"type\": \"object\"\n}",
   "version": "kuma.io/v1alpha1"
  },
  "configuration": null,
  "description": "",
  "displayName": "Mesh External Service",
  "format": "JSON",
  "id": "00000000-0000-0000-0000-000000000000",
  "metadata": {
   "defaultData": "",
   "genealogy": "",
   "isAnnotation": false,
   "published": false,
   "shapePolygonPoints": "",
   "styleOverrides": "",
   "styles": ""
  },
  "model": {
   "category": {
    "name": "Cloud Native Network"
   },
   "displayName": "Kong Mesh",
   "id": "00000000-0000-0000-0000-000000000000",
   "metadata": {
    "defaultData": "",
    "isAnnotation": false,
    "primaryColor": "#003459",
    "secondaryColor": "",
    "shape": "circle",
    "shapePolygonPoints": "",
    "styleOverrides": "",
    "styles": "",
    "svgColor": "\u003csvg version=\"1.1\" id=\"Layer_1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\"\n         viewBox=\"0 0 45.3 40.8\" style=\"enable-background:new 0 0 45.3 40.8;\" xml:space=\"preserve\"\u003e\n\u003cstyle type=\"text/css\"\u003e\n        .st0{fill-rule:evenodd;clip-rule:evenodd;fill:#003459;}\n\u003c/style\u003e\n\u003cpath class=\"st0\" d=\"M14.9,33.6h8.3l4.3,5.4l-0.7,1.9H16l0.3-1.9l-2.5-4L14.9,33.6z M20.8,9.7h4.5l20,23.9l-1.6,7.3h-8.6l0.5-2\n        L17,16.5L20.8,9.7z M28.7,0L38,7.3l-1.2,1.2l1.6,2.2v2.4L33.8,17L26,7.8h-4.5l1.8-3.4L28.7,0z M9.1,23.4l6.5-5.6l8.6,10.4L21.8,32\n        h-7.9l-5.5,7.2l-1.3,1.7H0V32l6.6-8.6H9.1z\"/\u003e\n\u003c/svg\u003e",
    "svgComplete": "",
    "svgWhite": "\u003csvg version=\"1.1\" id=\"Layer_1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\"\n\t viewBox=\"0 0 45.3 40.8\" style=\"enable-background:new 0 0 45.3 40.8;\" xml:space=\"preserve\"\u003e\n\u003cstyle type=\"text/css\"\u003e\n\t.st0{fill:#FFFFFF;}\n\u003c/style\u003e\n\u003cpath class=\"st0\" d=\"M14.9,33.6h8.3l4.3,5.4l-0.7,1.9H16l0.3-1.9l-2.5-4L14.9,33.6z M20.8,9.7h4.5l20,23.9l-1.6,7.3h-8.6l0.5-2\n\tL17,16.5L20.8,9.7z M28.7,0L38,7.3l-1.2,1.2l1.6,2.2v2.4L33.8,17L26,7.8h-4.5l1.8-3.4L28.7,0z M9.1,23.4l6.5-5.6l8.6,10.4L21.8,32\n\th-7.9l-5.5,7.2l-1.3,1.7H0V32l6.6-8.6H9.1z\"/\u003e\n\u003c/svg\u003e"
   },
   "model": {
    "version": "2.8.1"
   },
   "name": "kong-mesh",
   "registrant": {
    "created_at": "0001-01-01T00:00:00Z",
    "credential_id": "00000000-0000-0000-0000-000000000000",
    "deleted_at": "0001-01-01T00:00:00Z",
    "id": "00000000-0000-0000-0000-000000000000",
    "kind": "artifacthub",
    "name": "Artifact Hub",
    "status": "discovered",
    "sub_type": "",
    "type": "registry",
    "updated_at": "0001-01-01T00:00:00Z",
    "user_id": "00000000-0000-0000-0000-000000000000"
   },
   "connection_id": "00000000-0000-0000-0000-000000000000",
   "schemaVersion": "models.meshery.io/v1beta1",
   "status": "enabled",
   "subCategory": "Service Mesh",
   "version": "v1.0.0",
   "components": null,
   "relationships": null
  },
  "schemaVersion": "components.meshery.io/v1beta1",
  "status": "enabled",
  "styles": {
   "primaryColor": "#003459",
   "shape": "circle",
   "svgColor": "\u003csvg version=\"1.1\" id=\"Layer_1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\"\n         viewBox=\"0 0 45.3 40.8\" style=\"enable-background:new 0 0 45.3 40.8;\" xml:space=\"preserve\"\u003e\n\u003cstyle type=\"text/css\"\u003e\n        .st0{fill-rule:evenodd;clip-rule:evenodd;fill:#003459;}\n\u003c/style\u003e\n\u003cpath class=\"st0\" d=\"M14.9,33.6h8.3l4.3,5.4l-0.7,1.9H16l0.3-1.9l-2.5-4L14.9,33.6z M20.8,9.7h4.5l20,23.9l-1.6,7.3h-8.6l0.5-2\n        L17,16.5L20.8,9.7z M28.7,0L38,7.3l-1.2,1.2l1.6,2.2v2.4L33.8,17L26,7.8h-4.5l1.8-3.4L28.7,0z M9.1,23.4l6.5-5.6l8.6,10.4L21.8,32\n        h-7.9l-5.5,7.2l-1.3,1.7H0V32l6.6-8.6H9.1z\"/\u003e\n\u003c/svg\u003e",
   "svgWhite": "\u003csvg version=\"1.1\" id=\"Layer_1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\"\n\t viewBox=\"0 0 45.3 40.8\" style=\"enable-background:new 0 0 45.3 40.8;\" xml:space=\"preserve\"\u003e\n\u003cstyle type=\"text/css\"\u003e\n\t.st0{fill:#FFFFFF;}\n\u003c/style\u003e\n\u003cpath class=\"st0\" d=\"M14.9,33.6h8.3l4.3,5.4l-0.7,1.9H16l0.3-1.9l-2.5-4L14.9,33.6z M20.8,9.7h4.5l20,23.9l-1.6,7.3h-8.6l0.5-2\n\tL17,16.5L20.8,9.7z M28.7,0L38,7.3l-1.2,1.2l1.6,2.2v2.4L33.8,17L26,7.8h-4.5l1.8-3.4L28.7,0z M9.1,23.4l6.5-5.6l8.6,10.4L21.8,32\n\th-7.9l-5.5,7.2l-1.3,1.7H0V32l6.6-8.6H9.1z\"/\u003e\n\u003c/svg\u003e"
  },
  "version": "v1.0.0"
 }