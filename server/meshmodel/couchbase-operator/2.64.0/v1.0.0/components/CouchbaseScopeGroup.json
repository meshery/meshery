{
  "id": "00000000-0000-0000-0000-000000000000",
  "schemaVersion": "core.meshery.io/v1beta1",
  "version": "v1.0.0",
  "displayName": "Couchbase Scope Group",
  "description": "",
  "format": "JSON",
  "model": {
   "id": "00000000-0000-0000-0000-000000000000",
   "schemaVersion": "core.meshery.io/v1beta1",
   "version": "v1.0.0",
   "name": "couchbase-operator",
   "displayName": "Couchbase Operator",
   "description": "",
   "status": "enabled",
   "hostID": "00000000-0000-0000-0000-000000000000",
   "registrant": {
    "hostname": "artifacthub"
   },
   "category": {
    "name": "App Definition and Development",
    "metadata": null
   },
   "subCategory": "Database",
   "metadata": {
    "capabilities": "",
    "defaultData": "",
    "isAnnotation": false,
    "primaryColor": "#00B39F",
    "secondaryColor": "#00D3A9",
    "shape": "circle",
    "shapePolygonPoints": "",
    "styleOverrides": "",
    "styles": "",
    "svgColor": "\u003csvg width=\"575\" height=\"575\" viewBox=\"0 0 575 575\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"\u003e\n\u003cpath d=\"M287.5 0C128.984 0 0 128.55 0 287.5C0 446.016 128.55 575 287.5 575C446.016 575 575 446.45 575 287.5C575 128.55 446.016 0 287.5 0ZM481.628 337.878C481.628 355.249 471.639 370.449 452.096 373.924C418.221 379.999 346.998 383.478 287.5 383.478C228.002 383.478 156.779 379.999 122.904 373.924C103.361 370.449 93.3724 355.249 93.3724 337.878V225.831C93.3724 208.459 106.835 192.39 122.904 189.785C132.893 188.048 156.344 186.31 174.585 186.31C181.533 186.31 187.179 191.522 187.179 199.773V278.38L287.934 276.208L388.69 278.38V199.773C388.69 191.522 394.335 186.31 401.284 186.31C419.524 186.31 442.976 188.048 452.965 189.785C469.468 192.39 482.496 208.459 482.496 225.831C481.628 262.745 481.628 300.529 481.628 337.878Z\" fill=\"#ED2226\"/\u003e\n\u003c/svg\u003e\r",
    "svgComplete": "",
    "svgWhite": "\u003csvg width=\"575\" height=\"575\" viewBox=\"0 0 575 575\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"\u003e\n\u003cpath d=\"M287.5 0C128.984 0 0 128.55 0 287.5C0 446.016 128.55 575 287.5 575C446.016 575 575 446.45 575 287.5C575 128.55 446.016 0 287.5 0ZM481.628 337.878C481.628 355.249 471.639 370.449 452.096 373.924C418.221 379.999 346.998 383.478 287.5 383.478C228.002 383.478 156.779 379.999 122.904 373.924C103.361 370.449 93.3724 355.249 93.3724 337.878V225.831C93.3724 208.459 106.835 192.39 122.904 189.785C132.893 188.048 156.344 186.31 174.585 186.31C181.533 186.31 187.179 191.522 187.179 199.773V278.38L287.934 276.208L388.69 278.38V199.773C388.69 191.522 394.335 186.31 401.284 186.31C419.524 186.31 442.976 188.048 452.965 189.785C469.468 192.39 482.496 208.459 482.496 225.831C481.628 262.745 481.628 300.529 481.628 337.878Z\" fill=\"white\"/\u003e\n\u003c/svg\u003e\r"
   },
   "model": {
    "version": "2.64.0"
   },
   "components": null,
   "relationships": null
  },
  "metadata": {
   "capabilities": "",
   "defaultData": "",
   "genealogy": "",
   "isAnnotation": false,
   "isNamespaced": true,
   "primaryColor": "#00B39F",
   "secondaryColor": "#00D3A9",
   "shape": "circle",
   "shapePolygonPoints": "",
   "status": "enabled",
   "styleOverrides": "",
   "styles": "",
   "subCategory": "",
   "svgColor": "\u003csvg width=\"575\" height=\"575\" viewBox=\"0 0 575 575\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"\u003e\n\u003cpath d=\"M287.5 0C128.984 0 0 128.55 0 287.5C0 446.016 128.55 575 287.5 575C446.016 575 575 446.45 575 287.5C575 128.55 446.016 0 287.5 0ZM481.628 337.878C481.628 355.249 471.639 370.449 452.096 373.924C418.221 379.999 346.998 383.478 287.5 383.478C228.002 383.478 156.779 379.999 122.904 373.924C103.361 370.449 93.3724 355.249 93.3724 337.878V225.831C93.3724 208.459 106.835 192.39 122.904 189.785C132.893 188.048 156.344 186.31 174.585 186.31C181.533 186.31 187.179 191.522 187.179 199.773V278.38L287.934 276.208L388.69 278.38V199.773C388.69 191.522 394.335 186.31 401.284 186.31C419.524 186.31 442.976 188.048 452.965 189.785C469.468 192.39 482.496 208.459 482.496 225.831C481.628 262.745 481.628 300.529 481.628 337.878Z\" fill=\"#ED2226\"/\u003e\n\u003c/svg\u003e\r",
   "svgComplete": "",
   "svgWhite": "\u003csvg width=\"575\" height=\"575\" viewBox=\"0 0 575 575\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"\u003e\n\u003cpath d=\"M287.5 0C128.984 0 0 128.55 0 287.5C0 446.016 128.55 575 287.5 575C446.016 575 575 446.45 575 287.5C575 128.55 446.016 0 287.5 0ZM481.628 337.878C481.628 355.249 471.639 370.449 452.096 373.924C418.221 379.999 346.998 383.478 287.5 383.478C228.002 383.478 156.779 379.999 122.904 373.924C103.361 370.449 93.3724 355.249 93.3724 337.878V225.831C93.3724 208.459 106.835 192.39 122.904 189.785C132.893 188.048 156.344 186.31 174.585 186.31C181.533 186.31 187.179 191.522 187.179 199.773V278.38L287.934 276.208L388.69 278.38V199.773C388.69 191.522 394.335 186.31 401.284 186.31C419.524 186.31 442.976 188.048 452.965 189.785C469.468 192.39 482.496 208.459 482.496 225.831C481.628 262.745 481.628 300.529 481.628 337.878Z\" fill=\"white\"/\u003e\n\u003c/svg\u003e\r"
  },
  "component": {
   "kind": "CouchbaseScopeGroup",
   "version": "couchbase.com/v2",
   "schema": "{\n \"description\": \"CouchbaseScopeGroup represents a logical unit of data storage that sits between buckets and collections e.g. a bucket may contain multiple scopes, and a scope may contain multiple collections.  At present, scopes are not nested, so provide only a single level of abstraction.  Scopes provide a coarser grained basis for role-based access control (RBAC) and cross-datacenter replication (XDCR) than collections, but finer that buckets. In order to be considered by the Operator, a scope must be referenced by either a `CouchbaseBucket` or `CouchbaseEphemeralBucket` resource. Unlike `CouchbaseScope` resources, scope groups represents multiple scopes, with the same common set of collections, to be expressed as a single resource, minimizing required configuration and Kubernetes API traffic.  It also forms the basis of Couchbase RBAC security boundaries.\",\n \"properties\": {\n  \"spec\": {\n   \"description\": \"Spec defines the desired state of the resource.\",\n   \"properties\": {\n    \"collections\": {\n     \"description\": \"Collections defines how to collate collections included in this scope or scope group. Any of the provided methods may be used to collate a set of collections to manage.  Collated collections must have unique names, otherwise it is considered ambiguous, and an error condition.\",\n     \"properties\": {\n      \"managed\": {\n       \"description\": \"Managed indicates whether collections within this scope are managed. If not then you can dynamically create and delete collections with the Couchbase UI or SDKs.\",\n       \"type\": \"boolean\"\n      },\n      \"preserveDefaultCollection\": {\n       \"description\": \"PreserveDefaultCollection indicates whether the Operator should manage the default collection within the default scope.  The default collection can be deleted, but can not be recreated by Couchbase Server.  By setting this field to `true`, the Operator will implicitly manage the default collection within the default scope.  The default collection cannot be modified and will have no document time-to-live (TTL).  When set to `false`, the operator will not manage the default collection, which will be deleted and cannot be used or recreated.\",\n       \"type\": \"boolean\"\n      },\n      \"resources\": {\n       \"description\": \"Resources is an explicit list of named resources that will be considered for inclusion in this scope or scopes.  If a resource reference doesn't match a resource, then no error conditions are raised due to undefined resource creation ordering and eventual consistency.\",\n       \"items\": {\n        \"properties\": {\n         \"kind\": {\n          \"default\": \"CouchbaseCollection\",\n          \"description\": \"Kind indicates the kind of resource that is being referenced.  A scope can only reference `CouchbaseCollection` and `CouchbaseCollectionGroup` resource kinds.  This field defaults to `CouchbaseCollection` if not specified.\",\n          \"enum\": [\n           \"CouchbaseCollection\",\n           \"CouchbaseCollectionGroup\"\n          ],\n          \"type\": \"string\"\n         },\n         \"name\": {\n          \"description\": \"Name is the name of the Kubernetes resource name that is being referenced. Legal collection names have a maximum length of 251 characters and may be composed of any character from \\\"a-z\\\", \\\"A-Z\\\", \\\"0-9\\\" and \\\"_-%\\\".\",\n          \"maxLength\": 251,\n          \"minLength\": 1,\n          \"pattern\": \"^[a-zA-Z0-9\\\\-][a-zA-Z0-9\\\\-%_]{0,250}$\",\n          \"type\": \"string\"\n         }\n        },\n        \"required\": [\n         \"name\"\n        ],\n        \"type\": \"object\"\n       },\n       \"type\": \"array\"\n      },\n      \"selector\": {\n       \"description\": \"Selector allows resources to be implicitly considered for inclusion in this scope or scopes.  More info: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.28/#labelselector-v1-meta\",\n       \"properties\": {\n        \"matchExpressions\": {\n         \"description\": \"matchExpressions is a list of label selector requirements. The requirements are ANDed.\",\n         \"items\": {\n          \"description\": \"A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.\",\n          \"properties\": {\n           \"key\": {\n            \"description\": \"key is the label key that the selector applies to.\",\n            \"type\": \"string\"\n           },\n           \"operator\": {\n            \"description\": \"operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.\",\n            \"type\": \"string\"\n           },\n           \"values\": {\n            \"description\": \"values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.\",\n            \"items\": {\n             \"type\": \"string\"\n            },\n            \"type\": \"array\"\n           }\n          },\n          \"required\": [\n           \"key\",\n           \"operator\"\n          ],\n          \"type\": \"object\"\n         },\n         \"type\": \"array\"\n        },\n        \"matchLabels\": {\n         \"additionalProperties\": {\n          \"type\": \"string\"\n         },\n         \"description\": \"matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \\\"key\\\", the operator is \\\"In\\\", and the values array contains only \\\"value\\\". The requirements are ANDed.\",\n         \"type\": \"object\"\n        }\n       },\n       \"type\": \"object\"\n      }\n     },\n     \"type\": \"object\"\n    },\n    \"names\": {\n     \"description\": \"Names specifies the names of the scopes.  Unlike CouchbaseScope, which specifies a single scope, a scope group specifies multiple, and the scope group must specify at least one scope name. Any scope names specified must be unique. Scope names must be 1-251 characters in length, contain only [a-zA-Z0-9_-%] and not start with either _ or %.\",\n     \"items\": {\n      \"description\": \"ScopeOrCollectionName is a generic type to capture a valid scope or collection name.  These must consist of 1-251 characters, include only A-Z, a-z, 0-9, -, _ or %, and must not start with _ (which is an internal marker) or % (which is probably an escape character in language X).\",\n      \"maxLength\": 251,\n      \"minLength\": 1,\n      \"pattern\": \"^[a-zA-Z0-9\\\\-][a-zA-Z0-9\\\\-%_]{0,250}$\",\n      \"type\": \"string\"\n     },\n     \"type\": \"array\",\n     \"x-kubernetes-list-type\": \"set\"\n    }\n   },\n   \"required\": [\n    \"names\"\n   ],\n   \"type\": \"object\"\n  }\n },\n \"required\": [\n  \"spec\"\n ],\n \"title\": \"Couchbase Scope Group\",\n \"type\": \"object\"\n}"
  }
 }