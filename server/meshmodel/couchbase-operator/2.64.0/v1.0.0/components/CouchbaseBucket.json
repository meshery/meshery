{
  "id": "00000000-0000-0000-0000-000000000000",
  "schemaVersion": "core.meshery.io/v1beta1",
  "version": "v1.0.0",
  "displayName": "Couchbase Bucket",
  "description": "",
  "format": "JSON",
  "model": {
   "id": "00000000-0000-0000-0000-000000000000",
   "schemaVersion": "core.meshery.io/v1beta1",
   "version": "v1.0.0",
   "name": "couchbase-operator",
   "displayName": "Couchbase Operator",
   "description": "",
   "status": "enabled",
   "hostID": "00000000-0000-0000-0000-000000000000",
   "registrant": {
    "hostname": "artifacthub"
   },
   "category": {
    "name": "App Definition and Development",
    "metadata": null
   },
   "subCategory": "Database",
   "metadata": {
    "capabilities": "",
    "defaultData": "",
    "isAnnotation": false,
    "primaryColor": "#00B39F",
    "secondaryColor": "#00D3A9",
    "shape": "circle",
    "shapePolygonPoints": "",
    "styleOverrides": "",
    "styles": "",
    "svgColor": "\u003csvg width=\"575\" height=\"575\" viewBox=\"0 0 575 575\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"\u003e\n\u003cpath d=\"M287.5 0C128.984 0 0 128.55 0 287.5C0 446.016 128.55 575 287.5 575C446.016 575 575 446.45 575 287.5C575 128.55 446.016 0 287.5 0ZM481.628 337.878C481.628 355.249 471.639 370.449 452.096 373.924C418.221 379.999 346.998 383.478 287.5 383.478C228.002 383.478 156.779 379.999 122.904 373.924C103.361 370.449 93.3724 355.249 93.3724 337.878V225.831C93.3724 208.459 106.835 192.39 122.904 189.785C132.893 188.048 156.344 186.31 174.585 186.31C181.533 186.31 187.179 191.522 187.179 199.773V278.38L287.934 276.208L388.69 278.38V199.773C388.69 191.522 394.335 186.31 401.284 186.31C419.524 186.31 442.976 188.048 452.965 189.785C469.468 192.39 482.496 208.459 482.496 225.831C481.628 262.745 481.628 300.529 481.628 337.878Z\" fill=\"#ED2226\"/\u003e\n\u003c/svg\u003e\r",
    "svgComplete": "",
    "svgWhite": "\u003csvg width=\"575\" height=\"575\" viewBox=\"0 0 575 575\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"\u003e\n\u003cpath d=\"M287.5 0C128.984 0 0 128.55 0 287.5C0 446.016 128.55 575 287.5 575C446.016 575 575 446.45 575 287.5C575 128.55 446.016 0 287.5 0ZM481.628 337.878C481.628 355.249 471.639 370.449 452.096 373.924C418.221 379.999 346.998 383.478 287.5 383.478C228.002 383.478 156.779 379.999 122.904 373.924C103.361 370.449 93.3724 355.249 93.3724 337.878V225.831C93.3724 208.459 106.835 192.39 122.904 189.785C132.893 188.048 156.344 186.31 174.585 186.31C181.533 186.31 187.179 191.522 187.179 199.773V278.38L287.934 276.208L388.69 278.38V199.773C388.69 191.522 394.335 186.31 401.284 186.31C419.524 186.31 442.976 188.048 452.965 189.785C469.468 192.39 482.496 208.459 482.496 225.831C481.628 262.745 481.628 300.529 481.628 337.878Z\" fill=\"white\"/\u003e\n\u003c/svg\u003e\r"
   },
   "model": {
    "version": "2.64.0"
   },
   "components": null,
   "relationships": null
  },
  "metadata": {
   "capabilities": "",
   "defaultData": "",
   "genealogy": "",
   "isAnnotation": false,
   "isNamespaced": true,
   "primaryColor": "#00B39F",
   "secondaryColor": "#00D3A9",
   "shape": "circle",
   "shapePolygonPoints": "",
   "status": "enabled",
   "styleOverrides": "",
   "styles": "",
   "subCategory": "",
   "svgColor": "\u003csvg width=\"575\" height=\"575\" viewBox=\"0 0 575 575\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"\u003e\n\u003cpath d=\"M287.5 0C128.984 0 0 128.55 0 287.5C0 446.016 128.55 575 287.5 575C446.016 575 575 446.45 575 287.5C575 128.55 446.016 0 287.5 0ZM481.628 337.878C481.628 355.249 471.639 370.449 452.096 373.924C418.221 379.999 346.998 383.478 287.5 383.478C228.002 383.478 156.779 379.999 122.904 373.924C103.361 370.449 93.3724 355.249 93.3724 337.878V225.831C93.3724 208.459 106.835 192.39 122.904 189.785C132.893 188.048 156.344 186.31 174.585 186.31C181.533 186.31 187.179 191.522 187.179 199.773V278.38L287.934 276.208L388.69 278.38V199.773C388.69 191.522 394.335 186.31 401.284 186.31C419.524 186.31 442.976 188.048 452.965 189.785C469.468 192.39 482.496 208.459 482.496 225.831C481.628 262.745 481.628 300.529 481.628 337.878Z\" fill=\"#ED2226\"/\u003e\n\u003c/svg\u003e\r",
   "svgComplete": "",
   "svgWhite": "\u003csvg width=\"575\" height=\"575\" viewBox=\"0 0 575 575\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"\u003e\n\u003cpath d=\"M287.5 0C128.984 0 0 128.55 0 287.5C0 446.016 128.55 575 287.5 575C446.016 575 575 446.45 575 287.5C575 128.55 446.016 0 287.5 0ZM481.628 337.878C481.628 355.249 471.639 370.449 452.096 373.924C418.221 379.999 346.998 383.478 287.5 383.478C228.002 383.478 156.779 379.999 122.904 373.924C103.361 370.449 93.3724 355.249 93.3724 337.878V225.831C93.3724 208.459 106.835 192.39 122.904 189.785C132.893 188.048 156.344 186.31 174.585 186.31C181.533 186.31 187.179 191.522 187.179 199.773V278.38L287.934 276.208L388.69 278.38V199.773C388.69 191.522 394.335 186.31 401.284 186.31C419.524 186.31 442.976 188.048 452.965 189.785C469.468 192.39 482.496 208.459 482.496 225.831C481.628 262.745 481.628 300.529 481.628 337.878Z\" fill=\"white\"/\u003e\n\u003c/svg\u003e\r"
  },
  "component": {
   "kind": "CouchbaseBucket",
   "version": "couchbase.com/v2",
   "schema": "{\n \"description\": \"The CouchbaseBucket resource defines a set of documents in Couchbase server. A Couchbase client connects to and operates on a bucket, which provides independent management of a set documents and a security boundary for role based access control. A CouchbaseBucket provides replication and persistence for documents contained by it.\",\n \"properties\": {\n  \"spec\": {\n   \"default\": {},\n   \"description\": \"CouchbaseBucketSpec is the specification for a Couchbase bucket resource, and allows the bucket to be customized.\",\n   \"properties\": {\n    \"compressionMode\": {\n     \"default\": \"passive\",\n     \"description\": \"CompressionMode defines how Couchbase server handles document compression.  When off, documents are stored in memory, and transferred to the client uncompressed. When passive, documents are stored compressed in memory, and transferred to the client compressed when requested.  When active, documents are stored compresses in memory and when transferred to the client.  This field must be \\\"off\\\", \\\"passive\\\" or \\\"active\\\", defaulting to \\\"passive\\\".  Be aware \\\"off\\\" in YAML 1.2 is a boolean, so must be quoted as a string in configuration files.\",\n     \"enum\": [\n      \"off\",\n      \"passive\",\n      \"active\"\n     ],\n     \"type\": \"string\"\n    },\n    \"conflictResolution\": {\n     \"default\": \"seqno\",\n     \"description\": \"ConflictResolution defines how XDCR handles concurrent write conflicts.  Sequence number based resolution selects the document with the highest sequence number as the most recent. Timestamp based resolution selects the document that was written to most recently as the most recent.  This field must be \\\"seqno\\\" (sequence based), or \\\"lww\\\" (timestamp based), defaulting to \\\"seqno\\\".\",\n     \"enum\": [\n      \"seqno\",\n      \"lww\"\n     ],\n     \"type\": \"string\"\n    },\n    \"enableFlush\": {\n     \"description\": \"EnableFlush defines whether a client can delete all documents in a bucket. This field defaults to false.\",\n     \"type\": \"boolean\"\n    },\n    \"enableIndexReplica\": {\n     \"description\": \"EnableIndexReplica defines whether indexes for this bucket are replicated. This field defaults to false.\",\n     \"type\": \"boolean\"\n    },\n    \"evictionPolicy\": {\n     \"default\": \"valueOnly\",\n     \"description\": \"EvictionPolicy controls how Couchbase handles memory exhaustion.  Value only eviction flushes documents to disk but maintains document metadata in memory in order to improve query performance.  Full eviction removes all data from memory after the document is flushed to disk.  This field must be \\\"valueOnly\\\" or \\\"fullEviction\\\", defaulting to \\\"valueOnly\\\".\",\n     \"enum\": [\n      \"valueOnly\",\n      \"fullEviction\"\n     ],\n     \"type\": \"string\"\n    },\n    \"ioPriority\": {\n     \"default\": \"low\",\n     \"description\": \"IOPriority controls how many threads a bucket has, per pod, to process reads and writes. This field must be \\\"low\\\" or \\\"high\\\", defaulting to \\\"low\\\".  Modification of this field will cause a temporary service disruption as threads are restarted.\",\n     \"enum\": [\n      \"low\",\n      \"high\"\n     ],\n     \"type\": \"string\"\n    },\n    \"maxTTL\": {\n     \"description\": \"MaxTTL defines how long a document is permitted to exist for, without modification, until it is automatically deleted.  This is a default and maximum time-to-live and may be set to a lower value by the client.  If the client specifies a higher value, then it is truncated to the maximum durability.  Documents are removed by Couchbase, after they have expired, when either accessed, the expiry pager is run, or the bucket is compacted.  When set to 0, then documents are not expired by default.  This field must be a duration in the range 0-2147483648s, defaulting to 0.  More info: https://golang.org/pkg/time/#ParseDuration\",\n     \"type\": \"string\"\n    },\n    \"memoryQuota\": {\n     \"anyOf\": [\n      {\n       \"type\": \"integer\"\n      },\n      {\n       \"type\": \"string\"\n      }\n     ],\n     \"default\": \"100Mi\",\n     \"description\": \"MemoryQuota is a memory limit to the size of a bucket.  When this limit is exceeded, documents will be evicted from memory to disk as defined by the eviction policy.  The memory quota is defined per Couchbase pod running the data service.  This field defaults to, and must be greater than or equal to 100Mi.  More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#resource-units-in-kubernetes\",\n     \"pattern\": \"^(\\\\+|-)?(([0-9]+(\\\\.[0-9]*)?)|(\\\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\\\+|-)?(([0-9]+(\\\\.[0-9]*)?)|(\\\\.[0-9]+))))?$\",\n     \"type\": \"string\",\n     \"x-kubernetes-int-or-string\": true\n    },\n    \"minimumDurability\": {\n     \"description\": \"MiniumumDurability defines how durable a document write is by default, and can be made more durable by the client.  This feature enables ACID transactions. When none, Couchbase server will respond when the document is in memory, it will become eventually consistent across the cluster.  When majority, Couchbase server will respond when the document is replicated to at least half of the pods running the data service in the cluster.  When majorityAndPersistActive, Couchbase server will respond when the document is replicated to at least half of the pods running the data service in the cluster and the document has been persisted to disk on the document master pod.  When persistToMajority, Couchbase server will respond when the document is replicated and persisted to disk on at least half of the pods running the data service in the cluster.  This field must be either \\\"none\\\", \\\"majority\\\", \\\"majorityAndPersistActive\\\" or \\\"persistToMajority\\\", defaulting to \\\"none\\\".\",\n     \"enum\": [\n      \"none\",\n      \"majority\",\n      \"majorityAndPersistActive\",\n      \"persistToMajority\"\n     ],\n     \"type\": \"string\"\n    },\n    \"name\": {\n     \"description\": \"Name is the name of the bucket within Couchbase server.  By default the Operator will use the `metadata.name` field to define the bucket name.  The `metadata.name` field only supports a subset of the supported character set.  When specified, this field overrides `metadata.name`.  Legal bucket names have a maximum length of 100 characters and may be composed of any character from \\\"a-z\\\", \\\"A-Z\\\", \\\"0-9\\\" and \\\"-_%\\\\.\\\".\",\n     \"maxLength\": 100,\n     \"pattern\": \"^[a-zA-Z0-9-_%\\\\.]{1,100}$\",\n     \"type\": \"string\"\n    },\n    \"replicas\": {\n     \"default\": 1,\n     \"description\": \"Replicas defines how many copies of documents Couchbase server maintains.  This directly affects how fault tolerant a Couchbase cluster is.  With a single replica, the cluster can tolerate one data pod going down and still service requests without data loss.  The number of replicas also affect memory use.  With a single replica, the effective memory quota for documents is halved, with two replicas it is one third.  The number of replicas must be between 0 and 3, defaulting to 1.\",\n     \"maximum\": 3,\n     \"minimum\": 0,\n     \"type\": \"integer\"\n    },\n    \"scopes\": {\n     \"description\": \"Scopes defines whether the Operator manages scopes for the bucket or not, and the set of scopes defined for the bucket.\",\n     \"properties\": {\n      \"managed\": {\n       \"description\": \"Managed defines whether scopes are managed for this bucket. This field is `false` by default, and the Operator will take no actions that will affect scopes and collections in this bucket.  The default scope and collection will be present.  When set to `true`, the Operator will manage user defined scopes, and optionally, their collections as defined by the `CouchbaseScope`, `CouchbaseScopeGroup`, `CouchbaseCollection` and `CouchbaseCollectionGroup` resource documentation.  If this field is set to `false` while the  already managed, then the Operator will leave whatever configuration is already present.\",\n       \"type\": \"boolean\"\n      },\n      \"resources\": {\n       \"description\": \"Resources is an explicit list of named resources that will be considered for inclusion in this bucket.  If a resource reference doesn't match a resource, then no error conditions are raised due to undefined resource creation ordering and eventual consistency.\",\n       \"items\": {\n        \"properties\": {\n         \"kind\": {\n          \"default\": \"CouchbaseScope\",\n          \"description\": \"Kind indicates the kind of resource that is being referenced.  A scope can only reference `CouchbaseScope` and `CouchbaseScopeGroup` resource kinds.  This field defaults to `CouchbaseScope` if not specified.\",\n          \"enum\": [\n           \"CouchbaseScope\",\n           \"CouchbaseScopeGroup\"\n          ],\n          \"type\": \"string\"\n         },\n         \"name\": {\n          \"description\": \"Name is the name of the Kubernetes resource name that is being referenced. Legal scope names have a maximum length of 251 characters and may be composed of any character from \\\"a-z\\\", \\\"A-Z\\\", \\\"0-9\\\" and \\\"_-%\\\".\",\n          \"maxLength\": 251,\n          \"minLength\": 1,\n          \"pattern\": \"^[a-zA-Z0-9\\\\-][a-zA-Z0-9\\\\-%_]{0,250}$\",\n          \"type\": \"string\"\n         }\n        },\n        \"required\": [\n         \"name\"\n        ],\n        \"type\": \"object\"\n       },\n       \"type\": \"array\"\n      },\n      \"selector\": {\n       \"description\": \"Selector allows resources to be implicitly considered for inclusion in this bucket.  More info: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.28/#labelselector-v1-meta\",\n       \"properties\": {\n        \"matchExpressions\": {\n         \"description\": \"matchExpressions is a list of label selector requirements. The requirements are ANDed.\",\n         \"items\": {\n          \"description\": \"A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.\",\n          \"properties\": {\n           \"key\": {\n            \"description\": \"key is the label key that the selector applies to.\",\n            \"type\": \"string\"\n           },\n           \"operator\": {\n            \"description\": \"operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.\",\n            \"type\": \"string\"\n           },\n           \"values\": {\n            \"description\": \"values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.\",\n            \"items\": {\n             \"type\": \"string\"\n            },\n            \"type\": \"array\"\n           }\n          },\n          \"required\": [\n           \"key\",\n           \"operator\"\n          ],\n          \"type\": \"object\"\n         },\n         \"type\": \"array\"\n        },\n        \"matchLabels\": {\n         \"additionalProperties\": {\n          \"type\": \"string\"\n         },\n         \"description\": \"matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \\\"key\\\", the operator is \\\"In\\\", and the values array contains only \\\"value\\\". The requirements are ANDed.\",\n         \"type\": \"object\"\n        }\n       },\n       \"type\": \"object\"\n      }\n     },\n     \"type\": \"object\"\n    },\n    \"storageBackend\": {\n     \"description\": \"StorageBackend to be assigned to and used by the bucket. Only valid for Couchbase Server 7.0.0 onward. Two different backend storage mechanisms can be used - \\\"couchstore\\\" or \\\"magma\\\", defaulting to \\\"couchstore\\\". This cannot be edited after bucket creation. Note: \\\"magma\\\" is only valid for Couchbase Server 7.1.0 onward.\",\n     \"enum\": [\n      \"couchstore\",\n      \"magma\"\n     ],\n     \"type\": \"string\"\n    }\n   },\n   \"type\": \"object\"\n  }\n },\n \"title\": \"Couchbase Bucket\",\n \"type\": \"object\"\n}"
  }
 }