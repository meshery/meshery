{
  "id": "00000000-0000-0000-0000-000000000000",
  "kind": "CouchbaseCollectionGroup",
  "apiVersion": "couchbase.com/v2",
  "displayName": "Couchbase Collection Group",
  "format": "JSON",
  "hostID": "00000000-0000-0000-0000-000000000000",
  "metadata": {
   "capabilities": "",
   "defaultData": "",
   "genealogy": "",
   "isAnnotation": false,
   "isNamespaced": true,
   "primaryColor": "",
   "published": false,
   "secondaryColor": "",
   "shape": "",
   "shapePolygonPoints": "",
   "styleOverrides": "",
   "styles": "",
   "subCategory": "",
   "svgColor": "",
   "svgComplete": "",
   "svgWhite": ""
  },
  "model": {
   "id": "00000000-0000-0000-0000-000000000000",
   "name": "couchbase-operator",
   "version": "2.61.0",
   "displayName": "Couchbase Operator",
   "status": "",
   "hostID": "00000000-0000-0000-0000-000000000000",
   "category": {
    "name": "App Definition and Development",
    "metadata": null
   },
   "metadata": {
    "isAnnotation": false,
    "published": false,
    "subCategory": "Database",
    "svgColor": "",
    "svgComplete": "",
    "svgWhite": ""
   },
   "components": null,
   "relationships": null
  },
  "schema": "{\n \"description\": \"CouchbaseCollectionGroup represent the finest grained size of data storage in Couchbase. Collections contain all documents and indexes in the system.  Collections also form the finest grain basis for role-based access control (RBAC) and cross-datacenter replication (XDCR).  In order to be considered by the Operator, every collection group must be referenced by a `CouchbaseScope` or `CouchbaseScopeGroup` resource.  Unlike the CouchbaseCollection resource, a collection group represents multiple collections, with common configuration parameters, to be expressed as a single resource, minimizing required configuration and Kubernetes API traffic.  It also forms the basis of Couchbase RBAC security boundaries.\",\n \"properties\": {\n  \"spec\": {\n   \"description\": \"Spec defines the desired state of the resource.\",\n   \"properties\": {\n    \"maxTTL\": {\n     \"description\": \"MaxTTL defines how long a document is permitted to exist for, without modification, until it is automatically deleted.  This field takes precedence over any TTL defined at the bucket level.  This is a default, and maximum time-to-live and may be set to a lower value by the client.  If the client specifies a higher value, then it is truncated to the maximum durability.  Documents are removed by Couchbase, after they have expired, when either accessed, the expiry pager is run, or the bucket is compacted.  When set to 0, then documents are not expired by default.  This field must be a duration in the range 0-2147483648s, defaulting to 0.  More info: https://golang.org/pkg/time/#ParseDuration\",\n     \"type\": \"string\"\n    },\n    \"names\": {\n     \"description\": \"Names specifies the names of the collections.  Unlike CouchbaseCollection, which specifies a single collection, a collection group specifies multiple, and the collection group must specify at least one collection name. Any collection names specified must be unique. Collection names must be 1-251 characters in length, contain only [a-zA-Z0-9_-%] and not start with either _ or %.\",\n     \"items\": {\n      \"description\": \"ScopeOrCollectionName is a generic type to capture a valid scope or collection name.  These must consist of 1-251 characters, include only A-Z, a-z, 0-9, -, _ or %, and must not start with _ (which is an internal marker) or % (which is probably an escape character in language X).\",\n      \"maxLength\": 251,\n      \"minLength\": 1,\n      \"pattern\": \"^[a-zA-Z0-9\\\\-][a-zA-Z0-9\\\\-%_]{0,250}$\",\n      \"type\": \"string\"\n     },\n     \"type\": \"array\",\n     \"x-kubernetes-list-type\": \"set\"\n    }\n   },\n   \"required\": [\n    \"names\"\n   ],\n   \"type\": \"object\"\n  }\n },\n \"required\": [\n  \"spec\"\n ],\n \"title\": \"Couchbase Collection Group\",\n \"type\": \"object\"\n}"
 }