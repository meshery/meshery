{"kind":"CloneSet","apiVersion":"apps.kruise.io/v1alpha1","displayName":"Clone Set","format":"JSON","hostname":"","hostID":"00000000-0000-0000-0000-000000000000","displayhostname":"","metadata":{"capabilities":"","genealogy":"","isAnnotation":false,"isModelAnnotation":"FALSE","isNamespaced":true,"logoURL":"","model":"contrail-analytics","modelDisplayName":"Contrail Analytics","primaryColor":"#00B39F","published":false,"secondaryColor":"#00D3A9","shape":"circle","styleOverrides":"","subCategory":"Not Found","svgColor":"","svgComplete":"","svgWhite":""},"model":{"name":"contrail-analytics","version":"22.2.0-rev0bb9dbbd1","displayName":"Contrail Analytics","hostname":"","hostID":"00000000-0000-0000-0000-000000000000","displayhostname":"","category":{"name":"Cloud Native Network","metadata":null},"metadata":{"source_uri":"https://jeffreymarshall.github.io/cn2-analytics-test/contrail-analytics-22.2.0.93.tgz"},"components":null,"relationships":null},"schema":"{\n \"description\": \"CloneSet is the Schema for the clonesets API\",\n \"properties\": {\n  \"spec\": {\n   \"description\": \"CloneSetSpec defines the desired state of CloneSet\",\n   \"properties\": {\n    \"lifecycle\": {\n     \"description\": \"Lifecycle defines the lifecycle hooks for Pods pre-delete, in-place update.\",\n     \"properties\": {\n      \"inPlaceUpdate\": {\n       \"description\": \"InPlaceUpdate is the hook before Pod to update and after Pod has been updated.\",\n       \"properties\": {\n        \"finalizersHandler\": {\n         \"items\": {\n          \"type\": \"string\"\n         },\n         \"type\": \"array\"\n        },\n        \"labelsHandler\": {\n         \"additionalProperties\": {\n          \"type\": \"string\"\n         },\n         \"type\": \"object\"\n        }\n       },\n       \"type\": \"object\"\n      },\n      \"preDelete\": {\n       \"description\": \"PreDelete is the hook before Pod to be deleted.\",\n       \"properties\": {\n        \"finalizersHandler\": {\n         \"items\": {\n          \"type\": \"string\"\n         },\n         \"type\": \"array\"\n        },\n        \"labelsHandler\": {\n         \"additionalProperties\": {\n          \"type\": \"string\"\n         },\n         \"type\": \"object\"\n        }\n       },\n       \"type\": \"object\"\n      }\n     },\n     \"type\": \"object\"\n    },\n    \"minReadySeconds\": {\n     \"description\": \"Minimum number of seconds for which a newly created pod should be ready without any of its container crashing, for it to be considered available. Defaults to 0 (pod will be considered available as soon as it is ready)\",\n     \"format\": \"int32\",\n     \"type\": \"integer\"\n    },\n    \"replicas\": {\n     \"description\": \"Replicas is the desired number of replicas of the given Template. These are replicas in the sense that they are instantiations of the same Template. If unspecified, defaults to 1.\",\n     \"format\": \"int32\",\n     \"type\": \"integer\"\n    },\n    \"revisionHistoryLimit\": {\n     \"description\": \"RevisionHistoryLimit is the maximum number of revisions that will be maintained in the CloneSet's revision history. The revision history consists of all revisions not represented by a currently applied CloneSetSpec version. The default value is 10.\",\n     \"format\": \"int32\",\n     \"type\": \"integer\"\n    },\n    \"scaleStrategy\": {\n     \"description\": \"ScaleStrategy indicates the ScaleStrategy that will be employed to create and delete Pods in the CloneSet.\",\n     \"properties\": {\n      \"maxUnavailable\": {\n       \"anyOf\": [\n        {\n         \"type\": \"integer\"\n        },\n        {\n         \"type\": \"string\"\n        }\n       ],\n       \"description\": \"The maximum number of pods that can be unavailable for scaled pods. This field can control the changes rate of replicas for CloneSet so as to minimize the impact for users' service. The scale will fail if the number of unavailable pods were greater than this MaxUnavailable at scaling up. MaxUnavailable works only when scaling up.\",\n       \"x-kubernetes-int-or-string\": true\n      },\n      \"podsToDelete\": {\n       \"description\": \"PodsToDelete is the names of Pod should be deleted. Note that this list will be truncated for non-existing pod names.\",\n       \"items\": {\n        \"type\": \"string\"\n       },\n       \"type\": \"array\"\n      }\n     },\n     \"type\": \"object\"\n    },\n    \"selector\": {\n     \"description\": \"Selector is a label query over pods that should match the replica count. It must match the pod template's labels. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#label-selectors\",\n     \"properties\": {\n      \"matchExpressions\": {\n       \"description\": \"matchExpressions is a list of label selector requirements. The requirements are ANDed.\",\n       \"items\": {\n        \"description\": \"A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.\",\n        \"properties\": {\n         \"key\": {\n          \"description\": \"key is the label key that the selector applies to.\",\n          \"type\": \"string\"\n         },\n         \"operator\": {\n          \"description\": \"operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.\",\n          \"type\": \"string\"\n         },\n         \"values\": {\n          \"description\": \"values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.\",\n          \"items\": {\n           \"type\": \"string\"\n          },\n          \"type\": \"array\"\n         }\n        },\n        \"required\": [\n         \"key\",\n         \"operator\"\n        ],\n        \"type\": \"object\"\n       },\n       \"type\": \"array\"\n      },\n      \"matchLabels\": {\n       \"additionalProperties\": {\n        \"type\": \"string\"\n       },\n       \"description\": \"matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \\\"key\\\", the operator is \\\"In\\\", and the values array contains only \\\"value\\\". The requirements are ANDed.\",\n       \"type\": \"object\"\n      }\n     },\n     \"type\": \"object\"\n    },\n    \"template\": {\n     \"description\": \"Template describes the pods that will be created.\",\n     \"format\": \"textarea\",\n     \"type\": \"string\"\n    },\n    \"updateStrategy\": {\n     \"description\": \"UpdateStrategy indicates the UpdateStrategy that will be employed to update Pods in the CloneSet when a revision is made to Template.\",\n     \"properties\": {\n      \"inPlaceUpdateStrategy\": {\n       \"description\": \"InPlaceUpdateStrategy contains strategies for in-place update.\",\n       \"properties\": {\n        \"gracePeriodSeconds\": {\n         \"description\": \"GracePeriodSeconds is the timespan between set Pod status to not-ready and update images in Pod spec when in-place update a Pod.\",\n         \"format\": \"int32\",\n         \"type\": \"integer\"\n        }\n       },\n       \"type\": \"object\"\n      },\n      \"maxSurge\": {\n       \"anyOf\": [\n        {\n         \"type\": \"integer\"\n        },\n        {\n         \"type\": \"string\"\n        }\n       ],\n       \"description\": \"The maximum number of pods that can be scheduled above the desired replicas during update or specified delete. Value can be an absolute number (ex: 5) or a percentage of desired pods (ex: 10%). Absolute number is calculated from percentage by rounding up. Defaults to 0.\",\n       \"x-kubernetes-int-or-string\": true\n      },\n      \"maxUnavailable\": {\n       \"anyOf\": [\n        {\n         \"type\": \"integer\"\n        },\n        {\n         \"type\": \"string\"\n        }\n       ],\n       \"description\": \"The maximum number of pods that can be unavailable during update or scale. Value can be an absolute number (ex: 5) or a percentage of desired pods (ex: 10%). Absolute number is calculated from percentage by rounding up by default. When maxSurge \\u003e 0, absolute number is calculated from percentage by rounding down. Defaults to 20%.\",\n       \"x-kubernetes-int-or-string\": true\n      },\n      \"partition\": {\n       \"anyOf\": [\n        {\n         \"type\": \"integer\"\n        },\n        {\n         \"type\": \"string\"\n        }\n       ],\n       \"description\": \"Partition is the desired number of pods in old revisions. Value can be an absolute number (ex: 5) or a percentage of desired pods (ex: 10%). Absolute number is calculated from percentage by rounding up by default. It means when partition is set during pods updating, (replicas - partition value) number of pods will be updated. Default value is 0.\",\n       \"x-kubernetes-int-or-string\": true\n      },\n      \"paused\": {\n       \"description\": \"Paused indicates that the CloneSet is paused. Default value is false\",\n       \"type\": \"boolean\"\n      },\n      \"priorityStrategy\": {\n       \"description\": \"Priorities are the rules for calculating the priority of updating pods. Each pod to be updated, will pass through these terms and get a sum of weights.\",\n       \"properties\": {\n        \"orderPriority\": {\n         \"description\": \"Order priority terms, pods will be sorted by the value of orderedKey. For example: ``` orderPriority: - orderedKey: key1 - orderedKey: key2 ``` First, all pods which have key1 in labels will be sorted by the value of key1. Then, the left pods which have no key1 but have key2 in labels will be sorted by the value of key2 and put behind those pods have key1.\",\n         \"items\": {\n          \"description\": \"UpdatePriorityOrder defines order priority.\",\n          \"properties\": {\n           \"orderedKey\": {\n            \"description\": \"Calculate priority by value of this key. Values of this key, will be sorted by GetInt(val). GetInt method will find the last int in value, such as getting 5 in value '5', getting 10 in value 'sts-10'.\",\n            \"type\": \"string\"\n           }\n          },\n          \"required\": [\n           \"orderedKey\"\n          ],\n          \"type\": \"object\"\n         },\n         \"type\": \"array\"\n        },\n        \"weightPriority\": {\n         \"description\": \"Weight priority terms, pods will be sorted by the sum of all terms weight.\",\n         \"items\": {\n          \"description\": \"UpdatePriorityWeightTerm defines weight priority.\",\n          \"properties\": {\n           \"matchSelector\": {\n            \"description\": \"MatchSelector is used to select by pod's labels.\",\n            \"properties\": {\n             \"matchExpressions\": {\n              \"description\": \"matchExpressions is a list of label selector requirements. The requirements are ANDed.\",\n              \"items\": {\n               \"description\": \"A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.\",\n               \"properties\": {\n                \"key\": {\n                 \"description\": \"key is the label key that the selector applies to.\",\n                 \"type\": \"string\"\n                },\n                \"operator\": {\n                 \"description\": \"operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.\",\n                 \"type\": \"string\"\n                },\n                \"values\": {\n                 \"description\": \"values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.\",\n                 \"items\": {\n                  \"type\": \"string\"\n                 },\n                 \"type\": \"array\"\n                }\n               },\n               \"required\": [\n                \"key\",\n                \"operator\"\n               ],\n               \"type\": \"object\"\n              },\n              \"type\": \"array\"\n             },\n             \"matchLabels\": {\n              \"additionalProperties\": {\n               \"type\": \"string\"\n              },\n              \"description\": \"matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \\\"key\\\", the operator is \\\"In\\\", and the values array contains only \\\"value\\\". The requirements are ANDed.\",\n              \"type\": \"object\"\n             }\n            },\n            \"type\": \"object\"\n           },\n           \"weight\": {\n            \"description\": \"Weight associated with matching the corresponding matchExpressions, in the range 1-100.\",\n            \"format\": \"int32\",\n            \"type\": \"integer\"\n           }\n          },\n          \"required\": [\n           \"matchSelector\",\n           \"weight\"\n          ],\n          \"type\": \"object\"\n         },\n         \"type\": \"array\"\n        }\n       },\n       \"type\": \"object\"\n      },\n      \"scatterStrategy\": {\n       \"description\": \"ScatterStrategy defines the scatter rules to make pods been scattered when update. This will avoid pods with the same key-value to be updated in one batch. - Note that pods will be scattered after priority sort. So, although priority strategy and scatter strategy can be applied together, we suggest to use either one of them. - If scatterStrategy is used, we suggest to just use one term. Otherwise, the update order can be hard to understand.\",\n       \"items\": {\n        \"properties\": {\n         \"key\": {\n          \"type\": \"string\"\n         },\n         \"value\": {\n          \"type\": \"string\"\n         }\n        },\n        \"required\": [\n         \"key\",\n         \"value\"\n        ],\n        \"type\": \"object\"\n       },\n       \"type\": \"array\"\n      },\n      \"type\": {\n       \"description\": \"Type indicates the type of the CloneSetUpdateStrategy. Default is ReCreate.\",\n       \"type\": \"string\"\n      }\n     },\n     \"type\": \"object\"\n    },\n    \"volumeClaimTemplates\": {\n     \"description\": \"VolumeClaimTemplates is a list of claims that pods are allowed to reference. Note that PVC will be deleted when its pod has been deleted.\",\n     \"format\": \"textarea\",\n     \"type\": \"string\"\n    }\n   },\n   \"required\": [\n    \"selector\",\n    \"template\"\n   ],\n   \"type\": \"object\"\n  }\n },\n \"title\": \"Clone Set\",\n \"type\": \"object\"\n}"}