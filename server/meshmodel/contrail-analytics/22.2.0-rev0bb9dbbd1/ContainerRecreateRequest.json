{"kind":"ContainerRecreateRequest","apiVersion":"apps.kruise.io/v1alpha1","displayName":"Container Recreate Request","format":"JSON","hostname":"","hostID":"00000000-0000-0000-0000-000000000000","displayhostname":"","metadata":{"capabilities":"","genealogy":"","isAnnotation":false,"isModelAnnotation":"FALSE","isNamespaced":true,"logoURL":"","model":"contrail-analytics","modelDisplayName":"Contrail Analytics","primaryColor":"#00B39F","published":false,"secondaryColor":"#00D3A9","shape":"circle","styleOverrides":"","subCategory":"Not Found","svgColor":"","svgComplete":"","svgWhite":""},"model":{"name":"contrail-analytics","version":"22.2.0-rev0bb9dbbd1","displayName":"Contrail Analytics","hostname":"","hostID":"00000000-0000-0000-0000-000000000000","displayhostname":"","category":{"name":"Cloud Native Network","metadata":null},"metadata":{"source_uri":"https://jeffreymarshall.github.io/cn2-analytics-test/contrail-analytics-22.2.0.93.tgz"},"components":null,"relationships":null},"schema":"{\n \"description\": \"ContainerRecreateRequest is the Schema for the containerrecreaterequests API\",\n \"properties\": {\n  \"spec\": {\n   \"description\": \"ContainerRecreateRequestSpec defines the desired state of ContainerRecreateRequest\",\n   \"properties\": {\n    \"activeDeadlineSeconds\": {\n     \"description\": \"ActiveDeadlineSeconds is the deadline duration of this ContainerRecreateRequest.\",\n     \"format\": \"int64\",\n     \"type\": \"integer\"\n    },\n    \"containers\": {\n     \"description\": \"Containers contains the containers that need to recreate in the Pod.\",\n     \"items\": {\n      \"description\": \"ContainerRecreateRequestContainer defines the container that need to recreate.\",\n      \"properties\": {\n       \"name\": {\n        \"description\": \"Name of the container that need to recreate. It must be existing in the real pod.Spec.Containers.\",\n        \"type\": \"string\"\n       },\n       \"ports\": {\n        \"description\": \"Ports is synced from the real container in Pod spec during this ContainerRecreateRequest creating. Populated by the system. Read-only.\",\n        \"items\": {\n         \"description\": \"ContainerPort represents a network port in a single container.\",\n         \"properties\": {\n          \"containerPort\": {\n           \"description\": \"Number of port to expose on the pod's IP address. This must be a valid port number, 0 \\u003c x \\u003c 65536.\",\n           \"format\": \"int32\",\n           \"type\": \"integer\"\n          },\n          \"hostIP\": {\n           \"description\": \"What host IP to bind the external port to.\",\n           \"type\": \"string\"\n          },\n          \"hostPort\": {\n           \"description\": \"Number of port to expose on the host. If specified, this must be a valid port number, 0 \\u003c x \\u003c 65536. If HostNetwork is specified, this must match ContainerPort. Most containers do not need this.\",\n           \"format\": \"int32\",\n           \"type\": \"integer\"\n          },\n          \"name\": {\n           \"description\": \"If specified, this must be an IANA_SVC_NAME and unique within the pod. Each named port in a pod must have a unique name. Name for the port that can be referred to by services.\",\n           \"type\": \"string\"\n          },\n          \"protocol\": {\n           \"default\": \"TCP\",\n           \"description\": \"Protocol for port. Must be UDP, TCP, or SCTP. Defaults to \\\"TCP\\\".\",\n           \"type\": \"string\"\n          }\n         },\n         \"required\": [\n          \"containerPort\"\n         ],\n         \"type\": \"object\"\n        },\n        \"type\": \"array\"\n       },\n       \"preStop\": {\n        \"description\": \"PreStop is synced from the real container in Pod spec during this ContainerRecreateRequest creating. Populated by the system. Read-only.\",\n        \"properties\": {\n         \"exec\": {\n          \"description\": \"One and only one of the following should be specified. Exec specifies the action to take.\",\n          \"properties\": {\n           \"command\": {\n            \"description\": \"Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.\",\n            \"items\": {\n             \"type\": \"string\"\n            },\n            \"type\": \"array\"\n           }\n          },\n          \"type\": \"object\"\n         },\n         \"httpGet\": {\n          \"description\": \"HTTPGet specifies the http request to perform.\",\n          \"properties\": {\n           \"host\": {\n            \"description\": \"Host name to connect to, defaults to the pod IP. You probably want to set \\\"Host\\\" in httpHeaders instead.\",\n            \"type\": \"string\"\n           },\n           \"httpHeaders\": {\n            \"description\": \"Custom headers to set in the request. HTTP allows repeated headers.\",\n            \"items\": {\n             \"description\": \"HTTPHeader describes a custom header to be used in HTTP probes\",\n             \"properties\": {\n              \"name\": {\n               \"description\": \"The header field name\",\n               \"type\": \"string\"\n              },\n              \"value\": {\n               \"description\": \"The header field value\",\n               \"type\": \"string\"\n              }\n             },\n             \"required\": [\n              \"name\",\n              \"value\"\n             ],\n             \"type\": \"object\"\n            },\n            \"type\": \"array\"\n           },\n           \"path\": {\n            \"description\": \"Path to access on the HTTP server.\",\n            \"type\": \"string\"\n           },\n           \"port\": {\n            \"anyOf\": [\n             {\n              \"type\": \"integer\"\n             },\n             {\n              \"type\": \"string\"\n             }\n            ],\n            \"description\": \"Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.\",\n            \"x-kubernetes-int-or-string\": true\n           },\n           \"scheme\": {\n            \"description\": \"Scheme to use for connecting to the host. Defaults to HTTP.\",\n            \"type\": \"string\"\n           }\n          },\n          \"required\": [\n           \"port\"\n          ],\n          \"type\": \"object\"\n         },\n         \"tcpSocket\": {\n          \"description\": \"TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook\",\n          \"properties\": {\n           \"host\": {\n            \"description\": \"Optional: Host name to connect to, defaults to the pod IP.\",\n            \"type\": \"string\"\n           },\n           \"port\": {\n            \"anyOf\": [\n             {\n              \"type\": \"integer\"\n             },\n             {\n              \"type\": \"string\"\n             }\n            ],\n            \"description\": \"Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.\",\n            \"x-kubernetes-int-or-string\": true\n           }\n          },\n          \"required\": [\n           \"port\"\n          ],\n          \"type\": \"object\"\n         }\n        },\n        \"type\": \"object\"\n       },\n       \"statusContext\": {\n        \"description\": \"StatusContext is synced from the real Pod status during this ContainerRecreateRequest creating. Populated by the system. Read-only.\",\n        \"properties\": {\n         \"containerID\": {\n          \"description\": \"Container's ID in the format 'docker://\\u003ccontainer_id\\u003e'.\",\n          \"type\": \"string\"\n         },\n         \"restartCount\": {\n          \"description\": \"The number of times the container has been restarted, currently based on the number of dead containers that have not yet been removed. Note that this is calculated from dead containers. But those containers are subject to garbage collection. This value will get capped at 5 by GC.\",\n          \"format\": \"int32\",\n          \"type\": \"integer\"\n         }\n        },\n        \"required\": [\n         \"containerID\",\n         \"restartCount\"\n        ],\n        \"type\": \"object\"\n       }\n      },\n      \"required\": [\n       \"name\"\n      ],\n      \"type\": \"object\"\n     },\n     \"type\": \"array\"\n    },\n    \"podName\": {\n     \"description\": \"PodName is name of the Pod that owns the recreated containers.\",\n     \"type\": \"string\"\n    },\n    \"strategy\": {\n     \"description\": \"Strategy defines strategies for containers recreation.\",\n     \"properties\": {\n      \"failurePolicy\": {\n       \"description\": \"FailurePolicy decides whether to continue if one container fails to recreate\",\n       \"type\": \"string\"\n      },\n      \"minStartedSeconds\": {\n       \"description\": \"Minimum number of seconds for which a newly created container should be started and ready without any of its container crashing, for it to be considered Succeeded. Defaults to 0 (container will be considered Succeeded as soon as it is started and ready)\",\n       \"format\": \"int32\",\n       \"type\": \"integer\"\n      },\n      \"orderedRecreate\": {\n       \"description\": \"OrderedRecreate indicates whether to recreate the next container only if the previous one has recreated completely.\",\n       \"type\": \"boolean\"\n      },\n      \"terminationGracePeriodSeconds\": {\n       \"description\": \"TerminationGracePeriodSeconds is the optional duration in seconds to wait the container terminating gracefully. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, we will use pod.Spec.TerminationGracePeriodSeconds as default value.\",\n       \"format\": \"int64\",\n       \"type\": \"integer\"\n      },\n      \"unreadyGracePeriodSeconds\": {\n       \"description\": \"UnreadyGracePeriodSeconds is the optional duration in seconds to mark Pod as not ready over this duration before executing preStop hook and stopping the container.\",\n       \"format\": \"int64\",\n       \"type\": \"integer\"\n      }\n     },\n     \"type\": \"object\"\n    },\n    \"ttlSecondsAfterFinished\": {\n     \"description\": \"TTLSecondsAfterFinished is the TTL duration after this ContainerRecreateRequest has completed.\",\n     \"format\": \"int32\",\n     \"type\": \"integer\"\n    }\n   },\n   \"required\": [\n    \"containers\",\n    \"podName\"\n   ],\n   \"type\": \"object\"\n  }\n },\n \"title\": \"Container Recreate Request\",\n \"type\": \"object\"\n}"}