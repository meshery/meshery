{"kind":"WorkloadSpread","apiVersion":"apps.kruise.io/v1alpha1","displayName":"Workload Spread","format":"JSON","hostname":"","hostID":"00000000-0000-0000-0000-000000000000","displayhostname":"","metadata":{"capabilities":"","genealogy":"","isAnnotation":false,"isModelAnnotation":"FALSE","isNamespaced":true,"logoURL":"","model":"contrail-analytics","modelDisplayName":"Contrail Analytics","primaryColor":"#00B39F","published":false,"secondaryColor":"#00D3A9","shape":"circle","styleOverrides":"","subCategory":"Not Found","svgColor":"","svgComplete":"","svgWhite":""},"model":{"name":"contrail-analytics","version":"22.2.0-rev0bb9dbbd1","displayName":"Contrail Analytics","hostname":"","hostID":"00000000-0000-0000-0000-000000000000","displayhostname":"","category":{"name":"Cloud Native Network","metadata":null},"metadata":{"source_uri":"https://jeffreymarshall.github.io/cn2-analytics-test/contrail-analytics-22.2.0.93.tgz"},"components":null,"relationships":null},"schema":"{\n \"description\": \"WorkloadSpread is the Schema for the WorkloadSpread API\",\n \"properties\": {\n  \"spec\": {\n   \"description\": \"WorkloadSpreadSpec defines the desired state of WorkloadSpread.\",\n   \"properties\": {\n    \"scheduleStrategy\": {\n     \"description\": \"ScheduleStrategy indicates the strategy the WorkloadSpread used to preform the schedule between each of subsets.\",\n     \"properties\": {\n      \"adaptive\": {\n       \"description\": \"Adaptive is used to communicate parameters when Type is AdaptiveWorkloadSpreadScheduleStrategyType.\",\n       \"properties\": {\n        \"disableSimulationSchedule\": {\n         \"description\": \"DisableSimulationSchedule indicates whether to disable the feature of simulation schedule. Default is false. Webhook can take a simple general predicates to check whether Pod can be scheduled into this subset, but it just considers the Node resource and cannot replace scheduler to do richer predicates practically.\",\n         \"type\": \"boolean\"\n        },\n        \"rescheduleCriticalSeconds\": {\n         \"description\": \"RescheduleCriticalSeconds indicates how long controller will reschedule a schedule failed Pod to the subset that has redundant capacity after the subset where the Pod lives. If a Pod was scheduled failed and still in a unschedulabe status over RescheduleCriticalSeconds duration, the controller will reschedule it to a suitable subset.\",\n         \"format\": \"int32\",\n         \"type\": \"integer\"\n        }\n       },\n       \"type\": \"object\"\n      },\n      \"type\": {\n       \"description\": \"Type indicates the type of the WorkloadSpreadScheduleStrategy. Default is Fixed\",\n       \"enum\": [\n        \"Adaptive\",\n        \"Fixed\",\n        \"\"\n       ],\n       \"type\": \"string\"\n      }\n     },\n     \"type\": \"object\"\n    },\n    \"subsets\": {\n     \"description\": \"Subsets describes the pods distribution details between each of subsets.\",\n     \"items\": {\n      \"description\": \"WorkloadSpreadSubset defines the details of a subset.\",\n      \"properties\": {\n       \"maxReplicas\": {\n        \"anyOf\": [\n         {\n          \"type\": \"integer\"\n         },\n         {\n          \"type\": \"string\"\n         }\n        ],\n        \"description\": \"MaxReplicas indicates the desired max replicas of this subset.\",\n        \"x-kubernetes-int-or-string\": true\n       },\n       \"name\": {\n        \"description\": \"Name should be unique between all of the subsets under one WorkloadSpread.\",\n        \"type\": \"string\"\n       },\n       \"patch\": {\n        \"description\": \"Patch indicates patching podTemplate to the Pod.\",\n        \"format\": \"textarea\",\n        \"type\": \"string\"\n       },\n       \"preferredNodeSelectorTerms\": {\n        \"description\": \"Indicates the node preferred selector to form the subset.\",\n        \"items\": {\n         \"description\": \"An empty preferred scheduling term matches all objects with implicit weight 0 (i.e. it's a no-op). A null preferred scheduling term matches no objects (i.e. is also a no-op).\",\n         \"properties\": {\n          \"preference\": {\n           \"description\": \"A node selector term, associated with the corresponding weight.\",\n           \"properties\": {\n            \"matchExpressions\": {\n             \"description\": \"A list of node selector requirements by node's labels.\",\n             \"items\": {\n              \"description\": \"A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.\",\n              \"properties\": {\n               \"key\": {\n                \"description\": \"The label key that the selector applies to.\",\n                \"type\": \"string\"\n               },\n               \"operator\": {\n                \"description\": \"Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.\",\n                \"type\": \"string\"\n               },\n               \"values\": {\n                \"description\": \"An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.\",\n                \"items\": {\n                 \"type\": \"string\"\n                },\n                \"type\": \"array\"\n               }\n              },\n              \"required\": [\n               \"key\",\n               \"operator\"\n              ],\n              \"type\": \"object\"\n             },\n             \"type\": \"array\"\n            },\n            \"matchFields\": {\n             \"description\": \"A list of node selector requirements by node's fields.\",\n             \"items\": {\n              \"description\": \"A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.\",\n              \"properties\": {\n               \"key\": {\n                \"description\": \"The label key that the selector applies to.\",\n                \"type\": \"string\"\n               },\n               \"operator\": {\n                \"description\": \"Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.\",\n                \"type\": \"string\"\n               },\n               \"values\": {\n                \"description\": \"An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.\",\n                \"items\": {\n                 \"type\": \"string\"\n                },\n                \"type\": \"array\"\n               }\n              },\n              \"required\": [\n               \"key\",\n               \"operator\"\n              ],\n              \"type\": \"object\"\n             },\n             \"type\": \"array\"\n            }\n           },\n           \"type\": \"object\"\n          },\n          \"weight\": {\n           \"description\": \"Weight associated with matching the corresponding nodeSelectorTerm, in the range 1-100.\",\n           \"format\": \"int32\",\n           \"type\": \"integer\"\n          }\n         },\n         \"required\": [\n          \"preference\",\n          \"weight\"\n         ],\n         \"type\": \"object\"\n        },\n        \"type\": \"array\"\n       },\n       \"requiredNodeSelectorTerm\": {\n        \"description\": \"Indicates the node required selector to form the subset.\",\n        \"properties\": {\n         \"matchExpressions\": {\n          \"description\": \"A list of node selector requirements by node's labels.\",\n          \"items\": {\n           \"description\": \"A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.\",\n           \"properties\": {\n            \"key\": {\n             \"description\": \"The label key that the selector applies to.\",\n             \"type\": \"string\"\n            },\n            \"operator\": {\n             \"description\": \"Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.\",\n             \"type\": \"string\"\n            },\n            \"values\": {\n             \"description\": \"An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.\",\n             \"items\": {\n              \"type\": \"string\"\n             },\n             \"type\": \"array\"\n            }\n           },\n           \"required\": [\n            \"key\",\n            \"operator\"\n           ],\n           \"type\": \"object\"\n          },\n          \"type\": \"array\"\n         },\n         \"matchFields\": {\n          \"description\": \"A list of node selector requirements by node's fields.\",\n          \"items\": {\n           \"description\": \"A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.\",\n           \"properties\": {\n            \"key\": {\n             \"description\": \"The label key that the selector applies to.\",\n             \"type\": \"string\"\n            },\n            \"operator\": {\n             \"description\": \"Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.\",\n             \"type\": \"string\"\n            },\n            \"values\": {\n             \"description\": \"An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.\",\n             \"items\": {\n              \"type\": \"string\"\n             },\n             \"type\": \"array\"\n            }\n           },\n           \"required\": [\n            \"key\",\n            \"operator\"\n           ],\n           \"type\": \"object\"\n          },\n          \"type\": \"array\"\n         }\n        },\n        \"type\": \"object\"\n       },\n       \"tolerations\": {\n        \"description\": \"Indicates the tolerations the pods under this subset have.\",\n        \"items\": {\n         \"description\": \"The pod this Toleration is attached to tolerates any taint that matches the triple \\u003ckey,value,effect\\u003e using the matching operator \\u003coperator\\u003e.\",\n         \"properties\": {\n          \"effect\": {\n           \"description\": \"Effect indicates the taint effect to match. Empty means match all taint effects. When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.\",\n           \"type\": \"string\"\n          },\n          \"key\": {\n           \"description\": \"Key is the taint key that the toleration applies to. Empty means match all taint keys. If the key is empty, operator must be Exists; this combination means to match all values and all keys.\",\n           \"type\": \"string\"\n          },\n          \"operator\": {\n           \"description\": \"Operator represents a key's relationship to the value. Valid operators are Exists and Equal. Defaults to Equal. Exists is equivalent to wildcard for value, so that a pod can tolerate all taints of a particular category.\",\n           \"type\": \"string\"\n          },\n          \"tolerationSeconds\": {\n           \"description\": \"TolerationSeconds represents the period of time the toleration (which must be of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default, it is not set, which means tolerate the taint forever (do not evict). Zero and negative values will be treated as 0 (evict immediately) by the system.\",\n           \"format\": \"int64\",\n           \"type\": \"integer\"\n          },\n          \"value\": {\n           \"description\": \"Value is the taint value the toleration matches to. If the operator is Exists, the value should be empty, otherwise just a regular string.\",\n           \"type\": \"string\"\n          }\n         },\n         \"type\": \"object\"\n        },\n        \"type\": \"array\"\n       }\n      },\n      \"required\": [\n       \"name\"\n      ],\n      \"type\": \"object\"\n     },\n     \"type\": \"array\"\n    },\n    \"targetRef\": {\n     \"description\": \"TargetReference is the target workload that WorkloadSpread want to control.\",\n     \"properties\": {\n      \"apiVersion\": {\n       \"description\": \"API version of the referent.\",\n       \"type\": \"string\"\n      },\n      \"kind\": {\n       \"description\": \"Kind of the referent.\",\n       \"type\": \"string\"\n      },\n      \"name\": {\n       \"description\": \"Name of the referent.\",\n       \"type\": \"string\"\n      }\n     },\n     \"required\": [\n      \"apiVersion\",\n      \"kind\",\n      \"name\"\n     ],\n     \"type\": \"object\"\n    }\n   },\n   \"required\": [\n    \"subsets\",\n    \"targetRef\"\n   ],\n   \"type\": \"object\"\n  }\n },\n \"title\": \"Workload Spread\",\n \"type\": \"object\"\n}"}