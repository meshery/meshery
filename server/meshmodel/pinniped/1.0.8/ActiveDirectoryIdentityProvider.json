{"kind":"ActiveDirectoryIdentityProvider","apiVersion":"idp.supervisor.pinniped.dev/v1alpha1","displayName":"Active Directory Identity Provider","format":"JSON","hostname":"","hostID":"00000000-0000-0000-0000-000000000000","displayhostname":"","metadata":{"capabilities":"","genealogy":"","isAnnotation":false,"isModelAnnotation":"FALSE","isNamespaced":true,"logoURL":"","model":"pinniped","modelDisplayName":"Pinniped","primaryColor":"#00B39F","published":false,"secondaryColor":"#00D3A9","shape":"circle","styleOverrides":"","subCategory":"Key Management","svgColor":"","svgComplete":"","svgWhite":""},"model":{"name":"pinniped","version":"1.0.8","displayName":"Pinniped","hostname":"","hostID":"00000000-0000-0000-0000-000000000000","displayhostname":"","category":{"name":"Security \u0026 Compliance","metadata":null},"metadata":{"source_uri":"https://charts.bitnami.com/bitnami/pinniped-1.4.4.tgz"},"components":null,"relationships":null},"schema":"{\n \"description\": \"ActiveDirectoryIdentityProvider describes the configuration of an upstream Microsoft Active Directory identity provider.\",\n \"properties\": {\n  \"spec\": {\n   \"description\": \"Spec for configuring the identity provider.\",\n   \"properties\": {\n    \"bind\": {\n     \"description\": \"Bind contains the configuration for how to provide access credentials during an initial bind to the ActiveDirectory server to be allowed to perform searches and binds to validate a user's credentials during a user's authentication attempt.\",\n     \"properties\": {\n      \"secretName\": {\n       \"description\": \"SecretName contains the name of a namespace-local Secret object that provides the username and password for an Active Directory bind user. This account will be used to perform LDAP searches. The Secret should be of type \\\"kubernetes.io/basic-auth\\\" which includes \\\"username\\\" and \\\"password\\\" keys. The username value should be the full dn (distinguished name) of your bind account, e.g. \\\"cn=bind-account,ou=users,dc=example,dc=com\\\". The password must be non-empty.\",\n       \"minLength\": 1,\n       \"type\": \"string\"\n      }\n     },\n     \"required\": [\n      \"secretName\"\n     ],\n     \"type\": \"object\"\n    },\n    \"groupSearch\": {\n     \"description\": \"GroupSearch contains the configuration for searching for a user's group membership in ActiveDirectory.\",\n     \"properties\": {\n      \"attributes\": {\n       \"description\": \"Attributes specifies how the group's information should be read from each ActiveDirectory entry which was found as the result of the group search.\",\n       \"properties\": {\n        \"groupName\": {\n         \"description\": \"GroupName specifies the name of the attribute in the Active Directory entries whose value shall become a group name in the user's list of groups after a successful authentication. The value of this field is case-sensitive and must match the case of the attribute name returned by the ActiveDirectory server in the user's entry. E.g. \\\"cn\\\" for common name. Distinguished names can be used by specifying lower-case \\\"dn\\\". Optional. When not specified, this defaults to a custom field that looks like \\\"sAMAccountName@domain\\\", where domain is constructed from the domain components of the group DN.\",\n         \"type\": \"string\"\n        }\n       },\n       \"type\": \"object\"\n      },\n      \"base\": {\n       \"description\": \"Base is the dn (distinguished name) that should be used as the search base when searching for groups. E.g. \\\"ou=groups,dc=example,dc=com\\\". Optional, when not specified it will be based on the result of a query for the defaultNamingContext (see https://docs.microsoft.com/en-us/windows/win32/adschema/rootdse). The default behavior searches your entire domain for groups. It may make sense to specify a subtree as a search base if you wish to exclude some groups for security reasons or to make searches faster.\",\n       \"type\": \"string\"\n      },\n      \"filter\": {\n       \"description\": \"Filter is the ActiveDirectory search filter which should be applied when searching for groups for a user. The pattern \\\"{}\\\" must occur in the filter at least once and will be dynamically replaced by the dn (distinguished name) of the user entry found as a result of the user search. E.g. \\\"member={}\\\" or \\\"\\u0026(objectClass=groupOfNames)(member={})\\\". For more information about ActiveDirectory filters, see https://ldap.com/ldap-filters. Note that the dn (distinguished name) is not an attribute of an entry, so \\\"dn={}\\\" cannot be used. Optional. When not specified, the default will act as if the filter were specified as \\\"(\\u0026(objectClass=group)(member:1.2.840.113556.1.4.1941:={})\\\". This searches nested groups by default. Note that nested group search can be slow for some Active Directory servers. To disable it, you can set the filter to \\\"(\\u0026(objectClass=group)(member={})\\\"\",\n       \"type\": \"string\"\n      },\n      \"skipGroupRefresh\": {\n       \"description\": \"The user's group membership is refreshed as they interact with the supervisor to obtain new credentials (as their old credentials expire).  This allows group membership changes to be quickly reflected into Kubernetes clusters.  Since group membership is often used to bind authorization policies, it is important to keep the groups observed in Kubernetes clusters in-sync with the identity provider. \\n In some environments, frequent group membership queries may result in a significant performance impact on the identity provider and/or the supervisor. The best approach to handle performance impacts is to tweak the group query to be more performant, for example by disabling nested group search or by using a more targeted group search base. \\n If the group search query cannot be made performant and you are willing to have group memberships remain static for approximately a day, then set skipGroupRefresh to true.  This is an insecure configuration as authorization policies that are bound to group membership will not notice if a user has been removed from a particular group until their next login. \\n This is an experimental feature that may be removed or significantly altered in the future.  Consumers of this configuration should carefully read all release notes before upgrading to ensure that the meaning of this field has not changed.\",\n       \"type\": \"boolean\"\n      }\n     },\n     \"type\": \"object\"\n    },\n    \"host\": {\n     \"description\": \"Host is the hostname of this Active Directory identity provider, i.e., where to connect. For example: ldap.example.com:636.\",\n     \"minLength\": 1,\n     \"type\": \"string\"\n    },\n    \"tls\": {\n     \"description\": \"TLS contains the connection settings for how to establish the connection to the Host.\",\n     \"properties\": {\n      \"certificateAuthorityData\": {\n       \"description\": \"X.509 Certificate Authority (base64-encoded PEM bundle). If omitted, a default set of system roots will be trusted.\",\n       \"type\": \"string\"\n      }\n     },\n     \"type\": \"object\"\n    },\n    \"userSearch\": {\n     \"description\": \"UserSearch contains the configuration for searching for a user by name in Active Directory.\",\n     \"properties\": {\n      \"attributes\": {\n       \"description\": \"Attributes specifies how the user's information should be read from the ActiveDirectory entry which was found as the result of the user search.\",\n       \"properties\": {\n        \"uid\": {\n         \"description\": \"UID specifies the name of the attribute in the ActiveDirectory entry which whose value shall be used to uniquely identify the user within this ActiveDirectory provider after a successful authentication. Optional, when empty this defaults to \\\"objectGUID\\\".\",\n         \"type\": \"string\"\n        },\n        \"username\": {\n         \"description\": \"Username specifies the name of the attribute in Active Directory entry whose value shall become the username of the user after a successful authentication. Optional, when empty this defaults to \\\"userPrincipalName\\\".\",\n         \"type\": \"string\"\n        }\n       },\n       \"type\": \"object\"\n      },\n      \"base\": {\n       \"description\": \"Base is the dn (distinguished name) that should be used as the search base when searching for users. E.g. \\\"ou=users,dc=example,dc=com\\\". Optional, when not specified it will be based on the result of a query for the defaultNamingContext (see https://docs.microsoft.com/en-us/windows/win32/adschema/rootdse). The default behavior searches your entire domain for users. It may make sense to specify a subtree as a search base if you wish to exclude some users or to make searches faster.\",\n       \"type\": \"string\"\n      },\n      \"filter\": {\n       \"description\": \"Filter is the search filter which should be applied when searching for users. The pattern \\\"{}\\\" must occur in the filter at least once and will be dynamically replaced by the username for which the search is being run. E.g. \\\"mail={}\\\" or \\\"\\u0026(objectClass=person)(uid={})\\\". For more information about LDAP filters, see https://ldap.com/ldap-filters. Note that the dn (distinguished name) is not an attribute of an entry, so \\\"dn={}\\\" cannot be used. Optional. When not specified, the default will be '(\\u0026(objectClass=person)(!(objectClass=computer))(!(showInAdvancedViewOnly=TRUE))(|(sAMAccountName={}\\\")(mail={})(userPrincipalName={})(sAMAccountType=805306368))' This means that the user is a person, is not a computer, the sAMAccountType is for a normal user account, and is not shown in advanced view only (which would likely mean its a system created service account with advanced permissions). Also, either the sAMAccountName, the userPrincipalName, or the mail attribute matches the input username.\",\n       \"type\": \"string\"\n      }\n     },\n     \"type\": \"object\"\n    }\n   },\n   \"required\": [\n    \"host\"\n   ],\n   \"type\": \"object\"\n  }\n },\n \"required\": [\n  \"spec\"\n ],\n \"title\": \"Active Directory Identity Provider\",\n \"type\": \"object\"\n}"}