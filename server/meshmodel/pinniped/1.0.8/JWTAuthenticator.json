{"kind":"JWTAuthenticator","apiVersion":"authentication.concierge.pinniped.dev/v1alpha1","displayName":"JWT Authenticator","format":"JSON","hostname":"","hostID":"00000000-0000-0000-0000-000000000000","displayhostname":"","metadata":{"capabilities":"","genealogy":"","isAnnotation":false,"isModelAnnotation":"FALSE","isNamespaced":false,"logoURL":"","model":"pinniped","modelDisplayName":"pinniped","primaryColor":"#00B39F","published":false,"secondaryColor":"#00D3A9","shape":"circle","styleOverrides":"","subCategory":"Key Management","svgColor":"","svgComplete":"","svgWhite":""},"model":{"name":"pinniped","version":"1.0.8","displayName":"pinniped","hostname":"","hostID":"00000000-0000-0000-0000-000000000000","displayhostname":"","category":{"name":"Security \u0026 Compliance","metadata":null},"metadata":{"source_uri":"https://charts.bitnami.com/bitnami/pinniped-1.4.4.tgz"},"components":null,"relationships":null},"schema":"{\n \"description\": \"JWTAuthenticator describes the configuration of a JWT authenticator. \\n Upon receiving a signed JWT, a JWTAuthenticator will performs some validation on it (e.g., valid signature, existence of claims, etc.) and extract the username and groups from the token.\",\n \"properties\": {\n  \"spec\": {\n   \"description\": \"Spec for configuring the authenticator.\",\n   \"properties\": {\n    \"audience\": {\n     \"description\": \"Audience is the required value of the \\\"aud\\\" JWT claim.\",\n     \"minLength\": 1,\n     \"type\": \"string\"\n    },\n    \"claims\": {\n     \"description\": \"Claims allows customization of the claims that will be mapped to user identity for Kubernetes access.\",\n     \"properties\": {\n      \"groups\": {\n       \"description\": \"Groups is the name of the claim which should be read to extract the user's group membership from the JWT token. When not specified, it will default to \\\"groups\\\".\",\n       \"type\": \"string\"\n      },\n      \"username\": {\n       \"description\": \"Username is the name of the claim which should be read to extract the username from the JWT token. When not specified, it will default to \\\"username\\\".\",\n       \"type\": \"string\"\n      }\n     },\n     \"type\": \"object\"\n    },\n    \"issuer\": {\n     \"description\": \"Issuer is the OIDC issuer URL that will be used to discover public signing keys. Issuer is also used to validate the \\\"iss\\\" JWT claim.\",\n     \"minLength\": 1,\n     \"pattern\": \"^https://\",\n     \"type\": \"string\"\n    },\n    \"tls\": {\n     \"description\": \"TLS configuration for communicating with the OIDC provider.\",\n     \"properties\": {\n      \"certificateAuthorityData\": {\n       \"description\": \"X.509 Certificate Authority (base64-encoded PEM bundle). If omitted, a default set of system roots will be trusted.\",\n       \"type\": \"string\"\n      }\n     },\n     \"type\": \"object\"\n    }\n   },\n   \"required\": [\n    \"audience\",\n    \"issuer\"\n   ],\n   \"type\": \"object\"\n  }\n },\n \"required\": [\n  \"spec\"\n ],\n \"title\": \"JWT Authenticator\",\n \"type\": \"object\"\n}"}