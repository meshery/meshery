{
  "id": "00000000-0000-0000-0000-000000000000",
  "kind": "FederationDomain",
  "apiVersion": "config.supervisor.pinniped.dev/v1alpha1",
  "displayName": "Federation Domain",
  "format": "JSON",
  "hostID": "00000000-0000-0000-0000-000000000000",
  "metadata": {
   "capabilities": "",
   "defaultData": "",
   "genealogy": "",
   "isAnnotation": false,
   "isModelAnnotation": "FALSE",
   "isNamespaced": true,
   "logoURL": "",
   "model": "pinniped",
   "modelDisplayName": "Pinniped",
   "primaryColor": "#00B39F",
   "published": false,
   "secondaryColor": "#00D3A9",
   "shape": "circle",
   "shapePolygonPoints": "",
   "styleOverrides": "",
   "styles": "",
   "subCategory": "",
   "svgColor": "",
   "svgComplete": "",
   "svgWhite": ""
  },
  "model": {
   "id": "00000000-0000-0000-0000-000000000000",
   "name": "pinniped",
   "version": "1.0.8",
   "displayName": "Pinniped",
   "hostID": "00000000-0000-0000-0000-000000000000",
   "category": {
    "name": "Security \u0026 Compliance",
    "metadata": null
   },
   "metadata": {
    "source_uri": "https://charts.bitnami.com/bitnami/pinniped-1.4.6.tgz"
   },
   "components": null,
   "relationships": null
  },
  "schema": "{\n \"description\": \"FederationDomain describes the configuration of an OIDC provider.\",\n \"properties\": {\n  \"spec\": {\n   \"description\": \"Spec of the OIDC provider.\",\n   \"properties\": {\n    \"identityProviders\": {\n     \"description\": \"IdentityProviders is the list of identity providers available for use by this FederationDomain. \\n An identity provider CR (e.g. OIDCIdentityProvider or LDAPIdentityProvider) describes how to connect to a server, how to talk in a specific protocol for authentication, and how to use the schema of that server/protocol to extract a normalized user identity. Normalized user identities include a username and a list of group names. In contrast, IdentityProviders describes how to use that normalized identity in those Kubernetes clusters which belong to this FederationDomain. Each entry in IdentityProviders can be configured with arbitrary transformations on that normalized identity. For example, a transformation can add a prefix to all usernames to help avoid accidental conflicts when multiple identity providers have different users with the same username (e.g. \\\"idp1:ryan\\\" versus \\\"idp2:ryan\\\"). Each entry in IdentityProviders can also implement arbitrary authentication rejection policies. Even though a user was able to authenticate with the identity provider, a policy can disallow the authentication to the Kubernetes clusters that belong to this FederationDomain. For example, a policy could disallow the authentication unless the user belongs to a specific group in the identity provider. \\n For backwards compatibility with versions of Pinniped which predate support for multiple identity providers, an empty IdentityProviders list will cause the FederationDomain to use all available identity providers which exist in the same namespace, but also to reject all authentication requests when there is more than one identity provider currently defined. In this backwards compatibility mode, the name of the identity provider resource (e.g. the Name of an OIDCIdentityProvider resource) will be used as the name of the identity provider in this FederationDomain. This mode is provided to make upgrading from older versions easier. However, instead of relying on this backwards compatibility mode, please consider this mode to be deprecated and please instead explicitly list the identity provider using this IdentityProviders field.\",\n     \"items\": {\n      \"description\": \"FederationDomainIdentityProvider describes how an identity provider is made available in this FederationDomain.\",\n      \"properties\": {\n       \"displayName\": {\n        \"description\": \"DisplayName is the name of this identity provider as it will appear to clients. This name ends up in the kubeconfig of end users, so changing the name of an identity provider that is in use by end users will be a disruptive change for those users.\",\n        \"minLength\": 1,\n        \"type\": \"string\"\n       },\n       \"objectRef\": {\n        \"description\": \"ObjectRef is a reference to a Pinniped identity provider resource. A valid reference is required. If the reference cannot be resolved then the identity provider will not be made available. Must refer to a resource of one of the Pinniped identity provider types, e.g. OIDCIdentityProvider, LDAPIdentityProvider, ActiveDirectoryIdentityProvider.\",\n        \"properties\": {\n         \"apiGroup\": {\n          \"description\": \"APIGroup is the group for the resource being referenced. If APIGroup is not specified, the specified Kind must be in the core API group. For any other third-party types, APIGroup is required.\",\n          \"type\": \"string\"\n         },\n         \"kind\": {\n          \"description\": \"Kind is the type of resource being referenced\",\n          \"type\": \"string\"\n         },\n         \"name\": {\n          \"description\": \"Name is the name of resource being referenced\",\n          \"type\": \"string\"\n         }\n        },\n        \"required\": [\n         \"kind\",\n         \"name\"\n        ],\n        \"type\": \"object\",\n        \"x-kubernetes-map-type\": \"atomic\"\n       },\n       \"transforms\": {\n        \"description\": \"Transforms is an optional way to specify transformations to be applied during user authentication and session refresh.\",\n        \"properties\": {\n         \"constants\": {\n          \"description\": \"Constants defines constant variables and their values which will be made available to the transform expressions.\",\n          \"items\": {\n           \"description\": \"FederationDomainTransformsConstant defines a constant variable and its value which will be made available to the transform expressions. This is a union type, and Type is the discriminator field.\",\n           \"properties\": {\n            \"name\": {\n             \"description\": \"Name determines the name of the constant. It must be a valid identifier name.\",\n             \"maxLength\": 64,\n             \"minLength\": 1,\n             \"pattern\": \"^[a-zA-Z][_a-zA-Z0-9]*$\",\n             \"type\": \"string\"\n            },\n            \"stringListValue\": {\n             \"description\": \"StringListValue should hold the value when Type is \\\"stringList\\\", and is otherwise ignored.\",\n             \"items\": {\n              \"type\": \"string\"\n             },\n             \"type\": \"array\"\n            },\n            \"stringValue\": {\n             \"description\": \"StringValue should hold the value when Type is \\\"string\\\", and is otherwise ignored.\",\n             \"type\": \"string\"\n            },\n            \"type\": {\n             \"description\": \"Type determines the type of the constant, and indicates which other field should be non-empty.\",\n             \"enum\": [\n              \"string\",\n              \"stringList\"\n             ],\n             \"type\": \"string\"\n            }\n           },\n           \"required\": [\n            \"name\",\n            \"type\"\n           ],\n           \"type\": \"object\"\n          },\n          \"type\": \"array\",\n          \"x-kubernetes-list-map-keys\": [\n           \"name\"\n          ],\n          \"x-kubernetes-list-type\": \"map\"\n         },\n         \"examples\": {\n          \"description\": \"Examples can optionally be used to ensure that the sequence of transformation expressions are working as expected. Examples define sample input identities which are then run through the expression list, and the results are compared to the expected results. If any example in this list fails, then this identity provider will not be available for use within this FederationDomain, and the error(s) will be added to the FederationDomain status. This can be used to help guard against programming mistakes in the expressions, and also act as living documentation for other administrators to better understand the expressions.\",\n          \"items\": {\n           \"description\": \"FederationDomainTransformsExample defines a transform example.\",\n           \"properties\": {\n            \"expects\": {\n             \"description\": \"Expects is the expected output of the entire sequence of transforms when they are run against the input Username and Groups.\",\n             \"properties\": {\n              \"groups\": {\n               \"description\": \"Groups is the expected list of group names after the transformations have been applied.\",\n               \"items\": {\n                \"type\": \"string\"\n               },\n               \"type\": \"array\"\n              },\n              \"message\": {\n               \"description\": \"Message is the expected error message of the transforms. When Rejected is true, then Message is the expected message for the policy which rejected the authentication attempt. When Rejected is true and Message is blank, then Message will be treated as the default error message for authentication attempts which are rejected by a policy. When Rejected is false, then Message is the expected error message for some other non-policy transformation error, such as a runtime error. When Rejected is false, there is no default expected Message.\",\n               \"type\": \"string\"\n              },\n              \"rejected\": {\n               \"description\": \"Rejected is a boolean that indicates whether authentication is expected to be rejected by a policy expression after the transformations have been applied. True means that it is expected that the authentication would be rejected. The default value of false means that it is expected that the authentication would not be rejected by any policy expression.\",\n               \"type\": \"boolean\"\n              },\n              \"username\": {\n               \"description\": \"Username is the expected username after the transformations have been applied.\",\n               \"type\": \"string\"\n              }\n             },\n             \"type\": \"object\"\n            },\n            \"groups\": {\n             \"description\": \"Groups is the input list of group names.\",\n             \"items\": {\n              \"type\": \"string\"\n             },\n             \"type\": \"array\"\n            },\n            \"username\": {\n             \"description\": \"Username is the input username.\",\n             \"minLength\": 1,\n             \"type\": \"string\"\n            }\n           },\n           \"required\": [\n            \"expects\",\n            \"username\"\n           ],\n           \"type\": \"object\"\n          },\n          \"type\": \"array\"\n         },\n         \"expressions\": {\n          \"description\": \"Expressions are an optional list of transforms and policies to be executed in the order given during every authentication attempt, including during every session refresh. Each is a CEL expression. It may use the basic CEL language as defined in https://github.com/google/cel-spec/blob/master/doc/langdef.md plus the CEL string extensions defined in https://github.com/google/cel-go/tree/master/ext#strings. \\n The username and groups extracted from the identity provider, and the constants defined in this CR, are available as variables in all expressions. The username is provided via a variable called `username` and the list of group names is provided via a variable called `groups` (which may be an empty list). Each user-provided constants is provided via a variable named `strConst.varName` for string constants and `strListConst.varName` for string list constants. \\n The only allowed types for expressions are currently policy/v1, username/v1, and groups/v1. Each policy/v1 must return a boolean, and when it returns false, no more expressions from the list are evaluated and the authentication attempt is rejected. Transformations of type policy/v1 do not return usernames or group names, and therefore cannot change the username or group names. Each username/v1 transform must return the new username (a string), which can be the same as the old username. Transformations of type username/v1 do not return group names, and therefore cannot change the group names. Each groups/v1 transform must return the new groups list (list of strings), which can be the same as the old groups list. Transformations of type groups/v1 do not return usernames, and therefore cannot change the usernames. After each expression, the new (potentially changed) username or groups get passed to the following expression. \\n Any compilation or static type-checking failure of any expression will cause an error status on the FederationDomain. During an authentication attempt, any unexpected runtime evaluation errors (e.g. division by zero) cause the authentication attempt to fail. When all expressions evaluate successfully, then the (potentially changed) username and group names have been decided for that authentication attempt.\",\n          \"items\": {\n           \"description\": \"FederationDomainTransformsExpression defines a transform expression.\",\n           \"properties\": {\n            \"expression\": {\n             \"description\": \"Expression is a CEL expression that will be evaluated based on the Type during an authentication.\",\n             \"minLength\": 1,\n             \"type\": \"string\"\n            },\n            \"message\": {\n             \"description\": \"Message is only used when Type is policy/v1. It defines an error message to be used when the policy rejects an authentication attempt. When empty, a default message will be used.\",\n             \"type\": \"string\"\n            },\n            \"type\": {\n             \"description\": \"Type determines the type of the expression. It must be one of the supported types.\",\n             \"enum\": [\n              \"policy/v1\",\n              \"username/v1\",\n              \"groups/v1\"\n             ],\n             \"type\": \"string\"\n            }\n           },\n           \"required\": [\n            \"expression\",\n            \"type\"\n           ],\n           \"type\": \"object\"\n          },\n          \"type\": \"array\"\n         }\n        },\n        \"type\": \"object\"\n       }\n      },\n      \"required\": [\n       \"displayName\",\n       \"objectRef\"\n      ],\n      \"type\": \"object\"\n     },\n     \"type\": \"array\"\n    },\n    \"issuer\": {\n     \"description\": \"Issuer is the OIDC Provider's issuer, per the OIDC Discovery Metadata document, as well as the identifier that it will use for the iss claim in issued JWTs. This field will also be used as the base URL for any endpoints used by the OIDC Provider (e.g., if your issuer is https://example.com/foo, then your authorization endpoint will look like https://example.com/foo/some/path/to/auth/endpoint). \\n See https://openid.net/specs/openid-connect-discovery-1_0.html#rfc.section.3 for more information.\",\n     \"minLength\": 1,\n     \"type\": \"string\"\n    },\n    \"tls\": {\n     \"description\": \"TLS specifies a secret which will contain Transport Layer Security (TLS) configuration for the FederationDomain.\",\n     \"properties\": {\n      \"secretName\": {\n       \"description\": \"SecretName is an optional name of a Secret in the same namespace, of type `kubernetes.io/tls`, which contains the TLS serving certificate for the HTTPS endpoints served by this FederationDomain. When provided, the TLS Secret named here must contain keys named `tls.crt` and `tls.key` that contain the certificate and private key to use for TLS. \\n Server Name Indication (SNI) is an extension to the Transport Layer Security (TLS) supported by all major browsers. \\n SecretName is required if you would like to use different TLS certificates for issuers of different hostnames. SNI requests do not include port numbers, so all issuers with the same DNS hostname must use the same SecretName value even if they have different port numbers. \\n SecretName is not required when you would like to use only the HTTP endpoints (e.g. when the HTTP listener is configured to listen on loopback interfaces or UNIX domain sockets for traffic from a service mesh sidecar). It is also not required when you would like all requests to this OIDC Provider's HTTPS endpoints to use the default TLS certificate, which is configured elsewhere. \\n When your Issuer URL's host is an IP address, then this field is ignored. SNI does not work for IP addresses.\",\n       \"type\": \"string\"\n      }\n     },\n     \"type\": \"object\"\n    }\n   },\n   \"required\": [\n    \"issuer\"\n   ],\n   \"type\": \"object\"\n  }\n },\n \"required\": [\n  \"spec\"\n ],\n \"title\": \"Federation Domain\",\n \"type\": \"object\"\n}"
 }