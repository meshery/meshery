{"kind":"ExtensionService","apiVersion":"projectcontour.io/v1alpha1","displayName":"Extension Service","format":"JSON","hostname":"","hostID":"00000000-0000-0000-0000-000000000000","displayhostname":"","metadata":{"capabilities":"","genealogy":"","isAnnotation":false,"isModelAnnotation":"FALSE","isNamespaced":true,"logoURL":"https://layer5.io/company/brand","model":"cno-agent","modelDisplayName":"Cno Agent","primaryColor":"#00B39F","published":false,"secondaryColor":"#00D3A9","shape":"circle","styleOverrides":"","subCategory":"Cloud Native Network","svgColor":"","svgComplete":"","svgWhite":""},"model":{"name":"cno-agent","version":"1.1.0","displayName":"Cno Agent","hostname":"","hostID":"00000000-0000-0000-0000-000000000000","displayhostname":"","category":{"name":"Cloud Native Network","metadata":null},"metadata":{"isAnnotation":false,"source_uri":"https://beopencloud.github.io/cno/cno-agent-v2.0.2.tgz"},"components":null,"relationships":null},"schema":"{\n \"description\": \"ExtensionService is the schema for the Contour extension services API. An ExtensionService resource binds a network service to the Contour API so that Contour API features can be implemented by collaborating components.\",\n \"properties\": {\n  \"spec\": {\n   \"description\": \"ExtensionServiceSpec defines the desired state of an ExtensionService resource.\",\n   \"properties\": {\n    \"loadBalancerPolicy\": {\n     \"description\": \"The policy for load balancing GRPC service requests. Note that the `Cookie` and `RequestHash` load balancing strategies cannot be used here.\",\n     \"properties\": {\n      \"requestHashPolicies\": {\n       \"description\": \"RequestHashPolicies contains a list of hash policies to apply when the `RequestHash` load balancing strategy is chosen. If an element of the supplied list of hash policies is invalid, it will be ignored. If the list of hash policies is empty after validation, the load balancing strategy will fall back the the default `RoundRobin`.\",\n       \"items\": {\n        \"description\": \"RequestHashPolicy contains configuration for an individual hash policy on a request attribute.\",\n        \"properties\": {\n         \"hashSourceIP\": {\n          \"description\": \"HashSourceIP should be set to true when request source IP hash based load balancing is desired. It must be the only hash option field set, otherwise this request hash policy object will be ignored.\",\n          \"type\": \"boolean\"\n         },\n         \"headerHashOptions\": {\n          \"description\": \"HeaderHashOptions should be set when request header hash based load balancing is desired. It must be the only hash option field set, otherwise this request hash policy object will be ignored.\",\n          \"properties\": {\n           \"headerName\": {\n            \"description\": \"HeaderName is the name of the HTTP request header that will be used to calculate the hash key. If the header specified is not present on a request, no hash will be produced.\",\n            \"minLength\": 1,\n            \"type\": \"string\"\n           }\n          },\n          \"type\": \"object\"\n         },\n         \"queryParameterHashOptions\": {\n          \"description\": \"QueryParameterHashOptions should be set when request query parameter hash based load balancing is desired. It must be the only hash option field set, otherwise this request hash policy object will be ignored.\",\n          \"properties\": {\n           \"parameterName\": {\n            \"description\": \"ParameterName is the name of the HTTP request query parameter that will be used to calculate the hash key. If the query parameter specified is not present on a request, no hash will be produced.\",\n            \"minLength\": 1,\n            \"type\": \"string\"\n           }\n          },\n          \"type\": \"object\"\n         },\n         \"terminal\": {\n          \"description\": \"Terminal is a flag that allows for short-circuiting computing of a hash for a given request. If set to true, and the request attribute specified in the attribute hash options is present, no further hash policies will be used to calculate a hash for the request.\",\n          \"type\": \"boolean\"\n         }\n        },\n        \"type\": \"object\"\n       },\n       \"type\": \"array\"\n      },\n      \"strategy\": {\n       \"description\": \"Strategy specifies the policy used to balance requests across the pool of backend pods. Valid policy names are `Random`, `RoundRobin`, `WeightedLeastRequest`, `Cookie`, and `RequestHash`. If an unknown strategy name is specified or no policy is supplied, the default `RoundRobin` policy is used.\",\n       \"type\": \"string\"\n      }\n     },\n     \"type\": \"object\"\n    },\n    \"protocol\": {\n     \"description\": \"Protocol may be used to specify (or override) the protocol used to reach this Service. Values may be h2 or h2c. If omitted, protocol-selection falls back on Service annotations.\",\n     \"enum\": [\n      \"h2\",\n      \"h2c\"\n     ],\n     \"type\": \"string\"\n    },\n    \"protocolVersion\": {\n     \"description\": \"This field sets the version of the GRPC protocol that Envoy uses to send requests to the extension service. Since Contour always uses the v3 Envoy API, this is currently fixed at \\\"v3\\\". However, other protocol options will be available in future.\",\n     \"enum\": [\n      \"v3\"\n     ],\n     \"type\": \"string\"\n    },\n    \"services\": {\n     \"description\": \"Services specifies the set of Kubernetes Service resources that receive GRPC extension API requests. If no weights are specified for any of the entries in this array, traffic will be spread evenly across all the services. Otherwise, traffic is balanced proportionally to the Weight field in each entry.\",\n     \"items\": {\n      \"description\": \"ExtensionServiceTarget defines an Kubernetes Service to target with extension service traffic.\",\n      \"properties\": {\n       \"name\": {\n        \"description\": \"Name is the name of Kubernetes service that will accept service traffic.\",\n        \"type\": \"string\"\n       },\n       \"port\": {\n        \"description\": \"Port (defined as Integer) to proxy traffic to since a service can have multiple defined.\",\n        \"exclusiveMaximum\": true,\n        \"maximum\": 65536,\n        \"minimum\": 1,\n        \"type\": \"integer\"\n       },\n       \"weight\": {\n        \"description\": \"Weight defines proportion of traffic to balance to the Kubernetes Service.\",\n        \"format\": \"int32\",\n        \"type\": \"integer\"\n       }\n      },\n      \"required\": [\n       \"name\",\n       \"port\"\n      ],\n      \"type\": \"object\"\n     },\n     \"minItems\": 1,\n     \"type\": \"array\"\n    },\n    \"timeoutPolicy\": {\n     \"description\": \"The timeout policy for requests to the services.\",\n     \"properties\": {\n      \"idle\": {\n       \"description\": \"Timeout for how long the proxy should wait while there is no activity during single request/response (for HTTP/1.1) or stream (for HTTP/2). Timeout will not trigger while HTTP/1.1 connection is idle between two consecutive requests. If not specified, there is no per-route idle timeout, though a connection manager-wide stream_idle_timeout default of 5m still applies.\",\n       \"pattern\": \"^(((\\\\d*(\\\\.\\\\d*)?h)|(\\\\d*(\\\\.\\\\d*)?m)|(\\\\d*(\\\\.\\\\d*)?s)|(\\\\d*(\\\\.\\\\d*)?ms)|(\\\\d*(\\\\.\\\\d*)?us)|(\\\\d*(\\\\.\\\\d*)?µs)|(\\\\d*(\\\\.\\\\d*)?ns))+|infinity|infinite)$\",\n       \"type\": \"string\"\n      },\n      \"idleConnection\": {\n       \"description\": \"Timeout for how long connection from the proxy to the upstream service is kept when there are no active requests. If not supplied, Envoy's default value of 1h applies.\",\n       \"pattern\": \"^(((\\\\d*(\\\\.\\\\d*)?h)|(\\\\d*(\\\\.\\\\d*)?m)|(\\\\d*(\\\\.\\\\d*)?s)|(\\\\d*(\\\\.\\\\d*)?ms)|(\\\\d*(\\\\.\\\\d*)?us)|(\\\\d*(\\\\.\\\\d*)?µs)|(\\\\d*(\\\\.\\\\d*)?ns))+|infinity|infinite)$\",\n       \"type\": \"string\"\n      },\n      \"response\": {\n       \"description\": \"Timeout for receiving a response from the server after processing a request from client. If not supplied, Envoy's default value of 15s applies.\",\n       \"pattern\": \"^(((\\\\d*(\\\\.\\\\d*)?h)|(\\\\d*(\\\\.\\\\d*)?m)|(\\\\d*(\\\\.\\\\d*)?s)|(\\\\d*(\\\\.\\\\d*)?ms)|(\\\\d*(\\\\.\\\\d*)?us)|(\\\\d*(\\\\.\\\\d*)?µs)|(\\\\d*(\\\\.\\\\d*)?ns))+|infinity|infinite)$\",\n       \"type\": \"string\"\n      }\n     },\n     \"type\": \"object\"\n    },\n    \"validation\": {\n     \"description\": \"UpstreamValidation defines how to verify the backend service's certificate\",\n     \"properties\": {\n      \"caSecret\": {\n       \"description\": \"Name or namespaced name of the Kubernetes secret used to validate the certificate presented by the backend. The secret must contain key named ca.crt.\",\n       \"type\": \"string\"\n      },\n      \"subjectName\": {\n       \"description\": \"Key which is expected to be present in the 'subjectAltName' of the presented certificate.\",\n       \"type\": \"string\"\n      }\n     },\n     \"required\": [\n      \"caSecret\",\n      \"subjectName\"\n     ],\n     \"type\": \"object\"\n    }\n   },\n   \"required\": [\n    \"services\"\n   ],\n   \"type\": \"object\"\n  }\n },\n \"title\": \"Extension Service\",\n \"type\": \"object\"\n}"}