{
  "capabilities": [
   {
    "description": "Initiate a performance test. Meshery will execute the load generation, collect metrics, and present the results.",
    "displayName": "Performance Test",
    "entityState": [
     "instance"
    ],
    "key": "",
    "kind": "action",
    "metadata": null,
    "schemaVersion": "capability.meshery.io/v1alpha1",
    "status": "enabled",
    "subType": "perf-test",
    "type": "operator",
    "version": "0.7.0"
   },
   {
    "description": "Configure the workload specific setting of a component",
    "displayName": "Workload Configuration",
    "entityState": [
     "declaration"
    ],
    "key": "",
    "kind": "mutate",
    "metadata": null,
    "schemaVersion": "capability.meshery.io/v1alpha1",
    "status": "enabled",
    "subType": "config",
    "type": "configuration",
    "version": "0.7.0"
   },
   {
    "description": "Configure Labels And Annotations for  the component ",
    "displayName": "Labels and Annotations Configuration",
    "entityState": [
     "declaration"
    ],
    "key": "",
    "kind": "mutate",
    "metadata": null,
    "schemaVersion": "capability.meshery.io/v1alpha1",
    "status": "enabled",
    "subType": "labels-and-annotations",
    "type": "configuration",
    "version": "0.7.0"
   },
   {
    "description": "View relationships for the component",
    "displayName": "Relationships",
    "entityState": [
     "declaration",
     "instance"
    ],
    "key": "",
    "kind": "view",
    "metadata": null,
    "schemaVersion": "capability.meshery.io/v1alpha1",
    "status": "enabled",
    "subType": "relationship",
    "type": "configuration",
    "version": "0.7.0"
   },
   {
    "description": "View Component Definition ",
    "displayName": "Json Schema",
    "entityState": [
     "declaration",
     "instance"
    ],
    "key": "",
    "kind": "view",
    "metadata": null,
    "schemaVersion": "capability.meshery.io/v1alpha1",
    "status": "enabled",
    "subType": "definition",
    "type": "configuration",
    "version": "0.7.0"
   },
   {
    "description": "Configure the visual styles for the component",
    "displayName": "Styling",
    "entityState": [
     "declaration"
    ],
    "key": "",
    "kind": "mutate",
    "metadata": null,
    "schemaVersion": "capability.meshery.io/v1alpha1",
    "status": "enabled",
    "subType": "",
    "type": "style",
    "version": "0.7.0"
   },
   {
    "description": "Change the shape of the component",
    "displayName": "Change Shape",
    "entityState": [
     "declaration"
    ],
    "key": "",
    "kind": "mutate",
    "metadata": null,
    "schemaVersion": "capability.meshery.io/v1alpha1",
    "status": "enabled",
    "subType": "shape",
    "type": "style",
    "version": "0.7.0"
   },
   {
    "description": "Drag and Drop a component into a parent component in graph view",
    "displayName": "Compound Drag And Drop",
    "entityState": [
     "declaration"
    ],
    "key": "",
    "kind": "interaction",
    "metadata": null,
    "schemaVersion": "capability.meshery.io/v1alpha1",
    "status": "enabled",
    "subType": "compoundDnd",
    "type": "graph",
    "version": "0.7.0"
   }
  ],
  "component": {
   "kind": "Receiver",
   "schema": "{\n \"description\": \"Receiver is the Schema for the receivers API\",\n \"properties\": {\n  \"spec\": {\n   \"description\": \"ReceiverSpec defines the desired state of Receiver\",\n   \"properties\": {\n    \"events\": {\n     \"description\": \"A list of events to handle, e.g. 'push' for GitHub or 'Push Hook' for GitLab.\",\n     \"items\": {\n      \"type\": \"string\"\n     },\n     \"type\": \"array\"\n    },\n    \"resources\": {\n     \"description\": \"A list of resources to be notified about changes.\",\n     \"items\": {\n      \"description\": \"CrossNamespaceObjectReference contains enough information to let you locate the typed referenced object at cluster level\",\n      \"properties\": {\n       \"apiVersion\": {\n        \"description\": \"API version of the referent\",\n        \"type\": \"string\"\n       },\n       \"kind\": {\n        \"description\": \"Kind of the referent\",\n        \"enum\": [\n         \"Bucket\",\n         \"GitRepository\",\n         \"Kustomization\",\n         \"HelmRelease\",\n         \"HelmChart\",\n         \"HelmRepository\",\n         \"ImageRepository\",\n         \"ImagePolicy\",\n         \"ImageUpdateAutomation\",\n         \"OCIRepository\"\n        ],\n        \"type\": \"string\"\n       },\n       \"matchLabels\": {\n        \"additionalProperties\": {\n         \"type\": \"string\"\n        },\n        \"description\": \"MatchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \\\"key\\\", the operator is \\\"In\\\", and the values array contains only \\\"value\\\". The requirements are ANDed.\",\n        \"type\": \"object\"\n       },\n       \"name\": {\n        \"description\": \"Name of the referent\",\n        \"maxLength\": 53,\n        \"minLength\": 1,\n        \"type\": \"string\"\n       },\n       \"namespace\": {\n        \"description\": \"Namespace of the referent\",\n        \"maxLength\": 53,\n        \"minLength\": 1,\n        \"type\": \"string\"\n       }\n      },\n      \"required\": [\n       \"name\"\n      ],\n      \"type\": \"object\"\n     },\n     \"type\": \"array\"\n    },\n    \"secretRef\": {\n     \"description\": \"Secret reference containing the token used to validate the payload authenticity\",\n     \"properties\": {\n      \"name\": {\n       \"description\": \"Name of the referent.\",\n       \"type\": \"string\"\n      }\n     },\n     \"required\": [\n      \"name\"\n     ],\n     \"type\": \"object\"\n    },\n    \"suspend\": {\n     \"description\": \"This flag tells the controller to suspend subsequent events handling. Defaults to false.\",\n     \"type\": \"boolean\"\n    },\n    \"type\": {\n     \"description\": \"Type of webhook sender, used to determine the validation procedure and payload deserialization.\",\n     \"enum\": [\n      \"generic\",\n      \"generic-hmac\",\n      \"github\",\n      \"gitlab\",\n      \"bitbucket\",\n      \"harbor\",\n      \"dockerhub\",\n      \"quay\",\n      \"gcr\",\n      \"nexus\",\n      \"acr\"\n     ],\n     \"type\": \"string\"\n    }\n   },\n   \"required\": [\n    \"resources\",\n    \"type\"\n   ],\n   \"type\": \"object\"\n  }\n },\n \"title\": \"Receiver\",\n \"type\": \"object\"\n}",
   "version": "notification.toolkit.fluxcd.io/v1beta1"
  },
  "configuration": null,
  "description": "",
  "displayName": "Receiver",
  "format": "JSON",
  "id": "00000000-0000-0000-0000-000000000000",
  "metadata": {
   "genealogy": "",
   "isAnnotation": false,
   "isNamespaced": true,
   "published": false
  },
  "model": {
   "category": {
    "name": "Uncategorized"
   },
   "displayName": "uffizzi-controller",
   "id": "00000000-0000-0000-0000-000000000000",
   "metadata": {
    "source_uri": "https://github.com/UffizziCloud/uffizzi_controller/releases/download/uffizzi-controller-2.3.8/uffizzi-controller-2.3.8.tgz",
    "svgColor": "",
    "svgWhite": ""
   },
   "model": {
    "version": "1.0.0"
   },
   "name": "uffizzi-controller",
   "registrant": {
    "created_at": "0001-01-01T00:00:00Z",
    "credential_id": "00000000-0000-0000-0000-000000000000",
    "deleted_at": "0001-01-01T00:00:00Z",
    "id": "00000000-0000-0000-0000-000000000000",
    "kind": "artifacthub",
    "name": "Artifact Hub",
    "status": "discovered",
    "sub_type": "",
    "type": "registry",
    "updated_at": "0001-01-01T00:00:00Z",
    "user_id": "00000000-0000-0000-0000-000000000000"
   },
   "connection_id": "00000000-0000-0000-0000-000000000000",
   "schemaVersion": "models.meshery.io/v1beta1",
   "status": "ignored",
   "version": "v1.0.0",
   "components": null,
   "relationships": null
  },
  "schemaVersion": "components.meshery.io/v1beta1",
  "status": "enabled",
  "styles": {
   "primaryColor": "#00B39F",
   "secondaryColor": "#00D3A9",
   "shape": "circle",
   "svgColor": "",
   "svgWhite": ""
  },
  "version": "v1.0.0"
 }