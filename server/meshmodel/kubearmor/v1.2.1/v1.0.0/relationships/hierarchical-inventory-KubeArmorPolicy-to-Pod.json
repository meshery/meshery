{
  "schemaVersion": "relationships.meshery.io/v1alpha2",
  "version": "v1.0.0",
  "kind": "Hierarchical",
  "metadata": {
    "description": "A hierarchical inventory relationship in which the configuration of (parent) component is patched with the configuration of other (child) component. In this case, the configuration of the Kubernetes Node (parent) component is patched with the configuration as received from KubeArmorHostPolicy (child) component."
  },
  "model": {
    "schemaVersion": "models.meshery.io/v1lpha2",
    "version": "v1.0.0",
    "name": "kubearmor",
    "model": {
      "version": "*"
    },
    "displayName": "KubeArmor",
    "category": {
      "name": "Provisioning",
      "metadata": null
    },
    "metadata": {}
  },
  "subType": "Inventory",
  "evaluationQuery": "hierarchical_inventory_relationship",
  "selectors": [
    {
      "allow": {
        "from": [
          {
            "kind": "KubeArmorPolicy",
            "model": "kubearmor",
            "patch": {
              "patchStrategy": "replace",
              "mutatorRef": [
                [
                  "name"
                ]
              ],
              "description": "KubeArmorPolicy defines rules governing system call behavior within Kubernetes Pods, ensuring security and compliance by controlling access to resources and actions. KubeArmorPolicy helps enforce fine-grained security measures tailored to specific application requirements and threat landscapes."
            }
          }
        ],
        "to": [
          {
            "kind": "Pod",
            "model": "kubernetes",
            "patch": {
              "patchStrategy": "replace",
              "mutatedRef": [
                [
                  "annotations",
                  "security.kubearmor.com/policy"
                ]
              ],
              "description": "Pods in Kubernetes are subjects to KubeArmorPolicy. KubeArmorPolicy defines security measures on the annotated Pods' system calls and resource access, enhancing the overall security posture of containerized workloads."
            }
          }
        ]
      },
      "deny": {
        "from": [],
        "to": []
      }
    }
  ]
}