{"kind":"ReplicationGroup","apiVersion":"elasticache.aws.kubeform.com/v1alpha1","displayName":"Replication Group","format":"JSON","metadata":{"genealogy":"","isNamespaced":false,"logoURL":"https://layer5.io/company/brand","model":"kubeform-provider-aws","modelDisplayName":"kubeform-provider-aws","primaryColor":"#00B39F","published":false,"secondaryColor":"#00D3A9","shape":"circle","styleOverrides":"","subCategory":"Uncategorized","svgColor":"","svgComplete":"","svgWhite":""},"model":{"name":"kubeform-provider-aws","version":"2022.5.11","displayName":"kubeform-provider-aws","category":{"name":"Uncategorized","metadata":null},"metadata":{"source_uri":"https://charts.appscode.com/stable/kubeform-provider-aws/kubeform-provider-aws-v2023.06.27.tgz"}},"schema":"{\n \"description\": \"ReplicationGroup is the Schema for the ReplicationGroups API. Provides an ElastiCache Replication Group resource.\",\n \"properties\": {\n  \"spec\": {\n   \"description\": \"ReplicationGroupSpec defines the desired state of ReplicationGroup\",\n   \"properties\": {\n    \"deletionPolicy\": {\n     \"default\": \"Delete\",\n     \"description\": \"DeletionPolicy specifies what will happen to the underlying external when this managed resource is deleted - either \\\"Delete\\\" or \\\"Orphan\\\" the external resource. This field is planned to be deprecated in favor of the ManagementPolicy field in a future release. Currently, both could be set independently and non-default values would be honored if the feature flag is enabled. See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223\",\n     \"enum\": [\n      \"Orphan\",\n      \"Delete\"\n     ],\n     \"type\": \"string\"\n    },\n    \"forProvider\": {\n     \"properties\": {\n      \"applyImmediately\": {\n       \"description\": \"Specifies whether any modifications are applied immediately, or during the next maintenance window. Default is false.\",\n       \"type\": \"boolean\"\n      },\n      \"atRestEncryptionEnabled\": {\n       \"description\": \"Whether to enable encryption at rest.\",\n       \"type\": \"boolean\"\n      },\n      \"authTokenSecretRef\": {\n       \"description\": \"Password used to access a password protected server. Can be specified only if transit_encryption_enabled = true.\",\n       \"properties\": {\n        \"key\": {\n         \"description\": \"The key to select.\",\n         \"type\": \"string\"\n        },\n        \"name\": {\n         \"description\": \"Name of the secret.\",\n         \"type\": \"string\"\n        },\n        \"namespace\": {\n         \"description\": \"Namespace of the secret.\",\n         \"type\": \"string\"\n        }\n       },\n       \"required\": [\n        \"key\",\n        \"name\",\n        \"namespace\"\n       ],\n       \"type\": \"object\"\n      },\n      \"autoMinorVersionUpgrade\": {\n       \"description\": \"Specifies whether minor version engine upgrades will be applied automatically to the underlying Cache Cluster instances during the maintenance window. Only supported for engine type \\\"redis\\\" and if the engine version is 6 or higher. Defaults to true.\",\n       \"type\": \"string\"\n      },\n      \"automaticFailoverEnabled\": {\n       \"description\": \"Specifies whether a read-only replica will be automatically promoted to read/write primary if the existing primary fails. If enabled, num_cache_clusters must be greater than 1. Must be enabled for Redis (cluster mode enabled) replication groups. Defaults to false.\",\n       \"type\": \"boolean\"\n      },\n      \"dataTieringEnabled\": {\n       \"description\": \"Enables data tiering. Data tiering is only supported for replication groups using the r6gd node type. This parameter must be set to true when using r6gd nodes.\",\n       \"type\": \"boolean\"\n      },\n      \"description\": {\n       \"description\": \"created description for the replication group. Must not be empty.\",\n       \"type\": \"string\"\n      },\n      \"engine\": {\n       \"description\": \"Name of the cache engine to be used for the clusters in this replication group. The only valid value is redis.\",\n       \"type\": \"string\"\n      },\n      \"engineVersion\": {\n       \"description\": \"Version number of the cache engine to be used for the cache clusters in this replication group. If the version is 6 or higher, the major and minor version can be set, e.g., 6.2, or the minor version can be unspecified which will use the latest version at creation time, e.g., 6.x. Otherwise, specify the full version desired, e.g., 5.0.6. The actual engine version used is returned in the attribute engine_version_actual, see Attributes Reference below.\",\n       \"type\": \"string\"\n      },\n      \"finalSnapshotIdentifier\": {\n       \"description\": \"The name of your final node group (shard) snapshot. ElastiCache creates the snapshot from the primary node in the cluster. If omitted, no final snapshot will be made.\",\n       \"type\": \"string\"\n      },\n      \"globalReplicationGroupId\": {\n       \"description\": \"The ID of the global replication group to which this replication group should belong. If this parameter is specified, the replication group is added to the specified global replication group as a secondary replication group; otherwise, the replication group is not part of any global replication group. If global_replication_group_id is set, the num_node_groups parameter cannot be set.\",\n       \"type\": \"string\"\n      },\n      \"kmsKeyId\": {\n       \"description\": \"The ARN of the key that you wish to use if encrypting at rest. If not supplied, uses service managed encryption. Can be specified only if at_rest_encryption_enabled = true.\",\n       \"type\": \"string\"\n      },\n      \"kmsKeyIdRef\": {\n       \"description\": \"Reference to a Key in kms to populate kmsKeyId.\",\n       \"properties\": {\n        \"name\": {\n         \"description\": \"Name of the referenced object.\",\n         \"type\": \"string\"\n        },\n        \"policy\": {\n         \"description\": \"Policies for referencing.\",\n         \"properties\": {\n          \"resolution\": {\n           \"default\": \"Required\",\n           \"description\": \"Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.\",\n           \"enum\": [\n            \"Required\",\n            \"Optional\"\n           ],\n           \"type\": \"string\"\n          },\n          \"resolve\": {\n           \"description\": \"Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.\",\n           \"enum\": [\n            \"Always\",\n            \"IfNotPresent\"\n           ],\n           \"type\": \"string\"\n          }\n         },\n         \"type\": \"object\"\n        }\n       },\n       \"required\": [\n        \"name\"\n       ],\n       \"type\": \"object\"\n      },\n      \"kmsKeyIdSelector\": {\n       \"description\": \"Selector for a Key in kms to populate kmsKeyId.\",\n       \"properties\": {\n        \"matchControllerRef\": {\n         \"description\": \"MatchControllerRef ensures an object with the same controller reference as the selecting object is selected.\",\n         \"type\": \"boolean\"\n        },\n        \"matchLabels\": {\n         \"additionalProperties\": {\n          \"type\": \"string\"\n         },\n         \"description\": \"MatchLabels ensures an object with matching labels is selected.\",\n         \"type\": \"object\"\n        },\n        \"policy\": {\n         \"description\": \"Policies for selection.\",\n         \"properties\": {\n          \"resolution\": {\n           \"default\": \"Required\",\n           \"description\": \"Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.\",\n           \"enum\": [\n            \"Required\",\n            \"Optional\"\n           ],\n           \"type\": \"string\"\n          },\n          \"resolve\": {\n           \"description\": \"Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.\",\n           \"enum\": [\n            \"Always\",\n            \"IfNotPresent\"\n           ],\n           \"type\": \"string\"\n          }\n         },\n         \"type\": \"object\"\n        }\n       },\n       \"type\": \"object\"\n      },\n      \"logDeliveryConfiguration\": {\n       \"description\": \"Specifies the destination and format of Redis SLOWLOG or Redis Engine Log. See the documentation on Amazon ElastiCache. See Log Delivery Configuration below for more details.\",\n       \"items\": {\n        \"properties\": {\n         \"destination\": {\n          \"description\": \"Name of either the CloudWatch Logs LogGroup or Kinesis Data Firehose resource.\",\n          \"type\": \"string\"\n         },\n         \"destinationType\": {\n          \"description\": \"For CloudWatch Logs use cloudwatch-logs or for Kinesis Data Firehose use kinesis-firehose.\",\n          \"type\": \"string\"\n         },\n         \"logFormat\": {\n          \"description\": \"Valid values are json or text\",\n          \"type\": \"string\"\n         },\n         \"logType\": {\n          \"description\": \"Valid values are  slow-log or engine-log. Max 1 of each.\",\n          \"type\": \"string\"\n         }\n        },\n        \"required\": [\n         \"destination\",\n         \"destinationType\",\n         \"logFormat\",\n         \"logType\"\n        ],\n        \"type\": \"object\"\n       },\n       \"type\": \"array\"\n      },\n      \"maintenanceWindow\": {\n       \"description\": \"ddd:hh24:mi (24H Clock UTC). The minimum maintenance window is a 60 minute period. Example: sun:05:00-sun:09:00\",\n       \"type\": \"string\"\n      },\n      \"multiAzEnabled\": {\n       \"description\": \"Specifies whether to enable Multi-AZ Support for the replication group. If true, automatic_failover_enabled must also be enabled. Defaults to false.\",\n       \"type\": \"boolean\"\n      },\n      \"nodeType\": {\n       \"description\": \"Instance class to be used. See AWS documentation for information on supported node types and guidance on selecting node types. Required unless global_replication_group_id is set. Cannot be set if global_replication_group_id is set.\",\n       \"type\": \"string\"\n      },\n      \"notificationTopicArn\": {\n       \"description\": \"east-1:012345678999:my_sns_topic\",\n       \"type\": \"string\"\n      },\n      \"numCacheClusters\": {\n       \"description\": \"00#.\",\n       \"type\": \"number\"\n      },\n      \"numNodeGroups\": {\n       \"description\": \"Number of node groups (shards) for this Redis replication group. Changing this number will trigger a resizing operation before other settings modifications.\",\n       \"type\": \"number\"\n      },\n      \"parameterGroupName\": {\n       \"description\": \"Name of the parameter group to associate with this replication group. If this argument is omitted, the default cache parameter group for the specified engine is used. To enable \\\"cluster mode\\\", i.e., data sharding, use a parameter group that has the parameter cluster-enabled set to true.\",\n       \"type\": \"string\"\n      },\n      \"port\": {\n       \"description\": \"–  Port number on which each of the cache nodes will accept connections. For Memcache the default is 11211, and for Redis the default port is 6379.\",\n       \"type\": \"number\"\n      },\n      \"preferredCacheClusterAzs\": {\n       \"description\": \"List of EC2 availability zones in which the replication group's cache clusters will be created. The order of the availability zones in the list is considered. The first item in the list will be the primary node. Ignored when updating.\",\n       \"items\": {\n        \"type\": \"string\"\n       },\n       \"type\": \"array\"\n      },\n      \"region\": {\n       \"description\": \"Region is the region you'd like your resource to be created in.\",\n       \"type\": \"string\"\n      },\n      \"replicasPerNodeGroup\": {\n       \"description\": \"Number of replica nodes in each node group. Changing this number will trigger a resizing operation before other settings modifications. Valid values are 0 to 5.\",\n       \"type\": \"number\"\n      },\n      \"securityGroupIds\": {\n       \"description\": \"One or more Amazon VPC security groups associated with this replication group. Use this parameter only when you are creating a replication group in an Amazon Virtual Private Cloud\",\n       \"items\": {\n        \"type\": \"string\"\n       },\n       \"type\": \"array\"\n      },\n      \"securityGroupNames\": {\n       \"description\": \"List of cache security group names to associate with this replication group.\",\n       \"items\": {\n        \"type\": \"string\"\n       },\n       \"type\": \"array\"\n      },\n      \"snapshotArns\": {\n       \"description\": \"–  List of ARNs that identify Redis RDB snapshot files stored in Amazon S3. The names object names cannot contain any commas.\",\n       \"items\": {\n        \"type\": \"string\"\n       },\n       \"type\": \"array\"\n      },\n      \"snapshotName\": {\n       \"description\": \"Name of a snapshot from which to restore data into the new node group. Changing the snapshot_name forces a new resource.\",\n       \"type\": \"string\"\n      },\n      \"snapshotRetentionLimit\": {\n       \"description\": \"Number of days for which ElastiCache will retain automatic cache cluster snapshots before deleting them. For example, if you set SnapshotRetentionLimit to 5, then a snapshot that was taken today will be retained for 5 days before being deleted. If the value of snapshot_retention_limit is set to zero (0), backups are turned off. Please note that setting a snapshot_retention_limit is not supported on cache.t1.micro cache nodes\",\n       \"type\": \"number\"\n      },\n      \"snapshotWindow\": {\n       \"description\": \"Daily time range (in UTC) during which ElastiCache will begin taking a daily snapshot of your cache cluster. The minimum snapshot window is a 60 minute period. Example: 05:00-09:00\",\n       \"type\": \"string\"\n      },\n      \"subnetGroupName\": {\n       \"description\": \"Name of the cache subnet group to be used for the replication group.\",\n       \"type\": \"string\"\n      },\n      \"subnetGroupNameRef\": {\n       \"description\": \"Reference to a SubnetGroup to populate subnetGroupName.\",\n       \"properties\": {\n        \"name\": {\n         \"description\": \"Name of the referenced object.\",\n         \"type\": \"string\"\n        },\n        \"policy\": {\n         \"description\": \"Policies for referencing.\",\n         \"properties\": {\n          \"resolution\": {\n           \"default\": \"Required\",\n           \"description\": \"Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.\",\n           \"enum\": [\n            \"Required\",\n            \"Optional\"\n           ],\n           \"type\": \"string\"\n          },\n          \"resolve\": {\n           \"description\": \"Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.\",\n           \"enum\": [\n            \"Always\",\n            \"IfNotPresent\"\n           ],\n           \"type\": \"string\"\n          }\n         },\n         \"type\": \"object\"\n        }\n       },\n       \"required\": [\n        \"name\"\n       ],\n       \"type\": \"object\"\n      },\n      \"subnetGroupNameSelector\": {\n       \"description\": \"Selector for a SubnetGroup to populate subnetGroupName.\",\n       \"properties\": {\n        \"matchControllerRef\": {\n         \"description\": \"MatchControllerRef ensures an object with the same controller reference as the selecting object is selected.\",\n         \"type\": \"boolean\"\n        },\n        \"matchLabels\": {\n         \"additionalProperties\": {\n          \"type\": \"string\"\n         },\n         \"description\": \"MatchLabels ensures an object with matching labels is selected.\",\n         \"type\": \"object\"\n        },\n        \"policy\": {\n         \"description\": \"Policies for selection.\",\n         \"properties\": {\n          \"resolution\": {\n           \"default\": \"Required\",\n           \"description\": \"Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.\",\n           \"enum\": [\n            \"Required\",\n            \"Optional\"\n           ],\n           \"type\": \"string\"\n          },\n          \"resolve\": {\n           \"description\": \"Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.\",\n           \"enum\": [\n            \"Always\",\n            \"IfNotPresent\"\n           ],\n           \"type\": \"string\"\n          }\n         },\n         \"type\": \"object\"\n        }\n       },\n       \"type\": \"object\"\n      },\n      \"tags\": {\n       \"additionalProperties\": {\n        \"type\": \"string\"\n       },\n       \"description\": \"Map of tags to assign to the resource. Adding tags to this resource will add or overwrite any existing tags on the clusters in the replication group and not to the group itself. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.\",\n       \"type\": \"object\"\n      },\n      \"tagsAll\": {\n       \"additionalProperties\": {\n        \"type\": \"string\"\n       },\n       \"description\": \"Map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.\",\n       \"type\": \"object\"\n      },\n      \"transitEncryptionEnabled\": {\n       \"description\": \"Whether to enable encryption in transit.\",\n       \"type\": \"boolean\"\n      },\n      \"userGroupIds\": {\n       \"description\": \"User Group ID to associate with the replication group. Only a maximum of one (1) user group ID is valid. NOTE: This argument is a set because the AWS specification allows for multiple IDs. However, in practice, AWS only allows a maximum size of one.\",\n       \"items\": {\n        \"type\": \"string\"\n       },\n       \"type\": \"array\"\n      }\n     },\n     \"type\": \"object\"\n    },\n    \"managementPolicy\": {\n     \"default\": \"FullControl\",\n     \"description\": \"THIS IS AN ALPHA FIELD. Do not use it in production. It is not honored unless the relevant Crossplane feature flag is enabled, and may be changed or removed without notice. ManagementPolicy specifies the level of control Crossplane has over the managed external resource. This field is planned to replace the DeletionPolicy field in a future release. Currently, both could be set independently and non-default values would be honored if the feature flag is enabled. See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223\",\n     \"enum\": [\n      \"FullControl\",\n      \"ObserveOnly\",\n      \"OrphanOnDelete\"\n     ],\n     \"type\": \"string\"\n    },\n    \"providerConfigRef\": {\n     \"default\": {\n      \"name\": \"default\"\n     },\n     \"description\": \"ProviderConfigReference specifies how the provider that will be used to create, observe, update, and delete this managed resource should be configured.\",\n     \"properties\": {\n      \"name\": {\n       \"description\": \"Name of the referenced object.\",\n       \"type\": \"string\"\n      },\n      \"policy\": {\n       \"description\": \"Policies for referencing.\",\n       \"properties\": {\n        \"resolution\": {\n         \"default\": \"Required\",\n         \"description\": \"Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.\",\n         \"enum\": [\n          \"Required\",\n          \"Optional\"\n         ],\n         \"type\": \"string\"\n        },\n        \"resolve\": {\n         \"description\": \"Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.\",\n         \"enum\": [\n          \"Always\",\n          \"IfNotPresent\"\n         ],\n         \"type\": \"string\"\n        }\n       },\n       \"type\": \"object\"\n      }\n     },\n     \"required\": [\n      \"name\"\n     ],\n     \"type\": \"object\"\n    },\n    \"providerRef\": {\n     \"description\": \"ProviderReference specifies the provider that will be used to create, observe, update, and delete this managed resource. Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`\",\n     \"properties\": {\n      \"name\": {\n       \"description\": \"Name of the referenced object.\",\n       \"type\": \"string\"\n      },\n      \"policy\": {\n       \"description\": \"Policies for referencing.\",\n       \"properties\": {\n        \"resolution\": {\n         \"default\": \"Required\",\n         \"description\": \"Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.\",\n         \"enum\": [\n          \"Required\",\n          \"Optional\"\n         ],\n         \"type\": \"string\"\n        },\n        \"resolve\": {\n         \"description\": \"Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.\",\n         \"enum\": [\n          \"Always\",\n          \"IfNotPresent\"\n         ],\n         \"type\": \"string\"\n        }\n       },\n       \"type\": \"object\"\n      }\n     },\n     \"required\": [\n      \"name\"\n     ],\n     \"type\": \"object\"\n    },\n    \"publishConnectionDetailsTo\": {\n     \"description\": \"PublishConnectionDetailsTo specifies the connection secret config which contains a name, metadata and a reference to secret store config to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource.\",\n     \"properties\": {\n      \"configRef\": {\n       \"default\": {\n        \"name\": \"default\"\n       },\n       \"description\": \"SecretStoreConfigRef specifies which secret store config should be used for this ConnectionSecret.\",\n       \"properties\": {\n        \"name\": {\n         \"description\": \"Name of the referenced object.\",\n         \"type\": \"string\"\n        },\n        \"policy\": {\n         \"description\": \"Policies for referencing.\",\n         \"properties\": {\n          \"resolution\": {\n           \"default\": \"Required\",\n           \"description\": \"Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.\",\n           \"enum\": [\n            \"Required\",\n            \"Optional\"\n           ],\n           \"type\": \"string\"\n          },\n          \"resolve\": {\n           \"description\": \"Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.\",\n           \"enum\": [\n            \"Always\",\n            \"IfNotPresent\"\n           ],\n           \"type\": \"string\"\n          }\n         },\n         \"type\": \"object\"\n        }\n       },\n       \"required\": [\n        \"name\"\n       ],\n       \"type\": \"object\"\n      },\n      \"metadata\": {\n       \"description\": \"Metadata is the metadata for connection secret.\",\n       \"properties\": {\n        \"annotations\": {\n         \"additionalProperties\": {\n          \"type\": \"string\"\n         },\n         \"description\": \"Annotations are the annotations to be added to connection secret. - For Kubernetes secrets, this will be used as \\\"metadata.annotations\\\". - It is up to Secret Store implementation for others store types.\",\n         \"type\": \"object\"\n        },\n        \"labels\": {\n         \"additionalProperties\": {\n          \"type\": \"string\"\n         },\n         \"description\": \"Labels are the labels/tags to be added to connection secret. - For Kubernetes secrets, this will be used as \\\"metadata.labels\\\". - It is up to Secret Store implementation for others store types.\",\n         \"type\": \"object\"\n        },\n        \"type\": {\n         \"description\": \"Type is the SecretType for the connection secret. - Only valid for Kubernetes Secret Stores.\",\n         \"type\": \"string\"\n        }\n       },\n       \"type\": \"object\"\n      },\n      \"name\": {\n       \"description\": \"Name is the name of the connection secret.\",\n       \"type\": \"string\"\n      }\n     },\n     \"required\": [\n      \"name\"\n     ],\n     \"type\": \"object\"\n    },\n    \"writeConnectionSecretToRef\": {\n     \"description\": \"WriteConnectionSecretToReference specifies the namespace and name of a Secret to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource. This field is planned to be replaced in a future release in favor of PublishConnectionDetailsTo. Currently, both could be set independently and connection details would be published to both without affecting each other.\",\n     \"properties\": {\n      \"name\": {\n       \"description\": \"Name of the secret.\",\n       \"type\": \"string\"\n      },\n      \"namespace\": {\n       \"description\": \"Namespace of the secret.\",\n       \"type\": \"string\"\n      }\n     },\n     \"required\": [\n      \"name\",\n      \"namespace\"\n     ],\n     \"type\": \"object\"\n    }\n   },\n   \"required\": [\n    \"forProvider\"\n   ],\n   \"type\": \"object\",\n   \"x-kubernetes-validations\": [\n    {\n     \"message\": \"region is a required parameter\",\n     \"rule\": \"self.managementPolicy == 'ObserveOnly' || has(self.forProvider.region)\"\n    }\n   ]\n  }\n },\n \"required\": [\n  \"spec\"\n ],\n \"title\": \"Replication Group\",\n \"type\": \"object\"\n}"}