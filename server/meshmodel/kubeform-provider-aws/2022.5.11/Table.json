{"kind":"Table","apiVersion":"dynamodb.aws.kubeform.com/v1alpha1","displayName":"Table","format":"JSON","metadata":{"genealogy":"","isAnnotation":false,"isNamespaced":false,"logoURL":"https://layer5.io/company/brand","model":"kubeform-provider-aws","modelDisplayName":"Kubeform Provider Aws","primaryColor":"#00B39F","published":false,"secondaryColor":"#00D3A9","shape":"circle","styleOverrides":"","subCategory":"Uncategorized","svgColor":"","svgComplete":"","svgWhite":""},"model":{"name":"kubeform-provider-aws","version":"2022.5.11","displayName":"Kubeform Provider Aws","category":{"name":"Uncategorized","metadata":null},"metadata":{"source_uri":"https://charts.appscode.com/stable/kubeform-provider-aws/kubeform-provider-aws-v2023.11.1.tgz"}},"schema":"{\n \"description\": \"Table is the Schema for the Tables API. Provides a DynamoDB table resource\",\n \"properties\": {\n  \"spec\": {\n   \"description\": \"TableSpec defines the desired state of Table\",\n   \"properties\": {\n    \"deletionPolicy\": {\n     \"default\": \"Delete\",\n     \"description\": \"DeletionPolicy specifies what will happen to the underlying external when this managed resource is deleted - either \\\"Delete\\\" or \\\"Orphan\\\" the external resource. This field is planned to be deprecated in favor of the ManagementPolicy field in a future release. Currently, both could be set independently and non-default values would be honored if the feature flag is enabled. See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223\",\n     \"enum\": [\n      \"Orphan\",\n      \"Delete\"\n     ],\n     \"type\": \"string\"\n    },\n    \"forProvider\": {\n     \"properties\": {\n      \"attribute\": {\n       \"description\": \"Set of nested attribute definitions. Only required for hash_key and range_key attributes. See below.\",\n       \"items\": {\n        \"properties\": {\n         \"name\": {\n          \"description\": \"Name of the attribute\",\n          \"type\": \"string\"\n         },\n         \"type\": {\n          \"description\": \"Attribute type. Valid values are S (string), N (number), B (binary).\",\n          \"type\": \"string\"\n         }\n        },\n        \"required\": [\n         \"name\",\n         \"type\"\n        ],\n        \"type\": \"object\"\n       },\n       \"type\": \"array\"\n      },\n      \"billingMode\": {\n       \"description\": \"Controls how you are charged for read and write throughput and how you manage capacity. The valid values are PROVISIONED and PAY_PER_REQUEST. Defaults to PROVISIONED.\",\n       \"type\": \"string\"\n      },\n      \"deletionProtectionEnabled\": {\n       \"description\": \"Enables deletion protection for table. Defaults to false.\",\n       \"type\": \"boolean\"\n      },\n      \"globalSecondaryIndex\": {\n       \"description\": \"Describe a GSI for the table; subject to the normal limits on the number of GSIs, projected attributes, etc. See below.\",\n       \"items\": {\n        \"properties\": {\n         \"hashKey\": {\n          \"description\": \"Name of the hash key in the index; must be defined as an attribute in the resource.\",\n          \"type\": \"string\"\n         },\n         \"name\": {\n          \"description\": \"Name of the index.\",\n          \"type\": \"string\"\n         },\n         \"nonKeyAttributes\": {\n          \"description\": \"Only required with INCLUDE as a projection type; a list of attributes to project into the index. These do not need to be defined as attributes on the table.\",\n          \"items\": {\n           \"type\": \"string\"\n          },\n          \"type\": \"array\"\n         },\n         \"projectionType\": {\n          \"description\": \"One of ALL, INCLUDE or KEYS_ONLY where ALL projects every attribute into the index, KEYS_ONLY projects  into the index only the table and index hash_key and sort_key attributes ,  INCLUDE projects into the index all of the attributes that are defined in non_key_attributes in addition to the attributes that thatKEYS_ONLY project.\",\n          \"type\": \"string\"\n         },\n         \"rangeKey\": {\n          \"description\": \"Name of the range key; must be defined\",\n          \"type\": \"string\"\n         },\n         \"readCapacity\": {\n          \"description\": \"Number of read units for this index. Must be set if billing_mode is set to PROVISIONED.\",\n          \"type\": \"number\"\n         },\n         \"writeCapacity\": {\n          \"description\": \"Number of write units for this index. Must be set if billing_mode is set to PROVISIONED.\",\n          \"type\": \"number\"\n         }\n        },\n        \"required\": [\n         \"hashKey\",\n         \"name\",\n         \"projectionType\"\n        ],\n        \"type\": \"object\"\n       },\n       \"type\": \"array\"\n      },\n      \"hashKey\": {\n       \"description\": \"Attribute to use as the hash (partition) key. Must also be defined as an attribute. See below.\",\n       \"type\": \"string\"\n      },\n      \"localSecondaryIndex\": {\n       \"description\": \"Describe an LSI on the table; these can only be allocated at creation so you cannot change this definition after you have created the resource. See below.\",\n       \"items\": {\n        \"properties\": {\n         \"name\": {\n          \"description\": \"Name of the index\",\n          \"type\": \"string\"\n         },\n         \"nonKeyAttributes\": {\n          \"description\": \"Only required with INCLUDE as a projection type; a list of attributes to project into the index. These do not need to be defined as attributes on the table.\",\n          \"items\": {\n           \"type\": \"string\"\n          },\n          \"type\": \"array\"\n         },\n         \"projectionType\": {\n          \"description\": \"One of ALL, INCLUDE or KEYS_ONLY where ALL projects every attribute into the index, KEYS_ONLY projects  into the index only the table and index hash_key and sort_key attributes ,  INCLUDE projects into the index all of the attributes that are defined in non_key_attributes in addition to the attributes that thatKEYS_ONLY project.\",\n          \"type\": \"string\"\n         },\n         \"rangeKey\": {\n          \"description\": \"Name of the range key.\",\n          \"type\": \"string\"\n         }\n        },\n        \"required\": [\n         \"name\",\n         \"projectionType\",\n         \"rangeKey\"\n        ],\n        \"type\": \"object\"\n       },\n       \"type\": \"array\"\n      },\n      \"pointInTimeRecovery\": {\n       \"description\": \"Enable point-in-time recovery options. See below.\",\n       \"items\": {\n        \"properties\": {\n         \"enabled\": {\n          \"description\": \"Whether to enable point-in-time recovery. It can take 10 minutes to enable for new tables. If the point_in_time_recovery block is not provided, this defaults to false.\",\n          \"type\": \"boolean\"\n         }\n        },\n        \"required\": [\n         \"enabled\"\n        ],\n        \"type\": \"object\"\n       },\n       \"type\": \"array\"\n      },\n      \"rangeKey\": {\n       \"description\": \"Attribute to use as the range (sort) key. Must also be defined as an attribute, see below.\",\n       \"type\": \"string\"\n      },\n      \"readCapacity\": {\n       \"description\": \"Number of read units for this table. If the billing_mode is PROVISIONED, this field is required.\",\n       \"type\": \"number\"\n      },\n      \"region\": {\n       \"description\": \"Region is the region you'd like your resource to be created in.\",\n       \"type\": \"string\"\n      },\n      \"replica\": {\n       \"description\": \"Configuration block(s) with DynamoDB Global Tables V2 (version 2019.11.21) replication configurations. See below.\",\n       \"items\": {\n        \"properties\": {\n         \"kmsKeyArn\": {\n          \"description\": \"ARN of the CMK that should be used for the AWS KMS encryption. This argument should only be used if the key is different from the default KMS-managed DynamoDB key, alias/aws/dynamodb. Note: This attribute will not be populated with the ARN of default keys.\",\n          \"type\": \"string\"\n         },\n         \"pointInTimeRecovery\": {\n          \"description\": \"Whether to enable Point In Time Recovery for the replica. Default is false.\",\n          \"type\": \"boolean\"\n         },\n         \"propagateTags\": {\n          \"description\": \"Whether to propagate the global table's tags to a replica. Default is false. Changes to tags only move in one direction: from global (source) to replica. In other words, tag drift on a replica will not trigger an update. Tag or replica changes on the global table, whether from drift or configuration changes, are propagated to replicas. Changing from true to false on a subsequent apply means replica tags are left as they were, unmanaged, not deleted.\",\n          \"type\": \"boolean\"\n         },\n         \"regionName\": {\n          \"description\": \"Region name of the replica.\",\n          \"type\": \"string\"\n         }\n        },\n        \"required\": [\n         \"regionName\"\n        ],\n        \"type\": \"object\"\n       },\n       \"type\": \"array\"\n      },\n      \"restoreDateTime\": {\n       \"description\": \"Time of the point-in-time recovery point to restore.\",\n       \"type\": \"string\"\n      },\n      \"restoreSourceName\": {\n       \"description\": \"Name of the table to restore. Must match the name of an existing table.\",\n       \"type\": \"string\"\n      },\n      \"restoreToLatestTime\": {\n       \"description\": \"If set, restores table to the most recent point-in-time recovery point.\",\n       \"type\": \"boolean\"\n      },\n      \"serverSideEncryption\": {\n       \"description\": \"Encryption at rest options. AWS DynamoDB tables are automatically encrypted at rest with an AWS-owned Customer Master Key if this argument isn't specified. See below.\",\n       \"items\": {\n        \"properties\": {\n         \"enabled\": {\n          \"description\": \"Whether or not to enable encryption at rest using an AWS managed KMS customer master key (CMK). If enabled is false then server-side encryption is set to AWS-owned key (shown as DEFAULT in the AWS console). Potentially confusingly, if enabled is true and no kms_key_arn is specified then server-side encryption is set to the default KMS-managed key (shown as KMS in the AWS console). The AWS KMS documentation explains the difference between AWS-owned and KMS-managed keys.\",\n          \"type\": \"boolean\"\n         },\n         \"kmsKeyArn\": {\n          \"description\": \"ARN of the CMK that should be used for the AWS KMS encryption. This argument should only be used if the key is different from the default KMS-managed DynamoDB key, alias/aws/dynamodb. Note: This attribute will not be populated with the ARN of default keys.\",\n          \"type\": \"string\"\n         }\n        },\n        \"required\": [\n         \"enabled\"\n        ],\n        \"type\": \"object\"\n       },\n       \"type\": \"array\"\n      },\n      \"streamEnabled\": {\n       \"description\": \"Whether Streams are enabled.\",\n       \"type\": \"boolean\"\n      },\n      \"streamViewType\": {\n       \"description\": \"When an item in the table is modified, StreamViewType determines what information is written to the table's stream. Valid values are KEYS_ONLY, NEW_IMAGE, OLD_IMAGE, NEW_AND_OLD_IMAGES.\",\n       \"type\": \"string\"\n      },\n      \"tableClass\": {\n       \"description\": \"Storage class of the table. Valid values are STANDARD and STANDARD_INFREQUENT_ACCESS. Default value is STANDARD.\",\n       \"type\": \"string\"\n      },\n      \"tags\": {\n       \"additionalProperties\": {\n        \"type\": \"string\"\n       },\n       \"description\": \"A map of tags to populate on the created table. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.\",\n       \"type\": \"object\"\n      },\n      \"tagsAll\": {\n       \"additionalProperties\": {\n        \"type\": \"string\"\n       },\n       \"description\": \"Map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.\",\n       \"type\": \"object\"\n      },\n      \"ttl\": {\n       \"description\": \"Configuration block for TTL. See below.\",\n       \"items\": {\n        \"properties\": {\n         \"attributeName\": {\n          \"description\": \"Name of the table attribute to store the TTL timestamp in.\",\n          \"type\": \"string\"\n         },\n         \"enabled\": {\n          \"description\": \"Whether TTL is enabled.\",\n          \"type\": \"boolean\"\n         }\n        },\n        \"required\": [\n         \"attributeName\"\n        ],\n        \"type\": \"object\"\n       },\n       \"type\": \"array\"\n      },\n      \"writeCapacity\": {\n       \"description\": \"Number of write units for this table. If the billing_mode is PROVISIONED, this field is required.\",\n       \"type\": \"number\"\n      }\n     },\n     \"type\": \"object\"\n    },\n    \"managementPolicy\": {\n     \"default\": \"FullControl\",\n     \"description\": \"THIS IS AN ALPHA FIELD. Do not use it in production. It is not honored unless the relevant Crossplane feature flag is enabled, and may be changed or removed without notice. ManagementPolicy specifies the level of control Crossplane has over the managed external resource. This field is planned to replace the DeletionPolicy field in a future release. Currently, both could be set independently and non-default values would be honored if the feature flag is enabled. See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223\",\n     \"enum\": [\n      \"FullControl\",\n      \"ObserveOnly\",\n      \"OrphanOnDelete\"\n     ],\n     \"type\": \"string\"\n    },\n    \"providerConfigRef\": {\n     \"default\": {\n      \"name\": \"default\"\n     },\n     \"description\": \"ProviderConfigReference specifies how the provider that will be used to create, observe, update, and delete this managed resource should be configured.\",\n     \"properties\": {\n      \"name\": {\n       \"description\": \"Name of the referenced object.\",\n       \"type\": \"string\"\n      },\n      \"policy\": {\n       \"description\": \"Policies for referencing.\",\n       \"properties\": {\n        \"resolution\": {\n         \"default\": \"Required\",\n         \"description\": \"Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.\",\n         \"enum\": [\n          \"Required\",\n          \"Optional\"\n         ],\n         \"type\": \"string\"\n        },\n        \"resolve\": {\n         \"description\": \"Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.\",\n         \"enum\": [\n          \"Always\",\n          \"IfNotPresent\"\n         ],\n         \"type\": \"string\"\n        }\n       },\n       \"type\": \"object\"\n      }\n     },\n     \"required\": [\n      \"name\"\n     ],\n     \"type\": \"object\"\n    },\n    \"providerRef\": {\n     \"description\": \"ProviderReference specifies the provider that will be used to create, observe, update, and delete this managed resource. Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`\",\n     \"properties\": {\n      \"name\": {\n       \"description\": \"Name of the referenced object.\",\n       \"type\": \"string\"\n      },\n      \"policy\": {\n       \"description\": \"Policies for referencing.\",\n       \"properties\": {\n        \"resolution\": {\n         \"default\": \"Required\",\n         \"description\": \"Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.\",\n         \"enum\": [\n          \"Required\",\n          \"Optional\"\n         ],\n         \"type\": \"string\"\n        },\n        \"resolve\": {\n         \"description\": \"Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.\",\n         \"enum\": [\n          \"Always\",\n          \"IfNotPresent\"\n         ],\n         \"type\": \"string\"\n        }\n       },\n       \"type\": \"object\"\n      }\n     },\n     \"required\": [\n      \"name\"\n     ],\n     \"type\": \"object\"\n    },\n    \"publishConnectionDetailsTo\": {\n     \"description\": \"PublishConnectionDetailsTo specifies the connection secret config which contains a name, metadata and a reference to secret store config to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource.\",\n     \"properties\": {\n      \"configRef\": {\n       \"default\": {\n        \"name\": \"default\"\n       },\n       \"description\": \"SecretStoreConfigRef specifies which secret store config should be used for this ConnectionSecret.\",\n       \"properties\": {\n        \"name\": {\n         \"description\": \"Name of the referenced object.\",\n         \"type\": \"string\"\n        },\n        \"policy\": {\n         \"description\": \"Policies for referencing.\",\n         \"properties\": {\n          \"resolution\": {\n           \"default\": \"Required\",\n           \"description\": \"Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.\",\n           \"enum\": [\n            \"Required\",\n            \"Optional\"\n           ],\n           \"type\": \"string\"\n          },\n          \"resolve\": {\n           \"description\": \"Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.\",\n           \"enum\": [\n            \"Always\",\n            \"IfNotPresent\"\n           ],\n           \"type\": \"string\"\n          }\n         },\n         \"type\": \"object\"\n        }\n       },\n       \"required\": [\n        \"name\"\n       ],\n       \"type\": \"object\"\n      },\n      \"metadata\": {\n       \"description\": \"Metadata is the metadata for connection secret.\",\n       \"properties\": {\n        \"annotations\": {\n         \"additionalProperties\": {\n          \"type\": \"string\"\n         },\n         \"description\": \"Annotations are the annotations to be added to connection secret. - For Kubernetes secrets, this will be used as \\\"metadata.annotations\\\". - It is up to Secret Store implementation for others store types.\",\n         \"type\": \"object\"\n        },\n        \"labels\": {\n         \"additionalProperties\": {\n          \"type\": \"string\"\n         },\n         \"description\": \"Labels are the labels/tags to be added to connection secret. - For Kubernetes secrets, this will be used as \\\"metadata.labels\\\". - It is up to Secret Store implementation for others store types.\",\n         \"type\": \"object\"\n        },\n        \"type\": {\n         \"description\": \"Type is the SecretType for the connection secret. - Only valid for Kubernetes Secret Stores.\",\n         \"type\": \"string\"\n        }\n       },\n       \"type\": \"object\"\n      },\n      \"name\": {\n       \"description\": \"Name is the name of the connection secret.\",\n       \"type\": \"string\"\n      }\n     },\n     \"required\": [\n      \"name\"\n     ],\n     \"type\": \"object\"\n    },\n    \"writeConnectionSecretToRef\": {\n     \"description\": \"WriteConnectionSecretToReference specifies the namespace and name of a Secret to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource. This field is planned to be replaced in a future release in favor of PublishConnectionDetailsTo. Currently, both could be set independently and connection details would be published to both without affecting each other.\",\n     \"properties\": {\n      \"name\": {\n       \"description\": \"Name of the secret.\",\n       \"type\": \"string\"\n      },\n      \"namespace\": {\n       \"description\": \"Namespace of the secret.\",\n       \"type\": \"string\"\n      }\n     },\n     \"required\": [\n      \"name\",\n      \"namespace\"\n     ],\n     \"type\": \"object\"\n    }\n   },\n   \"required\": [\n    \"forProvider\"\n   ],\n   \"type\": \"object\",\n   \"x-kubernetes-validations\": [\n    {\n     \"message\": \"region is a required parameter\",\n     \"rule\": \"self.managementPolicy == 'ObserveOnly' || has(self.forProvider.region)\"\n    }\n   ]\n  }\n },\n \"required\": [\n  \"spec\"\n ],\n \"title\": \"Table\",\n \"type\": \"object\"\n}"}