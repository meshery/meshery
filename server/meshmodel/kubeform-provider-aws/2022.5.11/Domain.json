{"kind":"Domain","apiVersion":"elasticsearch.aws.kubeform.com/v1alpha1","displayName":"Domain","format":"JSON","metadata":{"genealogy":"","isAnnotation":false,"isNamespaced":false,"logoURL":"https://layer5.io/company/brand","model":"kubeform-provider-aws","modelDisplayName":"Kubeform Provider Aws","primaryColor":"#00B39F","published":false,"secondaryColor":"#00D3A9","shape":"circle","styleOverrides":"","subCategory":"Uncategorized","svgColor":"","svgComplete":"","svgWhite":""},"model":{"name":"kubeform-provider-aws","version":"2022.5.11","displayName":"Kubeform Provider Aws","category":{"name":"Uncategorized","metadata":null},"metadata":{"source_uri":"https://charts.appscode.com/stable/kubeform-provider-aws/kubeform-provider-aws-v2023.11.1.tgz"}},"schema":"{\n \"description\": \"Domain is the Schema for the Domains API.\",\n \"properties\": {\n  \"spec\": {\n   \"description\": \"DomainSpec defines the desired state of Domain\",\n   \"properties\": {\n    \"deletionPolicy\": {\n     \"default\": \"Delete\",\n     \"description\": \"DeletionPolicy specifies what will happen to the underlying external when this managed resource is deleted - either \\\"Delete\\\" or \\\"Orphan\\\" the external resource. This field is planned to be deprecated in favor of the ManagementPolicy field in a future release. Currently, both could be set independently and non-default values would be honored if the feature flag is enabled. See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223\",\n     \"enum\": [\n      \"Orphan\",\n      \"Delete\"\n     ],\n     \"type\": \"string\"\n    },\n    \"forProvider\": {\n     \"properties\": {\n      \"accessPolicies\": {\n       \"description\": \"IAM policy document specifying the access policies for the domain.\",\n       \"type\": \"string\"\n      },\n      \"advancedOptions\": {\n       \"additionalProperties\": {\n        \"type\": \"string\"\n       },\n       \"description\": \"Key-value string pairs to specify advanced configuration options.\",\n       \"type\": \"object\"\n      },\n      \"advancedSecurityOptions\": {\n       \"description\": \"Configuration block for fine-grained access control. Detailed below.\",\n       \"items\": {\n        \"properties\": {\n         \"enabled\": {\n          \"description\": \"Whether advanced security is enabled.\",\n          \"type\": \"boolean\"\n         },\n         \"internalUserDatabaseEnabled\": {\n          \"description\": \"Whether the internal user database is enabled. If not set, defaults to false by the AWS API.\",\n          \"type\": \"boolean\"\n         },\n         \"masterUserOptions\": {\n          \"description\": \"Configuration block for the main user. Detailed below.\",\n          \"items\": {\n           \"properties\": {\n            \"masterUserArn\": {\n             \"description\": \"ARN for the main user. Only specify if internal_user_database_enabled is not set or set to false.\",\n             \"type\": \"string\"\n            },\n            \"masterUserName\": {\n             \"description\": \"Main user's username, which is stored in the Amazon Elasticsearch Service domain's internal database. Only specify if internal_user_database_enabled is set to true.\",\n             \"type\": \"string\"\n            },\n            \"masterUserPasswordSecretRef\": {\n             \"description\": \"Main user's password, which is stored in the Amazon Elasticsearch Service domain's internal database. Only specify if internal_user_database_enabled is set to true.\",\n             \"properties\": {\n              \"key\": {\n               \"description\": \"The key to select.\",\n               \"type\": \"string\"\n              },\n              \"name\": {\n               \"description\": \"Name of the secret.\",\n               \"type\": \"string\"\n              },\n              \"namespace\": {\n               \"description\": \"Namespace of the secret.\",\n               \"type\": \"string\"\n              }\n             },\n             \"required\": [\n              \"key\",\n              \"name\",\n              \"namespace\"\n             ],\n             \"type\": \"object\"\n            }\n           },\n           \"type\": \"object\"\n          },\n          \"type\": \"array\"\n         }\n        },\n        \"required\": [\n         \"enabled\"\n        ],\n        \"type\": \"object\"\n       },\n       \"type\": \"array\"\n      },\n      \"autoTuneOptions\": {\n       \"description\": \"Configuration block for the Auto-Tune options of the domain. Detailed below.\",\n       \"items\": {\n        \"properties\": {\n         \"desiredState\": {\n          \"description\": \"The Auto-Tune desired state for the domain. Valid values: ENABLED or DISABLED.\",\n          \"type\": \"string\"\n         },\n         \"maintenanceSchedule\": {\n          \"description\": \"Configuration block for Auto-Tune maintenance windows. Can be specified multiple times for each maintenance window. Detailed below.\",\n          \"items\": {\n           \"properties\": {\n            \"cronExpressionForRecurrence\": {\n             \"description\": \"A cron expression specifying the recurrence pattern for an Auto-Tune maintenance schedule.\",\n             \"type\": \"string\"\n            },\n            \"duration\": {\n             \"description\": \"Configuration block for the duration of the Auto-Tune maintenance window. Detailed below.\",\n             \"items\": {\n              \"properties\": {\n               \"unit\": {\n                \"description\": \"The unit of time specifying the duration of an Auto-Tune maintenance window. Valid values: HOURS.\",\n                \"type\": \"string\"\n               },\n               \"value\": {\n                \"description\": \"An integer specifying the value of the duration of an Auto-Tune maintenance window.\",\n                \"type\": \"number\"\n               }\n              },\n              \"required\": [\n               \"unit\",\n               \"value\"\n              ],\n              \"type\": \"object\"\n             },\n             \"type\": \"array\"\n            },\n            \"startAt\": {\n             \"description\": \"Date and time at which to start the Auto-Tune maintenance schedule in RFC3339 format.\",\n             \"type\": \"string\"\n            }\n           },\n           \"required\": [\n            \"cronExpressionForRecurrence\",\n            \"duration\",\n            \"startAt\"\n           ],\n           \"type\": \"object\"\n          },\n          \"type\": \"array\"\n         },\n         \"rollbackOnDisable\": {\n          \"description\": \"Whether to roll back to default Auto-Tune settings when disabling Auto-Tune. Valid values: DEFAULT_ROLLBACK or NO_ROLLBACK.\",\n          \"type\": \"string\"\n         }\n        },\n        \"required\": [\n         \"desiredState\"\n        ],\n        \"type\": \"object\"\n       },\n       \"type\": \"array\"\n      },\n      \"clusterConfig\": {\n       \"description\": \"Configuration block for the cluster of the domain. Detailed below.\",\n       \"items\": {\n        \"properties\": {\n         \"coldStorageOptions\": {\n          \"description\": \"Configuration block containing cold storage configuration. Detailed below.\",\n          \"items\": {\n           \"properties\": {\n            \"enabled\": {\n             \"description\": \"Boolean to enable cold storage for an Elasticsearch domain. Defaults to false. Master and ultrawarm nodes must be enabled for cold storage.\",\n             \"type\": \"boolean\"\n            }\n           },\n           \"type\": \"object\"\n          },\n          \"type\": \"array\"\n         },\n         \"dedicatedMasterCount\": {\n          \"description\": \"Number of dedicated main nodes in the cluster.\",\n          \"type\": \"number\"\n         },\n         \"dedicatedMasterEnabled\": {\n          \"description\": \"Whether dedicated main nodes are enabled for the cluster.\",\n          \"type\": \"boolean\"\n         },\n         \"dedicatedMasterType\": {\n          \"description\": \"Instance type of the dedicated main nodes in the cluster.\",\n          \"type\": \"string\"\n         },\n         \"instanceCount\": {\n          \"description\": \"Number of instances in the cluster.\",\n          \"type\": \"number\"\n         },\n         \"instanceType\": {\n          \"description\": \"Instance type of data nodes in the cluster.\",\n          \"type\": \"string\"\n         },\n         \"warmCount\": {\n          \"description\": \"Number of warm nodes in the cluster. Valid values are between 2 and 150. warm_count can be only and must be set when warm_enabled is set to true.\",\n          \"type\": \"number\"\n         },\n         \"warmEnabled\": {\n          \"description\": \"Whether to enable warm storage.\",\n          \"type\": \"boolean\"\n         },\n         \"warmType\": {\n          \"description\": \"Instance type for the Elasticsearch cluster's warm nodes. Valid values are ultrawarm1.medium.elasticsearch, ultrawarm1.large.elasticsearch and ultrawarm1.xlarge.elasticsearch. warm_type can be only and must be set when warm_enabled is set to true.\",\n          \"type\": \"string\"\n         },\n         \"zoneAwarenessConfig\": {\n          \"description\": \"Configuration block containing zone awareness settings. Detailed below.\",\n          \"items\": {\n           \"properties\": {\n            \"availabilityZoneCount\": {\n             \"description\": \"Number of Availability Zones for the domain to use with zone_awareness_enabled. Defaults to 2. Valid values: 2 or 3.\",\n             \"type\": \"number\"\n            }\n           },\n           \"type\": \"object\"\n          },\n          \"type\": \"array\"\n         },\n         \"zoneAwarenessEnabled\": {\n          \"description\": \"Whether zone awareness is enabled, set to true for multi-az deployment. To enable awareness with three Availability Zones, the availability_zone_count within the zone_awareness_config must be set to 3.\",\n          \"type\": \"boolean\"\n         }\n        },\n        \"type\": \"object\"\n       },\n       \"type\": \"array\"\n      },\n      \"cognitoOptions\": {\n       \"description\": \"Configuration block for authenticating Kibana with Cognito. Detailed below.\",\n       \"items\": {\n        \"properties\": {\n         \"enabled\": {\n          \"description\": \"Whether Amazon Cognito authentication with Kibana is enabled or not.\",\n          \"type\": \"boolean\"\n         },\n         \"identityPoolId\": {\n          \"description\": \"ID of the Cognito Identity Pool to use.\",\n          \"type\": \"string\"\n         },\n         \"roleArn\": {\n          \"description\": \"ARN of the IAM role that has the AmazonESCognitoAccess policy attached.\",\n          \"type\": \"string\"\n         },\n         \"userPoolId\": {\n          \"description\": \"ID of the Cognito User Pool to use.\",\n          \"type\": \"string\"\n         }\n        },\n        \"required\": [\n         \"identityPoolId\",\n         \"roleArn\",\n         \"userPoolId\"\n        ],\n        \"type\": \"object\"\n       },\n       \"type\": \"array\"\n      },\n      \"domainEndpointOptions\": {\n       \"description\": \"Configuration block for domain endpoint HTTP(S) related options. Detailed below.\",\n       \"items\": {\n        \"properties\": {\n         \"customEndpoint\": {\n          \"description\": \"Fully qualified domain for your custom endpoint.\",\n          \"type\": \"string\"\n         },\n         \"customEndpointCertificateArn\": {\n          \"description\": \"ACM certificate ARN for your custom endpoint.\",\n          \"type\": \"string\"\n         },\n         \"customEndpointEnabled\": {\n          \"description\": \"Whether to enable custom endpoint for the Elasticsearch domain.\",\n          \"type\": \"boolean\"\n         },\n         \"enforceHttps\": {\n          \"description\": \"Whether or not to require HTTPS. Defaults to true.\",\n          \"type\": \"boolean\"\n         },\n         \"tlsSecurityPolicy\": {\n          \"description\": \"Name of the TLS security policy that needs to be applied to the HTTPS endpoint. Valid values:  Policy-Min-TLS-1-0-2019-07 and Policy-Min-TLS-1-2-2019-07.\",\n          \"type\": \"string\"\n         }\n        },\n        \"type\": \"object\"\n       },\n       \"type\": \"array\"\n      },\n      \"ebsOptions\": {\n       \"description\": \"Configuration block for EBS related options, may be required based on chosen instance size. Detailed below.\",\n       \"items\": {\n        \"properties\": {\n         \"ebsEnabled\": {\n          \"description\": \"Whether EBS volumes are attached to data nodes in the domain.\",\n          \"type\": \"boolean\"\n         },\n         \"iops\": {\n          \"description\": \"Baseline input/output (I/O) performance of EBS volumes attached to data nodes. Applicable only for the GP3 and Provisioned IOPS EBS volume types.\",\n          \"type\": \"number\"\n         },\n         \"throughput\": {\n          \"description\": \"Specifies the throughput (in MiB/s) of the EBS volumes attached to data nodes. Applicable only for the gp3 volume type.\",\n          \"type\": \"number\"\n         },\n         \"volumeSize\": {\n          \"description\": \"Size of EBS volumes attached to data nodes (in GiB).\",\n          \"type\": \"number\"\n         },\n         \"volumeType\": {\n          \"description\": \"Type of EBS volumes attached to data nodes.\",\n          \"type\": \"string\"\n         }\n        },\n        \"required\": [\n         \"ebsEnabled\"\n        ],\n        \"type\": \"object\"\n       },\n       \"type\": \"array\"\n      },\n      \"elasticsearchVersion\": {\n       \"description\": \"Version of Elasticsearch to deploy. Defaults to 1.5.\",\n       \"type\": \"string\"\n      },\n      \"encryptAtRest\": {\n       \"description\": \"Configuration block for encrypt at rest options. Only available for certain instance types. Detailed below.\",\n       \"items\": {\n        \"properties\": {\n         \"enabled\": {\n          \"description\": \"Whether to enable encryption at rest. If the encrypt_at_rest block is not provided then this defaults to false. Enabling encryption on new domains requires elasticsearch_version 5.1 or greater.\",\n          \"type\": \"boolean\"\n         },\n         \"kmsKeyId\": {\n          \"description\": \"KMS key ARN to encrypt the Elasticsearch domain with. If not specified then it defaults to using the aws/es service KMS key. Note that KMS will accept a KMS key ID but will return the key ARN.\",\n          \"type\": \"string\"\n         }\n        },\n        \"required\": [\n         \"enabled\"\n        ],\n        \"type\": \"object\"\n       },\n       \"type\": \"array\"\n      },\n      \"logPublishingOptions\": {\n       \"description\": \"Configuration block for publishing slow and application logs to CloudWatch Logs. This block can be declared multiple times, for each log_type, within the same resource. Detailed below.\",\n       \"items\": {\n        \"properties\": {\n         \"cloudwatchLogGroupArn\": {\n          \"description\": \"ARN of the Cloudwatch log group to which log needs to be published.\",\n          \"type\": \"string\"\n         },\n         \"enabled\": {\n          \"description\": \"Whether given log publishing option is enabled or not.\",\n          \"type\": \"boolean\"\n         },\n         \"logType\": {\n          \"description\": \"Type of Elasticsearch log. Valid values: INDEX_SLOW_LOGS, SEARCH_SLOW_LOGS, ES_APPLICATION_LOGS, AUDIT_LOGS.\",\n          \"type\": \"string\"\n         }\n        },\n        \"required\": [\n         \"cloudwatchLogGroupArn\",\n         \"logType\"\n        ],\n        \"type\": \"object\"\n       },\n       \"type\": \"array\"\n      },\n      \"nodeToNodeEncryption\": {\n       \"description\": \"Configuration block for node-to-node encryption options. Detailed below.\",\n       \"items\": {\n        \"properties\": {\n         \"enabled\": {\n          \"description\": \"Whether to enable node-to-node encryption. If the node_to_node_encryption block is not provided then this defaults to false. Enabling node-to-node encryption of a new domain requires an elasticsearch_version of 6.0 or greater.\",\n          \"type\": \"boolean\"\n         }\n        },\n        \"required\": [\n         \"enabled\"\n        ],\n        \"type\": \"object\"\n       },\n       \"type\": \"array\"\n      },\n      \"region\": {\n       \"description\": \"Region is the region you'd like your resource to be created in.\",\n       \"type\": \"string\"\n      },\n      \"snapshotOptions\": {\n       \"description\": \"Configuration block for snapshot related options. Detailed below. DEPRECATED. For domains running Elasticsearch 5.3 and later, Amazon ES takes hourly automated snapshots, making this setting irrelevant. For domains running earlier versions of Elasticsearch, Amazon ES takes daily automated snapshots.\",\n       \"items\": {\n        \"properties\": {\n         \"automatedSnapshotStartHour\": {\n          \"description\": \"Hour during which the service takes an automated daily snapshot of the indices in the domain.\",\n          \"type\": \"number\"\n         }\n        },\n        \"required\": [\n         \"automatedSnapshotStartHour\"\n        ],\n        \"type\": \"object\"\n       },\n       \"type\": \"array\"\n      },\n      \"tags\": {\n       \"additionalProperties\": {\n        \"type\": \"string\"\n       },\n       \"description\": \"Map of tags to assign to the resource. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.\",\n       \"type\": \"object\"\n      },\n      \"tagsAll\": {\n       \"additionalProperties\": {\n        \"type\": \"string\"\n       },\n       \"description\": \"Map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.\",\n       \"type\": \"object\"\n      },\n      \"vpcOptions\": {\n       \"description\": \"Configuration block for VPC related options. Adding or removing this configuration forces a new resource (documentation). Detailed below.\",\n       \"items\": {\n        \"properties\": {\n         \"securityGroupIds\": {\n          \"description\": \"List of VPC Security Group IDs to be applied to the Elasticsearch domain endpoints. If omitted, the default Security Group for the VPC will be used.\",\n          \"items\": {\n           \"type\": \"string\"\n          },\n          \"type\": \"array\"\n         },\n         \"subnetIds\": {\n          \"description\": \"List of VPC Subnet IDs for the Elasticsearch domain endpoints to be created in.\",\n          \"items\": {\n           \"type\": \"string\"\n          },\n          \"type\": \"array\"\n         }\n        },\n        \"type\": \"object\"\n       },\n       \"type\": \"array\"\n      }\n     },\n     \"type\": \"object\"\n    },\n    \"managementPolicy\": {\n     \"default\": \"FullControl\",\n     \"description\": \"THIS IS AN ALPHA FIELD. Do not use it in production. It is not honored unless the relevant Crossplane feature flag is enabled, and may be changed or removed without notice. ManagementPolicy specifies the level of control Crossplane has over the managed external resource. This field is planned to replace the DeletionPolicy field in a future release. Currently, both could be set independently and non-default values would be honored if the feature flag is enabled. See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223\",\n     \"enum\": [\n      \"FullControl\",\n      \"ObserveOnly\",\n      \"OrphanOnDelete\"\n     ],\n     \"type\": \"string\"\n    },\n    \"providerConfigRef\": {\n     \"default\": {\n      \"name\": \"default\"\n     },\n     \"description\": \"ProviderConfigReference specifies how the provider that will be used to create, observe, update, and delete this managed resource should be configured.\",\n     \"properties\": {\n      \"name\": {\n       \"description\": \"Name of the referenced object.\",\n       \"type\": \"string\"\n      },\n      \"policy\": {\n       \"description\": \"Policies for referencing.\",\n       \"properties\": {\n        \"resolution\": {\n         \"default\": \"Required\",\n         \"description\": \"Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.\",\n         \"enum\": [\n          \"Required\",\n          \"Optional\"\n         ],\n         \"type\": \"string\"\n        },\n        \"resolve\": {\n         \"description\": \"Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.\",\n         \"enum\": [\n          \"Always\",\n          \"IfNotPresent\"\n         ],\n         \"type\": \"string\"\n        }\n       },\n       \"type\": \"object\"\n      }\n     },\n     \"required\": [\n      \"name\"\n     ],\n     \"type\": \"object\"\n    },\n    \"providerRef\": {\n     \"description\": \"ProviderReference specifies the provider that will be used to create, observe, update, and delete this managed resource. Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`\",\n     \"properties\": {\n      \"name\": {\n       \"description\": \"Name of the referenced object.\",\n       \"type\": \"string\"\n      },\n      \"policy\": {\n       \"description\": \"Policies for referencing.\",\n       \"properties\": {\n        \"resolution\": {\n         \"default\": \"Required\",\n         \"description\": \"Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.\",\n         \"enum\": [\n          \"Required\",\n          \"Optional\"\n         ],\n         \"type\": \"string\"\n        },\n        \"resolve\": {\n         \"description\": \"Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.\",\n         \"enum\": [\n          \"Always\",\n          \"IfNotPresent\"\n         ],\n         \"type\": \"string\"\n        }\n       },\n       \"type\": \"object\"\n      }\n     },\n     \"required\": [\n      \"name\"\n     ],\n     \"type\": \"object\"\n    },\n    \"publishConnectionDetailsTo\": {\n     \"description\": \"PublishConnectionDetailsTo specifies the connection secret config which contains a name, metadata and a reference to secret store config to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource.\",\n     \"properties\": {\n      \"configRef\": {\n       \"default\": {\n        \"name\": \"default\"\n       },\n       \"description\": \"SecretStoreConfigRef specifies which secret store config should be used for this ConnectionSecret.\",\n       \"properties\": {\n        \"name\": {\n         \"description\": \"Name of the referenced object.\",\n         \"type\": \"string\"\n        },\n        \"policy\": {\n         \"description\": \"Policies for referencing.\",\n         \"properties\": {\n          \"resolution\": {\n           \"default\": \"Required\",\n           \"description\": \"Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.\",\n           \"enum\": [\n            \"Required\",\n            \"Optional\"\n           ],\n           \"type\": \"string\"\n          },\n          \"resolve\": {\n           \"description\": \"Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.\",\n           \"enum\": [\n            \"Always\",\n            \"IfNotPresent\"\n           ],\n           \"type\": \"string\"\n          }\n         },\n         \"type\": \"object\"\n        }\n       },\n       \"required\": [\n        \"name\"\n       ],\n       \"type\": \"object\"\n      },\n      \"metadata\": {\n       \"description\": \"Metadata is the metadata for connection secret.\",\n       \"properties\": {\n        \"annotations\": {\n         \"additionalProperties\": {\n          \"type\": \"string\"\n         },\n         \"description\": \"Annotations are the annotations to be added to connection secret. - For Kubernetes secrets, this will be used as \\\"metadata.annotations\\\". - It is up to Secret Store implementation for others store types.\",\n         \"type\": \"object\"\n        },\n        \"labels\": {\n         \"additionalProperties\": {\n          \"type\": \"string\"\n         },\n         \"description\": \"Labels are the labels/tags to be added to connection secret. - For Kubernetes secrets, this will be used as \\\"metadata.labels\\\". - It is up to Secret Store implementation for others store types.\",\n         \"type\": \"object\"\n        },\n        \"type\": {\n         \"description\": \"Type is the SecretType for the connection secret. - Only valid for Kubernetes Secret Stores.\",\n         \"type\": \"string\"\n        }\n       },\n       \"type\": \"object\"\n      },\n      \"name\": {\n       \"description\": \"Name is the name of the connection secret.\",\n       \"type\": \"string\"\n      }\n     },\n     \"required\": [\n      \"name\"\n     ],\n     \"type\": \"object\"\n    },\n    \"writeConnectionSecretToRef\": {\n     \"description\": \"WriteConnectionSecretToReference specifies the namespace and name of a Secret to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource. This field is planned to be replaced in a future release in favor of PublishConnectionDetailsTo. Currently, both could be set independently and connection details would be published to both without affecting each other.\",\n     \"properties\": {\n      \"name\": {\n       \"description\": \"Name of the secret.\",\n       \"type\": \"string\"\n      },\n      \"namespace\": {\n       \"description\": \"Namespace of the secret.\",\n       \"type\": \"string\"\n      }\n     },\n     \"required\": [\n      \"name\",\n      \"namespace\"\n     ],\n     \"type\": \"object\"\n    }\n   },\n   \"required\": [\n    \"forProvider\"\n   ],\n   \"type\": \"object\",\n   \"x-kubernetes-validations\": [\n    {\n     \"message\": \"region is a required parameter\",\n     \"rule\": \"self.managementPolicy == 'ObserveOnly' || has(self.forProvider.region)\"\n    }\n   ]\n  }\n },\n \"required\": [\n  \"spec\"\n ],\n \"title\": \"Domain\",\n \"type\": \"object\"\n}"}