{"kind":"ModRule","apiVersion":"api.kubemod.io/v1beta1","displayName":"Mod Rule","format":"JSON","hostname":"","hostID":"00000000-0000-0000-0000-000000000000","displayhostname":"","metadata":{"capabilities":"","genealogy":"","isAnnotation":false,"isModelAnnotation":"FALSE","isNamespaced":true,"logoURL":"","model":"kubemod","modelDisplayName":"Kubemod","primaryColor":"#00B39F","published":false,"secondaryColor":"#00D3A9","shape":"circle","styleOverrides":"","subCategory":"Uncategorized","svgColor":"","svgComplete":"","svgWhite":""},"model":{"name":"kubemod","version":"0.1.5","displayName":"Kubemod","hostname":"","hostID":"00000000-0000-0000-0000-000000000000","displayhostname":"","category":{"name":"Uncategorized","metadata":null},"metadata":{"source_uri":"https://github.com/wiremind/wiremind-helm-charts/releases/download/kubemod-0.1.5/kubemod-0.1.5.tgz"},"components":null,"relationships":null},"schema":"{\n \"description\": \"ModRule is the Schema for the modrules API\",\n \"properties\": {\n  \"spec\": {\n   \"description\": \"ModRuleSpec defines the desired state of ModRule\",\n   \"properties\": {\n    \"match\": {\n     \"description\": \"Match is a list of match items which consist of select queries and expected match values or regular expressions. When all match items for an object are positive, the rule is in effect.\",\n     \"items\": {\n      \"description\": \"MatchItem represents a single match query.\",\n      \"properties\": {\n       \"matchFor\": {\n        \"description\": \"MatchFor instructs how to match the results against the match... requirements. Valid values are: - \\\"Any\\\" - the match is considered positive if any of the results of select have a match. - \\\"All\\\" - the match is considered positive only if all of the results of select have a match.\",\n        \"enum\": [\n         \"Any\",\n         \"All\"\n        ],\n        \"type\": \"string\"\n       },\n       \"matchRegex\": {\n        \"description\": \"MatchRegex specifies the regular expression to compare the result of Select by. The match is considered positive if at least one of the results of evaluating the select query yields a match when compared to value.\",\n        \"nullable\": true,\n        \"type\": \"string\"\n       },\n       \"matchValue\": {\n        \"description\": \"MatchValue specifies the exact value to match the result of Select by. The match is considered positive if at least one of the results of evaluating the select query yields a match when compared to matchValue.\",\n        \"nullable\": true,\n        \"type\": \"string\"\n       },\n       \"matchValues\": {\n        \"description\": \"MatchValues specifies a list of values to match the result of Select by. The match is considered positive if at least one of the results of evaluating the select query yields a match when compared to any of the values in the array.\",\n        \"items\": {\n         \"type\": \"string\"\n        },\n        \"type\": \"array\"\n       },\n       \"negate\": {\n        \"description\": \"Negate indicates whether the match result should be to inverted. Defaults to false.\",\n        \"type\": \"boolean\"\n       },\n       \"select\": {\n        \"description\": \"Select is a JSONPath query expression: https://goessner.net/articles/JsonPath/ which yields zero or more values. If no match value or regex is specified, if the query yields a non-empty result, the match is considered positive.\",\n        \"type\": \"string\"\n       }\n      },\n      \"required\": [\n       \"select\"\n      ],\n      \"type\": \"object\"\n     },\n     \"minItems\": 1,\n     \"type\": \"array\"\n    },\n    \"patch\": {\n     \"description\": \"Patch is a list of patch operations to perform on the matching resources at the time of creation. The value part of a patch operation can be a golang template which accepts the resource as its context. This field must be provided for ModRules of type \\\"patch\\\"\",\n     \"items\": {\n      \"description\": \"PatchOperation represents a single JSON Patch operation.\",\n      \"properties\": {\n       \"op\": {\n        \"description\": \"Operation is the type of JSON Path operation to perform against the target element.\",\n        \"enum\": [\n         \"add\",\n         \"replace\",\n         \"remove\"\n        ],\n        \"type\": \"string\"\n       },\n       \"path\": {\n        \"description\": \"Path is the JSON path to the target element.\",\n        \"type\": \"string\"\n       },\n       \"select\": {\n        \"description\": \"Optional JSONPath query expression: https://goessner.net/articles/JsonPath/ used to construct path. A patch operation is created for each result of the query. A placeholder is created for each wildcard and filter in the expression. These placeholders can be used when constructing \\\"path\\\". For example, if select is \\\"$.spec.containers[*].ports[?@.containerPort == 80]\\\" placeholder #0 will point to the index of \\\"containers\\\" and #1 will point to the index of \\\"ports\\\". This allows us to define paths such as \\\"/spec/template/spec/containers/#0/securityContext\\\"\",\n        \"type\": \"string\"\n       },\n       \"value\": {\n        \"description\": \"Value is the JSON representation of the modification. The value is a golang template which is evaluated against the context of the target resource. KubeMod performs some analysis of the result of the template evaluation in order to infer its JSON type: - If the value matches the format of a JavaScript number, it is considered to be a number. - If the value matches a boolean literal (true/false), it is considered to be a boolean literal. - If the value matches 'null', it is considered to be null. - If the value is surrounded by double-quotes, it is considered to be a string. - If the value is surrounded by brackets, it is considered to be a JSON array. - If the value is surrounded by curly braces, it is considered to be a JSON object. - If none of the above is true, the value is considered to be a string.\",\n        \"nullable\": true,\n        \"type\": \"string\"\n       }\n      },\n      \"required\": [\n       \"op\",\n       \"path\"\n      ],\n      \"type\": \"object\"\n     },\n     \"type\": \"array\"\n    },\n    \"rejectMessage\": {\n     \"description\": \"RejectMessage is an optional message displayed when a resource is rejected by a Reject ModRule. The field is a Golang template evaluated in the context of the object being rejected.\",\n     \"type\": \"string\"\n    },\n    \"type\": {\n     \"description\": \"Type describes the type of a ModRule. Valid values are: - \\\"Patch\\\" - the rule performs modifications on all the matching resources as they are created. - \\\"Reject\\\" - the rule rejects the creation of all matching resources.\",\n     \"enum\": [\n      \"Patch\",\n      \"Reject\"\n     ],\n     \"type\": \"string\"\n    }\n   },\n   \"required\": [\n    \"match\",\n    \"type\"\n   ],\n   \"type\": \"object\"\n  }\n },\n \"title\": \"Mod Rule\",\n \"type\": \"object\"\n}"}