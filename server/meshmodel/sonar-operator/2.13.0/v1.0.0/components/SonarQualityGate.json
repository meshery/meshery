{
  "capabilities": [
   {
    "description": "Initiate a performance test. Meshery will execute the load generation, collect metrics, and present the results.",
    "displayName": "Performance Test",
    "entityState": [
     "instance"
    ],
    "key": "",
    "kind": "action",
    "metadata": null,
    "schemaVersion": "capability.meshery.io/v1alpha1",
    "status": "enabled",
    "subType": "perf-test",
    "type": "operator",
    "version": "0.7.0"
   },
   {
    "description": "Configure the workload specific setting of a component",
    "displayName": "Workload Configuration",
    "entityState": [
     "declaration"
    ],
    "key": "",
    "kind": "mutate",
    "metadata": null,
    "schemaVersion": "capability.meshery.io/v1alpha1",
    "status": "enabled",
    "subType": "config",
    "type": "configuration",
    "version": "0.7.0"
   },
   {
    "description": "Configure Labels And Annotations for  the component ",
    "displayName": "Labels and Annotations Configuration",
    "entityState": [
     "declaration"
    ],
    "key": "",
    "kind": "mutate",
    "metadata": null,
    "schemaVersion": "capability.meshery.io/v1alpha1",
    "status": "enabled",
    "subType": "labels-and-annotations",
    "type": "configuration",
    "version": "0.7.0"
   },
   {
    "description": "View relationships for the component",
    "displayName": "Relationships",
    "entityState": [
     "declaration",
     "instance"
    ],
    "key": "",
    "kind": "view",
    "metadata": null,
    "schemaVersion": "capability.meshery.io/v1alpha1",
    "status": "enabled",
    "subType": "relationship",
    "type": "configuration",
    "version": "0.7.0"
   },
   {
    "description": "View Component Definition ",
    "displayName": "Json Schema",
    "entityState": [
     "declaration",
     "instance"
    ],
    "key": "",
    "kind": "view",
    "metadata": null,
    "schemaVersion": "capability.meshery.io/v1alpha1",
    "status": "enabled",
    "subType": "definition",
    "type": "configuration",
    "version": "0.7.0"
   },
   {
    "description": "Configure the visual styles for the component",
    "displayName": "Styling",
    "entityState": [
     "declaration"
    ],
    "key": "",
    "kind": "mutate",
    "metadata": null,
    "schemaVersion": "capability.meshery.io/v1alpha1",
    "status": "enabled",
    "subType": "",
    "type": "style",
    "version": "0.7.0"
   },
   {
    "description": "Change the shape of the component",
    "displayName": "Change Shape",
    "entityState": [
     "declaration"
    ],
    "key": "",
    "kind": "mutate",
    "metadata": null,
    "schemaVersion": "capability.meshery.io/v1alpha1",
    "status": "enabled",
    "subType": "shape",
    "type": "style",
    "version": "0.7.0"
   },
   {
    "description": "Drag and Drop a component into a parent component in graph view",
    "displayName": "Compound Drag And Drop",
    "entityState": [
     "declaration"
    ],
    "key": "",
    "kind": "interaction",
    "metadata": null,
    "schemaVersion": "capability.meshery.io/v1alpha1",
    "status": "enabled",
    "subType": "compoundDnd",
    "type": "graph",
    "version": "0.7.0"
   }
  ],
  "component": {
   "kind": "SonarQualityGate",
   "schema": "{\n \"description\": \"SonarQualityGate is the Schema for the sonarqualitygates API\",\n \"properties\": {\n  \"spec\": {\n   \"description\": \"SonarQualityGateSpec defines the desired state of SonarQualityGate\",\n   \"properties\": {\n    \"conditions\": {\n     \"additionalProperties\": {\n      \"description\": \"Condition defines the condition for quality gate.\",\n      \"properties\": {\n       \"error\": {\n        \"description\": \"Error is condition error threshold.\",\n        \"example\": \"10\",\n        \"maxLength\": 64,\n        \"type\": \"string\"\n       },\n       \"op\": {\n        \"description\": \"Op is condition operator. LT = is lower than GT = is greater than\",\n        \"enum\": [\n         \"LT\",\n         \"GT\"\n        ],\n        \"type\": \"string\"\n       }\n      },\n      \"required\": [\n       \"error\"\n      ],\n      \"type\": \"object\"\n     },\n     \"description\": \"Conditions is a list of conditions for quality gate. Key is a metric name, value is a condition.\",\n     \"example\": {\n      \"new_code_smells\": {\n       \"error\": \"10\",\n       \"op\": \"LT\"\n      }\n     },\n     \"nullable\": true,\n     \"type\": \"object\"\n    },\n    \"default\": {\n     \"description\": \"Default is a flag to set quality gate as default. Only one quality gate can be default. If several quality gates have default flag, the random one will be chosen. Default quality gate can't be deleted. You need to set another quality gate as default before.\",\n     \"example\": \"true\",\n     \"type\": \"boolean\"\n    },\n    \"name\": {\n     \"description\": \"Name is a name of quality gate. Name should be unique across all quality gates. Don't change this field after creation otherwise quality gate will be recreated.\",\n     \"example\": \"My Quality Gate\",\n     \"maxLength\": 100,\n     \"type\": \"string\"\n    },\n    \"sonarRef\": {\n     \"description\": \"SonarRef is a reference to Sonar custom resource.\",\n     \"properties\": {\n      \"kind\": {\n       \"default\": \"Sonar\",\n       \"description\": \"Kind specifies the kind of the Sonar resource.\",\n       \"type\": \"string\"\n      },\n      \"name\": {\n       \"description\": \"Name specifies the name of the Sonar resource.\",\n       \"type\": \"string\"\n      }\n     },\n     \"required\": [\n      \"name\"\n     ],\n     \"type\": \"object\"\n    }\n   },\n   \"required\": [\n    \"name\",\n    \"sonarRef\"\n   ],\n   \"type\": \"object\"\n  }\n },\n \"title\": \"Sonar Quality Gate\",\n \"type\": \"object\"\n}",
   "version": "edp.epam.com/v1alpha1"
  },
  "configuration": null,
  "description": "",
  "displayName": "Sonar Quality Gate",
  "format": "JSON",
  "id": "00000000-0000-0000-0000-000000000000",
  "metadata": {
   "genealogy": "",
   "isAnnotation": false,
   "isNamespaced": true,
   "published": false
  },
  "model": {
   "category": {
    "name": "Uncategorized"
   },
   "displayName": "Sonar Operator",
   "id": "00000000-0000-0000-0000-000000000000",
   "metadata": {
    "source_uri": "https://epam.github.io/edp-helm-charts/stable/packages/sonar-operator-3.1.1.tgz",
    "svgColor": "",
    "svgWhite": ""
   },
   "model": {
    "version": "2.13.0"
   },
   "name": "sonar-operator",
   "registrant": {
    "created_at": "0001-01-01T00:00:00Z",
    "credential_id": "00000000-0000-0000-0000-000000000000",
    "deleted_at": "0001-01-01T00:00:00Z",
    "id": "00000000-0000-0000-0000-000000000000",
    "kind": "artifacthub",
    "name": "Artifact Hub",
    "status": "discovered",
    "sub_type": "",
    "type": "registry",
    "updated_at": "0001-01-01T00:00:00Z",
    "user_id": "00000000-0000-0000-0000-000000000000"
   },
   "connection_id": "00000000-0000-0000-0000-000000000000",
   "schemaVersion": "models.meshery.io/v1beta1",
   "status": "ignored",
   "version": "v1.0.0",
   "components": null,
   "relationships": null
  },
  "schemaVersion": "components.meshery.io/v1beta1",
  "status": "ignored",
  "styles": {
   "primaryColor": "#00B39F",
   "secondaryColor": "#00D3A9",
   "shape": "circle",
   "svgColor": "",
   "svgWhite": ""
  },
  "version": "v1.0.0"
 }