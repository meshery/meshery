{"kind":"MongoDB","apiVersion":"v1","display-name":"Mongo DB","format":"JSON","metadata":{},"model":{"name":"mongodb-helm-charts","version":"1.17.2","display-name":"","category":"","sub-category":""},"schema":"{\n \"properties\": {\n  \"additionalMongodConfig\": {\n   \"description\": \"AdditionalMongodConfig is additional configuration that can be passed to each data-bearing mongod at runtime. Uses the same structure as the mongod configuration file: https://docs.mongodb.com/manual/reference/configuration-options/\",\n   \"type\": \"object\",\n   \"x-kubernetes-preserve-unknown-fields\": true\n  },\n  \"agent\": {\n   \"properties\": {\n    \"startupOptions\": {\n     \"additionalProperties\": {\n      \"type\": \"string\"\n     },\n     \"type\": \"object\"\n    }\n   },\n   \"type\": \"object\"\n  },\n  \"backup\": {\n   \"description\": \"Backup contains configuration options for configuring backup for this MongoDB resource\",\n   \"properties\": {\n    \"autoTerminateOnDeletion\": {\n     \"description\": \"AutoTerminateOnDeletion indicates if the Operator should stop and terminate the Backup before the cleanup, when the MongoDB CR is deleted\",\n     \"type\": \"boolean\"\n    },\n    \"mode\": {\n     \"enum\": [\n      \"enabled\",\n      \"disabled\",\n      \"terminated\"\n     ],\n     \"type\": \"string\"\n    }\n   },\n   \"type\": \"object\"\n  },\n  \"cloudManager\": {\n   \"properties\": {\n    \"configMapRef\": {\n     \"properties\": {\n      \"name\": {\n       \"type\": \"string\"\n      }\n     },\n     \"type\": \"object\"\n    }\n   },\n   \"type\": \"object\"\n  },\n  \"clusterDomain\": {\n   \"format\": \"hostname\",\n   \"type\": \"string\"\n  },\n  \"configServerCount\": {\n   \"type\": \"integer\"\n  },\n  \"configSrv\": {\n   \"properties\": {\n    \"additionalMongodConfig\": {\n     \"type\": \"object\",\n     \"x-kubernetes-preserve-unknown-fields\": true\n    },\n    \"agent\": {\n     \"properties\": {\n      \"startupOptions\": {\n       \"additionalProperties\": {\n        \"type\": \"string\"\n       },\n       \"type\": \"object\"\n      }\n     },\n     \"type\": \"object\"\n    }\n   },\n   \"type\": \"object\",\n   \"x-kubernetes-preserve-unknown-fields\": true\n  },\n  \"configSrvPodSpec\": {\n   \"properties\": {\n    \"persistence\": {\n     \"properties\": {\n      \"multiple\": {\n       \"properties\": {\n        \"data\": {\n         \"properties\": {\n          \"labelSelector\": {\n           \"type\": \"object\",\n           \"x-kubernetes-preserve-unknown-fields\": true\n          },\n          \"storage\": {\n           \"type\": \"string\"\n          },\n          \"storageClass\": {\n           \"type\": \"string\"\n          }\n         },\n         \"type\": \"object\"\n        },\n        \"journal\": {\n         \"properties\": {\n          \"labelSelector\": {\n           \"type\": \"object\",\n           \"x-kubernetes-preserve-unknown-fields\": true\n          },\n          \"storage\": {\n           \"type\": \"string\"\n          },\n          \"storageClass\": {\n           \"type\": \"string\"\n          }\n         },\n         \"type\": \"object\"\n        },\n        \"logs\": {\n         \"properties\": {\n          \"labelSelector\": {\n           \"type\": \"object\",\n           \"x-kubernetes-preserve-unknown-fields\": true\n          },\n          \"storage\": {\n           \"type\": \"string\"\n          },\n          \"storageClass\": {\n           \"type\": \"string\"\n          }\n         },\n         \"type\": \"object\"\n        }\n       },\n       \"type\": \"object\"\n      },\n      \"single\": {\n       \"properties\": {\n        \"labelSelector\": {\n         \"type\": \"object\",\n         \"x-kubernetes-preserve-unknown-fields\": true\n        },\n        \"storage\": {\n         \"type\": \"string\"\n        },\n        \"storageClass\": {\n         \"type\": \"string\"\n        }\n       },\n       \"type\": \"object\"\n      }\n     },\n     \"type\": \"object\"\n    },\n    \"podTemplate\": {\n     \"type\": \"object\",\n     \"x-kubernetes-preserve-unknown-fields\": true\n    }\n   },\n   \"type\": \"object\"\n  },\n  \"connectivity\": {\n   \"properties\": {\n    \"replicaSetHorizons\": {\n     \"items\": {\n      \"additionalProperties\": {\n       \"type\": \"string\"\n      },\n      \"description\": \"MongoDBHorizonConfig holds a map of horizon names to the node addresses, e.g. {   \\\"internal\\\": \\\"my-rs-2.my-internal-domain.com:31843\\\",   \\\"external\\\": \\\"my-rs-2.my-external-domain.com:21467\\\" } The key of each item in the map is an arbitrary, user-chosen string that represents the name of the horizon. The value of the item is the host and, optionally, the port that this mongod node will be connected to from.\",\n      \"type\": \"object\"\n     },\n     \"type\": \"array\"\n    }\n   },\n   \"type\": \"object\"\n  },\n  \"credentials\": {\n   \"description\": \"Name of the Secret holding credentials information\",\n   \"type\": \"string\"\n  },\n  \"exposedExternally\": {\n   \"description\": \"ExposedExternally determines whether a NodePort service should be created for the resource\",\n   \"type\": \"boolean\"\n  },\n  \"featureCompatibilityVersion\": {\n   \"type\": \"string\"\n  },\n  \"logLevel\": {\n   \"enum\": [\n    \"DEBUG\",\n    \"INFO\",\n    \"WARN\",\n    \"ERROR\",\n    \"FATAL\"\n   ],\n   \"type\": \"string\"\n  },\n  \"members\": {\n   \"description\": \"Amount of members for this MongoDB Replica Set\",\n   \"type\": \"integer\"\n  },\n  \"mongodsPerShardCount\": {\n   \"type\": \"integer\"\n  },\n  \"mongos\": {\n   \"properties\": {\n    \"additionalMongodConfig\": {\n     \"type\": \"object\",\n     \"x-kubernetes-preserve-unknown-fields\": true\n    },\n    \"agent\": {\n     \"properties\": {\n      \"startupOptions\": {\n       \"additionalProperties\": {\n        \"type\": \"string\"\n       },\n       \"type\": \"object\"\n      }\n     },\n     \"type\": \"object\"\n    }\n   },\n   \"type\": \"object\",\n   \"x-kubernetes-preserve-unknown-fields\": true\n  },\n  \"mongosCount\": {\n   \"type\": \"integer\"\n  },\n  \"mongosPodSpec\": {\n   \"properties\": {\n    \"persistence\": {\n     \"properties\": {\n      \"multiple\": {\n       \"properties\": {\n        \"data\": {\n         \"properties\": {\n          \"labelSelector\": {\n           \"type\": \"object\",\n           \"x-kubernetes-preserve-unknown-fields\": true\n          },\n          \"storage\": {\n           \"type\": \"string\"\n          },\n          \"storageClass\": {\n           \"type\": \"string\"\n          }\n         },\n         \"type\": \"object\"\n        },\n        \"journal\": {\n         \"properties\": {\n          \"labelSelector\": {\n           \"type\": \"object\",\n           \"x-kubernetes-preserve-unknown-fields\": true\n          },\n          \"storage\": {\n           \"type\": \"string\"\n          },\n          \"storageClass\": {\n           \"type\": \"string\"\n          }\n         },\n         \"type\": \"object\"\n        },\n        \"logs\": {\n         \"properties\": {\n          \"labelSelector\": {\n           \"type\": \"object\",\n           \"x-kubernetes-preserve-unknown-fields\": true\n          },\n          \"storage\": {\n           \"type\": \"string\"\n          },\n          \"storageClass\": {\n           \"type\": \"string\"\n          }\n         },\n         \"type\": \"object\"\n        }\n       },\n       \"type\": \"object\"\n      },\n      \"single\": {\n       \"properties\": {\n        \"labelSelector\": {\n         \"type\": \"object\",\n         \"x-kubernetes-preserve-unknown-fields\": true\n        },\n        \"storage\": {\n         \"type\": \"string\"\n        },\n        \"storageClass\": {\n         \"type\": \"string\"\n        }\n       },\n       \"type\": \"object\"\n      }\n     },\n     \"type\": \"object\"\n    },\n    \"podTemplate\": {\n     \"type\": \"object\",\n     \"x-kubernetes-preserve-unknown-fields\": true\n    }\n   },\n   \"type\": \"object\"\n  },\n  \"opsManager\": {\n   \"properties\": {\n    \"configMapRef\": {\n     \"properties\": {\n      \"name\": {\n       \"type\": \"string\"\n      }\n     },\n     \"type\": \"object\"\n    }\n   },\n   \"type\": \"object\"\n  },\n  \"persistent\": {\n   \"type\": \"boolean\"\n  },\n  \"podSpec\": {\n   \"properties\": {\n    \"persistence\": {\n     \"properties\": {\n      \"multiple\": {\n       \"properties\": {\n        \"data\": {\n         \"properties\": {\n          \"labelSelector\": {\n           \"type\": \"object\",\n           \"x-kubernetes-preserve-unknown-fields\": true\n          },\n          \"storage\": {\n           \"type\": \"string\"\n          },\n          \"storageClass\": {\n           \"type\": \"string\"\n          }\n         },\n         \"type\": \"object\"\n        },\n        \"journal\": {\n         \"properties\": {\n          \"labelSelector\": {\n           \"type\": \"object\",\n           \"x-kubernetes-preserve-unknown-fields\": true\n          },\n          \"storage\": {\n           \"type\": \"string\"\n          },\n          \"storageClass\": {\n           \"type\": \"string\"\n          }\n         },\n         \"type\": \"object\"\n        },\n        \"logs\": {\n         \"properties\": {\n          \"labelSelector\": {\n           \"type\": \"object\",\n           \"x-kubernetes-preserve-unknown-fields\": true\n          },\n          \"storage\": {\n           \"type\": \"string\"\n          },\n          \"storageClass\": {\n           \"type\": \"string\"\n          }\n         },\n         \"type\": \"object\"\n        }\n       },\n       \"type\": \"object\"\n      },\n      \"single\": {\n       \"properties\": {\n        \"labelSelector\": {\n         \"type\": \"object\",\n         \"x-kubernetes-preserve-unknown-fields\": true\n        },\n        \"storage\": {\n         \"type\": \"string\"\n        },\n        \"storageClass\": {\n         \"type\": \"string\"\n        }\n       },\n       \"type\": \"object\"\n      }\n     },\n     \"type\": \"object\"\n    },\n    \"podTemplate\": {\n     \"type\": \"object\",\n     \"x-kubernetes-preserve-unknown-fields\": true\n    }\n   },\n   \"type\": \"object\"\n  },\n  \"prometheus\": {\n   \"description\": \"Prometheus configurations.\",\n   \"properties\": {\n    \"metricsPath\": {\n     \"description\": \"Indicates path to the metrics endpoint.\",\n     \"pattern\": \"^\\\\/[a-z0-9]+$\",\n     \"type\": \"string\"\n    },\n    \"passwordSecretRef\": {\n     \"description\": \"Name of a Secret containing a HTTP Basic Auth Password.\",\n     \"properties\": {\n      \"key\": {\n       \"description\": \"Key is the key in the secret storing this password. Defaults to \\\"password\\\"\",\n       \"type\": \"string\"\n      },\n      \"name\": {\n       \"description\": \"Name is the name of the secret storing this user's password\",\n       \"type\": \"string\"\n      }\n     },\n     \"required\": [\n      \"name\"\n     ],\n     \"type\": \"object\"\n    },\n    \"port\": {\n     \"description\": \"Port where metrics endpoint will bind to. Defaults to 9216.\",\n     \"type\": \"integer\"\n    },\n    \"tlsSecretKeyRef\": {\n     \"description\": \"Name of a Secret (type kubernetes.io/tls) holding the certificates to use in the Prometheus endpoint.\",\n     \"properties\": {\n      \"key\": {\n       \"description\": \"Key is the key in the secret storing this password. Defaults to \\\"password\\\"\",\n       \"type\": \"string\"\n      },\n      \"name\": {\n       \"description\": \"Name is the name of the secret storing this user's password\",\n       \"type\": \"string\"\n      }\n     },\n     \"required\": [\n      \"name\"\n     ],\n     \"type\": \"object\"\n    },\n    \"username\": {\n     \"description\": \"HTTP Basic Auth Username for metrics endpoint.\",\n     \"type\": \"string\"\n    }\n   },\n   \"required\": [\n    \"passwordSecretRef\",\n    \"username\"\n   ],\n   \"type\": \"object\"\n  },\n  \"security\": {\n   \"properties\": {\n    \"authentication\": {\n     \"description\": \"Authentication holds various authentication related settings that affect this MongoDB resource.\",\n     \"properties\": {\n      \"agents\": {\n       \"description\": \"Agents contains authentication configuration properties for the agents\",\n       \"properties\": {\n        \"automationLdapGroupDN\": {\n         \"type\": \"string\"\n        },\n        \"automationPasswordSecretRef\": {\n         \"description\": \"SecretKeySelector selects a key of a Secret.\",\n         \"properties\": {\n          \"key\": {\n           \"description\": \"The key of the secret to select from.  Must be a valid secret key.\",\n           \"type\": \"string\"\n          },\n          \"name\": {\n           \"description\": \"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?\",\n           \"type\": \"string\"\n          },\n          \"optional\": {\n           \"description\": \"Specify whether the Secret or its key must be defined\",\n           \"type\": \"boolean\"\n          }\n         },\n         \"required\": [\n          \"key\"\n         ],\n         \"type\": \"object\"\n        },\n        \"automationUserName\": {\n         \"type\": \"string\"\n        },\n        \"clientCertificateSecretRef\": {\n         \"type\": \"object\",\n         \"x-kubernetes-preserve-unknown-fields\": true\n        },\n        \"mode\": {\n         \"description\": \"Mode is the desired Authentication mode that the agents will use\",\n         \"type\": \"string\"\n        }\n       },\n       \"required\": [\n        \"mode\"\n       ],\n       \"type\": \"object\"\n      },\n      \"enabled\": {\n       \"type\": \"boolean\"\n      },\n      \"ignoreUnknownUsers\": {\n       \"description\": \"IgnoreUnknownUsers maps to the inverse of auth.authoritativeSet\",\n       \"type\": \"boolean\"\n      },\n      \"internalCluster\": {\n       \"type\": \"string\"\n      },\n      \"ldap\": {\n       \"description\": \"LDAP Configuration\",\n       \"properties\": {\n        \"authzQueryTemplate\": {\n         \"type\": \"string\"\n        },\n        \"bindQueryPasswordSecretRef\": {\n         \"properties\": {\n          \"name\": {\n           \"type\": \"string\"\n          }\n         },\n         \"required\": [\n          \"name\"\n         ],\n         \"type\": \"object\"\n        },\n        \"bindQueryUser\": {\n         \"type\": \"string\"\n        },\n        \"caConfigMapRef\": {\n         \"description\": \"Allows to point at a ConfigMap/key with a CA file to mount on the Pod\",\n         \"properties\": {\n          \"key\": {\n           \"description\": \"The key to select.\",\n           \"type\": \"string\"\n          },\n          \"name\": {\n           \"description\": \"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?\",\n           \"type\": \"string\"\n          },\n          \"optional\": {\n           \"description\": \"Specify whether the ConfigMap or its key must be defined\",\n           \"type\": \"boolean\"\n          }\n         },\n         \"required\": [\n          \"key\"\n         ],\n         \"type\": \"object\"\n        },\n        \"servers\": {\n         \"items\": {\n          \"type\": \"string\"\n         },\n         \"type\": \"array\"\n        },\n        \"timeoutMS\": {\n         \"type\": \"integer\"\n        },\n        \"transportSecurity\": {\n         \"enum\": [\n          \"tls\",\n          \"none\"\n         ],\n         \"type\": \"string\"\n        },\n        \"userCacheInvalidationInterval\": {\n         \"type\": \"integer\"\n        },\n        \"userToDNMapping\": {\n         \"type\": \"string\"\n        },\n        \"validateLDAPServerConfig\": {\n         \"type\": \"boolean\"\n        }\n       },\n       \"type\": \"object\"\n      },\n      \"modes\": {\n       \"items\": {\n        \"type\": \"string\"\n       },\n       \"type\": \"array\"\n      },\n      \"requireClientTLSAuthentication\": {\n       \"description\": \"Clients should present valid TLS certificates\",\n       \"type\": \"boolean\"\n      }\n     },\n     \"required\": [\n      \"enabled\"\n     ],\n     \"type\": \"object\"\n    },\n    \"certsSecretPrefix\": {\n     \"type\": \"string\"\n    },\n    \"roles\": {\n     \"items\": {\n      \"properties\": {\n       \"authenticationRestrictions\": {\n        \"items\": {\n         \"properties\": {\n          \"clientSource\": {\n           \"items\": {\n            \"type\": \"string\"\n           },\n           \"type\": \"array\"\n          },\n          \"serverAddress\": {\n           \"items\": {\n            \"type\": \"string\"\n           },\n           \"type\": \"array\"\n          }\n         },\n         \"type\": \"object\"\n        },\n        \"type\": \"array\"\n       },\n       \"db\": {\n        \"type\": \"string\"\n       },\n       \"privileges\": {\n        \"items\": {\n         \"properties\": {\n          \"actions\": {\n           \"items\": {\n            \"type\": \"string\"\n           },\n           \"type\": \"array\"\n          },\n          \"resource\": {\n           \"properties\": {\n            \"cluster\": {\n             \"type\": \"boolean\"\n            },\n            \"collection\": {\n             \"type\": \"string\"\n            },\n            \"db\": {\n             \"type\": \"string\"\n            }\n           },\n           \"type\": \"object\"\n          }\n         },\n         \"required\": [\n          \"actions\",\n          \"resource\"\n         ],\n         \"type\": \"object\"\n        },\n        \"type\": \"array\"\n       },\n       \"role\": {\n        \"type\": \"string\"\n       },\n       \"roles\": {\n        \"items\": {\n         \"properties\": {\n          \"db\": {\n           \"type\": \"string\"\n          },\n          \"role\": {\n           \"type\": \"string\"\n          }\n         },\n         \"required\": [\n          \"db\",\n          \"role\"\n         ],\n         \"type\": \"object\"\n        },\n        \"type\": \"array\"\n       }\n      },\n      \"required\": [\n       \"db\",\n       \"role\"\n      ],\n      \"type\": \"object\"\n     },\n     \"type\": \"array\"\n    },\n    \"tls\": {\n     \"properties\": {\n      \"additionalCertificateDomains\": {\n       \"items\": {\n        \"type\": \"string\"\n       },\n       \"type\": \"array\"\n      },\n      \"ca\": {\n       \"description\": \"CA corresponds to a ConfigMap containing an entry for the CA certificate (ca.pem) used to validate the certificates created already.\",\n       \"type\": \"string\"\n      },\n      \"enabled\": {\n       \"description\": \"DEPRECATED please enable TLS by setting `security.certsSecretPrefix` or `security.tls.secretRef.prefix`. Enables TLS for this resource. This will make the operator try to mount a Secret with a defined name (\\u003cresource-name\\u003e-cert). This is only used when enabling TLS on a MongoDB resource, and not on the AppDB, where TLS is configured by setting `secretRef.Name`.\",\n       \"type\": \"boolean\"\n      },\n      \"secretRef\": {\n       \"description\": \"DEPRECATED please use security.certsSecretPrefix instead SecretRef points to a Secret object containing the certificates to use when enabling TLS.\",\n       \"properties\": {\n        \"prefix\": {\n         \"description\": \"DEPRECATED please use security.certsSecretPrefix instead\",\n         \"type\": \"string\"\n        }\n       },\n       \"required\": [\n        \"prefix\"\n       ],\n       \"type\": \"object\"\n      }\n     },\n     \"type\": \"object\"\n    }\n   },\n   \"type\": \"object\"\n  },\n  \"service\": {\n   \"description\": \"DEPRECATED please use `spec.statefulSet.spec.serviceName` to provide a custom service name. this is an optional service, it will get the name \\\"\\u003crsName\\u003e-service\\\" in case not provided\",\n   \"type\": \"string\"\n  },\n  \"shard\": {\n   \"properties\": {\n    \"additionalMongodConfig\": {\n     \"type\": \"object\",\n     \"x-kubernetes-preserve-unknown-fields\": true\n    },\n    \"agent\": {\n     \"properties\": {\n      \"startupOptions\": {\n       \"additionalProperties\": {\n        \"type\": \"string\"\n       },\n       \"type\": \"object\"\n      }\n     },\n     \"type\": \"object\"\n    }\n   },\n   \"type\": \"object\",\n   \"x-kubernetes-preserve-unknown-fields\": true\n  },\n  \"shardCount\": {\n   \"type\": \"integer\"\n  },\n  \"shardPodSpec\": {\n   \"properties\": {\n    \"persistence\": {\n     \"properties\": {\n      \"multiple\": {\n       \"properties\": {\n        \"data\": {\n         \"properties\": {\n          \"labelSelector\": {\n           \"type\": \"object\",\n           \"x-kubernetes-preserve-unknown-fields\": true\n          },\n          \"storage\": {\n           \"type\": \"string\"\n          },\n          \"storageClass\": {\n           \"type\": \"string\"\n          }\n         },\n         \"type\": \"object\"\n        },\n        \"journal\": {\n         \"properties\": {\n          \"labelSelector\": {\n           \"type\": \"object\",\n           \"x-kubernetes-preserve-unknown-fields\": true\n          },\n          \"storage\": {\n           \"type\": \"string\"\n          },\n          \"storageClass\": {\n           \"type\": \"string\"\n          }\n         },\n         \"type\": \"object\"\n        },\n        \"logs\": {\n         \"properties\": {\n          \"labelSelector\": {\n           \"type\": \"object\",\n           \"x-kubernetes-preserve-unknown-fields\": true\n          },\n          \"storage\": {\n           \"type\": \"string\"\n          },\n          \"storageClass\": {\n           \"type\": \"string\"\n          }\n         },\n         \"type\": \"object\"\n        }\n       },\n       \"type\": \"object\"\n      },\n      \"single\": {\n       \"properties\": {\n        \"labelSelector\": {\n         \"type\": \"object\",\n         \"x-kubernetes-preserve-unknown-fields\": true\n        },\n        \"storage\": {\n         \"type\": \"string\"\n        },\n        \"storageClass\": {\n         \"type\": \"string\"\n        }\n       },\n       \"type\": \"object\"\n      }\n     },\n     \"type\": \"object\"\n    },\n    \"podTemplate\": {\n     \"type\": \"object\",\n     \"x-kubernetes-preserve-unknown-fields\": true\n    }\n   },\n   \"type\": \"object\"\n  },\n  \"statefulSet\": {\n   \"description\": \"StatefulSetConfiguration holds the optional custom StatefulSet that should be merged into the operator created one.\",\n   \"properties\": {\n    \"spec\": {\n     \"type\": \"object\",\n     \"x-kubernetes-preserve-unknown-fields\": true\n    }\n   },\n   \"required\": [\n    \"spec\"\n   ],\n   \"type\": \"object\"\n  },\n  \"type\": {\n   \"enum\": [\n    \"Standalone\",\n    \"ReplicaSet\",\n    \"ShardedCluster\"\n   ],\n   \"type\": \"string\"\n  },\n  \"version\": {\n   \"pattern\": \"^[0-9]+.[0-9]+.[0-9]+(-.+)?$|^$\",\n   \"type\": \"string\"\n  }\n },\n \"required\": [\n  \"credentials\",\n  \"type\",\n  \"version\"\n ],\n \"title\": \"Mongo DB\",\n \"type\": \"object\",\n \"x-kubernetes-preserve-unknown-fields\": true\n}"}