{"kind":"KeycloakClient","apiVersion":"v1alpha1","display-name":"Keycloak Client","format":"JSON","metadata":{},"model":{"name":"openinfradev","version":"0.1.0","display-name":"","category":"","sub-category":""},"schema":"{\n \"description\": \"KeycloakClientSpec defines the desired state of KeycloakClient.\",\n \"properties\": {\n  \"client\": {\n   \"description\": \"Keycloak Client REST object.\",\n   \"properties\": {\n    \"access\": {\n     \"additionalProperties\": {\n      \"type\": \"boolean\"\n     },\n     \"description\": \"Access options.\",\n     \"type\": \"object\"\n    },\n    \"adminUrl\": {\n     \"description\": \"Application Admin URL.\",\n     \"type\": \"string\"\n    },\n    \"attributes\": {\n     \"additionalProperties\": {\n      \"type\": \"string\"\n     },\n     \"description\": \"Client Attributes.\",\n     \"type\": \"object\"\n    },\n    \"authenticationFlowBindingOverrides\": {\n     \"additionalProperties\": {\n      \"type\": \"string\"\n     },\n     \"description\": \"Authentication Flow Binding Overrides.\",\n     \"type\": \"object\"\n    },\n    \"authorizationServicesEnabled\": {\n     \"description\": \"True if fine-grained authorization support is enabled for this client.\",\n     \"type\": \"boolean\"\n    },\n    \"authorizationSettings\": {\n     \"description\": \"Authorization settings for this resource server.\",\n     \"properties\": {\n      \"allowRemoteResourceManagement\": {\n       \"description\": \"True if resources should be managed remotely by the resource server.\",\n       \"type\": \"boolean\"\n      },\n      \"clientId\": {\n       \"description\": \"Client ID.\",\n       \"type\": \"string\"\n      },\n      \"decisionStrategy\": {\n       \"description\": \"The decision strategy dictates how permissions are evaluated and how a final decision is obtained. 'Affirmative' means that at least one permission must evaluate to a positive decision in order to grant access to a resource and its scopes. 'Unanimous' means that all permissions must evaluate to a positive decision in order for the final decision to be also positive.\",\n       \"type\": \"string\"\n      },\n      \"id\": {\n       \"description\": \"ID.\",\n       \"type\": \"string\"\n      },\n      \"name\": {\n       \"description\": \"Name.\",\n       \"type\": \"string\"\n      },\n      \"policies\": {\n       \"description\": \"Policies.\",\n       \"items\": {\n        \"description\": \"https://www.keycloak.org/docs-api/12.0/rest-api/index.html#_policyrepresentation\",\n        \"properties\": {\n         \"config\": {\n          \"additionalProperties\": {\n           \"type\": \"string\"\n          },\n          \"description\": \"Config.\",\n          \"type\": \"object\"\n         },\n         \"decisionStrategy\": {\n          \"description\": \"The decision strategy dictates how the policies associated with a given permission are evaluated and how a final decision is obtained. 'Affirmative' means that at least one policy must evaluate to a positive decision in order for the final decision to be also positive. 'Unanimous' means that all policies must evaluate to a positive decision in order for the final decision to be also positive. 'Consensus' means that the number of positive decisions must be greater than the number of negative decisions. If the number of positive and negative is the same, the final decision will be negative.\",\n          \"type\": \"string\"\n         },\n         \"description\": {\n          \"description\": \"A description for this policy.\",\n          \"type\": \"string\"\n         },\n         \"id\": {\n          \"description\": \"ID.\",\n          \"type\": \"string\"\n         },\n         \"logic\": {\n          \"description\": \"The logic dictates how the policy decision should be made. If 'Positive', the resulting effect (permit or deny) obtained during the evaluation of this policy will be used to perform a decision. If 'Negative', the resulting effect will be negated, in other words, a permit becomes a deny and vice-versa.\",\n          \"type\": \"string\"\n         },\n         \"name\": {\n          \"description\": \"The name of this policy.\",\n          \"type\": \"string\"\n         },\n         \"owner\": {\n          \"description\": \"Owner.\",\n          \"type\": \"string\"\n         },\n         \"policies\": {\n          \"description\": \"Policies.\",\n          \"items\": {\n           \"type\": \"string\"\n          },\n          \"type\": \"array\"\n         },\n         \"resources\": {\n          \"description\": \"Resources.\",\n          \"items\": {\n           \"type\": \"string\"\n          },\n          \"type\": \"array\"\n         },\n         \"resourcesData\": {\n          \"description\": \"Resources Data.\",\n          \"items\": {\n           \"description\": \"https://www.keycloak.org/docs-api/12.0/rest-api/index.html#_resourcerepresentation\",\n           \"properties\": {\n            \"_id\": {\n             \"description\": \"ID.\",\n             \"type\": \"string\"\n            },\n            \"attributes\": {\n             \"additionalProperties\": {\n              \"type\": \"string\"\n             },\n             \"description\": \"The attributes associated with the resource.\",\n             \"type\": \"object\"\n            },\n            \"displayName\": {\n             \"description\": \"A unique name for this resource. The name can be used to uniquely identify a resource, useful when querying for a specific resource.\",\n             \"type\": \"string\"\n            },\n            \"icon_uri\": {\n             \"description\": \"An URI pointing to an icon.\",\n             \"type\": \"string\"\n            },\n            \"name\": {\n             \"description\": \"A unique name for this resource. The name can be used to uniquely identify a resource, useful when querying for a specific resource.\",\n             \"type\": \"string\"\n            },\n            \"ownerManagedAccess\": {\n             \"description\": \"True if the access to this resource can be managed by the resource owner.\",\n             \"type\": \"boolean\"\n            },\n            \"scopes\": {\n             \"description\": \"The scopes associated with this resource.\",\n             \"items\": {\n              \"x-kubernetes-preserve-unknown-fields\": true\n             },\n             \"type\": \"array\"\n            },\n            \"type\": {\n             \"description\": \"The type of this resource. It can be used to group different resource instances with the same type.\",\n             \"type\": \"string\"\n            },\n            \"uris\": {\n             \"description\": \"Set of URIs which are protected by resource.\",\n             \"items\": {\n              \"type\": \"string\"\n             },\n             \"type\": \"array\"\n            }\n           },\n           \"type\": \"object\"\n          },\n          \"type\": \"array\"\n         },\n         \"scopes\": {\n          \"description\": \"Scopes.\",\n          \"items\": {\n           \"type\": \"string\"\n          },\n          \"type\": \"array\"\n         },\n         \"scopesData\": {\n          \"description\": \"Scopes Data.\",\n          \"items\": {\n           \"x-kubernetes-preserve-unknown-fields\": true\n          },\n          \"type\": \"array\"\n         },\n         \"type\": {\n          \"description\": \"Type.\",\n          \"type\": \"string\"\n         }\n        },\n        \"type\": \"object\"\n       },\n       \"type\": \"array\"\n      },\n      \"policyEnforcementMode\": {\n       \"description\": \"The policy enforcement mode dictates how policies are enforced when evaluating authorization requests. 'Enforcing' means requests are denied by default even when there is no policy associated with a given resource. 'Permissive' means requests are allowed even when there is no policy associated with a given resource. 'Disabled' completely disables the evaluation of policies and allows access to any resource.\",\n       \"type\": \"string\"\n      },\n      \"resources\": {\n       \"description\": \"Resources.\",\n       \"items\": {\n        \"description\": \"https://www.keycloak.org/docs-api/12.0/rest-api/index.html#_resourcerepresentation\",\n        \"properties\": {\n         \"_id\": {\n          \"description\": \"ID.\",\n          \"type\": \"string\"\n         },\n         \"attributes\": {\n          \"additionalProperties\": {\n           \"type\": \"string\"\n          },\n          \"description\": \"The attributes associated with the resource.\",\n          \"type\": \"object\"\n         },\n         \"displayName\": {\n          \"description\": \"A unique name for this resource. The name can be used to uniquely identify a resource, useful when querying for a specific resource.\",\n          \"type\": \"string\"\n         },\n         \"icon_uri\": {\n          \"description\": \"An URI pointing to an icon.\",\n          \"type\": \"string\"\n         },\n         \"name\": {\n          \"description\": \"A unique name for this resource. The name can be used to uniquely identify a resource, useful when querying for a specific resource.\",\n          \"type\": \"string\"\n         },\n         \"ownerManagedAccess\": {\n          \"description\": \"True if the access to this resource can be managed by the resource owner.\",\n          \"type\": \"boolean\"\n         },\n         \"scopes\": {\n          \"description\": \"The scopes associated with this resource.\",\n          \"items\": {\n           \"x-kubernetes-preserve-unknown-fields\": true\n          },\n          \"type\": \"array\"\n         },\n         \"type\": {\n          \"description\": \"The type of this resource. It can be used to group different resource instances with the same type.\",\n          \"type\": \"string\"\n         },\n         \"uris\": {\n          \"description\": \"Set of URIs which are protected by resource.\",\n          \"items\": {\n           \"type\": \"string\"\n          },\n          \"type\": \"array\"\n         }\n        },\n        \"type\": \"object\"\n       },\n       \"type\": \"array\"\n      },\n      \"scopes\": {\n       \"description\": \"Authorization Scopes.\",\n       \"items\": {\n        \"description\": \"https://www.keycloak.org/docs-api/12.0/rest-api/index.html#_scoperepresentation\",\n        \"properties\": {\n         \"displayName\": {\n          \"description\": \"A unique name for this scope. The name can be used to uniquely identify a scope, useful when querying for a specific scope.\",\n          \"type\": \"string\"\n         },\n         \"iconUri\": {\n          \"description\": \"An URI pointing to an icon.\",\n          \"type\": \"string\"\n         },\n         \"id\": {\n          \"description\": \"ID.\",\n          \"type\": \"string\"\n         },\n         \"name\": {\n          \"description\": \"A unique name for this scope. The name can be used to uniquely identify a scope, useful when querying for a specific scope.\",\n          \"type\": \"string\"\n         },\n         \"policies\": {\n          \"description\": \"Policies.\",\n          \"items\": {\n           \"description\": \"https://www.keycloak.org/docs-api/12.0/rest-api/index.html#_policyrepresentation\",\n           \"properties\": {\n            \"config\": {\n             \"additionalProperties\": {\n              \"type\": \"string\"\n             },\n             \"description\": \"Config.\",\n             \"type\": \"object\"\n            },\n            \"decisionStrategy\": {\n             \"description\": \"The decision strategy dictates how the policies associated with a given permission are evaluated and how a final decision is obtained. 'Affirmative' means that at least one policy must evaluate to a positive decision in order for the final decision to be also positive. 'Unanimous' means that all policies must evaluate to a positive decision in order for the final decision to be also positive. 'Consensus' means that the number of positive decisions must be greater than the number of negative decisions. If the number of positive and negative is the same, the final decision will be negative.\",\n             \"type\": \"string\"\n            },\n            \"description\": {\n             \"description\": \"A description for this policy.\",\n             \"type\": \"string\"\n            },\n            \"id\": {\n             \"description\": \"ID.\",\n             \"type\": \"string\"\n            },\n            \"logic\": {\n             \"description\": \"The logic dictates how the policy decision should be made. If 'Positive', the resulting effect (permit or deny) obtained during the evaluation of this policy will be used to perform a decision. If 'Negative', the resulting effect will be negated, in other words, a permit becomes a deny and vice-versa.\",\n             \"type\": \"string\"\n            },\n            \"name\": {\n             \"description\": \"The name of this policy.\",\n             \"type\": \"string\"\n            },\n            \"owner\": {\n             \"description\": \"Owner.\",\n             \"type\": \"string\"\n            },\n            \"policies\": {\n             \"description\": \"Policies.\",\n             \"items\": {\n              \"type\": \"string\"\n             },\n             \"type\": \"array\"\n            },\n            \"resources\": {\n             \"description\": \"Resources.\",\n             \"items\": {\n              \"type\": \"string\"\n             },\n             \"type\": \"array\"\n            },\n            \"resourcesData\": {\n             \"description\": \"Resources Data.\",\n             \"items\": {\n              \"description\": \"https://www.keycloak.org/docs-api/12.0/rest-api/index.html#_resourcerepresentation\",\n              \"properties\": {\n               \"_id\": {\n                \"description\": \"ID.\",\n                \"type\": \"string\"\n               },\n               \"attributes\": {\n                \"additionalProperties\": {\n                 \"type\": \"string\"\n                },\n                \"description\": \"The attributes associated with the resource.\",\n                \"type\": \"object\"\n               },\n               \"displayName\": {\n                \"description\": \"A unique name for this resource. The name can be used to uniquely identify a resource, useful when querying for a specific resource.\",\n                \"type\": \"string\"\n               },\n               \"icon_uri\": {\n                \"description\": \"An URI pointing to an icon.\",\n                \"type\": \"string\"\n               },\n               \"name\": {\n                \"description\": \"A unique name for this resource. The name can be used to uniquely identify a resource, useful when querying for a specific resource.\",\n                \"type\": \"string\"\n               },\n               \"ownerManagedAccess\": {\n                \"description\": \"True if the access to this resource can be managed by the resource owner.\",\n                \"type\": \"boolean\"\n               },\n               \"scopes\": {\n                \"description\": \"The scopes associated with this resource.\",\n                \"items\": {\n                 \"x-kubernetes-preserve-unknown-fields\": true\n                },\n                \"type\": \"array\"\n               },\n               \"type\": {\n                \"description\": \"The type of this resource. It can be used to group different resource instances with the same type.\",\n                \"type\": \"string\"\n               },\n               \"uris\": {\n                \"description\": \"Set of URIs which are protected by resource.\",\n                \"items\": {\n                 \"type\": \"string\"\n                },\n                \"type\": \"array\"\n               }\n              },\n              \"type\": \"object\"\n             },\n             \"type\": \"array\"\n            },\n            \"scopes\": {\n             \"description\": \"Scopes.\",\n             \"items\": {\n              \"type\": \"string\"\n             },\n             \"type\": \"array\"\n            },\n            \"scopesData\": {\n             \"description\": \"Scopes Data.\",\n             \"items\": {\n              \"x-kubernetes-preserve-unknown-fields\": true\n             },\n             \"type\": \"array\"\n            },\n            \"type\": {\n             \"description\": \"Type.\",\n             \"type\": \"string\"\n            }\n           },\n           \"type\": \"object\"\n          },\n          \"type\": \"array\"\n         },\n         \"resources\": {\n          \"description\": \"Resources.\",\n          \"items\": {\n           \"description\": \"https://www.keycloak.org/docs-api/12.0/rest-api/index.html#_resourcerepresentation\",\n           \"properties\": {\n            \"_id\": {\n             \"description\": \"ID.\",\n             \"type\": \"string\"\n            },\n            \"attributes\": {\n             \"additionalProperties\": {\n              \"type\": \"string\"\n             },\n             \"description\": \"The attributes associated with the resource.\",\n             \"type\": \"object\"\n            },\n            \"displayName\": {\n             \"description\": \"A unique name for this resource. The name can be used to uniquely identify a resource, useful when querying for a specific resource.\",\n             \"type\": \"string\"\n            },\n            \"icon_uri\": {\n             \"description\": \"An URI pointing to an icon.\",\n             \"type\": \"string\"\n            },\n            \"name\": {\n             \"description\": \"A unique name for this resource. The name can be used to uniquely identify a resource, useful when querying for a specific resource.\",\n             \"type\": \"string\"\n            },\n            \"ownerManagedAccess\": {\n             \"description\": \"True if the access to this resource can be managed by the resource owner.\",\n             \"type\": \"boolean\"\n            },\n            \"scopes\": {\n             \"description\": \"The scopes associated with this resource.\",\n             \"items\": {\n              \"x-kubernetes-preserve-unknown-fields\": true\n             },\n             \"type\": \"array\"\n            },\n            \"type\": {\n             \"description\": \"The type of this resource. It can be used to group different resource instances with the same type.\",\n             \"type\": \"string\"\n            },\n            \"uris\": {\n             \"description\": \"Set of URIs which are protected by resource.\",\n             \"items\": {\n              \"type\": \"string\"\n             },\n             \"type\": \"array\"\n            }\n           },\n           \"type\": \"object\"\n          },\n          \"type\": \"array\"\n         }\n        },\n        \"type\": \"object\"\n       },\n       \"type\": \"array\"\n      }\n     },\n     \"type\": \"object\"\n    },\n    \"baseUrl\": {\n     \"description\": \"Application base URL.\",\n     \"type\": \"string\"\n    },\n    \"bearerOnly\": {\n     \"description\": \"True if a client supports only Bearer Tokens.\",\n     \"type\": \"boolean\"\n    },\n    \"clientAuthenticatorType\": {\n     \"description\": \"What Client authentication type to use.\",\n     \"type\": \"string\"\n    },\n    \"clientId\": {\n     \"description\": \"Client ID.\",\n     \"type\": \"string\"\n    },\n    \"consentRequired\": {\n     \"description\": \"True if Consent Screen is required.\",\n     \"type\": \"boolean\"\n    },\n    \"defaultClientScopes\": {\n     \"description\": \"A list of default client scopes. Default client scopes are always applied when issuing OpenID Connect tokens or SAML assertions for this client.\",\n     \"items\": {\n      \"type\": \"string\"\n     },\n     \"type\": \"array\"\n    },\n    \"defaultRoles\": {\n     \"description\": \"Default Client roles.\",\n     \"items\": {\n      \"type\": \"string\"\n     },\n     \"type\": \"array\"\n    },\n    \"description\": {\n     \"description\": \"Client description.\",\n     \"type\": \"string\"\n    },\n    \"directAccessGrantsEnabled\": {\n     \"description\": \"True if Direct Grant is enabled.\",\n     \"type\": \"boolean\"\n    },\n    \"enabled\": {\n     \"description\": \"Client enabled flag.\",\n     \"type\": \"boolean\"\n    },\n    \"frontchannelLogout\": {\n     \"description\": \"True if this client supports Front Channel logout.\",\n     \"type\": \"boolean\"\n    },\n    \"fullScopeAllowed\": {\n     \"description\": \"True if Full Scope is allowed.\",\n     \"type\": \"boolean\"\n    },\n    \"id\": {\n     \"description\": \"Client ID. If not specified, automatically generated.\",\n     \"type\": \"string\"\n    },\n    \"implicitFlowEnabled\": {\n     \"description\": \"True if Implicit flow is enabled.\",\n     \"type\": \"boolean\"\n    },\n    \"name\": {\n     \"description\": \"Client name.\",\n     \"type\": \"string\"\n    },\n    \"nodeReRegistrationTimeout\": {\n     \"description\": \"Node registration timeout.\",\n     \"type\": \"integer\"\n    },\n    \"notBefore\": {\n     \"description\": \"Not Before setting.\",\n     \"type\": \"integer\"\n    },\n    \"optionalClientScopes\": {\n     \"description\": \"A list of optional client scopes. Optional client scopes are applied when issuing tokens for this client, but only when they are requested by the scope parameter in the OpenID Connect authorization request.\",\n     \"items\": {\n      \"type\": \"string\"\n     },\n     \"type\": \"array\"\n    },\n    \"protocol\": {\n     \"description\": \"Protocol used for this Client.\",\n     \"type\": \"string\"\n    },\n    \"protocolMappers\": {\n     \"description\": \"Protocol Mappers.\",\n     \"items\": {\n      \"properties\": {\n       \"config\": {\n        \"additionalProperties\": {\n         \"type\": \"string\"\n        },\n        \"description\": \"Config options.\",\n        \"type\": \"object\"\n       },\n       \"consentRequired\": {\n        \"description\": \"True if Consent Screen is required.\",\n        \"type\": \"boolean\"\n       },\n       \"consentText\": {\n        \"description\": \"Text to use for displaying Consent Screen.\",\n        \"type\": \"string\"\n       },\n       \"id\": {\n        \"description\": \"Protocol Mapper ID.\",\n        \"type\": \"string\"\n       },\n       \"name\": {\n        \"description\": \"Protocol Mapper Name.\",\n        \"type\": \"string\"\n       },\n       \"protocol\": {\n        \"description\": \"Protocol to use.\",\n        \"type\": \"string\"\n       },\n       \"protocolMapper\": {\n        \"description\": \"Protocol Mapper to use\",\n        \"type\": \"string\"\n       }\n      },\n      \"type\": \"object\"\n     },\n     \"type\": \"array\"\n    },\n    \"publicClient\": {\n     \"description\": \"True if this is a public Client.\",\n     \"type\": \"boolean\"\n    },\n    \"redirectUris\": {\n     \"description\": \"A list of valid Redirection URLs.\",\n     \"items\": {\n      \"type\": \"string\"\n     },\n     \"type\": \"array\"\n    },\n    \"rootUrl\": {\n     \"description\": \"Application root URL.\",\n     \"type\": \"string\"\n    },\n    \"secret\": {\n     \"description\": \"Client Secret. The Operator will automatically create a Secret based on this value.\",\n     \"type\": \"string\"\n    },\n    \"serviceAccountsEnabled\": {\n     \"description\": \"True if Service Accounts are enabled.\",\n     \"type\": \"boolean\"\n    },\n    \"standardFlowEnabled\": {\n     \"description\": \"True if Standard flow is enabled.\",\n     \"type\": \"boolean\"\n    },\n    \"surrogateAuthRequired\": {\n     \"description\": \"Surrogate Authentication Required option.\",\n     \"type\": \"boolean\"\n    },\n    \"useTemplateConfig\": {\n     \"description\": \"True to use a Template Config.\",\n     \"type\": \"boolean\"\n    },\n    \"useTemplateMappers\": {\n     \"description\": \"True to use Template Mappers.\",\n     \"type\": \"boolean\"\n    },\n    \"useTemplateScope\": {\n     \"description\": \"True to use Template Scope.\",\n     \"type\": \"boolean\"\n    },\n    \"webOrigins\": {\n     \"description\": \"A list of valid Web Origins.\",\n     \"items\": {\n      \"type\": \"string\"\n     },\n     \"type\": \"array\"\n    }\n   },\n   \"required\": [\n    \"clientId\"\n   ],\n   \"type\": \"object\"\n  },\n  \"realmSelector\": {\n   \"description\": \"Selector for looking up KeycloakRealm Custom Resources.\",\n   \"properties\": {\n    \"matchExpressions\": {\n     \"description\": \"matchExpressions is a list of label selector requirements. The requirements are ANDed.\",\n     \"items\": {\n      \"description\": \"A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.\",\n      \"properties\": {\n       \"key\": {\n        \"description\": \"key is the label key that the selector applies to.\",\n        \"type\": \"string\"\n       },\n       \"operator\": {\n        \"description\": \"operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.\",\n        \"type\": \"string\"\n       },\n       \"values\": {\n        \"description\": \"values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.\",\n        \"items\": {\n         \"type\": \"string\"\n        },\n        \"type\": \"array\"\n       }\n      },\n      \"required\": [\n       \"key\",\n       \"operator\"\n      ],\n      \"type\": \"object\"\n     },\n     \"type\": \"array\"\n    },\n    \"matchLabels\": {\n     \"additionalProperties\": {\n      \"type\": \"string\"\n     },\n     \"description\": \"matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \\\"key\\\", the operator is \\\"In\\\", and the values array contains only \\\"value\\\". The requirements are ANDed.\",\n     \"type\": \"object\"\n    }\n   },\n   \"type\": \"object\"\n  },\n  \"roles\": {\n   \"description\": \"Client Roles\",\n   \"items\": {\n    \"description\": \"https://www.keycloak.org/docs-api/11.0/rest-api/index.html#_rolerepresentation\",\n    \"properties\": {\n     \"attributes\": {\n      \"additionalProperties\": {\n       \"items\": {\n        \"type\": \"string\"\n       },\n       \"type\": \"array\"\n      },\n      \"description\": \"Role Attributes\",\n      \"type\": \"object\"\n     },\n     \"clientRole\": {\n      \"description\": \"Client Role\",\n      \"type\": \"boolean\"\n     },\n     \"composite\": {\n      \"description\": \"Composite\",\n      \"type\": \"boolean\"\n     },\n     \"composites\": {\n      \"description\": \"Composites\",\n      \"properties\": {\n       \"client\": {\n        \"additionalProperties\": {\n         \"items\": {\n          \"type\": \"string\"\n         },\n         \"type\": \"array\"\n        },\n        \"description\": \"Map client =\\u003e []role\",\n        \"type\": \"object\"\n       },\n       \"realm\": {\n        \"description\": \"Realm roles\",\n        \"items\": {\n         \"type\": \"string\"\n        },\n        \"type\": \"array\"\n       }\n      },\n      \"type\": \"object\"\n     },\n     \"containerId\": {\n      \"description\": \"Container Id\",\n      \"type\": \"string\"\n     },\n     \"description\": {\n      \"description\": \"Description\",\n      \"type\": \"string\"\n     },\n     \"id\": {\n      \"description\": \"Id\",\n      \"type\": \"string\"\n     },\n     \"name\": {\n      \"description\": \"Name\",\n      \"type\": \"string\"\n     }\n    },\n    \"required\": [\n     \"name\"\n    ],\n    \"type\": \"object\"\n   },\n   \"type\": \"array\",\n   \"x-kubernetes-list-map-keys\": [\n    \"name\"\n   ],\n   \"x-kubernetes-list-type\": \"map\"\n  },\n  \"scopeMappings\": {\n   \"description\": \"Scope Mappings\",\n   \"properties\": {\n    \"clientMappings\": {\n     \"additionalProperties\": {\n      \"description\": \"https://www.keycloak.org/docs-api/11.0/rest-api/index.html#_clientmappingsrepresentation\",\n      \"properties\": {\n       \"client\": {\n        \"description\": \"Client\",\n        \"type\": \"string\"\n       },\n       \"id\": {\n        \"description\": \"ID\",\n        \"type\": \"string\"\n       },\n       \"mappings\": {\n        \"description\": \"Mappings\",\n        \"items\": {\n         \"description\": \"https://www.keycloak.org/docs-api/11.0/rest-api/index.html#_rolerepresentation\",\n         \"properties\": {\n          \"attributes\": {\n           \"additionalProperties\": {\n            \"items\": {\n             \"type\": \"string\"\n            },\n            \"type\": \"array\"\n           },\n           \"description\": \"Role Attributes\",\n           \"type\": \"object\"\n          },\n          \"clientRole\": {\n           \"description\": \"Client Role\",\n           \"type\": \"boolean\"\n          },\n          \"composite\": {\n           \"description\": \"Composite\",\n           \"type\": \"boolean\"\n          },\n          \"composites\": {\n           \"description\": \"Composites\",\n           \"properties\": {\n            \"client\": {\n             \"additionalProperties\": {\n              \"items\": {\n               \"type\": \"string\"\n              },\n              \"type\": \"array\"\n             },\n             \"description\": \"Map client =\\u003e []role\",\n             \"type\": \"object\"\n            },\n            \"realm\": {\n             \"description\": \"Realm roles\",\n             \"items\": {\n              \"type\": \"string\"\n             },\n             \"type\": \"array\"\n            }\n           },\n           \"type\": \"object\"\n          },\n          \"containerId\": {\n           \"description\": \"Container Id\",\n           \"type\": \"string\"\n          },\n          \"description\": {\n           \"description\": \"Description\",\n           \"type\": \"string\"\n          },\n          \"id\": {\n           \"description\": \"Id\",\n           \"type\": \"string\"\n          },\n          \"name\": {\n           \"description\": \"Name\",\n           \"type\": \"string\"\n          }\n         },\n         \"required\": [\n          \"name\"\n         ],\n         \"type\": \"object\"\n        },\n        \"type\": \"array\"\n       }\n      },\n      \"type\": \"object\"\n     },\n     \"description\": \"Client Mappings\",\n     \"type\": \"object\"\n    },\n    \"realmMappings\": {\n     \"description\": \"Realm Mappings\",\n     \"items\": {\n      \"description\": \"https://www.keycloak.org/docs-api/11.0/rest-api/index.html#_rolerepresentation\",\n      \"properties\": {\n       \"attributes\": {\n        \"additionalProperties\": {\n         \"items\": {\n          \"type\": \"string\"\n         },\n         \"type\": \"array\"\n        },\n        \"description\": \"Role Attributes\",\n        \"type\": \"object\"\n       },\n       \"clientRole\": {\n        \"description\": \"Client Role\",\n        \"type\": \"boolean\"\n       },\n       \"composite\": {\n        \"description\": \"Composite\",\n        \"type\": \"boolean\"\n       },\n       \"composites\": {\n        \"description\": \"Composites\",\n        \"properties\": {\n         \"client\": {\n          \"additionalProperties\": {\n           \"items\": {\n            \"type\": \"string\"\n           },\n           \"type\": \"array\"\n          },\n          \"description\": \"Map client =\\u003e []role\",\n          \"type\": \"object\"\n         },\n         \"realm\": {\n          \"description\": \"Realm roles\",\n          \"items\": {\n           \"type\": \"string\"\n          },\n          \"type\": \"array\"\n         }\n        },\n        \"type\": \"object\"\n       },\n       \"containerId\": {\n        \"description\": \"Container Id\",\n        \"type\": \"string\"\n       },\n       \"description\": {\n        \"description\": \"Description\",\n        \"type\": \"string\"\n       },\n       \"id\": {\n        \"description\": \"Id\",\n        \"type\": \"string\"\n       },\n       \"name\": {\n        \"description\": \"Name\",\n        \"type\": \"string\"\n       }\n      },\n      \"required\": [\n       \"name\"\n      ],\n      \"type\": \"object\"\n     },\n     \"type\": \"array\"\n    }\n   },\n   \"type\": \"object\"\n  }\n },\n \"required\": [\n  \"client\",\n  \"realmSelector\"\n ],\n \"title\": \"Keycloak Client\",\n \"type\": \"object\"\n}"}