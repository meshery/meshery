{"kind":"ClusterFilter","apiVersion":"v1alpha1","display-name":"Cluster Filter","format":"JSON","metadata":{},"model":{"name":"openinfradev","version":"0.1.0","display-name":"","category":"","sub-category":""},"schema":"{\n \"description\": \"ClusterFilterSpec defines the desired state of ClusterFilter\",\n \"properties\": {\n  \"filters\": {\n   \"items\": {\n    \"description\": \"Filter defines all available filter plugins and their parameters.\",\n    \"properties\": {\n     \"grep\": {\n      \"description\": \"The filter_grep filter plugin\",\n      \"properties\": {\n       \"and\": {\n        \"items\": {\n         \"description\": \"And defines the parameters for the \\\"and\\\" plugin\",\n         \"properties\": {\n          \"exclude\": {\n           \"description\": \"Exclude defines the parameters for the exclude plugin\",\n           \"properties\": {\n            \"key\": {\n             \"type\": \"string\"\n            },\n            \"pattern\": {\n             \"type\": \"string\"\n            }\n           },\n           \"type\": \"object\"\n          },\n          \"regexp\": {\n           \"description\": \"Regexp defines the parameters for the regexp plugin\",\n           \"properties\": {\n            \"key\": {\n             \"type\": \"string\"\n            },\n            \"pattern\": {\n             \"type\": \"string\"\n            }\n           },\n           \"type\": \"object\"\n          }\n         },\n         \"type\": \"object\"\n        },\n        \"type\": \"array\"\n       },\n       \"exclude\": {\n        \"items\": {\n         \"description\": \"Exclude defines the parameters for the exclude plugin\",\n         \"properties\": {\n          \"key\": {\n           \"type\": \"string\"\n          },\n          \"pattern\": {\n           \"type\": \"string\"\n          }\n         },\n         \"type\": \"object\"\n        },\n        \"type\": \"array\"\n       },\n       \"or\": {\n        \"items\": {\n         \"description\": \"Or defines the parameters for the \\\"or\\\" plugin\",\n         \"properties\": {\n          \"exclude\": {\n           \"description\": \"Exclude defines the parameters for the exclude plugin\",\n           \"properties\": {\n            \"key\": {\n             \"type\": \"string\"\n            },\n            \"pattern\": {\n             \"type\": \"string\"\n            }\n           },\n           \"type\": \"object\"\n          },\n          \"regexp\": {\n           \"description\": \"Regexp defines the parameters for the regexp plugin\",\n           \"properties\": {\n            \"key\": {\n             \"type\": \"string\"\n            },\n            \"pattern\": {\n             \"type\": \"string\"\n            }\n           },\n           \"type\": \"object\"\n          }\n         },\n         \"type\": \"object\"\n        },\n        \"type\": \"array\"\n       },\n       \"regexp\": {\n        \"items\": {\n         \"description\": \"Regexp defines the parameters for the regexp plugin\",\n         \"properties\": {\n          \"key\": {\n           \"type\": \"string\"\n          },\n          \"pattern\": {\n           \"type\": \"string\"\n          }\n         },\n         \"type\": \"object\"\n        },\n        \"type\": \"array\"\n       }\n      },\n      \"type\": \"object\"\n     },\n     \"logLevel\": {\n      \"description\": \"The @log_level parameter specifies the plugin-specific logging level\",\n      \"type\": \"string\"\n     },\n     \"parser\": {\n      \"description\": \"The filter_parser filter plugin\",\n      \"properties\": {\n       \"emitInvalidRecordToError\": {\n        \"description\": \"Emits invalid record to @ERROR label. Invalid cases are: key does not exist;the format is not matched;an unexpected error. If you want to ignore these errors, set false.\",\n        \"type\": \"boolean\"\n       },\n       \"hashValueField\": {\n        \"description\": \"Stores the parsed values as a hash value in a field.\",\n        \"type\": \"string\"\n       },\n       \"injectKeyPrefix\": {\n        \"description\": \"Stores the parsed values with the specified key name prefix.\",\n        \"type\": \"string\"\n       },\n       \"keyName\": {\n        \"description\": \"Specifies the field name in the record to parse. Required parameter. i.e: If set keyName to log, {\\\"key\\\":\\\"value\\\",\\\"log\\\":\\\"{\\\\\\\"time\\\\\\\":1622473200,\\\\\\\"user\\\\\\\":1}\\\"} =\\u003e {\\\"user\\\":1}\",\n        \"type\": \"string\"\n       },\n       \"parse\": {\n        \"description\": \"Parse defines various parameters for the parse plugin\",\n        \"properties\": {\n         \"estimateCurrentEvent\": {\n          \"description\": \"If true, use Fluent::Eventnow(current time) as a timestamp when time_key is specified.\",\n          \"type\": \"boolean\"\n         },\n         \"expression\": {\n          \"description\": \"Specifies the regular expression for matching logs. Regular expression also supports i and m suffix.\",\n          \"type\": \"string\"\n         },\n         \"id\": {\n          \"description\": \"The @id parameter specifies a unique name for the configuration.\",\n          \"type\": \"string\"\n         },\n         \"keepTimeKey\": {\n          \"description\": \"If true, keep time field in th record.\",\n          \"type\": \"boolean\"\n         },\n         \"localtime\": {\n          \"description\": \"If true, uses local time.\",\n          \"type\": \"boolean\"\n         },\n         \"logLevel\": {\n          \"description\": \"The @log_level parameter specifies the plugin-specific logging level\",\n          \"type\": \"string\"\n         },\n         \"timeFormat\": {\n          \"description\": \"Process value according to the specified format. This is available only when time_type is *string\",\n          \"type\": \"string\"\n         },\n         \"timeFormatFallbacks\": {\n          \"description\": \"Uses the specified time format as a fallback in the specified order. You can parse undetermined time format by using time_format_fallbacks. This options is enabled when time_type is mixed.\",\n          \"type\": \"string\"\n         },\n         \"timeKey\": {\n          \"description\": \"Specify time field for event time. If the event doesn't have this field, current time is used.\",\n          \"type\": \"string\"\n         },\n         \"timeType\": {\n          \"description\": \"parses/formats value according to this type, default is *string\",\n          \"enum\": [\n           \"float\",\n           \"unixtime\",\n           \"*string\",\n           \"mixed\"\n          ],\n          \"type\": \"string\"\n         },\n         \"timeout\": {\n          \"description\": \"Specify timeout for parse processing.\",\n          \"pattern\": \"^\\\\d+(\\\\.[0-9]{0,2})?(s|m|h|d)?$\",\n          \"type\": \"string\"\n         },\n         \"timezone\": {\n          \"description\": \"Uses the specified timezone.\",\n          \"type\": \"string\"\n         },\n         \"type\": {\n          \"description\": \"The @type parameter specifies the type of the plugin.\",\n          \"enum\": [\n           \"regexp\",\n           \"apache2\",\n           \"apache_error\",\n           \"nginx\",\n           \"syslog\",\n           \"csv\",\n           \"tsv\",\n           \"ltsv\",\n           \"json\",\n           \"multiline\",\n           \"none\"\n          ],\n          \"type\": \"string\"\n         },\n         \"types\": {\n          \"description\": \"Specify types for converting field into another, i.e: types user_id:integer,paid:bool,paid_usd_amount:float\",\n          \"type\": \"string\"\n         },\n         \"utc\": {\n          \"description\": \"If true, uses UTC.\",\n          \"type\": \"boolean\"\n         }\n        },\n        \"required\": [\n         \"type\"\n        ],\n        \"type\": \"object\"\n       },\n       \"removeKeyNameField\": {\n        \"description\": \"Removes key_name field when parsing is succeeded.\",\n        \"type\": \"boolean\"\n       },\n       \"replaceInvalidSequence\": {\n        \"description\": \"If true, invalid string is replaced with safe characters and re-parse it.\",\n        \"type\": \"boolean\"\n       },\n       \"reserveData\": {\n        \"description\": \"Keeps the original key-value pair in the parsed result. Default is false. i.e: If set keyName to log, reverseData to true, {\\\"key\\\":\\\"value\\\",\\\"log\\\":\\\"{\\\\\\\"user\\\\\\\":1,\\\\\\\"num\\\\\\\":2}\\\"} =\\u003e {\\\"key\\\":\\\"value\\\",\\\"log\\\":\\\"{\\\\\\\"user\\\\\\\":1,\\\\\\\"num\\\\\\\":2}\\\",\\\"user\\\":1,\\\"num\\\":2}\",\n        \"type\": \"boolean\"\n       },\n       \"reserveTime\": {\n        \"description\": \"Keeps the original event time in the parsed result. Default is false.\",\n        \"type\": \"boolean\"\n       }\n      },\n      \"required\": [\n       \"keyName\",\n       \"parse\"\n      ],\n      \"type\": \"object\"\n     },\n     \"recordTransformer\": {\n      \"description\": \"The filter_record_transformer filter plugin\",\n      \"properties\": {\n       \"autoTypecast\": {\n        \"description\": \"Automatically casts the field types. Default is false. This option is effective only for field values comprised of a single placeholder.\",\n        \"type\": \"boolean\"\n       },\n       \"enableRuby\": {\n        \"description\": \"When set to true, the full Ruby syntax is enabled in the ${...} expression. The default value is false. i.e: jsonized_record ${record.to_json}\",\n        \"type\": \"boolean\"\n       },\n       \"keepKeys\": {\n        \"description\": \"A list of keys to keep. Only relevant if renew_record is set to true.\",\n        \"type\": \"string\"\n       },\n       \"records\": {\n        \"items\": {\n         \"description\": \"The parameters inside \\u003crecord\\u003e directives are considered to be new key-value pairs\",\n         \"properties\": {\n          \"key\": {\n           \"description\": \"New field can be defined as key\",\n           \"type\": \"string\"\n          },\n          \"value\": {\n           \"description\": \"The value must from Record properties. See https://docs.fluentd.org/filter/record_transformer#less-than-record-greater-than-directive\",\n           \"type\": \"string\"\n          }\n         },\n         \"required\": [\n          \"key\",\n          \"value\"\n         ],\n         \"type\": \"object\"\n        },\n        \"type\": \"array\"\n       },\n       \"removeKeys\": {\n        \"description\": \"A list of keys to delete. Supports nested field via record_accessor syntax since v1.1.0.\",\n        \"type\": \"string\"\n       },\n       \"renewRecord\": {\n        \"description\": \"By default, the record transformer filter mutates the incoming data. However, if this parameter is set to true, it modifies a new empty hash instead.\",\n        \"type\": \"boolean\"\n       },\n       \"renewTimeKey\": {\n        \"description\": \"renew_time_key foo overwrites the time of events with a value of the record field foo if exists. The value of foo must be a Unix timestamp.\",\n        \"type\": \"string\"\n       }\n      },\n      \"type\": \"object\"\n     },\n     \"stdout\": {\n      \"description\": \"The filter_stdout filter plugin\",\n      \"properties\": {\n       \"format\": {\n        \"description\": \"The format section\",\n        \"properties\": {\n         \"delimiter\": {\n          \"description\": \"Delimiter for each field.\",\n          \"type\": \"string\"\n         },\n         \"id\": {\n          \"description\": \"The @id parameter specifies a unique name for the configuration.\",\n          \"type\": \"string\"\n         },\n         \"localtime\": {\n          \"description\": \"If true, uses local time.\",\n          \"type\": \"boolean\"\n         },\n         \"logLevel\": {\n          \"description\": \"The @log_level parameter specifies the plugin-specific logging level\",\n          \"type\": \"string\"\n         },\n         \"newline\": {\n          \"description\": \"Specify newline characters.\",\n          \"enum\": [\n           \"lf\",\n           \"crlf\"\n          ],\n          \"type\": \"string\"\n         },\n         \"outputTag\": {\n          \"description\": \"Output tag field if true.\",\n          \"type\": \"boolean\"\n         },\n         \"outputTime\": {\n          \"description\": \"Output time field if true.\",\n          \"type\": \"boolean\"\n         },\n         \"timeFormat\": {\n          \"description\": \"Process value according to the specified format. This is available only when time_type is *string\",\n          \"type\": \"string\"\n         },\n         \"timeFormatFallbacks\": {\n          \"description\": \"Uses the specified time format as a fallback in the specified order. You can parse undetermined time format by using time_format_fallbacks. This options is enabled when time_type is mixed.\",\n          \"type\": \"string\"\n         },\n         \"timeType\": {\n          \"description\": \"parses/formats value according to this type, default is *string\",\n          \"enum\": [\n           \"float\",\n           \"unixtime\",\n           \"*string\",\n           \"mixed\"\n          ],\n          \"type\": \"string\"\n         },\n         \"timezone\": {\n          \"description\": \"Uses the specified timezone.\",\n          \"type\": \"string\"\n         },\n         \"type\": {\n          \"description\": \"The @type parameter specifies the type of the plugin.\",\n          \"enum\": [\n           \"out_file\",\n           \"json\",\n           \"ltsv\",\n           \"csv\",\n           \"msgpack\",\n           \"hash\",\n           \"single_value\"\n          ],\n          \"type\": \"string\"\n         },\n         \"utc\": {\n          \"description\": \"If true, uses UTC.\",\n          \"type\": \"boolean\"\n         }\n        },\n        \"type\": \"object\"\n       },\n       \"inject\": {\n        \"description\": \"The inject section\",\n        \"properties\": {\n         \"hostname\": {\n          \"description\": \"Hostname value\",\n          \"type\": \"string\"\n         },\n         \"hostnameKey\": {\n          \"description\": \"The field name to inject hostname\",\n          \"type\": \"string\"\n         },\n         \"inline\": {\n          \"description\": \"Time section\",\n          \"properties\": {\n           \"localtime\": {\n            \"description\": \"If true, uses local time.\",\n            \"type\": \"boolean\"\n           },\n           \"timeFormat\": {\n            \"description\": \"Process value according to the specified format. This is available only when time_type is *string\",\n            \"type\": \"string\"\n           },\n           \"timeFormatFallbacks\": {\n            \"description\": \"Uses the specified time format as a fallback in the specified order. You can parse undetermined time format by using time_format_fallbacks. This options is enabled when time_type is mixed.\",\n            \"type\": \"string\"\n           },\n           \"timeType\": {\n            \"description\": \"parses/formats value according to this type, default is *string\",\n            \"enum\": [\n             \"float\",\n             \"unixtime\",\n             \"*string\",\n             \"mixed\"\n            ],\n            \"type\": \"string\"\n           },\n           \"timezone\": {\n            \"description\": \"Uses the specified timezone.\",\n            \"type\": \"string\"\n           },\n           \"utc\": {\n            \"description\": \"If true, uses UTC.\",\n            \"type\": \"boolean\"\n           }\n          },\n          \"type\": \"object\"\n         },\n         \"tagKey\": {\n          \"description\": \"The field name to inject tag\",\n          \"type\": \"string\"\n         },\n         \"timeKey\": {\n          \"description\": \"The field name to inject time\",\n          \"type\": \"string\"\n         },\n         \"workerIdKey\": {\n          \"description\": \"The field name to inject worker_id\",\n          \"type\": \"string\"\n         }\n        },\n        \"type\": \"object\"\n       }\n      },\n      \"type\": \"object\"\n     }\n    },\n    \"type\": \"object\"\n   },\n   \"type\": \"array\"\n  }\n },\n \"title\": \"Cluster Filter\",\n \"type\": \"object\"\n}"}