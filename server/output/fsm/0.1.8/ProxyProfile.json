{"kind":"ProxyProfile","apiVersion":"v1alpha1","display-name":"Proxy Profile","format":"JSON","metadata":{},"model":{"name":"fsm","version":"0.1.8","display-name":"","category":"","sub-category":""},"schema":"{\n \"description\": \"ProxyProfileSpec defines the desired state of ProxyProfile\",\n \"properties\": {\n  \"config\": {\n   \"additionalProperties\": {\n    \"type\": \"string\"\n   },\n   \"description\": \"Config contains the configuration data. Each key must consist of alphanumeric characters, '-', '_' or '.'. Values with non-UTF-8 byte sequences must use the BinaryData field. This option is mutually exclusive with RepoBaseUrl option, you can only have either one.\",\n   \"type\": \"object\"\n  },\n  \"disabled\": {\n   \"default\": false,\n   \"description\": \"If this ProxyProfile is Disabled. A disabled ProxyProfile doesn't participate the sidecar injection process.\",\n   \"type\": \"boolean\"\n  },\n  \"mode\": {\n   \"default\": \"Remote\",\n   \"description\": \"ConfigMode tells where the sidecar loads the scripts/config from, Local means from local files mounted by configmap,  Remote means loads from remote pipy repo. Default value is Remote\",\n   \"type\": \"string\"\n  },\n  \"namespace\": {\n   \"description\": \"Namespace ProxyProfile will only match the pods in the namespace otherwise, match pods in all namespaces(in cluster)\",\n   \"type\": \"string\"\n  },\n  \"restartPolicy\": {\n   \"default\": \"Never\",\n   \"description\": \"RestartPolicy indicates if ProxyProfile is updated, those already injected PODs should be updated or not. Default value is Never, it only has impact to new created PODs, existing PODs will not be updated.\",\n   \"type\": \"string\"\n  },\n  \"restartScope\": {\n   \"default\": \"Owner\",\n   \"description\": \"RestartScope takes effect when RestartPolicy is Always, it tells if we can restart the entire POD to apply the changes or only the sidecar containers inside the POD. Default value is Owner.\",\n   \"type\": \"string\"\n  },\n  \"selector\": {\n   \"description\": \"Selector is a label query over pods that should be injected This's optional, please NOTE a nil or empty Selector match nothing not everything.\",\n   \"properties\": {\n    \"matchExpressions\": {\n     \"description\": \"matchExpressions is a list of label selector requirements. The requirements are ANDed.\",\n     \"items\": {\n      \"description\": \"A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.\",\n      \"properties\": {\n       \"key\": {\n        \"description\": \"key is the label key that the selector applies to.\",\n        \"type\": \"string\"\n       },\n       \"operator\": {\n        \"description\": \"operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.\",\n        \"type\": \"string\"\n       },\n       \"values\": {\n        \"description\": \"values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.\",\n        \"items\": {\n         \"type\": \"string\"\n        },\n        \"type\": \"array\"\n       }\n      },\n      \"required\": [\n       \"key\",\n       \"operator\"\n      ],\n      \"type\": \"object\"\n     },\n     \"type\": \"array\"\n    },\n    \"matchLabels\": {\n     \"additionalProperties\": {\n      \"type\": \"string\"\n     },\n     \"description\": \"matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \\\"key\\\", the operator is \\\"In\\\", and the values array contains only \\\"value\\\". The requirements are ANDed.\",\n     \"type\": \"object\"\n    }\n   },\n   \"type\": \"object\"\n  },\n  \"serviceEnv\": {\n   \"description\": \"List of environment variables to set in each of the service containers. Cannot be updated.\",\n   \"items\": {\n    \"description\": \"EnvVar represents an environment variable present in a Container.\",\n    \"properties\": {\n     \"name\": {\n      \"description\": \"Name of the environment variable. Must be a C_IDENTIFIER.\",\n      \"type\": \"string\"\n     },\n     \"value\": {\n      \"description\": \"Variable references $(VAR_NAME) are expanded using the previously defined environment variables in the container and any service environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. \\\"$$(VAR_NAME)\\\" will produce the string literal \\\"$(VAR_NAME)\\\". Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to \\\"\\\".\",\n      \"type\": \"string\"\n     },\n     \"valueFrom\": {\n      \"description\": \"Source for the environment variable's value. Cannot be used if value is not empty.\",\n      \"properties\": {\n       \"configMapKeyRef\": {\n        \"description\": \"Selects a key of a ConfigMap.\",\n        \"properties\": {\n         \"key\": {\n          \"description\": \"The key to select.\",\n          \"type\": \"string\"\n         },\n         \"name\": {\n          \"description\": \"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?\",\n          \"type\": \"string\"\n         },\n         \"optional\": {\n          \"description\": \"Specify whether the ConfigMap or its key must be defined\",\n          \"type\": \"boolean\"\n         }\n        },\n        \"required\": [\n         \"key\"\n        ],\n        \"type\": \"object\"\n       },\n       \"fieldRef\": {\n        \"description\": \"Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['\\u003cKEY\\u003e']`, `metadata.annotations['\\u003cKEY\\u003e']`, spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.\",\n        \"properties\": {\n         \"apiVersion\": {\n          \"description\": \"Version of the schema the FieldPath is written in terms of, defaults to \\\"v1\\\".\",\n          \"type\": \"string\"\n         },\n         \"fieldPath\": {\n          \"description\": \"Path of the field to select in the specified API version.\",\n          \"type\": \"string\"\n         }\n        },\n        \"required\": [\n         \"fieldPath\"\n        ],\n        \"type\": \"object\"\n       },\n       \"resourceFieldRef\": {\n        \"description\": \"Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.\",\n        \"properties\": {\n         \"containerName\": {\n          \"description\": \"Container name: required for volumes, optional for env vars\",\n          \"type\": \"string\"\n         },\n         \"divisor\": {\n          \"anyOf\": [\n           {\n            \"type\": \"integer\"\n           },\n           {\n            \"type\": \"string\"\n           }\n          ],\n          \"description\": \"Specifies the output format of the exposed resources, defaults to \\\"1\\\"\",\n          \"pattern\": \"^(\\\\+|-)?(([0-9]+(\\\\.[0-9]*)?)|(\\\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\\\+|-)?(([0-9]+(\\\\.[0-9]*)?)|(\\\\.[0-9]+))))?$\",\n          \"x-kubernetes-int-or-string\": true\n         },\n         \"resource\": {\n          \"description\": \"Required: resource to select\",\n          \"type\": \"string\"\n         }\n        },\n        \"required\": [\n         \"resource\"\n        ],\n        \"type\": \"object\"\n       },\n       \"secretKeyRef\": {\n        \"description\": \"Selects a key of a secret in the pod's namespace\",\n        \"properties\": {\n         \"key\": {\n          \"description\": \"The key of the secret to select from.  Must be a valid secret key.\",\n          \"type\": \"string\"\n         },\n         \"name\": {\n          \"description\": \"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?\",\n          \"type\": \"string\"\n         },\n         \"optional\": {\n          \"description\": \"Specify whether the Secret or its key must be defined\",\n          \"type\": \"boolean\"\n         }\n        },\n        \"required\": [\n         \"key\"\n        ],\n        \"type\": \"object\"\n       }\n      },\n      \"type\": \"object\"\n     }\n    },\n    \"required\": [\n     \"name\"\n    ],\n    \"type\": \"object\"\n   },\n   \"type\": \"array\",\n   \"x-kubernetes-preserve-unknown-fields\": true\n  },\n  \"sidecars\": {\n   \"description\": \"List of sidecars, will be injected into POD. It must have at least ONE sidecar and up to 5 maximum.\",\n   \"items\": {\n    \"properties\": {\n     \"args\": {\n      \"description\": \"Arguments to the entrypoint. The docker image's CMD is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated.\",\n      \"items\": {\n       \"type\": \"string\"\n      },\n      \"type\": \"array\"\n     },\n     \"command\": {\n      \"description\": \"Entrypoint array. Not executed within a shell. The docker image's ENTRYPOINT is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated.\",\n      \"items\": {\n       \"type\": \"string\"\n      },\n      \"type\": \"array\"\n     },\n     \"env\": {\n      \"description\": \"List of environment variables to set in the sidecar container. Cannot be updated.\",\n      \"items\": {\n       \"description\": \"EnvVar represents an environment variable present in a Container.\",\n       \"properties\": {\n        \"name\": {\n         \"description\": \"Name of the environment variable. Must be a C_IDENTIFIER.\",\n         \"type\": \"string\"\n        },\n        \"value\": {\n         \"description\": \"Variable references $(VAR_NAME) are expanded using the previously defined environment variables in the container and any service environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. \\\"$$(VAR_NAME)\\\" will produce the string literal \\\"$(VAR_NAME)\\\". Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to \\\"\\\".\",\n         \"type\": \"string\"\n        },\n        \"valueFrom\": {\n         \"description\": \"Source for the environment variable's value. Cannot be used if value is not empty.\",\n         \"properties\": {\n          \"configMapKeyRef\": {\n           \"description\": \"Selects a key of a ConfigMap.\",\n           \"properties\": {\n            \"key\": {\n             \"description\": \"The key to select.\",\n             \"type\": \"string\"\n            },\n            \"name\": {\n             \"description\": \"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?\",\n             \"type\": \"string\"\n            },\n            \"optional\": {\n             \"description\": \"Specify whether the ConfigMap or its key must be defined\",\n             \"type\": \"boolean\"\n            }\n           },\n           \"required\": [\n            \"key\"\n           ],\n           \"type\": \"object\"\n          },\n          \"fieldRef\": {\n           \"description\": \"Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['\\u003cKEY\\u003e']`, `metadata.annotations['\\u003cKEY\\u003e']`, spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.\",\n           \"properties\": {\n            \"apiVersion\": {\n             \"description\": \"Version of the schema the FieldPath is written in terms of, defaults to \\\"v1\\\".\",\n             \"type\": \"string\"\n            },\n            \"fieldPath\": {\n             \"description\": \"Path of the field to select in the specified API version.\",\n             \"type\": \"string\"\n            }\n           },\n           \"required\": [\n            \"fieldPath\"\n           ],\n           \"type\": \"object\"\n          },\n          \"resourceFieldRef\": {\n           \"description\": \"Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.\",\n           \"properties\": {\n            \"containerName\": {\n             \"description\": \"Container name: required for volumes, optional for env vars\",\n             \"type\": \"string\"\n            },\n            \"divisor\": {\n             \"anyOf\": [\n              {\n               \"type\": \"integer\"\n              },\n              {\n               \"type\": \"string\"\n              }\n             ],\n             \"description\": \"Specifies the output format of the exposed resources, defaults to \\\"1\\\"\",\n             \"pattern\": \"^(\\\\+|-)?(([0-9]+(\\\\.[0-9]*)?)|(\\\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\\\+|-)?(([0-9]+(\\\\.[0-9]*)?)|(\\\\.[0-9]+))))?$\",\n             \"x-kubernetes-int-or-string\": true\n            },\n            \"resource\": {\n             \"description\": \"Required: resource to select\",\n             \"type\": \"string\"\n            }\n           },\n           \"required\": [\n            \"resource\"\n           ],\n           \"type\": \"object\"\n          },\n          \"secretKeyRef\": {\n           \"description\": \"Selects a key of a secret in the pod's namespace\",\n           \"properties\": {\n            \"key\": {\n             \"description\": \"The key of the secret to select from.  Must be a valid secret key.\",\n             \"type\": \"string\"\n            },\n            \"name\": {\n             \"description\": \"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?\",\n             \"type\": \"string\"\n            },\n            \"optional\": {\n             \"description\": \"Specify whether the Secret or its key must be defined\",\n             \"type\": \"boolean\"\n            }\n           },\n           \"required\": [\n            \"key\"\n           ],\n           \"type\": \"object\"\n          }\n         },\n         \"type\": \"object\"\n        }\n       },\n       \"required\": [\n        \"name\"\n       ],\n       \"type\": \"object\"\n      },\n      \"type\": \"array\",\n      \"x-kubernetes-preserve-unknown-fields\": true\n     },\n     \"image\": {\n      \"description\": \"Docker image name. This field is optional to allow higher level config management to default or override container images in workload controllers like Deployments and StatefulSets.\",\n      \"type\": \"string\"\n     },\n     \"imagePullPolicy\": {\n      \"description\": \"Image pull policy. One of Always, Never, IfNotPresent. Defaults to Always if :latest tag is specified, or IfNotPresent otherwise. Cannot be updated.\",\n      \"type\": \"string\"\n     },\n     \"name\": {\n      \"description\": \"Name of the container specified as a DNS_LABEL. Each container in a pod must have a unique name (DNS_LABEL). Cannot be updated.\",\n      \"type\": \"string\"\n     },\n     \"resources\": {\n      \"description\": \"Compute Resources required by this container. Cannot be updated.\",\n      \"properties\": {\n       \"limits\": {\n        \"additionalProperties\": {\n         \"anyOf\": [\n          {\n           \"type\": \"integer\"\n          },\n          {\n           \"type\": \"string\"\n          }\n         ],\n         \"pattern\": \"^(\\\\+|-)?(([0-9]+(\\\\.[0-9]*)?)|(\\\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\\\+|-)?(([0-9]+(\\\\.[0-9]*)?)|(\\\\.[0-9]+))))?$\",\n         \"x-kubernetes-int-or-string\": true\n        },\n        \"description\": \"Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/\",\n        \"type\": \"object\"\n       },\n       \"requests\": {\n        \"additionalProperties\": {\n         \"anyOf\": [\n          {\n           \"type\": \"integer\"\n          },\n          {\n           \"type\": \"string\"\n          }\n         ],\n         \"pattern\": \"^(\\\\+|-)?(([0-9]+(\\\\.[0-9]*)?)|(\\\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\\\+|-)?(([0-9]+(\\\\.[0-9]*)?)|(\\\\.[0-9]+))))?$\",\n         \"x-kubernetes-int-or-string\": true\n        },\n        \"description\": \"Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/\",\n        \"type\": \"object\"\n       }\n      },\n      \"type\": \"object\"\n     },\n     \"startupScriptName\": {\n      \"description\": \"The file name of entrypoint script for starting the PIPY instance. If not provided, the default value is the value of Name field with surfix .js. For example, if the Name of the sidecar is proxy, it looks up proxy.js in config folder. It only works in local config mode, if pulls scripts from remote repo, the repo server returns the name of startup script.\",\n      \"type\": \"string\"\n     }\n    },\n    \"required\": [\n     \"name\"\n    ],\n    \"type\": \"object\"\n   },\n   \"maxItems\": 5,\n   \"minItems\": 1,\n   \"type\": \"array\"\n  }\n },\n \"title\": \"Proxy Profile\",\n \"type\": \"object\"\n}"}