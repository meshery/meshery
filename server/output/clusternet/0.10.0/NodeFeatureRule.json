{"kind":"NodeFeatureRule","apiVersion":"v1alpha1","display-name":"Node Feature Rule","format":"JSON","metadata":{},"model":{"name":"clusternet","version":"0.10.0","display-name":"","category":"","sub-category":""},"schema":"{\n \"description\": \"NodeFeatureRuleSpec describes a NodeFeatureRule.\",\n \"properties\": {\n  \"rules\": {\n   \"description\": \"Rules is a list of node customization rules.\",\n   \"items\": {\n    \"description\": \"Rule defines a rule for node customization such as labeling.\",\n    \"properties\": {\n     \"labels\": {\n      \"additionalProperties\": {\n       \"type\": \"string\"\n      },\n      \"description\": \"Labels to create if the rule matches.\",\n      \"type\": \"object\"\n     },\n     \"labelsTemplate\": {\n      \"description\": \"LabelsTemplate specifies a template to expand for dynamically generating multiple labels. Data (after template expansion) must be keys with an optional value (\\u003ckey\\u003e[=\\u003cvalue\\u003e]) separated by newlines.\",\n      \"type\": \"string\"\n     },\n     \"matchAny\": {\n      \"description\": \"MatchAny specifies a list of matchers one of which must match.\",\n      \"items\": {\n       \"description\": \"MatchAnyElem specifies one sub-matcher of MatchAny.\",\n       \"properties\": {\n        \"matchFeatures\": {\n         \"description\": \"MatchFeatures specifies a set of matcher terms all of which must match.\",\n         \"items\": {\n          \"description\": \"FeatureMatcherTerm defines requirements against one feature set. All requirements (specified as MatchExpressions) are evaluated against each element in the feature set.\",\n          \"properties\": {\n           \"feature\": {\n            \"type\": \"string\"\n           },\n           \"matchExpressions\": {\n            \"additionalProperties\": {\n             \"description\": \"MatchExpression specifies an expression to evaluate against a set of input values. It contains an operator that is applied when matching the input and an array of values that the operator evaluates the input against. \\n NB: CreateMatchExpression or MustCreateMatchExpression() should be used for creating new instances. \\n NB: Validate() must be called if Op or Value fields are modified or if a new instance is created from scratch without using the helper functions.\",\n             \"properties\": {\n              \"op\": {\n               \"description\": \"Op is the operator to be applied.\",\n               \"enum\": [\n                \"In\",\n                \"NotIn\",\n                \"InRegexp\",\n                \"Exists\",\n                \"DoesNotExist\",\n                \"Gt\",\n                \"Lt\",\n                \"GtLt\",\n                \"IsTrue\",\n                \"IsFalse\"\n               ],\n               \"type\": \"string\"\n              },\n              \"value\": {\n               \"description\": \"Value is the list of values that the operand evaluates the input against. Value should be empty if the operator is Exists, DoesNotExist, IsTrue or IsFalse. Value should contain exactly one element if the operator is Gt or Lt and exactly two elements if the operator is GtLt. In other cases Value should contain at least one element.\",\n               \"items\": {\n                \"type\": \"string\"\n               },\n               \"type\": \"array\"\n              }\n             },\n             \"required\": [\n              \"op\"\n             ],\n             \"type\": \"object\"\n            },\n            \"description\": \"MatchExpressionSet contains a set of MatchExpressions, each of which is evaluated against a set of input values.\",\n            \"type\": \"object\"\n           }\n          },\n          \"required\": [\n           \"feature\",\n           \"matchExpressions\"\n          ],\n          \"type\": \"object\"\n         },\n         \"type\": \"array\"\n        }\n       },\n       \"required\": [\n        \"matchFeatures\"\n       ],\n       \"type\": \"object\"\n      },\n      \"type\": \"array\"\n     },\n     \"matchFeatures\": {\n      \"description\": \"MatchFeatures specifies a set of matcher terms all of which must match.\",\n      \"items\": {\n       \"description\": \"FeatureMatcherTerm defines requirements against one feature set. All requirements (specified as MatchExpressions) are evaluated against each element in the feature set.\",\n       \"properties\": {\n        \"feature\": {\n         \"type\": \"string\"\n        },\n        \"matchExpressions\": {\n         \"additionalProperties\": {\n          \"description\": \"MatchExpression specifies an expression to evaluate against a set of input values. It contains an operator that is applied when matching the input and an array of values that the operator evaluates the input against. \\n NB: CreateMatchExpression or MustCreateMatchExpression() should be used for creating new instances. \\n NB: Validate() must be called if Op or Value fields are modified or if a new instance is created from scratch without using the helper functions.\",\n          \"properties\": {\n           \"op\": {\n            \"description\": \"Op is the operator to be applied.\",\n            \"enum\": [\n             \"In\",\n             \"NotIn\",\n             \"InRegexp\",\n             \"Exists\",\n             \"DoesNotExist\",\n             \"Gt\",\n             \"Lt\",\n             \"GtLt\",\n             \"IsTrue\",\n             \"IsFalse\"\n            ],\n            \"type\": \"string\"\n           },\n           \"value\": {\n            \"description\": \"Value is the list of values that the operand evaluates the input against. Value should be empty if the operator is Exists, DoesNotExist, IsTrue or IsFalse. Value should contain exactly one element if the operator is Gt or Lt and exactly two elements if the operator is GtLt. In other cases Value should contain at least one element.\",\n            \"items\": {\n             \"type\": \"string\"\n            },\n            \"type\": \"array\"\n           }\n          },\n          \"required\": [\n           \"op\"\n          ],\n          \"type\": \"object\"\n         },\n         \"description\": \"MatchExpressionSet contains a set of MatchExpressions, each of which is evaluated against a set of input values.\",\n         \"type\": \"object\"\n        }\n       },\n       \"required\": [\n        \"feature\",\n        \"matchExpressions\"\n       ],\n       \"type\": \"object\"\n      },\n      \"type\": \"array\"\n     },\n     \"name\": {\n      \"description\": \"Name of the rule.\",\n      \"type\": \"string\"\n     },\n     \"vars\": {\n      \"additionalProperties\": {\n       \"type\": \"string\"\n      },\n      \"description\": \"Vars is the variables to store if the rule matches. Variables do not directly inflict any changes in the node object. However, they can be referenced from other rules enabling more complex rule hierarchies, without exposing intermediary output values as labels.\",\n      \"type\": \"object\"\n     },\n     \"varsTemplate\": {\n      \"description\": \"VarsTemplate specifies a template to expand for dynamically generating multiple variables. Data (after template expansion) must be keys with an optional value (\\u003ckey\\u003e[=\\u003cvalue\\u003e]) separated by newlines.\",\n      \"type\": \"string\"\n     }\n    },\n    \"required\": [\n     \"name\"\n    ],\n    \"type\": \"object\"\n   },\n   \"type\": \"array\"\n  }\n },\n \"required\": [\n  \"rules\"\n ],\n \"title\": \"Node Feature Rule\",\n \"type\": \"object\"\n}"}