{"kind":"AWSRole","apiVersion":"v1alpha1","display-name":"AWS Role","format":"JSON","metadata":{},"model":{"name":"appscode","version":"2022.9.22","display-name":"","category":"","sub-category":""},"schema":"{\n \"description\": \"AWSRoleSpec contains connection information, AWS role info, etc More info: https://www.vaultproject.io/api/secret/aws/index.html#parameters-3\",\n \"properties\": {\n  \"credentialType\": {\n   \"description\": \"Specifies the type of credential to be used when retrieving credentials from the role\",\n   \"enum\": [\n    \"iam_user\",\n    \"assumed_role\",\n    \"federation_token\"\n   ],\n   \"type\": \"string\"\n  },\n  \"defaultSTSTTL\": {\n   \"description\": \"The default TTL for STS credentials. When a TTL is not specified when STS credentials are requested, and a default TTL is specified on the role, then this default TTL will be used. Valid only when credential_type is one of assumed_role or federation_token\",\n   \"type\": \"string\"\n  },\n  \"maxSTSTTL\": {\n   \"description\": \"The max allowed TTL for STS credentials (credentials TTL are capped to max_sts_ttl). Valid only when credential_type is one of assumed_role or federation_token\",\n   \"type\": \"string\"\n  },\n  \"policy\": {\n   \"description\": \"Specifies the IAM policy in JSON format.\",\n   \"type\": \"object\",\n   \"x-kubernetes-embedded-resource\": true,\n   \"x-kubernetes-preserve-unknown-fields\": true\n  },\n  \"policyARNs\": {\n   \"description\": \"Specifies the ARNs of the AWS managed policies to be attached to IAM users when they are requested. Valid only when credential_type is iam_user. When credential_type is iam_user, at least one of policy_arns or policy_document must be specified.\",\n   \"items\": {\n    \"type\": \"string\"\n   },\n   \"type\": \"array\"\n  },\n  \"policyDocument\": {\n   \"description\": \"The IAM policy document for the role. The behavior depends on the credential type. With iam_user, the policy document will be attached to the IAM user generated and augment the permissions the IAM user has. With assumed_role and federation_token, the policy document will act as a filter on what the credentials can do.\",\n   \"type\": \"string\"\n  },\n  \"roleARNs\": {\n   \"description\": \"Specifies the ARNs of the AWS roles this Vault role is allowed to assume. Required when credential_type is assumed_role and prohibited otherwise\",\n   \"items\": {\n    \"type\": \"string\"\n   },\n   \"type\": \"array\"\n  },\n  \"secretEngineRef\": {\n   \"description\": \"SecretEngineRef is the name of a Secret Engine\",\n   \"properties\": {\n    \"name\": {\n     \"description\": \"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?\",\n     \"type\": \"string\"\n    }\n   },\n   \"type\": \"object\",\n   \"x-kubernetes-map-type\": \"atomic\"\n  }\n },\n \"required\": [\n  \"credentialType\",\n  \"secretEngineRef\"\n ],\n \"title\": \"AWS Role\",\n \"type\": \"object\"\n}"}