{"kind":"AssignMetadata","apiVersion":"v1","display-name":"Assign Metadata","format":"JSON","metadata":{},"model":{"name":"gatekeeper","version":"3.11.0-beta.0","display-name":"","category":"","sub-category":""},"schema":"{\n \"description\": \"AssignMetadataSpec defines the desired state of AssignMetadata.\",\n \"properties\": {\n  \"location\": {\n   \"type\": \"string\"\n  },\n  \"match\": {\n   \"description\": \"Match selects objects to apply mutations to.\",\n   \"properties\": {\n    \"excludedNamespaces\": {\n     \"description\": \"ExcludedNamespaces is a list of namespace names. If defined, a constraint only applies to resources not in a listed namespace. ExcludedNamespaces also supports a prefix or suffix based glob.  For example, `excludedNamespaces: [kube-*]` matches both `kube-system` and `kube-public`, and `excludedNamespaces: [*-system]` matches both `kube-system` and `gatekeeper-system`.\",\n     \"items\": {\n      \"description\": \"A string that supports globbing at its front or end. Ex: \\\"kube-*\\\" will match \\\"kube-system\\\" or \\\"kube-public\\\", \\\"*-system\\\" will match \\\"kube-system\\\" or \\\"gatekeeper-system\\\".  The asterisk is required for wildcard matching.\",\n      \"pattern\": \"^(\\\\*|\\\\*-)?[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\\\*|-\\\\*)?$\",\n      \"type\": \"string\"\n     },\n     \"type\": \"array\"\n    },\n    \"kinds\": {\n     \"items\": {\n      \"description\": \"Kinds accepts a list of objects with apiGroups and kinds fields that list the groups/kinds of objects to which the mutation will apply. If multiple groups/kinds objects are specified, only one match is needed for the resource to be in scope.\",\n      \"properties\": {\n       \"apiGroups\": {\n        \"description\": \"APIGroups is the API groups the resources belong to. '*' is all groups. If '*' is present, the length of the slice must be one. Required.\",\n        \"items\": {\n         \"type\": \"string\"\n        },\n        \"type\": \"array\"\n       },\n       \"kinds\": {\n        \"items\": {\n         \"type\": \"string\"\n        },\n        \"type\": \"array\"\n       }\n      },\n      \"type\": \"object\"\n     },\n     \"type\": \"array\"\n    },\n    \"labelSelector\": {\n     \"description\": \"LabelSelector is the combination of two optional fields: `matchLabels` and `matchExpressions`.  These two fields provide different methods of selecting or excluding k8s objects based on the label keys and values included in object metadata.  All selection expressions from both sections are ANDed to determine if an object meets the cumulative requirements of the selector.\",\n     \"properties\": {\n      \"matchExpressions\": {\n       \"description\": \"matchExpressions is a list of label selector requirements. The requirements are ANDed.\",\n       \"items\": {\n        \"description\": \"A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.\",\n        \"properties\": {\n         \"key\": {\n          \"description\": \"key is the label key that the selector applies to.\",\n          \"type\": \"string\"\n         },\n         \"operator\": {\n          \"description\": \"operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.\",\n          \"type\": \"string\"\n         },\n         \"values\": {\n          \"description\": \"values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.\",\n          \"items\": {\n           \"type\": \"string\"\n          },\n          \"type\": \"array\"\n         }\n        },\n        \"required\": [\n         \"key\",\n         \"operator\"\n        ],\n        \"type\": \"object\"\n       },\n       \"type\": \"array\"\n      },\n      \"matchLabels\": {\n       \"additionalProperties\": {\n        \"type\": \"string\"\n       },\n       \"description\": \"matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \\\"key\\\", the operator is \\\"In\\\", and the values array contains only \\\"value\\\". The requirements are ANDed.\",\n       \"type\": \"object\"\n      }\n     },\n     \"type\": \"object\"\n    },\n    \"name\": {\n     \"description\": \"Name is the name of an object.  If defined, it will match against objects with the specified name.  Name also supports a prefix or suffix glob.  For example, `name: pod-*` would match both `pod-a` and `pod-b`, and `name: *-pod` would match both `a-pod` and `b-pod`.\",\n     \"pattern\": \"^(\\\\*|\\\\*-)?[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\\\*|-\\\\*)?$\",\n     \"type\": \"string\"\n    },\n    \"namespaceSelector\": {\n     \"description\": \"NamespaceSelector is a label selector against an object's containing namespace or the object itself, if the object is a namespace.\",\n     \"properties\": {\n      \"matchExpressions\": {\n       \"description\": \"matchExpressions is a list of label selector requirements. The requirements are ANDed.\",\n       \"items\": {\n        \"description\": \"A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.\",\n        \"properties\": {\n         \"key\": {\n          \"description\": \"key is the label key that the selector applies to.\",\n          \"type\": \"string\"\n         },\n         \"operator\": {\n          \"description\": \"operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.\",\n          \"type\": \"string\"\n         },\n         \"values\": {\n          \"description\": \"values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.\",\n          \"items\": {\n           \"type\": \"string\"\n          },\n          \"type\": \"array\"\n         }\n        },\n        \"required\": [\n         \"key\",\n         \"operator\"\n        ],\n        \"type\": \"object\"\n       },\n       \"type\": \"array\"\n      },\n      \"matchLabels\": {\n       \"additionalProperties\": {\n        \"type\": \"string\"\n       },\n       \"description\": \"matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \\\"key\\\", the operator is \\\"In\\\", and the values array contains only \\\"value\\\". The requirements are ANDed.\",\n       \"type\": \"object\"\n      }\n     },\n     \"type\": \"object\"\n    },\n    \"namespaces\": {\n     \"description\": \"Namespaces is a list of namespace names. If defined, a constraint only applies to resources in a listed namespace.  Namespaces also supports a prefix or suffix based glob.  For example, `namespaces: [kube-*]` matches both `kube-system` and `kube-public`, and `namespaces: [*-system]` matches both `kube-system` and `gatekeeper-system`.\",\n     \"items\": {\n      \"description\": \"A string that supports globbing at its front or end. Ex: \\\"kube-*\\\" will match \\\"kube-system\\\" or \\\"kube-public\\\", \\\"*-system\\\" will match \\\"kube-system\\\" or \\\"gatekeeper-system\\\".  The asterisk is required for wildcard matching.\",\n      \"pattern\": \"^(\\\\*|\\\\*-)?[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\\\*|-\\\\*)?$\",\n      \"type\": \"string\"\n     },\n     \"type\": \"array\"\n    },\n    \"scope\": {\n     \"description\": \"Scope determines if cluster-scoped and/or namespaced-scoped resources are matched.  Accepts `*`, `Cluster`, or `Namespaced`. (defaults to `*`)\",\n     \"type\": \"string\"\n    },\n    \"source\": {\n     \"description\": \"Source determines whether generated or original resources are matched. Accepts `Generated`|`Original`|`All` (defaults to `All`). A value of `Generated` will only match generated resources, while `Original` will only match regular resources.\",\n     \"enum\": [\n      \"All\",\n      \"Generated\",\n      \"Original\"\n     ],\n     \"type\": \"string\"\n    }\n   },\n   \"type\": \"object\"\n  },\n  \"parameters\": {\n   \"properties\": {\n    \"assign\": {\n     \"description\": \"Assign.value holds the value to be assigned\",\n     \"properties\": {\n      \"externalData\": {\n       \"description\": \"ExternalData describes the external data provider to be used for mutation.\",\n       \"properties\": {\n        \"dataSource\": {\n         \"default\": \"ValueAtLocation\",\n         \"description\": \"DataSource specifies where to extract the data that will be sent to the external data provider as parameters.\",\n         \"enum\": [\n          \"ValueAtLocation\",\n          \"Username\"\n         ],\n         \"type\": \"string\"\n        },\n        \"default\": {\n         \"description\": \"Default specifies the default value to use when the external data provider returns an error and the failure policy is set to \\\"UseDefault\\\".\",\n         \"type\": \"string\"\n        },\n        \"failurePolicy\": {\n         \"default\": \"Fail\",\n         \"description\": \"FailurePolicy specifies the policy to apply when the external data provider returns an error.\",\n         \"enum\": [\n          \"UseDefault\",\n          \"Ignore\",\n          \"Fail\"\n         ],\n         \"type\": \"string\"\n        },\n        \"provider\": {\n         \"description\": \"Provider is the name of the external data provider.\",\n         \"type\": \"string\"\n        }\n       },\n       \"type\": \"object\"\n      },\n      \"fromMetadata\": {\n       \"description\": \"FromMetadata assigns a value from the specified metadata field.\",\n       \"properties\": {\n        \"field\": {\n         \"description\": \"Field specifies which metadata field provides the assigned value. Valid fields are `namespace` and `name`.\",\n         \"type\": \"string\"\n        }\n       },\n       \"type\": \"object\"\n      },\n      \"value\": {\n       \"description\": \"Value is a constant value that will be assigned to `location`\",\n       \"x-kubernetes-preserve-unknown-fields\": true\n      }\n     },\n     \"type\": \"object\"\n    }\n   },\n   \"type\": \"object\"\n  }\n },\n \"title\": \"Assign Metadata\",\n \"type\": \"object\"\n}"}