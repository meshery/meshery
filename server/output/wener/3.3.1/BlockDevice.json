{"kind":"BlockDevice","apiVersion":"v1alpha1","display-name":"Block Device","format":"JSON","metadata":{},"model":{"name":"wener","version":"3.3.1","display-name":"","category":"","sub-category":""},"schema":"{\n \"description\": \"DeviceSpec defines the properties and runtime status of a BlockDevice\",\n \"properties\": {\n  \"aggregateDevice\": {\n   \"description\": \"AggregateDevice was intended to store the hierarchical information in cases of LVM. However this is currently not implemented and may need to be re-looked into for better design. To be deprecated\",\n   \"type\": \"string\"\n  },\n  \"capacity\": {\n   \"description\": \"Capacity\",\n   \"properties\": {\n    \"logicalSectorSize\": {\n     \"description\": \"LogicalSectorSize is blockdevice logical-sector size in bytes\",\n     \"format\": \"int32\",\n     \"type\": \"integer\"\n    },\n    \"physicalSectorSize\": {\n     \"description\": \"PhysicalSectorSize is blockdevice physical-Sector size in bytes\",\n     \"format\": \"int32\",\n     \"type\": \"integer\"\n    },\n    \"storage\": {\n     \"description\": \"Storage is the blockdevice capacity in bytes\",\n     \"format\": \"int64\",\n     \"type\": \"integer\"\n    }\n   },\n   \"required\": [\n    \"storage\"\n   ],\n   \"type\": \"object\"\n  },\n  \"claimRef\": {\n   \"description\": \"ClaimRef is the reference to the BDC which has claimed this BD\",\n   \"properties\": {\n    \"apiVersion\": {\n     \"description\": \"API version of the referent.\",\n     \"type\": \"string\"\n    },\n    \"fieldPath\": {\n     \"description\": \"If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: \\\"spec.containers{name}\\\" (where \\\"name\\\" refers to the name of the container that triggered the event) or if no container name is specified \\\"spec.containers[2]\\\" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.\",\n     \"type\": \"string\"\n    },\n    \"kind\": {\n     \"description\": \"Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\",\n     \"type\": \"string\"\n    },\n    \"name\": {\n     \"description\": \"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\",\n     \"type\": \"string\"\n    },\n    \"namespace\": {\n     \"description\": \"Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/\",\n     \"type\": \"string\"\n    },\n    \"resourceVersion\": {\n     \"description\": \"Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\",\n     \"type\": \"string\"\n    },\n    \"uid\": {\n     \"description\": \"UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids\",\n     \"type\": \"string\"\n    }\n   },\n   \"type\": \"object\"\n  },\n  \"details\": {\n   \"description\": \"Details contain static attributes of BD like model,serial, and so forth\",\n   \"properties\": {\n    \"compliance\": {\n     \"description\": \"Compliance is standards/specifications version implemented by device firmware  such as SPC-1, SPC-2, etc\",\n     \"type\": \"string\"\n    },\n    \"deviceType\": {\n     \"description\": \"DeviceType represents the type of device like sparse, disk, partition, lvm, crypt\",\n     \"enum\": [\n      \"disk\",\n      \"partition\",\n      \"sparse\",\n      \"loop\",\n      \"lvm\",\n      \"crypt\",\n      \"dm\",\n      \"mpath\"\n     ],\n     \"type\": \"string\"\n    },\n    \"driveType\": {\n     \"description\": \"DriveType is the type of backing drive, HDD/SSD\",\n     \"enum\": [\n      \"HDD\",\n      \"SSD\",\n      \"Unknown\",\n      \"\"\n     ],\n     \"type\": \"string\"\n    },\n    \"firmwareRevision\": {\n     \"description\": \"FirmwareRevision is the disk firmware revision\",\n     \"type\": \"string\"\n    },\n    \"hardwareSectorSize\": {\n     \"description\": \"HardwareSectorSize is the hardware sector size in bytes\",\n     \"format\": \"int32\",\n     \"type\": \"integer\"\n    },\n    \"logicalBlockSize\": {\n     \"description\": \"LogicalBlockSize is the logical block size in bytes reported by /sys/class/block/sda/queue/logical_block_size\",\n     \"format\": \"int32\",\n     \"type\": \"integer\"\n    },\n    \"model\": {\n     \"description\": \"Model is model of disk\",\n     \"type\": \"string\"\n    },\n    \"physicalBlockSize\": {\n     \"description\": \"PhysicalBlockSize is the physical block size in bytes reported by /sys/class/block/sda/queue/physical_block_size\",\n     \"format\": \"int32\",\n     \"type\": \"integer\"\n    },\n    \"serial\": {\n     \"description\": \"Serial is serial number of disk\",\n     \"type\": \"string\"\n    },\n    \"vendor\": {\n     \"description\": \"Vendor is vendor of disk\",\n     \"type\": \"string\"\n    }\n   },\n   \"type\": \"object\"\n  },\n  \"devlinks\": {\n   \"description\": \"DevLinks contains soft links of a block device like /dev/by-id/... /dev/by-uuid/...\",\n   \"items\": {\n    \"description\": \"DeviceDevLink holds the mapping between type and links like by-id type or by-path type link\",\n    \"properties\": {\n     \"kind\": {\n      \"description\": \"Kind is the type of link like by-id or by-path.\",\n      \"enum\": [\n       \"by-id\",\n       \"by-path\"\n      ],\n      \"type\": \"string\"\n     },\n     \"links\": {\n      \"description\": \"Links are the soft links\",\n      \"items\": {\n       \"type\": \"string\"\n      },\n      \"type\": \"array\"\n     }\n    },\n    \"type\": \"object\"\n   },\n   \"type\": \"array\"\n  },\n  \"filesystem\": {\n   \"description\": \"FileSystem contains mountpoint and filesystem type\",\n   \"properties\": {\n    \"fsType\": {\n     \"description\": \"Type represents the FileSystem type of the block device\",\n     \"type\": \"string\"\n    },\n    \"mountPoint\": {\n     \"description\": \"MountPoint represents the mountpoint of the block device.\",\n     \"type\": \"string\"\n    }\n   },\n   \"type\": \"object\"\n  },\n  \"nodeAttributes\": {\n   \"description\": \"NodeAttributes has the details of the node on which BD is attached\",\n   \"properties\": {\n    \"nodeName\": {\n     \"description\": \"NodeName is the name of the Kubernetes node resource on which the device is attached\",\n     \"type\": \"string\"\n    }\n   },\n   \"type\": \"object\"\n  },\n  \"parentDevice\": {\n   \"description\": \"ParentDevice was intended to store the UUID of the parent Block Device as is the case for partitioned block devices. \\n For example: /dev/sda is the parent for /dev/sda1 To be deprecated\",\n   \"type\": \"string\"\n  },\n  \"partitioned\": {\n   \"description\": \"Partitioned represents if BlockDevice has partitions or not (Yes/No) Currently always default to No. To be deprecated\",\n   \"enum\": [\n    \"Yes\",\n    \"No\"\n   ],\n   \"type\": \"string\"\n  },\n  \"path\": {\n   \"description\": \"Path contain devpath (e.g. /dev/sdb)\",\n   \"type\": \"string\"\n  }\n },\n \"required\": [\n  \"capacity\",\n  \"devlinks\",\n  \"nodeAttributes\",\n  \"path\"\n ],\n \"title\": \"Block Device\",\n \"type\": \"object\"\n}"}