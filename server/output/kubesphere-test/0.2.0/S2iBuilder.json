{"kind":"S2iBuilder","apiVersion":"v1alpha1","display-name":"S2i Builder","format":"JSON","metadata":{},"model":{"name":"kubesphere-test","version":"0.2.0","display-name":"","category":"","sub-category":""},"schema":"{\n \"description\": \"S2iBuilderSpec defines the desired state of S2iBuilder\",\n \"properties\": {\n  \"config\": {\n   \"description\": \"INSERT ADDITIONAL SPEC FIELDS - desired state of cluster Important: Run \\\"make\\\" to regenerate code after modifying this file\",\n   \"properties\": {\n    \"addHost\": {\n     \"description\": \"AddHost Add a line to /etc/hosts for test purpose or private use in LAN. Its format is host:IP,multiple hosts can be added  by using multiple --add-host\",\n     \"items\": {\n      \"type\": \"string\"\n     },\n     \"type\": \"array\"\n    },\n    \"asDockerfile\": {\n     \"description\": \"AsDockerfile indicates the path where the Dockerfile should be written instead of building a new image.\",\n     \"type\": \"string\"\n    },\n    \"assembleUser\": {\n     \"description\": \"AssembleUser specifies the user to run the assemble script in container\",\n     \"type\": \"string\"\n    },\n    \"blockOnBuild\": {\n     \"description\": \"BlockOnBuild prevents s2i from performing a docker build operation if one is necessary to execute ONBUILD commands, or to layer source code into the container for images that don't have a tar binary available, if the image contains ONBUILD commands that would be executed.\",\n     \"type\": \"boolean\"\n    },\n    \"branchExpression\": {\n     \"description\": \"Regular expressions, ignoring names that do not match the provided regular expression\",\n     \"type\": \"string\"\n    },\n    \"buildVolumes\": {\n     \"description\": \"BuildVolumes specifies a list of volumes to mount to container running the build.\",\n     \"items\": {\n      \"type\": \"string\"\n     },\n     \"type\": \"array\"\n    },\n    \"builderBaseImageVersion\": {\n     \"description\": \"BuilderBaseImageVersion provides optional version information about the builder base image.\",\n     \"type\": \"string\"\n    },\n    \"builderImage\": {\n     \"description\": \"BuilderImage describes which image is used for building the result images.\",\n     \"type\": \"string\"\n    },\n    \"builderImageVersion\": {\n     \"description\": \"BuilderImageVersion provides optional version information about the builder image.\",\n     \"type\": \"string\"\n    },\n    \"builderPullPolicy\": {\n     \"description\": \"BuilderPullPolicy specifies when to pull the builder image\",\n     \"type\": \"string\"\n    },\n    \"callbackUrl\": {\n     \"description\": \"CallbackURL is a URL which is called upon successful build to inform about that fact.\",\n     \"type\": \"string\"\n    },\n    \"cgroupLimits\": {\n     \"description\": \"CGroupLimits describes the cgroups limits that will be applied to any containers run by s2i.\",\n     \"properties\": {\n      \"cpuPeriod\": {\n       \"format\": \"int64\",\n       \"type\": \"integer\"\n      },\n      \"cpuQuota\": {\n       \"format\": \"int64\",\n       \"type\": \"integer\"\n      },\n      \"cpuShares\": {\n       \"format\": \"int64\",\n       \"type\": \"integer\"\n      },\n      \"memoryLimitBytes\": {\n       \"format\": \"int64\",\n       \"type\": \"integer\"\n      },\n      \"memorySwap\": {\n       \"format\": \"int64\",\n       \"type\": \"integer\"\n      },\n      \"parent\": {\n       \"type\": \"string\"\n      }\n     },\n     \"required\": [\n      \"cpuPeriod\",\n      \"cpuQuota\",\n      \"cpuShares\",\n      \"memoryLimitBytes\",\n      \"memorySwap\",\n      \"parent\"\n     ],\n     \"type\": \"object\"\n    },\n    \"contextDir\": {\n     \"description\": \"Specify a relative directory inside the application repository that should be used as a root directory for the application.\",\n     \"type\": \"string\"\n    },\n    \"description\": {\n     \"description\": \"Description is a result image description label. The default is no description.\",\n     \"type\": \"string\"\n    },\n    \"destination\": {\n     \"description\": \"Destination specifies a location where the untar operation will place its artifacts.\",\n     \"type\": \"string\"\n    },\n    \"displayName\": {\n     \"description\": \"DisplayName is a result image display-name label. This defaults to the output image name.\",\n     \"type\": \"string\"\n    },\n    \"dockerConfig\": {\n     \"description\": \"DockerConfig describes how to access host docker daemon.\",\n     \"properties\": {\n      \"caFile\": {\n       \"description\": \"CAFile is the certificate authority file path for a TLS connection\",\n       \"type\": \"string\"\n      },\n      \"certFile\": {\n       \"description\": \"CertFile is the certificate file path for a TLS connection\",\n       \"type\": \"string\"\n      },\n      \"endPoint\": {\n       \"description\": \"Endpoint is the docker network endpoint or socket\",\n       \"type\": \"string\"\n      },\n      \"keyFile\": {\n       \"description\": \"KeyFile is the key file path for a TLS connection\",\n       \"type\": \"string\"\n      },\n      \"tlsVerify\": {\n       \"description\": \"TLSVerify indicates if TLS peer must be verified\",\n       \"type\": \"boolean\"\n      },\n      \"useTLS\": {\n       \"description\": \"UseTLS indicates if TLS must be used\",\n       \"type\": \"boolean\"\n      }\n     },\n     \"required\": [\n      \"caFile\",\n      \"certFile\",\n      \"endPoint\",\n      \"keyFile\",\n      \"tlsVerify\",\n      \"useTLS\"\n     ],\n     \"type\": \"object\"\n    },\n    \"dockerNetworkMode\": {\n     \"description\": \"DockerNetworkMode is used to set the docker network setting to --net=container:\\u003cid\\u003e when the builder is invoked from a container.\",\n     \"type\": \"string\"\n    },\n    \"dropCapabilities\": {\n     \"description\": \"DropCapabilities contains a list of capabilities to drop when executing containers\",\n     \"items\": {\n      \"type\": \"string\"\n     },\n     \"type\": \"array\"\n    },\n    \"environment\": {\n     \"description\": \"Environment is a map of environment variables to be passed to the image.\",\n     \"items\": {\n      \"description\": \"EnvironmentSpec specifies a single environment variable.\",\n      \"properties\": {\n       \"name\": {\n        \"type\": \"string\"\n       },\n       \"value\": {\n        \"type\": \"string\"\n       }\n      },\n      \"required\": [\n       \"name\",\n       \"value\"\n      ],\n      \"type\": \"object\"\n     },\n     \"type\": \"array\"\n    },\n    \"excludeRegExp\": {\n     \"description\": \"ExcludeRegExp contains a string representation of the regular expression desired for deciding which files to exclude from the tar stream\",\n     \"type\": \"string\"\n    },\n    \"export\": {\n     \"description\": \"Export Push the result image to specify image registry in tag\",\n     \"type\": \"boolean\"\n    },\n    \"gitSecretRef\": {\n     \"description\": \"GitSecretRef is the BasicAuth Secret of Git Clone\",\n     \"properties\": {\n      \"name\": {\n       \"description\": \"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?\",\n       \"type\": \"string\"\n      }\n     },\n     \"type\": \"object\"\n    },\n    \"hasOnBuild\": {\n     \"description\": \"HasOnBuild will be set to true if the builder image contains ONBUILD instructions\",\n     \"type\": \"boolean\"\n    },\n    \"imageName\": {\n     \"description\": \"ImageName Contains the registry address and reponame, tag should set by field tag alone\",\n     \"type\": \"string\"\n    },\n    \"imageScriptsUrl\": {\n     \"description\": \"ImageScriptsURL is the default location to find the assemble/run scripts for a builder image. This url can be a reference within the builder image if the scheme is specified as image://\",\n     \"type\": \"string\"\n    },\n    \"imageWorkDir\": {\n     \"description\": \"ImageWorkDir is the default working directory for the builder image.\",\n     \"type\": \"string\"\n    },\n    \"incremental\": {\n     \"description\": \"Incremental describes whether to try to perform incremental build.\",\n     \"type\": \"boolean\"\n    },\n    \"incrementalAuthentication\": {\n     \"description\": \"IncrementalAuthentication holds the authentication information for pulling the previous image from private repositories\",\n     \"properties\": {\n      \"email\": {\n       \"type\": \"string\"\n      },\n      \"password\": {\n       \"type\": \"string\"\n      },\n      \"secretRef\": {\n       \"description\": \"LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace.\",\n       \"properties\": {\n        \"name\": {\n         \"description\": \"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?\",\n         \"type\": \"string\"\n        }\n       },\n       \"type\": \"object\"\n      },\n      \"serverAddress\": {\n       \"type\": \"string\"\n      },\n      \"username\": {\n       \"type\": \"string\"\n      }\n     },\n     \"type\": \"object\"\n    },\n    \"incrementalFromTag\": {\n     \"description\": \"IncrementalFromTag sets an alternative image tag to look for existing artifacts. Tag is used by default if this is not set.\",\n     \"type\": \"string\"\n    },\n    \"injections\": {\n     \"description\": \"Injections specifies a list source/destination folders that are injected to the container that runs assemble. All files we inject will be truncated after the assemble script finishes.\",\n     \"items\": {\n      \"description\": \"VolumeSpec represents a single volume mount point.\",\n      \"properties\": {\n       \"destination\": {\n        \"description\": \"Destination is the path to mount the volume to - absolute or relative.\",\n        \"type\": \"string\"\n       },\n       \"keep\": {\n        \"description\": \"Keep indicates if the mounted data should be kept in the final image.\",\n        \"type\": \"boolean\"\n       },\n       \"source\": {\n        \"description\": \"Source is a reference to the volume source.\",\n        \"type\": \"string\"\n       }\n      },\n      \"type\": \"object\"\n     },\n     \"type\": \"array\"\n    },\n    \"isBinaryURL\": {\n     \"description\": \"IsBinaryURL explain the type of SourceURL. If it is IsBinaryURL, it will download the file directly without using git.\",\n     \"type\": \"boolean\"\n    },\n    \"keepSymlinks\": {\n     \"description\": \"KeepSymlinks indicates to copy symlinks as symlinks. Default behavior is to follow symlinks and copy files by content.\",\n     \"type\": \"boolean\"\n    },\n    \"labelNamespace\": {\n     \"description\": \"LabelNamespace provides the namespace under which the labels will be generated.\",\n     \"type\": \"string\"\n    },\n    \"labels\": {\n     \"additionalProperties\": {\n      \"type\": \"string\"\n     },\n     \"description\": \"Labels specify labels and their values to be applied to the resulting image. Label keys must have non-zero length. The labels defined here override generated labels in case they have the same name.\",\n     \"type\": \"object\"\n    },\n    \"layeredBuild\": {\n     \"description\": \"LayeredBuild describes if this is build which layered scripts and sources on top of BuilderImage.\",\n     \"type\": \"boolean\"\n    },\n    \"nodeAffinityKey\": {\n     \"description\": \"The key of Node Affinity.\",\n     \"type\": \"string\"\n    },\n    \"nodeAffinityValues\": {\n     \"description\": \"The values of Node Affinity.\",\n     \"items\": {\n      \"type\": \"string\"\n     },\n     \"type\": \"array\"\n    },\n    \"outputBuildResult\": {\n     \"description\": \"Whether output build result to status.\",\n     \"type\": \"boolean\"\n    },\n    \"outputImageName\": {\n     \"description\": \"OutputImageName is a result image name without tag, default is latest. tag will append to ImageName in the end\",\n     \"type\": \"string\"\n    },\n    \"preserveWorkingDir\": {\n     \"description\": \"PreserveWorkingDir describes if working directory should be left after processing.\",\n     \"type\": \"boolean\"\n    },\n    \"previousImagePullPolicy\": {\n     \"description\": \"PreviousImagePullPolicy specifies when to pull the previously build image when doing incremental build\",\n     \"type\": \"string\"\n    },\n    \"pullAuthentication\": {\n     \"description\": \"PullAuthentication holds the authentication information for pulling the Docker images from private repositories\",\n     \"properties\": {\n      \"email\": {\n       \"type\": \"string\"\n      },\n      \"password\": {\n       \"type\": \"string\"\n      },\n      \"secretRef\": {\n       \"description\": \"LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace.\",\n       \"properties\": {\n        \"name\": {\n         \"description\": \"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?\",\n         \"type\": \"string\"\n        }\n       },\n       \"type\": \"object\"\n      },\n      \"serverAddress\": {\n       \"type\": \"string\"\n      },\n      \"username\": {\n       \"type\": \"string\"\n      }\n     },\n     \"type\": \"object\"\n    },\n    \"pushAuthentication\": {\n     \"description\": \"PullAuthentication holds the authentication information for pulling the Docker images from private repositories\",\n     \"properties\": {\n      \"email\": {\n       \"type\": \"string\"\n      },\n      \"password\": {\n       \"type\": \"string\"\n      },\n      \"secretRef\": {\n       \"description\": \"LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace.\",\n       \"properties\": {\n        \"name\": {\n         \"description\": \"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?\",\n         \"type\": \"string\"\n        }\n       },\n       \"type\": \"object\"\n      },\n      \"serverAddress\": {\n       \"type\": \"string\"\n      },\n      \"username\": {\n       \"type\": \"string\"\n      }\n     },\n     \"type\": \"object\"\n    },\n    \"removePreviousImage\": {\n     \"description\": \"RemovePreviousImage describes if previous image should be removed after successful build. This applies only to incremental builds.\",\n     \"type\": \"boolean\"\n    },\n    \"revisionId\": {\n     \"description\": \"The RevisionId is a branch name or a SHA-1 hash of every important thing about the commit\",\n     \"type\": \"string\"\n    },\n    \"runImage\": {\n     \"description\": \"RunImage will trigger a \\\"docker run ...\\\" invocation of the produced image so the user can see if it operates as he would expect\",\n     \"type\": \"boolean\"\n    },\n    \"runtimeArtifacts\": {\n     \"description\": \"RuntimeArtifacts specifies a list of source/destination pairs that will be copied from builder to a runtime image. Source can be a file or directory. Destination must be a directory. Regardless whether it is an absolute or relative path, it will be placed into image's WORKDIR. Destination also can be empty or equals to \\\".\\\", in this case it just refers to a root of WORKDIR. In case it's empty, S2I will try to get this list from io.openshift.s2i.assemble-input-files label on a RuntimeImage.\",\n     \"items\": {\n      \"description\": \"VolumeSpec represents a single volume mount point.\",\n      \"properties\": {\n       \"destination\": {\n        \"description\": \"Destination is the path to mount the volume to - absolute or relative.\",\n        \"type\": \"string\"\n       },\n       \"keep\": {\n        \"description\": \"Keep indicates if the mounted data should be kept in the final image.\",\n        \"type\": \"boolean\"\n       },\n       \"source\": {\n        \"description\": \"Source is a reference to the volume source.\",\n        \"type\": \"string\"\n       }\n      },\n      \"type\": \"object\"\n     },\n     \"type\": \"array\"\n    },\n    \"runtimeAuthentication\": {\n     \"description\": \"RuntimeAuthentication holds the authentication information for pulling the runtime Docker images from private repositories.\",\n     \"properties\": {\n      \"email\": {\n       \"type\": \"string\"\n      },\n      \"password\": {\n       \"type\": \"string\"\n      },\n      \"secretRef\": {\n       \"description\": \"LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace.\",\n       \"properties\": {\n        \"name\": {\n         \"description\": \"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?\",\n         \"type\": \"string\"\n        }\n       },\n       \"type\": \"object\"\n      },\n      \"serverAddress\": {\n       \"type\": \"string\"\n      },\n      \"username\": {\n       \"type\": \"string\"\n      }\n     },\n     \"type\": \"object\"\n    },\n    \"runtimeImage\": {\n     \"description\": \"RuntimeImage specifies the image that will be a base for resulting image and will be used for running an application. By default, BuilderImage is used for building and running, but the latter may be overridden.\",\n     \"type\": \"string\"\n    },\n    \"runtimeImagePullPolicy\": {\n     \"description\": \"RuntimeImagePullPolicy specifies when to pull a runtime image.\",\n     \"type\": \"string\"\n    },\n    \"scriptDownloadProxyConfig\": {\n     \"description\": \"ScriptDownloadProxyConfig optionally specifies the http and https proxy to use when downloading scripts\",\n     \"properties\": {\n      \"httpProxy\": {\n       \"type\": \"string\"\n      },\n      \"httpsProxy\": {\n       \"type\": \"string\"\n      }\n     },\n     \"type\": \"object\"\n    },\n    \"scriptsUrl\": {\n     \"description\": \"ScriptsURL is a URL describing where to fetch the S2I scripts from during build process. This url can be a reference within the builder image if the scheme is specified as image://\",\n     \"type\": \"string\"\n    },\n    \"secretCode\": {\n     \"description\": \"SecretCode\",\n     \"type\": \"string\"\n    },\n    \"securityOpt\": {\n     \"description\": \"SecurityOpt are passed as options to the docker containers launched by s2i.\",\n     \"items\": {\n      \"type\": \"string\"\n     },\n     \"type\": \"array\"\n    },\n    \"sourceUrl\": {\n     \"description\": \"SourceURL is  url of the codes such as https://github.com/a/b.git\",\n     \"type\": \"string\"\n    },\n    \"tag\": {\n     \"description\": \"Tag is a result image tag name.\",\n     \"type\": \"string\"\n    },\n    \"taintKey\": {\n     \"description\": \"The name of taint.\",\n     \"type\": \"string\"\n    },\n    \"usage\": {\n     \"description\": \"Usage allows for properly shortcircuiting s2i logic when `s2i usage` is invoked\",\n     \"type\": \"boolean\"\n    },\n    \"workingDir\": {\n     \"description\": \"WorkingDir describes temporary directory used for downloading sources, scripts and tar operations.\",\n     \"type\": \"string\"\n    },\n    \"workingSourceDir\": {\n     \"description\": \"WorkingSourceDir describes the subdirectory off of WorkingDir set up during the repo download that is later used as the root for ignore processing\",\n     \"type\": \"string\"\n    }\n   },\n   \"required\": [\n    \"imageName\",\n    \"sourceUrl\"\n   ],\n   \"type\": \"object\"\n  },\n  \"fromTemplate\": {\n   \"description\": \"FromTemplate define some inputs from user\",\n   \"properties\": {\n    \"builderImage\": {\n     \"description\": \"BaseImage specify which version of this template to use\",\n     \"type\": \"string\"\n    },\n    \"name\": {\n     \"description\": \"Name specify a template to use, so many fields in Config can left empty\",\n     \"type\": \"string\"\n    },\n    \"parameters\": {\n     \"description\": \"Parameters must use with `template`, fill some parameters which template will use\",\n     \"items\": {\n      \"properties\": {\n       \"defaultValue\": {\n        \"type\": \"string\"\n       },\n       \"description\": {\n        \"type\": \"string\"\n       },\n       \"key\": {\n        \"type\": \"string\"\n       },\n       \"optValues\": {\n        \"items\": {\n         \"type\": \"string\"\n        },\n        \"type\": \"array\"\n       },\n       \"required\": {\n        \"type\": \"boolean\"\n       },\n       \"type\": {\n        \"type\": \"string\"\n       },\n       \"value\": {\n        \"type\": \"string\"\n       }\n      },\n      \"type\": \"object\"\n     },\n     \"type\": \"array\"\n    }\n   },\n   \"type\": \"object\"\n  }\n },\n \"title\": \"S2i Builder\",\n \"type\": \"object\"\n}"}