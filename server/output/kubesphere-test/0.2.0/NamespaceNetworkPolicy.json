{"kind":"NamespaceNetworkPolicy","apiVersion":"v1alpha1","display-name":"Namespace Network Policy","format":"JSON","metadata":{},"model":{"name":"kubesphere-test","version":"0.2.0","display-name":"","category":"","sub-category":""},"schema":"{\n \"description\": \"NamespaceNetworkPolicySpec provides the specification of a NamespaceNetworkPolicy\",\n \"properties\": {\n  \"egress\": {\n   \"description\": \"List of egress rules to be applied to the selected pods. Outgoing traffic is allowed if there are no NetworkPolicies selecting the pod (and cluster policy otherwise allows the traffic), OR if the traffic matches at least one egress rule across all of the NetworkPolicy objects whose podSelector matches the pod. If this field is empty then this NetworkPolicy limits all outgoing traffic (and serves solely to ensure that the pods it selects are isolated by default). This field is beta-level in 1.8\",\n   \"items\": {\n    \"description\": \"NetworkPolicyEgressRule describes a particular set of traffic that is allowed out of pods matched by a NetworkPolicySpec's podSelector. The traffic must match both ports and to. This type is beta-level in 1.8\",\n    \"properties\": {\n     \"ports\": {\n      \"description\": \"List of destination ports for outgoing traffic. Each item in this list is combined using a logical OR. If this field is empty or missing, this rule matches all ports (traffic not restricted by port). If this field is present and contains at least one item, then this rule allows traffic only if the traffic matches at least one port in the list.\",\n      \"items\": {\n       \"description\": \"NetworkPolicyPort describes a port to allow traffic on\",\n       \"properties\": {\n        \"endPort\": {\n         \"description\": \"If set, indicates that the range of ports from port to endPort, inclusive, should be allowed by the policy. This field cannot be defined if the port field is not defined or if the port field is defined as a named (string) port. The endPort must be equal or greater than port. This feature is in Alpha state and should be enabled using the Feature Gate \\\"NetworkPolicyEndPort\\\".\",\n         \"format\": \"int32\",\n         \"type\": \"integer\"\n        },\n        \"port\": {\n         \"anyOf\": [\n          {\n           \"type\": \"integer\"\n          },\n          {\n           \"type\": \"string\"\n          }\n         ],\n         \"description\": \"The port on the given protocol. This can either be a numerical or named port on a pod. If this field is not provided, this matches all port names and numbers. If present, only traffic on the specified protocol AND port will be matched.\",\n         \"x-kubernetes-int-or-string\": true\n        },\n        \"protocol\": {\n         \"default\": \"TCP\",\n         \"description\": \"The protocol (TCP, UDP, or SCTP) which traffic must match. If not specified, this field defaults to TCP.\",\n         \"type\": \"string\"\n        }\n       },\n       \"type\": \"object\"\n      },\n      \"type\": \"array\"\n     },\n     \"to\": {\n      \"description\": \"List of destinations for outgoing traffic of pods selected for this rule. Items in this list are combined using a logical OR operation. If this field is empty or missing, this rule matches all destinations (traffic not restricted by destination). If this field is present and contains at least one item, this rule allows traffic only if the traffic matches at least one item in the to list.\",\n      \"items\": {\n       \"description\": \"NetworkPolicyPeer describes a peer to allow traffic from. Only certain combinations of fields are allowed\",\n       \"properties\": {\n        \"ipBlock\": {\n         \"description\": \"IPBlock defines policy on a particular IPBlock. If this field is set then neither of the other fields can be.\",\n         \"properties\": {\n          \"cidr\": {\n           \"description\": \"CIDR is a string representing the IP Block Valid examples are \\\"192.168.1.1/24\\\" or \\\"2001:db9::/64\\\"\",\n           \"type\": \"string\"\n          },\n          \"except\": {\n           \"description\": \"Except is a slice of CIDRs that should not be included within an IP Block Valid examples are \\\"192.168.1.1/24\\\" or \\\"2001:db9::/64\\\" Except values will be rejected if they are outside the CIDR range\",\n           \"items\": {\n            \"type\": \"string\"\n           },\n           \"type\": \"array\"\n          }\n         },\n         \"required\": [\n          \"cidr\"\n         ],\n         \"type\": \"object\"\n        },\n        \"namespace\": {\n         \"properties\": {\n          \"name\": {\n           \"type\": \"string\"\n          }\n         },\n         \"required\": [\n          \"name\"\n         ],\n         \"type\": \"object\"\n        },\n        \"service\": {\n         \"properties\": {\n          \"name\": {\n           \"type\": \"string\"\n          },\n          \"namespace\": {\n           \"type\": \"string\"\n          }\n         },\n         \"required\": [\n          \"name\",\n          \"namespace\"\n         ],\n         \"type\": \"object\"\n        }\n       },\n       \"type\": \"object\"\n      },\n      \"type\": \"array\"\n     }\n    },\n    \"type\": \"object\"\n   },\n   \"type\": \"array\"\n  },\n  \"ingress\": {\n   \"description\": \"List of ingress rules to be applied to the selected pods. Traffic is allowed to a pod if there are no NetworkPolicies selecting the pod (and cluster policy otherwise allows the traffic), OR if the traffic source is the pod's local node, OR if the traffic matches at least one ingress rule across all of the NetworkPolicy objects whose podSelector matches the pod. If this field is empty then this NetworkPolicy does not allow any traffic (and serves solely to ensure that the pods it selects are isolated by default)\",\n   \"items\": {\n    \"description\": \"NetworkPolicyIngressRule describes a particular set of traffic that is allowed to the pods matched by a NetworkPolicySpec's podSelector. The traffic must match both ports and from.\",\n    \"properties\": {\n     \"from\": {\n      \"description\": \"List of sources which should be able to access the pods selected for this rule. Items in this list are combined using a logical OR operation. If this field is empty or missing, this rule matches all sources (traffic not restricted by source). If this field is present and contains at least one item, this rule allows traffic only if the traffic matches at least one item in the from list.\",\n      \"items\": {\n       \"description\": \"NetworkPolicyPeer describes a peer to allow traffic from. Only certain combinations of fields are allowed\",\n       \"properties\": {\n        \"ipBlock\": {\n         \"description\": \"IPBlock defines policy on a particular IPBlock. If this field is set then neither of the other fields can be.\",\n         \"properties\": {\n          \"cidr\": {\n           \"description\": \"CIDR is a string representing the IP Block Valid examples are \\\"192.168.1.1/24\\\" or \\\"2001:db9::/64\\\"\",\n           \"type\": \"string\"\n          },\n          \"except\": {\n           \"description\": \"Except is a slice of CIDRs that should not be included within an IP Block Valid examples are \\\"192.168.1.1/24\\\" or \\\"2001:db9::/64\\\" Except values will be rejected if they are outside the CIDR range\",\n           \"items\": {\n            \"type\": \"string\"\n           },\n           \"type\": \"array\"\n          }\n         },\n         \"required\": [\n          \"cidr\"\n         ],\n         \"type\": \"object\"\n        },\n        \"namespace\": {\n         \"properties\": {\n          \"name\": {\n           \"type\": \"string\"\n          }\n         },\n         \"required\": [\n          \"name\"\n         ],\n         \"type\": \"object\"\n        },\n        \"service\": {\n         \"properties\": {\n          \"name\": {\n           \"type\": \"string\"\n          },\n          \"namespace\": {\n           \"type\": \"string\"\n          }\n         },\n         \"required\": [\n          \"name\",\n          \"namespace\"\n         ],\n         \"type\": \"object\"\n        }\n       },\n       \"type\": \"object\"\n      },\n      \"type\": \"array\"\n     },\n     \"ports\": {\n      \"description\": \"List of ports which should be made accessible on the pods selected for this rule. Each item in this list is combined using a logical OR. If this field is empty or missing, this rule matches all ports (traffic not restricted by port). If this field is present and contains at least one item, then this rule allows traffic only if the traffic matches at least one port in the list.\",\n      \"items\": {\n       \"description\": \"NetworkPolicyPort describes a port to allow traffic on\",\n       \"properties\": {\n        \"endPort\": {\n         \"description\": \"If set, indicates that the range of ports from port to endPort, inclusive, should be allowed by the policy. This field cannot be defined if the port field is not defined or if the port field is defined as a named (string) port. The endPort must be equal or greater than port. This feature is in Alpha state and should be enabled using the Feature Gate \\\"NetworkPolicyEndPort\\\".\",\n         \"format\": \"int32\",\n         \"type\": \"integer\"\n        },\n        \"port\": {\n         \"anyOf\": [\n          {\n           \"type\": \"integer\"\n          },\n          {\n           \"type\": \"string\"\n          }\n         ],\n         \"description\": \"The port on the given protocol. This can either be a numerical or named port on a pod. If this field is not provided, this matches all port names and numbers. If present, only traffic on the specified protocol AND port will be matched.\",\n         \"x-kubernetes-int-or-string\": true\n        },\n        \"protocol\": {\n         \"default\": \"TCP\",\n         \"description\": \"The protocol (TCP, UDP, or SCTP) which traffic must match. If not specified, this field defaults to TCP.\",\n         \"type\": \"string\"\n        }\n       },\n       \"type\": \"object\"\n      },\n      \"type\": \"array\"\n     }\n    },\n    \"type\": \"object\"\n   },\n   \"type\": \"array\"\n  },\n  \"policyTypes\": {\n   \"description\": \"List of rule types that the NetworkPolicy relates to. Valid options are \\\"Ingress\\\", \\\"Egress\\\", or \\\"Ingress,Egress\\\". If this field is not specified, it will default based on the existence of Ingress or Egress rules; policies that contain an Egress section are assumed to affect Egress, and all policies (whether or not they contain an Ingress section) are assumed to affect Ingress. If you want to write an egress-only policy, you must explicitly specify policyTypes [ \\\"Egress\\\" ]. Likewise, if you want to write a policy that specifies that no egress is allowed, you must specify a policyTypes value that include \\\"Egress\\\" (since such a policy would not include an Egress section and would otherwise default to just [ \\\"Ingress\\\" ]). This field is beta-level in 1.8\",\n   \"items\": {\n    \"description\": \"PolicyType string describes the NetworkPolicy type This type is beta-level in 1.8\",\n    \"type\": \"string\"\n   },\n   \"type\": \"array\"\n  }\n },\n \"title\": \"Namespace Network Policy\",\n \"type\": \"object\"\n}"}