{"kind":"Schedule","apiVersion":"v1","display-name":"Schedule","format":"JSON","metadata":{},"model":{"name":"mesosphere","version":"3.2.3","display-name":"","category":"","sub-category":""},"schema":"{\n \"description\": \"ScheduleSpec defines the specification for a Velero schedule\",\n \"properties\": {\n  \"schedule\": {\n   \"description\": \"Schedule is a Cron expression defining when to run the Backup.\",\n   \"type\": \"string\"\n  },\n  \"template\": {\n   \"description\": \"Template is the definition of the Backup to be run on the provided schedule\",\n   \"properties\": {\n    \"defaultVolumesToRestic\": {\n     \"description\": \"DefaultVolumesToRestic specifies whether restic should be used to take a backup of all pod volumes by default.\",\n     \"type\": \"boolean\"\n    },\n    \"excludedNamespaces\": {\n     \"description\": \"ExcludedNamespaces contains a list of namespaces that are not included in the backup.\",\n     \"items\": {\n      \"type\": \"string\"\n     },\n     \"nullable\": true,\n     \"type\": \"array\"\n    },\n    \"excludedResources\": {\n     \"description\": \"ExcludedResources is a slice of resource names that are not included in the backup.\",\n     \"items\": {\n      \"type\": \"string\"\n     },\n     \"nullable\": true,\n     \"type\": \"array\"\n    },\n    \"hooks\": {\n     \"description\": \"Hooks represent custom behaviors that should be executed at different phases of the backup.\",\n     \"properties\": {\n      \"resources\": {\n       \"description\": \"Resources are hooks that should be executed when backing up individual instances of a resource.\",\n       \"items\": {\n        \"description\": \"BackupResourceHookSpec defines one or more BackupResourceHooks that should be executed based on the rules defined for namespaces, resources, and label selector.\",\n        \"properties\": {\n         \"excludedNamespaces\": {\n          \"description\": \"ExcludedNamespaces specifies the namespaces to which this hook spec does not apply.\",\n          \"items\": {\n           \"type\": \"string\"\n          },\n          \"nullable\": true,\n          \"type\": \"array\"\n         },\n         \"excludedResources\": {\n          \"description\": \"ExcludedResources specifies the resources to which this hook spec does not apply.\",\n          \"items\": {\n           \"type\": \"string\"\n          },\n          \"nullable\": true,\n          \"type\": \"array\"\n         },\n         \"includedNamespaces\": {\n          \"description\": \"IncludedNamespaces specifies the namespaces to which this hook spec applies. If empty, it applies to all namespaces.\",\n          \"items\": {\n           \"type\": \"string\"\n          },\n          \"nullable\": true,\n          \"type\": \"array\"\n         },\n         \"includedResources\": {\n          \"description\": \"IncludedResources specifies the resources to which this hook spec applies. If empty, it applies to all resources.\",\n          \"items\": {\n           \"type\": \"string\"\n          },\n          \"nullable\": true,\n          \"type\": \"array\"\n         },\n         \"labelSelector\": {\n          \"description\": \"LabelSelector, if specified, filters the resources to which this hook spec applies.\",\n          \"nullable\": true,\n          \"properties\": {\n           \"matchExpressions\": {\n            \"description\": \"matchExpressions is a list of label selector requirements. The requirements are ANDed.\",\n            \"items\": {\n             \"description\": \"A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.\",\n             \"properties\": {\n              \"key\": {\n               \"description\": \"key is the label key that the selector applies to.\",\n               \"type\": \"string\"\n              },\n              \"operator\": {\n               \"description\": \"operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.\",\n               \"type\": \"string\"\n              },\n              \"values\": {\n               \"description\": \"values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.\",\n               \"items\": {\n                \"type\": \"string\"\n               },\n               \"type\": \"array\"\n              }\n             },\n             \"required\": [\n              \"key\",\n              \"operator\"\n             ],\n             \"type\": \"object\"\n            },\n            \"type\": \"array\"\n           },\n           \"matchLabels\": {\n            \"additionalProperties\": {\n             \"type\": \"string\"\n            },\n            \"description\": \"matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \\\"key\\\", the operator is \\\"In\\\", and the values array contains only \\\"value\\\". The requirements are ANDed.\",\n            \"type\": \"object\"\n           }\n          },\n          \"type\": \"object\"\n         },\n         \"name\": {\n          \"description\": \"Name is the name of this hook.\",\n          \"type\": \"string\"\n         },\n         \"post\": {\n          \"description\": \"PostHooks is a list of BackupResourceHooks to execute after storing the item in the backup. These are executed after all \\\"additional items\\\" from item actions are processed.\",\n          \"items\": {\n           \"description\": \"BackupResourceHook defines a hook for a resource.\",\n           \"properties\": {\n            \"exec\": {\n             \"description\": \"Exec defines an exec hook.\",\n             \"properties\": {\n              \"command\": {\n               \"description\": \"Command is the command and arguments to execute.\",\n               \"items\": {\n                \"type\": \"string\"\n               },\n               \"minItems\": 1,\n               \"type\": \"array\"\n              },\n              \"container\": {\n               \"description\": \"Container is the container in the pod where the command should be executed. If not specified, the pod's first container is used.\",\n               \"type\": \"string\"\n              },\n              \"onError\": {\n               \"description\": \"OnError specifies how Velero should behave if it encounters an error executing this hook.\",\n               \"enum\": [\n                \"Continue\",\n                \"Fail\"\n               ],\n               \"type\": \"string\"\n              },\n              \"timeout\": {\n               \"description\": \"Timeout defines the maximum amount of time Velero should wait for the hook to complete before considering the execution a failure.\",\n               \"type\": \"string\"\n              }\n             },\n             \"required\": [\n              \"command\"\n             ],\n             \"type\": \"object\"\n            }\n           },\n           \"required\": [\n            \"exec\"\n           ],\n           \"type\": \"object\"\n          },\n          \"type\": \"array\"\n         },\n         \"pre\": {\n          \"description\": \"PreHooks is a list of BackupResourceHooks to execute prior to storing the item in the backup. These are executed before any \\\"additional items\\\" from item actions are processed.\",\n          \"items\": {\n           \"description\": \"BackupResourceHook defines a hook for a resource.\",\n           \"properties\": {\n            \"exec\": {\n             \"description\": \"Exec defines an exec hook.\",\n             \"properties\": {\n              \"command\": {\n               \"description\": \"Command is the command and arguments to execute.\",\n               \"items\": {\n                \"type\": \"string\"\n               },\n               \"minItems\": 1,\n               \"type\": \"array\"\n              },\n              \"container\": {\n               \"description\": \"Container is the container in the pod where the command should be executed. If not specified, the pod's first container is used.\",\n               \"type\": \"string\"\n              },\n              \"onError\": {\n               \"description\": \"OnError specifies how Velero should behave if it encounters an error executing this hook.\",\n               \"enum\": [\n                \"Continue\",\n                \"Fail\"\n               ],\n               \"type\": \"string\"\n              },\n              \"timeout\": {\n               \"description\": \"Timeout defines the maximum amount of time Velero should wait for the hook to complete before considering the execution a failure.\",\n               \"type\": \"string\"\n              }\n             },\n             \"required\": [\n              \"command\"\n             ],\n             \"type\": \"object\"\n            }\n           },\n           \"required\": [\n            \"exec\"\n           ],\n           \"type\": \"object\"\n          },\n          \"type\": \"array\"\n         }\n        },\n        \"required\": [\n         \"name\"\n        ],\n        \"type\": \"object\"\n       },\n       \"nullable\": true,\n       \"type\": \"array\"\n      }\n     },\n     \"type\": \"object\"\n    },\n    \"includeClusterResources\": {\n     \"description\": \"IncludeClusterResources specifies whether cluster-scoped resources should be included for consideration in the backup.\",\n     \"nullable\": true,\n     \"type\": \"boolean\"\n    },\n    \"includedNamespaces\": {\n     \"description\": \"IncludedNamespaces is a slice of namespace names to include objects from. If empty, all namespaces are included.\",\n     \"items\": {\n      \"type\": \"string\"\n     },\n     \"nullable\": true,\n     \"type\": \"array\"\n    },\n    \"includedResources\": {\n     \"description\": \"IncludedResources is a slice of resource names to include in the backup. If empty, all resources are included.\",\n     \"items\": {\n      \"type\": \"string\"\n     },\n     \"nullable\": true,\n     \"type\": \"array\"\n    },\n    \"labelSelector\": {\n     \"description\": \"LabelSelector is a metav1.LabelSelector to filter with when adding individual objects to the backup. If empty or nil, all objects are included. Optional.\",\n     \"nullable\": true,\n     \"properties\": {\n      \"matchExpressions\": {\n       \"description\": \"matchExpressions is a list of label selector requirements. The requirements are ANDed.\",\n       \"items\": {\n        \"description\": \"A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.\",\n        \"properties\": {\n         \"key\": {\n          \"description\": \"key is the label key that the selector applies to.\",\n          \"type\": \"string\"\n         },\n         \"operator\": {\n          \"description\": \"operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.\",\n          \"type\": \"string\"\n         },\n         \"values\": {\n          \"description\": \"values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.\",\n          \"items\": {\n           \"type\": \"string\"\n          },\n          \"type\": \"array\"\n         }\n        },\n        \"required\": [\n         \"key\",\n         \"operator\"\n        ],\n        \"type\": \"object\"\n       },\n       \"type\": \"array\"\n      },\n      \"matchLabels\": {\n       \"additionalProperties\": {\n        \"type\": \"string\"\n       },\n       \"description\": \"matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \\\"key\\\", the operator is \\\"In\\\", and the values array contains only \\\"value\\\". The requirements are ANDed.\",\n       \"type\": \"object\"\n      }\n     },\n     \"type\": \"object\"\n    },\n    \"orderedResources\": {\n     \"additionalProperties\": {\n      \"type\": \"string\"\n     },\n     \"description\": \"OrderedResources specifies the backup order of resources of specific Kind. The map key is the Kind name and value is a list of resource names separeted by commas. Each resource name has format \\\"namespace/resourcename\\\".  For cluster resources, simply use \\\"resourcename\\\".\",\n     \"nullable\": true,\n     \"type\": \"object\"\n    },\n    \"snapshotVolumes\": {\n     \"description\": \"SnapshotVolumes specifies whether to take cloud snapshots of any PV's referenced in the set of objects included in the Backup.\",\n     \"nullable\": true,\n     \"type\": \"boolean\"\n    },\n    \"storageLocation\": {\n     \"description\": \"StorageLocation is a string containing the name of a BackupStorageLocation where the backup should be stored.\",\n     \"type\": \"string\"\n    },\n    \"ttl\": {\n     \"description\": \"TTL is a time.Duration-parseable string describing how long the Backup should be retained for.\",\n     \"type\": \"string\"\n    },\n    \"volumeSnapshotLocations\": {\n     \"description\": \"VolumeSnapshotLocations is a list containing names of VolumeSnapshotLocations associated with this backup.\",\n     \"items\": {\n      \"type\": \"string\"\n     },\n     \"type\": \"array\"\n    }\n   },\n   \"type\": \"object\"\n  }\n },\n \"required\": [\n  \"schedule\",\n  \"template\"\n ],\n \"title\": \"Schedule\",\n \"type\": \"object\"\n}"}