{"kind":"EdgeDevice","apiVersion":"v1alpha1","display-name":"Edge Device","format":"JSON","metadata":{},"model":{"name":"arhatdev","version":"0.1.14","display-name":"","category":"","sub-category":""},"schema":"{\n \"description\": \"EdgeDeviceSpec defines the desired state of EdgeDevice\",\n \"properties\": {\n  \"connectivity\": {\n   \"description\": \"Connectivity config how we serve the according agent\",\n   \"properties\": {\n    \"amqp\": {\n     \"description\": \"AMQP to tell aranya how to create rabbitMQ client\",\n     \"properties\": {\n      \"broker\": {\n       \"description\": \"Broker address in the form of host:port\",\n       \"type\": \"string\"\n      },\n      \"exchange\": {\n       \"description\": \"Exchange in AMQP, if exists, MUST be a topic exchange\",\n       \"type\": \"string\"\n      },\n      \"tlsSecretRef\": {\n       \"description\": \"Secret for tls cert-key pair\",\n       \"properties\": {\n        \"name\": {\n         \"description\": \"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?\",\n         \"type\": \"string\"\n        }\n       },\n       \"type\": \"object\",\n       \"x-kubernetes-map-type\": \"atomic\"\n      },\n      \"topicNamespace\": {\n       \"description\": \"TopicNamespace to share with arhat agent\",\n       \"type\": \"string\"\n      },\n      \"userPassRef\": {\n       \"description\": \"LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace.\",\n       \"properties\": {\n        \"name\": {\n         \"description\": \"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?\",\n         \"type\": \"string\"\n        }\n       },\n       \"type\": \"object\",\n       \"x-kubernetes-map-type\": \"atomic\"\n      },\n      \"version\": {\n       \"description\": \"Version of AMQP\",\n       \"type\": \"string\"\n      },\n      \"vhost\": {\n       \"type\": \"string\"\n      }\n     },\n     \"type\": \"object\"\n    },\n    \"azureIoTHub\": {\n     \"description\": \"AzureIoTHub for azure iot hub connection\",\n     \"properties\": {\n      \"deviceID\": {\n       \"description\": \"DeviceID of the iot hub device\",\n       \"type\": \"string\"\n      },\n      \"eventHub\": {\n       \"properties\": {\n        \"connectionStringSecretKeyRef\": {\n         \"properties\": {\n          \"key\": {\n           \"description\": \"Key of the data\",\n           \"type\": \"string\"\n          },\n          \"name\": {\n           \"description\": \"Name of the referent\",\n           \"type\": \"string\"\n          }\n         },\n         \"type\": \"object\"\n        },\n        \"consumerGroup\": {\n         \"type\": \"string\"\n        }\n       },\n       \"type\": \"object\"\n      },\n      \"iotHub\": {\n       \"properties\": {\n        \"connectionStringSecretKeyRef\": {\n         \"properties\": {\n          \"key\": {\n           \"description\": \"Key of the data\",\n           \"type\": \"string\"\n          },\n          \"name\": {\n           \"description\": \"Name of the referent\",\n           \"type\": \"string\"\n          }\n         },\n         \"type\": \"object\"\n        },\n        \"deviceStatusPollInterval\": {\n         \"description\": \"poll interval to get device twin info, default to 1 minute\",\n         \"type\": \"string\"\n        }\n       },\n       \"type\": \"object\"\n      }\n     },\n     \"type\": \"object\"\n    },\n    \"backoff\": {\n     \"properties\": {\n      \"factor\": {\n       \"format\": \"double\",\n       \"type\": \"number\"\n      },\n      \"initialDelay\": {\n       \"type\": \"string\"\n      },\n      \"maxDelay\": {\n       \"type\": \"string\"\n      }\n     },\n     \"type\": \"object\"\n    },\n    \"gcpIoTCore\": {\n     \"description\": \"GCPIoTCore for google cloud pub/sub connection\",\n     \"properties\": {\n      \"cloudIoT\": {\n       \"description\": \"CloudIoT service used to send commands to device\",\n       \"properties\": {\n        \"credentialsSecretKeyRef\": {\n         \"properties\": {\n          \"key\": {\n           \"description\": \"Key of the data\",\n           \"type\": \"string\"\n          },\n          \"name\": {\n           \"description\": \"Name of the referent\",\n           \"type\": \"string\"\n          }\n         },\n         \"type\": \"object\"\n        },\n        \"deviceID\": {\n         \"type\": \"string\"\n        },\n        \"deviceStatusPollInterval\": {\n         \"description\": \"poll interval to get device info, default to 1 minute\",\n         \"type\": \"string\"\n        },\n        \"region\": {\n         \"type\": \"string\"\n        },\n        \"registryID\": {\n         \"type\": \"string\"\n        }\n       },\n       \"type\": \"object\"\n      },\n      \"projectID\": {\n       \"type\": \"string\"\n      },\n      \"pubSub\": {\n       \"description\": \"PubSub service used to receive messages sent from device\",\n       \"properties\": {\n        \"credentialsSecretKeyRef\": {\n         \"properties\": {\n          \"key\": {\n           \"description\": \"Key of the data\",\n           \"type\": \"string\"\n          },\n          \"name\": {\n           \"description\": \"Name of the referent\",\n           \"type\": \"string\"\n          }\n         },\n         \"type\": \"object\"\n        },\n        \"stateTopicID\": {\n         \"type\": \"string\"\n        },\n        \"telemetryTopicID\": {\n         \"type\": \"string\"\n        }\n       },\n       \"type\": \"object\"\n      }\n     },\n     \"type\": \"object\"\n    },\n    \"grpc\": {\n     \"description\": \"GRPC to tell aranya how to create grpc server\",\n     \"properties\": {\n      \"tlsSecretRef\": {\n       \"description\": \"Secret for server side tls cert-key pair\",\n       \"properties\": {\n        \"name\": {\n         \"description\": \"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?\",\n         \"type\": \"string\"\n        }\n       },\n       \"type\": \"object\",\n       \"x-kubernetes-map-type\": \"atomic\"\n      }\n     },\n     \"type\": \"object\"\n    },\n    \"method\": {\n     \"description\": \"Method of how to establish communication channel between server and devices\",\n     \"type\": \"string\"\n    },\n    \"mqtt\": {\n     \"description\": \"MQTT to tell aranya how to create mqtt client\",\n     \"properties\": {\n      \"broker\": {\n       \"description\": \"Broker address in the form of host:port\",\n       \"type\": \"string\"\n      },\n      \"clientID\": {\n       \"type\": \"string\"\n      },\n      \"keepaliveInterval\": {\n       \"type\": \"string\"\n      },\n      \"maxPayloadSize\": {\n       \"description\": \"MaxPayloadSize to limit the size of published packets\",\n       \"minimum\": 32,\n       \"type\": \"integer\"\n      },\n      \"tlsSecretRef\": {\n       \"description\": \"Secret for tls cert-key pair\",\n       \"properties\": {\n        \"name\": {\n         \"description\": \"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?\",\n         \"type\": \"string\"\n        }\n       },\n       \"type\": \"object\",\n       \"x-kubernetes-map-type\": \"atomic\"\n      },\n      \"topicNamespace\": {\n       \"description\": \"TopicNamespace to share with arhat agent\",\n       \"type\": \"string\"\n      },\n      \"transport\": {\n       \"description\": \"Transport protocol underlying the MQTT protocol, one of [tcp, websocket]\",\n       \"enum\": [\n        \"tcp\",\n        \"websocket\"\n       ],\n       \"type\": \"string\"\n      },\n      \"userPassRef\": {\n       \"description\": \"LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace.\",\n       \"properties\": {\n        \"name\": {\n         \"description\": \"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?\",\n         \"type\": \"string\"\n        }\n       },\n       \"type\": \"object\",\n       \"x-kubernetes-map-type\": \"atomic\"\n      },\n      \"version\": {\n       \"description\": \"Version of MQTT protocol can be one of [3.1.1]\",\n       \"enum\": [\n        \"3.1.1\"\n       ],\n       \"type\": \"string\"\n      }\n     },\n     \"type\": \"object\"\n    },\n    \"timers\": {\n     \"properties\": {\n      \"unarySessionTimeout\": {\n       \"type\": \"string\"\n      }\n     },\n     \"type\": \"object\"\n    }\n   },\n   \"type\": \"object\"\n  },\n  \"metricsReporters\": {\n   \"description\": \"MetricsReporters are virtual peripherals used to push metrics collected from peripherals\",\n   \"items\": {\n    \"properties\": {\n     \"connector\": {\n      \"description\": \"Connector instructs how to connect this peripheral\",\n      \"properties\": {\n       \"method\": {\n        \"description\": \"Method interacting with this peripheral\",\n        \"type\": \"string\"\n       },\n       \"params\": {\n        \"additionalProperties\": {\n         \"type\": \"string\"\n        },\n        \"description\": \"Params for this connectivity (can be overridden by the )\",\n        \"type\": \"object\"\n       },\n       \"target\": {\n        \"description\": \"Target value for transport, its value depends on the transport method you chose\",\n        \"type\": \"string\"\n       },\n       \"tls\": {\n        \"description\": \"TLS config for network related connectivity\",\n        \"properties\": {\n         \"certSecretRef\": {\n          \"description\": \"CertSecretRef for pem encoded x.509 certificate key pair\",\n          \"properties\": {\n           \"name\": {\n            \"description\": \"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?\",\n            \"type\": \"string\"\n           }\n          },\n          \"type\": \"object\",\n          \"x-kubernetes-map-type\": \"atomic\"\n         },\n         \"cipherSuites\": {\n          \"items\": {\n           \"type\": \"string\"\n          },\n          \"type\": \"array\"\n         },\n         \"insecureSkipVerify\": {\n          \"type\": \"boolean\"\n         },\n         \"maxVersion\": {\n          \"type\": \"string\"\n         },\n         \"minVersion\": {\n          \"type\": \"string\"\n         },\n         \"nextProtos\": {\n          \"items\": {\n           \"type\": \"string\"\n          },\n          \"type\": \"array\"\n         },\n         \"preSharedKey\": {\n          \"properties\": {\n           \"identityHint\": {\n            \"description\": \"the client hint provided to server, base64 encoded value\",\n            \"type\": \"string\"\n           },\n           \"serverHintMapping\": {\n            \"description\": \"map server hint(s) to pre shared key(s) column separated base64 encoded key value pairs\",\n            \"items\": {\n             \"type\": \"string\"\n            },\n            \"type\": \"array\"\n           }\n          },\n          \"type\": \"object\"\n         },\n         \"serverName\": {\n          \"type\": \"string\"\n         }\n        },\n        \"type\": \"object\"\n       }\n      },\n      \"type\": \"object\"\n     },\n     \"name\": {\n      \"description\": \"Name of the peripheral, and this name will become available in virtual pod as a container name NOTE: name `host` is reserved by the aranya\",\n      \"pattern\": \"[a-z0-9]([-a-z0-9]*[a-z0-9])?\",\n      \"type\": \"string\"\n     }\n    },\n    \"required\": [\n     \"name\"\n    ],\n    \"type\": \"object\"\n   },\n   \"type\": \"array\"\n  },\n  \"network\": {\n   \"description\": \"Network settings for network mesh in same namespace\",\n   \"properties\": {\n    \"enabled\": {\n     \"type\": \"boolean\"\n    },\n    \"mesh\": {\n     \"properties\": {\n      \"extraAllowedCIDRs\": {\n       \"description\": \"ExtraAllowedCIDRs in addition to pod CIDR(s)\",\n       \"items\": {\n        \"type\": \"string\"\n       },\n       \"type\": \"array\"\n      },\n      \"firewallMark\": {\n       \"type\": \"integer\"\n      },\n      \"interfaceName\": {\n       \"type\": \"string\"\n      },\n      \"ipv4Addr\": {\n       \"description\": \"IPv4 address of the mesh interface endpoint (usually the vpn endpoint address)\",\n       \"type\": \"string\"\n      },\n      \"ipv6Addr\": {\n       \"description\": \"IPv6 address of the mesh interface endpoint (usually the vpn endpoint address)\",\n       \"type\": \"string\"\n      },\n      \"mtu\": {\n       \"minimum\": 0,\n       \"type\": \"integer\"\n      },\n      \"port\": {\n       \"description\": \"ListenPort for receiving traffic from other mesh members\",\n       \"minimum\": 0,\n       \"type\": \"integer\"\n      },\n      \"routingTable\": {\n       \"type\": \"integer\"\n      }\n     },\n     \"type\": \"object\"\n    }\n   },\n   \"type\": \"object\"\n  },\n  \"node\": {\n   \"description\": \"Node related settings for kubernetes node resource\",\n   \"properties\": {\n    \"annotations\": {\n     \"additionalProperties\": {\n      \"type\": \"string\"\n     },\n     \"description\": \"Annotations expected to be applied to node object\",\n     \"type\": \"object\"\n    },\n    \"cert\": {\n     \"description\": \"Cert for this node\",\n     \"properties\": {\n      \"country\": {\n       \"type\": \"string\"\n      },\n      \"locality\": {\n       \"type\": \"string\"\n      },\n      \"org\": {\n       \"type\": \"string\"\n      },\n      \"orgUnit\": {\n       \"type\": \"string\"\n      },\n      \"state\": {\n       \"type\": \"string\"\n      }\n     },\n     \"type\": \"object\"\n    },\n    \"fieldHooks\": {\n     \"description\": \"FieldHooks to update node object attributes according to current field value\",\n     \"items\": {\n      \"description\": \"FiledHook to update a node filed (currently only annotations/labels supported) if aranya was able to perform a successful query on some field(s) (all node object fields)\",\n      \"properties\": {\n       \"query\": {\n        \"description\": \"Query in jq syntax, result is always an array of unstructured objects ([]interface{})\",\n        \"type\": \"string\"\n       },\n       \"targetFieldPath\": {\n        \"description\": \"TargetFieldPath\",\n        \"type\": \"string\"\n       },\n       \"value\": {\n        \"description\": \"Value the plain text value for target field\",\n        \"type\": \"string\"\n       },\n       \"valueExpression\": {\n        \"description\": \"ValueExpression jq expression applied to values found by Query, only the first result will be used as the final value\",\n        \"type\": \"string\"\n       }\n      },\n      \"required\": [\n       \"query\",\n       \"targetFieldPath\"\n      ],\n      \"type\": \"object\"\n     },\n     \"type\": \"array\"\n    },\n    \"labels\": {\n     \"additionalProperties\": {\n      \"type\": \"string\"\n     },\n     \"description\": \"Labels expected to be applied to node object\",\n     \"type\": \"object\"\n    },\n    \"metrics\": {\n     \"properties\": {\n      \"collect\": {\n       \"description\": \"Collect is the list of prometheus node-exporter collectors to use\",\n       \"items\": {\n        \"type\": \"string\"\n       },\n       \"type\": \"array\"\n      },\n      \"enabled\": {\n       \"description\": \"Enabled flag to enable metrics collection\",\n       \"type\": \"boolean\"\n      },\n      \"extraArgs\": {\n       \"description\": \"ExtraArgs to provide additional cli args for node_exporter\",\n       \"items\": {\n        \"type\": \"string\"\n       },\n       \"type\": \"array\"\n      }\n     },\n     \"type\": \"object\"\n    },\n    \"rbac\": {\n     \"description\": \"RBAC setup for this node, an override of aranya configuration\",\n     \"properties\": {\n      \"clusterRolePermissions\": {\n       \"additionalProperties\": {\n        \"properties\": {\n         \"nodeVerbs\": {\n          \"description\": \"NodeVerbs allowed verbs for this node\",\n          \"items\": {\n           \"type\": \"string\"\n          },\n          \"type\": \"array\"\n         },\n         \"statusVerbs\": {\n          \"description\": \"StatusVerbs allowed verbs for this nodeStatus\",\n          \"items\": {\n           \"type\": \"string\"\n          },\n          \"type\": \"array\"\n         }\n        },\n        \"type\": \"object\"\n       },\n       \"description\": \"ClusterRolePermissions set cluster roles and their verbs for this node\",\n       \"type\": \"object\"\n      }\n     },\n     \"type\": \"object\"\n    },\n    \"taints\": {\n     \"description\": \"Taints add extra taints in addition to default taint arhat.dev/namespace=\\u003cEdgeDevice Namespace\\u003e:NoSchedule\",\n     \"items\": {\n      \"description\": \"The node this Taint is attached to has the \\\"effect\\\" on any pod that does not tolerate the Taint.\",\n      \"properties\": {\n       \"effect\": {\n        \"description\": \"Required. The effect of the taint on pods that do not tolerate the taint. Valid effects are NoSchedule, PreferNoSchedule and NoExecute.\",\n        \"type\": \"string\"\n       },\n       \"key\": {\n        \"description\": \"Required. The taint key to be applied to a node.\",\n        \"type\": \"string\"\n       },\n       \"timeAdded\": {\n        \"description\": \"TimeAdded represents the time at which the taint was added. It is only written for NoExecute taints.\",\n        \"format\": \"date-time\",\n        \"type\": \"string\"\n       },\n       \"value\": {\n        \"description\": \"The taint value corresponding to the taint key.\",\n        \"type\": \"string\"\n       }\n      },\n      \"required\": [\n       \"effect\",\n       \"key\"\n      ],\n      \"type\": \"object\"\n     },\n     \"type\": \"array\"\n    },\n    \"timers\": {\n     \"properties\": {\n      \"forceSyncInterval\": {\n       \"type\": \"string\"\n      }\n     },\n     \"type\": \"object\"\n    }\n   },\n   \"type\": \"object\"\n  },\n  \"peripherals\": {\n   \"description\": \"Peripherals managed by this EdgeDevice\",\n   \"items\": {\n    \"description\": \"PeripheralSpec is the peripheral to be managed by this edge device (e.g. sensors, switches)\",\n    \"properties\": {\n     \"connector\": {\n      \"description\": \"Connector instructs how to connect this peripheral\",\n      \"properties\": {\n       \"method\": {\n        \"description\": \"Method interacting with this peripheral\",\n        \"type\": \"string\"\n       },\n       \"params\": {\n        \"additionalProperties\": {\n         \"type\": \"string\"\n        },\n        \"description\": \"Params for this connectivity (can be overridden by the )\",\n        \"type\": \"object\"\n       },\n       \"target\": {\n        \"description\": \"Target value for transport, its value depends on the transport method you chose\",\n        \"type\": \"string\"\n       },\n       \"tls\": {\n        \"description\": \"TLS config for network related connectivity\",\n        \"properties\": {\n         \"certSecretRef\": {\n          \"description\": \"CertSecretRef for pem encoded x.509 certificate key pair\",\n          \"properties\": {\n           \"name\": {\n            \"description\": \"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?\",\n            \"type\": \"string\"\n           }\n          },\n          \"type\": \"object\",\n          \"x-kubernetes-map-type\": \"atomic\"\n         },\n         \"cipherSuites\": {\n          \"items\": {\n           \"type\": \"string\"\n          },\n          \"type\": \"array\"\n         },\n         \"insecureSkipVerify\": {\n          \"type\": \"boolean\"\n         },\n         \"maxVersion\": {\n          \"type\": \"string\"\n         },\n         \"minVersion\": {\n          \"type\": \"string\"\n         },\n         \"nextProtos\": {\n          \"items\": {\n           \"type\": \"string\"\n          },\n          \"type\": \"array\"\n         },\n         \"preSharedKey\": {\n          \"properties\": {\n           \"identityHint\": {\n            \"description\": \"the client hint provided to server, base64 encoded value\",\n            \"type\": \"string\"\n           },\n           \"serverHintMapping\": {\n            \"description\": \"map server hint(s) to pre shared key(s) column separated base64 encoded key value pairs\",\n            \"items\": {\n             \"type\": \"string\"\n            },\n            \"type\": \"array\"\n           }\n          },\n          \"type\": \"object\"\n         },\n         \"serverName\": {\n          \"type\": \"string\"\n         }\n        },\n        \"type\": \"object\"\n       }\n      },\n      \"type\": \"object\"\n     },\n     \"metrics\": {\n      \"description\": \"Metrics collection/report from this peripheral\",\n      \"items\": {\n       \"description\": \"PeripheralMetricSpec to upload peripheral metrics for prometheus\",\n       \"properties\": {\n        \"name\": {\n         \"description\": \"Name of the metrics for prometheus\",\n         \"pattern\": \"[a-z0-9]([_a-z0-9]*[a-z0-9])?\",\n         \"type\": \"string\"\n        },\n        \"params\": {\n         \"additionalProperties\": {\n          \"type\": \"string\"\n         },\n         \"description\": \"Params to override ..connectivity.params to retrieve this metric\",\n         \"type\": \"object\"\n        },\n        \"reportMethod\": {\n         \"description\": \"ReportMethod for this metrics\",\n         \"enum\": [\n          \"WithNodeMetrics\",\n          \"WithReporter\",\n          \"\"\n         ],\n         \"type\": \"string\"\n        },\n        \"reporterName\": {\n         \"description\": \"ReporterName the name reference to a metrics reporter used when ReportMethod is standalone\",\n         \"type\": \"string\"\n        },\n        \"reporterParams\": {\n         \"additionalProperties\": {\n          \"type\": \"string\"\n         },\n         \"description\": \"ReporterParams\",\n         \"type\": \"object\"\n        },\n        \"valueType\": {\n         \"description\": \"ValueType of this metric\",\n         \"enum\": [\n          \"counter\",\n          \"\",\n          \"gauge\",\n          \"unknown\"\n         ],\n         \"type\": \"string\"\n        }\n       },\n       \"required\": [\n        \"name\"\n       ],\n       \"type\": \"object\"\n      },\n      \"type\": \"array\",\n      \"x-kubernetes-list-map-keys\": [\n       \"name\"\n      ],\n      \"x-kubernetes-list-type\": \"map\"\n     },\n     \"name\": {\n      \"description\": \"Name of the peripheral, and this name will become available in virtual pod as a container name NOTE: name `host` is reserved by the aranya\",\n      \"pattern\": \"[a-z0-9]([-a-z0-9]*[a-z0-9])?\",\n      \"type\": \"string\"\n     },\n     \"operations\": {\n      \"description\": \"Operations supported by this peripheral\",\n      \"items\": {\n       \"description\": \"PeripheralOperationSpec defines operation we can perform on the peripheral\",\n       \"properties\": {\n        \"name\": {\n         \"description\": \"Name of the operation (e.g. \\\"on\\\", \\\"off\\\" ...)\",\n         \"type\": \"string\"\n        },\n        \"params\": {\n         \"additionalProperties\": {\n          \"type\": \"string\"\n         },\n         \"description\": \"Params to override ..connector.params\",\n         \"type\": \"object\"\n        },\n        \"pseudoCommand\": {\n         \"description\": \"PseudoCommand used to trigger this operation, so you can trigger this operation by executing `kubectl exec \\u003cvirtual pod\\u003e -c \\u003cperipheral name\\u003e -- \\u003cpseudo command\\u003e` Defaults to operation name\",\n         \"type\": \"string\"\n        }\n       },\n       \"required\": [\n        \"name\"\n       ],\n       \"type\": \"object\"\n      },\n      \"type\": \"array\",\n      \"x-kubernetes-list-map-keys\": [\n       \"name\"\n      ],\n      \"x-kubernetes-list-type\": \"map\"\n     }\n    },\n    \"required\": [\n     \"name\"\n    ],\n    \"type\": \"object\"\n   },\n   \"type\": \"array\"\n  },\n  \"pod\": {\n   \"description\": \"Pod related settings for kubernetes pod creation in edge device\",\n   \"properties\": {\n    \"allocatable\": {\n     \"minimum\": 0,\n     \"type\": \"integer\"\n    },\n    \"dns\": {\n     \"description\": \"DNS config for edge device\",\n     \"properties\": {\n      \"options\": {\n       \"description\": \"A list of DNS resolver options.\",\n       \"items\": {\n        \"type\": \"string\"\n       },\n       \"type\": \"array\"\n      },\n      \"searches\": {\n       \"description\": \"A list of DNS search domains for host-name lookup.\",\n       \"items\": {\n        \"type\": \"string\"\n       },\n       \"type\": \"array\"\n      },\n      \"servers\": {\n       \"description\": \"A list of DNS name server IP addresses.\",\n       \"items\": {\n        \"type\": \"string\"\n       },\n       \"type\": \"array\"\n      }\n     },\n     \"type\": \"object\"\n    },\n    \"ipv4CIDR\": {\n     \"description\": \"IPv4CIDR pod ipv4 range in this edge device\",\n     \"type\": \"string\"\n    },\n    \"ipv6CIDR\": {\n     \"type\": \"string\"\n    },\n    \"metrics\": {\n     \"properties\": {\n      \"collect\": {\n       \"description\": \"Collect is the list of prometheus node-exporter collectors to use\",\n       \"items\": {\n        \"type\": \"string\"\n       },\n       \"type\": \"array\"\n      },\n      \"enabled\": {\n       \"description\": \"Enabled flag to enable metrics collection\",\n       \"type\": \"boolean\"\n      },\n      \"extraArgs\": {\n       \"description\": \"ExtraArgs to provide additional cli args for node_exporter\",\n       \"items\": {\n        \"type\": \"string\"\n       },\n       \"type\": \"array\"\n      }\n     },\n     \"type\": \"object\"\n    },\n    \"rbac\": {\n     \"properties\": {\n      \"rolePermissions\": {\n       \"additionalProperties\": {\n        \"properties\": {\n         \"allowAttach\": {\n          \"description\": \"AllowAttach to allow \\\"create\\\" for resource pods/attach\",\n          \"type\": \"boolean\"\n         },\n         \"allowExec\": {\n          \"description\": \"AllowExec to allow \\\"create\\\" for resource pods/exec\",\n          \"type\": \"boolean\"\n         },\n         \"allowLog\": {\n          \"description\": \"AllowLog to allow \\\"create\\\" for resource pods/log\",\n          \"type\": \"boolean\"\n         },\n         \"allowPortForward\": {\n          \"description\": \"AllowPortForward to allow \\\"create\\\" for resource pods/port-forward\",\n          \"type\": \"boolean\"\n         },\n         \"podVerbs\": {\n          \"description\": \"PodVerbs allowed verbs for resource pods\",\n          \"items\": {\n           \"type\": \"string\"\n          },\n          \"type\": \"array\"\n         },\n         \"statusVerbs\": {\n          \"description\": \"PodStatus allowed verbs for resource pods/status\",\n          \"items\": {\n           \"type\": \"string\"\n          },\n          \"type\": \"array\"\n         }\n        },\n        \"type\": \"object\"\n       },\n       \"description\": \"RolePermissions for the pods admitted by this edge device\",\n       \"type\": \"object\"\n      },\n      \"virtualpodRolePermissions\": {\n       \"additionalProperties\": {\n        \"properties\": {\n         \"allowAttach\": {\n          \"description\": \"AllowAttach to allow \\\"create\\\" for resource pods/attach\",\n          \"type\": \"boolean\"\n         },\n         \"allowExec\": {\n          \"description\": \"AllowExec to allow \\\"create\\\" for resource pods/exec\",\n          \"type\": \"boolean\"\n         },\n         \"allowLog\": {\n          \"description\": \"AllowLog to allow \\\"create\\\" for resource pods/log\",\n          \"type\": \"boolean\"\n         },\n         \"allowPortForward\": {\n          \"description\": \"AllowPortForward to allow \\\"create\\\" for resource pods/port-forward\",\n          \"type\": \"boolean\"\n         },\n         \"podVerbs\": {\n          \"description\": \"PodVerbs allowed verbs for resource pods\",\n          \"items\": {\n           \"type\": \"string\"\n          },\n          \"type\": \"array\"\n         },\n         \"statusVerbs\": {\n          \"description\": \"PodStatus allowed verbs for resource pods/status\",\n          \"items\": {\n           \"type\": \"string\"\n          },\n          \"type\": \"array\"\n         }\n        },\n        \"type\": \"object\"\n       },\n       \"description\": \"VirtualPodRolePermissions for host related operations (will restrict resource name to edge device's name)\",\n       \"type\": \"object\"\n      }\n     },\n     \"type\": \"object\"\n    },\n    \"timers\": {\n     \"properties\": {\n      \"forceSyncInterval\": {\n       \"type\": \"string\"\n      }\n     },\n     \"type\": \"object\"\n    }\n   },\n   \"type\": \"object\"\n  },\n  \"storage\": {\n   \"description\": \"Storage settings for remote CSI integration\",\n   \"properties\": {\n    \"enabled\": {\n     \"type\": \"boolean\"\n    }\n   },\n   \"type\": \"object\"\n  }\n },\n \"title\": \"Edge Device\",\n \"type\": \"object\"\n}"}