{"kind":"Composition","apiVersion":"v1alpha1","display-name":"Composition","format":"JSON","metadata":{},"model":{"name":"crossplane","version":"0.13.0-rc.98.g1eb0776","display-name":"","category":"","sub-category":""},"schema":"{\n \"description\": \"CompositionSpec specifies the desired state of the definition.\",\n \"properties\": {\n  \"compositeTypeRef\": {\n   \"description\": \"CompositeTypeRef specifies the type of composite resource that this composition is compatible with.\",\n   \"properties\": {\n    \"apiVersion\": {\n     \"description\": \"APIVersion of the type.\",\n     \"type\": \"string\"\n    },\n    \"kind\": {\n     \"description\": \"Kind of the type.\",\n     \"type\": \"string\"\n    }\n   },\n   \"required\": [\n    \"apiVersion\",\n    \"kind\"\n   ],\n   \"type\": \"object\"\n  },\n  \"resources\": {\n   \"description\": \"Resources is the list of resource templates that will be used when a composite resource referring to this composition is created.\",\n   \"items\": {\n    \"description\": \"ComposedTemplate is used to provide information about how the composed resource should be processed.\",\n    \"properties\": {\n     \"base\": {\n      \"description\": \"Base is the target resource that the patches will be applied on.\",\n      \"type\": \"object\"\n     },\n     \"connectionDetails\": {\n      \"description\": \"ConnectionDetails lists the propagation secret keys from this target resource to the composition instance connection secret.\",\n      \"items\": {\n       \"description\": \"ConnectionDetail includes the information about the propagation of the connection information from one secret to another.\",\n       \"properties\": {\n        \"fromConnectionSecretKey\": {\n         \"description\": \"FromConnectionSecretKey is the key that will be used to fetch the value from the given target resource.\",\n         \"type\": \"string\"\n        },\n        \"name\": {\n         \"description\": \"Name of the connection secret key that will be propagated to the connection secret of the composition instance. Leave empty if you'd like to use the same key name.\",\n         \"type\": \"string\"\n        },\n        \"value\": {\n         \"description\": \"Value that will be propagated to the connection secret of the composition instance. Typically you should use FromConnectionSecretKey instead, but an explicit value may be set to inject a fixed, non-sensitive connection secret values, for example a well-known port. Supercedes FromConnectionSecretKey when set.\",\n         \"type\": \"string\"\n        }\n       },\n       \"type\": \"object\"\n      },\n      \"type\": \"array\"\n     },\n     \"patches\": {\n      \"description\": \"Patches will be applied as overlay to the base resource.\",\n      \"items\": {\n       \"description\": \"Patch is used to patch the field on the base resource at ToFieldPath after piping the value that is at FromFieldPath of the target resource through transformers.\",\n       \"properties\": {\n        \"fromFieldPath\": {\n         \"description\": \"FromFieldPath is the path of the field on the upstream resource whose value to be used as input.\",\n         \"type\": \"string\"\n        },\n        \"toFieldPath\": {\n         \"description\": \"ToFieldPath is the path of the field on the base resource whose value will be changed with the result of transforms. Leave empty if you'd like to propagate to the same path on the target resource.\",\n         \"type\": \"string\"\n        },\n        \"transforms\": {\n         \"description\": \"Transforms are the list of functions that are used as a FIFO pipe for the input to be transformed.\",\n         \"items\": {\n          \"description\": \"Transform is a unit of process whose input is transformed into an output with the supplied configuration.\",\n          \"properties\": {\n           \"map\": {\n            \"additionalProperties\": {\n             \"type\": \"string\"\n            },\n            \"description\": \"Map uses the input as a key in the given map and returns the value.\",\n            \"type\": \"object\"\n           },\n           \"math\": {\n            \"description\": \"Math is used to transform the input via mathematical operations such as multiplication.\",\n            \"properties\": {\n             \"multiply\": {\n              \"description\": \"Multiply the value.\",\n              \"format\": \"int64\",\n              \"type\": \"integer\"\n             }\n            },\n            \"type\": \"object\"\n           },\n           \"string\": {\n            \"description\": \"String is used to transform the input into a string or a different kind of string. Note that the input does not necessarily need to be a string.\",\n            \"properties\": {\n             \"fmt\": {\n              \"description\": \"Format the input using a Go format string. See https://golang.org/pkg/fmt/ for details.\",\n              \"type\": \"string\"\n             }\n            },\n            \"required\": [\n             \"fmt\"\n            ],\n            \"type\": \"object\"\n           },\n           \"type\": {\n            \"description\": \"Type of the transform to be run.\",\n            \"type\": \"string\"\n           }\n          },\n          \"required\": [\n           \"type\"\n          ],\n          \"type\": \"object\"\n         },\n         \"type\": \"array\"\n        }\n       },\n       \"required\": [\n        \"fromFieldPath\"\n       ],\n       \"type\": \"object\"\n      },\n      \"type\": \"array\"\n     },\n     \"readinessChecks\": {\n      \"description\": \"ReadinessChecks allows users to define custom readiness checks. All checks have to return true in order for resource to be considered ready. The default readiness check is to have the \\\"Ready\\\" condition to be \\\"True\\\".\",\n      \"items\": {\n       \"description\": \"ReadinessCheck is used to indicate how to tell whether a resource is ready for consumption\",\n       \"properties\": {\n        \"fieldPath\": {\n         \"description\": \"FieldPath shows the path of the field whose value will be used.\",\n         \"type\": \"string\"\n        },\n        \"matchInteger\": {\n         \"description\": \"MatchInt is the value you'd like to match if you're using \\\"MatchInt\\\" type.\",\n         \"format\": \"int64\",\n         \"type\": \"integer\"\n        },\n        \"matchString\": {\n         \"description\": \"MatchString is the value you'd like to match if you're using \\\"MatchString\\\" type.\",\n         \"type\": \"string\"\n        },\n        \"type\": {\n         \"description\": \"Type indicates the type of probe you'd like to use.\",\n         \"enum\": [\n          \"MatchString\",\n          \"MatchInteger\",\n          \"NonEmpty\"\n         ],\n         \"type\": \"string\"\n        }\n       },\n       \"required\": [\n        \"fieldPath\",\n        \"type\"\n       ],\n       \"type\": \"object\"\n      },\n      \"type\": \"array\"\n     }\n    },\n    \"required\": [\n     \"base\"\n    ],\n    \"type\": \"object\"\n   },\n   \"type\": \"array\"\n  },\n  \"writeConnectionSecretsToNamespace\": {\n   \"description\": \"WriteConnectionSecretsToNamespace specifies the namespace in which the connection secrets of composite resource dynamically provisioned using this composition will be created.\",\n   \"type\": \"string\"\n  }\n },\n \"required\": [\n  \"compositeTypeRef\",\n  \"resources\"\n ],\n \"title\": \"Composition\",\n \"type\": \"object\"\n}"}