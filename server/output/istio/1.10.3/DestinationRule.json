{"kind":"DestinationRule","apiVersion":"v1alpha3","display-name":"Destination Rule","format":"JSON","metadata":{},"model":{"name":"istio","version":"1.10.3","display-name":"","category":"","sub-category":""},"schema":"{\n \"description\": \"Configuration affecting load balancing, outlier detection, etc. See more details at: https://istio.io/docs/reference/config/networking/destination-rule.html\",\n \"properties\": {\n  \"exportTo\": {\n   \"description\": \"A list of namespaces to which this destination rule is exported.\",\n   \"items\": {\n    \"format\": \"string\",\n    \"type\": \"string\"\n   },\n   \"type\": \"array\"\n  },\n  \"host\": {\n   \"description\": \"The name of a service from the service registry.\",\n   \"format\": \"string\",\n   \"type\": \"string\"\n  },\n  \"subsets\": {\n   \"items\": {\n    \"properties\": {\n     \"labels\": {\n      \"additionalProperties\": {\n       \"format\": \"string\",\n       \"type\": \"string\"\n      },\n      \"type\": \"object\"\n     },\n     \"name\": {\n      \"description\": \"Name of the subset.\",\n      \"format\": \"string\",\n      \"type\": \"string\"\n     },\n     \"trafficPolicy\": {\n      \"description\": \"Traffic policies that apply to this subset.\",\n      \"properties\": {\n       \"connectionPool\": {\n        \"properties\": {\n         \"http\": {\n          \"description\": \"HTTP connection pool settings.\",\n          \"properties\": {\n           \"h2UpgradePolicy\": {\n            \"description\": \"Specify if http1.1 connection should be upgraded to http2 for the associated destination.\",\n            \"enum\": [\n             \"DEFAULT\",\n             \"DO_NOT_UPGRADE\",\n             \"UPGRADE\"\n            ],\n            \"type\": \"string\"\n           },\n           \"http1MaxPendingRequests\": {\n            \"description\": \"Maximum number of pending HTTP requests to a destination.\",\n            \"format\": \"int32\",\n            \"type\": \"integer\"\n           },\n           \"http2MaxRequests\": {\n            \"description\": \"Maximum number of requests to a backend.\",\n            \"format\": \"int32\",\n            \"type\": \"integer\"\n           },\n           \"idleTimeout\": {\n            \"description\": \"The idle timeout for upstream connection pool connections.\",\n            \"type\": \"string\"\n           },\n           \"maxRequestsPerConnection\": {\n            \"description\": \"Maximum number of requests per connection to a backend.\",\n            \"format\": \"int32\",\n            \"type\": \"integer\"\n           },\n           \"maxRetries\": {\n            \"format\": \"int32\",\n            \"type\": \"integer\"\n           },\n           \"useClientProtocol\": {\n            \"description\": \"If set to true, client protocol will be preserved while initiating connection to backend.\",\n            \"type\": \"boolean\"\n           }\n          },\n          \"type\": \"object\"\n         },\n         \"tcp\": {\n          \"description\": \"Settings common to both HTTP and TCP upstream connections.\",\n          \"properties\": {\n           \"connectTimeout\": {\n            \"description\": \"TCP connection timeout.\",\n            \"type\": \"string\"\n           },\n           \"maxConnections\": {\n            \"description\": \"Maximum number of HTTP1 /TCP connections to a destination host.\",\n            \"format\": \"int32\",\n            \"type\": \"integer\"\n           },\n           \"tcpKeepalive\": {\n            \"description\": \"If set then set SO_KEEPALIVE on the socket to enable TCP Keepalives.\",\n            \"properties\": {\n             \"interval\": {\n              \"description\": \"The time duration between keep-alive probes.\",\n              \"type\": \"string\"\n             },\n             \"probes\": {\n              \"type\": \"integer\"\n             },\n             \"time\": {\n              \"type\": \"string\"\n             }\n            },\n            \"type\": \"object\"\n           }\n          },\n          \"type\": \"object\"\n         }\n        },\n        \"type\": \"object\"\n       },\n       \"loadBalancer\": {\n        \"description\": \"Settings controlling the load balancer algorithms.\",\n        \"oneOf\": [\n         {\n          \"not\": {\n           \"anyOf\": [\n            {\n             \"required\": [\n              \"simple\"\n             ]\n            },\n            {\n             \"properties\": {\n              \"consistentHash\": {\n               \"oneOf\": [\n                {\n                 \"not\": {\n                  \"anyOf\": [\n                   {\n                    \"required\": [\n                     \"httpHeaderName\"\n                    ]\n                   },\n                   {\n                    \"required\": [\n                     \"httpCookie\"\n                    ]\n                   },\n                   {\n                    \"required\": [\n                     \"useSourceIp\"\n                    ]\n                   },\n                   {\n                    \"required\": [\n                     \"httpQueryParameterName\"\n                    ]\n                   }\n                  ]\n                 }\n                },\n                {\n                 \"required\": [\n                  \"httpHeaderName\"\n                 ]\n                },\n                {\n                 \"required\": [\n                  \"httpCookie\"\n                 ]\n                },\n                {\n                 \"required\": [\n                  \"useSourceIp\"\n                 ]\n                },\n                {\n                 \"required\": [\n                  \"httpQueryParameterName\"\n                 ]\n                }\n               ]\n              }\n             },\n             \"required\": [\n              \"consistentHash\"\n             ]\n            }\n           ]\n          }\n         },\n         {\n          \"required\": [\n           \"simple\"\n          ]\n         },\n         {\n          \"properties\": {\n           \"consistentHash\": {\n            \"oneOf\": [\n             {\n              \"not\": {\n               \"anyOf\": [\n                {\n                 \"required\": [\n                  \"httpHeaderName\"\n                 ]\n                },\n                {\n                 \"required\": [\n                  \"httpCookie\"\n                 ]\n                },\n                {\n                 \"required\": [\n                  \"useSourceIp\"\n                 ]\n                },\n                {\n                 \"required\": [\n                  \"httpQueryParameterName\"\n                 ]\n                }\n               ]\n              }\n             },\n             {\n              \"required\": [\n               \"httpHeaderName\"\n              ]\n             },\n             {\n              \"required\": [\n               \"httpCookie\"\n              ]\n             },\n             {\n              \"required\": [\n               \"useSourceIp\"\n              ]\n             },\n             {\n              \"required\": [\n               \"httpQueryParameterName\"\n              ]\n             }\n            ]\n           }\n          },\n          \"required\": [\n           \"consistentHash\"\n          ]\n         }\n        ],\n        \"properties\": {\n         \"consistentHash\": {\n          \"properties\": {\n           \"httpCookie\": {\n            \"description\": \"Hash based on HTTP cookie.\",\n            \"properties\": {\n             \"name\": {\n              \"description\": \"Name of the cookie.\",\n              \"format\": \"string\",\n              \"type\": \"string\"\n             },\n             \"path\": {\n              \"description\": \"Path to set for the cookie.\",\n              \"format\": \"string\",\n              \"type\": \"string\"\n             },\n             \"ttl\": {\n              \"description\": \"Lifetime of the cookie.\",\n              \"type\": \"string\"\n             }\n            },\n            \"type\": \"object\"\n           },\n           \"httpHeaderName\": {\n            \"description\": \"Hash based on a specific HTTP header.\",\n            \"format\": \"string\",\n            \"type\": \"string\"\n           },\n           \"httpQueryParameterName\": {\n            \"description\": \"Hash based on a specific HTTP query parameter.\",\n            \"format\": \"string\",\n            \"type\": \"string\"\n           },\n           \"minimumRingSize\": {\n            \"type\": \"integer\"\n           },\n           \"useSourceIp\": {\n            \"description\": \"Hash based on the source IP address.\",\n            \"type\": \"boolean\"\n           }\n          },\n          \"type\": \"object\"\n         },\n         \"localityLbSetting\": {\n          \"properties\": {\n           \"distribute\": {\n            \"description\": \"Optional: only one of distribute or failover can be set.\",\n            \"items\": {\n             \"properties\": {\n              \"from\": {\n               \"description\": \"Originating locality, '/' separated, e.g.\",\n               \"format\": \"string\",\n               \"type\": \"string\"\n              },\n              \"to\": {\n               \"additionalProperties\": {\n                \"type\": \"integer\"\n               },\n               \"description\": \"Map of upstream localities to traffic distribution weights.\",\n               \"type\": \"object\"\n              }\n             },\n             \"type\": \"object\"\n            },\n            \"type\": \"array\"\n           },\n           \"enabled\": {\n            \"description\": \"enable locality load balancing, this is DestinationRule-level and will override mesh wide settings in entirety.\",\n            \"nullable\": true,\n            \"type\": \"boolean\"\n           },\n           \"failover\": {\n            \"description\": \"Optional: only failover or distribute can be set.\",\n            \"items\": {\n             \"properties\": {\n              \"from\": {\n               \"description\": \"Originating region.\",\n               \"format\": \"string\",\n               \"type\": \"string\"\n              },\n              \"to\": {\n               \"format\": \"string\",\n               \"type\": \"string\"\n              }\n             },\n             \"type\": \"object\"\n            },\n            \"type\": \"array\"\n           }\n          },\n          \"type\": \"object\"\n         },\n         \"simple\": {\n          \"enum\": [\n           \"ROUND_ROBIN\",\n           \"LEAST_CONN\",\n           \"RANDOM\",\n           \"PASSTHROUGH\"\n          ],\n          \"type\": \"string\"\n         }\n        },\n        \"type\": \"object\"\n       },\n       \"outlierDetection\": {\n        \"properties\": {\n         \"baseEjectionTime\": {\n          \"description\": \"Minimum ejection duration.\",\n          \"type\": \"string\"\n         },\n         \"consecutive5xxErrors\": {\n          \"description\": \"Number of 5xx errors before a host is ejected from the connection pool.\",\n          \"nullable\": true,\n          \"type\": \"integer\"\n         },\n         \"consecutiveErrors\": {\n          \"format\": \"int32\",\n          \"type\": \"integer\"\n         },\n         \"consecutiveGatewayErrors\": {\n          \"description\": \"Number of gateway errors before a host is ejected from the connection pool.\",\n          \"nullable\": true,\n          \"type\": \"integer\"\n         },\n         \"interval\": {\n          \"description\": \"Time interval between ejection sweep analysis.\",\n          \"type\": \"string\"\n         },\n         \"maxEjectionPercent\": {\n          \"format\": \"int32\",\n          \"type\": \"integer\"\n         },\n         \"minHealthPercent\": {\n          \"format\": \"int32\",\n          \"type\": \"integer\"\n         }\n        },\n        \"type\": \"object\"\n       },\n       \"portLevelSettings\": {\n        \"description\": \"Traffic policies specific to individual ports.\",\n        \"items\": {\n         \"properties\": {\n          \"connectionPool\": {\n           \"properties\": {\n            \"http\": {\n             \"description\": \"HTTP connection pool settings.\",\n             \"properties\": {\n              \"h2UpgradePolicy\": {\n               \"description\": \"Specify if http1.1 connection should be upgraded to http2 for the associated destination.\",\n               \"enum\": [\n                \"DEFAULT\",\n                \"DO_NOT_UPGRADE\",\n                \"UPGRADE\"\n               ],\n               \"type\": \"string\"\n              },\n              \"http1MaxPendingRequests\": {\n               \"description\": \"Maximum number of pending HTTP requests to a destination.\",\n               \"format\": \"int32\",\n               \"type\": \"integer\"\n              },\n              \"http2MaxRequests\": {\n               \"description\": \"Maximum number of requests to a backend.\",\n               \"format\": \"int32\",\n               \"type\": \"integer\"\n              },\n              \"idleTimeout\": {\n               \"description\": \"The idle timeout for upstream connection pool connections.\",\n               \"type\": \"string\"\n              },\n              \"maxRequestsPerConnection\": {\n               \"description\": \"Maximum number of requests per connection to a backend.\",\n               \"format\": \"int32\",\n               \"type\": \"integer\"\n              },\n              \"maxRetries\": {\n               \"format\": \"int32\",\n               \"type\": \"integer\"\n              },\n              \"useClientProtocol\": {\n               \"description\": \"If set to true, client protocol will be preserved while initiating connection to backend.\",\n               \"type\": \"boolean\"\n              }\n             },\n             \"type\": \"object\"\n            },\n            \"tcp\": {\n             \"description\": \"Settings common to both HTTP and TCP upstream connections.\",\n             \"properties\": {\n              \"connectTimeout\": {\n               \"description\": \"TCP connection timeout.\",\n               \"type\": \"string\"\n              },\n              \"maxConnections\": {\n               \"description\": \"Maximum number of HTTP1 /TCP connections to a destination host.\",\n               \"format\": \"int32\",\n               \"type\": \"integer\"\n              },\n              \"tcpKeepalive\": {\n               \"description\": \"If set then set SO_KEEPALIVE on the socket to enable TCP Keepalives.\",\n               \"properties\": {\n                \"interval\": {\n                 \"description\": \"The time duration between keep-alive probes.\",\n                 \"type\": \"string\"\n                },\n                \"probes\": {\n                 \"type\": \"integer\"\n                },\n                \"time\": {\n                 \"type\": \"string\"\n                }\n               },\n               \"type\": \"object\"\n              }\n             },\n             \"type\": \"object\"\n            }\n           },\n           \"type\": \"object\"\n          },\n          \"loadBalancer\": {\n           \"description\": \"Settings controlling the load balancer algorithms.\",\n           \"oneOf\": [\n            {\n             \"not\": {\n              \"anyOf\": [\n               {\n                \"required\": [\n                 \"simple\"\n                ]\n               },\n               {\n                \"properties\": {\n                 \"consistentHash\": {\n                  \"oneOf\": [\n                   {\n                    \"not\": {\n                     \"anyOf\": [\n                      {\n                       \"required\": [\n                        \"httpHeaderName\"\n                       ]\n                      },\n                      {\n                       \"required\": [\n                        \"httpCookie\"\n                       ]\n                      },\n                      {\n                       \"required\": [\n                        \"useSourceIp\"\n                       ]\n                      },\n                      {\n                       \"required\": [\n                        \"httpQueryParameterName\"\n                       ]\n                      }\n                     ]\n                    }\n                   },\n                   {\n                    \"required\": [\n                     \"httpHeaderName\"\n                    ]\n                   },\n                   {\n                    \"required\": [\n                     \"httpCookie\"\n                    ]\n                   },\n                   {\n                    \"required\": [\n                     \"useSourceIp\"\n                    ]\n                   },\n                   {\n                    \"required\": [\n                     \"httpQueryParameterName\"\n                    ]\n                   }\n                  ]\n                 }\n                },\n                \"required\": [\n                 \"consistentHash\"\n                ]\n               }\n              ]\n             }\n            },\n            {\n             \"required\": [\n              \"simple\"\n             ]\n            },\n            {\n             \"properties\": {\n              \"consistentHash\": {\n               \"oneOf\": [\n                {\n                 \"not\": {\n                  \"anyOf\": [\n                   {\n                    \"required\": [\n                     \"httpHeaderName\"\n                    ]\n                   },\n                   {\n                    \"required\": [\n                     \"httpCookie\"\n                    ]\n                   },\n                   {\n                    \"required\": [\n                     \"useSourceIp\"\n                    ]\n                   },\n                   {\n                    \"required\": [\n                     \"httpQueryParameterName\"\n                    ]\n                   }\n                  ]\n                 }\n                },\n                {\n                 \"required\": [\n                  \"httpHeaderName\"\n                 ]\n                },\n                {\n                 \"required\": [\n                  \"httpCookie\"\n                 ]\n                },\n                {\n                 \"required\": [\n                  \"useSourceIp\"\n                 ]\n                },\n                {\n                 \"required\": [\n                  \"httpQueryParameterName\"\n                 ]\n                }\n               ]\n              }\n             },\n             \"required\": [\n              \"consistentHash\"\n             ]\n            }\n           ],\n           \"properties\": {\n            \"consistentHash\": {\n             \"properties\": {\n              \"httpCookie\": {\n               \"description\": \"Hash based on HTTP cookie.\",\n               \"properties\": {\n                \"name\": {\n                 \"description\": \"Name of the cookie.\",\n                 \"format\": \"string\",\n                 \"type\": \"string\"\n                },\n                \"path\": {\n                 \"description\": \"Path to set for the cookie.\",\n                 \"format\": \"string\",\n                 \"type\": \"string\"\n                },\n                \"ttl\": {\n                 \"description\": \"Lifetime of the cookie.\",\n                 \"type\": \"string\"\n                }\n               },\n               \"type\": \"object\"\n              },\n              \"httpHeaderName\": {\n               \"description\": \"Hash based on a specific HTTP header.\",\n               \"format\": \"string\",\n               \"type\": \"string\"\n              },\n              \"httpQueryParameterName\": {\n               \"description\": \"Hash based on a specific HTTP query parameter.\",\n               \"format\": \"string\",\n               \"type\": \"string\"\n              },\n              \"minimumRingSize\": {\n               \"type\": \"integer\"\n              },\n              \"useSourceIp\": {\n               \"description\": \"Hash based on the source IP address.\",\n               \"type\": \"boolean\"\n              }\n             },\n             \"type\": \"object\"\n            },\n            \"localityLbSetting\": {\n             \"properties\": {\n              \"distribute\": {\n               \"description\": \"Optional: only one of distribute or failover can be set.\",\n               \"items\": {\n                \"properties\": {\n                 \"from\": {\n                  \"description\": \"Originating locality, '/' separated, e.g.\",\n                  \"format\": \"string\",\n                  \"type\": \"string\"\n                 },\n                 \"to\": {\n                  \"additionalProperties\": {\n                   \"type\": \"integer\"\n                  },\n                  \"description\": \"Map of upstream localities to traffic distribution weights.\",\n                  \"type\": \"object\"\n                 }\n                },\n                \"type\": \"object\"\n               },\n               \"type\": \"array\"\n              },\n              \"enabled\": {\n               \"description\": \"enable locality load balancing, this is DestinationRule-level and will override mesh wide settings in entirety.\",\n               \"nullable\": true,\n               \"type\": \"boolean\"\n              },\n              \"failover\": {\n               \"description\": \"Optional: only failover or distribute can be set.\",\n               \"items\": {\n                \"properties\": {\n                 \"from\": {\n                  \"description\": \"Originating region.\",\n                  \"format\": \"string\",\n                  \"type\": \"string\"\n                 },\n                 \"to\": {\n                  \"format\": \"string\",\n                  \"type\": \"string\"\n                 }\n                },\n                \"type\": \"object\"\n               },\n               \"type\": \"array\"\n              }\n             },\n             \"type\": \"object\"\n            },\n            \"simple\": {\n             \"enum\": [\n              \"ROUND_ROBIN\",\n              \"LEAST_CONN\",\n              \"RANDOM\",\n              \"PASSTHROUGH\"\n             ],\n             \"type\": \"string\"\n            }\n           },\n           \"type\": \"object\"\n          },\n          \"outlierDetection\": {\n           \"properties\": {\n            \"baseEjectionTime\": {\n             \"description\": \"Minimum ejection duration.\",\n             \"type\": \"string\"\n            },\n            \"consecutive5xxErrors\": {\n             \"description\": \"Number of 5xx errors before a host is ejected from the connection pool.\",\n             \"nullable\": true,\n             \"type\": \"integer\"\n            },\n            \"consecutiveErrors\": {\n             \"format\": \"int32\",\n             \"type\": \"integer\"\n            },\n            \"consecutiveGatewayErrors\": {\n             \"description\": \"Number of gateway errors before a host is ejected from the connection pool.\",\n             \"nullable\": true,\n             \"type\": \"integer\"\n            },\n            \"interval\": {\n             \"description\": \"Time interval between ejection sweep analysis.\",\n             \"type\": \"string\"\n            },\n            \"maxEjectionPercent\": {\n             \"format\": \"int32\",\n             \"type\": \"integer\"\n            },\n            \"minHealthPercent\": {\n             \"format\": \"int32\",\n             \"type\": \"integer\"\n            }\n           },\n           \"type\": \"object\"\n          },\n          \"port\": {\n           \"properties\": {\n            \"number\": {\n             \"type\": \"integer\"\n            }\n           },\n           \"type\": \"object\"\n          },\n          \"tls\": {\n           \"description\": \"TLS related settings for connections to the upstream service.\",\n           \"properties\": {\n            \"caCertificates\": {\n             \"format\": \"string\",\n             \"type\": \"string\"\n            },\n            \"clientCertificate\": {\n             \"description\": \"REQUIRED if mode is `MUTUAL`.\",\n             \"format\": \"string\",\n             \"type\": \"string\"\n            },\n            \"credentialName\": {\n             \"format\": \"string\",\n             \"type\": \"string\"\n            },\n            \"mode\": {\n             \"enum\": [\n              \"DISABLE\",\n              \"SIMPLE\",\n              \"MUTUAL\",\n              \"ISTIO_MUTUAL\"\n             ],\n             \"type\": \"string\"\n            },\n            \"privateKey\": {\n             \"description\": \"REQUIRED if mode is `MUTUAL`.\",\n             \"format\": \"string\",\n             \"type\": \"string\"\n            },\n            \"sni\": {\n             \"description\": \"SNI string to present to the server during TLS handshake.\",\n             \"format\": \"string\",\n             \"type\": \"string\"\n            },\n            \"subjectAltNames\": {\n             \"items\": {\n              \"format\": \"string\",\n              \"type\": \"string\"\n             },\n             \"type\": \"array\"\n            }\n           },\n           \"type\": \"object\"\n          }\n         },\n         \"type\": \"object\"\n        },\n        \"type\": \"array\"\n       },\n       \"tls\": {\n        \"description\": \"TLS related settings for connections to the upstream service.\",\n        \"properties\": {\n         \"caCertificates\": {\n          \"format\": \"string\",\n          \"type\": \"string\"\n         },\n         \"clientCertificate\": {\n          \"description\": \"REQUIRED if mode is `MUTUAL`.\",\n          \"format\": \"string\",\n          \"type\": \"string\"\n         },\n         \"credentialName\": {\n          \"format\": \"string\",\n          \"type\": \"string\"\n         },\n         \"mode\": {\n          \"enum\": [\n           \"DISABLE\",\n           \"SIMPLE\",\n           \"MUTUAL\",\n           \"ISTIO_MUTUAL\"\n          ],\n          \"type\": \"string\"\n         },\n         \"privateKey\": {\n          \"description\": \"REQUIRED if mode is `MUTUAL`.\",\n          \"format\": \"string\",\n          \"type\": \"string\"\n         },\n         \"sni\": {\n          \"description\": \"SNI string to present to the server during TLS handshake.\",\n          \"format\": \"string\",\n          \"type\": \"string\"\n         },\n         \"subjectAltNames\": {\n          \"items\": {\n           \"format\": \"string\",\n           \"type\": \"string\"\n          },\n          \"type\": \"array\"\n         }\n        },\n        \"type\": \"object\"\n       }\n      },\n      \"type\": \"object\"\n     }\n    },\n    \"type\": \"object\"\n   },\n   \"type\": \"array\"\n  },\n  \"trafficPolicy\": {\n   \"properties\": {\n    \"connectionPool\": {\n     \"properties\": {\n      \"http\": {\n       \"description\": \"HTTP connection pool settings.\",\n       \"properties\": {\n        \"h2UpgradePolicy\": {\n         \"description\": \"Specify if http1.1 connection should be upgraded to http2 for the associated destination.\",\n         \"enum\": [\n          \"DEFAULT\",\n          \"DO_NOT_UPGRADE\",\n          \"UPGRADE\"\n         ],\n         \"type\": \"string\"\n        },\n        \"http1MaxPendingRequests\": {\n         \"description\": \"Maximum number of pending HTTP requests to a destination.\",\n         \"format\": \"int32\",\n         \"type\": \"integer\"\n        },\n        \"http2MaxRequests\": {\n         \"description\": \"Maximum number of requests to a backend.\",\n         \"format\": \"int32\",\n         \"type\": \"integer\"\n        },\n        \"idleTimeout\": {\n         \"description\": \"The idle timeout for upstream connection pool connections.\",\n         \"type\": \"string\"\n        },\n        \"maxRequestsPerConnection\": {\n         \"description\": \"Maximum number of requests per connection to a backend.\",\n         \"format\": \"int32\",\n         \"type\": \"integer\"\n        },\n        \"maxRetries\": {\n         \"format\": \"int32\",\n         \"type\": \"integer\"\n        },\n        \"useClientProtocol\": {\n         \"description\": \"If set to true, client protocol will be preserved while initiating connection to backend.\",\n         \"type\": \"boolean\"\n        }\n       },\n       \"type\": \"object\"\n      },\n      \"tcp\": {\n       \"description\": \"Settings common to both HTTP and TCP upstream connections.\",\n       \"properties\": {\n        \"connectTimeout\": {\n         \"description\": \"TCP connection timeout.\",\n         \"type\": \"string\"\n        },\n        \"maxConnections\": {\n         \"description\": \"Maximum number of HTTP1 /TCP connections to a destination host.\",\n         \"format\": \"int32\",\n         \"type\": \"integer\"\n        },\n        \"tcpKeepalive\": {\n         \"description\": \"If set then set SO_KEEPALIVE on the socket to enable TCP Keepalives.\",\n         \"properties\": {\n          \"interval\": {\n           \"description\": \"The time duration between keep-alive probes.\",\n           \"type\": \"string\"\n          },\n          \"probes\": {\n           \"type\": \"integer\"\n          },\n          \"time\": {\n           \"type\": \"string\"\n          }\n         },\n         \"type\": \"object\"\n        }\n       },\n       \"type\": \"object\"\n      }\n     },\n     \"type\": \"object\"\n    },\n    \"loadBalancer\": {\n     \"description\": \"Settings controlling the load balancer algorithms.\",\n     \"oneOf\": [\n      {\n       \"not\": {\n        \"anyOf\": [\n         {\n          \"required\": [\n           \"simple\"\n          ]\n         },\n         {\n          \"properties\": {\n           \"consistentHash\": {\n            \"oneOf\": [\n             {\n              \"not\": {\n               \"anyOf\": [\n                {\n                 \"required\": [\n                  \"httpHeaderName\"\n                 ]\n                },\n                {\n                 \"required\": [\n                  \"httpCookie\"\n                 ]\n                },\n                {\n                 \"required\": [\n                  \"useSourceIp\"\n                 ]\n                },\n                {\n                 \"required\": [\n                  \"httpQueryParameterName\"\n                 ]\n                }\n               ]\n              }\n             },\n             {\n              \"required\": [\n               \"httpHeaderName\"\n              ]\n             },\n             {\n              \"required\": [\n               \"httpCookie\"\n              ]\n             },\n             {\n              \"required\": [\n               \"useSourceIp\"\n              ]\n             },\n             {\n              \"required\": [\n               \"httpQueryParameterName\"\n              ]\n             }\n            ]\n           }\n          },\n          \"required\": [\n           \"consistentHash\"\n          ]\n         }\n        ]\n       }\n      },\n      {\n       \"required\": [\n        \"simple\"\n       ]\n      },\n      {\n       \"properties\": {\n        \"consistentHash\": {\n         \"oneOf\": [\n          {\n           \"not\": {\n            \"anyOf\": [\n             {\n              \"required\": [\n               \"httpHeaderName\"\n              ]\n             },\n             {\n              \"required\": [\n               \"httpCookie\"\n              ]\n             },\n             {\n              \"required\": [\n               \"useSourceIp\"\n              ]\n             },\n             {\n              \"required\": [\n               \"httpQueryParameterName\"\n              ]\n             }\n            ]\n           }\n          },\n          {\n           \"required\": [\n            \"httpHeaderName\"\n           ]\n          },\n          {\n           \"required\": [\n            \"httpCookie\"\n           ]\n          },\n          {\n           \"required\": [\n            \"useSourceIp\"\n           ]\n          },\n          {\n           \"required\": [\n            \"httpQueryParameterName\"\n           ]\n          }\n         ]\n        }\n       },\n       \"required\": [\n        \"consistentHash\"\n       ]\n      }\n     ],\n     \"properties\": {\n      \"consistentHash\": {\n       \"properties\": {\n        \"httpCookie\": {\n         \"description\": \"Hash based on HTTP cookie.\",\n         \"properties\": {\n          \"name\": {\n           \"description\": \"Name of the cookie.\",\n           \"format\": \"string\",\n           \"type\": \"string\"\n          },\n          \"path\": {\n           \"description\": \"Path to set for the cookie.\",\n           \"format\": \"string\",\n           \"type\": \"string\"\n          },\n          \"ttl\": {\n           \"description\": \"Lifetime of the cookie.\",\n           \"type\": \"string\"\n          }\n         },\n         \"type\": \"object\"\n        },\n        \"httpHeaderName\": {\n         \"description\": \"Hash based on a specific HTTP header.\",\n         \"format\": \"string\",\n         \"type\": \"string\"\n        },\n        \"httpQueryParameterName\": {\n         \"description\": \"Hash based on a specific HTTP query parameter.\",\n         \"format\": \"string\",\n         \"type\": \"string\"\n        },\n        \"minimumRingSize\": {\n         \"type\": \"integer\"\n        },\n        \"useSourceIp\": {\n         \"description\": \"Hash based on the source IP address.\",\n         \"type\": \"boolean\"\n        }\n       },\n       \"type\": \"object\"\n      },\n      \"localityLbSetting\": {\n       \"properties\": {\n        \"distribute\": {\n         \"description\": \"Optional: only one of distribute or failover can be set.\",\n         \"items\": {\n          \"properties\": {\n           \"from\": {\n            \"description\": \"Originating locality, '/' separated, e.g.\",\n            \"format\": \"string\",\n            \"type\": \"string\"\n           },\n           \"to\": {\n            \"additionalProperties\": {\n             \"type\": \"integer\"\n            },\n            \"description\": \"Map of upstream localities to traffic distribution weights.\",\n            \"type\": \"object\"\n           }\n          },\n          \"type\": \"object\"\n         },\n         \"type\": \"array\"\n        },\n        \"enabled\": {\n         \"description\": \"enable locality load balancing, this is DestinationRule-level and will override mesh wide settings in entirety.\",\n         \"nullable\": true,\n         \"type\": \"boolean\"\n        },\n        \"failover\": {\n         \"description\": \"Optional: only failover or distribute can be set.\",\n         \"items\": {\n          \"properties\": {\n           \"from\": {\n            \"description\": \"Originating region.\",\n            \"format\": \"string\",\n            \"type\": \"string\"\n           },\n           \"to\": {\n            \"format\": \"string\",\n            \"type\": \"string\"\n           }\n          },\n          \"type\": \"object\"\n         },\n         \"type\": \"array\"\n        }\n       },\n       \"type\": \"object\"\n      },\n      \"simple\": {\n       \"enum\": [\n        \"ROUND_ROBIN\",\n        \"LEAST_CONN\",\n        \"RANDOM\",\n        \"PASSTHROUGH\"\n       ],\n       \"type\": \"string\"\n      }\n     },\n     \"type\": \"object\"\n    },\n    \"outlierDetection\": {\n     \"properties\": {\n      \"baseEjectionTime\": {\n       \"description\": \"Minimum ejection duration.\",\n       \"type\": \"string\"\n      },\n      \"consecutive5xxErrors\": {\n       \"description\": \"Number of 5xx errors before a host is ejected from the connection pool.\",\n       \"nullable\": true,\n       \"type\": \"integer\"\n      },\n      \"consecutiveErrors\": {\n       \"format\": \"int32\",\n       \"type\": \"integer\"\n      },\n      \"consecutiveGatewayErrors\": {\n       \"description\": \"Number of gateway errors before a host is ejected from the connection pool.\",\n       \"nullable\": true,\n       \"type\": \"integer\"\n      },\n      \"interval\": {\n       \"description\": \"Time interval between ejection sweep analysis.\",\n       \"type\": \"string\"\n      },\n      \"maxEjectionPercent\": {\n       \"format\": \"int32\",\n       \"type\": \"integer\"\n      },\n      \"minHealthPercent\": {\n       \"format\": \"int32\",\n       \"type\": \"integer\"\n      }\n     },\n     \"type\": \"object\"\n    },\n    \"portLevelSettings\": {\n     \"description\": \"Traffic policies specific to individual ports.\",\n     \"items\": {\n      \"properties\": {\n       \"connectionPool\": {\n        \"properties\": {\n         \"http\": {\n          \"description\": \"HTTP connection pool settings.\",\n          \"properties\": {\n           \"h2UpgradePolicy\": {\n            \"description\": \"Specify if http1.1 connection should be upgraded to http2 for the associated destination.\",\n            \"enum\": [\n             \"DEFAULT\",\n             \"DO_NOT_UPGRADE\",\n             \"UPGRADE\"\n            ],\n            \"type\": \"string\"\n           },\n           \"http1MaxPendingRequests\": {\n            \"description\": \"Maximum number of pending HTTP requests to a destination.\",\n            \"format\": \"int32\",\n            \"type\": \"integer\"\n           },\n           \"http2MaxRequests\": {\n            \"description\": \"Maximum number of requests to a backend.\",\n            \"format\": \"int32\",\n            \"type\": \"integer\"\n           },\n           \"idleTimeout\": {\n            \"description\": \"The idle timeout for upstream connection pool connections.\",\n            \"type\": \"string\"\n           },\n           \"maxRequestsPerConnection\": {\n            \"description\": \"Maximum number of requests per connection to a backend.\",\n            \"format\": \"int32\",\n            \"type\": \"integer\"\n           },\n           \"maxRetries\": {\n            \"format\": \"int32\",\n            \"type\": \"integer\"\n           },\n           \"useClientProtocol\": {\n            \"description\": \"If set to true, client protocol will be preserved while initiating connection to backend.\",\n            \"type\": \"boolean\"\n           }\n          },\n          \"type\": \"object\"\n         },\n         \"tcp\": {\n          \"description\": \"Settings common to both HTTP and TCP upstream connections.\",\n          \"properties\": {\n           \"connectTimeout\": {\n            \"description\": \"TCP connection timeout.\",\n            \"type\": \"string\"\n           },\n           \"maxConnections\": {\n            \"description\": \"Maximum number of HTTP1 /TCP connections to a destination host.\",\n            \"format\": \"int32\",\n            \"type\": \"integer\"\n           },\n           \"tcpKeepalive\": {\n            \"description\": \"If set then set SO_KEEPALIVE on the socket to enable TCP Keepalives.\",\n            \"properties\": {\n             \"interval\": {\n              \"description\": \"The time duration between keep-alive probes.\",\n              \"type\": \"string\"\n             },\n             \"probes\": {\n              \"type\": \"integer\"\n             },\n             \"time\": {\n              \"type\": \"string\"\n             }\n            },\n            \"type\": \"object\"\n           }\n          },\n          \"type\": \"object\"\n         }\n        },\n        \"type\": \"object\"\n       },\n       \"loadBalancer\": {\n        \"description\": \"Settings controlling the load balancer algorithms.\",\n        \"oneOf\": [\n         {\n          \"not\": {\n           \"anyOf\": [\n            {\n             \"required\": [\n              \"simple\"\n             ]\n            },\n            {\n             \"properties\": {\n              \"consistentHash\": {\n               \"oneOf\": [\n                {\n                 \"not\": {\n                  \"anyOf\": [\n                   {\n                    \"required\": [\n                     \"httpHeaderName\"\n                    ]\n                   },\n                   {\n                    \"required\": [\n                     \"httpCookie\"\n                    ]\n                   },\n                   {\n                    \"required\": [\n                     \"useSourceIp\"\n                    ]\n                   },\n                   {\n                    \"required\": [\n                     \"httpQueryParameterName\"\n                    ]\n                   }\n                  ]\n                 }\n                },\n                {\n                 \"required\": [\n                  \"httpHeaderName\"\n                 ]\n                },\n                {\n                 \"required\": [\n                  \"httpCookie\"\n                 ]\n                },\n                {\n                 \"required\": [\n                  \"useSourceIp\"\n                 ]\n                },\n                {\n                 \"required\": [\n                  \"httpQueryParameterName\"\n                 ]\n                }\n               ]\n              }\n             },\n             \"required\": [\n              \"consistentHash\"\n             ]\n            }\n           ]\n          }\n         },\n         {\n          \"required\": [\n           \"simple\"\n          ]\n         },\n         {\n          \"properties\": {\n           \"consistentHash\": {\n            \"oneOf\": [\n             {\n              \"not\": {\n               \"anyOf\": [\n                {\n                 \"required\": [\n                  \"httpHeaderName\"\n                 ]\n                },\n                {\n                 \"required\": [\n                  \"httpCookie\"\n                 ]\n                },\n                {\n                 \"required\": [\n                  \"useSourceIp\"\n                 ]\n                },\n                {\n                 \"required\": [\n                  \"httpQueryParameterName\"\n                 ]\n                }\n               ]\n              }\n             },\n             {\n              \"required\": [\n               \"httpHeaderName\"\n              ]\n             },\n             {\n              \"required\": [\n               \"httpCookie\"\n              ]\n             },\n             {\n              \"required\": [\n               \"useSourceIp\"\n              ]\n             },\n             {\n              \"required\": [\n               \"httpQueryParameterName\"\n              ]\n             }\n            ]\n           }\n          },\n          \"required\": [\n           \"consistentHash\"\n          ]\n         }\n        ],\n        \"properties\": {\n         \"consistentHash\": {\n          \"properties\": {\n           \"httpCookie\": {\n            \"description\": \"Hash based on HTTP cookie.\",\n            \"properties\": {\n             \"name\": {\n              \"description\": \"Name of the cookie.\",\n              \"format\": \"string\",\n              \"type\": \"string\"\n             },\n             \"path\": {\n              \"description\": \"Path to set for the cookie.\",\n              \"format\": \"string\",\n              \"type\": \"string\"\n             },\n             \"ttl\": {\n              \"description\": \"Lifetime of the cookie.\",\n              \"type\": \"string\"\n             }\n            },\n            \"type\": \"object\"\n           },\n           \"httpHeaderName\": {\n            \"description\": \"Hash based on a specific HTTP header.\",\n            \"format\": \"string\",\n            \"type\": \"string\"\n           },\n           \"httpQueryParameterName\": {\n            \"description\": \"Hash based on a specific HTTP query parameter.\",\n            \"format\": \"string\",\n            \"type\": \"string\"\n           },\n           \"minimumRingSize\": {\n            \"type\": \"integer\"\n           },\n           \"useSourceIp\": {\n            \"description\": \"Hash based on the source IP address.\",\n            \"type\": \"boolean\"\n           }\n          },\n          \"type\": \"object\"\n         },\n         \"localityLbSetting\": {\n          \"properties\": {\n           \"distribute\": {\n            \"description\": \"Optional: only one of distribute or failover can be set.\",\n            \"items\": {\n             \"properties\": {\n              \"from\": {\n               \"description\": \"Originating locality, '/' separated, e.g.\",\n               \"format\": \"string\",\n               \"type\": \"string\"\n              },\n              \"to\": {\n               \"additionalProperties\": {\n                \"type\": \"integer\"\n               },\n               \"description\": \"Map of upstream localities to traffic distribution weights.\",\n               \"type\": \"object\"\n              }\n             },\n             \"type\": \"object\"\n            },\n            \"type\": \"array\"\n           },\n           \"enabled\": {\n            \"description\": \"enable locality load balancing, this is DestinationRule-level and will override mesh wide settings in entirety.\",\n            \"nullable\": true,\n            \"type\": \"boolean\"\n           },\n           \"failover\": {\n            \"description\": \"Optional: only failover or distribute can be set.\",\n            \"items\": {\n             \"properties\": {\n              \"from\": {\n               \"description\": \"Originating region.\",\n               \"format\": \"string\",\n               \"type\": \"string\"\n              },\n              \"to\": {\n               \"format\": \"string\",\n               \"type\": \"string\"\n              }\n             },\n             \"type\": \"object\"\n            },\n            \"type\": \"array\"\n           }\n          },\n          \"type\": \"object\"\n         },\n         \"simple\": {\n          \"enum\": [\n           \"ROUND_ROBIN\",\n           \"LEAST_CONN\",\n           \"RANDOM\",\n           \"PASSTHROUGH\"\n          ],\n          \"type\": \"string\"\n         }\n        },\n        \"type\": \"object\"\n       },\n       \"outlierDetection\": {\n        \"properties\": {\n         \"baseEjectionTime\": {\n          \"description\": \"Minimum ejection duration.\",\n          \"type\": \"string\"\n         },\n         \"consecutive5xxErrors\": {\n          \"description\": \"Number of 5xx errors before a host is ejected from the connection pool.\",\n          \"nullable\": true,\n          \"type\": \"integer\"\n         },\n         \"consecutiveErrors\": {\n          \"format\": \"int32\",\n          \"type\": \"integer\"\n         },\n         \"consecutiveGatewayErrors\": {\n          \"description\": \"Number of gateway errors before a host is ejected from the connection pool.\",\n          \"nullable\": true,\n          \"type\": \"integer\"\n         },\n         \"interval\": {\n          \"description\": \"Time interval between ejection sweep analysis.\",\n          \"type\": \"string\"\n         },\n         \"maxEjectionPercent\": {\n          \"format\": \"int32\",\n          \"type\": \"integer\"\n         },\n         \"minHealthPercent\": {\n          \"format\": \"int32\",\n          \"type\": \"integer\"\n         }\n        },\n        \"type\": \"object\"\n       },\n       \"port\": {\n        \"properties\": {\n         \"number\": {\n          \"type\": \"integer\"\n         }\n        },\n        \"type\": \"object\"\n       },\n       \"tls\": {\n        \"description\": \"TLS related settings for connections to the upstream service.\",\n        \"properties\": {\n         \"caCertificates\": {\n          \"format\": \"string\",\n          \"type\": \"string\"\n         },\n         \"clientCertificate\": {\n          \"description\": \"REQUIRED if mode is `MUTUAL`.\",\n          \"format\": \"string\",\n          \"type\": \"string\"\n         },\n         \"credentialName\": {\n          \"format\": \"string\",\n          \"type\": \"string\"\n         },\n         \"mode\": {\n          \"enum\": [\n           \"DISABLE\",\n           \"SIMPLE\",\n           \"MUTUAL\",\n           \"ISTIO_MUTUAL\"\n          ],\n          \"type\": \"string\"\n         },\n         \"privateKey\": {\n          \"description\": \"REQUIRED if mode is `MUTUAL`.\",\n          \"format\": \"string\",\n          \"type\": \"string\"\n         },\n         \"sni\": {\n          \"description\": \"SNI string to present to the server during TLS handshake.\",\n          \"format\": \"string\",\n          \"type\": \"string\"\n         },\n         \"subjectAltNames\": {\n          \"items\": {\n           \"format\": \"string\",\n           \"type\": \"string\"\n          },\n          \"type\": \"array\"\n         }\n        },\n        \"type\": \"object\"\n       }\n      },\n      \"type\": \"object\"\n     },\n     \"type\": \"array\"\n    },\n    \"tls\": {\n     \"description\": \"TLS related settings for connections to the upstream service.\",\n     \"properties\": {\n      \"caCertificates\": {\n       \"format\": \"string\",\n       \"type\": \"string\"\n      },\n      \"clientCertificate\": {\n       \"description\": \"REQUIRED if mode is `MUTUAL`.\",\n       \"format\": \"string\",\n       \"type\": \"string\"\n      },\n      \"credentialName\": {\n       \"format\": \"string\",\n       \"type\": \"string\"\n      },\n      \"mode\": {\n       \"enum\": [\n        \"DISABLE\",\n        \"SIMPLE\",\n        \"MUTUAL\",\n        \"ISTIO_MUTUAL\"\n       ],\n       \"type\": \"string\"\n      },\n      \"privateKey\": {\n       \"description\": \"REQUIRED if mode is `MUTUAL`.\",\n       \"format\": \"string\",\n       \"type\": \"string\"\n      },\n      \"sni\": {\n       \"description\": \"SNI string to present to the server during TLS handshake.\",\n       \"format\": \"string\",\n       \"type\": \"string\"\n      },\n      \"subjectAltNames\": {\n       \"items\": {\n        \"format\": \"string\",\n        \"type\": \"string\"\n       },\n       \"type\": \"array\"\n      }\n     },\n     \"type\": \"object\"\n    }\n   },\n   \"type\": \"object\"\n  }\n },\n \"title\": \"Destination Rule\",\n \"type\": \"object\"\n}"}